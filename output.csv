db_id,question,evidence,SQL
movie_platform,Name movie titles released in year 1945. Sort the listing by the descending order of movie popularity.,released in the year 1945 refers to movie_release_year = 1945;,SELECT movie_title FROM movies WHERE movie_release_year = 1945 ORDER BY movie_popularity DESC LIMIT 1
movie_platform,State the most popular movie? When was it released and who is the director for the movie?,most popular movie refers to MAX(movie_popularity); when it was released refers to movie_release_year; director for the movie refers to director_name;,"SELECT movie_title, movie_release_year, director_name FROM movies ORDER BY movie_popularity DESC LIMIT 1 "
movie_platform,What is the name of the longest movie title? When was it released?,longest movie title refers to MAX(LENGTH(movie_title)); when it was released refers to movie_release_year;,"SELECT movie_title, movie_release_year FROM movies ORDER BY LENGTH(movie_popularity) DESC LIMIT 1"
movie_platform,Name the movie with the most ratings.,movie with the most rating refers to MAX(SUM(rating_score));,SELECT movie_title FROM movies GROUP BY movie_title ORDER BY COUNT(movie_title) DESC LIMIT 1
movie_platform,What is the average number of Mubi users who love movies directed by Stanley Kubrick?,average = AVG(movie_popularity); number of Mubi users who loves the movie refers to movie_popularity;,SELECT AVG(movie_popularity) FROM movies WHERE director_name = 'Stanley Kubrick'
movie_platform,What is the average rating for movie titled 'When Will I Be Loved'?,"average rating = DIVIDE((SUM(rating_score where movie_title = 'When Will I Be Loved')), COUNT(rating_score));",SELECT AVG(T2.rating_score) FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T1.movie_title = 'When Will I Be Loved'
movie_platform,What is the user avatar url for user 41579158? What is the latest movie rated by him / her?,user avatar url refers to user_avatar_image_url; latest movie rated refers to latest rating_date;,"SELECT T3.user_avatar_image_url, T3.rating_date_utc FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id INNER JOIN ratings_users AS T3 ON T3.user_id = T2.user_id WHERE T3.user_id = 41579158 ORDER BY T3.rating_date_utc DESC LIMIT 1"
movie_platform,What is the percentage of the ratings were rated by user who was a subcriber?,"user is a subscriber refers to user_subscriber = 1; percentage of ratings = DIVIDE(SUM(user_subscriber = 1), SUM(rating_score)) as percent;",SELECT CAST(SUM(CASE WHEN user_subscriber = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM ratings
movie_platform,List all movie title rated in April 2020 from user who was a trialist.,movie title rated in April 2020 refers to rating_timestamp_utc LIKE '%2020-04-%'; user is a trial list refers to user_trialist = 1;,SELECT T1.movie_title FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_trialist = 1 AND T2.rating_timestamp_utc LIKE '2020-04%'
movie_platform,List ther users who gave the worst rating for movie 'Love Will Tear Us Apart'.,worst rating refers to rating_score = 1;,SELECT T1.user_id FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'Love Will Tear Us Apart' AND T1.rating_score = 1
movie_platform,List all movies with the best rating score. State the movie title and number of Mubi user who loves the movie.,best rating score refers to rating_score = 5; number of Mubi user who loves the movie refers to movie_popularity;,"SELECT DISTINCT T2.movie_title, T2.movie_popularity FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score = 5"
movie_platform,"For all ratings which are rated in year 2020, name the movies which has the rating scored 4 and above.",ratings in year 2020 refers to rating_timestamp_utc like '%2020%'; rating_score > = 4;,"SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE CAST(SUBSTR(T1.rating_timestamp_utc, 1, 4) AS INTEGER) = 2020 AND CAST(SUBSTR(T1.rating_timestamp_utc, 6, 2) AS INTEGER) > 4"
movie_platform,"For all movies where users left a critic, find the movie name, user, rating and critics comments from the user.",movies where users left a critic refers to critic IS NOT NULL; critic comments refers to critic;,"SELECT T2.movie_title, T1.user_id, T1.rating_score, T1.critic FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.critic IS NOT NULL"
movie_platform,"For movie titled 'Welcome to the Dollhouse', how many percentage of the ratings were rated with highest score.","rated with highest score refers to rating_score = 5; percentage = MULTIPLY(DIVIDE(SUM(rating_score = 5), COUNT(rating_score)), 100)",SELECT CAST(SUM(CASE WHEN T2.rating_score = 5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T1.movie_title = 'Welcome to the Dollhouse'
movie_platform,What is the percentage of rated movies were released in year 2021?,"percentage = DIVIDE(SUM(movie_release_year = 2021), COUNT(rating_id)) as percent; movies released in year 2021 refers to movie_release_year = 2021;",SELECT CAST(SUM(CASE WHEN T1.movie_release_year = 2021 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id
movie_platform,"Who is the director of the movie Sex, Drink and Bloodshed?","Sex, Drink and Bloodshed refers to movie title = 'Sex, Drink and Bloodshed';","SELECT director_name FROM movies WHERE movie_title = 'Sex, Drink and Bloodshed'"
movie_platform,What is the name of the most followed list?,most followed list refers to MAX(list_followers);,SELECT list_title FROM lists ORDER BY list_followers DESC LIMIT 1
movie_platform,What are the URL to the list page on Mubi of the lists with followers between 1-2 and whose last update timestamp was on 2012?,URL to the list page on Mubi refers to list_url; list_followers = 1 OR list_followers = 2; last update timestamp was on 2012 refers to list_update_timestamp_utc BETWEEN '2012-1-1' AND '2012-12-31';,SELECT list_url FROM lists WHERE list_update_timestamp_utc LIKE '2012%' AND list_followers BETWEEN 1 AND 2 ORDER BY list_update_timestamp_utc DESC LIMIT 1
movie_platform,What is the list ID that was first created by user 85981819?,first created list refers to oldest list_creation_date_utc;,SELECT list_id FROM lists_users WHERE user_id = 85981819 ORDER BY list_creation_date_utc ASC LIMIT 1
movie_platform,"For movie id 1269, how many users, who was a paying subscriber and was eligible for trial when he rated the movie, gave the movie a rating score of less than or equal to 2?",paying subscriber refers to user_has_payment_method = 1; eligible for trial refers to user_eligible_for_trial = 1; rating_score< = 2;,SELECT COUNT(*) FROM ratings WHERE movie_id = 1269 AND rating_score <= 2 AND user_eligible_for_trial = 1 AND user_has_payment_method = 1
movie_platform,What are the movie popularity of the movies released in 2021 that were directed by Steven Spielberg? List the names of the movies and their corresponding popularity.,movie released in 2021 refers to movie_release_year = 2021; popularity refers to movie_popularity;,"SELECT movie_title, movie_popularity FROM movies WHERE movie_release_year = 2021 AND director_name = 'Steven Spielberg'"
movie_platform,When was the first movie released and who directed it?,first movie refers to oldest movie_release_year;,"SELECT movie_release_year, director_name FROM movies WHERE movie_release_year IS NOT NULL ORDER BY movie_release_year ASC LIMIT 1"
movie_platform,"What is the user ID of the user, who was a subscriber when he created the list, who created a list for 10 consecutive years? If there are multiple users, indicate each of their user IDs.",user was a subscriber when he created the list refers to user_subscriber = 1; user who created a list for 10 consecutive years refers to user_id with list_creation_date_utc for 10 succeeding years;,"SELECT user_id FROM lists_users WHERE user_subscriber = 1 GROUP BY user_id HAVING MAX(SUBSTR(list_creation_date_utc, 1, 4)) - MIN(SUBSTR(list_creation_date_utc, 1, 4)) >= 10"
movie_platform,"How many users gave ""Pavee Lackeen: The Traveller Girl"" movie a rating score of 4?",FALSE;,SELECT COUNT(T2.user_id) FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T1.movie_title = 'Pavee Lackeen: The Traveller Girl' AND T2.rating_score = 4
movie_platform,"Was the user who created the ""World War 2 and Kids"" list eligible for trial when he created the list? Indicate how many followers does the said list has.",user was eligible for trial when he created the list refers to user_eligible_for_trial = 1; number of followers a list have refers to list_followers;,"SELECT T2.user_eligible_for_trial, T1.list_followers FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.user_id = T1.user_id AND T1.list_id = T2.list_id WHERE T1.list_title = 'World War 2 and Kids'"
movie_platform,Which year was the third movie directed by Quentin Tarantino released? Indicate the user ids of the user who gave it a rating score of 4.,third movie refers to third movie that has oldest movie_release_year;,"SELECT T2.movie_release_year, T1.user_id FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.movie_id = ( SELECT movie_id FROM movies WHERE director_name = 'Quentin Tarantino' ORDER BY movie_release_year ASC LIMIT 2, 1 ) AND T1.rating_score = 4"
movie_platform,What is the URL to the movie director page on Mubi of the director whose movie was critic by user 2452551 and was given 39 likes?,URL to the movie director page on Mubi refers to director_url; likes refers to critic_likes; critic_likes = 39;,SELECT T2.director_url FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 2452551 AND T1.critic_likes = 39
movie_platform,"What is the average rating score of the movie ""When Will I Be Loved"" and who was its director?",average rating score = AVG(rating_score);,"SELECT AVG(T1.rating_score), T2.director_name FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'When Will I Be Loved'"
movie_platform,How many movies were added to the list with the most number of movies? Indicate whether the user was a paying subscriber or not when he created the list.,list with the most number of movies refers to MAX(list_movie_number); user_has_payment_method = 1 means the user was a paying subscriber when he created the list; user_has_payment_method = 0 means the user was not a paying subscriber when he created the list;,"SELECT T1.list_movie_number, T2.user_has_payment_method FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.list_id = T2.list_id ORDER BY T1.list_movie_number DESC LIMIT 1"
movie_platform,What is the name of the movie whose critic received the highest number of likes related to the critic made by the user rating the movie?,number of likes received refers to critic likes; received the highest number of likes refers to MAX(critic_likes);,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id ORDER BY T1.critic_likes DESC LIMIT 1
movie_platform,How much is the popularity of the movie that has the highest popularity between 1920 to 1929 and when did the movie received its first rating score of 1 from the users who were a paying subscriber when they rated the movie ?,movie with highest popularity refers to MAX(movie_popularity); movie_release_year BETWEEN 1920 AND 1929; when the movie received its first rating score of 1 refers to oldest date in rating_timestamp_utc where rating score = 1; user was a paying subscriber when they rated the movie refers to user_has_payment_method = 1;,"SELECT MAX(T2.movie_popularity), MIN(T1.rating_timestamp_utc) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_release_year BETWEEN 1920 AND 1929 AND T1.rating_score = 1 AND T1.user_has_payment_method = 1"
movie_platform,"How many movies directed by Francis Ford Coppola have a popularity of more than 1,000? Indicate what is the highest amount of likes that each critic per movie has received, if there's any.","Francis Ford Coppola refers to director_name; popularity of more than 1,000 refers to movie_popularity >1000;highest amount of likes that each critic per movie has received refers to MAX(critic_likes)","SELECT COUNT(T2.movie_title), T1.critic FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.director_name = 'Francis Ford Coppola' AND T2.movie_popularity > 1000"
movie_platform,What is the URL to the user profile image on Mubi of the user who gave the movie id of 1103 a 5 ratinng score on 4/19/2020?,URL to the user profile image on Mubi  refers to user_avatar_image_url;  4/19/2020 refers to rating_date_utc,SELECT T2.user_avatar_image_url FROM ratings AS T1 INNER JOIN ratings_users AS T2 ON T1.user_id = T2.user_id WHERE T2.user_id = 1103 AND rating_score = 5 AND T2.rating_date_utc = '2020-04-19'
movie_platform,"Among the lists created by user 4208563, which one has the highest number of followers? Indicate how many followers it has and whether the user was a subscriber or not when he created the list.",User 4208563 refers to user_id;highest number of followers refers to MAX(list_followers); user_subscriber = 1 means that the user was a subscriber when he created the list; user_subscriber = 0 means the user was not a subscriber when he created the list (to replace),"SELECT T1.list_followers, T2.user_subscriber = 1 FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.user_id = T2.user_id AND T2.list_id = T2.list_id WHERE T2.user_id = 4208563 ORDER BY T1.list_followers DESC LIMIT 1"
movie_platform,Which year has the least number of movies that was released and what is the title of the movie in that year that has the highest number of rating score of 1?,"least number of movies refers to MIN(movie_release_year); highest rating score refers to MAX(SUM(movie_id) where rating_score = '1')

","SELECT DISTINCT T1.movie_release_year, T1.movie_title FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T1.movie_release_year = ( SELECT movie_release_year FROM movies GROUP BY movie_release_year ORDER BY COUNT(movie_id) DESC LIMIT 1 ) AND T2.rating_score = 1"
movie_platform,"How many users, who were a paying subscriber when they rated the movie, gave the movie that was released in 1924 and directed by Erich von Stroheim a rating score of 5?","Directed by Buster Keaton refers to director_name; released in 1924 refers to movie_release_year = 1924; paying subscriber refers to user_has_payment_method = 1

",SELECT COUNT(T2.user_id) FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T1.movie_release_year = 1924 AND T1.director_name = 'Erich von Stroheim' AND T2.rating_score = 5 AND T2.user_has_payment_method = 1
movie_platform,What is the average number of movies added to the lists of user 8516503? Give the user profile image URL on Mubi.,"user profile image URL refers to user_avatar_image_url; user 8516503 refers to user_id; Average refers to AVG(list_movie_number where user_id = 8516503)

","SELECT AVG(T1.list_movie_number), T2.user_avatar_image_url FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.list_id = T2.list_id AND T1.user_id = T2.user_id WHERE T2.user_id = 8516503"
movie_platform,"How many users rated the movie ""The Magnificent Ambersons"" gave a rating score of no more than 2? List all the URL to the rating on Mubi.",The Magnificent Ambersons refers to movie_title; rating score of no more than 2 refers to rating_score<2; URL to rating refers to rating_url,"SELECT COUNT(T2.user_id), T2.rating_url FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T1.movie_title = 'The Magnificent Ambersons' AND T2.rating_score <= 2"
movie_platform,How many users who created a list in the February of 2016 were eligible for trial when they created the list? Indicate the user id of the user who has the most number of followers in his list in February of 2016.,"created a list in the February of 2016 refer to list_creation_date_utc BETWEEN 2/1/2016 and 2/29/2016; eligible for trial refers to user_eligible_for_trial = 1;
",SELECT T1.list_followers FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.user_id = T2.user_id AND T1.list_id = T2.list_id WHERE T2.list_creation_date_utc BETWEEN '2016-02-01' AND '2016-02-29' AND T2.user_eligible_for_trial = 1
movie_platform,What is the URL to the rating on Mubi of the Riff-Raff movie that was given the highest rating score by user 22030372?,URL refer to rating_url; user 22030372 refer to user_id,SELECT T2.rating_url FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_id = 22030372 AND T2.rating_score = 5 AND T1.movie_title = 'Riff-Raff'
movie_platform,How many directors have directed atleast 10 movies between 1960 to 1985? Indicate the name of the movie in those years of each director that received the highest amount of 5 rating score.,"directed at least 10 movies refers to count(direct_name)>10; 1960 to 1985 refer to movie_release_year
",SELECT T2.director_name FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_release_year BETWEEN 1960 AND 1985 GROUP BY T2.director_name HAVING COUNT(T2.movie_id) > 10
movie_platform,"How many users, who were not a a trialist when they rated the movie, gave the movie ""The South"" a rating score of not more than 2?","not a trialist refer to user_trialist = 0; rating score of not more than 2 refer to rating_score <2; The South refers to movie_title
",SELECT COUNT(T2.user_id) FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_trialist = 0 AND T2.rating_score <= 2 AND T1.movie_title = 'The South'
movie_platform,"How many likes did the critic of the movie ""Apocalypse Now"" received after giving the movie a rating score of 5?","Apocalypse Now refer to movie_title; rating score refer to rating_score = '5';likes received refers to critic_likes
",SELECT T2.critic_likes FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_trialist = 0 AND T2.rating_score = 5 AND T1.movie_title = 'Apocalypse Now'
movie_platform,"What is the average rating score of the movie ""The Crowd"" and who was its director?",director refer to director_name; The Crowd refer to movie_title; Average refer to AVG(rating_score),"SELECT AVG(T2.rating_score), T1.director_name FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T1.movie_title = 'The Crowd'"
movie_platform,When was the first movie of the director who directed the highest number of movies released and what is the user id of the user who received the highest number of comments related to the critic made by the user rating the movie?,comments refer to critic_comments,SELECT MIN(movie_release_year) FROM movies WHERE director_name = ( SELECT T2.director_name FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_release_year BETWEEN 1960 AND 1985 GROUP BY T2.director_name ORDER BY COUNT(T2.director_name) DESC LIMIT 1 )
movie_platform,How many movies have a popularity of more than 400 but less than 500? Indicate the name of the movies and the highest rating score each movie has received.,"popularity of more than 400 but less than 500 refers to movie_popularity BETWEEN 400 AND 500; highest rating score refer to MAX(rating_score)

","SELECT T1.movie_title, MAX(T2.rating_score) FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T1.movie_popularity BETWEEN 400 AND 500 GROUP BY T1.movie_title"
movie_platform,"What is the URL to the rating on Mubi made by user 45579900 for the movie ""The Vertical Ray of the Sun"" that received 20 likes?",URL refer to rating_url; 20 likes refer to critic_likes = ’20’; user 45579900 refer to user_id,SELECT T2.rating_url FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_id = 45579900 AND T1.movie_title = 'The Vertical Ray of the Sun' AND T2.critic_likes = 20
movie_platform,What is the average popularity of each movie that was directed by Christopher Nolan? Indicate which movie directed by him has received the highest number of 5 rating scores.,5 rating scores refer to rating_score; Christopher Nolan refer to director_name; average popularity of each movie refer to AVG(movie_popularity where director_name = 'Christopher Nolan'),SELECT AVG(T2.movie_popularity) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.director_name = 'Christopher Nolan'
movie_platform,"What are the names of the movie that was rated by the user between 1/1/2013 to 12/31/2013 by the user who created the list ""100 Greatest Living American Filmmakers""? Calculate for the average rating score of those movies in 2013.","Between 1/1/2013 to 12/31/2013 refer to rating_timestamp_utc; 100 Greatest Living American Filmmakers refer to list_title; average rating score refer to DIVIDE( ADD(rating_score where rating_timestamp_utc = '1/1/2013-12/31/2013'), COUNT(rating_timestamp_utc = '1/1/2013-12/31/2013'))",SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id INNER JOIN lists AS T3 ON T3.user_id = T1.user_id WHERE T1.rating_timestamp_utc BETWEEN '2013-01-01' AND '2013-12-31' AND T3.list_title = '100 Greatest Living American Filmmakers'
movie_platform,What is the average rating score of the 'Pavee Lackeen: The Traveller Girl' movie and what year was it released?,year it was released refers to movie_release_year; average rating score refers to AVG(rating_score where movie_title = 'Final Destination 6'); Final Destination 6 refers to movie_title,"SELECT AVG(T1.rating_score), T2.movie_release_year FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'Pavee Lackeen: The Traveller Girl'"
movie_platform,How many movie lists were still updated 10 years after it was created?,updated 10 years after it was created refers to list_update_timestamp_utc > (list_creation_timestamp_utc+10);,"SELECT COUNT(*) FROM lists WHERE SUBSTR(list_update_timestamp_utc, 1, 4) - SUBSTR(list_creation_timestamp_utc, 1, 4) > 10"
movie_platform,"What's the description for the movie list ""Short and pretty damn sweet""?",Short and pretty damn sweet is list_title; description refers to list_description;,SELECT list_description FROM lists WHERE list_title = 'Short and pretty damn sweet'
movie_platform,"Where can I find the movie list ""Short and pretty damn sweet""?",Short and pretty damn sweet is list_title; location of the movie refers to list_url;,SELECT list_url FROM lists WHERE list_title = 'Short and pretty damn sweet'
movie_platform,"Among the movie lists created after 2010/1/1, how many of them have over 200 followers?",created after 2010/1/1 refers to list_update_timestamp_utc>'2010/1/1'; over 200 followers refers to list_followers>200;,SELECT COUNT(*) FROM lists WHERE list_followers > 200 AND list_update_timestamp_utc > '2010-01-01'
movie_platform,How many movie lists were created by user 83373278 when he or she was a subscriber?,the user was a subscriber when he created the list refers to user_subscriber = 1; user 83373278 refers to user_id = 83373278;,SELECT COUNT(*) FROM lists_users WHERE user_id = 83373278 AND user_subscriber = 1
movie_platform,"In which year was the movie ""La Antena"" released?",movie La Antena refers to movie_title = 'La Antena'; which year refers to movie_release_year;,SELECT movie_release_year FROM movies WHERE movie_title = 'La Antena'
movie_platform,"Please give me the url of the movie ""La Antena"".",movie La Antena refers to movie_title = 'La Antena'; url refers to movie_url;,SELECT movie_url FROM movies WHERE movie_title = 'La Antena'
movie_platform,"Which movie is more popular, ""The General"" or ""Il grido""?",The General and Il grido are movie_title; more popular movie refers to higher (movie_popularity);,SELECT movie_title FROM movies WHERE movie_title = 'The General' OR movie_title = 'Il grido' ORDER BY movie_popularity DESC LIMIT 1
movie_platform,How many movies registered on Mubi are directed by Hong Sang-soo?,Hong Sang-soo is the name of director;,SELECT COUNT(movie_id) FROM movies WHERE director_name = 'Hong Sang-soo'
movie_platform,"Was the user who created the list ""250 Favourite Films"" a trialist when he or she created the list?",the user was a trialist when he created the list refers to user_trailist = 1; 250 Favourite Films is list_title;,SELECT T2.user_trialist FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.list_id = T2.list_id AND T1.user_id = T2.user_id WHERE T1.list_title = '250 Favourite Films'
movie_platform,Please list the titles of the movie lists user 32172230 created when he or she was eligible for trial.,the user was eligible for trail when he created the list refers to user_eligile_for_trail = 1; user 32172230 refers to user_id = 32172230;,SELECT T1.list_title FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.list_id = T2.list_id AND T1.user_id = T2.user_id WHERE T1.user_id = 32172230 AND T2.user_eligible_for_trial = 1
movie_platform,How many movie lists with over 100 movies had user 85981819 created when he or she was a paying subscriber?,the user was a paying subscriber when he created the list refers to user_has_payment_method = 1;  movie lists with over 100 refers to list_movie_number >100;  user 85981819 refers to user_id = 85981819;,SELECT COUNT(*) FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.list_id = T2.list_id AND T1.user_id = T2.user_id WHERE T1.user_id = 85981819 AND T1.list_movie_number > 100 AND T2.user_has_payment_method = 1
movie_platform,What's the description of user 85981819's movie list with the most followers?,user 85981819 refers to user_id = 85981819; most followers refers to Max(list_followers); description refers to list_descriptions;,SELECT T1.list_description FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.list_id = T2.list_id AND T1.user_id = T2.user_id WHERE T1.user_id = 85981819 ORDER BY T1.list_followers DESC LIMIT 1
movie_platform,"When did the creator of the list ""250 Favourite Films"" last updated a movie list?",250 Favourite Films refers to list_title; last update refers to list_update_date_utc;,SELECT T2.list_update_date_utc FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.list_id = T2.list_id AND T1.user_id = T2.user_id WHERE T1.list_title = '250 Favourite Films' ORDER BY T2.list_update_date_utc DESC LIMIT 1
movie_platform,"What's the avatar image of the user who created the movie list ""250 Favourite Films""?",250 Favourite Films refers to list_title; avatar image refers to user_avatar_image_url;,SELECT T2.user_avatar_image_url FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.list_id = T2.list_id AND T1.user_id = T2.user_id WHERE T1.list_title = '250 Favourite Films'
movie_platform,"How many more movie lists were created by the user who created the movie list ""250 Favourite Films""?",250 Favourite Films refers to list_title;,SELECT COUNT(list_id) FROM lists_users WHERE user_id = ( SELECT user_id FROM lists WHERE list_title = '250 Favourite Films' )
movie_platform,"How many users liked the movie ""A Way of Life"" to the highest extent?",like the movie highest to the extent refers to rating_score = 5; A Way of Life refers to movie_title;,SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life' AND T1.rating_score = 5
movie_platform,"Please list all the critics made by the user rating the movie ""A Way of Life"".",A Way of Life refers to movie_title;,SELECT T1.critic FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life'
movie_platform,"How many critics of the movie ""Imitation of Life"" got more than 1 like?",Imitation of Life refers to movie_title; critics got more than 1 like refers to critic_likes >1;,SELECT COUNT(*) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'Imitation of Life' AND T1.critic_likes > 1
movie_platform,"Which user made a critic for the film ""When Will I Be Loved"" and got 2 comments for the critic?",When Will I Be Loved refers to movie_title;  2 comments for the critic refers to critic_comments = 2;,SELECT T1.user_id FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'When Will I Be Loved' AND T1.critic_comments = 2
movie_platform,"When did user 39115684 rate the movie ""A Way of Life""?",A Way of Life' refers to movie_title; user 39115684 refers to userid = 39115684;  when the user rate refers to rating_timestamp_utc;,SELECT T1.rating_score FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life' AND T1.user_id = 39115684
movie_platform,What's the url of user 39115684's rating on the movie 'When Will I Be Loved'?,A Way of Life refers to movie_title; user 39115684 refers to userid = 39115684;  url refers to rating_url;,SELECT T1.rating_url FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life' AND T1.user_id = 39115684
movie_platform,"Was user 39115684 a trialist when he or she rated the movie ""A Way of Life""?",A Way of Life' refers to movie_title; user 39115684 refers to userid = 39115684;  the user was a trialist when he rated the movie refers to user_trialist = 1;,SELECT T1.user_trialist FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life' AND T1.user_id = 39115684
movie_platform,"How many users were trialists when they rated the movie ""A Way of Life""?",A Way of Life' refers to movie_title; the user was a trialist when he rated the movie refers to user_trialist = 1;,SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'When Will I Be Loved' AND T1.user_trialist = 1
movie_platform,"Please list all the links to the ratings on the movie ""A Way of Life"" with a critic.","A Way of Life' refers to movie_title; with a critic refers to critic is not null, links to the ratings refers to rating_url;",SELECT T1.rating_url FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life' AND T1.critic IS NOT NULL
movie_platform,How many users have rated the most popular movie?,most popular refers to Max(movie_popularity);,SELECT COUNT(rating_id) FROM ratings WHERE movie_id = ( SELECT movie_id FROM movies ORDER BY movie_popularity DESC LIMIT 1 )
movie_platform,User 58149469's critic on which film got 1 like and 2 comments?,user 58149469 refers to user_id = 58149469; critic with 1 like refers to critic_likes = 1; critic with 2 comments refers to critic_comments = 2;,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 58149469 AND T1.critic_likes = 1 AND T1.critic_comments = 2
movie_platform,"Among the users who are trailists when rating the movie ""When Will I Be Loved"", how many of them have rated ""1"" on the movie?",When Will I Be Loved refers to movie_title; the user was a trialist when he rated the movie refers to user_trialist = 1;rated 1 on the movie refers to rating_score = 1;,SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'When Will I Be Loved' AND T1.rating_score = 1 AND T1.user_trialist = 1
movie_platform,"How many ratings on the movie ""A Way of Life"" are made after the year 2011?",A Way of Life' is movie_title; rating after the year 2011 refers to rating_timestamp_utc > '2011';,SELECT COUNT(T1.rating_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life' AND T1.rating_timestamp_utc >= '2012-01-01'
movie_platform,"What's of rating on the movie ""Innocence Unprotected"" by the user who created the movie list ""250 Favourite Films""?",Innocence Unprotected' is movie_title; '250 Favourite Films' is list_title; rating refers to rating_score;,SELECT T1.rating_score FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id INNER JOIN lists AS T3 ON T3.user_id = T1.user_id WHERE T2.movie_title = 'Innocence Unprotected' AND T3.list_title = '250 Favourite Films'
movie_platform,"Please list the movies rated by the user who created the movie list ""250 Favourite Films"".",250 Favourite Films' is list_title; movies refers to movie_title;,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id INNER JOIN lists AS T3 ON T3.user_id = T1.user_id WHERE T3.list_title = '250 Favourite Films'
movie_platform,"What's the average rating score of the movie ""A Way of Life""?","A Way of Life' is movie_title; average rating score = Divide (Sum(rating_score), Count(rating_id));",SELECT AVG(T1.rating_score) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life'
movie_platform,"What's the percentage of the users who have rated ""1"" on the movie ""When Will I Be Loved""?","When Will I Be Loved' is movie_title; rated 1 refers to rating_score = 1; percentage = Divide(Count(rating_id where rating_score = 1),Count(rating_id)) *100;",SELECT CAST(SUM(CASE WHEN T1.rating_score = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'When Will I Be Loved'
movie_platform,"How much higher is the average rating score of the movie ""Innocence Unprotected"" than the movie ""When Will I Be Loved""?","Innocence Unprotected' and 'When Will I Be Loved' are movie_title; Average rating score = Divide(Sum(rating_score), Count(rating_id));",SELECT SUM(CASE WHEN T2.movie_title = 'Innocence Unprotected' THEN T1.rating_score ELSE 0 END) / SUM(CASE WHEN T2.movie_title = 'Innocence Unprotected' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.movie_title = 'When Will I Be Loved' THEN T1.rating_score ELSE 0 END) / SUM(CASE WHEN T2.movie_title = 'When Will I Be Loved' THEN 1 ELSE 0 END) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id
movie_platform,"Who was the director of the movie ""Tokyo Eyes""？","Tokyo Eyes' is movie_title, director refers to director_name;",SELECT director_name FROM movies WHERE movie_title = 'Tokyo Eyes'
movie_platform,How many films were released in 2007?,film released in 2007 refers to movie_release_year = 2007; film refers to movie,SELECT COUNT(*) FROM movies WHERE movie_release_year = 2007
movie_platform,Which of the films released in 2006 was the most popular among Mubi users?,released in 2006 refers to movie_release_year = 2006; most popular refers to Max(movie_popularity); film refers to movie;,SELECT movie_title FROM movies WHERE movie_release_year = 2006 ORDER BY movie_popularity DESC LIMIT 1
movie_platform,How many films did Åke Sandgren direct?,Ake Sandgren is the director name;  film refers to movie,SELECT COUNT(movie_title) FROM movies WHERE director_name = 'Åke Sandgren'
movie_platform,Which of the films directed by Álex de la Iclesia is the most popular among Mubi users?,Alex de la Iclesia is the director name; the most popular refers to Max(movie_popularity); films refers to movies;,SELECT movie_title FROM movies WHERE director_name = 'Åke Sandgren' ORDER BY movie_popularity DESC LIMIT 1
movie_platform,When was the movie Cops released?,Cops' is movie_title; released refers to movie_release_year;,SELECT movie_release_year FROM movies WHERE movie_title = 'Cops'
movie_platform,"Please list the id of the director of the movie ""It's Winter"".",It's Winter' is movie_title;,SELECT director_id FROM movies WHERE movie_title = 'It''s Winter'
movie_platform,Please provide the ID of the user with the most followers on the list.,most followers refers to Max(list_followers);,SELECT user_id FROM lists ORDER BY list_followers DESC LIMIT 1
movie_platform,Please provide the title of the list with the most comments on the list.,the most comments refers to Max(list_comments);,SELECT list_title FROM lists GROUP BY list_title ORDER BY COUNT(list_comments) DESC LIMIT 1
movie_platform,Which of the film released in 2008 scored the highest?,film released in 2008 refers to movie_release_year = 2008; scored the highest refers to Max(rating_score); film refers to movie;,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_release_year = 2008 ORDER BY T1.rating_score DESC LIMIT 1
movie_platform,Please list the names of the top three movies in the number of likes related to the critic made by the user rating the movie.,likes related to the critic made by the user rating the movie refers to critic_likes; top refers to Max(critic_likes);,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id ORDER BY T1.critic_likes DESC LIMIT 3
movie_platform,How many users have more than 100 followers in the list created by users in 2009?,more than 100 followers refers to list_followers >100;  list created by the user in 2009 refers to list_creation_date_utc = '2009';,SELECT COUNT(T1.user_id) FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T2.list_followers > 100 AND T1.list_creation_date_utc LIKE '2009%'
movie_platform,"How many users in Mubi give the movie ""White Night Wedding for 5""?",White Night Wedding' is movie_title; for 5 refers to rating_score = 5;,SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score = 5 AND T2.movie_title = 'White Night Wedding'
movie_platform,What's the cover image of the user who created the movie list 'Georgia related films'?,Play it cool' is list_title; cover image of user refers to user_cover_image_url;,SELECT T1.user_cover_image_url FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T2.list_title LIKE 'Georgia related films'
movie_platform,How many followers does the list created by the user whose user_avatar_image_url is https://assets.mubicdn.net/images/avatars/74983/images-w150.jpg?1523895214 have?,followers refers to list_followers;,SELECT SUM(T2.list_followers) FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T1.user_avatar_image_url = 'https://assets.mubicdn.net/images/avatars/74983/images-w150.jpg?1523895214'
movie_platform,Please list the names of the movies that user 94978 scored as 5.,user 94978 refers to user_id = 94978; scored as 5 refers to rating_score = 5;,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score = 5 AND T1.user_id = 94978
movie_platform,Please list the names of the films released in 2003 among the films scored by user 2941 .,released in 2003 refers to movie_release_year = 2003; user 2941 refers to user_id = 2941; film refers to movie;,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_release_year = 2003 AND T1.user_id = 2941
movie_platform,"How many users were not trialists when they rated the movie ""Patti Smith: Dream of Life""?",Patti Smith: Dream of Life' is movie_title; the user was not a trialist when he created the list refers to user_trialist = 0;,SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'Patti Smith: Dream of Life' AND T1.user_trialist = 0
movie_platform,Which movie has the highest average score in Mubi?,Highest average score refers to Max(Avg(rating_score));,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id GROUP BY T2.movie_title ORDER BY SUM(T1.rating_score) / COUNT(T1.rating_id) DESC LIMIT 1
movie_platform,Please list the names of the top three movies in the number comments related to the critic made by the user rating the movie.,number of comments related to the critic made by the user rating the movie refers to critic_comments; top movie refers to Max(critic_comments);,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id ORDER BY T1.critic_comments DESC LIMIT 3
movie_platform,What was the title of the first list created by a user 85981819? And please provide the user_avatar_image_url.,user 85981819 refers to user_id = 85981819;  first list created refers to Min (list_creation_date_utc);,"SELECT T2.list_title, T1.user_avatar_image_url FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T1.user_id = 85981819 ORDER BY T2.list_creation_timestamp_utc LIMIT 1"
movie_platform,Please list the names of the movies that have been rated the most times in 2020.,in 2020 refers to rating_timestamp_utc = '2020%'; rated the most times refers to Max(Count(movie_title));,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_timestamp_utc LIKE '2020%' GROUP BY T2.movie_title ORDER BY COUNT(T2.movie_title) DESC LIMIT 1
movie_platform,What is the average score for the movie Versailles Rive-Gauche?,Versailles Rive-Gauche' is movie_title; average score refers to Avg(rating_score);,SELECT AVG(T1.rating_score) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title LIKE 'Versailles Rive-Gauche'
movie_platform,Which film rated by user 59988436 that received 21 comments?,user 59988436 refers to user_id = 59988436; received 21 comments refers to critic_comments = 21; film refers to movie;,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 59988436 AND T1.critic_comments = 21
movie_platform,Please list the names of the movies that received more than 20 likes?,received more than 20 likes refers to critic_likes>20;,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.critic_likes > 20
movie_platform,"What is the average score of the movie ""The Fall of Berlin"" in 2019?",The Fall of Berlin' is movie_title; in 2019 refers to rating_timestamp_utc = 2019; Average score refers to Avg(rating_score);,SELECT SUM(T1.rating_score) / COUNT(T1.rating_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_timestamp_utc LIKE '2019%' AND T2.movie_title LIKE 'The Fall of Berlin'
movie_platform,"What percentage of users rated the movie ""Patti Smith: Dream of Life"" by more than 3?","Patti Smith: Dream of Life' is movie_title; more than 3 refers to rating_score >3; percentage = Divide(Count(rating_score where rating_score >3), Count(rating_score))*100",SELECT CAST(SUM(CASE WHEN T1.rating_score > 3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.rating_score) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title LIKE 'Patti Smith: Dream of Life'
movie_platform,Which of the film directed by director Abbas Kiarostami has the highest average score?,Abbas Kiarostami' is director_name; the highest Average score refers to Max(Avg(rating_score));,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.director_name = 'Abbas Kiarostami' GROUP BY T2.movie_title ORDER BY SUM(T1.rating_score) / COUNT(T1.rating_id) DESC LIMIT 1
movie_platform,Which year had the most released films?,"year refers to movie_release_year; most release films refers to MAX(COUNT(movie_id))

",SELECT movie_release_year FROM movies GROUP BY movie_release_year ORDER BY COUNT(movie_id) DESC LIMIT 1
movie_platform,Who is the director that made the most movies? Give the director's id.,director that made the most movies refers to MAX(COUNT(movie_id)),SELECT director_id FROM movies GROUP BY director_id ORDER BY COUNT(movie_id) DESC LIMIT 1
movie_platform,How many movies did the director of the highest movie popularity make?,highest movie popularity refers to MAX(movie_popularity),SELECT COUNT(movie_id) FROM movies WHERE director_id = ( SELECT director_id FROM movies ORDER BY movie_popularity DESC LIMIT 1 )
movie_platform,What's the number of the paying subscribers when rating a movie after the year 2014?,paying subscribers refers to user_has_payment_method = 1; rating a movie after the year 2014 refers to rating_date_utc>'2014%',SELECT COUNT(user_subscriber) FROM ratings_users WHERE user_has_payment_method = 1 AND rating_date_utc > '2014%'
movie_platform,Who was the earliest user created a list but didn't get any followers? Give the user ID.,earliest user created a list refers to MIN(list_creation_date_utc); didn't get any followers refers to user_subscriber = 0,SELECT user_id FROM lists_users WHERE user_subscriber = 0 ORDER BY list_creation_date_utc LIMIT 1
movie_platform,Give the number of followers for the user who posted the most lists.,number of followers refers to user_subscriber; posted the most lists refers to MAX(COUNT(list_id)),SELECT SUM(T1.list_followers) FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.list_id = T2.list_id GROUP BY T1.user_id ORDER BY COUNT(T1.list_id) DESC LIMIT 1
movie_platform,"How many followers did the user who posted the list ""Non-American Films about World War II"" have?","the list ""Non-American Films about World War II"" refers to list_title = 'Non-American Films about World War II'",SELECT SUM(T2.list_followers) FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T2.list_title LIKE 'Non-American Films about World War II'
movie_platform,"What's the number of users gave the movie ""Downfall"" a rating of ""4""?","movie ""Downfall"" refers to movie_title = 'Downfall'; rating of ""4"" refers to rating_score = 4",SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'Downfall' AND T1.rating_score = 4
movie_platform,"Give the name of the movie that got the most ""5"" ratings.",5 ratings refers to rating_score = 5; name of the movie refers to movie_title,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score = 5
movie_platform,Which movie got the most critic comments? Give the name of the movie.,name of the movie refers to movie_title; most critic comments refers to MAX(critic_comments),SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id GROUP BY T2.movie_title ORDER BY COUNT(T1.critic_comments) DESC LIMIT 1
movie_platform,Show the avatar of the user who gave the rating at 2019/10/17 1:36:36.,"at 2019/10/17 1:36:36 refers to rating_timestamp_utc = '2019/10/17 1:36:36'; avatar of the user refers to user_avatar_image_url

",SELECT T2.user_avatar_image_url FROM ratings AS T1 INNER JOIN lists_users AS T2 ON T1.user_id = T2.user_id WHERE T1.rating_timestamp_utc LIKE '2019-10-17 01:36:36'
movie_platform,"Show the portrait picture of the user who created the list ""Vladimir Vladimirovich Nabokov"".","the list ""Vladimir Vladimirovich Nabokov"" refers to list_title = 'Vladimir Vladimirovich Nabokov'; portrait picture refers to user_avatar_image_url",SELECT T1.user_avatar_image_url FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T2.list_title LIKE 'Vladimir Vladimirovich Nabokov'
movie_platform,"For the user who post the list that contained the most number of the movies, is he/she a paying subscriber when creating that list?","the list that contained the most number of the movies refers to MAX(list_movie_number); user_has_payment_method = 1 means the user was a paying subscriber when he created the list ; 
user_has_payment_method = 0 means the user was not a paying subscriber when he created the list 

",SELECT T1.user_has_payment_method FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T2.list_movie_number = ( SELECT MAX(list_movie_number) FROM lists )
movie_platform,"Show the head portrait of the user who gave the most ""5"" ratings.","head portrait refers to user_avatar_image_url; ""5"" ratings refers to rating_score = 5",SELECT T2.user_avatar_image_url FROM ratings AS T1 INNER JOIN lists_users AS T2 ON T1.user_id = T2.user_id WHERE T1.rating_score = 5
movie_platform,How many critics were given to the movie that got the most movie popularity number.,most movie popularity number refers to MAX(movie_popularity),SELECT COUNT(T1.critic) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_popularity = ( SELECT MAX(movie_popularity) FROM movies )
movie_platform,"Who gave a ""4"" rating to the movie ""Freaks"" at 2013/5/4 6:33:32? Give his/her user id.","4 rating refers to rating_score = 4; the movie ""Freaks"" refers to movie_title = 'Freaks' ; at 2013/5/4 6:33:32 refers to rating_timestamp_utc = '2013-05-04 06:33:32'",SELECT T1.user_id FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE rating_score = 4 AND rating_timestamp_utc LIKE '2013-05-04 06:33:32' AND T2.movie_title LIKE 'Freaks'
movie_platform,Give the url of movie which was rated 5 on 2013/5/3 5:11:17.,rated 5 refers to rating_score = 5; on 2013/5/3 5:11:17 refers to rating_timestamp_utc = '2013-05-03 05:11:17',SELECT T2.movie_url FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE rating_score = 5 AND rating_timestamp_utc LIKE '2013-05-03 05:11:17'
movie_platform,"For the 1998 movie which got the highest popularity, how many ""4"" rating did the movie get?","1998 movie refers to movie_release_year = '1998'; the highest popularity refers to MAX(movie_popularity) ; ""4"" rating refers to rating_score = 4",SELECT COUNT(T2.movie_title) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score = 4 AND T2.movie_release_year = 1998 ORDER BY T2.movie_popularity DESC LIMIT 1
movie_platform,"From all the movies that got more than 13000 popularity number, which one had the least ratings.",more than 13000 popularity number refers to movie_popularity > 13000; least ratings refers to MIN(rating_score),SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_popularity > 13000 ORDER BY T1.rating_score LIMIT 1
movie_platform,"How many paying subscribers gave a rating to the movie ""One Flew Over the Cuckoo's Nest""?","paying subscribers refer to user_has_payment_method = 1; movie ""One Flew Over the Cuckoo's Nest"" refers to movie_id = 'One Flew Over the Cuckoo''s Nest'",SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id INNER JOIN ratings_users AS T3 ON T1.user_id = T3.user_id WHERE T2.movie_title = 'One Flew Over the Cuckoo''s Nest' AND T3.user_has_payment_method = 1
movie_platform,"For the lists that got more than 3000 followers, how many did the users who created those lists are paying subscribers?",got more than 3000 followers refers to list_followers > 3000; paying subscribers refer to user_has_payment_method = 1,SELECT COUNT(T1.user_id) FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T2.list_followers > 3000 AND T1.user_has_payment_method = 1
movie_platform,Which 1988 movie got the most ratings?,1988 movie refers to movie_release_year = '1998'; most ratings refers to MAX(rating_score),SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_release_year = 1988 ORDER BY T1.rating_score DESC LIMIT 1
movie_platform,"For all the movies that were released in 1995, how many lower than 3 ratings did the most popularity movie had?",released in 1995 refers to movie_release_year = '1995'; lower than 3 ratings refers to rating_score <3; most popularity movie refers to MAX(movie_popularity),SELECT COUNT(T1.rating_score) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score < 3 AND T2.movie_release_year = 1995 AND T2.movie_popularity = ( SELECT MAX(movie_popularity) FROM movies WHERE movie_release_year = 1995 )
movie_platform,"What is the percentage of users gave ""5"" to the movie ""Go Go Tales""?","movie ""Go Go Tales"" refers to movie_title = 'Go Go Tales'; gave ""5"" refers to rating_score = 5; percentage refers to DIVIDE(COUNT(rating_score = 5),COUNT(rating_score))*100",SELECT CAST(SUM(CASE WHEN T1.rating_score = 5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'Go Go Tales'
movie_platform,"Give the percentage of subscribers who rated who rated the movie ""G.I. Jane"".","movie ""G.I. Jane"" refers to movie_title = 'G.I. Jane'; subscribers refers to user_subscriber = 1; percentage refers to DIVIDE(COUNT(user_subscriber = 1),COUNT(user_subscriber))*100",SELECT CAST(SUM(CASE WHEN T3.user_subscriber = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id INNER JOIN lists_users AS T3 ON T1.user_id = T3.user_id WHERE T2.movie_title = 'G.I. Jane'
movie_platform,"For all the users who gave ""A Shot in the Dark"" a rating, how many percent of them is a paying subscriber?","""A Shot in the Dark"" refers to movie_title = 'A Shot in the Dark'; paying subscriber refers to user_has_payment_method = 1; percentage refers to DIVIDE(COUNT(user_has_payment_method = 1),COUNT(user_has_payment_method))*100",SELECT CAST(SUM(CASE WHEN T1.user_has_payment_method = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id INNER JOIN lists_users AS T3 ON T1.user_id = T3.user_id WHERE T2.movie_title = 'A Shot in the Dark'
movie_platform,Name all the list titles created by user 4208563.,user 4208563 refers to user_id = 4208563,SELECT list_title FROM lists WHERE user_id LIKE 4208563
movie_platform,"Among the lists created in 2016, which is the list that was updated most recently.",created in 2016 refers to list_creation_timestamp_utc like '2016%'; updated most recently refers to MAX(list_update_timestamp_utc),"SELECT list_title FROM lists WHERE strftime('%Y', list_update_timestamp_utc) = '2016' ORDER BY list_update_timestamp_utc DESC LIMIT 1"
movie_platform,What is the percentage of list created by user who was a subscriber when he created the list?,"was a subscriber refers to user_subscriber = 1; percentage refers to DIVIDE(COUNT(user_subscriber = 1),COUNT(list_id))",SELECT CAST(SUM(CASE WHEN user_subscriber = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(list_id) FROM lists_users
movie_platform,Name all lists created by a user who was a subcriber when created the list.,was a subscriber refers to user_subscriber = 1,SELECT DISTINCT T2.list_id FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T1.user_subscriber = 1
movie_platform,Provide list titles created by user who are eligible for trial when he created the list.,eligible for trial refers to user_eligible_for_trial = 1,SELECT DISTINCT T2.list_title FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T1.user_eligible_for_trial = 1
movie_platform,"Among the lists with at least one follower, how many were created by user who was subscriber when created the list?",lists with at least one follower refers to list_followers > = 1; was a subscriber refers to user_subscriber = 1,SELECT COUNT(T1.list_id) FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T2.list_followers >= 1 AND T1.user_subscriber = 1
movie_platform,"For all list titles with at least 200 movies in the list, what is their average number of followers?",at least 200 movies in the list refers to list_movie_number > 200; average number of followers refers to avg(list_followers),SELECT AVG(list_followers) FROM lists WHERE list_movie_number > 200
movie_platform,List all the titles created by user who was a subsriber when he created the list and have less than 50 movies in the list.,have less than 50 movies in the list refers to list_movie_number <50; was a subscriber refers to user_subscriber = 1,SELECT DISTINCT T2.list_title FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T2.list_movie_number < 50 AND T1.user_subscriber = 1
movie_platform,Which title list has not been updated for the longest period of time? State how long it has not been updated?,"not been updated for the longest period of time refers to MIN(list_update_timestamp_utc); how long it has not been updated refers to SUBTRACT(CURRENT_TIMESTAMP, list_update_timestamp_utc)","SELECT list_title , datetime(CURRENT_TIMESTAMP, 'localtime') - datetime(list_update_timestamp_utc) FROM lists ORDER BY list_update_timestamp_utc LIMIT 1"
movie_platform,Who is the user who created the list titled 'Sound and Vision'? Was he a subcriber when he created the list?,"list titled 'Sound and Vision' refers to list_title = 'Sound and Vision'; user_subscriber = 1 means the user was a subscriber when he rated the movie; user_subscriber = 0 means the user was not a subscriber when he rated the movie



","SELECT T1.user_id, T1.user_subscriber FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T2.list_title LIKE 'Sound and Vision'"
movie_platform,"For the list with more than 200 followers, state the title and how long the list has been created?","more than 200 followers refers to list_followers >200; how long the list has been created refers to SUBTRACT(CURRENT_TIMESTAMP,list_creation_timestamp_utc)","SELECT list_title , 365 * (strftime('%Y', 'now') - strftime('%Y', list_creation_timestamp_utc)) + 30 * (strftime('%m', 'now') - strftime('%m', list_creation_timestamp_utc)) + strftime('%d', 'now') - strftime('%d', list_creation_timestamp_utc) FROM lists WHERE list_followers > 200"
movie_platform,"Among all movies in the list, calculate the percentage of movies that were never been rated?","percentage of movies that were never been rated refers to DIVIDE(COUNT(main_movies.movie_id ! = main_ratings.movie_id),COUNT(movie_id))",SELECT CAST(SUM(CASE WHEN T2.movie_id IS NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.movie_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id
movie_platform,"List all movies rated by user 39115684. State the title, rating date and rating score.","user 39115684 refers to user_id = 39115684; title refers to movie_title; rating date refers to rating_timestamp_utc
","SELECT T2.movie_title, T1.rating_timestamp_utc, T1.rating_score FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 39115684"
movie_platform,"Between 1970 to 1980, how many movies with a popularity of more than 11,000 were released?","Between 1970 to 1980 refers to movie_release_year between 1970 and 1980; popularity of more than 11,000 refers movie_popularity >11000",SELECT COUNT(movie_id) FROM movies WHERE movie_release_year BETWEEN '1970' AND '1980' AND movie_popularity > 11000
movie_platform,How many movies directed by Felipe Cazals was realeased on 1976?,directed by Felipe Cazals refers to director_name = 'Felipe Cazals' ; realeased on 1976 refers to movie_release_year = 1976,SELECT COUNT(movie_id) FROM movies WHERE movie_release_year = 1976 AND director_name LIKE 'Felipe Cazals'
movie_platform,"What is the URL to the movie director page on Mubi of the movie titled ""Red Blooded American Girl""","movie titled ""Red Blooded American Girl"" refers to movie_title = 'Red Blooded American Girl'",SELECT director_url FROM movies WHERE movie_title LIKE 'Red Blooded American Girl'
movie_platform,What is the name of the list that was updated most recently?,updated most recently refers to MAX(list_update_date_utc),SELECT list_title FROM lists WHERE list_update_timestamp_utc = ( SELECT list_update_timestamp_utc FROM lists ORDER BY list_update_timestamp_utc DESC LIMIT 1 )
movie_platform,"Who created the list that has 142 comments? Indicate the user id of the user, if there are multiple lists with 142 comments, list the user id of the person who created the list",list that has 142 comments refers to list_comments = 142,SELECT user_id FROM lists WHERE list_comments = 142
movie_platform,What is Jeannot Szwarc's most popular movie and what is its average rating score?,Jeannot Szwarc's refers to director_name = 'Jeannot Szwarc'; most popular movie refers to MAX(movie_popularity); average rating score refers to avg(rating_score),"SELECT T2.movie_title, AVG(T1.rating_score) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.director_name = 'Jeannot Szwarc' ORDER BY T2.movie_popularity DESC LIMIT 1"
movie_platform,"Who is the director that directed the highest number of movies in the 70s? If there are multiple directors with the same amount of movies, list all of their names and indicate the highest rating score that those movies got from the users.",highest number of movies COUNT(T1.movie_id); in the 70s refers to movie_release_year between 1970 and 1979,"SELECT T2.director_name, T1.rating_score FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_release_year BETWEEN 1970 AND 1979 GROUP BY T2.director_id ORDER BY COUNT(T2.movie_id) DESC LIMIT 1"
movie_platform,"Between 1/1/2010 to 12/31/2020, how many users, who were a trialist when they created the list, gave the movie ""The Secret Life of Words"" a rating score of 3?","Between 1/1/2010 to 12/31/2020 refers to rating_timestamp_utc between '2010-01-01%' and '2020-12-31%'; a trialist refers to user_trialist = 1; movie ""The Secret Life of Words"" refers to movie_title = 'The Secret Life of Words'; rating score of 3 refers to rating_score = 3",SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'The Secret Life of Words' AND T1.rating_score = 3 AND T1.user_trialist = 0 AND T1.rating_timestamp_utc BETWEEN '2010%' AND '2020%'
movie_platform,What is the name of the movie whose critic received the highest amount of likes? Indicate the URL to the rating on Mubi.,critic received the highest amount of likes refers to MAX(critic_likes);,"SELECT T2.movie_title, T1.rating_url FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id ORDER BY T1.critic_likes DESC LIMIT 1"
movie_platform,What are the top 5 most popular movies of the 21st century? Indicate how many users gave it a rating score of 5.,most popular movies refers to MAX(movie_popularity); rating score of 5 refers to rating_score = 5; movies of the 21st century refers to movie_release_year> = 2000,"SELECT DISTINCT T2.movie_id, SUM(T1.rating_score = 5) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id ORDER BY T2.movie_popularity DESC LIMIT 5"
movie_platform,"What is the average number of followers of the lists created by the user who rated the movie ""Pavee Lackeen: The Traveller Girl"" on 3/27/2011 at 2:06:34 AM?","average number of followers refers to AVG(list_followers); movie ""Pavee Lackeen: The Traveller Girl"" refers to movie_title = 'Pavee Lackeen: The Traveller Girl'; on 3/27/2011 at 2:06:34 AM refers to rating_timestamp_utc = '2011-03-27 02:06:34'",SELECT CAST(SUM(T4.list_followers) AS REAL) / COUNT(T2.list_id) FROM ratings AS T1 INNER JOIN lists_users AS T2 ON T1.user_id = T2.user_id INNER JOIN movies AS T3 ON T1.movie_id = T3.movie_id INNER JOIN lists AS T4 ON T2.list_id = T4.list_id WHERE T3.movie_title LIKE 'Pavee Lackeen: The Traveller Girl' AND T1.rating_timestamp_utc LIKE '2011-03-27 02:06:34'
movie_platform,"Between 1/1/2017 to 12/31/2017, how many users who were eligible for trial when they rated the movie ""Patti Smith: Dream of Life""and what is the image URL to the movie on Mubi?","Between 1/1/2017 to 12/31/2017 refers to rating_timestamp_utc between '2017-01-01 00:00:00' and '2017-12-31 00:00:00'; eligible for trial refers to user_eligible_for_trial = 1; movie ""Patti Smith: Dream of Life"" refers to movie_title = 'Patti Smith: Dream of Life'","SELECT COUNT(T1.user_id), T2.movie_image_url FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE datetime(T1.rating_timestamp_utc) BETWEEN '2017-01-01 00:00:00' AND '2017-12-31 00:00:00'"
movie_platform,What is the average number of number of movies added to the lists of user 8516503? Indicate how many movies did he/she give a rating score of 5.,average number of number of movies refers to AVG(list_movie_number); user 8516503 refers to user_id = 8516503; rating score of 5 refers to rating_score = 5,"SELECT AVG(T3.list_movie_number) , SUM(CASE WHEN T1.rating_score = 5 THEN 1 ELSE 0 END) FROM ratings AS T1 INNER JOIN lists_users AS T2 ON T1.user_id = T2.user_id INNER JOIN lists AS T3 ON T2.user_id = T3.user_id WHERE T1.user_id = 8516503"
movie_platform,Who is the director of the most popular movie of all time and when was it released? Indicate the average rating score of the users who were on a trialist when they rated the movie.,most popular movie of all time refers to MAX(movie_popularity); a trialist refers to user_trialist = 1; average rating score = AVG(rating_score),"SELECT T1.director_name, T1.movie_release_year , SUM(T2.rating_score) / COUNT(T2.user_id) FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_trialist = 1 ORDER BY T1.movie_popularity DESC LIMIT 1"
movie_platform,What is the name of the movie that was rated recently by user 57756708?,user 57756708 refers to user_id = 57756708; rated recently refers to MAX(rating_timestamp_utc),SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 57756708 ORDER BY T1.rating_timestamp_utc DESC LIMIT 1
movie_platform,What are the top 10 oldest movies and what are the average rating score for each movie? Indicate the name of the director and when the movies were released.,the average rating score refers to AVG(T2.rating_score); oldest movies refers to MIN(rating_timestamp_utc),"SELECT T2.movie_id, AVG(T1.rating_score), T2.director_name, T2.movie_release_year FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id ORDER BY T1.rating_timestamp_utc ASC LIMIT 10"
book_publishing_company,Which date has the most ordered quantity? What is the total order quantity on that day?,total quantity refers to qty; most ordered quantity refers to order with the highest quantity where MAX(sum(qty)),"SELECT ord_date, SUM(qty) FROM sales GROUP BY ord_date ORDER BY SUM(qty) DESC LIMIT 1"
book_publishing_company,What is the title with the most ordered quantity in year 1992?,total quantity refers to qty; most ordered quantity refers to order with the highest quantity where MAX(count(qty)); date refers to ord_date; year 1992 refers to YEAR(ord_date) = 1992,"SELECT T2.title FROM sales AS T1 INNER JOIN titles AS T2 ON T1.title_id = T2.title_id WHERE STRFTIME('%Y', T1.ord_date) = '1992' ORDER BY T1.qty DESC LIMIT 1"
book_publishing_company,"List the title, price and publication date for all sales with 'ON invoice' payment terms.",publication date refers to pubdate; payment terms refers to payterms; payterms = 'ON invoice',"SELECT T2.title, T2.price, T2.pubdate FROM sales AS T1 INNER JOIN titles AS T2 ON T1.title_id = T2.title_id WHERE T1.payterms = 'ON invoice'"
book_publishing_company,What is the title that have at least 10% royalty without minimum range amount.,at least 10% royalty refers to royalty > = 10; minimum range is synonym for low range which refers to lorange; without minimum range amount refers to lorange <> 0,SELECT T1.title FROM titles AS T1 INNER JOIN roysched AS T2 ON T1.title_id = T2.title_id WHERE T2.lorange = 0 AND T2.royalty >= 10
book_publishing_company,State the title and royalty percentage for title ID BU2075 between 10000 to 50000 range.,lorange mean low range; hirange mean high range; range refers to between the low and high range; lorange>10000; hirange<12000,"SELECT T1.title, T2.royalty FROM titles AS T1 INNER JOIN roysched AS T2 ON T1.title_id = T2.title_id WHERE T2.lorange > 10000 AND T2.hirange < 50000 AND T1.title_ID = 'BU2075'"
book_publishing_company,"Among the titles with royalty percentage, which title has the greatest royalty percentage. State it's minimum range to enjoy this royalty percentage.",minimum range is synonym for low range which refers to lorange,"SELECT T1.title, T2.lorange FROM titles AS T1 INNER JOIN roysched AS T2 ON T1.title_id = T2.title_id ORDER BY T2.royalty DESC LIMIT 1"
book_publishing_company,Provide a list of titles together with its publisher name for all publishers located in the USA.,publisher name refers to pub_name;,"SELECT T1.title, T2.pub_name FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T2.country = 'USA'"
book_publishing_company,State the royalty percentage for the most year to date sale title within the 20000 range.,most year to date sales refers to MAX(ytd_sales); range limit means high range which refers to hirange; the 20000 range refers to hirange<20000,SELECT MAX(T1.ytd_sales) FROM titles AS T1 INNER JOIN roysched AS T2 ON T1.title_id = T2.title_id WHERE T2.lorange > 20000 AND T2.hirange < 20000
book_publishing_company,List all titles published in year 1991. Also provide notes details of the title and the publisher's name.,publisher name refers to pub_name; publication date refers to pubdate; published in year 1991 refers to YEAR(pubdate) = 1991,"SELECT T1.title, T1.notes, T2.pub_name FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE STRFTIME('%Y', T1.pubdate) = '1991'"
book_publishing_company,List all titles with sales of quantity more than 20 and store located in the CA state.,qty is abbreviation for quantity; sales of quantity more than 20 refers to qty>20; store refers to stor_name,"SELECT T1.title, T2.qty FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id INNER JOIN stores AS T3 ON T2.stor_id = T3.stor_id WHERE T2.qty > 20 AND T3.state = 'CA'"
book_publishing_company,Name the store with the highest quantity in sales? What is the least quantity title from the store's sale?,qty is abbreviation for quantity; highest quantity refers to MAX(qty); least quantity refers to MIN(qty),"SELECT T3.stor_id, T2.title FROM sales AS T1 INNER JOIN titles AS T2 ON T1.title_id = T2.title_id INNER JOIN stores AS T3 ON T3.stor_id = T1.stor_id WHERE T3.stor_id = ( SELECT stor_id FROM sales GROUP BY stor_id ORDER BY SUM(qty) DESC LIMIT 1 ) GROUP BY T3.stor_id, T2.title ORDER BY SUM(T1.qty) ASC LIMIT 1"
book_publishing_company,Name the title and publisher for title ID BU 2075. Provide all the royalty percentage for all ranges.,name the publisher refers to pub_name,"SELECT T1.title, T3.pub_name, T2.lorange, T2.hirange, T2.royalty FROM titles AS T1 INNER JOIN roysched AS T2 ON T1.title_id = T2.title_id INNER JOIN publishers AS T3 ON T1.pub_id = T3.pub_id WHERE T1.title_id = 'BU2075'"
book_publishing_company,Name the store with ID 7066 and calculate the percentage of the the quantity ordered that were on 'Net 30' payment terms.,"store with ID 7066 refers to stor_ID = '7066'; 'Net 60' payment terms refers to payterm = 'Net 60'; qty is abbreviation for quantity; percentage = DIVIDE(payterms = 'Net 60', sum(qty))*100","SELECT T2.stor_name , CAST(SUM(CASE WHEN payterms = 'Net 30' THEN qty ELSE 0 END) AS REAL) * 100 / SUM(qty) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id WHERE T1.stor_id = '7066' GROUP BY T2.stor_name"
book_publishing_company,State the publisher name for publisher ID 877? Calculate its average year to date sales.,publisher id refers to pub_id; publisher name refers to pub_name; average year to date sales = AVG(ytd_sales),"SELECT T2.pub_name, AVG(T1.ytd_sales) FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T1.pub_id = '0877' GROUP BY T2.pub_name"
book_publishing_company,Name all employees who were hired before year 1990.,hired before year 1990 refers to YEAR(hire_date)<1990,"SELECT fname, lname FROM employee WHERE STRFTIME('%Y', hire_date) < '1990'"
book_publishing_company,"Which employee has the lowest job level. State the first name, last name and when he /she was hired.",lowest job level refers to MIN(job_lvl),"SELECT fname, lname, hire_date FROM employee ORDER BY job_lvl LIMIT 1"
book_publishing_company,In which year has the most hired employees?,most hired employees refers to MAX(count(emp_id)),"SELECT STRFTIME('%Y', hire_date) FROM employee GROUP BY STRFTIME('%Y', hire_date) ORDER BY COUNT(emp_id) DESC LIMIT 1"
book_publishing_company,List all employees who are at the maximum level in their job designation.,maximum level in their job designation refers to job_lvl = MAX(max_lvl),"SELECT T1.fname, T1.lname FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.job_lvl = T2.max_lvl"
book_publishing_company,Name the Chief Executive Officer and when he/she was hired.,Chief Financial Offer is a job description which refers to job_desc,"SELECT T1.fname, T1.lname, T1.hire_date FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T2.job_desc = 'Chief Financial Officier'"
book_publishing_company,Who are the employees working for publisher not located in USA? State the employee's name and publisher name.,not located at USA refers to country! = 'USA',"SELECT T1.fname, T1.lname, T2.pub_name FROM employee AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T2.country != 'USA'"
book_publishing_company,List all employees working for publisher 'GGG&G'. State their name and job description.,"name = fname, lname; job description refers to job_desc; publisher refers pub_name","SELECT T1.fname, T1.lname, T3.job_desc FROM employee AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id INNER JOIN jobs AS T3 ON T1.job_id = T3.job_id WHERE T2.pub_name = 'GGG&G'"
book_publishing_company,"For each publisher, state the type of titles they published order by the publisher name.",publisher name refers to pub_name,"SELECT DISTINCT T2.pub_name, T1.type FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id ORDER BY T2.pub_name"
book_publishing_company,Name the publisher which has the most titles published in 1991.,most title published refers to MAX(count(title_id); published in 1991 refers to YEAR(pubdate) = 1991,"SELECT T2.pub_name FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE STRFTIME('%Y', T1.pubdate) = '1991' GROUP BY T1.pub_id, T2.pub_name ORDER BY COUNT(T1.title_id) DESC LIMIT 1"
book_publishing_company,Name the title with the highest price published by 'Binnet & Hardley'.,published by refers to pub_name,SELECT T1.title FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T2.pub_name = 'Binnet & Hardley' ORDER BY T1.price DESC LIMIT 1
book_publishing_company,"Among all employees, who have job level greater than 200. State the employee name and job description.",job level greater than 200 refers to job_lvl>200; job description refers to job_desc,"SELECT T1.fname, T1.lname, T2.job_desc FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.job_lvl > 200"
book_publishing_company,Name all the authors for all business titles.,business title refers to title under business where type = 'business',"SELECT T3.au_fname, T3.au_lname FROM titles AS T1 INNER JOIN titleauthor AS T2 ON T1.title_id = T2.title_id INNER JOIN authors AS T3 ON T2.au_id = T3.au_id WHERE T1.type = 'business'"
book_publishing_company,List all the titles and year to date sales by author who are not on contract.,year to date sales refers to ytd_sales; not on contract refers to contract = 0,"SELECT T1.title_id, T1.ytd_sales FROM titles AS T1 INNER JOIN titleauthor AS T2 ON T1.title_id = T2.title_id INNER JOIN authors AS T3 ON T2.au_id = T3.au_id WHERE T3.contract = 0"
book_publishing_company,"For all authors from CA who are not on contract, which title of his/hers has the most year to date sales.",year to date sales refers to ytd_sales; on contract refers to contract = 1,SELECT T1.title FROM titles AS T1 INNER JOIN titleauthor AS T2 ON T1.title_id = T2.title_id INNER JOIN authors AS T3 ON T2.au_id = T3.au_id WHERE T3.contract = 0 AND T3.state = 'CA' ORDER BY T1.ytd_sales DESC LIMIT 1
book_publishing_company,"Name all the authors for 'Sushi, Anyone?'.","most year to date sales refers to MAX(ytd_sales); on contract refers to contract = 1; name of author = au_fname, au_lname","SELECT T3.au_fname, T3.au_lname FROM titles AS T1 INNER JOIN titleauthor AS T2 ON T1.title_id = T2.title_id INNER JOIN authors AS T3 ON T2.au_id = T3.au_id WHERE T1.title = 'Sushi, Anyone?'"
book_publishing_company,Calculate the percentage of the employees who are Editor or Designer?,"Editor or Auditor are job description which refers to job_desc; percentage = DIVIDE(count(job_desc = 'Editor' or job_desc = 'Auditor'), count(emp_id))*100","SELECT CAST(SUM(CASE WHEN T2.job_desc IN ('Editor', 'Designer') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.job_id) FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id"
book_publishing_company,List all titles which have year to date sales higher than the average order by pubisher name.,year to date sales refers to ytd_sales; average order = AVG(ytd_sales),SELECT T1.title FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T1.ytd_sales > ( SELECT AVG(ytd_sales) FROM titles )
book_publishing_company,How many publishers are in the USA?,,SELECT COUNT(pub_id) FROM publishers WHERE country = 'USA'
book_publishing_company,What is the publisher's information of New Moon Books?,publisher name refers to pub_name; New Moon Books is a publisher name,SELECT T1.pr_info FROM pub_info AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T2.pub_name = 'New Moon Books'
book_publishing_company,Please list the first names of the employees who work as Managing Editor.,Managing Editor is a job description which refers to job_desc,SELECT T1.fname FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T2.job_desc = 'Managing Editor'
book_publishing_company,What is the highest level of job to get to for the employee who got hired the earliest?,highest job level refers to MAX(job_lvl); hired the earliest refers to MIN(hire_date),SELECT T2.max_lvl FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id ORDER BY T1.hire_date LIMIT 1
book_publishing_company,In which city is the store with the highest total sales quantity located?,qty is abbreviation for quantity; highest sales quantity refers to MAX(qty),SELECT T2.city FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id GROUP BY T2.city ORDER BY SUM(T1.qty) DESC LIMIT 1
book_publishing_company,What is the price of the book that sells the best?,qty is abbreviation for quantity; sells the best mean with the most sales quantity; MAX(qty),SELECT T2.price FROM sales AS T1 INNER JOIN titles AS T2 ON T1.title_id = T2.title_id ORDER BY T1.qty DESC LIMIT 1
book_publishing_company,"Please list the stores that ordered the book ""Life Without Fear"".",store name refers to stor_name,SELECT T2.stor_name FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id INNER JOIN titles AS T3 ON T1.title_id = T3.title_id WHERE T3.title = 'Life Without Fear'
book_publishing_company,"Among the stores that have ordered the book ""Life Without Fear"", how many of them are located in Massachusetts?",Massachusetts is a state,SELECT COUNT(T1.stor_id) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id INNER JOIN titles AS T3 ON T1.title_id = T3.title_id WHERE T2.state = 'Massachusetts'
book_publishing_company,"In which country is the publisher of the book ""Life Without Fear"" located?",Life Without Fear is book title,SELECT T2.country FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T1.title = 'Life Without Fear'
book_publishing_company,What is the publisher that has published the most expensive book?,most expensive book refers to MAX(price),SELECT T2.pub_name FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id ORDER BY T1.price DESC LIMIT 1
book_publishing_company,"Among the publishers in the USA, how many of them have published books that are over $15?",are over $15 refers to price>15,SELECT COUNT(DISTINCT T1.pub_id) FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T2.country = 'USA' AND T1.price > 15
book_publishing_company,Please give more detailed information about the first three books that sell the best.,qty is abbreviation for quantity; sells the best mean with the most sales quantity; MAX(qty),SELECT T1.notes FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id ORDER BY T2.qty DESC LIMIT 3
book_publishing_company,How many books on business have the bookstores in Massachusetts ordered?,Massachusetts is a state; business books refers to type = 'business',SELECT SUM(T1.qty) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id INNER JOIN titles AS T3 ON T1.title_id = T3.title_id WHERE T2.state = 'Massachusetts' AND T3.type = 'business'
book_publishing_company,"What is the average quantity of each order for the book ""Life Without Fear""?",qty is abbreviation for quantity; average quantity order = AVG(qty),SELECT CAST(SUM(T2.qty) AS REAL) / COUNT(T1.title_id) FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id WHERE T1.title = 'Life Without Fear'
book_publishing_company,What is the average level employees working as Managing Editor are at? How many levels are there between the average level and the highest level?,Managing Editor is a job description which refers to job_desc; job level refers to job_lvl; highest level job refers to max_lvl; levels between the average level and the highest level = SUBTRACT(max_lvl; AVG(job_lvl)),"SELECT AVG(T2.job_lvl), T1.max_lvl - AVG(T2.job_lvl) FROM jobs AS T1 INNER JOIN employee AS T2 ON T1.job_id = T2.job_id WHERE T1.job_desc = 'Managing Editor' GROUP BY T2.job_id, T1.max_lvl"
book_publishing_company,Which one is the cheapest business book?,business books refers to type = 'business'; cheapest book refers to MIN(price),SELECT title FROM titles WHERE type = 'business' ORDER BY price LIMIT 1
book_publishing_company,Which type of book had the most pre-paid amount?,most pre-paid amount refers to MAX(advance),SELECT type FROM titles ORDER BY advance DESC LIMIT 1
book_publishing_company,What's the royalty for the bestseller book?,qty is abbreviation for quantity; bestseller means with the most sales quantity; MAX(qty),SELECT royalty FROM titles ORDER BY ytd_sales DESC LIMIT 1
book_publishing_company,Which job level is O'Rourke at?,job level refers to job_lvl,SELECT job_lvl FROM employee WHERE lname = 'O''Rourke'
book_publishing_company,Show me the employ id of the highest employee who doesn't have a middle name.,highest employee refers to employee with the highest job level; MAX(job_lvl),SELECT emp_id FROM employee WHERE minit = '' ORDER BY job_lvl DESC LIMIT 1
book_publishing_company,"Is the author of ""Sushi, Anyone?"" on the contract?",contract = 1 means on contract; contract = 0 means not on contract,"SELECT T1.contract FROM authors AS T1 INNER JOIN titleauthor AS T2 ON T1.au_id = T2.au_id INNER JOIN titles AS T3 ON T2.title_id = T3.title_id WHERE T3.title = 'Sushi, Anyone?'"
book_publishing_company,Which publisher had the highest job level? Give his/her full name.,highest job level refers to MAX(job_lvl),"SELECT T1.fname, T1.minit, T1.lname FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id ORDER BY T1.job_lvl DESC LIMIT 1"
book_publishing_company,What's Pedro S Afonso's job title?,job title means job description which refers to job_desc,SELECT T2.job_desc FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.fname = 'Pedro' AND T1.minit = 'S' AND T1.lname = 'Afonso'
book_publishing_company,How many levels are there left for Diego W Roel to reach if he/she could go to the max level for his/her position?,"max level for his position refers to max_lvl; job level refers to job_lvl; level left to reach the max = SUBTRACT(max_lvl, job_lvl)",SELECT T2.max_lvl - T1.job_lvl FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.fname = 'Diego' AND T1.minit = 'W' AND T1.lname = 'Roel'
book_publishing_company,What's on the notes for the order happened on 1994/9/14?,order happened on refers to ord_date,"SELECT T1.notes FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id WHERE STRFTIME('%Y-%m-%d', T2.ord_date) = '1994-09-14'"
book_publishing_company,List the type of the book for the order which was sold on 1993/5/29.,sold on refers to ord_date,"SELECT DISTINCT T1.type FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id WHERE STRFTIME('%Y-%m-%d', T2.ord_date) = '1993-05-29'"
book_publishing_company,Tell me about the information of the French publisher.,French publisher means publisher in France where country = 'France',SELECT T1.pr_info FROM pub_info AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T2.country = 'France'
book_publishing_company,"What's the publisher of the book ""Silicon Valley Gastronomic Treats""? Give the publisher's name.",publisher name refers to pub_name; Silicon Valley Gastronomic Treats is the title of a book,SELECT T2.pub_name FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T1.title = 'Silicon Valley Gastronomic Treats'
book_publishing_company,Which city did Victoria P Ashworth work in?,,SELECT T2.city FROM employee AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T1.fname = 'Victoria' AND T1.minit = 'P' AND T1.lname = 'Ashworth'
book_publishing_company,How many sales did the store in Remulade make?,Remulade is a city; sales in the store refers to ord_num,SELECT COUNT(T1.ord_num) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id WHERE T2.city = 'Remulade'
book_publishing_company,"For the quantities, what percent more did the store in Fremont sell than the store in Portland in 1993?","qty is abbreviation for quantity; Fremont and Portland are name of city; sell in 1993 refers to YEAR(ord_date) = 1993; percentage = DIVIDE(
SUBTRACT(SUM(qty where city = ‘Fremont’ and year(ord_date = 1993)), 
SUM(qty where city = ‘Portland’ and year(ord_date = 1993))), SUM(qty where city = ‘Fremont’ and year(ord_date = 1993)) *100","SELECT CAST(SUM(CASE WHEN T2.city = 'Fremont' THEN qty END) - SUM(CASE WHEN T2.city = 'Portland' THEN qty END) AS REAL) * 100 / SUM(CASE WHEN T2.city = 'Fremont' THEN qty END) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id WHERE STRFTIME('%Y', T1.ord_date) = '1993'"
book_publishing_company,"Among all the employees, how many percent more for the publishers than designers?","publisher and designer are job descriptions which refers to job_desc; percentage more = 100*(SUBTRACT(SUM(CASE WHERE job_desc = 'publisher), SUM(CASE WHERE job_desc = 'designer'))",SELECT CAST(SUM(CASE WHEN T2.job_desc = 'publisher' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.job_desc = 'designer' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.job_id) FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id
book_publishing_company,"Find and list the full name of employees who were hired between 1990 and 1995. Also, arrange them in the descending order of job level.",job level refers to job_lvl; YEAR(hire_date) between 1990 and 1995,"SELECT fname, minit, lname FROM employee WHERE STRFTIME('%Y', hire_date) BETWEEN '1990' AND '1995' ORDER BY job_lvl DESC"
book_publishing_company,"Which titles has above average royalty rate? Give those title's name, type and price?","average royalty rate = DIVIDE(SUM(royalty), COUNT(title_id))","SELECT DISTINCT T1.title, T1.type, T1.price FROM titles AS T1 INNER JOIN roysched AS T2 ON T1.title_id = T2.title_id WHERE T2.royalty > ( SELECT CAST(SUM(royalty) AS REAL) / COUNT(title_id) FROM roysched )"
book_publishing_company,"In 1994 which title had less order quanty than the average order quantity? Find the title name, type and price.","orders in 1994 refers to YEAR(ord_date) = 1994; order quantity refers to number of order expressed by ord_num; average order quantity = DIVIDE(SUM(ord_num), COUNT(title_id))","SELECT DISTINCT T1.title, T1.type, T1.price FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id WHERE T2.ord_date LIKE '1994%' AND T2.Qty < ( SELECT CAST(SUM(T4.qty) AS REAL) / COUNT(T3.title_id) FROM titles AS T3 INNER JOIN sales AS T4 ON T3.title_id = T4.title_id )"
book_publishing_company,"List the title name, type, and price of the titles published by New Moon Books. Arrange the list in ascending order of price.",Eric the Read Books is a publisher which refers to pub_name;,"SELECT T1.title, T1.type, T1.price FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T2.pub_name = 'New Moon Books' ORDER BY T1.price"
book_publishing_company,"In the books published by US publishers, which book has the highest royalty? List these books in the descending order of royalty.",US publisher refers publisher in the US where country = 'USA';,SELECT T1.title FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id INNER JOIN roysched AS T3 ON T1.title_id = T3.title_id WHERE T2.country = 'USA' ORDER BY T1.royalty DESC
book_publishing_company,Find the difference between the average royalty of titles published by US and non US publishers?,"US publisher refers publisher in the US where country = 'USA'; non-US publishers refers publisher not in the US where country! = 'USA'; difference = SUBTRACT(AVG(royalty) where country = 'USA', AVG(royalty) where country! = 'USA'))",SELECT (CAST(SUM(CASE WHEN T2.country = 'USA' THEN T1.royalty ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.country = 'USA' THEN 1 ELSE 0 END)) - (CAST(SUM(CASE WHEN T2.country != 'USA' THEN T1.royalty ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.country != 'USA' THEN 1 ELSE 0 END)) FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id INNER JOIN roysched AS T3 ON T1.title_id = T3.title_id
book_publishing_company,Calculate the average level difference between the Marketing editors hired by the US and non-US publishers?,Marketing manager is a job description which refers to job_desc; US publisher refers publisher in the US where country = 'USA'; non-US publishers refers publisher not in the US where country! = 'USA'; job level refers to job_lvl; average level = AVG(job_lvl),SELECT (CAST(SUM(CASE WHEN T1.country = 'USA' THEN job_lvl ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.country = 'USA' THEN 1 ELSE 0 END)) - (CAST(SUM(CASE WHEN T1.country != 'USA' THEN job_lvl ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.country != 'USA' THEN 1 ELSE 0 END)) FROM publishers AS T1 INNER JOIN employee AS T2 ON T1.pub_id = T2.pub_id INNER JOIN jobs AS T3 ON T2.job_id = T3.job_id WHERE T3.job_desc = 'Managing Editor'
book_publishing_company,"Which title is about helpful hints on how to use your electronic resources, which publisher published it and what is the price of this book?",publisher refers to pub_name; about the title refers to notes,"SELECT T1.title, T2.pub_name, T1.price FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T1.notes = 'Helpful hints on how to use your electronic resources to the best advantage.'"
book_publishing_company,"Of the titles, which title is about the Carefully researched study of the effects of strong emotions on the body, which state-based publisher published this book, and what is the year-to-date sale?",year to date sales refers to ytd_sales; about the title refers to notes,"SELECT T1.title, T2.pub_name, T1.ytd_sales FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T1.notes = 'Carefully researched study of the effects of strong emotions on the body. Metabolic charts included.'"
book_publishing_company,Name the top five titles that sold more than average and list them in descending order of the number of sales in California stores?,"qty is abbreviation for quantity; sold more than average refers to qty > AVG(qty); california refers to state = 'CA""",SELECT T1.title FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id INNER JOIN publishers AS T3 ON T1.pub_id = T3.pub_id WHERE T2.qty > ( SELECT CAST(SUM(qty) AS REAL) / COUNT(title_id) FROM sales ) AND T3.state = 'CA' ORDER BY T2.qty DESC LIMIT 5
retail_complains,On which day was the most verbose complaint received?,"day received refers to ""Date received""; most verbose complaint refers to MAX(ser_time);",SELECT `Date received` FROM callcenterlogs WHERE ser_time = ( SELECT MAX(ser_time) FROM callcenterlogs )
retail_complains,When did the earliest complaint start on 2017/3/22?,"earliest complaint refers to oldest ser_start; on 2017/3/22 refers to ""Date received"" = '2017-03-22';",SELECT MIN(ser_time) FROM callcenterlogs WHERE `Date received` = '2017-03-22'
retail_complains,"Which complaint is more urgent, complaint ID CR2400594 or ID CR2405641?",more urgent refers to MAX(priority);,SELECT CASE WHEN SUM(CASE WHEN `Complaint ID` = 'CR2400594' THEN priority END) > SUM(CASE WHEN `Complaint ID` = 'CR2405641' THEN priority END) THEN 'CR2400594' ELSE 'CR2405641' END FROM callcenterlogs
retail_complains,Please list the full names of all the male clients born after the year 1990.,"full names = first, middle, last; male refers to sex = 'Male'; year > 1990;","SELECT first, middle, last FROM client WHERE year > 1990"
retail_complains,How many complaints have the client Diesel Galloway filed?,,SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Diesel' AND T1.last = 'Galloway'
retail_complains,What is the detailed product of the complaint filed by Diesel Galloway on 2014/7/3?,"detailed product refers to ""sub-product""; on 2014/7/3 refers to ""Date received"" = '2014-07-03';",SELECT T2.`Sub-product` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Diesel' AND T1.last = 'Galloway' AND T2.`Date received` = '2014-07-03'
retail_complains,Was the tag in the complaint filed by Matthew Pierce on 2016/10/28 approved by himself?,"on 2016/10/28 refers to Date received = '2016-10-28'; ""Consumer consent provided?"" in (null, 'N/A', 'Empty') means that the company didn't get the permission of consent; ""Consumer consent provided?"" not in (null, 'N/A', 'Empty') means that customers provide the consent for this tag;","SELECT CASE WHEN T2.`Consumer consent provided?` IN (NULL, 'N/A', 'Empty') THEN 'No' ELSE 'Yes' END FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Matthew' AND T1.last = 'Pierce' AND T2.`Date received` = '2016-10-28'"
retail_complains,For how long was the complaint filed by Matthew Pierce on 2016/10/28 delayed?,"on 2016/10/28 refers to ""Date received"" = '2016-10-28'; delayed = SUBTRACT(""Date sent to company', 'Date received"");","SELECT 365 * (strftime('%Y', T2.`Date sent to company`) - strftime('%Y', T2.`Date received`)) + 30 * (strftime('%M', T2.`Date sent to company`) - strftime('%M', T2.`Date received`)) + (strftime('%d', T2.`Date sent to company`) - strftime('%d', T2.`Date received`)) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Matthew' AND T1.last = 'Pierce' AND T2.`Date received` = '2016-10-28'"
retail_complains,What is the full name of the client whose complaint on 2017/3/27 was received by MICHAL?,"full names = first, middle, last; on 2017/3/27 refers to ""Date received"" = '2017-03-27'; MICHAL refers to server = 'MICHAL';","SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.`Date received` = '2017-03-27' AND T2.server = 'MICHAL'"
retail_complains,For how long did the complaint filed on 2017/3/27 by Rachel Hicks last?,"how long did the complaint filed last refers to ser_time; on 2017/3/27 refers to ""Date received"" = '2017-03-27';",SELECT T2.ser_time FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.first = 'Rachel' AND T1.last = 'Hicks' AND T2.`Date received` = '2017-03-27'
retail_complains,"Among all the clients from the New York city, how many of them have filed a complaint on the issue of Deposits and withdrawals?",,SELECT COUNT(T2.Issue) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.Issue = 'Deposits and withdrawals' AND T1.city = 'New York City'
retail_complains,Please list the full names of all the clients whose complaints are still in progress.,"full name = first, middle, last; complaints are still in progress refers to ""Company response to consumer"" = 'In progress';","SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Company response to consumer` = 'In progress'"
retail_complains,"Among the clients who did receive a timely response for their complaint, how many of them are from New York?","did not receive a timely response refers to ""Timely response?"" = 'No'; New York refers to city = 'New York';",SELECT COUNT(T1.city) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Timely response?` = 'No' AND T1.city = 'New York City'
retail_complains,How many complaints on credit cards in the year 2016 were filed by male clients?,credit cards refers to Product = 'Credit card'; 2016 refers to year(Date received) = 2016; male refers to sex = 'Male';,"SELECT COUNT(T1.sex) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE strftime('%Y', T2.`Date received`) = '2016' AND T1.sex = 'Male' AND T2.Product = 'Credit card'"
retail_complains,Which division is Diesel Galloway in?,,SELECT T2.division FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.first = 'Diesel' AND T1.last = 'Galloway'
retail_complains,Please list the full names of all the male clients in the Pacific division.,"full names = first, middle, last; male refers to sex = 'Male';","SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.division = 'Pacific' AND T1.sex = 'Male'"
retail_complains,What is the average number of complaints on credit cards filed by clients from New York in the 3 consecutive years starting from 2015?,"average = AVG(Complaint ID); credit cards refers to Product = 'Credit card'; New York refers to city = 'New York'; 3 consecutive years starting from 2015 refers to ""Date received"" BETWEEN 2015 AND 2017;","SELECT CAST(COUNT(T2.`Complaint ID`) AS REAL) / 3 AS average FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE strftime('%Y', T2.`Date received`) BETWEEN '2015' AND '2017' AND T1.city = 'New York City' AND T2.Product = 'Credit card'"
retail_complains,What is the percentage of the increase of complaints filed by the clients from New York from the year 2016 to the year 2017?,"percentage of increase = MULTIPLY(DIVIDE(SUBTRACT(SUM(year(""Date received"") = 2017), SUM(year(""Date received"") = 2016)), SUM(year(""Date received"") = 2016)), 1.0); New York refers to city = 'New York'; year(""Date received"") BETWEEN 2016 AND 2017;","SELECT 100.0 * (SUM(CASE WHEN strftime('%Y', T2.`Date received`) = '2017' THEN 1 ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T2.`Date received`) = '2016' THEN 1 ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', T2.`Date received`) = '2016' THEN 1 ELSE 0 END) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'New York City'"
retail_complains,"What was the serve time for the complaint call from client ""C00007127"" on 2017/2/22?","serve time refers to ser_time; longer ser_time means more verbose or longer complaint; on 2017/2/22 refers to ""Date received"" = '2017-02-22';",SELECT T1.ser_time FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T2.Client_ID = 'C00007127' AND T1.`Date received` = '2017-02-22'
retail_complains,"Which state does the owner of ""wyatt.collins@gmail.com"" live in? Give the full name of the state.",full name of the state refers to state_name;,SELECT T1.state FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.email = 'wyatt.collins@gmail.com'
retail_complains,Which detailed product did Mr Lennox Oliver Drake complain about?,"detailed product refers to ""Sub-product""; Mr refers to sex = 'Male';",SELECT DISTINCT T2.`Sub-product` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Lennox' AND T1.middle = 'Oliver' AND T1.last = 'Drake' AND T1.sex = 'Male'
retail_complains,What was the detailed issue did Mr Gunner Omer Fuller complain about?,detailed issue refers to Sub-issue; Mr refers to sex = 'Male';,SELECT T2.`Sub-issue` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Gunner' AND T1.middle = 'Omer' AND T1.last = 'Fuller' AND T1.sex = 'Male'
retail_complains,Did Ms. Lyric Emely Taylor provide the consent for result of the complaint call on 2016/5/20?,"Ms refers to sex = 'Female'; ""Consumer consent provided?"" in (null, 'N/A', 'Empty') means that the company didn't get the permission of consent; ""Consumer consent provided?"" not in (null, 'N/A', 'Empty') means the customers provide the consent; on 2016/5/20 refers to Date received = '2016-05-20';","SELECT CASE WHEN T2.`Consumer consent provided?` IN (NULL, 'N/A', '') THEN 'No' ELSE 'Yes' END FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Lyric' AND T1.middle = 'Emely' AND T1.last = 'Taylor' AND T1.sex = 'Female' AND T2.`Date received` = '2016-05-20'"
retail_complains,How many days delay for the complaint call from Mr. Brantley Julian Stanley on 2012/5/18?,"days delay for the complaint = SUBTRACT(""date sent to company"", ""Date received""); Mr refers to sex = 'Male'; on 2012/5/18 refers to ""Date received"" = '2012-05-18';","SELECT 365 * (strftime('%Y', T2.`Date sent to company`) - strftime('%Y', T2.`Date received`)) + 30 * (strftime('%M', T2.`Date sent to company`) - strftime('%M', T2.`Date received`)) + (strftime('%d', T2.`Date sent to company`) - strftime('%d', T2.`Date received`)) AS days FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Date received` = '2012-05-18' AND T1.sex = 'Male' AND T1.first = 'Brantley' AND T1.middle = 'Julian' AND T1.last = 'Stanley'"
retail_complains,Which district did the review on 2018/9/11 come from? Give the name of the city.,on 2018/9/11 refers to Date = '2017-07-22';,"SELECT T2.district_id, T2.city FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.Date = '2018-09-11'"
retail_complains,What was the review context from Jacksonville on 2017/7/22?,Jacksonville refers to city = 'Jacksonville'; on 2017/7/22 refers to Date = '2017-07-22';,SELECT T1.Reviews FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Jacksonville' AND T1.Date = '2017-07-22'
retail_complains,Which product received a review from Indianapolis on 2016/10/7?,Indianapolis refers to state = 'Indianapolis'; on 2016/10/7 refers to Date = '2013-04-04';,SELECT T1.Product FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' AND T1.Date = '2016-10-07'
retail_complains,"How many stars did ""Eagle Capital"" received from Little Rock on 2013/4/4?",Eagle Capital refers to Product = 'Eagle Capital'; Little Rock is a city; on 2013/4/4 refers to Date = '2013-04-04';,SELECT COUNT(T1.Stars) FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.Product = 'Eagle Capital' AND T2.city = 'Little Rock' AND T1.Date = '2013-04-04'
retail_complains,"For the client who made the complaint call ""CR0217298"", what was his/her birthday？","complaint call refers to Complaint ID; birthday = year, month, day;","SELECT T1.month, T1.day FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Complaint ID` = 'CR0217298'"
retail_complains,"What was the phone of number of the client who made the complaint call ""CR0100432"" ？",complaint call refers to Complaint ID;,SELECT T1.phone FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Complaint ID` = 'CR0100432'
retail_complains,"For all the complaint callers on 2017/3/27, what percentage of the clients are females?","on 2017/3/27 refers to ""Date received"" = '2017-03-27'; percentage = MULTIPLY(DIVIDE(SUM(sex = 'Female' ), COUNT(client_id)), 1.0); females refers to sex = 'Female';",SELECT CAST(SUM(CASE WHEN T1.sex = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.sex) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Date received` = '2017-03-27'
retail_complains,What is the percentage of the complaint calls from Mr Mason Javen Lopez has got the consent provided by the customer?,"percentage = MULTIPLY(DIVIDE(SUM(""Consumer consent provided?"" = 'Consent provided'), COUNT(client_id)), 1.0); Mr refers to sex = 'Male'; consent provided by the customer refers to ""Consumer consent provided?"" = 'Consent provided';",SELECT CAST(SUM(CASE WHEN T2.`Consumer consent provided?` = 'Consent provided' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.`Consumer consent provided?`) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.sex = 'Male' AND T1.first = 'Mason' AND T1.middle = 'Javen' AND T1.last = 'Lopez'
retail_complains,How many priority urgent complaints were received in march of 2017? List the complaint ID of these complaints.,"urgent complaints refers to priority = 2; march of 2017 refers to ""Date received"" BETWEEN '2017-01-01' AND '2017-01-31';",SELECT COUNT(`Complaint ID`) FROM callcenterlogs WHERE `Date received` LIKE '2017-01%' AND priority = ( SELECT MAX(priority) FROM callcenterlogs )
retail_complains,"Please list the full name, date of birth, and email id of the elderly clients in descending order of age.","full name = first, middle, last; date of birth = year, month, day; elderly clients refers to age > 65;","SELECT first, middle, last, year, month , day, email FROM client WHERE age > 65 ORDER BY age DESC"
retail_complains,"Which product got the most five stars, and how many?",most five stars refers to MAX(COUNT(stars = 5));,"SELECT T.Product, MAX(T.num) FROM ( SELECT Product, COUNT(Stars) AS num FROM reviews WHERE Stars = 5 GROUP BY Product ) T"
retail_complains,List all the states in the South region.,,SELECT state FROM state WHERE Region = 'South'
retail_complains,What is the email id of clients whose calls were hung?,email id refers to email; calls were hung refers to outcome = 'Hang';,SELECT T1.email FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.outcome = 'HANG'
retail_complains,Calculate the average age of clients from the Midwest region.,average age = AVG(age);,SELECT CAST(SUM(T1.age) AS REAL) / COUNT(T3.Region) AS average FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN state AS T3 ON T2.state_abbrev = T3.StateCode WHERE T3.Region = 'Midwest'
retail_complains,List the full name and phone number of clients who submitted the complaint via fax.,"full name = first, middle, last; submitted the complaint via fax refers to ""Submitted via"" = 'fax';","SELECT T1.first, T1.middle, T1.last, T1.phone FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Submitted via` = 'Fax'"
retail_complains,Find and list the names of districts which has below-average stars for Eagle Capital.,below average = AVG(stars) < Stars; Eagle Capital refers to Product = 'Eagle Capital';,SELECT T2.division FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.Product = 'Eagle Capital' AND T1.Stars > ( SELECT AVG(Stars) FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id )
retail_complains,"In the calls from the mountain division, how many are from teenage clients?",teenage refers to age BETWEEN 12 AND 20;,SELECT COUNT(T1.age) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.age BETWEEN 12 AND 20 AND T2.division = 'Mountain'
retail_complains,What is the number of complaints related to Credit cards came from female clients?,Credit cards refers to Product = 'Credit card'; female refers to sex = 'female';,SELECT COUNT(T1.sex) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.sex = 'Female' AND T2.Product = 'Credit card'
retail_complains,"Among the clients born between 1980 and 2000, list the name of male clients who complained through referral.","born between 1980 and 2000 refers to year BETWEEN 1980 AND 2000; name = first, middle, last; male refers to sex = 'Male'; complained through refers to ""Submitted via"";","SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.year BETWEEN 1980 AND 2000 AND T1.sex = 'Male' AND T2.`Submitted via` = 'Referral'"
retail_complains,What is the medium through which most complaints are registered in Florida?,"medium refers to ""Submitted via""; most complaints refers to MAX(Complaint ID); Florida refers to state = 'florida';",SELECT T3.`Submitted via` FROM callcenterlogs AS T1 INNER JOIN client AS T2 ON T1.`rand client` = T2.client_id INNER JOIN events AS T3 ON T1.`Complaint ID` = T3.`Complaint ID` WHERE T2.state = 'FL' GROUP BY T1.`Complaint ID` ORDER BY COUNT(T1.`Complaint ID`) DESC LIMIT 1
retail_complains,Calculate the average number of complaints received from New Bedford each year which are closed with explanation.,"average = AVG(""Complaint ID""); New Bedford refers to city = 'New Bedford'; closed with explanation refers to Company response to consumer = 'Closed with explanation';","SELECT STRFTIME('%Y', T3.`Date received`) , CAST(SUM(CASE WHEN T3.`Company response to consumer` = 'Closed with explanation' THEN 1 ELSE 0 END) AS REAL) / COUNT(T3.`Complaint ID`) AS average FROM callcenterlogs AS T1 INNER JOIN client AS T2 ON T1.`rand client` = T2.client_id INNER JOIN events AS T3 ON T1.`Complaint ID` = T3.`Complaint ID` WHERE T2.city = 'New Bedford' GROUP BY strftime('%Y', T3.`Date received`)"
retail_complains,What percentage of consumers from Houston disputed complaints?,"percentage = MULTIPLY(DIVIDE(SUM(""Consumer disputed?"" = 'Yes' AND city = 'Houston'), COUNT(client_id)), 1.0); Houston refers to city = 'Houston';",SELECT CAST(SUM(CASE WHEN T2.`Consumer disputed?` = 'Yes' AND T1.city = 'Houston' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID
retail_complains,Find the number of service members who complained in Syracuse.,service members refers to client.client_id; Syracuse refers to city = 'Syracuse';,SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.Tags = 'Servicemember' AND T1.city = 'Syracuse'
retail_complains,"Among the calls from California, what percentage are priority 1?","California refers to state = 'California'; percentage = MULTIPLY(DIVIDE(SUM(priority = 1), COUNT(""Complaint ID""), 1.0));",SELECT CAST(SUM(CASE WHEN T1.priority = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.priority) FROM callcenterlogs AS T1 INNER JOIN client AS T2 ON T1.`rand client` = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id INNER JOIN state AS T4 ON T3.state_abbrev = T4.StateCode WHERE T4.State = 'California'
retail_complains,Calculate the difference in the average age of elderly and middle-aged clients in the Northeast region.,"difference in the average = SUBTRACT(AVG(age BETWEEN 35 AND 55), AVG( age > 65)); elderly refers to age > 65; middle-aged refers to age BETWEEN 35 AND 55;",SELECT (CAST(SUM(CASE WHEN T1.age BETWEEN 35 AND 55 THEN T1.age ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.age BETWEEN 35 AND 55 THEN 1 ELSE 0 END)) - (CAST(SUM(CASE WHEN T1.age > 65 THEN T1.age ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.age > 65 THEN 1 ELSE 0 END)) AS difference FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN state AS T3 ON T2.state_abbrev = T3.StateCode WHERE T3.Region = 'Northeast'
retail_complains,List by their ID number the 3 longest complaints.,"ID number refers to ""Complaint ID""; longest complaints refers to MAX(ser_time);",SELECT `Complaint ID` FROM callcenterlogs ORDER BY ser_time DESC LIMIT 3
retail_complains,How many clients have an email account other than gmail.com?,email account other than gmail.com refers to email not like '%@gmail.com';,SELECT COUNT(email) FROM client WHERE email NOT LIKE '%@gmail.com'
retail_complains,Identify by their ID all clients who did not give their consent permission.,"did not give their consent permission refers to Consumer consent provided is null, 'N/A', or empty;",SELECT Client_ID FROM events WHERE `Consumer consent provided?` = 'N/A' OR 'Consumer consent provided?' IS NULL OR 'Consumer consent provided?' = ''
retail_complains,List by their ID the complaints received by the company on 25/09/2014 that took the longest.,"ID of the complaints refers to ""Complaint ID""; on 25/09/2014 refers to ""Date sent to company"" = '2014-09-25'; took the longest = MAX(SUBTRACT(""Date sent to company"", ""Date received""));","SELECT `Complaint ID` FROM events WHERE strftime('%J', `Date sent to company`) - strftime('%J', `Date received`) = ( SELECT MAX(strftime('%J', `Date sent to company`) - strftime('%J', `Date received`)) FROM events WHERE `Date sent to company` = '2014-09-25' ) AND `Date sent to company` = '2014-09-25'"
retail_complains,List priority 2 complaints by date received.,,SELECT DISTINCT `Complaint ID` FROM callcenterlogs WHERE priority = 2 ORDER BY `Date received` DESC
retail_complains,How many complaints are not in process with an agent?,not in process with an agent refers to outcome ! = 'AGENT';,SELECT COUNT(outcome) FROM callcenterlogs WHERE outcome != 'AGENT'
retail_complains,How many Credit Card complaints did Sharon handle?,Credit Card refers to Product = 'Credit Card'; Sharon refers to server = 'SHARON';,SELECT COUNT(T1.`Complaint ID`) FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T2.Product = 'Credit card' AND T1.server = 'SHARON'
retail_complains,In which region have the most 1-star reviews been done?,most 1-star reviews refers to MAX(COUNT(stars = 1));,SELECT T3.Region FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN state AS T3 ON T2.state_abbrev = T3.StateCode WHERE T1.Stars = 1 GROUP BY T3.Region ORDER BY COUNT(T3.Region) DESC LIMIT 1
retail_complains,In what years were the clients who demanded more problems with Certificate of deposit born?,"more problems with Certificate refers to MAX(COUNT(""Sub-product"" = '(CD) Certificate of deposit'));",SELECT T1.year FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Sub-product` = '(CD) Certificate of deposit' GROUP BY T1.year ORDER BY COUNT(T1.year) DESC LIMIT 1
retail_complains,How many cases of billing dispute issues occurred in the Mountain division?,billing dispute refers to issue = 'Billing disputes';,SELECT COUNT(T1.Issue) FROM events AS T1 INNER JOIN client AS T2 ON T1.Client_ID = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.Issue = 'Billing disputes' AND T3.division = 'Mountain'
retail_complains,How many male clients are from the state of Massachusetts?,male refers to sex = 'Male';,SELECT COUNT(T3.sex) FROM state AS T1 INNER JOIN district AS T2 ON T1.StateCode = T2.state_abbrev INNER JOIN client AS T3 ON T2.district_id = T3.district_id WHERE T1.state = 'Massachusetts' AND T3.sex = 'Male'
retail_complains,Lists the last name of all clients who made a PS-type complaint and were served by TOVA.,"PS-type complaint refers to type = 'PS'; served by refers to server;

",SELECT t1.last FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.type = 'PS' AND T2.server = 'TOVA'
retail_complains,How many clients under the age of 35 gave Eagle National Mortgage 1 star?,age < 35; Eagle National Mortgage refers to Product = 'Eagle National Mortgage';,SELECT COUNT(T2.age) FROM reviews AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.Product = 'Eagle National Mortgage' AND T1.Stars = 1 AND T2.age < 35
retail_complains,How many male clients born in the year 1977 were given priority 0 in their complaints?,male refers to sex = 'Male';,SELECT COUNT(T1.sex) FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.sex = 'Male' AND T2.priority = 0 AND T1.year = 1997
retail_complains,List by name all customers who provided consent for the tag Older American.,"name refers to first; provided consent refers to ""Consumer consent provided?"" not in ('N/A', null, 'empty');","SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.Tags = 'Older American' AND T2.`Consumer consent provided?` != 'N/A' AND T2.`Consumer consent provided?` IS NOT NULL AND T2.`Consumer consent provided?` != ''"
retail_complains,What is the name of the state in which there have been the largest number of complaints with priority 0?,"largest number of complaints refers to MAX(COUNT(""Complaint ID"") WHERE priority = 0);",SELECT T2.state FROM callcenterlogs AS T1 INNER JOIN client AS T2 ON T1.`rand client` = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id INNER JOIN state AS T4 ON T3.state_abbrev = T4.StateCode WHERE T1.priority = 0 GROUP BY T2.state ORDER BY COUNT(T2.state) DESC LIMIT 1
retail_complains,How many complaints made by women and served after 3 pm received a timely response from the company?,"women refers to sex = 'Female'; served after 3 pm refers to ser_time BETWEEN '15:00:01' AND '23:59:59'; received a timely response refers to ""Timely response?"" = 'Yes';",SELECT COUNT(T1.`Complaint ID`) FROM callcenterlogs AS T1 INNER JOIN client AS T2 ON T1.`rand client` = T2.client_id INNER JOIN events AS T3 ON T1.`Complaint ID` = T3.`Complaint ID` WHERE T2.sex = 'Female' AND T1.ser_start BETWEEN '15:00:01' AND '23:59:59' AND T3.`Timely response?` = 'Yes'
retail_complains,"How many complaints were served in 5 minutes or less by DORIT and responded to the customer with an explanation, were made by phone?","served in 5 minutes or less refers to ser_time < '00:05:00'; DORIT refers to server = 'DORIT'; responded with an explanation refers to ""Company response to consumer"" = 'Closed with explanation'; made by refers to ""Submitted via"";",SELECT COUNT(T1.`Complaint ID`) FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T1.ser_time < '00:05:00' AND T1.server = 'DORIT' AND T2.`Submitted via` = 'Phone' AND T2.`Company response to consumer` = 'Closed with explanation'
retail_complains,How many clients with the last name Alvarado are from Maryland?,The abbreviation of Maryland is 'MD';,SELECT COUNT(T2.client_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN state AS T3 ON T1.state_abbrev = T3.StateCode WHERE T2.last = 'Alvarado' AND T2.state = 'MD'
retail_complains,How many reviews by people between 30 and 50 years include the word 'great'?,between 30 and 50 years refers to age BETWEEN 30 AND 50; include the word great refers to Review like '%Great%';,SELECT COUNT(T1.Reviews) FROM reviews AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.age BETWEEN 30 AND 50 AND T1.Reviews LIKE '%great%'
retail_complains,"What is the full address of the customers who, having received a timely response from the company, have dispute about that response?","full address = address_1, address_2; received a timely response refers to Timely response? = 'Yes'; have dispute refers to ""Consumer disputed?"" = 'Yes';","SELECT T1.address_1, T1.address_2 FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Timely response?` = 'Yes' AND T2.`Consumer disputed?` = 'Yes'"
retail_complains,How many complaints from female clients born in the year 2000 were not sent through the web?,"female refers to sex = 'Female'; sent through refers to ""Submitted via""; not sent through web refers to ""Submitted via"" ! = 'Web';
",SELECT COUNT(T2.`Submitted via`) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.sex = 'Female' AND T1.year = 2000 AND T2.`Submitted via` != 'Web'
retail_complains,List all the complaints narratives made by the customer named Brenda and last name Mayer.,"complaints narratives refers to ""Consumer complaint narrative"";",SELECT T2.`Consumer complaint narrative` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Brenda' AND T1.last = 'Mayer'
retail_complains,How many complaints from customers with a gmail.com email were received by the company in February 2017?,"gmail.com email refers to email like '%gmail.com'; in February 2017 refers to ""Date received"" BETWEEN '2017-01-02' AND '2017-02-28';",SELECT COUNT(T1.email) FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE (T2.`Date received` LIKE '2017-02%' OR T2.`Date received` LIKE '2017-01%') AND T1.email LIKE '%@gmail.com'
retail_complains,What is the average number of stars given by Oregon clients in their reviews?,"average = DIVIDE(SUM(State = 'Oregon'), COUNT(district_id)); Oregon refers to state = 'Oregon';",SELECT CAST(SUM(T3.Stars) AS REAL) / COUNT(T3.Stars) AS average FROM state AS T1 INNER JOIN district AS T2 ON T1.StateCode = T2.state_abbrev INNER JOIN reviews AS T3 ON T2.district_id = T3.district_id WHERE T1.State = 'Oregon'
retail_complains,What percentage of clients who sent their complaints by postal mail are age 50 and older?,"percentage = MULTIPLY(DIVIDE(SUM(""Submitted via"" = 'Postal mail'), COUNT(client_id)), 1.0); sent their complaints by refers to ""Submitted via""; age > 50;",SELECT CAST(SUM(CASE WHEN T1.age > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.`Submitted via`) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Submitted via` = 'Postal mail'
retail_complains,What is the average age of Norwalk clients?,average age = AVG(age); Norwalk refers to city = 'Norwalk';,SELECT CAST(SUM(T1.age) AS REAL) / COUNT(T1.age) AS average FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Norwalk'
retail_complains,How many clients who live in Kansas City provided a 1-star review?,1-star review refers stars = 1;,SELECT COUNT(T1.Stars) FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Kansas City' AND T1.Stars = 1
retail_complains,Which state has the highest number of clients who gave a 5-star review?,highest number of clients refers to MAX(COUNT(client_id)); 5-star review refers to stars = 5;,SELECT T2.state_abbrev FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.Stars = 5 GROUP BY T2.state_abbrev ORDER BY COUNT(T2.state_abbrev) DESC LIMIT 1
retail_complains,Which region does Noah Thompson live in?,,SELECT T2.division FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.first = 'Noah' AND T1.last = 'Thompson'
retail_complains,How did Kyran Muller submit his complaint?,"how it was submitted refers to ""Submitted via"";",SELECT DISTINCT T2.`Submitted via` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Kyran' AND T1.last = 'Muller'
retail_complains,What are the products that people who were born after 2005 complain about?,year > 2005;,SELECT DISTINCT T2.Product FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.year > 2005
retail_complains,How long was Kendall Allen's complaint about her credit card?,how long refers to ser_time; credit card refers to Product = 'Credit Card';,SELECT T3.ser_time FROM events AS T1 INNER JOIN client AS T2 ON T1.Client_ID = T2.client_id INNER JOIN callcenterlogs AS T3 ON T1.`Complaint ID` = T3.`Complaint ID` WHERE T2.first = 'Kendall' AND T2.last = 'Allen' AND T2.sex = 'Female' AND T1.Product = 'Credit card'
retail_complains,What was the issue that the client with the longest server time faced?,longest server time refers to MAX(ser_time);,SELECT T2.Issue FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T1.ser_time = ( SELECT MAX(ser_time) FROM callcenterlogs )
retail_complains,How many clients who live in New York City submitted their complaints via fax?,"submitted complaints via fax refers to ""Submitted via"" = 'Fax';",SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'New York City' AND T2.`Submitted via` = 'Fax'
retail_complains,What is the percentage of male clients complaining about their credit cards?,"percentage = MULTIPLY(DIVIDE(SUM(sex = 'Male'), COUNT(client_id)), 1.0); male refers to sex = 'Male'; credit cards refers to Product = 'Credit card';",SELECT CAST(SUM(CASE WHEN T1.sex = 'Male' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.sex) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.Product = 'Credit card'
retail_complains,"Please list any two clients with their full names who have been tagged as ""Older American"" by the company without seeking their permission.","full names = first, middle, last; without seeking their permission refers to ""Consumer consent provided?"" in (null, 'N/A' or 'empty');","SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.Tags = 'Older American' AND T2.`Consumer consent provided?` IN (NULL, 'N/A', '') LIMIT 2"
retail_complains,What is the birth date of the youngest client?,"birth date refers to year, month, day; youngest client refers to max(year, month, day)","SELECT day, month, year FROM client ORDER BY year DESC, month DESC, day DESC LIMIT 1"
retail_complains,How many times does the consumer have no dispute over a non-timely response from the company?,no dispute refers to Consumer disputed? = 'No'; non-timely response refers to Timely response? = 'No',SELECT COUNT(`Timely response?`) FROM events WHERE `Timely response?` = 'No' AND `Consumer disputed?` = 'No'
retail_complains,How many of the complaints are longer than 15 minutes?,longer than 15 minutes refers to ser_time > '00:15:00',"SELECT COUNT(ser_time) FROM callcenterlogs WHERE strftime('%M', ser_time) > '15'"
retail_complains,What is the most common issue for the highest priority complaints?,most common refers to max(count(issue)); highest priority refers to priority = 2,SELECT T1.Issue FROM events AS T1 INNER JOIN callcenterlogs AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T2.priority = 2 GROUP BY T1.Issue ORDER BY COUNT(T1.Issue) DESC LIMIT 1
retail_complains,List the full names of all clients who live in the Pacific division.,"full name refers to first, last","SELECT T2.first, T2.middle, T2.last FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.division = 'Pacific'"
retail_complains,What is the social number of the person who made the most complaints?,social number refers to social; most complaints refers to max(count(event.Client_ID)),SELECT T1.social FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID GROUP BY T1.client_id ORDER BY COUNT(T1.client_id) DESC LIMIT 1
retail_complains,Which is the city where most of the 1 star reviews come from?,most refers to max(count(state_abbrev)); 1 star review refers to Stars = 1,SELECT T2.city FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.Stars = 1 GROUP BY T2.city ORDER BY COUNT(T2.city) DESC LIMIT 1
retail_complains,"What is the address of the client who made a complaint via postal mail on March 14, 2012?","address refers to address_1, address_2; via postal mail refers to Submitted via = 'Postal mail'; March 14 2012 refers to Date received = '2012-03-14'","SELECT T1.address_1, T1.address_2 FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Date received` = '2012-03-14' AND T2.`Submitted via` = 'Postal mail'"
retail_complains,"Among the female clients, how many of them have a complaint with a priority of 1?",female refers to sex = 'Female',SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.sex = 'Female' AND T2.priority = 1
retail_complains,List all the server of the phone complaints with a late response from the company.,phone complaint refers to Submitted via = 'Phone'; late response refers to Timely response? = 'No',SELECT DISTINCT T2.server FROM events AS T1 INNER JOIN callcenterlogs AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T1.`Submitted via` = 'Phone' AND T1.`Timely response?` = 'No'
retail_complains,List all the issues of the complaints made by Kaitlyn Eliza Elliott.,,SELECT DISTINCT T2.Issue FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Kaitlyn' AND T1.middle = 'Eliza' AND T1.last = 'Elliott'
retail_complains,"What is the name of the state that the client with the email ""skylar.ramirez@gmail.com"" lives in?",,SELECT T3.state FROM state AS T1 INNER JOIN district AS T2 ON T1.StateCode = T2.state_abbrev INNER JOIN client AS T3 ON T2.district_id = T3.district_id WHERE T3.email = 'skylar.ramirez@gmail.com'
retail_complains,Which region has the second most clients?,region refers to division; second most refers to second max(client_id),"SELECT T2.division FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id GROUP BY T2.division ORDER BY COUNT(T2.division) DESC LIMIT 1, 1"
retail_complains,"Who is the owner of the final phone number for the complaints on server ""MORIAH"" on 9/11/2013?","owner refers to first, middle, last; on 9/11/2013 refers to Date received = '2013-09-11'","SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.server = 'MORIAH' AND T2.`Date received` = '2013-09-11'"
retail_complains,Compute the average time in minute for each age group,"teenager refers to 13 < age < = 19; adult refers to 19 < age < = 65; elder refers to age < = 65; highest average time per complaint = max(divide(sum(ser_time), count(ser_time)))","SELECT CAST(SUM(CASE WHEN T1.age > 13 AND T1.age <= 19 THEN 60 * strftime('%H', ser_time) + strftime('%M', ser_time) + strftime('%S', ser_time) / 60 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.age > 13 AND T1.age <= 19 THEN 1 ELSE 0 END) AS teenagerAverageMins, CAST(SUM(CASE WHEN T1.age > 19 AND T1.age <= 65 THEN 60 * strftime('%H', ser_time) + strftime('%M', ser_time) + strftime('%S', ser_time) / 60 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.age > 19 AND T1.age <= 65 THEN 1 ELSE 0 END) AS adultAverageMins , CAST(SUM(CASE WHEN T1.age > 65 THEN 60 * strftime('%H', ser_time) + strftime('%M', ser_time) + strftime('%S', ser_time) / 60 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.age > 65 THEN 1 ELSE 0 END) AS elderAverageMins FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client`"
retail_complains,What percentage of complaints are from the elderly?,"elder refers to age < = 65; percentage refers to divide(sum(age < = 65) , count(client_id)) * 100%",SELECT CAST(SUM(CASE WHEN T1.age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.age) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID
retail_complains,Calculate the percentage of male clients from Indianapolis City.,"male refers to sex = 'Male'; Indianapolis City refers to city = 'Indianapolis'; percentage = divide(count(client_id where sex = 'Male' and city = 'Indianapolis') , count(client_id where city = 'Indianapolis')) * 100%",SELECT CAST(SUM(CASE WHEN sex = 'Male' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(client_id) FROM client WHERE city = 'Indianapolis'
retail_complains,"Among the teenager clients who use Google account and Microsoft account, which group of client is more than the other?",teenager refers to 13 < age < = 19; Google account refers to email like '%@gmail.com'; Microsoft account refers to email like '%@outlook.com',SELECT CASE WHEN SUM(CASE WHEN email LIKE '%@gmail.com' THEN 1 ELSE 0 END) > SUM(CASE WHEN email LIKE '%@outlook.com' THEN 1 ELSE 0 END) THEN 'Google account' ELSE 'Microsoft account' END FROM client WHERE age BETWEEN 13 AND 19
retail_complains,What is the full name of client whose email address is emily.garcia43@outlook.com?,full name refers to first middle last,"SELECT first, middle, last FROM client WHERE email = 'emily.garcia43@outlook.com'"
retail_complains,What is the first name of clients who have the highest priority?,first name refers to first; highest priority refers to priority = 2,SELECT T1.first FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.priority = ( SELECT MAX(priority) FROM callcenterlogs )
retail_complains,"List down the email of client whose complaint is type ""PS"".",,SELECT T1.email FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.type = 'PS'
retail_complains,"Among the elderlies, state the last name of whose complaint is handled in server YIFAT?",elder refers to age < = 65; last name refers to last,SELECT T1.last FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.age > 65 AND T2.server = 'YIFAT'
retail_complains,"How many clients who live in New York City have the complaint outcome as ""AGENT""?",New York City refers to city = 'New York City',SELECT COUNT(T2.`rand client`) FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.city = 'New York City' AND T2.outcome = 'AGENT'
retail_complains,List down the full name of clients who have disputed the response from company.,"full name refers to first, middle, last; disputed the response refers to Consumer disputed? = 'Yes'","SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Consumer disputed?` = 'Yes'"
retail_complains,What are the complaint id of client who were born in 1931?,in 1931 refers to year = 1931,SELECT T2.`Complaint ID` FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.year = 1931
retail_complains,Calculate the percentage of complaints made by Google account client in server ZOHARI.,"Google account refers to email like '%@gmail.com'; percentage = divide(count(Complaint ID where email like '%@gmail.com') , count(Complaint ID)) * 100%",SELECT CAST(SUM(CASE WHEN T1.email LIKE '%@gmail.com' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.email) FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.server = 'ZOHARI'
retail_complains,State the full name of clients with server time of 20 minutes and above.,"full name refers to first, middle, last; server time of 20 minutes and above refers to ser_time > '00:20:00'","SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE strftime('%M', T2.ser_time) > '20'"
retail_complains,Pick 5 clients with 0 priority and write down their last name.,0 priority refers to priority = 0; last name refers to last,SELECT T1.last FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.priority = 0 LIMIT 5
retail_complains,"Write down the call id of clients whose first name start with alphabet ""B"".","first name start with alphabet ""B"" refers to first like 'B%'",SELECT T2.call_id FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.first LIKE 'B%'
retail_complains,What is the product complained by Alexander Bronx Lewis?,,SELECT DISTINCT T2.Product FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Alexander' AND T1.middle = 'Bronx' AND T1.last = 'Lewis'
retail_complains,State the first name of male clients who did not receive timely response from the call center.,first name refers to first; male refers to sex = 'Male'; did not receive timely response refers to Timely response? = 'No',SELECT T1.first FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Timely response?` = 'No' AND T1.sex = 'Male'
retail_complains,Which product received the most complaints from elder clients?,most complaints refers to max(client_id); elder client refers to age > 65,SELECT T2.Product FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.age > 65 ORDER BY T1.client_id DESC LIMIT 1
retail_complains,Complaint about Credit Card mostly came from clients of which age group?,about Credit Card refers to Product = 'Credit Card'; teenager refers to 13 < age < = 19; adult refers to 19 < age < = 65; elder refers to age < = 65,"SELECT SUM(CASE WHEN T1.age > 13 AND T1.age <= 19 THEN 1 ELSE 0 END), SUM(CASE WHEN T1.age > 19 AND T1.age <= 65 THEN 1 ELSE 0 END) AS adult , SUM(CASE WHEN T1.age > 65 THEN 1 ELSE 0 END) AS elder FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.Product = 'Credit card'"
retail_complains,List down the issues for complaint with server time of below 10 minutes.,server time of below 10 minutes refers to ser_time < '00:10:00',"SELECT T2.Issue FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE strftime('%M', T1.ser_time) < '10'"
retail_complains,Write down the date received of complaints sent via Fax.,sent via Fax refers to Submitted via = 'Fax',SELECT T1.`Date received` FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T2.`Submitted via` = 'Fax'
retail_complains,What is the full name of clients who have issue about balance transfer?,"full name refers to first, middle, last; issue about balance transfer refers to Issue = 'Balance transfer'","SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.Issue = 'Balance transfer'"
retail_complains,What is the email address of clients who submitted their complaints via postal mail?,via postal mail refers to Submitted via = 'Postal mail',SELECT T1.email FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Submitted via` = 'Postal mail'
retail_complains,"Calculate the average age of clients whose response is ""Closed with relief"".","average age = avg(age where Company response to consumer = 'Closed with relief'); response ""Closed with relief"" refers to Company response to consumer = 'Closed with relief'",SELECT AVG(T1.age) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Company response to consumer` = 'Closed with relief'
retail_complains,"What is the average age of clients whose complaint type is ""TT""?",average age = avg(age where type = 'TT'),SELECT AVG(T1.age) FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.type = 'TT'
retail_complains,"Write the complaint ID, call ID, and final phone number of complaints through AVIDAN server from 1/1/2014 to 12/30/2014.",final phone number refers to phonefinal; from 1/1/2014 to 12/30/2014 refers to Date received between '2014-01-01' and '2014-12-30',"SELECT `Complaint ID`, call_id, phonefinal FROM callcenterlogs WHERE strftime('%Y', `Date received`) = '2014' AND server = 'AVIDAN'"
retail_complains,"Between 1/1/2017 and 4/1/2017, what is the average server time of calls under the server DARMON?",between 1/1/2017 and 4/1/2017 refers to Date received between '2017-01-01' and '2017-04-01'; average server time refers to avg(ser_time),"SELECT AVG(CAST(SUBSTR(ser_time, 4, 2) AS REAL)) FROM callcenterlogs WHERE `Date received` BETWEEN '2017-01-01' AND '2017-04-01'"
retail_complains,How many times per year does a credit card customer complain about overlimit fees?,credit card customer refers to product = 'Credit card'; about overlimit fees refers to issue = 'Overlimit fee',"SELECT strftime('%Y', `Date received`), COUNT(`Date received`) FROM events WHERE product = 'Credit card' AND issue = 'Overlimit fee' GROUP BY strftime('%Y', `Date received`) HAVING COUNT(`Date received`)"
retail_complains,"Among the clients in Middle Atlantic, how many are them are female and no more than 18 years old?",in Middle Atlantic refers to division = 'Middle Atlantic'; female refers to sex = 'Female'; no more than 18 refers to age < 18,SELECT COUNT(T1.sex) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.division = 'Middle Atlantic' AND T1.sex = 'Female' AND T1.age < 18
retail_complains,"Give me the full birthdate, email and phone number of the youngest client in Indianapolis .","full birthdate = year, month, day; youngest refers to max(year, month, day); in Indianapolis refers to city = 'Indianapolis'","SELECT T1.year, T1.month, T1.day, T1.email, T1.phone FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' ORDER BY T1.year DESC, T1.month DESC, T1.day DESC LIMIT 1"
retail_complains,"List the top five cities in terms of the number of 5-star ratings in 2016 reviews, in descending order.",5-star rating refers to Stars = 5; in 2016 refers to Date like '2016%'; most reviews refers to max(count(city)),SELECT T2.city FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.Stars = 5 AND T1.Date LIKE '2016%' ORDER BY T1.Date DESC LIMIT 5
retail_complains,What is the longest server time when the call is about the issue of arbitration?,longest server time refers to max(ser_time),SELECT MAX(T1.ser_time) FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T2.issue = 'Arbitration'
retail_complains,Give me the social number and state of the client whose phone number is 100-121-8371.,social number refers to social,"SELECT T1.social, T1.state FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN state AS T3 ON T2.state_abbrev = T3.StateCode WHERE T1.phone = '100-121-8371'"
retail_complains,List the full names and phone numbers of clients that were from the Pacific.,"full name refers to first, middle, last; the Pacific refers to division = 'Pacific'","SELECT T1.first, T1.middle, T1.last, T1.phone FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.division = 'Pacific'"
retail_complains,What is the social number of the client who has the longest delay in his/her complaint? Calculate the days of delay and state the company's response to the consumer.,"social number refers to social; longest delay = max(subtract(Date sent to company, Date received)); days of delay = subtract(Date sent to company, Date received); company's response refers to 'Company response to consumer'","SELECT T1.social , 365 * (strftime('%Y', T2.`Date sent to company`) - strftime('%Y', T2.`Date received`)) + 30 * (strftime('%M', T2.`Date sent to company`) - strftime('%M', T2.`Date received`)) + (strftime('%d', T2.`Date sent to company`) - strftime('%d', T2.`Date received`)), T2.`Company response to consumer` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID ORDER BY 365 * (strftime('%Y', T2.`Date sent to company`) - strftime('%Y', T2.`Date received`)) + 30 * (strftime('%M', T2.`Date sent to company`) - strftime('%M', T2.`Date received`)) + (strftime('%d', T2.`Date sent to company`) - strftime('%d', T2.`Date received`)) DESC LIMIT 1"
retail_complains,How many female clients are there older than 30?,female refers to sex = 'Female'; older than 30 refers to age > 30,SELECT COUNT(sex) FROM client WHERE sex = 'Female' AND age > 30
retail_complains,Please list all first and last names of clients who live in New York city.,New York City refers to city = 'New York City',"SELECT first, last FROM client WHERE city = 'New York City'"
retail_complains,What is the oldest age of male clients?,oldest age refers to max(age); male refers to sex = 'Male',SELECT MAX(age) FROM client WHERE sex = 'Male'
retail_complains,Please calculate the number of clients by each division.,,"SELECT T2.division, COUNT(T2.division) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id GROUP BY T2.division"
retail_complains,What is the percentage of female clients in the Middle Atlantic?,"female refers to sex = 'Female'; the Middle Atlantic refers to division = 'Middle Atlantic'; percentage = divide(count(client_id where sex = 'Female' and division = 'Middle Atlantic') , count(client_id where division = 'Middle Atlantic')) * 100%",SELECT CAST(SUM(CASE WHEN T1.sex = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.sex) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.division = 'South Atlantic'
retail_complains,What is the average age of clients in South Atlantic?,in South Atlantic refers to division = 'South Atlantic'; average age refers to avg(age),SELECT AVG(T1.age) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.division = 'South Atlantic'
retail_complains,Which city in the Midwest region has the least number of clients?,least number of clients refers to min(count(client_id)),SELECT T2.city FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN state AS T3 ON T2.state_abbrev = T3.StateCode WHERE T3.Region = 'Midwest' GROUP BY T2.city ORDER BY COUNT(T2.city) LIMIT 1
retail_complains,How many customers in the Northeast use Microsoft email?,the Northeast refers to Region = 'Northeast'; Microsoft email refers to email like '%@outlook.com',SELECT COUNT(T1.email) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN state AS T3 ON T2.state_abbrev = T3.StateCode WHERE T3.Region = 'Northeast' AND T1.email LIKE '%@outlook.com'
retail_complains,Which city in West North Central has the highest number of customers over the age of 60?,in North Central refers to Region = 'North Central'; highest number of customers refers to max(count(client_id)); over the age of 60 refers to age > 60,SELECT T2.city FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.division = 'West North Central' AND T1.age > 60 GROUP BY T2.city ORDER BY COUNT(T2.city) DESC LIMIT 1
retail_complains,What is the percentage of complaints about the late fee issue whose priority is 2 in 2017?,"percentage = divide(count(Complaint ID where priority = 2) , count(Complaint ID)) * 100%; in 2017 refers to year(Date received) = 2017","SELECT CAST(SUM(CASE WHEN T1.priority = 2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.`Complaint ID`) FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE strftime('%Y', T1.`Date received`) = '2017'"
retail_complains,Which state has the most cities?,state refers to state_abbrev; most cities refers to max(count(city)),SELECT state_abbrev FROM district GROUP BY state_abbrev ORDER BY COUNT(city) DESC LIMIT 1
retail_complains,Please give the first name and phone number of the client whose complaint id is CR0922485.,first name refers to first,"SELECT T1.first, T1.phone FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Complaint ID` = 'CR0922485'"
retail_complains,Please list the emails of the clients whose complaint date received is 7/3/2014.,7/3/2014 refers to Date received = '2014-07-03',SELECT T1.email FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Date received` = '2014-07-03'
retail_complains,"In 2012, how many complaints about Credit card product came from clients in Omaha?",in 2012 refers to Date received LIKE'2012%'; in Omaha refers to city = 'Omaha',"SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'Omaha' AND strftime('%Y', T2.`Date received`) = '2012' AND T2.Product = 'Credit card'"
retail_complains,"From 2012 to 2015, how many complaints were submitted via email from female clients?",from 2012 to 2015 refers to Date received BETWEEN 2012 AND 2015; submitted via email refers to Submitted via = 'Email'; female refers to sex = 'Female',"SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE strftime('%Y', T2.`Date received`) BETWEEN '2012' AND '2015' AND T2.`Submitted via` = 'Email' AND T1.sex = 'Male'"
retail_complains,Please list all clients' phone numbers and complaint IDs which are still in progress.,in progress refers to Company response to consumer = 'In progress',"SELECT T1.phone, T2.`Complaint ID` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Company response to consumer` = 'In progress'"
retail_complains,"In 2015, how many complaints about Billing disputes were sent by clients in Portland?",in 2015 refers to Date received LIKE'2015%'; about Billing disputes refers to Issue = 'Billing disputes'; Portland refers to city = 'Portland',SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'Portland' AND T2.`Date received` LIKE '2015%' AND T2.Issue = 'Billing disputes'
retail_complains,"In 2014, what is the percentage of complaints from consumers in Houston that the delay was over 5 days?","in 2014 refers to Date received LIKE'2014%'; Houston refers to city = 'Houston'; delay over 5 days refers to subtract(Date sent to company, Date received) > 5; percentage = divide(count(Complaint ID where subtract(Date sent to company , Date received) > 5) , count(Complaint ID)) * 100%","SELECT CAST((SUM(CASE WHEN strftime('%J', T2.`Date sent to company`) - strftime('%J', T2.`Date received`) > 5 THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'Houston' AND strftime('%Y', T2.`Date received`) = '2014'"
retail_complains,"In the complains received in 2012, how many of them are submitted through email?",received in 2012 refers to Date received LIKE '2012%'; submitted through email refers to Submitted via = 'Email',"SELECT COUNT(`Submitted via`) FROM events WHERE strftime('%Y', `Date received`) = '2012' AND `Submitted via` = 'Email'"
retail_complains,"Give the client ID of the complaint received on April 16, 2014 and submitted through fax.","April 16, 2014 refers to Date received = '2014-04-16'; submitted through fax refers to Submitted via = 'Fax'",SELECT T2.Client_ID FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T2.`Submitted via` = 'Fax' AND T1.`Date received` = '2014-04-16'
retail_complains,"List date of the review of the Eagle Capital from Indianapolis, Indiana.",Eagle Capital refers to Product = 'Eagle Capital'; Indianapolis refers to city = 'Indianapolis'; Indiana refers to state_abbrev = 'IN',SELECT T2.Date FROM district AS T1 INNER JOIN reviews AS T2 ON T1.district_id = T2.district_id WHERE T2.Product = 'Eagle Capital' AND T1.city = 'Indianapolis' AND T1.state_abbrev = 'IN'
retail_complains,"Among the complaints received in year 2015, what is total number of complaints timely response and closed with an explanation?","in year 2015 refers to Date received LIKE '2015%'; timely response refers to Timely response?"" = 'Yes'; closed with an explanation refers to Company response to consumer = 'Closed with explanation'","SELECT COUNT(T1.`Complaint ID`) FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE strftime('%Y', T1.`Date received`) = '2015' AND T2.`Timely response?` = 'Yes' AND T2.`Company response to consumer` = 'Closed with explanation'"
retail_complains,"Among the female clients that age between 20 to 40, list the date when their complaints were received.",female refers to sex = 'Female',SELECT DISTINCT T3.`Date received` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID INNER JOIN callcenterlogs AS T3 ON T2.`Complaint ID` = T3.`Complaint ID` WHERE T1.age BETWEEN 20 AND 40 AND T1.sex = 'Female'
retail_complains,"List the product reviewed with 1 star on March 14, 2016 from Newton, Massachusetts.","1 star refers to Stars = 1; on March 14, 2016 refers to Date = '2016-03-14'; Newton refers to city = 'Newton'; Massachusetts refers to state_abbrev = 'MA'",SELECT T2.Product FROM district AS T1 INNER JOIN reviews AS T2 ON T1.district_id = T2.district_id WHERE T1.city = 'Newton' AND T1.state_abbrev = 'MA' AND T2.Date = '2016-03-14' AND T2.Stars = 1
retail_complains,"In reviews for the Eagle National Bank product, how many of the 5 star reviews where from Nashville, Tennessee?",5 star refers to Stars = 5; Nashville refers to city = 'Nashville'; Tennessee refers to state_abbrev = 'TN',SELECT COUNT(T2.Stars) FROM district AS T1 INNER JOIN reviews AS T2 ON T1.district_id = T2.district_id WHERE T1.city = 'Nashville' AND T1.state_abbrev = 'TN' AND T2.Product = 'Eagle National Mortgage' AND T2.Stars = 5
retail_complains,What are the issues of the complains of male clients and products from age 25 and below?,male refers to sex = 'Male'; age 25 and below refers to age < 25,SELECT DISTINCT T2.Issue FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.sex = 'Male' AND T1.age < 25
retail_complains,"Among the reviews from midwest region, what are the products that received 1 star?",1 star refers to Stars = 1,SELECT DISTINCT T3.Product FROM state AS T1 INNER JOIN district AS T2 ON T1.StateCode = T2.state_abbrev INNER JOIN reviews AS T3 ON T2.district_id = T3.district_id WHERE T1.Region = 'Midwest' AND T3.Stars = 1
retail_complains,List the products involved in the complaints received on March 2017 via TOVA server.,on March 2017 refers to Date received LIKE '%03%' AND Date received LIKE '2017%',SELECT DISTINCT T2.Product FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T1.server = 'TOVA' AND T2.`Date received` LIKE '2017-03%'
retail_complains,"What is the division of the review of 5 stars received on December 17, 2017 for the product Eagle National Mortgage?",5 stars refers to Stars = 5; on December 17 2017 refers to Date = '2017-12-17',SELECT T1.division FROM district AS T1 INNER JOIN reviews AS T2 ON T1.district_id = T2.district_id WHERE T2.Stars = 5 AND T2.Date = '2017-12-17' AND T2.Product = 'Eagle National Mortgage'
retail_complains,"In complaints about the credit card product, list the phone number of the oldest client.",oldest refers to max(age),SELECT T1.phone FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.Product = 'Credit card' ORDER BY T1.age DESC LIMIT 1
retail_complains,"In complaints received in 2014, how many of them were submitted via call?",in 2014 refers to Date received LIKE '2014%'; submitted via call refers to Submitted via = 'Phone',"SELECT COUNT(T2.`Complaint ID`) FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T2.`Submitted via` = 'Phone' AND strftime('%Y', T1.`Date received`) = '2014'"
retail_complains,List the product and its issues of the complains of clients with age greater than the 60% of average age of all clients.,"age greater than the 60% of average age refers to age > multiply(avg(age) , 0.6)","SELECT DISTINCT T2.Product, T2.Issue FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.age * 100 > ( SELECT AVG(age) * 60 FROM client )"
retail_complains,"In reviews of product with 5 stars, what is the percentage of the reviews coming from the division of East North Central?","5 stars refers to Stars = 5; percentage = divide(count(division = 'East North Central', count(division)) * 100%",SELECT CAST(SUM(CASE WHEN T1.division = 'East North Central' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.division) FROM district AS T1 INNER JOIN reviews AS T2 ON T1.district_id = T2.district_id WHERE T2.Stars = 5
movies_4,"Please list the names of the production company of the movie ""Four Rooms"".","names of the production company refers to movie_company; movie ""Four Rooms"" refers to title = 'Four Rooms'",SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T3.title = 'Four Rooms'
movies_4,"How many production companies does the movie ""Four Rooms"" have?","movie ""Four Rooms"" refers to title = 'Four Rooms'",SELECT COUNT(CNAME) FROM ( SELECT T1.company_name AS CNAME FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T3.title = 'Four Rooms' )
movies_4,"Please list the titles of all the movie produced by production company ""Universal Pictures"".","""Universal Pictures"" refers to company_name = 'Universal Pictures'",SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Universal Pictures'
movies_4,"What is the title of the latest released movie produced by production company ""Universal Pictures""?","""Universal Pictures"" refers to company_name = 'Universal Pictures'; latest released refers to max(release_date)",SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Universal Pictures' ORDER BY T3.release_date DESC LIMIT 1
movies_4,"What is the name of the director of photography of the movie ""Pirates of the Caribbean: At World's End""?","name of the director of photography refers to person_name where job = 'Director of Photography'; ""Pirates of the Caribbean: At World's End"" refers to title = 'Pirates of the Caribbean: At World''s End'",SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End' AND T2.job = 'Director of Photography'
movies_4,"What was the job of Dariusz Wolski in the movie ""Pirates of the Caribbean: At World's End""?","movie ""Pirates of the Caribbean: At World's End"" refers to title = 'Pirates of the Caribbean: At World''s End'",SELECT T2.job FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End' AND T3.person_name = 'Dariusz Wolski'
movies_4,"Please list the names of all the crew members of the movie ""Pirates of the Caribbean: At World's End"".","names refers to person_name; ""Pirates of the Caribbean: At World's End"" refers to title = 'Pirates of the Caribbean: At World''s End'",SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End'
movies_4,"How many crew members worked as producer in the movie ""Pirates of the Caribbean: At World's End""?","worked as producer refers to job = 'Producer'; ""Pirates of the Caribbean: At World's End"" refers to title = 'Pirates of the Caribbean: At World''s End'",SELECT COUNT(T3.person_id) FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End' AND T2.job = 'Producer'
movies_4,"Please list the names of all the producers in the movie ""Pirates of the Caribbean: At World's End"".","names refers to person_name; producers refers to job = 'Producer'; ""Pirates of the Caribbean: At World's End"" refers to title = 'Pirates of the Caribbean: At World''s End'",SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End' AND T2.job = 'Producer'
movies_4,In how many movie does Dariusz Wolski work as the director of photography?,director of photography refers to job = 'Director of Photography',SELECT COUNT(T2.movie_id) FROM person AS T1 INNER JOIN movie_crew AS T2 ON T1.person_id = T2.person_id WHERE T1.person_name = 'Dariusz Wolski' AND T2.job = 'Director of Photography'
movies_4,"Among the movie in which Dariusz Wolski works as the director of photography, what is the title of the one with the highest average vote?",director of photography refers to job = 'Director of Photography'; highest average vote refers to max(vote_average),SELECT T1.title FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Dariusz Wolski' AND T2.job = 'Director of Photography' ORDER BY T1.vote_average DESC LIMIT 1
movies_4,When was the release date of the latest movie in which Dariusz Wolski worked as a crew member?,release date of the latest movie refers to max(release_date),SELECT T1.release_date FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Dariusz Wolski' ORDER BY T1.release_date DESC LIMIT 1
movies_4,"Among the movie in which Dariusz Wolski works as the director of photography, what is the percentage of those movie whose vote average is over 5.0?","director of photography refers to job = 'Director of Photography'; vote average is over 8.0 refers to vote_average > 5; percentage = divide(sum(movie_id) when vote_average > 5, count(movie_id)) as percentage",SELECT CAST(COUNT(CASE WHEN T1.vote_average > 5 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.vote_average) FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Dariusz Wolski' AND T2.job = 'Director of Photography'
movies_4,What is the average revenue of the movie in which Dariusz Wolski works as the director of photography?,"director of photography refers to job = 'Director of Photography'; average revenue = divide(sum(revenue), count(movie_id))",SELECT CAST(SUM(T1.revenue) AS REAL) / COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Dariusz Wolski' AND T2.job = 'Director of Photography'
movies_4,Give the name of the movie with a revenue of 559852396.,name of the movie refers to title; revenue of 559852396 refers to revenue = '559852396',SELECT title FROM movie WHERE revenue = 559852396
movies_4,"What was David Rubin's job in the movie ""Days of Thunder""?","""Days of Thunder"" refers to title = 'Days of Thunder'",SELECT T2.job FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'David Rubin' AND T1.title = 'Days of Thunder'
movies_4,How many movies were directed by Michael Bay?,directed by refers to job = 'Director',SELECT COUNT(T2.movie_id) FROM person AS T1 INNER JOIN movie_crew AS T2 ON T1.person_id = T2.person_id WHERE T1.person_name = 'Michael Bay' AND T2.job = 'Director'
movies_4,"Show the total number of keywords of the movie ""I Hope They Serve Beer in Hell"".","""I Hope They Serve Beer in Hell"" refers to title = 'I Hope They Serve Beer in Hell';",SELECT COUNT(T2.keyword_id) FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'I Hope They Serve Beer in Hell'
movies_4,"For the movie ""Land of the Dead"", who is its director?","""Land of the Dead"" refers to title = 'Land of the Dead'; director refers to person_name where job = 'Director'",SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title = 'Land of the Dead' AND T2.job = 'Director'
movies_4,Tell the number of movies made by Paramount Animation.,Paramount Animation refers to company_name = 'Paramount Animation',SELECT COUNT(T2.movie_id) FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id WHERE T1.company_name = 'Paramount Animation'
movies_4,"How many female characters are there in the movie ""Spider-Man 3""?","female characters refer to gender = 'Female'; ""Spider-Man 3"" refers to title = 'Spider-Man 3'",SELECT COUNT(*) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN gender AS T3 ON T2.gender_id = T3.gender_id WHERE T1.title = 'Spider-Man 3' AND T3.gender = 'Female'
movies_4,Provide the most used keyword in the movies.,most used keyword refers to keyword_name where max(count(keyword_name)),SELECT T1.keyword_name FROM keyword AS T1 INNER JOIN movie_keywords AS T2 ON T1.keyword_id = T2.keyword_id GROUP BY T1.keyword_name ORDER BY COUNT(T1.keyword_name) DESC LIMIT 1
movies_4,"How many producers does the movie ""The Amityville Horror"" have?","producers refers to job = 'Producer'; ""The Amityville Horror"" refers to title = 'The Amityville Horror'",SELECT COUNT(T2.person_id) FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'The Amityville Horror' AND T2.job = 'Producer'
movies_4,"What is the production company of the movie ""Crazy Heart""?","movie ""Crazy Heart"" refers to title = 'Crazy Heart'; production company refers to company_name",SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T3.title = 'Crazy Heart'
movies_4,"Give the number of movies with ""saving the world"" as the keyword.","""saving the world"" as the keyword refers to keyword_name = 'saving the world'",SELECT COUNT(T2.movie_id) FROM keyword AS T1 INNER JOIN movie_keywords AS T2 ON T1.keyword_id = T2.keyword_id WHERE keyword_name = 'saving the world'
movies_4,"For all the movies which were produced by Cruel and Unusual Films, which one has the most popularity?",produced by Cruel and Unusual Films refers to company_name = 'Cruel and Unusual Films'; most popularity refers to max(popularity),SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Cruel and Unusual Films' ORDER BY T3.popularity DESC LIMIT 1
movies_4,"For the movie ""Reign of Fire"", which department was Marcia Ross in?","movie ""Reign of Fire"" refers to title = 'Reign of Fire'; which department refers to department_name",SELECT T4.department_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id INNER JOIN department AS T4 ON T2.department_id = T4.department_id WHERE T3.person_name = 'Marcia Ross' AND T1.title = 'Reign of Fire'
movies_4,Calculate the average budget of the movies directed by Jaume Collet-Serra.,directed by refers to job = 'Director'; average budget = AVG(budget),SELECT CAST(SUM(T1.budget) AS REAL) / COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Jaume Collet-Serra' AND T2.job = 'Director'
movies_4,"What is the percentage of male characters in the movie ""Bride Wars""?","male refers to gender = 'Male'; ""Bride Wars"" refers to title = 'Bride Wars'; percentage = divide(sum(gender = 'Male'), count(gender)) * 100 as percentage",SELECT CAST(COUNT(CASE WHEN T3.gender = 'Male' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T3.gender) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN gender AS T3 ON T2.gender_id = T3.gender_id WHERE T1.title = 'Bride Wars'
movies_4,What is the title of the movie that was made with the most money and resources?,made with the most money and resources refers to max(budget),SELECT title FROM movie ORDER BY budget DESC LIMIT 1
movies_4,How many movies have made at least 1 Billion at the box office?,have made at least 1 Billion at the box office refers to revenue > 1000000000,SELECT COUNT(movie_id) FROM movie WHERE revenue > 1000000000
movies_4,When was the first movie released?,when the first movie refers to release_date where min(release_date),SELECT MIN(release_date) FROM movie WHERE movie_status = 'Released'
movies_4,How many crew are named John Young?,,SELECT COUNT(person_id) FROM person WHERE person_name = 'John Young'
movies_4,Provide the title of the movie that is most-liked by a large number of people.,most-liked by a large number of people refers to max(popularity),SELECT title FROM movie ORDER BY popularity DESC LIMIT 1
movies_4,Who is the person associated with the crew id 1325273?,Who is the person refers to person_name; crew id 1325273 refers to person_id = 1325273,SELECT person_name FROM person WHERE person_id = 1325273
movies_4,What is the name of the production company that made the most movies?,name of the production company refers to company_name; most movies refers to max(count(company_name)),SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY COUNT(T2.movie_id) DESC LIMIT 1
movies_4,Who played Captain Jack Sparrow in all of the Pirates of the Caribbean movies?,Captain Jack Sparrow refers to character_name = 'Captain Jack Sparrow'; Pirates of the Caribbean movies refers to title LIKE 'Pirates of the Carribbean%',SELECT DISTINCT T3.person_name FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T2.character_name = 'Captain Jack Sparrow' AND T1.title LIKE 'Pirates of the Caribbean%'
movies_4,What is Walt Disney Pictures' most popular movie?,Walt Disney Pictures refers to company_name = 'Walt Disney Pictures'; most popular movie refers to max(popularity),SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Walt Disney Pictures' ORDER BY T3.popularity DESC LIMIT 1
movies_4,How many movies did Universal Studios release?,Universal Studios refers to company_name = 'Universal Studios',SELECT COUNT(T2.movie_id) FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id WHERE T1.company_name = 'Universal Studios'
movies_4,Which production company produced the movie that made the most money at the box office?,Which production company refers to company_name; most money at the box office refers to max(revenue),SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id GROUP BY T1.company_id ORDER BY SUM(T3.revenue) DESC LIMIT 1
movies_4,"How many female crews are in the movie ""Mr. Smith Goes to Washington""?","female crews refers to gender = 'Female'; ""Mr. Smith Goes to Washington"" refers to title = 'Mr. Smith Goes to Washington'",SELECT COUNT(T3.gender) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN gender AS T3 ON T2.gender_id = T3.gender_id WHERE T1.title = 'Mr. Smith Goes to Washington' AND T3.gender = 'Female'
movies_4,List the names of the production companies that made at least 200 movies.,names of the production companies refers to company_name; at least 200 movies refers to COUNT(company_name) > = 200,SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id HAVING COUNT(T2.movie_id) > 200
movies_4,How many movies did Harrison Ford appear in total?,,SELECT COUNT(T2.movie_id) FROM person AS T1 INNER JOIN movie_cast AS T2 ON T1.person_id = T2.person_id WHERE T1.person_name = 'Harrison Ford'
movies_4,What is the title of Jamie Foxx's most recent movie?,most recent movie refers to max(release_date),SELECT T1.title FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Jamie Foxx' ORDER BY T1.release_date DESC LIMIT 1
movies_4,How many movies released in 1995 did Quentin Tarantino appear in?,released in 1995 refers to release_date LIKE '1995%',"SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Quentin Tarantino' AND CAST(STRFTIME('%Y', T1.release_date) AS INT) = 1995"
movies_4,What is the title of the first crime movie ever released?,first crime movie ever released refers to min(release_date) and genre_name = 'Crime',SELECT T1.title FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Crime' ORDER BY T1.release_date LIMIT 1
movies_4,How many horror movies are there?,horror movies refers to genre_name = 'Horror',SELECT COUNT(T1.movie_id) FROM movie_genres AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.genre_id WHERE T2.genre_name = 'Horror'
movies_4,List the person IDs of the second film editors in Movie No. 12.,second film editors refers to job = 'Second Film Editor'; Movie No. 12 refers to movie_id = 12,SELECT person_id FROM movie_crew WHERE movie_id = 12 AND job = 'Second Film Editor'
movies_4,How many animators does Movie No. 129 have?,animators refers to job = 'Animation'; Movie No. 129 refers to movie_id = 129,SELECT COUNT(movie_id) FROM movie_crew WHERE movie_id = 129 AND job = 'Animation'
movies_4,"In Movie No. 19, how many people are there in Department No. 7? Please give me their job.",Movie No. 19 refers to movie_id = 19; Department No. 7 refers to department_id = 7,SELECT COUNT(DISTINCT job) FROM movie_crew WHERE movie_id = 19 AND department_id = 7
movies_4,Write the person ID and character name of casts between order numbers 1 and 10 in Movie No. 285.,casts between order numbers 1 and 10 refers to cast_order BETWEEN 2 AND 9; Movie No. 285 refers to movie_id = 285,"SELECT person_id, character_name FROM movie_cast WHERE movie_id = 285 AND cast_order BETWEEN 1 AND 10"
movies_4,How many times did Bob Peterson appear in the movie credits?,,SELECT COUNT(T2.movie_id) FROM person AS T1 INNER JOIN movie_cast AS T2 ON T1.person_id = T2.person_id WHERE T1.person_name = 'Bob Peterson'
movies_4,Tally the movie ID and character name in the movie starring Jim Carrey.,,"SELECT T2.movie_id, T2.character_name FROM person AS T1 INNER JOIN movie_cast AS T2 ON T1.person_id = T2.person_id WHERE T1.person_name = 'Jim Carrey'"
movies_4,Give the names of the female cast in Movie No. 1865.,female cast refers to gender = 'Female'; name of cast refers to person_name; Movie No. 1865 refers to movie_id = 1865,SELECT T2.person_name FROM movie_cast AS T1 INNER JOIN person AS T2 ON T1.person_id = T2.person_id INNER JOIN gender AS T3 ON T1.gender_id = T3.gender_id WHERE T1.movie_id = 1865 AND T3.gender = 'Female'
movies_4,Write me the titles of the movies starring Jim Carrey.,Jim Carrey is the person_name;,SELECT T1.title FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Jim Carrey'
movies_4,List the director's name of the movies released between 1/01/1916 and 12/31/1925.,director's name refers to person_name where job = 'Director'; released between 1/01/1916 and 12/31/1925 refers to release_date BETWEEN '1916-01-02' AND '1925-12-30',SELECT T2.person_name FROM movie_cast AS T1 INNER JOIN person AS T2 ON T1.person_id = T2.person_id INNER JOIN movie AS T3 ON T1.movie_id = T3.movie_id INNER JOIN movie_crew AS T4 ON T1.movie_id = T4.movie_id WHERE T4.job = 'Director' AND T3.release_date BETWEEN '1916-01-01' AND '1925-12-31'
movies_4,How many films released between 1/2/1990 and 12/30/2000 starred Uma Thurman?,released between 1/2/1990 and 12/30/2000 refers to release_date BETWEEN '1990-01-02' AND '2000-12-30'; film has the same meaning as movie; starred Uma Thurman refers to person_name = 'Uma Thurman',SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Uma Thurman' AND T1.release_date BETWEEN '1990-01-01' AND '2000-12-31'
movies_4,Write the titles of horror films with a vote average of more than 7.,horror films refers to genre_name = 'Horror'; vote average of more than 7 refers to vote_average > 7,SELECT T1.title FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Horror' AND vote_average > 7
movies_4,"Give the genre and popularity of movies whose revenue is at least 120,000,000 between 2012 and 2015.","genre refers to genre_name; revenue is at least 120,000,000 refers to revenue > = 120000000; between 2012 and 2015 refers to release_date BETWEEN '2012-01-01' AND '2015-12-31'","SELECT T3.genre_name, T1.popularity FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.revenue > 120000000 AND T1.release_date BETWEEN '2012-01-01' AND '2015-12-31'"
movies_4,"How many Indian movies between 1/2/1990 and 12/30/2003 have revenue of more than 75,000,000 and popularity of no less than 20?","Indian movies refers to country_name = 'India'; between 1/2/1990 and 12/30/2003 refers to release_date BETWEEN '1990-01-02' AND '2003-12-30'; revenue of more than 75,000,000 refers to revenue > 75000000; popularity of no less than 20 refers to popularity > = 20",SELECT COUNT(T2.movie_id) FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id WHERE T1.revenue > 75000000 AND T1.popularity >= 20 AND T1.release_date BETWEEN '1990-01-01' AND '2003-12-31'
movies_4,What is the title of the highest-budget film to date? Please include the revenue and name the country.,highest-budget film refers to max(budget); name the country refers to country_name,"SELECT T1.title, T1.revenue, T3.COUNTry_name FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id ORDER BY T1.budget DESC LIMIT 1"
movies_4,List the title of movies in Latin released between 1/01/1990 and 12/31/1995.,movies in Latin refers to language_name = 'Latin'; released between 1/01/1990 and 12/31/1995 refers to release_date BETWEEN '1990-01-01' AND '1995-12-31',SELECT T1.title FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Latin' AND T1.release_date BETWEEN '1990-01-01' AND '1995-12-31'
movies_4,What is the average revenue of American movies in 2006?,American movies refers to country_name = 'United States of America'; in 2006 refers to release_date LIKE '2006%'; average revenue = AVG(revenue),"SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T3.COUNTry_name = 'United States of America' AND CAST(STRFTIME('%Y', T1.release_date) AS INT) = 2006"
movies_4,Calculate the 2016 gap between the average revenue for Indian and American films.,"2016 refers to release_date LIKE '2016%'; Indian and American films refers to country_name = 'India' and country_name = 'United States of America'; gap between the average revenue refers to subtract(divide(sum(revenue), count(movie_id)) when country_name = 'United States of America', divide(sum(revenue), count(movie_id)) when country_name = 'India')","SELECT AVG(CASE WHEN T3.COUNTry_name = 'United States of America' THEN T1.revenue END) - AVG(CASE WHEN T3.COUNTry_name = 'India' THEN T1.revenue END) AS CALCULATE FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE CAST(STRFTIME('%Y', T1.release_date) AS INT) = 2016"
movies_4,What is the percentage of romance films among films produced in India in 2015?,"romance films refers to genre_name = 'Romance'; in India refers to country_name = 'India'; 2015 refers to release_date BETWEEN '2015-01-01' AND '2015-01-31'; percentage = divide(sum(movie_id) when genre_name = 'Romance', count(movie_id)) as percentage",SELECT CAST(COUNT(CASE WHEN T4.genre_name = 'Romance' THEN T1.movie_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_COUNTry AS T3 ON T1.movie_id = T3.movie_id INNER JOIN genre AS T4 ON T2.genre_id = T4.genre_id INNER JOIN COUNTry AS T5 ON T3.COUNTry_id = T5.COUNTry_id WHERE T5.COUNTry_name = 'India' AND T1.release_date BETWEEN '2015-01-01' AND '2015-12-31'
movies_4,Which actor plays Optimus Prime?,Which actor refers to person_name; Optimus Prime refers to character_name = 'Optimus Prime (voice)',SELECT DISTINCT T1.person_name FROM person AS T1 INNER JOIN movie_cast AS T2 ON T1.person_id = T2.person_id WHERE T2.character_name = 'Optimus Prime (voice)'
movies_4,What is the gender of the character 'USAF Master Sgt. Epps?',character 'USAF Master Sgt. Epps' refers to character_name = 'USAF Master Sgt. Epps',SELECT T2.gender FROM movie_cast AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.gender_id WHERE T1.character_name = 'USAF Master Sgt. Epps'
movies_4,"List all companies who worked in the movie 'Ultramarines: A Warhammer 40,000 Movie.'","all companies refers to company_name; movie 'Ultramarines: A Warhammer 40,000 Movie' refers to title = 'Ultramarines: A Warhammer 40,000 Movie'","SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T3.title = 'Ultramarines: A Warhammer 40,000 Movie'"
movies_4,Which movie did the company 'Radiant Film GmbH' work on?,Which movie refers to title; company 'Radiant Film GmbH' refers to company_name = 'Radiant Film GmbH',SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Radiant Film GmbH'
movies_4,What are the genres of Sky Captain and the World of Tomorrow?,genres refers to genre_name; Sky Captain and the World of Tomorrow refers to title = 'Sky Captain and the World of Tomorrow',SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.title = 'Sky Captain and the World of Tomorrow'
movies_4,Write all the keywords belonging to the movie 'Sky Captain and the World of Tomorrow.',keywords refers to keyword_name; movie 'Sky Captain and the World of Tomorrow' refers to title = 'Sky Captain and the World of Tomorrow',SELECT T3.keyword_name FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T1.title = 'Sky Captain and the World of Tomorrow'
movies_4,The movie 'Gojira ni-sen mireniamu' is from which country?,movie 'Gojira ni-sen mireniamu' refers to title = 'Gojira ni-sen mireniamu'; which country refers to country_name,SELECT T3.COUNTry_name FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T1.title = 'Gojira ni-sen mireniamu'
movies_4,Which movie has the keyword 'extremis?',Which movie refers to title; keyword 'extremis' refers to keyword_name = 'extremis',SELECT T1.title FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T3.keyword_name = 'extremis'
movies_4,List 10 movie titles that were produced in France.,France refers to country_name = 'France',SELECT T1.title FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T3.COUNTry_name = 'France' LIMIT 10
movies_4,Who is the director for the movie 'Transformers?',the director refers to person_name where job = 'Director'; movie 'Transformers' refers to title = 'Transformers',SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title = 'Transformers' AND T2.job = 'Director'
movies_4,List 10 crews alongside their jobs who worked on the movie 'Mad Max: Fury Road.',crews refers to person_name; movie 'Mad Max: Fury Road' refers to title = 'Mad Max: Fury Road',SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title = 'Mad Max: Fury Road' LIMIT 10
movies_4,What percentage of movies that came from Japan belong in the 'animation' genre?,"from Japan refers to country_name = 'Japan'; in the 'animation' genre refers to genre_name = 'animation'; percentage = divide(sum(movie_id) when genre_name = 'animation', count(movie_id)) as percentage",SELECT CAST(COUNT(CASE WHEN T4.genre_name = 'Animation' THEN T1.movie_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_COUNTry AS T3 ON T1.movie_id = T3.movie_id INNER JOIN genre AS T4 ON T2.genre_id = T4.genre_id INNER JOIN COUNTry AS T5 ON T3.COUNTry_id = T5.COUNTry_id WHERE T5.COUNTry_name = 'Japan'
movies_4,What is the ratio between male and female cast members of the movie 'Iron Man?' Count how many have unspecified genders.,"male refers to gender = 'Male'; female refers to gender = 'Female'; movie 'Iron Man' refers to title = 'Iron Man'; ratio = divide(sum(gender = 'Female'), sum(gender = 'Male'))","SELECT CAST(COUNT(CASE WHEN T3.gender = 'Male' THEN 1 ELSE NULL END) AS REAL) / COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS RATIO , COUNT(CASE WHEN T3.gender = 'Unspecified' THEN 1 ELSE NULL END) AS UNGENDERS FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN gender AS T3 ON T2.gender_id = T3.gender_id WHERE T1.title = 'Iron Man'"
movies_4,List down five movie titles that were released before 2000.,released before 2000 refers to release_date < '2000-01-01',"SELECT title FROM movie WHERE CAST(STRFTIME('%Y', release_date) AS INT) < 2000 LIMIT 5"
movies_4,"What is the keyword ID of the movie with the title of ""Sin City""?","title of ""Sin City"" refers to title = 'Sin City'",SELECT T2.keyword_id FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'Sin City'
movies_4,"Look for the movie title with the keyword of ""angel"".","keyword of ""angel"" refers to keyword_name = 'angel'",SELECT T1.title FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T3.keyword_name = 'angel'
movies_4,Which keywords belong to the movie titles with the highest popularity?,Which keywords refers to keyword_name; highest popularity refers to max(popularity),SELECT T3.keyword_name FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id ORDER BY T1.popularity DESC LIMIT 1
movies_4,"Provide the genre ID of the movie with the title of ""The Dark Knight"".","movie with the title of ""The Dark Knight"" refers to title = 'The Dark Knight'",SELECT T2.genre_id FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'The Dark Knight'
movies_4,List down the movie titles within the genre of thriller.,genre of thriller refers to genre_name = 'Thriller',SELECT T1.title FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Thriller'
movies_4,Write down five rumoured movie titles within the genre of Drama.,rumoured movie refers to movie_status = 'rumoured'; genre of Drama refers to genre_name = 'Drama',SELECT T1.title FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.movie_status = 'Rumored' AND T3.genre_name = 'Drama' LIMIT 5
movies_4,What is the genre of the movie title with the lowest revenue generated?,genre refers to genre_name; lowest revenue refers to min(revenue),SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id ORDER BY T1.revenue LIMIT 1
movies_4,State the genre of the movie title with a runtime of only 14 minutes.,genre refers to genre_name; runtime of only 14 minutes refers to runtime = 14,SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.runtime = 14
movies_4,What is the genre of the movie title which was well-received by the audiences but made the lowest revenue?,genre refers to genre_name; well-received by the audiences refers to max(vote_average); lowest revenue refers to min(revenue),"SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id ORDER BY T1.vote_average DESC, T1.revenue LIMIT 1"
movies_4,"Provide the genre of a movie title with a tagline of ""A long time ago in a galaxy far, far away…"".","genre refers to genre_name; tagline of ""A long time ago in a galaxy far, far away…"" refers to tagline = 'A long time ago in a galaxy far, far away…'","SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T3.genre_id = T2.genre_id WHERE T1.tagline = 'A long time ago in a galaxy far, far away...'"
movies_4,"What is the country ID of the movie with the title of ""Pirates of the Caribbean: Dead Man's Chest""?","title of ""Pirates of the Caribbean: Dead Man's Chest"" refers to title = 'Pirates of the Caribbean: Dead Man''s Chest'",SELECT T2.COUNTry_id FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title LIKE 'Pirates of the Caribbean: Dead Man%s Chest'
movies_4,List down the movie titles that were produced in Canada.,produced in Canada refers to country_name = 'Canada',SELECT T1.title FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T3.COUNTry_name = 'Canada'
movies_4,"Accumulate the budget of the movie titles with the keyword of ""video game"".","keyword of ""video game"" refers to keyword_name = 'video game'",SELECT SUM(T1.budget) FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T3.keyword_name = 'video game'
movies_4,"For movies with the keyword of ""civil war"", calculate the average revenue generated by these movies.","keyword of ""civil war"" refers to keyword_name = 'civil war'; average revenue = AVG(revenue)",SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T3.keyword_name = 'civil war'
movies_4,Find out the popularity of the movies with the highest vote count.,highest vote count refers to max(vote_count),SELECT popularity FROM movie ORDER BY vote_COUNT DESC LIMIT 1
movies_4,"Among the zero-budget movie titles, which one has made the highest revenue?",zero-budget refers to budget = 0; highest revenue refers to max(revenue),SELECT title FROM movie WHERE budget = 0 ORDER BY revenue DESC LIMIT 1
movies_4,"What is the ID of the production company which produced the movie ""Gladiator""?","ID of the production company refers to company_id; movie ""Gladiator"" refers to title = 'Gladiator'",SELECT T2.company_id FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'Gladiator'
movies_4,List down the IDs of the production companies that released the movies in 1916.,IDs of the production companies refers to company_id; movies in 1916 refers to release_date LIKE '1916%',"SELECT T2.company_id FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id WHERE CAST(STRFTIME('%Y', T1.release_date) AS INT) = 1916"
movies_4,List down the movies produced by Lucasfilm.,movies refers to title; produced by Lucasfil refers to company_name = 'Lucasfilm',SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Lucasfilm'
movies_4,"Among Warner Bros. Pictures' movies, which title made the highest revenue?",Warner Bros. Pictures' movies refers to company_name = 'Warner Bros. Pictures'; highest revenue refers to max(revenue),SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Warner Bros. Pictures' ORDER BY T3.revenue DESC LIMIT 1
movies_4,Write down the release date of the movies produced by Twentieth Century Fox Film Corporation.,produced by Twentieth Century Fox Film Corporation refers to company_name = 'Twentieth Century Fox Film Corporation',SELECT T3.release_date FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Twentieth Century Fox Film Corporation'
movies_4,"What is the language ID of the movie ""Walk the Line""?","movie ""Walk the Line"" refers to title = 'Walk the Line'",SELECT T2.language_id FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'Walk the Line'
movies_4,Find out the language ID of the movie with the highest popularity.,highest popularity refers to max(popularity),SELECT T2.language_id FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id ORDER BY T1.popularity DESC LIMIT 1
movies_4,"Tell the language of the movie ""C'era una volta il West"".","language refers to language_name; movie ""C'era una volta il West"" refers to title = 'C''era una volta il West'",SELECT T3.language_name FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T1.title LIKE 'C%era una volta il West'
movies_4,Are there any post-production movies in Nederlands?,post-production movies refers to movie_status = 'Post Production'; Nederlands refers to language_name = 'Nederlands';,SELECT DISTINCT CASE WHEN T1.movie_status = 'Post Production' THEN 'YES' ELSE 'NO' END AS YORN FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Nederlands'
movies_4,List down the tagline of the Polski movies.,Polski movies refers to language_name = 'Polski',SELECT DISTINCT T1.tagline FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Polski'
movies_4,Provide the homepage of the Bahasa Indonesia movies.,Bahasa Indonesia movies refers to language_name = 'Bahasa indonesia',SELECT DISTINCT T1.homepage FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Bahasa indonesia'
movies_4,Work out the difference in revenues made between the English and Latin movies.,"English refers to language_name = 'English'; Latin refers to language_name = 'Latin'; difference in revenues = subtract(sum(movie_id) when language_name = 'English', sum(movie_id) when language_name = 'Latin')",SELECT SUM(CASE WHEN T3.language_name = 'English' THEN T1.revenue ELSE 0 END) - SUM(CASE WHEN T3.language_name = 'Latin' THEN T1.revenue ELSE 0 END) AS DIFFERENCE FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id
movies_4,Calculate the revenues made by Fantasy Films and Live Entertainment.,made by Fantasy Films refers to company_name = 'Fantasy Films'; Live Entertainment refers to company_name = 'Live Entertainment',"SELECT SUM(T3.revenue) FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name IN ('Fantasy Films', 'Live Entertainment')"
movies_4,What is the average revenue made by Latin movies?,Latin movies refers to language_name = 'Latin'; average revenue = AVG(revenue),SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Latin'
movies_4,What is the most common first name?,most common first name refers to max(count(person_name)),SELECT person_name FROM person GROUP BY person_name ORDER BY COUNT(person_name) DESC LIMIT 1
movies_4,What is the average number of crews for a movie?,"average number of crews = divide(count(person_id), COUNT(movie_id))","SELECT CAST(SUM(CD) AS REAL) / COUNT(movie_id) FROM ( SELECT movie_id, COUNT(person_id) AS CD FROM movie_crew GROUP BY movie_id )"
movies_4,"List all the keywords with ""christmas"" in them.","keywords with ""christmas"" in them refers to keyword_name LIKE '%christmas%'",SELECT keyword_name FROM keyword WHERE keyword_name LIKE '%christmas%'
movies_4,What is the longest runtime of all movies?,longest runtime refers to max(runtime),SELECT MAX(runtime) FROM movie
movies_4,"What is the iso code of ""Kyrgyz Republic""?","iso code refers to country_iso_code; ""Kyrgyz Republic"" refers to country_name = 'Kyrgyz Republic'",SELECT COUNTry_iso_code FROM COUNTry WHERE COUNTry_name = 'Kyrgyz Republic'
movies_4,"Provide the overview for the movie ""The Pacifier"".","movie ""The Pacifier"" refers to title = 'The Pacifier'",SELECT overview FROM movie WHERE title = 'The Pacifier'
movies_4,"How many movies were produced by ""Eddie Murphy Productions""?","produced by ""Eddie Murphy Productions"" refers to company_name = 'Eddie Murphy Productions'",SELECT COUNT(T1.movie_id) FROM movie_company AS T1 INNER JOIN production_company AS T2 ON T1.company_id = T2.company_id WHERE T2.company_name = 'Eddie Murphy Productions'
movies_4,"List all the actors who have played characters with ""captain"" in their names.","List all the actors refers to person_name; characters with ""captain"" in their names refers to character_name LIKE '%captain%';",SELECT DISTINCT T1.person_name FROM person AS T1 INNER JOIN movie_cast AS T2 ON T1.person_id = T2.person_id WHERE T2.character_name LIKE '%captain%'
movies_4,What is the most common keyword among all the movies released in 2006?,most common keyword refers to max(count(keyword_name)); movies released in 2006 refers to release_date LIKE '%2006%',SELECT T3.keyword_name FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T1.release_date LIKE '2006%' GROUP BY T3.keyword_name ORDER BY COUNT(T3.keyword_name) DESC LIMIT 1
movies_4,"How many movies have ""vi"" as their language code?","""vi"" as their language code refers to language_code = 'vi'",SELECT COUNT(T1.movie_id) FROM movie_languages AS T1 INNER JOIN language AS T2 ON T1.language_id = T2.language_id WHERE T2.language_code = 'vi'
movies_4,What is the third least common genre?,least common genre refers to min(count(genre_name)),"SELECT T2.genre_name FROM movie_genres AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.genre_id GROUP BY T2.genre_id ORDER BY COUNT(T1.movie_id) LIMIT 2, 1"
movies_4,"What is the original language of the movie with the tagline ""An offer you can't refuse.""?",language refers to language_name; original language refers to language_role = 'Original',SELECT T3.language_name FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id INNER JOIN language_role AS T4 ON T2.language_role_id = T4.role_id WHERE T4.language_role = 'Original' AND T1.tagline LIKE 'An offer you can%t refuse.'
movies_4,Provide the average revenue of all the French movies.,French movies refers to country_name = 'France'; average revenue = AVG(revenue),SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T3.COUNTry_name = 'France'
movies_4,List all the unspecified gender characters.,characters refers to character_name; gender = 'Unspecified',SELECT T1.character_name FROM movie_cast AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.gender_id WHERE T2.gender = 'Unspecified'
movies_4,What are the top 5 most popular movie directors?,directors refers to job = 'Director'; most popular refers to max(popularity),SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T2.job = 'Director' ORDER BY T1.popularity DESC LIMIT 5
movies_4,List the film with the highest budget in each genre.,highest budget refers to max(budget); each genre refers to genre_name; film also means movie; list the film refers to title of movie,"SELECT T3.genre_name, MAX(T1.budget) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id GROUP BY T3.genre_name"
movies_4,What is the title of the movie with the most keywords?,most keywords refers to max(count(keyword_id)),SELECT T1.title FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id GROUP BY T1.title ORDER BY COUNT(T2.keyword_id) DESC LIMIT 1
movies_4,Which department has the most people?,department refers to department_name; most people refers to max(count(department_id)),SELECT T1.department_name FROM department AS T1 INNER JOIN movie_crew AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY COUNT(T2.department_id) DESC LIMIT 1
movies_4,What percentage of films are made in the US?,"films' and 'movies' are synonyms; made in the US refers to country_iso_code = 'US'; percentage = divide(sum(country_id) when country_iso_code = 'US', count(country_id)) * 100 as percentage",SELECT CAST(COUNT(CASE WHEN T3.COUNTry_iso_code = 'US' THEN T1.movie_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id
movies_4,What is the average ratio between female and male actors in a movie?,"female refers to gender = 'Female'；male refers to gender = 'Male'; average ratio = divide(divide(sum(gender_id) when gender = 'Female', sum(gender_id) when gender = 'Male'), count(movie_id)) as percentage",SELECT CAST(COUNT(CASE WHEN T2.gender = 'Female' THEN T1.person_id ELSE NULL END) AS REAL) / COUNT(CASE WHEN T2.gender = 'Male' THEN T1.person_id ELSE NULL END) FROM movie_cast AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.gender_id
movies_4,List the movies released in 1945.,List the movies refers to title; released in 1945 refers to release_date LIKE '1945%',"SELECT title FROM movie WHERE CAST(STRFTIME('%Y', release_date) AS INT) = 1945"
movies_4,Provide the ID and ISO code of Belgium.,ID refers to country_id; ISO code refers to country_iso_code; Belgium refers to country_name = 'Belgium',"SELECT COUNTry_id, COUNTry_iso_code FROM COUNTry WHERE COUNTry_name = 'Belgium'"
movies_4,List the character names played by Catherine Deneuve.,,SELECT T2.character_name FROM person AS T1 INNER JOIN movie_cast AS T2 ON T1.person_id = T2.person_id WHERE T1.person_name = 'Catherine Deneuve'
movies_4,List the movies in the Somali language.,List the movies refers to title; Somali language refers to language_name = 'Somali',SELECT T1.title FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Somali'
movies_4,Provide the release date and language of the most popular movie.,language refers to langauge_name; most popular movie refers to max(popularity),"SELECT T1.release_date, T3.language_name FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id ORDER BY T1.popularity DESC LIMIT 1"
movies_4,"What is the original language of the ""Four Rooms"" movie?","language refers to language_name; original language refers to language_role = 'Original'; ""Four Rooms"" refers to title = 'Four Rooms'",SELECT T3.language_name FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id INNER JOIN language_role AS T4 ON T2.language_role_id = T4.role_id WHERE T4.language_role = 'Original' AND T1.title = 'Four Rooms'
movies_4,"List the character names in the ""Open Water"" movie.","""Open Water"" movie refers to title = 'Open Water'",SELECT T2.character_name FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'Open Water'
movies_4,"Who is the main actor in the ""Pirates of the Caribbean: At World's End"" movie?","main actor refers to person_name where Min(cast_order); ""Pirates of the Caribbean: At World's End"" refers to title = 'Pirates of the Caribbean: At World''s End'",SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End' ORDER BY T2.cast_order LIMIT 1
movies_4,List the names of camera supervisors in the crew.,names refers to person_name; camera supervisors refers to job = 'Camera Supervisor';,SELECT T1.person_name FROM person AS T1 INNER JOIN movie_crew AS T2 ON T1.person_id = T2.person_id WHERE T2.job = 'Camera Supervisor'
movies_4,List the job titles of Sally Menke in the crew.,job titles refers to job,SELECT DISTINCT T2.job FROM person AS T1 INNER JOIN movie_crew AS T2 ON T1.person_id = T2.person_id WHERE T1.person_name = 'Sally Menke'
movies_4,"Provide the names and departments of the person who worked as a music editor in the ""Pirates of the Caribbean: At World's End"" movie.","names refers to person_name; departments refers to department_name; worked as a music editor refers to job = 'Music Editor'; ""Pirates of the Caribbean: At World's End"" refers to title = 'Pirates of the Caribbean: At World''s End'","SELECT T3.person_name, T4.department_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id INNER JOIN department AS T4 ON T2.department_id = T4.department_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End' AND T2.job = 'Music Editor'"
movies_4,Provide the titles and revenues of the movies produced by the DreamWorks company.,produced by the DreamWorks company refers to company_name = 'DreamWorks',"SELECT T1.title, T1.revenue FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_company AS T3 ON T2.company_id = T3.company_id WHERE T3.company_name = 'DreamWorks'"
movies_4,How many movies were produced in Canada?,produced in Canada refers to country_name = 'Canada',SELECT COUNT(T2.movie_id) FROM COUNTry AS T1 INNER JOIN production_COUNTry AS T2 ON T1.COUNTry_id = T2.COUNTry_id WHERE T1.COUNTry_name = 'Canada'
movies_4,List the genres of Forrest Gump movie.,genres refers to genre_name; Forrest Gump movie refers to title = 'Forrest Gump',SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.title = 'Forrest Gump'
movies_4,Provide the production companies of the movie that has over 35% average running time per movie in 2016.,"production companies refers to company_name; in 2016 refers to release_date LIKE '2016%'; over 35% average running time per movie refers to divide(subtract(runtime, AVG(runtime)), AVG(runtime)) * 100 as percentage > 35","SELECT T.company_name FROM ( SELECT DISTINCT T3.company_name, T1.runtime FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_company AS T3 ON T3.company_id = T2.company_id WHERE T1.release_date LIKE '2016%' ) T WHERE T.runtime * 100 > (0.35 * ( SELECT AVG(T1.runtime) FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_company AS T3 ON T3.company_id = T2.company_id WHERE T1.release_date LIKE '2016%' ) + ( SELECT AVG(T1.runtime) FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_company AS T3 ON T3.company_id = T2.company_id WHERE T1.release_date LIKE '2016%' )) * 100"
movies_4,"Find the difference in percentage of the movies under keywords of ""woman director"" and ""independent film"".","under keywords of ""woman director"" and ""independent film"" refers to keyword_name = 'woman director' and keyword_name = 'independent film'; difference in percentage = divide(subtract(count(movie_id) when keyword_name = 'woman director', count(movie_id) when keyword_name = 'independent film'), count(movie_id)) as percentage",SELECT CAST((SUM(CASE WHEN T1.keyword_name = 'woman director' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.keyword_name = 'independent film' THEN 1 ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T1.keyword_name = 'independent film' THEN 1 ELSE 0 END) FROM keyword AS T1 INNER JOIN movie_keywords AS T2 ON T1.keyword_id = T2.keyword_id
movies_4,Which genre does the movie Dancer in the Dark belong to?,genre refers to genre_name; movie Dancer in the Dark refers to title = 'Dancer in the Dark',SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.title = 'Dancer in the Dark'
movies_4,How many adventure movies are there that were released in 2000?,adventure movies refers to genre_name = 'Adventure'; released in 2000 refers to release_date LIKE '2000%',"SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Adventure' AND CAST(STRFTIME('%Y', T1.release_date) AS INT) = 2000"
movies_4,Which movies did the company Paramount Pictures produce in 2000?,Which movies refers to title; company Paramount Pictures refers to company_name = 'Paramount Pictures'; in 2000 refers to release_date LIKE '2000%',"SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Paramount Pictures' AND CAST(STRFTIME('%Y', T3.release_date) AS INT) = 2000"
movies_4,What keyword can the user use to search for the movie Finding Nemo?,What keyword refers to keyword_name; Finding Nemo refers to title = 'Finding Nemo',SELECT T3.keyword_name FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T1.title = 'Finding Nemo'
movies_4,Name the horror movies with positive ratings greater than 7.,Name the horror movies refers to title where genre_name = 'horror'; positive ratings greater than 7 refers to vote_average > 7,SELECT T1.title FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Horror' AND T1.vote_average > 7
movies_4,How many production companies made more than 150 movies?,more than 150 movies refers to COUNT(company_name) > 150,SELECT COUNT(*) FROM ( SELECT T1.company_name AS CNAME FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id HAVING COUNT(T1.company_name) > 150 )
movies_4,What is the role of Mark Hammel?,role refers to job,SELECT T2.job FROM person AS T1 INNER JOIN movie_crew AS T2 ON T1.person_id = T2.person_id WHERE T1.person_name = 'Mark Hammel'
movies_4,How many main actors are there in the movie Pirates of the Caribbean: At World's End?,main actors refers to gender = 'male' and min(cast_order); Pirates of the Caribbean: At World's End refers to title = 'Pirates of the Caribbean: At World''s End',SELECT COUNT(T2.cast_order) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN gender AS T3 ON T3.gender_id = T2.gender_id WHERE T3.gender = 'Male' OR T3.gender = 'Female' AND T1.title = 'Pirates of the Caribbean: At World''s End' AND T2.cast_order = ( SELECT MIN(T2.cast_order) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN gender AS T3 ON T3.gender_id = T2.gender_id WHERE T3.gender = 'Male' OR T3.gender = 'Female' AND T1.title = 'Pirates of the Caribbean: At World''s End' )
movies_4,Which movies have the participation of actor Harrison Ford?,Which movies refers to title; actor refers to person_name,SELECT T1.title FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Harrison Ford'
movies_4,Which character did Orlando Bloom play in the movie Pirates of the Caribbean: The Curse of the Black Pearl?,Which character refers to character_name; movie Pirates of the Caribbean: The Curse of the Black Pearl refers to title = 'Pirates of the Caribbean: The Curse of the Black Pearl',SELECT T2.character_name FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title = 'Pirates of the Caribbean: The Curse of the Black Pearl' AND T3.person_name = 'Orlando Bloom'
movies_4,What is the average number of horror movies among all movies genre?,"horror movies refers to genre_name = 'horror'; average number = divide(sum(movie_id) when genre_name = 'horror', count(movie_id))",SELECT CAST(COUNT(CASE WHEN T3.genre_name = 'Horror' THEN T1.movie_id ELSE NULL END) AS REAL) / COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id
movies_4,"List the names of all the producers in the movie ""Pirates of the Caribbean: At World's End"".","List the names refers to person_name; producers refers to job = 'Producer'; ""Pirates of the Caribbean: At World's End"" refers to title = 'Pirates of the Caribbean: The Curse of the Black Pearl'",SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title = 'Pirates of the Caribbean: The Curse of the Black Pearl' AND T2.job = 'Producer'
movies_4,"Calculate the average income made by movies using the keyword ""paris"". List the title of the movies.","income refers to revenue; keyword ""paris"" refers to keyword_name = 'paris'; average income = AVG(revenue)","SELECT AVG(T1.revenue), T1.title FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T3.keyword_name = 'paris'"
codebase_comments,How many English language codes whose comments for the method are in the XML format?,English language refers to Lang = 'en'; the comments for this method is XML format refers to CommentIsXml = 1;,SELECT COUNT(Lang) FROM Method WHERE Lang = 'en' AND CommentIsXml = 1
codebase_comments,"What is the task of the method whose tokenized name is ""online median filter test median window filling""?","tokenized name refers to NameTokenized; task of the method refers to the second part of name deliminated by "".""; for example, the task of 'LinqToDelicious.HttpWebRequestFactory.Create' is 'HttpWebRequestFactory'","SELECT SUBSTR(SUBSTR(Name, INSTR(Name, '.') + 1), 1, INSTR(SUBSTR(Name, INSTR(Name, '.') + 1), '.') - 1) task FROM Method WHERE NameTokenized = 'online median filter test median window filling'"
codebase_comments,What is the time of sampling of the solution with the highest sampling time? Indicate the id number of the solution.,highest sampling time refers to max(SampledAt); id number of the solution refers to SolutionId;,"SELECT DISTINCT SampledAt, SolutionId FROM Method WHERE SampledAt = ( SELECT MAX(SampledAt) FROM Method )"
codebase_comments,How many followers do the most followed repository on Github have? Give the github address of the repository.,more forks refers to more people follow this repository; most followed repository refers to max(Forks);  the github address of the repository refers to Url;,"SELECT Forks, Url FROM Repo WHERE Forks = ( SELECT MAX(Forks) FROM Repo )"
codebase_comments,What is the id of the repository with the highest number of solution path?,highest number of solution path refers to max(count(Path)); id of the repository refers to RepoId,SELECT RepoId FROM solution GROUP BY RepoId ORDER BY COUNT(Path) DESC LIMIT 1
codebase_comments,What is the most liked repository? Indicate its github address and the amount of stars it has received.,more stars mean more people like this repository; most liked refers to max(Stars); the github address of repository refers to Url;,"SELECT Url, Stars FROM Repo WHERE Stars = ( SELECT MAX(Stars) FROM Repo )"
codebase_comments,What is the name of the solution path with the highest processed time?,highest processed time refers to max(ProcessedTime);,SELECT Path FROM Solution WHERE ProcessedTime = ( SELECT MAX(ProcessedTime) FROM Solution )
codebase_comments,How much is the processed time of downloading the most popular repository?,more watchers mean that this repository is more popular;,SELECT ProcessedTime FROM Repo WHERE Watchers = ( SELECT MAX(Watchers) FROM Repo )
codebase_comments,"What is the github address of the ""nofear_Mara\Mara.sln"" solution path?",github address of repository refers to Url;,SELECT Url FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE Path = 'nofear_MaraMara.sln'
codebase_comments,Which repository has the longest amount of processed time of downloading? Indicate whether the solution paths in the repository can be implemented without needs of compilation.,longest amount of processed time refers to max(ProcessedTime); the repository can be implemented without needs of compilation refers to WasCompiled = 1;,"SELECT DISTINCT T1.id, T2.WasCompiled FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.ProcessedTime = ( SELECT MAX(ProcessedTime) FROM Repo )"
codebase_comments,"What is the tokenized name of the solution whose path is ""maravillas_linq-to-delicious\tasty.sln""?",tokenized name refers to NameTokenized,SELECT DISTINCT T2.NameTokenized FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'maravillas_linq-to-delicious'
codebase_comments,"Among the repositories whose number of stars received are between 6,000 to 9,000, which repository has the highest number of solution paths and many of those solution paths needs to be compiled if user wants to implement it?","Stars between 6,000 to 9,000; highest number of solution paths refers to max(count(Path)); needs to be compiled if user wants to implement it refers to WasCompiled = 0;","SELECT T2.RepoId, COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars BETWEEN 6000 AND 9000 AND T2.WasCompiled = 0 GROUP BY T2.RepoId ORDER BY COUNT(T2.RepoId) DESC LIMIT 1"
codebase_comments,"In the ""https://github.com/wallerdev/htmlsharp.git"", give all the linearized sequenced of API calls.",linearized sequenced of API calls refers to ApiCalls; 'https://github.com/wallerdev/htmlsharp.git' is url of repository,SELECT T3.ApiCalls FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId INNER JOIN Method AS T3 ON T2.Id = T3.SolutionId WHERE T1.Url = 'https://github.com/wallerdev/htmlsharp.git'
codebase_comments,How many solution paths are there inside the 2nd most popular repository?,more watchers mean that this repository is more popular; most popular repository refers to max(Watchers);,"SELECT COUNT(DISTINCT T2.Path) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Watchers = ( SELECT Watchers FROM Repo ORDER BY Watchers DESC LIMIT 1, 1 )"
codebase_comments,"What is the average processed time of the solution paths inside the ""https://github.com/zphingphong/DiscardCustomerApp.git""?",average processed time = avg(Solution.ProcessedTime);,SELECT CAST(SUM(T2.ProcessedTime) AS REAL) / COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/zphingphong/DiscardCustomerApp.git'
codebase_comments,"What is the full comment on the method whose solution path is ""bmatzelle_nini\Source\Nini.sln"" with a tokenized name of ""alias text add alias""?",,SELECT T2.FullComment FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'bmatzelle_niniSourceNini.sln' AND T2.NameTokenized = 'alias text add alias'
codebase_comments,"What is the linearized sequenced of API calls of the method whose solution path is ""mauriciodeamorim_tdd.encontro2\Tdd.Encontro2.sln""?",linearized sequenced of API calls refers to ApiCalls;,SELECT T2.ApiCalls FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'mauriciodeamorim_tdd.encontro2Tdd.Encontro2.sln'
codebase_comments,"How many solution paths that needs to be compiled if user wants to implement it in ""https://github.com/jeffdik/tachy.git""?",needs to be compiled if user wants to implement refers to WasCompiled = 0; https://github.com/jeffdik/tachy.git is url of repository,SELECT COUNT(T2.Path) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/jeffdik/tachy.git' AND T2.WasCompiled = 0
codebase_comments,"How much is the processed time of the method whose tokenized name is ""about box1 dispose""? Indicate the language of the method.",language refers to Lang;,"SELECT DISTINCT T1.ProcessedTime, T2.Lang FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.NameTokenized = 'about box1 dispose'"
codebase_comments,"In ""maxild_playground\Playground.sln"", what is the time of sampling for the method ""GitHubRepo.Cli.GitHubClientWrapper.GetReleases""?",the time of sampling refers to SampledAt; 'maxild_playground\Playground.sln' is the path of a solution,SELECT T2.SampledAt FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'maxild_playgroundPlayground.sln' AND T2.Name = 'GitHubRepo.Cli.GitHubClientWrapper.GetReleases'
codebase_comments,"What is the language of the method used in the solution path ""opendns_diagnosticapp\windows\OpenDnsDiagnostic.sln""?",language refers to Lang;,SELECT T2.Lang FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'opendns_diagnosticappwindowsOpenDnsDiagnostic.sln'
codebase_comments,"What's the task of the method whose tokenized name is ""html parser feed""?","tokenized name refers to NameTokenized; task of the method refers to the second part of name deliminated by "".""; for example, the task of 'LinqToDelicious.HttpWebRequestFactory.Create' is 'HttpWebRequestFactory'","SELECT SUBSTR(SUBSTR(Name, INSTR(Name, '.') + 1), 1, INSTR(SUBSTR(Name, INSTR(Name, '.') + 1), '.') - 1) task FROM Method WHERE NameTokenized = 'html parser feed'"
codebase_comments,"Are the comments for the method ""HtmlSharp.HtmlParser.Feed"" in XML format?",the comment for this method is not XML refers to CommentsXML = 0; the comments for this method is XML refers to CommentsXML = 1,SELECT CASE WHEN CommentIsXml = 0 THEN 'No' WHEN CommentIsXml = 1 THEN 'Yes' END isXMLFormat FROM Method WHERE Name = 'HtmlSharp.HtmlParser.Feed'
codebase_comments,"Which method has the summary ""Write a command to the log""?",,SELECT Name FROM Method WHERE Summary = 'Write a command to the log'
codebase_comments,How many solutions contain files found within the repository most people like?,more stars mean more people like this repository; most people like refers to max(Stars);,SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = ( SELECT MAX(Stars) FROM Repo )
codebase_comments,Please list the path of the solution that contains files found within the repository most people like.,more stars mean more people like this repository; most people like refers to max(Stars);,SELECT DISTINCT T2.Path FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = ( SELECT MAX(Stars) FROM Repo )
codebase_comments,What is the github address of the repository that contains files used by solution ID12?,github address refers to Url;,SELECT T1.Url FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 12
codebase_comments,"Among the solutions that contain files within the repository followed by over 1000 people, how many of them can be
implemented without needs of compilation?","followed by over 1000 people refers to Forks >1000; can be
implemented without needs of compilation refers to WasCompiled = 1;",SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Forks > 1000 AND T2.WasCompiled = 1
codebase_comments,"Which solution contains files within a more popular repository, the solution ID18 or solution ID19?",more watchers mean that this repository is more popular;,SELECT CASE WHEN SUM(CASE WHEN T2.Id = 18 THEN T1.Watchers ELSE 0 END) > SUM(CASE WHEN T2.Id = 19 THEN T1.Watchers ELSE 0 END) THEN 'SolutionID18' WHEN SUM(CASE WHEN T2.Id = 18 THEN T1.Watchers ELSE 0 END) < SUM(CASE WHEN T2.Id = 19 THEN T1.Watchers ELSE 0 END) THEN 'SolutionID19' END isMorePopular FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId
codebase_comments,"Among the solutions that contain files within the repository needing the longest processed time to download, how many of them doesn't need to be
compiled if user wants to implement it?",longest processed time refers to max(Solution.ProcessedTime); needs to be compiled if user wants to implement it refers to WasCompiled = 0；,SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.ProcessedTime = ( SELECT MAX(ProcessedTime) FROM Repo ) AND T2.WasCompiled = 1
codebase_comments,"What is the processed time to download the repository whose files are contained in the solution with the path ""jeffdik_tachy\src\Tachy.sln"".",,SELECT DISTINCT T2.ProcessedTime FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Path = 'jeffdik_tachysrcTachy.sln'
codebase_comments,Please give the url of the repository whose files are contained in solution ID 9?,,SELECT T1.Url FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 9
codebase_comments,"Please list all the paths of the solutions containing files within the repository whose url is ""https://github.com/maxild/playground.git"".",,SELECT T2.Path FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/maxild/playground.git'
codebase_comments,"Among the repositories with over 200 likes, how many of them have files contained by solutions with a processed time of under 636439500080712000?",over 200 likes refers to Stars > 200; ProcessedTime<636439500080712000;,SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.ProcessedTime < 636439500080712000 AND T1.Stars > 200
codebase_comments,Please list the IDs of the solutions that contain files within the top 3 followed repositories.,more forks refers to more people follow this repository;,SELECT T2.Id FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId ORDER BY T1.Forks DESC LIMIT 3
codebase_comments,"What is the average time needed for the solutions containing files within the repository whose url is ""https://github.com/jeffdik/tachy.git"" to be processd?",average time = avg(ProcessedTime)；,SELECT CAST(SUM(T2.ProcessedTime) AS REAL) / COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/jeffdik/tachy.git'
codebase_comments,How many more followers in percentage are there for the repository used by solution ID 18 than solution ID19?,"followers refers to Forks; percentage = divide(SUBTRACT(Forks(Solution.ID = 18), Forks(Solution.ID = 19)), Forks(Solution.ID = 19))*100%",SELECT CAST((SUM(CASE WHEN T2.Id = 18 THEN T1.Forks ELSE 0 END) - SUM(CASE WHEN T2.Id = 19 THEN T1.Forks ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T2.Id = 19 THEN T1.Forks ELSE 0 END) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId
codebase_comments,"What is the language of the method ''PixieTests.SqlConnectionLayerTests.TestSqlCreateGuidColumn""?",language refers to Lang；,SELECT Lang FROM Method WHERE Name = 'PixieTests.SqlConnectionLayerTests.TestSqlCreateGuidColumn'
codebase_comments,"Show the full Comment of the method ""DE2_UE_Fahrradkurier.de2_uebung_fahrradkurierDataSet1TableAdapters.TableAdapterManager.UpdateInsertedRows"".",,SELECT FullComment FROM Method WHERE Name = 'DE2_UE_Fahrradkurier.de2_uebung_fahrradkurierDataSet1TableAdapters.TableAdapterManager.UpdateInsertedRows'
codebase_comments,"List the summary of the method ""Castle.MonoRail.Framework.Test.StubViewComponentContext.RenderSection"".",,SELECT DISTINCT Summary FROM Method WHERE Name = 'Castle.MonoRail.Framework.Test.StubViewComponentContext.RenderSection'
codebase_comments,"Give the tokenized name for the method ""Supay.Irc.Messages.KnockMessage.GetTokens"".",,SELECT NameTokenized FROM Method WHERE Name = 'Supay.Irc.Messages.KnockMessage.GetTokens'
codebase_comments,How many stars does the repository of the solution No. 45997 have?,repository of solution no. refers to Id,SELECT T1.Stars FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 45997
codebase_comments,"For the repository which got '8094' Stars, how many solutions does it contain?",repository refers to Repo.Id;,SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = 8094
codebase_comments,"What is the solution path for the method ""IQ.Data.DbQueryProvider.CanBeEvaluatedLocally""?",solution path refers to Path; method refers to Name; Name = 'IQ.Data.DbQueryProvider.CanBeEvaluatedLocally',SELECT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Name = 'IQ.Data.DbQueryProvider.CanBeEvaluatedLocally'
codebase_comments,"For the method which got the tokenized name as 'interp parser expr', what is the processed time for its solution?",tokenized name refers to NameTokenized; NameTokenized = 'interp parser expr'; processed time for its solution refers to ProcessedTime;,SELECT T1.ProcessedTime FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.NameTokenized = 'interp parser expr'
codebase_comments,"What is the repository number for the solution of method ""SCore.Poisson.ngtIndex""?",repository number refers to RepoId; method refers to Name; Name = ‘SCore.Poisson.ngtIndex’,SELECT T1.RepoId FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Name = 'SCore.Poisson.ngtIndex'
codebase_comments,"Tell the path of the solution for the method ""ExportToRTF.RTFStyleSheet.H6Write"".",path of the solution refers to Path; method refers to Name; Name = 'ExportToRTF.RTFStyleSheet.H6Write';,SELECT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Name = 'ExportToRTF.RTFStyleSheet.H6Write'
codebase_comments,"For the repository with '8094' watchers , how many solutions does it contain?",repository refers to Repo.Id and RepoId; solutions a repository contains refers to Solution.Id;,SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Watchers = 8094
codebase_comments,Give the repository Url of the one with most solutions.,repository URL refers to Url; repository Url with most solutions refers to MAX(COUNT(Solution.Id));,SELECT T1.Url FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId GROUP BY T2.RepoId ORDER BY COUNT(T2.RepoId) DESC LIMIT 1
codebase_comments,How many solutions does the repository which has 1445 Forks contain?,solutions refers to Solution.Id; repository refers to Repository.Id;,SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Forks = 1445
codebase_comments,"Among all the solution of the 'zh-cn' methods, which path is most often used?",solution refers to SolutionId; zh-cn refers to Lang = 'zh-cn'; path that is most often used refers to MAX(COUNT(Path));,SELECT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Lang = 'zh-cn' GROUP BY T1.Path ORDER BY COUNT(T1.Path) DESC LIMIT 1
codebase_comments,Give the number of watchers that the repository of the solution No. 338082 have.,number of watchers refers to Watchers; solution number refers to Solution.Id;,SELECT T1.Watchers FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 338082
codebase_comments,"For the repository which got '189' Stars, how many solutions which needs to be compiled does it contain?",repository refers to Repository.Id; solution needs to be compiled refers to WasCompiled = 0;,SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = 189 AND T2.WasCompiled = 0
codebase_comments,"Show the solution path for the method ""Mosa.Platform.x86.Instructions.IMul.EmitLegacy""?",solution path refers to Path; method refers to Name; Name = 'Mosa.Platform.x86.Instructions.IMul.EmitLegacy';,SELECT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Name = 'Mosa.Platform.x86.Instructions.IMul.EmitLegacy'
codebase_comments,"For the method which got the tokenized name as 't jadwal entity get single mpic', what is the path time for its solution?",tokenized name refers to NameTokenized; NameTokenized = 't jadwal entity get single mpic'; path time for its solution refers to ProcessedTime;,SELECT DISTINCT T1.ProcessedTime FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.NameTokenized = 't jadwal entity get single mpic'
codebase_comments,"Give the repository ID for the solution of method ""Kalibrasi.Data.EntityClasses.THistoryJadwalEntity.GetSingleTjadwal"".",repository ID refers to RepoID; method refers to Name; Name = 'Kalibrasi.Data.EntityClasses.THistoryJadwalEntity.GetSingleTjadwal';,SELECT DISTINCT T1.RepoId FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Name = 'Kalibrasi.Data.EntityClasses.THistoryJadwalEntity.GetSingleTjadwal'
codebase_comments,"For the method has the summary of ""Refetches the Entity from the persistent storage. Refetch is used to re-load an Entity which is marked ""Out-of-sync"", due to a save action. Refetching an empty Entity has no effect."", what is its solution path?",solution path refers to Path;,"SELECT DISTINCT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Summary = 'Refetches the Entity FROM the persistent storage. Refetch is used to re-load an Entity which is marked ""Out-of-sync"", due to a save action. Refetching an empty Entity has no effect.'"
codebase_comments,Give the number of solutions that the repository which has 3060 Stars contains.,solutions refers to Solution.Id; repository refers to Repository.Id;,SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = 3060
codebase_comments,"For the solution of the most 'sw' methods, what is its path?",solution refers to SolutionId; sw refers to Lang = 'sw'; solution with the most 'sw' methods refers to MAX(COUNT(Lang = 'sw'));,SELECT DISTINCT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Lang = 'sw'
codebase_comments,How many percent more of the watchers for the repository of solution No.83855 than No.1502?,"solution No. refers to Solution.Id; percentage = DIVIDE(MULTIPLY(SUBTRACT(SUM(Solution.Id = 83855), SUM(Solution.Id = 1502)), 100)), SUM(Soltution.Id = 1502);",SELECT CAST(SUM(CASE WHEN T2.Id = 83855 THEN T1.Watchers ELSE 0 END) - SUM(CASE WHEN T2.Id = 1502 THEN T1.Watchers ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.Id = 1502 THEN T1.Watchers ELSE 0 END) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId
codebase_comments,How many percent more of the stars for the repository of solution No.51424 than No.167053?,"solution No. refers to Solution.Id; percentage = DIVIDE(MULTIPLY(SUBTRACT(SUM(Solution.Id = 51424), SUM(Solution.Id = 167053)), 100)), SUM(Solution.Id = 167053);",SELECT CAST(SUM(CASE WHEN T2.Id = 51424 THEN T1.Stars ELSE 0 END) - SUM(CASE WHEN T2.Id = 167053 THEN T1.Stars ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.Id = 167053 THEN T1.Stars ELSE 0 END) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId
codebase_comments,How many percent more of the Forks for the repository of solution No.53546 than No.1502?,"solution No. refers to Solution.Id; percentage = DIVIDE(MULTIPLY(SUBTRACT(SUM(Solution.Id = 53546), SUM(Solution.Id = 1502)), 100)), SUM(Solution.Id = 1502);",SELECT CAST(SUM(CASE WHEN T2.Id = 53546 THEN T1.Forks ELSE 0 END) - SUM(CASE WHEN T2.Id = 1502 THEN T1.Forks ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.Id = 1502 THEN T1.Forks ELSE 0 END) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId
codebase_comments,"List all the methods with a solution with a ""636449700980488000"" processed time.",methods refers to Name; solution refers to SolutionId;,SELECT DISTINCT T2.Name FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.ProcessedTime = 636449700980488000
codebase_comments,"How many solutions are in ""https://github.com/derickbailey/presentations-and-training.git""?",solutions refers to Solution.Id; https://github.com/derickbailey/presentations-and-training.git refers to Url; Url; = 'https://github.com/derickbailey/presentations-and-training.git';,SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/derickbailey/presentations-and-training.git'
codebase_comments,What is the total processed time of all solutions from the repository with the most forks?,total processed time = AVG(ProcessedTime where MAX(COUNT(Forks))); repository with the most forks refers to MAX(COUNT(Forks));,SELECT SUM(T2.ProcessedTime) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Forks = ( SELECT MAX(Forks) FROM Repo )
codebase_comments,"List all the path of solution from all the ""it"" lang code method.",path of the solution refers to Path; solution refers to Solution.Id;,SELECT DISTINCT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Lang = 'it'
codebase_comments,"What is the path of solution of ""spinachLexer.mT__55"" method?",path of the solution refers to Path; solution refers to Solution.Id; method refers to Name; Name = 'spinachLexer.mT__55';,SELECT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Name = 'spinachLexer.mT__55'
codebase_comments,"What are the ""en"" methods with solutions from repository ""1093""",en methods refers to lang = 'en'; solution refers to Solution.Id; repository refers to RepoId; RepoId = 1093;,SELECT DISTINCT T2.id FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.RepoId = 1093 AND T2.Lang = 'en'
codebase_comments,"What are the paths of solutions in repository ""https://github.com/ecoffey/Bebop.git""",path of solutions refers to Path; https://github.com/ecoffey/Bebop.git refers to Url; Url = 'https://github.com/ecoffey/Bebop.git';,SELECT DISTINCT T2.Path FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/ecoffey/Bebop.git'
codebase_comments,"List all the ids of repositories for solutions with ""ro"" methods.",ids of repositories refers to RepoId; ro refers to lang = 'ro';,SELECT DISTINCT T1.RepoId FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Lang = 'ro'
codebase_comments,"What is the repository id of the method with tokenized name ""crc parameters get hash code""?",repository id refers to RepoId; tokenized name refers to NameTokenized; NameTokenized = 'crc parameters get hash code';,SELECT T1.RepoId FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.NameTokenized = 'crc parameters get hash code'
codebase_comments,How many methods with solutions with path 'maravillas_linq-to-delicious\tasty.sln'?,solution refers to SolutionId;,SELECT COUNT(T2.SolutionId) FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'maravillas_linq-to-delicious\tasty.sln'
codebase_comments,"List all the solutions ids of the repository with ""636430969128176000"" processed time",solution ids refers to Solution.Id;,SELECT T2.Id FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.ProcessedTime = 636430969128176000
codebase_comments,What is the url for repository that has the longest processed time solution?,Url for repository refers to Url; longest processed toe trefers to MAX(ProcessedTime);,SELECT T1.Url FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.ProcessedTime = ( SELECT MAX(ProcessedTime) FROM Solution )
codebase_comments,List all the solutions of repositories with the Forks higher than half of the watchers.,solutions refers to Solution.Id; forks higher than half of the watchers refers tto Forks>(Watchers/2);;,SELECT DISTINCT T2.Id FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Forks > T1.Watchers / 2
codebase_comments,"What is the percentage of Forks to Stars of repository for solution ""104086""?","solution refers to Solution.Id; Solution.Id = 104086; percentage = MULTIPLY(DIVIDE(Forkk, Stars), 100);",SELECT CAST(T1.Forks AS REAL) * 100 / T1.Stars FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 104086
codebase_comments,Please provide the id of the respository that the most people like.,repository that the most people like refers to MAX(Stars);,SELECT Id FROM Repo WHERE Stars = ( SELECT MAX(Stars) FROM Repo )
codebase_comments,"What is the solution's path of method ""HtmlSharp.HtmlParser.Feed""?",solution's path refers to Path; method refers to Name; Name = 'HtmlSharp.HtmlParser.Feed';,SELECT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Name = 'HtmlSharp.HtmlParser.Feed'
codebase_comments,Please provide the number of forks that the repository of the solution 35 have.,solution refers to Solution.Id; Solution.Id = 35;,SELECT T1.Forks FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 35
codebase_comments,Please provide the id of the solution whose repository has the most watchers.,id of the solution refers to Solution.Id; repository has the most watchers refers to MAX(Watchers);,SELECT T2.Id FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Watchers = ( SELECT MAX(Watchers) FROM Repo )
codebase_comments,Please provide the number of stars that the repository of the solution 20 have.,solution refers to Solution.ID; Solution.Id = 20;,SELECT T1.Stars FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 20
codebase_comments,How many methods does solution 1 have? And please tell me if solution 1 needs to be compiled.,method refers to Name; solution refers to Solution.Id; Solution.Id = 1; solution needs to be compiled refers to WasCompiled = 0;,"SELECT COUNT(T2.SolutionId) , CASE WHEN T1.WasCompiled = 0 THEN 'Needs' ELSE 'NoNeeds' END needToCompile FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.SolutionId = 1"
codebase_comments,What is the percentage of the methods' solutions that need to be compiled among the methods whose comments is XML format?,"comment is XML format refers to CommentIsXml = 1; solution needs to be compiled refesr to WasCompiled = 0; percentage = MULTIPLY(DIVIDE(SUM(WasCompiled = 0), COUNT(Solution.Id)), 100);",SELECT CAST(SUM(CASE WHEN T1.WasCompiled = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.SolutionId) FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.CommentIsXml = 1
codebase_comments,"Please list the names of methods with the solution path ""wallerdev_htmlsharp\HtmlSharp.sln"".",name of the methods refers to Name; solution path refers to Path; Path = 'wallerdev_htmlsharp\HtmlSharp.sln';,SELECT T2.Name FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'wallerdev_htmlsharpHtmlSharp.sln'
codebase_comments,"What is the percentage of respositories that receive more than 2,000 stars?","stars>2000; percentage = DIVIDE(MULTIPLY(COUNT(Stars>2000), 100), COUNT(Id));",SELECT CAST(SUM(CASE WHEN Stars > 2000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Stars) FROM Repo
codebase_comments,What is the url of solution 1?,solution refers to Solution.Id; Solution.Id = 1;,SELECT T1.Url FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 1
codebase_comments,Please provide the id of the respository that received the most forks among the respositories that receive 21 stars.,repository that received the most forks refers to MAX(Forks);,SELECT Id FROM Repo WHERE Stars = 21 AND Forks = ( SELECT MAX(Forks) FROM Repo WHERE Stars = 21 )
codebase_comments,What the percentage of the english methods among the methods whose comments is XML format?,english methods refers to lang = 'en'; comment is XML format refers to CommentIsXml = 1;,SELECT CAST(SUM(CASE WHEN Lang = 'en' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Name) FROM Method WHERE CommentIsXml = 1
codebase_comments,Please provide the path of solution of method whose tokenized name is html parser feed.,path of solution refers to Path; method refers to Name; tokenized name refers to NameTokenized; Name = ''html parser feed';,SELECT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.NameTokenized = 'html parser feed'
codebase_comments,Please provide the solution id of the respository among the respository that receive 238 forks.,solution id of the repository refers to solution.Id;,SELECT T2.Id FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Forks = 238
codebase_comments,"Among the english methods,please list the tokenized names of methods whose solutions need to be compiled.",english methods refers to lang = 'en'; tokenized name refers to NameTokenized; methods refers to Name; solution needs to be compiled refers to WasCompiled = 0;,SELECT NameTokenized FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE Lang = 'en' AND WasCompiled = 0
codebase_comments,How many solutions whose repository's stars are a third more than forks?,"solutions refers to Solution.Id; repository stars are a third more than forks = (MULTIPLY(Stars, 1/3))>Forks;",SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Forks < T1.Stars * 1 / 3
codebase_comments,Please provide the path of solution of method whose full comment is Feeds data into the parser.,path of solution refers to Path; method refers to name; full comment = 'Feeds data into the parser';,SELECT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.FullComment = 'Feeds data into the parser'
codebase_comments,"Among the repository ""3"", how many methods whose comments is XML format?",repository refers to RepoId; RepoId = 3; method refers to Name; method whose comment is XML format refers to CommentIsXml = 1;,SELECT COUNT(T2.SolutionId) FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.RepoId = 3 AND T2.CommentIsXml = 1
codebase_comments,What is the percentage of solutions for the method that needs to be compiled in the English methods?,"method that needs to be compiled refers to WasCompiled = 0; English method refers to Lang = 'en'; percentage of solutions = MULTIPLY(DIVIDE(SUM(WasCompiled = 0), COUNT(Solution.Id)), 100);",SELECT CAST(SUM(CASE WHEN T1.WasCompiled = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Lang) FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Lang = 'en'
codebase_comments,"How many more stars in percentage are there for the repository of solution ""1"" than solution ""2""?","solution refers to Solution.Id; Solution.Id = 1 OR 2; percentage = DIVIDE(MULTIPLY(SUBTRACT(SUM(Solution.Id = 1), SUM(Solution.Id = 2)), 100)), SUM(Solution.Id = 2);",SELECT CAST(SUM(CASE WHEN T2.Id = 1 THEN T1.Stars ELSE 0 END) - SUM(CASE WHEN T2.Id = 2 THEN T1.Stars ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.Id = 2 THEN T1.Stars ELSE 0 END) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId
codebase_comments,How many solutions are there whose respositories received the number of stars more than one third of the number of forks?,"number of solutions are there whose repositories received the number of stars more than one third of the number of forks refers to Stars>DIVIDE(Forks, 3);",SELECT COUNT(DISTINCT T1.Id) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars > CAST(T1.Forks AS REAL) / 3
codebase_comments,What is the task of method number 2?,"task of the method refers to the second part of the Name after the "".""; method number refers to Method_100k.Id; Method_100k.Id = 2;","SELECT SUBSTR(SUBSTR(Name, INSTR(Name, '.') + 1), 1, INSTR(SUBSTR(Name, INSTR(Name, '.') + 1), '.') - 1) task FROM Method WHERE Id = 2"
codebase_comments,What format does the method number 8's comment have?,format refers CommentIsXml; method number refers to Method_100k.Id; Method_100k.Id = 8;,SELECT CASE WHEN CommentIsXml = 0 THEN 'isNotXMLFormat' WHEN CommentIsXml = 1 THEN 'isXMLFormat' END format FROM Method WHERE Id = 8
codebase_comments,Please provide a link to the most well-known repository's Github address.,link refers to Url; well-known repository refers to MAX(Watchers);,SELECT Url FROM Repo WHERE Watchers = ( SELECT MAX(Watchers) FROM Repo )
codebase_comments,What is the task of the method that is in the Czech language?,"method refers to Name; task of the method refers to the second part of the Name after the "".""; Czech language refers to Lang = 'cs'","SELECT DISTINCT SUBSTR(SUBSTR(Name, INSTR(Name, '.') + 1), 1, INSTR(SUBSTR(Name, INSTR(Name, '.') + 1), '.') - 1) task FROM Method WHERE Lang = 'cs'"
codebase_comments,What is the solution path for method number 3?,solution path refers to Path; method number refers to Method_100k.Id; Method_100k.Id = 3;,SELECT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Id = 3
codebase_comments,What is the language of method number 28 that can be found in the repository number 3?,language of method refers to Lang; method number refers to Method_100k.Id; Method_100k.Id = 28; repository number refers to RepoId; RepoID = 3;,SELECT T2.Lang FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Id = 28 AND T1.RepoId = 3
codebase_comments,What is solution 1's processing time and how many methods have been using this solution?,solution refers to Solution.Id and SolutionId; Solution.Id = 1; SolutionId = 1; processing time refers to ProcessedTime; methods refers to Name;,"SELECT T1.ProcessedTime, COUNT(T2.SolutionId) FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.SolutionId = 1"
codebase_comments,"How many methods in the same repository share a tokenized name that begins with ""query language...""?",methods refers to Name; tokenized name refers to NameTokenized; NameTokenized LIKE 'query language%';,SELECT COUNT(T2.SolutionId) FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.NameTokenized LIKE 'query language%'
codebase_comments,Please state the API calls for method number 10 and its intended course of action.,method number refers to Method_100k.Id; Method_100k.Id = 10; intended course of action refers to Path;,"SELECT T2.ApiCalls, T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Id = 10"
codebase_comments,How many methods in repository 150 did not have a comment and a summary?,methods refers to Name; repository that did not have a comment and a summary refers to FullComment IS NULL AND Summary IS NULL;,SELECT COUNT(T2.SolutionId) FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.RepoId = 150 AND T2.FullComment IS NULL AND T2.Summary IS NULL
codebase_comments,"What is the comment format of method number 50 with the solution path ""managedfusion_managedfusion\ManagedFusion.sln""?",comment format refers to CommentIsXml; method number refers to Method_100k.Id; Method_100k.Id = 50; solution path refers to Path; Path = 'managedfusion_managedfusion\ManagedFusion.sln';,SELECT CASE WHEN T2.CommentIsXml = 0 THEN 'isNotXMLFormat' WHEN T2.CommentIsXml = 1 THEN 'isXMLFormat' END format FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Id = 50 AND T1.Path = 'managedfusion_managedfusionManagedFusion.sln'
codebase_comments,"What is the task method of the tokenized name ""string extensions to pascal case
""?","method refers to Name; task of the method refers to the second part of the Name after the "".""; tokenized name refers to NameTokenized; NameTokenized = 'string extensions to pascal case';","SELECT DISTINCT SUBSTR(SUBSTR(Name, INSTR(Name, '.') + 1), 1, INSTR(SUBSTR(Name, INSTR(Name, '.') + 1), '.') - 1) task FROM Method WHERE NameTokenized = 'string extensions to pascal case'"
codebase_comments,"Provide the tokenized name of the method ""Sky.Excel.ExcelBook.TypeConvert"".",tokenized name refers to NameTokenized; NameTokenized = 'Sky.Excel.ExcelBook.TypeConvert';,SELECT NameTokenized FROM Method WHERE Name = 'Sky.Excel.ExcelBook.TypeConvert'
codebase_comments,"How many path does the github address ""https://github.com/jeffdik/tachy.git"" have?",github address refers to Url; Url = 'https://github.com/jeffdik/tachy.git';,SELECT COUNT(DISTINCT T2.Path) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/jeffdik/tachy.git'
codebase_comments,"How many watchers does the path ""maff_se3ue7\US7.sln"" have?",,SELECT T1.Watchers FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Path = 'maff_se3ue7US7.sln'
codebase_comments,List 5 github address that the solutions can be implemented without the need of compilation.,github address refers to Url; solution can be implemented without the need of compliation refers to WasCompiled = 1;,SELECT T1.Url FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.WasCompiled = 1 LIMIT 5
codebase_comments,"What are the solution path of the tokenized name ""matrix multiply""?",solution path refers to Path; tokenized name refers to NameTokenized; NameTokenized = 'matrix multiply';,SELECT DISTINCT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.NameTokenized = 'matrix multiply'
codebase_comments,"How many XML format does the github address ""https://github.com/dogeth/vss2git.git"" have?","Xml format refers to CommentisXml, github address refers to Url; Url = 'https://github.com/dogeth/vss2git.git';",SELECT COUNT(T3.CommentIsXml) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId INNER JOIN Method AS T3 ON T2.Id = T3.SolutionId WHERE T1.Url = 'https://github.com/dogeth/vss2git.git' AND T3.CommentIsXml = 1
codebase_comments,List 5 solution path that has sampling time of 636431758961741000.,solution path refers to Path; sampling time refers to SampledAt; SampledAt = '636431758961741000';,SELECT DISTINCT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.SampledAt = 636431758961741000 LIMIT 5
codebase_comments,"What is the github address of the solution path ""joeyrobert_bloomfilter\DataTypes.BloomFilter.sln""?",github address refers to Url; solution path refers to Path; Path = 'joeyrobert_bloomfilter\DataTypes.BloomFilter.sln';,SELECT T1.Url FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Path = 'joeyrobert_bloomfilterDataTypes.BloomFilter.sln'
codebase_comments,"List all the method name of the solution path ""graffen_NLog.Targets.Syslog\src\NLog.Targets.Syslog.sln
"".",method name refers to Name; solution path refers to Path; Path = 'graffen_NLog.Targets.Syslog\src\NLog.Targets.Syslog.sln';,SELECT DISTINCT T2.Name FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'graffen_NLog.Targets.SyslogsrcNLog.Targets.Syslog.sln'
codebase_comments,"List all the tokenized name of the solution path ""jurney_P4Backup\P4Backup\P4Backup.sln
"".",tokenized name refers to NameTokenized; solution path refers to Path; Path = 'jurney_P4Backup\P4Backup\P4Backup.sln';,SELECT DISTINCT T2.NameTokenized FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'jurney_P4BackupP4BackupP4Backup.sln'
codebase_comments,"Provide the github address with the summary of method ""A test for Decompose
"".",github address refers to Url; summary of method refers to Summary; Summary = 'A test for Decompose';,SELECT T1.Url FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId INNER JOIN Method AS T3 ON T2.Id = T3.SolutionId WHERE T3.Summary = 'A test for Decompose'
codebase_comments,"How many liked by people does the solution path ""ninject_Ninject\Ninject.sln
"" have?",how many liked by people refers to Stars; solution path refers to Path; Path = 'ninject_Ninject\Ninject.sln';,SELECT DISTINCT T1.Stars FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Path = 'ninject_NinjectNinject.sln'
codebase_comments,"How many solution path does the repository with 111 stars, 58 forks, and 111 watchers?",solution path refers to Path;,SELECT COUNT(T2.Path) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = 111 AND T1.Forks = 58 AND T1.Watchers = 111
codebase_comments,"What is the average processed time of the solution with a repository of 254 likes, 88 followers, and 254 watchers?",average processed time = AVG(ProcessedTime);,SELECT CAST(SUM(T2.ProcessedTime) AS REAL) / COUNT(T2.ProcessedTime) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = 254 AND T1.Forks = 88 AND T1.Watchers = 254
codebase_comments,"How many language code of method is used for the github address ""https://github.com/managedfusion/managedfusion.git
""?",language code of method refers to Lang; github address refers to Url; Url = 'https://github.com/managedfusion/managedfusion.git';,SELECT COUNT(DISTINCT T3.Lang) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId INNER JOIN Method AS T3 ON T2.Id = T3.SolutionId WHERE T1.Url = 'https://github.com/managedfusion/managedfusion.git'
trains,How many trains are there that run in the east direction?,east is a direction,SELECT COUNT(id) FROM trains WHERE direction = 'east'
trains,How many cars are there on train no.1?,train no.1 refers to train_id = 1,SELECT COUNT(id) FROM cars WHERE train_id = 1
trains,What is the shape of the tail car on train no.1?,train no.1 refers to train_id = 1; tail car refers to position = 4,SELECT shape FROM cars WHERE train_id = 1 AND position = 4
trains,Please list the IDs of all the trains with at least one car in a non-regular shape.,"non-regular shape refers to shape in ('elipse', 'bucket')","SELECT train_id FROM cars WHERE shape IN ('elipse', 'bucket') GROUP BY train_id"
trains,How many cars on train no.1 have the roof open?,train no. 1 refers to train_id = 1; roof open refers to roof = 'none',SELECT COUNT(id) FROM cars WHERE train_id = 1 AND roof = 'none'
trains,Please list the IDs of all the cars on train no.1 that have 2 wheels.,train no.1 refers to train_id = 1; 2 wheels refers to wheels = 2,SELECT id FROM cars WHERE train_id = 1 AND wheels = 2
trains,"Among the trains that run in the east direction, how many of them have at least one car in a non-regular shape?","non-regular shape refers to shape in ('elipse', 'bucket')","SELECT SUM(CASE WHEN T1.shape IN ('bucket', 'elipse') THEN 1 ELSE 0 end)as count FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east'"
trains,Please list the IDs of all the trains that run in the east direction and have less than 4 cars.,less than 4 cars refers to carsNum < 4,"SELECT T1.id FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS carsNum FROM cars GROUP BY train_id ) AS T2 ON T1.id = T2.train_id WHERE T1.direction = 'east' AND T2.carsNum < 4"
trains,Please list the IDs of all the cars with double sides on trains that run in the west direction.,double sides on trains refers to sides = 'double',SELECT T1.id FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east' AND T1.sides = 'double'
trains,"Among the trains that run in the east direction, how many of them have more than 2 long cars?",more than 2 long cars refers to longCarsNum > 2,"SELECT SUM(CASE WHEN T2.longCarsNum > 2 THEN 1 ELSE 0 END)as count FROM trains AS T1 INNER JOIN ( SELECT train_id, COUNT(id) AS longCarsNum FROM cars WHERE len = 'long' GROUP BY train_id ) AS T2 ON T1.id = T2.train_id WHERE T1.direction = 'west'"
trains,Please list the directions in which the trains with at least one empty-loaded car run.,at least one empty-loaded car run refers to load_num = 0,SELECT T2.direction FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.load_num = 0
trains,In which direction does the train with an ellipse-shape car run?,shape = 'ellipse',SELECT T2.direction FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.shape = 'ellipse'
trains,What is the total number of short cars on all the trains that run in the east direction?,short cars refers to len = 'short',SELECT SUM(CASE WHEN T1.len = 'short' then 1 ELSE 0 END)as count FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east'
trains,Please list the shapes of all the head cars on the trains that run in the east direction.,head cars refers to position = 1;,SELECT T1.shape FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east' AND T1.position = 1 GROUP BY T1.shape
trains,How many cars on a train that runs in the east direction have a flat roof?,flat roof refers to roof = 'flat',SELECT SUM(CASE WHEN T1.roof = 'flat' THEN 1 ELSE 0 END)as count FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east'
trains,"Among the cars on a train that runs in the east direction, how many of them have a flat roof and a circle load shape?",flat roof refers to roof = 'flat'; load_shape = 'circle',SELECT SUM(CASE WHEN T1.load_shape = 'circle' THEN 1 ELSE 0 END)as count FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east' AND T1.roof = 'flat' 
trains,Trains that run in which direction have more rectangle-shaped cars in total?,more rectangle-shaped cars refers to MAX(rectCarsNum),"SELECT T1.direction FROM trains AS T1 INNER JOIN ( SELECT train_id, COUNT(id) AS rectCarsNum FROM cars WHERE shape = 'rectangle' GROUP BY train_id ) AS T2 ON T1.id = T2.train_id ORDER BY T2.rectCarsNum DESC"
trains,Please list the directions in which the trains with 4 short cars run.,short refers to len = 'short'; 4 cars run refers to position = 4,SELECT T2.direction FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.len = 'short' AND T1.position = 4
trains,What is the average number of cars on trains that run in the east direction?,"calculation = DIVIDE(count(id), count(train_id))",SELECT CAST(COUNT(T1.id) AS REAL) / COUNT(DISTINCT T1.train_id) FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east'
trains,"Among the trains that have at least one non-regular shaped car, what is the percentage of it running in the east direction?","non-regular shaped car refers to shape in ('bucket', 'ellipse'); calculation = MULTIPLY(DIVIDE(count(direction = 'east' then train_id)), count(train_id), 100)","SELECT CAST(COUNT(DISTINCT CASE WHEN T2.direction = 'east' THEN T1.train_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.train_id) FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.shape IN ('bucket', 'ellipse')"
trains,How many short cars are in the shape of hexagon?,short cars refers to len = 'short'; in the shape of hexagon refers to shape = 'hexagon',SELECT COUNT(id) FROM cars WHERE shape = 'hexagon' AND len = 'short'
trains,How many trains are running west?,west is a direction,SELECT COUNT(id) FROM trains WHERE direction = 'west'
trains,What are the load shapes of all the short ellipse cars?,short refers to len = 'short'; ellipse cars refers to shape = 'ellipse',SELECT load_shape FROM cars WHERE shape = 'ellipse' AND len = 'short'
trains,What are the ids of the train running east?,east is a direction,SELECT id FROM trains WHERE direction = 'east'
trains,How many wheels do the long cars have?,long cars refers to len = 'long',SELECT SUM(wheels) FROM cars WHERE len = 'long'
trains,Which direction do the majority of the trains are running?,majority of train refers to MAX(count(id)),SELECT direction FROM trains GROUP BY direction ORDER BY COUNT(id) DESC
trains,"Among the trains running east, how many trains have at least 4 cars?",east is a direction; at least 4 cars refers to carsNum > = 4,"SELECT SUM(CASE WHEN T1.direction = 'east' THEN 1 ELSE 0 END)as count FROM trains AS T1 INNER JOIN ( SELECT train_id, COUNT(id) AS carsNum FROM cars GROUP BY train_id ) AS T2 ON T1.id = T2.train_id WHERE T2.carsNum >= 4"
trains,Which direction do most of the trains with rectangle-shaped second cars run?,most of the trains refers to MAX(count(id)); second cars refers to position = 2,SELECT T2.direction FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 2 AND T1.shape = 'rectangle' GROUP BY T2.direction ORDER BY COUNT(T2.id) DESC LIMIT 1
trains,How many trains running west have double sided cars in 3rd position?,west is a direction; double sided cars refers to sides = 'double'; 3rd position refers to position = 3,SELECT COUNT(T.train_id) FROM (SELECT T1.train_id FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 3 AND T2.direction = 'west' AND T1.sides = 'double' GROUP BY T1.train_id)as T
trains,How many eastbound trains have rectangular-shaped head cars?,eastbound refers to direction = 'east'; head cars refers to position = 1,SELECT COUNT(T.train_id) FROM (SELECT T1.train_id FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 1 AND T2.direction = 'east' AND T1.shape = 'rectangle' GROUP BY T1.train_id)as T
trains,"Among the trains running west, how many trains have no more than one car with an open roof?",running west refers to direction = 'west'; open roof refers to roof = 'none',"SELECT SUM(CASE WHEN T1.direction = 'west' THEN 1 ELSE 0 END)as count FROM trains AS T1 INNER JOIN ( SELECT train_id, COUNT(id) FROM cars WHERE roof = 'none' GROUP BY train_id HAVING COUNT(id) = 1 ) AS T2 ON T1.id = T2.train_id "
trains,Which direction does the majority of the trains that have 3 cars are running?,3 cars refers to carsNum = 3,"SELECT T1.direction FROM trains AS T1 INNER JOIN ( SELECT train_id, COUNT(id) AS carsNum FROM cars GROUP BY train_id HAVING carsNum = 3 ) AS T2 ON T1.id = T2.train_id GROUP BY T1.direction"
trains,How many trains with fully loaded head cars are running east?,fully loaded refers to load_num = 3; head cars refers to position = 1,SELECT COUNT(DISTINCT T1.train_id) FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 1 AND T1.load_num = 3
trains,How many cars running east have double-sided tail cars?,east is an direction; double-sided refers to sides = 'double'; tail refers to carsposition = trailPosi,"SELECT COUNT(T1.id) FROM trains AS T1 INNER JOIN cars AS T2 ON T1.id = T2.train_id INNER JOIN ( SELECT train_id, MAX(position) AS trailPosi FROM cars GROUP BY train_id ) AS T3 ON T1.id = T3.train_id WHERE T1.direction = 'east' AND T2.position = T3.trailPosi AND T2.sides = 'double'"
trains,List all the directions of the trains that have empty cars.,empty cars refers to load_num = 0,SELECT T2.direction FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.load_num = 0
trains,What is the direction of the train with a diamond-shaped load in its 2nd car?,2nd car refers to position = 2,SELECT T2.direction FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 2 AND T1.shape = 'diamond'
trains,"Among the trains running west, how many trains have three-wheeled, jagged roof cars?",west is an direction; three-wheeled refers to wheels = 3; jagged roof refers to roof = 'jagged',SELECT SUM(CASE WHEN T2.direction = 'west' THEN 1 ELSE 0 END)as count FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.wheels = 3 AND T1.roof = 'jagged'
trains,Provide the directions for all the trains that have 2 or less cars.,2 or less cars refers to trailPosi < = 2,"SELECT T1.direction FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS trailPosi FROM cars GROUP BY train_id ) AS T2 ON T1.id = T2.train_id WHERE T2.trailPosi <= 2"
trains,What is the percentage of all the trains with at least 4 cars? List the directions of the said trains.,"at least 4 cars refers to trailPosi > = 4; calculation = MULTIPLY(DIVIDE(count(trailPosi > = 4 then id), count(id)), 100)","SELECT CAST(COUNT(CASE WHEN T2.trailPosi >= 4 THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS trailPosi FROM cars GROUP BY train_id ) AS T2 ON T1.id = T2.train_id UNION ALL SELECT T1.direction FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS trailPosi FROM cars t GROUP BY train_id ) AS T2 ON T1.id = T2.train_id AND T2.trailPosi >= 4"
trains,List all the load shapes of all head cars of each train and identify which load shape has the highest number. Calculate the percentage of the trains with the said head car that are running eas,"which load shape has the highest number refers to MAX(load_shape); head car refers to position = 1; east is a direction; calculation = MULTIPLY(DIVIDE(count(direction = 'east' where MAX(load_shape) where position = 1 then id), count(id)), 100)","SELECT DISTINCT T3.load_shape FROM ( SELECT load_shape, train_id FROM cars WHERE position = 1 ORDER BY train_id DESC ) AS T3 UNION ALL SELECT T4.load_shape FROM ( SELECT load_shape, train_id FROM cars WHERE position = 1 ORDER BY train_id DESC LIMIT 1 ) AS T4 UNION ALL SELECT (CAST(COUNT(DISTINCT CASE WHEN T2.direction = 'east' THEN T2.id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.id)) FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 1 AND T1.load_shape = ( SELECT T4.load_shape FROM ( SELECT load_shape, train_id FROM cars AS T WHERE position = 1 ORDER BY train_id DESC LIMIT 1 ) AS T4 )"
movie,Please list the names of the characters in the movie Look Who's Talking.,movie Look Who's Talking refers to title = 'Look Who's Talking',SELECT T2.`Character Name` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T1.Title = 'Look Who''s Talking'
movie,Which character has the longest screen time in the movie Batman?,longest screen time refers to max(screentime); movie Batman refers to title = 'Batman',SELECT T2.`Character Name` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T1.Title = 'Batman' ORDER BY T2.screentime DESC LIMIT 1
movie,Which actor played the role of Joker in the movie Batman?,role of Joker refers to character_name = 'Joker'; movie Batman refers to title = 'Batman',SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Batman' AND T2.`Character Name` = 'Joker'
movie,Please list the names of the actors who played a role in the movie Batman.,movie Batman refers to title = 'Batman',SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Batman'
movie,Which movie is the character Dr. Archibald 'Moonlight' Graham from?,movie name refers to title; character Dr. Archibald 'Moonlight' Graham refers to character_name = 'Dr. Archibald 'Moonlight' Graham',SELECT T1.Title FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T2.`Character Name` = 'Dr. Archibald ''Moonlight'' Graham'
movie,Please list the names of the movies starring Tom Cruise.,movie name refers to title; starring Tom Cruise refers to name = 'Tom Cruise',SELECT T1.Title FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Tom Cruise'
movie,How many movies starring Morgan Freeman are suggested by parental guidance?,'suggested by parental guidance' refers to mpaa_rating = 'PG',SELECT COUNT(*) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Morgan Freeman' AND T1.`MPAA Rating` = 'PG'
movie,"Among the movies starring Tom Cruise, which one of them has the best quality?",starring Tom Cruise refers to name = 'Tom Cruise'; best quality refers to max(rating),SELECT T1.Title FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Tom Cruise' ORDER BY T1.Rating DESC LIMIT 1
movie,What is the name of the character played by Tom Cruise in the movie Born on the Fourth of July?,played by Tom Cruise refers to name = 'Tom Cruise'; movie Born on the Fourth of July refers to title = 'Born on the Fourth of July',SELECT T2.`Character Name` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Tom Cruise' AND T1.Title = 'Born on the Fourth of July'
movie,Please list the names of all the characters played by Tom Cruise.,played by Tom Cruise refers to name = 'Tom Cruise',SELECT T1.`Character Name` FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T2.Name = 'Tom Cruise'
movie,"Among the actors who starred in the movie Batman, which one of them is the tallest?",movie Batman refers to title = 'Batman'; tallest refers to max(height_inches),SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Batman' ORDER BY T3.`Height (Inches)` DESC LIMIT 1
movie,How many movies star a male African American actor?,male refers to gender = 'Male'; African American refers to ethnicity = 'African American',SELECT COUNT(*) FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T2.Gender = 'Male' AND T2.Ethnicity = 'African American'
movie,What is the average rating of all the movies starring Tom Cruise?,"starring Tom Cruise refers to name = 'Tom Cruise'; average rating = divide(sum(rating where name = 'Tom Cruise'), count(movieid where name = 'Tom Cruise'))",SELECT AVG(T1.Rating) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Tom Cruise'
movie,How much longer in percentage is the screen time of the most important character in Batman than the least important one?,"most important character refers to max(screentime); least important character refers to min(screentime); movie Batman refers to title = 'Batman'; percentage = divide(subtract(max(screentime) , min(screentime)) , min(screentime)) * 100%","SELECT (MAX(CAST(SUBSTR(T2.screentime, 3, 2) AS REAL)) - MIN(CAST(SUBSTR(T2.screentime, 3, 2) AS REAL))) * 100 / MIN(CAST(SUBSTR(T2.screentime, 3, 2) AS REAL)) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T1.Title = 'Batman'"
movie,Which movie had the biggest budget? Give the name of the movie.,biggest budget refers to max(Budget); name of the movie refers to Title,SELECT Title FROM movie ORDER BY Budget DESC LIMIT 1
movie,"What is the MPAA rating for the movie with the character named ""Peter Quill"" in it?",MPAA rating = 'G' means General audiences; MPAA rating = 'PG' means Parental guidance suggested; MPAA rating = 'R'means Restricted; MPAA rating = 'X' means No one under 17 admitted,SELECT T1.`MPAA Rating` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T2.`Character Name` = 'Peter Quill'
movie,Give the name of the No.1 character in the credit list from the highest rating thriller movie.,No.1 character in the credit list refers to creditOrder = '1'; highest rating refers to max(rating); thriller movie refers to Genre = 'Thriller',SELECT T2.`Character Name` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T2.creditOrder = '1' AND T1.Genre = 'Thriller' ORDER BY T1.Rating DESC LIMIT 1
movie,"Who was the actor that played in the movie ""Batman"" with the longest screentime?","movie ""Batman"" refers to Title = 'Batman'; longest screentime refers to max(screentime)",SELECT T2.Name FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID INNER JOIN movie AS T3 ON T3.MovieID = T1.MovieID WHERE T3.Title = 'Batman' ORDER BY T1.screentime DESC LIMIT 1
movie,How many movies has the highest networth actor acted in?,highest networth refers to max(networth),"SELECT COUNT(*) FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE CAST(REPLACE(REPLACE(T2.NetWorth, ',', ''), '$', '') AS REAL) = ( SELECT MAX(CAST(REPLACE(REPLACE(NetWorth, ',', ''), '$', '') AS REAL)) FROM actor)"
movie,"Who played the character named ""Chanice Kobolowski""?",,SELECT T2.Name FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Chanice Kobolowski'
movie,"When is the birthday of the actor who played ""Sully""?","birthday refers to Date of Birth; ""Sully"" refers to Character Name = 'Sully'",SELECT T2.`Date of Birth` FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Sully'
movie,"Show the birth city of the actor who played ""Gabriel Martin"".","""Gabriel Martin"" refers to Character Name = 'Gabriel Martin'",SELECT T2.`Birth City` FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Gabriel Martin'
movie,"Give the biography of the actor who played ""Michael Moscovitz"".","""Michael Moscovitz"" refers to Character Name = 'Michael Moscovitz'",SELECT T2.Biography FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Michael Moscovitz'
movie,"How tall is the actor who played ""Lurch""?","tall refers to Height (Inches); ""Lurch"" refers to Character Name = 'Lurch'",SELECT T2.`Height (Inches)` FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Lurch'
movie,"Show the No.3 character name in the credit list of the movie ""G.I. Joe: The Rise of Cobra"".","No.3 character refers to creditOrder = '3'; movie ""G.I. Joe: The Rise of Cobra"" refers to Title = 'G.I. Joe: The Rise of Cobra'",SELECT T2.`Character Name` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T1.Title = 'G.I. Joe: The Rise of Cobra' AND T2.creditOrder = '3'
movie,"Who played the No.2 character in the credit list of the movie ""American Hustle""?","No.2 character refers to creditOrder = '2'; movie ""American Hustle"" refers to Title = 'American Hustle'",SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'American Hustle' AND T2.creditOrder = '2'
movie,"Who played the No.1 character in the credit list of the movie which was released on ""2015/10/26""?","No.1 character refers to creditOrder = '1'; released on ""2015/10/26"" refers to Release Date = '2015-10-26'",SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.`Release Date` = '2015-10-26' AND T2.creditOrder = '1'
movie,"What is the percentage of the USA actors that showed up in the credit list of movie ""Mrs. Doubtfire""?","USA actors refers to Birth Country = 'USA'; movie ""Mrs. Doubtfire"" refers to Title = 'Mrs. Doubtfire'; percentage = divide(count(ActorID where Birth Country = 'USA'), count(ActorID)) * 100%",SELECT CAST(SUM(CASE WHEN T3.`Birth Country` = 'USA' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.`Birth Country`) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Mrs. Doubtfire'
movie,"What is the percentage of the actors that showed up in the credit list of movie ""Dawn of the Planet of the Apes"" that were born after ""1970/1/1""?","movie ""Dawn of the Planet of the Apes"" refers to Title = 'Dawn of the Planet of the Apes'; born after ""1970/1/1"" refers to Date of Birth > '1970/1/1'; percentage = divide(count(ActorID where Date of Birth > '1970/1/1'), count(ActorID))*100%",SELECT CAST(SUM(CASE WHEN T3.`Date of Birth` > '1970-01-01' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.`Date of Birth`) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Dawn of the Planet of the Apes'
movie,List down the movie ID of movie with a budget of 15000000 and a rating between 7 to 8.,a budget of 15000000 refers to Budget = 15000000; rating between 7 to 8 refers to Rating BETWEEN 7 and 8,SELECT MovieID FROM movie WHERE Rating BETWEEN 7 AND 8 AND Budget = 15000000
movie,"In rated PG movies, how many of them released in June 1990?",rated PG refers to MPAA Rating = 'PG'; released in June 1990 refers to Release Date BETWEEN '1990-06-01' and '1990-06-30',SELECT COUNT(*) FROM movie WHERE `MPAA Rating` = 'PG' AND `Release Date` LIKE '1990-06%'
movie,What is the name of male and white actor with actor ID 439?,male refers to Gender = 'Male'; white refers to Ethnicity = 'White',SELECT Name FROM actor WHERE ActorID = 439 AND Gender = 'Male' AND Ethnicity = 'White'
movie,"Among the actors born in New York City, list the genre of their movie with a rating greater than 5.",born in New York City refers to Birth City = 'New York City'; rating greater than 5 refers to Rating > 5,SELECT T1.Genre FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.`Birth City` = 'New York City' AND T1.Rating > 5
movie,"In romantic movies, how many of them starred by John Travolta?",romantic movies refers to Genre = 'Romance'; starred by John Travolta refers to Name = 'John Travolta',SELECT COUNT(*) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Genre = 'Romance' AND T3.Name = 'John Travolta'
movie,List the height and net worth of actors starred in Three Men and a Little Lady.,Three Men and a Little Lady refers to Title = 'Three Men and a Little Lady',"SELECT T3.`Height (Inches)`, T3.NetWorth FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Three Men and a Little Lady'"
movie,What is the genre of PG rated movie starred by the actor with highest net worth?,PG rated refers to MPAA Rating = 'PG';  highest net worth refers to max(NetWorth),"SELECT T1.Genre FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.`MPAA Rating` = 'PG' ORDER BY CAST(REPLACE(REPLACE(T3.NetWorth, ',', ''), '$', '') AS REAL) DESC LIMIT 1"
movie,What is the net worth of the actor starred in Misery who has a height ranging from 60 to 70 inches tall?,Misery refers to Title = 'Misery'; height ranging from 60 to 70 inches refers to Height (Inches) BETWEEN 60 and 70,SELECT T3.NetWorth FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Misery' AND T3.`Height (Inches)` BETWEEN 60 AND 70 AND T3.Gender = 'Male'
movie,Count the male actors born in USA that starred in Ghost.,male refers to Gender = 'Male'; born in USA refers to Birth Country = 'USA'; Ghost refers to Title = 'Ghost',SELECT COUNT(*) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Ghost' AND T3.Gender = 'Male' AND T3.`Birth Country` = 'USA'
movie,What is the MPAA rating and title of the movie starred by Leonardo DiCaprio with highest budget?,starred by Leonardo DiCaprio refers to Name = 'Leonardo Dicaprio'; highest budget refers to max(Budget),"SELECT T1.`MPAA Rating`, T1.Title FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Leonardo DiCaprio' ORDER BY T1.Budget DESC LIMIT 1"
movie,"Among the actors starred in Die Hard 2, list their net worth and birth date of actors with a height between 60 to 65.",Die Hard 2 refers to Title = 'Die Hard 2'; height between 60 to 65 refers to Height (Inches) BETWEEN 60 AND 65,"SELECT T3.NetWorth, T3.`Date of Birth` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Die Hard 2' AND T3.`Height (Inches)` BETWEEN 60 AND 65"
movie,"List the runtime of movies starred by an African-American actor born on December 28, 1954.",African-American refers to Ethnicity = 'African American'; born on December 28 1954 refers to Date of Birth = '1954-12-28',SELECT T1.Runtime FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Ethnicity = 'African American' AND T3.`Date of Birth` = '1954-12-28'
movie,Find the actor's name that played as Don Altobello in a drama movie that has a gross of 136766062.,actor's name refers to Name; as Don Altobello refers to Character Name = 'Don Altobello'; drama movie refers to Genre = 'Drama',SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Gross = 136766062 AND T2.`Character Name` = 'Don Altobello' AND T1.Genre = 'Drama'
movie,"What is the gross of a comedy movie with a rating lower than 7 and starred by an actor with a net worth greater than $375,000,000.00?","comedy movie refers to Genre = 'Comedy'; rating lower than 7 refers to Rating < 7; net worth greater than $375,000,000.00 refers to NetWorth > '$375,000,000.00'","SELECT SUM(T1.Gross) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE CAST(REPLACE(REPLACE(T3.NetWorth, ',', ''), '$', '') AS REAL) > 375000000 AND T1.Rating < 7 AND T1.Genre = 'Comedy'"
movie,What is the runtime of the movie starred by Jackie Chan with a rating greater than 7?,starred by Jackie Chan refers to Name = 'Jackie Chan'; rating greater than 7 refers to Rating > 7,SELECT T1.Runtime FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Jackie Chan' AND T1.Rating > 7
movie,"Among the movies with drama genre, what is the percentage of the actors with net worth greater than $400,000,000.00?","drama genre refers to Genre = 'Drama'; net worth greater than $400,000,000.00 refers to NetWorth > '$400,000,000.00'; percentage = divide(count(ActorID where NetWorth > '$400,000,000.00'), COUNT(ActorID))*100%","SELECT SUM(CASE WHEN CAST(REPLACE(REPLACE(T3.NetWorth, ',', ''), '$', '') AS REAL) > 400000000 THEN 1 ELSE 0 END) - SUM(CASE WHEN CAST(REPLACE(REPLACE(T3.NetWorth, ',', ''), '$', '') AS REAL) < 400000000 THEN 1 ELSE 0 END) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Genre = 'Drama'"
movie,List the character's name of actress born in Sherman Oaks and starred in the movie Bruce Almighty with height greater than the 50% of average height of all actors listed.,"actress refers to Gender = 'Female'; born in Sherman Oaks refers to Birth City = 'Sherman Oaks'; movie Bruce Almighty refers to Title = 'Bruce Almighty'; height greater than the 50% of average height refers to Height (Inches) > multiply(avg(Height (Inches)), 0.5)",SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Gender = 'Female' AND T1.Title = 'Godzilla' AND T3.`Birth City` = 'Sherman Oaks' AND T3.`Height (Inches)` * 100 > ( SELECT AVG(`Height (Inches)`) FROM actor ) * 50
social_media,How many tweets are in English?,english is the language and refers to Lang = 'en',SELECT COUNT(TweetID) AS tweet_number FROM twitter WHERE Lang = 'en'
social_media,Please list the texts of all the tweets that are reshared.,reshared refers to Isreshare = 'TRUE',SELECT text FROM twitter WHERE IsReshare = 'TRUE'
social_media,How many tweets are seen by more than 1000 unique users?,seen by more than 1000 unique users refers to Reach > 1000,SELECT COUNT(TweetID) AS tweet_number FROM twitter WHERE Reach > 1000
social_media,"Among all the tweets that have a positive sentiment, how many of them are posted on Thursday?",positive sentiment refers to Sentiment > 0; posted on Thursday refers to Weekday = 'Thursday',SELECT COUNT(TweetID) AS tweet_number FROM twitter WHERE Sentiment > 0 AND Weekday = 'Thursday'
social_media,What is the text of the tweet that got the most `likes`?,got the most like refers to Max(Likes),SELECT text FROM twitter WHERE Likes = ( SELECT MAX( Likes) FROM twitter )
social_media,Please list all the cities in Argentina.,"""Argentina"" is the Country",SELECT City FROM location WHERE City IS NOT NULL AND Country = 'Argentina'
social_media,How many tweets in total were posted by a user in Argentina?,"""Argentina"" is the Country",SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T2.Country = 'Argentina' LIMIT 1
social_media,Users in which city of Argentina post the most tweets?,"""Argentina"" is the Country; post the most tweets refers to Max(Count(TweetID))",SELECT T2.City FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T2.Country = 'Argentina' GROUP BY T2.City ORDER BY COUNT(T1.TweetID) DESC LIMIT 1
social_media,"Among all the tweets that are reshared, how many of them are posted by a user in Buenos Aires?",reshared refers to Isreshare = 'TRUE'; 'Buenos Aires' is the City,SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T2.City = 'Buenos Aires' AND T1.IsReshare = 'TRUE'
social_media,Please list the texts of all the tweets posted from Buenos Aires with a positive sentiment.,"""Buenos Aires"" is the City; positive sentiment refers to Sentiment > 0",SELECT T1.text FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T1.Sentiment > 0 AND T2.City = 'Buenos Aires'
social_media,From which country is the tweet with the most likes posted?,tweet with the most likes refers to Max(Likes),SELECT T2.Country FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID ORDER BY T1.Likes DESC LIMIT 1
social_media,"Users in which country has posted more numbers of positive tweets, Argentina or Australia?","""Argentina"" and ""Australia"" are both Country; positive tweets refers to Sentiment > 0; Country posted more number of tweets refers to Country where Max(Count(TweetID))","SELECT T2.Country FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T2.Country IN ('Argentina', 'Australia') AND T1.Sentiment > 0 GROUP BY T2.Country ORDER BY COUNT(T1.TweetID) DESC LIMIT 1"
social_media,"Among all the tweets posted from Buenos Aires, how many of them were posted on Thursdays?","""Buenos Aires"" is the City; posted on Thursday refers to Weekday = 'Thursday'",SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T2.City = 'Buenos Aires' AND T1.Weekday = 'Thursday'
social_media,"Among all the users that have posted a tweet with over 1000 likes, how many of them are male?",over 1000 likes refers to Likes > 1000; 'Male' is the Gender of user,SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T1.Likes > 10 AND T2.Gender = 'Male'
social_media,How many tweets have the male users posted in total?,male users refers to Gender = 'Male'; total tweets refers to Count(TweetID),SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Male'
social_media,What is the gender of the user who has posted the tweet that is seen by the most number of unique users?,seen by the most number of unique users refers to Max(Reach),SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID ORDER BY T1.Reach DESC LIMIT 1
social_media,How many tweets are posted by male users in Argentina?,"""Argentina"" is the Country; male user refers to Gender = 'Male'",SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID INNER JOIN user AS T3 ON T1.UserID = T3.UserID WHERE T3.Gender = 'Male' AND T2.Country = 'Argentina'
social_media,Please list the texts of all the tweets posted by male users from Buenos Aires.,"""Buenos Aires"" is the City; male user refers to Gender = 'Male'",SELECT T1.text FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID INNER JOIN user AS T2 ON T2.UserID = T1.UserID INNER JOIN user AS T3 ON T1.UserID = T3.UserID WHERE T2.City = 'Buenos Aires' AND T3.Gender = 'Male'
social_media,What is the average number of tweets posted by the users in a city in Argentina?,"""Argentina"" is the Country; average number of tweets in a city = Divide (Count(TweetID where Country = 'Argentina'), Count (City))",SELECT SUM(CASE WHEN T2.City = 'Buenos Aires' THEN 1.0 ELSE 0 END) / COUNT(T1.TweetID) AS avg FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T2.Country = 'Argentina'
social_media,"Among all the tweets with a positive sentiment, what is the percentage of those posted by a male user?","positive sentiment refers to Sentiment > 0; male user refers to Gender = 'Male'; percentage = Divide (Count(TweetID where Gender = 'Male'), Count (TweetID)) * 100",SELECT SUM(CASE WHEN T2.Gender = 'Male' THEN 1.0 ELSE 0 END) / COUNT(T1.TweetID) AS per FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T1.Sentiment > 0
social_media,Give the number of users who do not show their genders.,do not show their gender refers to Gender = 'Unknown',SELECT COUNT(UserID) AS user_number FROM user WHERE Gender = 'Unknown'
social_media,State the number of states in the United Kingdom.,"""United Kingdom"" is the Country",SELECT COUNT(State) AS State_number FROM location WHERE Country = 'United Kingdom'
social_media,What is the code of Gwynedd State?,code refers to StateCode,SELECT DISTINCT StateCode FROM location WHERE State = 'Gwynedd'
social_media,Give the location id of West Sussex State.,,SELECT DISTINCT LocationID FROM location WHERE State = 'West Sussex'
social_media,How many reshared tweets are there in Texas?,reshared tweet refers to IsReshare = 'TRUE'; 'Texas' is the State,SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T2.State = 'Texas' AND T1.IsReshare = 'TRUE'
social_media,"For the tweet which got a reach number of 547851, which country did it come from?",reach number of 547851 refers to Reach = 547851,SELECT T2.Country FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T1.Reach = 547851
social_media,State the number of positive tweets from Ha Noi.,positive tweet refers to Sentiment > 0; 'Ha Noi' is the State,SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T1.Sentiment > 0 AND T2.State = 'Ha Noi'
social_media,Show the text of the tweet with the highest klout from Connecticut.,highest klout refers to Max(Klout); 'Connecticut' is the State,SELECT T1.text FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T2.State = 'Connecticut' ORDER BY T1.Klout DESC LIMIT 1
social_media,How many female Twitter users are there from Wisconsin?,female users refers to Gender = 'Female'; 'Wisconsin' is the State,SELECT COUNT(T1.Likes) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID INNER JOIN user AS T3 ON T3.UserID = T1.UserID WHERE T2.State = 'Wisconsin' AND T3.Gender = 'Female'
social_media,What is the gender of the user who tweeted `tw-715909161071091712`?,"""tw-715909161071091712"" is the TweetID",SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T1.TweetID = 'tw-715909161071091712'
social_media,Give the name of the city of the user who tweeted `One of our favorite stories is @FINRA_News's move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a`.,"""One of our favorite stories is @FINRA_News's move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a"" is the text",SELECT T2.City FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T1.text = 'One of our favorite stories is @FINRA_News''s move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a'
social_media,What is the gender of the user whose tweet got 535 retweets?,tweet got 535 retweets refers to RetweetCount = 535,SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T1.RetweetCount = 535
social_media,Give the gender of the user who made the highest klout tweet on Wednesdays.,highest klout refers to Max(Klout); 'Wednesday' is the Weekday,SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T1.Weekday = 'Wednesday' ORDER BY T1.Klout DESC LIMIT 1
social_media,"For the tweet which got the most likes, state the gender of the user who tweeted it.",most likes refers to Max(Likes),SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID ORDER BY T1.Likes DESC LIMIT 1
social_media,State the number of tweets from Michigan on Thursdays.,"""Michigan"" is the State; 'Thursday' is the Weekday; number of tweets refers to Count(TweetID)",SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T1.Weekday = 'Thursday' AND T2.State = 'Michigan'
social_media,Which state was the tweet `tw-685681052912873473` from? Give the state code.,tw-685681052912873473' is the TweetID,SELECT T2.StateCode FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T1.TweetID = 'tw-685681052912873473'
social_media,What is the percentage of male Twitter users from Florida?,"""Florida"" is the State; male user refers to Gender = 'Male'; percentage = Divide (Count(UserID where Gender = 'Male'), Count (UserID)) * 100",SELECT SUM(CASE WHEN T3.Gender = 'Male' THEN 1.0 ELSE 0 END) / COUNT(T1.TweetID) AS percentage FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID INNER JOIN user AS T3 ON T3.UserID = T1.UserID WHERE T2.State = 'Florida'
social_media,What is the percentage of the tweets from California are positive?,"""California"" is the State; positive tweet refers to Sentiment > 0; percentage = Divide (Count(TweetID where Sentiment > 0), Count (TweetID)) * 100",SELECT SUM(CASE WHEN T1.Sentiment > 0 THEN 1.0 ELSE 0 END) / COUNT(T1.TweetID) AS percentage FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE State = 'California'
social_media,What is the day of the week that tweet with ID tw-682712873332805633 was posted?,"""tw-682712873332805633"" is the TweetID; day of the week refers to Weekday",SELECT Weekday FROM twitter WHERE TweetID = 'tw-682712873332805633'
social_media,How many unique users have seen tweet with text `Happy New Year to all those AWS instances of ours!`?,"""Happy New Year to all those AWS instances of ours!"" is the text; seen unique users refers to Reach",SELECT Reach FROM twitter WHERE text = 'Happy New Year to all those AWS instances of ours!'
social_media,Count the total number of tweet IDs in `en`.,"""en"" is the language and refers to Lang = 'en'",SELECT COUNT(DISTINCT TweetID) FROM twitter WHERE Lang = 'en'
social_media,Is 3751 the location ID for tweet with ID tw-682714048199311366?,"""tw-682714048199311366"" is the TweetID",SELECT LocationID FROM twitter WHERE TweetID = 'tw-682714048199311366'
social_media,How many tweets have been posted on Wednesday?,"""Wednesday"" is the Weekday",SELECT COUNT(TweetID) FROM twitter WHERE Weekday = 'Wednesday'
social_media,List down all of the texts posted on Twitter on Thursday.,"""Thursday"" is the Weekday",SELECT text FROM twitter WHERE Weekday = 'Thursday'
social_media,What is the gender of the user who posted a tweet with ID tw-682714583044243456?,"""tw-682714583044243456"" is the TweetID",SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T1.TweetID = 'tw-682714583044243456'
social_media,List down the text of tweets posted by unknown gender users.,unknown gender user refers to Gender = 'Unknown',SELECT T1.text FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Unknown'
social_media,Calculate the total number of male tweet IDs.,"""Male"" is the Gender",SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Male'
social_media,What gender of users posted the most tweets in `en`?,"""en"" is the language and refers to Lang = 'en'; most tweet in 'en' refers to Max(Count(text where Lang = 'en'))","SELECT T.Gender FROM ( SELECT T2.Gender, COUNT( text) AS num FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T1.Lang = 'en' GROUP BY T2.Gender ) T ORDER BY T.num DESC LIMIT 1"
social_media,What gender of users retweet more than 30 times?,retweet more than 30 times refers to RetweetCount > 30,SELECT DISTINCT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T1.RetweetCount > 30
social_media,How many female users reshared their tweets?,female users refers to Gender = 'Female'; reshare refers to IsReshare = 'TRUE',SELECT COUNT(T1.UserID) FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Female' AND T1.IsReshare = 'TRUE'
social_media,Which country's tweets collected the most likes?,country collected the most likes refers to Country where Max(Sum(Likes)),"SELECT T.Country FROM ( SELECT T2.Country, SUM(T1.Likes) AS num FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID GROUP BY T2.Country ) T ORDER BY T.num DESC LIMIT 1"
social_media,Tweet with ID tw-682723090279841798 was posted from which country?,"""tw-682723090279841798"" is the TweetID",SELECT T2.Country FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.TweetID = 'tw-682723090279841798'
social_media,List down all the tweet text posted from Australia.,"""Australia"" is the Country",SELECT T1.text FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.Country = 'Australia'
social_media,"Write down the tweet text posted from Rawang, Selangor, Malaysia.","""Rawang"" is the City; ""Selangor"" is the State; ""Malaysia"" is the Country",SELECT T1.text FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.City = 'Rawang' AND T2.State = 'Selangor' AND T2.Country = 'Malaysia'
social_media,Tweets that were posted from Brazil are in what languague?,"""Brazil"" is the Country; language refers to Lang",SELECT DISTINCT T1.Lang FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.Country = 'Brazil'
social_media,State the country where the most positive sentiment tweets were posted.,country with the most positive sentiment tweet refers to Country where Max(Count(Sentiment > 0)),"SELECT T.Country FROM ( SELECT T2.Country, SUM(T1.Sentiment) AS num FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.Sentiment > 0 GROUP BY T2.Country ) T ORDER BY T.num DESC LIMIT 1"
social_media,Calculate the total likes collected by tweets in `ru` posted by male users.,'ru' refers to Lang = 'ru'; male user refers to Gender = 'Male',SELECT SUM(T1.Likes) FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T1.Lang = 'ru' AND T2.Gender = 'Male'
social_media,Calculate the average number of male users who posted tweets in a week.,"male user refers to Gender = 'Male'; average tweet in a week per user refers to Divide ( Divide(Count(TweetID), Count (UserID)), Divide(31, 7))",SELECT COUNT(DISTINCT T1.TweetID) / COUNT(DISTINCT T1.UserID) / 7 AS avg FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Male' AND T1.Day BETWEEN 1 AND 31
social_media,How many tweets have a klout of over 50?,klout of over 50 refers to Klout > 50,SELECT COUNT(DISTINCT TweetID) FROM twitter WHERE Klout > 50
social_media,Please list the texts of all the tweets that are not in English.,not in English refers to Lang <> en',SELECT text FROM twitter WHERE Lang != 'en'
social_media,Please give the user ID of the user who has posted the most tweets.,users with the most tweet refers to UserID where Max(Count (TweetID)),SELECT UserID FROM twitter GROUP BY UserID ORDER BY COUNT(DISTINCT TweetID) DESC LIMIT 1
social_media,"Among all the tweets posted on Mondays, how many of them are reshared?","""Monday"" is the Weekday; reshare refers to IsReshare = 'TRUE'",SELECT COUNT(DISTINCT TweetID) FROM twitter WHERE Weekday = 'Monday' AND IsReshare = 'TRUE'
social_media,Please list the texts of the top 3 tweets with the most number of unique users seeing the tweet.,the most number of unique users seeing refers to Max(Reach),SELECT text FROM twitter ORDER BY Reach DESC LIMIT 3
social_media,How many reshared tweets have over 100 likes?,over 100 likes refers to Likes > 100; reshare tweet refers to IsReshare = 'TRUE',SELECT COUNT(DISTINCT TweetID) FROM twitter WHERE IsReshare = 'TRUE' AND Likes > 100
social_media,What is the total number of tweets sent by male users on Mondays?,male user refers to Gender = 'Male; 'Monday' is the Weekday; total number of tweet refers to Count (TweetID),SELECT COUNT(DISTINCT T1.TweetID) FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Male' AND T1.Weekday = 'Monday'
social_media,What is the gender of the user who has posted the tweet that got the most likes?,tweet got the most likes refers to Max(Likes),SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID ORDER BY T1.Likes DESC LIMIT 1
social_media,Please list the texts of all the tweets in French posted by male users.,"""French"" is the language and refers to Lang = 'fr'; male user refers to Gender = 'Male'",SELECT T1.text FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Male' AND T1.Lang = 'fr'
social_media,How many tweets in French were posted from Australia?,"""French"" is the language and refers to Lang = 'fr'; 'Australia' is the Country",SELECT COUNT(DISTINCT T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.Lang = 'fr' AND T2.Country = 'Australia'
social_media,"Among all the tweets with a positive sentiment, how many of them were posted by male users in Australia?",tweet with positive sentiment refers to Sentiment > 0; male user refers to Gender = 'Male'; 'Australia' is the Country,SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID INNER JOIN user AS T3 ON T3.UserID = T1.UserID WHERE T2.Country = 'Australia' AND T3.Gender = 'Male' AND T1.Sentiment > 0
social_media,How many more tweets with a positive sentiment than the tweets with a neutral sentiment were posted by male users?,"positive sentiment tweet refers to Sentiment > 0; neutral sentiment refers to Sentiment = 0; male user refers to Gender = 'Male'; difference = Subtract (Count (TweetID where Sentiment > 0), Count (TweetID where Sentiment = 0))",SELECT SUM(CASE WHEN T1.Sentiment > 0 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.Sentiment = 0 THEN 1 ELSE 0 END) AS diff FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Male'
social_media,From which city was the tweet with the most number of retweets posted?,tweet with most number of retweet post refers to Max(RetweetCount),SELECT T2.City FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID ORDER BY T1.RetweetCount DESC LIMIT 1
social_media,"From which city were more tweets posted, Bangkok or Chiang Mai?","""Bangkok"" and ""Chiang Mai"" are both City","SELECT SUM(CASE WHEN T2.City = 'Bangkok' THEN 1 ELSE 0 END) AS bNum , SUM(CASE WHEN T2.City = 'Chiang Mai' THEN 1 ELSE 0 END) AS cNum FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.City IN ('Bangkok', 'Chiang Mai')"
social_media,"Among the tweets posted from Santa Fe state in Argentina, how many of them were posted on 31st?","""Sante Fe"" is the State; ""Argentina"" is the Country; posted on 31st refers to Day = 31",SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.Day = 31 AND T2.State = 'Santa' AND T2.Country = 'Argentina'
social_media,Please list the top 3 cities with the most number of tweets posted in Canada.,"""Canada"" is the Country; city with most number of tweets refers to City where Max(Count(TweetID))","SELECT T.City FROM ( SELECT T2.City, COUNT(T1.TweetID) AS num FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.Country = 'Canada' GROUP BY T2.City ) T ORDER BY T.num DESC LIMIT 3"
social_media,Please list all the cities from where tweets with neutral sentiments were posted.,neutral sentiment refers to Sentiment = 0,SELECT DISTINCT T2.City FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE Sentiment = 0
social_media,"Among all the tweets sent by male users in Argentina, what is the text of the one with the most number of likes?",male user refers to Gender = 'Male'; 'Argentina' is the Country; most number of likes refers to Max(Likes),SELECT T2.text FROM user AS T1 INNER JOIN twitter AS T2 ON T1.UserID = T2.UserID INNER JOIN location AS T3 ON T2.LocationID = T3.LocationID WHERE T3.Country = 'Argentina' AND T1.Gender = 'Male' ORDER BY T2.Likes DESC LIMIT 1
social_media,What is the average number of likes for a tweet posted by a male user on Mondays?,"male user refers to Gender = 'Male'; 'Monday' is the Weekday; average number of likes = Divide (Sum(Likes), Count(TweetID))",SELECT SUM(T1.Likes) / COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Male' AND T1.Weekday = 'Monday'
social_media,"Tweets posted from which city has a higher number of average likes, Bangkok or Chiang Mai?","""Bangkok"" and ""Chiang Mai"" are both City; average number of like = Divide (Sum(Likes), Count(TweetID))","SELECT SUM(CASE WHEN T2.City = 'Bangkok' THEN Likes ELSE NULL END) / COUNT(CASE WHEN T2.City = 'Bangkok' THEN 1 ELSE 0 END) AS bNum , SUM(CASE WHEN City = 'Chiang Mai' THEN Likes ELSE NULL END) / COUNT(CASE WHEN City = 'Chiang Mai' THEN TweetID ELSE NULL END) AS cNum FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.City IN ('Bangkok', 'Chiang Mai')"
cs_semester,"Which course is more difficult, Intro to BlockChain or Computer Network?",diff refers to difficulty; diff is higher means the course is more difficult;,SELECT name FROM course WHERE name = 'Intro to BlockChain' OR name = 'Computer Network' ORDER BY diff DESC LIMIT 1
cs_semester,Please list the names of the courses that are less important than Machine Learning Theory.,lower credit means less important;,SELECT name FROM course WHERE credit < ( SELECT credit FROM course WHERE name = 'Machine Learning Theory' )
cs_semester,How many professors are more popular than Zhou Zhihua?,higher popularity means the professor is more popular;,SELECT COUNT(prof_id) FROM prof WHERE popularity > ( SELECT popularity FROM prof WHERE first_name = 'Zhihua' AND last_name = 'Zhou' )
cs_semester,What is the phone number of Kerry Pryor?,,SELECT phone_number FROM student WHERE l_name = 'Pryor' AND f_name = 'Kerry'
cs_semester,Which professor advised Faina Mallinar to become a research assistant? Please give his or her full name.,research assistant refers to the student who serves for research where the abbreviation is RA; full name refers to f_name and l_name;,"SELECT T1.first_name, T1.last_name FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id WHERE T3.f_name = 'Faina' AND T3.l_name = 'Mallinar'"
cs_semester,How many research assistants does Sauveur Skyme have?,research assistant refers to the student who serves for research where the abbreviation is RA;,SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id WHERE T2.first_name = 'Sauveur' AND T2.last_name = 'Skyme'
cs_semester,Please list the full names of all the students who are research assistants with the highest research capability.,research assistant refers to the student who serves for research where the abbreviation is RA; the highest research capability refers to capability = 5; full name refers to f_name and l_name;,"SELECT T1.f_name, T1.l_name FROM student AS T1 INNER JOIN RA AS T2 ON T1.student_id = T2.student_id WHERE T2.capability = 5"
cs_semester,How many research assistants of Ogdon Zywicki have an average salary?,research assistant refers to the student who serves for research where the abbreviation is RA; average salary refers to salary = 'med';,SELECT COUNT(T1.prof_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id WHERE T2.first_name = 'Ogdon' AND T1.salary = 'med' AND T2.last_name = 'Zywicki'
cs_semester,Please list the full names of all the students who took the course Machine Learning Theory.,full name refers to f_name and l_name;,"SELECT T1.f_name, T1.l_name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.name = 'Machine Learning Theory'"
cs_semester,"Among the students who got a B in the course Machine Learning Theory, how many of them have a gpa of over 3?",B refers to grade; GPA is an abbreviated name of Grade Point Average where over 3 refers to gpa > 3;,SELECT COUNT(student_id) FROM registration WHERE grade = 'B' AND student_id IN ( SELECT student_id FROM student WHERE gpa > 3 AND course_id IN ( SELECT course_id FROM course WHERE name = 'Machine Learning Theory' ) )
cs_semester,Please list the names of the courses taken by Laughton Antonio.,,SELECT T3.name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T1.f_name = 'Laughton' AND T1.l_name = 'Antonio'
cs_semester,Which student failed the course Intro to Database 2? Please give his or her full name.,"If grade is NULL, it means that this student fails to pass the course; full name refers to f_name and l_name;","SELECT T1.f_name, T1.l_name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T2.grade IS NULL AND T3.name = 'Intro to Database 2'"
cs_semester,"Which student is more satisfied with the course Machine Learning Theory, Willie Rechert or Laughton Antonio?",sat refers to student's satisfaction degree with the course; more satisfied refers to MAX(sat);,"SELECT T1.f_name, T1.l_name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE (T1.f_name = 'Laughton' OR T1.f_name = 'Willie') AND (T1.l_name = 'Antonio' OR T1.l_name = 'Rechert') AND T3.name = 'Machine Learning Theory' ORDER BY T2.sat DESC LIMIT 1"
cs_semester,"Among the professors who have more than 3 research assistants, how many of them are male?",research assistant refers to the student who serves for research where the abbreviation is RA; more than 3 research assistant refers to COUNT(student_id) > 3;,SELECT COUNT(*) FROM ( SELECT T2.prof_id FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id WHERE T2.gender = 'Male' GROUP BY T1.prof_id HAVING COUNT(T1.student_id) > 3 )
cs_semester,"Among the students who took the course Machine Learning Theory, how many of them are undergraduates?",UG is an abbreviated name of undergraduate student in which type = 'UG';,SELECT COUNT(T1.student_id) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.name = 'Machine Learning Theory' AND T1.type = 'UG'
cs_semester,Which professor advised Willie Rechert to work as a research assistant? Please give his or her full name.,research assistant refers to the student who serves for research where the abbreviation is RA; prof_id refers to professor’s ID; full name refers to f_name and l_name;,"SELECT T1.first_name, T1.last_name FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id WHERE T3.f_name = 'Willie' AND T3.l_name = 'Rechert'"
cs_semester,What is the average gpa of Ogdon Zywicki's research assistants?,research assistant refers to the student who serves for research where the abbreviation is RA; prof_id refers to professor’s ID; GPA is an abbreviated name of Grade Point Average where average = AVG(gpa);,SELECT SUM(T3.gpa) / COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T1.student_id = T3.student_id WHERE T2.first_name = 'Ogdon' AND T2.last_name = 'Zywicki'
cs_semester,What is the average satisfying degree of the course Machine Learning Theory?,sat refers to student's satisfaction degree with the course;,SELECT CAST(SUM(T1.sat) AS REAL) / COUNT(T1.student_id) FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.name = 'Machine Learning Theory'
cs_semester,Give the number of research postgraduate students.,RPG is an abbreviated name of research postgraduate student in which type = 'RPG';,SELECT COUNT(student_id) FROM student WHERE type = 'RPG'
cs_semester,Which student has the highest gpa? Give the full name.,GPA is an abbreviated name of Grade Point Average where highest GPA = MAX(gpa); full name refers to f_name and l_name;,"SELECT f_name, l_name FROM student WHERE gpa = ( SELECT MAX(gpa) FROM student )"
cs_semester,"For the 3-credit course with the easiest difficulty, how many students get an ""A"" in that course?","diff refers to difficulty; diff is higher means the course is more difficult in which easiest difficulty refers to diff = 1; 3-credit course refers to credit = '3'; get an ""A"" refers to grade = 'A' for the course;",SELECT COUNT(T1.student_id) FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T1.grade = 'A' AND T2.credit = '3' AND T2.diff = 1
cs_semester,How many students took the hardest course?,diff refers to difficulty; diff is higher means the course is more difficult in which hardest difficulty is expressed as diff = 5;,SELECT COUNT(T1.student_id) FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.diff = 5
cs_semester,Which professor is Oliy Spratling working with? Give the full name.,research assistant refers to the student who serves for research where the abbreviation is RA; full name refers to f_name and l_name;,"SELECT T1.first_name, T1.last_name FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id WHERE T3.f_name = 'Oliy' AND T3.l_name = 'Spratling'"
cs_semester,"For the professor who is working with Harrietta Lydford, how is his popularity?",research assistant refers to the student who serves for research where the abbreviation is RA; higher popularity means more popular; prof_id refers to professor’s ID;,SELECT T1.popularity FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id WHERE T3.f_name = 'Harrietta' AND T3.l_name = 'Lydford'
cs_semester,How many research assistants does the female professor with the lowest teaching ability have?,research assistant refers to the student who serves for research where the abbreviation is RA; professor with the lowest teaching ability refers to prof_id where teachability = '1';,SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id WHERE T2.teachingability = '1' AND T2.gender = 'Female'
cs_semester,"For the professors who advise more than 2 students, which professor has a higher teaching ability? Give the full name.",professor advising more than 2 students refers to COUNT(student_id) > 2; higher teachability refers to MAX(teachingability); full name refers to f_name and l_name;,"SELECT T.first_name, T.last_name FROM ( SELECT T2.first_name, T2.last_name, T2.teachingability FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id GROUP BY T1.prof_id HAVING COUNT(student_id) > 2 ) T ORDER BY T.teachingability DESC LIMIT 1"
cs_semester,"Give the grade score for Rik Unsworth in ""Computer Network"".","Academic grades awarded for participation in a course are A, B, C, D and F where Grade 'A' means excellent, Grade 'B' means good, Grade 'C' means fair, Grade 'D' means poorly pass, if grade is null or empty, it means that this student fails to pass this course in which grade = NULL;",SELECT CASE grade WHEN 'A' THEN 4 WHEN 'B' THEN 3 WHEN 'C' THEN 2 ELSE 1 END AS result FROM registration WHERE student_id IN ( SELECT student_id FROM student WHERE f_name = 'Rik' AND l_name = 'Unsworth' AND course_id IN ( SELECT course_id FROM course WHERE name = 'Computer Network' ) )
cs_semester,How many courses does Alvera McQuillin take?,,SELECT COUNT(T1.course_id) FROM registration AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T2.f_name = 'Alvera' AND T2.l_name = 'McQuillin'
cs_semester,State the name of research postgraduate student among Professor Zhihua Zhou's research assistants.,research postgraduate student refers to type = 'RPG'; research assistant refers to the student who serves for research where the abbreviation is RA;,"SELECT T3.f_name, T3.l_name FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id WHERE T1.first_name = 'Zhihua' AND T3.type = 'RPG' AND T1.last_name = 'Zhou'"
cs_semester,"Provide the number of students enrolled in the ""Statistical Learning"" course.",,SELECT COUNT(T2.student_id) FROM course AS T1 INNER JOIN registration AS T2 ON T1.course_id = T2.course_id WHERE T1.name = 'Statistical learning'
cs_semester,"Who were the students who failed the course ""Applied Deep Learning""? Give the full name.","If grade is null or empty, it means that this student fails to pass the course in which grade = NULL;","SELECT T1.f_name, T1.l_name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.name = 'Applied Deep Learning ' AND T2.grade IS NULL"
cs_semester,"Give the phone number of the only student who obtained ""A"" in the course ""Intro to BlockChain"".",A refers to an excellent grade in which grade = 'A' for the course;,SELECT T1.phone_number FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.name = 'Intro to BlockChain' AND T2.grade = 'A'
cs_semester,What is the percentage of Professor Ogdon Zywicki's research assistants are taught postgraduate students?,"research assistant refers to the student who serves for research where the abbreviation is RA; taught postgraduate student refers to type = 'TPG'; DIVIDE(COUNT(student_id where type = 'TPG' and first_name = 'Ogdon', last_name = 'Zywicki'), COUNT(first_name = 'Ogdon', last_name = 'Zywicki')) as percentage;",SELECT CAST(SUM(CASE WHEN T3.type = 'TPG' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T1.student_id = T3.student_id WHERE T2.first_name = 'Ogdon' AND T2.last_name = 'Zywicki'
cs_semester,"What is the percentage of students who get a ""B"" in the course ""Computer Network""?","DIVIDE(COUNT(student_id(grade = 'B' and name = 'Computer Network')), COUNT(student_id where name = ' Computer Network')) as percentage;",SELECT CAST(SUM(CASE WHEN T1.grade = 'B' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.student_id) FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.name = 'Computer Network'
cs_semester,How many courses have the highest difficulty?,diff refers to difficulty; diff is higher means the course is more difficult in which highest difficulty is expessed as diff = 5;,SELECT COUNT(course_id) FROM course WHERE diff = 5
cs_semester,What is the full name of the professor who graduated from an Ivy League School?,"Ivy League school is assembled by 8 universities: Brown University, Columbia University, Cornell University, Dartmouth College, Harvard University, Princeton University, University of Pennsylvania and Yale University;","SELECT first_name, last_name FROM prof WHERE graduate_from IN ( 'Brown University',  'Columbia University',  'Cornell University',  'Dartmouth College',  'Harvard University',  'Princeton University',  'University of Pennsylvania',  'Yale University' )"
cs_semester,"Among the most important courses, what is the name of the most difficult course?",Higher credit means more important in which most important refers to MAX(credit); diff refers to difficulty; the most difficult course refers to MAX(diff);,SELECT name FROM course WHERE credit = ( SELECT MAX(credit) FROM course ) AND diff = ( SELECT MAX(diff) FROM course )
cs_semester,How many students have the highest intelligence among those taking a bachelor's degree?,bachelor's degree is an undergraduate degree in which type = 'UG'; the highest intelligence refers to MAX(intelligence);,SELECT COUNT(student_id) FROM student WHERE type = 'UG' AND intelligence = ( SELECT MAX(intelligence) FROM student )
cs_semester,"Among the most popular professors, how many are females?",the most popular professors refers to prof_id where MAX(popularity); female refers to gender;,SELECT COUNT(prof_id) FROM prof WHERE gender = 'Female' AND popularity = ( SELECT MAX(popularity) FROM prof )
cs_semester,How many research postgraduate students are there?,research postgraduate student refers to type = 'RPG';,SELECT COUNT(student_id) FROM student WHERE type = 'RPG'
cs_semester,How many students got an A in Applied Deep Learning?,A refers to an excellent grade in which grade = 'A' for the course;,SELECT COUNT(T2.student_id) FROM course AS T1 INNER JOIN registration AS T2 ON T1.course_id = T2.course_id WHERE T2.grade = 'A' AND T1.name = 'Applied Deep Learning '
cs_semester,What are the GPAs of the unpaid Research Assistants?,Unpaid Research Assistants undertake their work without payment in which salary = 'free';,SELECT T2.gpa FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.salary = 'free'
cs_semester,"Among the easiest courses, what is the name of the course where most students got an A?",diff refers to difficulty; the easiest courses refers to diff = 1; A refers to an excellent grade in which grade = 'A' for the course;,SELECT T2.name FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T1.grade = 'A' AND T2.diff = 1 GROUP BY T2.name ORDER BY COUNT(T1.student_id) DESC LIMIT 1
cs_semester,How many courses does the student with the highest GPA this semester take?,student with the highest GPA refers to student_id where MAX(gpa);,SELECT COUNT(course_id) FROM registration WHERE student_id IN ( SELECT student_id FROM student WHERE gpa = ( SELECT MAX(gpa) FROM student ) )
cs_semester,How many students does Ogdon Zywicki advise?,Ogdon Zywicki is a professor;,SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id WHERE T2.first_name = 'Ogdon' AND T2.last_name = 'Zywicki'
cs_semester,What is the name of the course with the highest satisfaction from students?,sat refers to student's satisfaction degree with the course where sat = 5 stands for the highest satisfaction;,SELECT DISTINCT T2.name FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T1.sat = 5
cs_semester,What are the names of the courses that the students with the lowest intelligence are least satisfied with?,lower intelligence refers to intelligence = 1; sat refers to student's satisfaction degree with the course where least satisfaction refers to sat = 1;,SELECT T3.name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T2.sat = 1 AND T1.intelligence = 1
cs_semester,"Which of the two courses, ""Advanced Operating System"" or ""Intro to BlockChain', did most of the students receive an A in?",A refers to an excellent grade in which grade = 'A';,"SELECT T2.name FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T1.grade = 'A' AND T2.name IN ('Advanced Operating System', 'Intro to BlockChain') GROUP BY T2.name ORDER BY COUNT(T1.student_id) DESC LIMIT 1"
cs_semester,What is the popularity of the professor who advises the highest number of students with the highest research ability?,professor with the highest research ability refers to prof_id where MAX(capability);,"SELECT T2.popularity FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id GROUP BY T1.prof_id, T1.capability ORDER BY COUNT(T1.student_id) DESC, T1.capability DESC LIMIT 1"
cs_semester,What is the average number of students who registered for the courses with a difficulty of 4?,"diff refers to difficulty; DIVIDE(COUNT(student_id where diff = 4), COUNT(course_id where diff = 4));",SELECT CAST(COUNT(T1.student_id) AS REAL) / COUNT(DISTINCT T2.course_id) FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.diff = 4
cs_semester,"How many students, who have a GPA between 3 to 4, failed a course?","GPA is an abbreviated name of Grade Point Average where GPA between 3 to 4 refers to gpa BETWEEN 3 AND 4; If grade is null or empty, it means that this student fails to pass this course;",SELECT COUNT(T2.student_id) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id WHERE T2.grade IS NULL AND T1.gpa BETWEEN 3 AND 4
cs_semester,How many students taking a bachelor's degree received an A in all of the courses that they took?,bachelor's degree is an undergraduate degree in which type = 'UG'; A refers to an excellent grade in which grade = 'A';,SELECT COUNT(T2.student_id) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id WHERE T2.grade = 'A' AND T1.type = 'UG'
cs_semester,What is the average GPA of the students with the highest research capability and high salary? List the full names of the students.,the highest research capability refers to capability = 5; high salary refers to salary = 'high'; prof_id refers to professor’s ID; GPA is an abbreviated name of Grade Point Average where average GPA refers to AVG(gpa);,"SELECT AVG(T2.gpa), T2.f_name, T2.l_name FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.salary = 'high' AND T1.capability = 5 GROUP BY T2.student_id"
cs_semester,List the professors' IDs and students' IDs with the lowest research ability.,the lowest research ability refers to MIN(capability); professor’s ID refers to prof_id;,"SELECT prof_id, student_id FROM RA WHERE capability = ( SELECT MIN(capability) FROM RA )"
cs_semester,Name the professor who got graduation from the University of Boston.,Name the professor refers to full name which includes f_name and l_name;,"SELECT first_name, last_name FROM prof WHERE graduate_from = 'University of Boston'"
cs_semester,List the courses' IDs and students' IDs who failed to pass the course.,"If grade is null or empty, it means that this student fails to pass the course;","SELECT course_id, student_id FROM registration WHERE grade IS NULL OR grade = ''"
cs_semester,What is the male and female ratio among the professors?,"DIVIDE(COUNT(prof_id where gender = 'Male'), COUNT(prof_id where gender = 'Female'));",SELECT CAST(SUM(CASE WHEN gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN gender = 'Female' THEN 1 ELSE 0 END) FROM prof
cs_semester,Describe the names and credits of the least difficult courses.,diff refers to difficulty; the least difficult courses refer to MIN(diff);,"SELECT name, credit FROM course WHERE diff = ( SELECT MIN(diff) FROM course )"
cs_semester,Describe the students' full names and GPAs under the supervision of the most popular professor.,"student's full names = f_name, l_name; most popular refers to MAX(popularity);","SELECT T3.f_name, T3.l_name, T3.gpa FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id ORDER BY T1.popularity DESC LIMIT 1"
cs_semester,Provide the full names and emails of unpaid research assistants.,"full names = f_name, l_name; research assistant refers to the student who serves for research where the abbreviation is RA; unpaid research assistant refers to salary = 'free';","SELECT T2.f_name, T2.l_name, T2.email FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.salary = 'free'"
cs_semester,"List the research assistants' full names, capabilities and GPAs who were under the supervision of Merwyn Conkay.","research assistant refers to the student who serves for research where the abbreviation is RA; full names = f_name, l_name;","SELECT T3.f_name, T3.l_name, T2.capability, T3.gpa FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id WHERE T1.first_name = 'Merwyn' AND T1.last_name = 'Conkay'"
cs_semester,Describe the students' full names and grades in Intro to BlockChain course.,"student's full names = f_name, l_name;","SELECT T1.f_name, T1.l_name, T2.grade FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.name = 'Intro to BlockChain'"
cs_semester,"Among students registered for the most difficult course, list the students' full names who got grade A.","difficulty refers to diff; most difficult course refers to MAX(diff); student's full names = f_name, l_name;","SELECT T1.f_name, T1.l_name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T2.grade = 'A' ORDER BY T3.diff DESC LIMIT 1"
cs_semester,Describe the full names and graduated universities of the professors who advised Olia Rabier.,"full names of the professors = first_name, last_name; graduated universities of the professors refers to graduate_from;","SELECT T1.first_name, T1.last_name, T1.graduate_from FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id WHERE T3.f_name = 'Olia' AND T3.l_name = 'Rabier'"
cs_semester,Name the students of the Advanced Database Systems course with the highest satisfaction.,"full the students = f_name, l_name; course refers to name; satisfaction refers to sat; highest satisfaction refers to MAX(sat);","SELECT T1.f_name, T1.l_name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.name = 'Advanced Database Systems' ORDER BY T2.sat DESC LIMIT 1"
cs_semester,Calculate the GPA of the semester for Laughton Antonio.,"GPA of the semester = DIVIDE(SUM(MULTIPLY(credit, grade)), SUM(credit)); grade 'A' refers to gpa = 4; grade 'B' refers to gpa = 3; grade 'C' refers to gpa = 2; grade 'D' refers to gpa = 1;",SELECT CAST(SUM(T3.credit * CASE T1.grade WHEN 'A' THEN 4 WHEN 'B' THEN 3 WHEN 'C' THEN 2 WHEN 'D' THEN 1 ELSE 1 END) AS REAL) / COUNT(T3.credit) FROM registration AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T1.course_id = T3.course_id WHERE T2.f_name = 'Laughton' AND T2.l_name = 'Antonio'
cs_semester,Provide the registered courses' names by undergraduate students with GPA of 3.7 and above.,Undergraduate students refers to type = 'UG'; GPA of 3.7 and above refers to gpa > 3.7;,SELECT DISTINCT T1.f_name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T1.type = 'UG' AND T1.gpa > 3.7
cs_semester,Describe the names and capability of the students who were advised by professors from the University of Washington.,"names of the students = f_name, l_name;","SELECT T3.f_name, T3.l_name, T2.capability FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id WHERE T1.graduate_from = 'University of Washington'"
cs_semester,"Describe the full names, emails and intelligence of the students with the highest capability and salary.",full names of the students = f_name; l_name; highest capability refers to MAX(capability); highest salary refers to salary = 'high';,"SELECT f_name, l_name, email, intelligence FROM student WHERE student_id IN ( SELECT student_id FROM RA WHERE salary = 'high' AND capability = ( SELECT MAX(capability) FROM RA ) )"
cs_semester,Mention the names and credits of course registered by the students who were under the supervision of female professor with the highest teaching ability.,female refers to gender = 'Female'; highest teaching ability refers to MAX(teachingability);,"SELECT T5.name, T5.credit FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T1.student_id = T3.student_id INNER JOIN registration AS T4 ON T3.student_id = T4.student_id INNER JOIN course AS T5 ON T4.course_id = T5.course_id WHERE T2.gender = 'Female' ORDER BY T2.teachingability DESC LIMIT 1"
cs_semester,How many of the professors are female?,female refers to gender = 'Female';,SELECT COUNT(prof_id) FROM prof WHERE gender = 'Female'
cs_semester,What is the name of the most difficult course?,difficulty of a course refers to diff; most difficult course refers to MAX(diff);,SELECT name FROM course WHERE diff = ( SELECT MAX(diff) FROM course )
cs_semester,"Among the students with a gpa of 3.1 to 3.7, how many of them are undergraduate students?",gpa of 3.1 to 3.7 refers to gpa BETWEEN 3.1 AND 3.7; undergraduate students refers to type = 'UG';,SELECT COUNT(student_id) FROM student WHERE gpa BETWEEN 3.1 AND 3.7 AND type = 'UG'
cs_semester,"What is the credit of the course named ""Computer Vision""?",,SELECT credit FROM course WHERE name = 'Computer Vision'
cs_semester,Give the student's ID of students with 2.5 GPA and enrolled in C for Programmers.,,SELECT T2.student_id FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.name = 'C for Programmers' AND T1.gpa = 2.5
cs_semester,"Give the student's last name that gave the highest student satisfaction for the course ""Intro to Database 2"".",student's last name refers to l_name; satisfaction refers to sat; highest satisfaction refers to MAX(sat);,SELECT T1.l_name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.name = 'Intro to Database 2' ORDER BY T2.sat DESC LIMIT 1
cs_semester,"Among the students with high salary, what is total number of students with a GPA higher than 3?",high salary refers to salary = 'high'; GPA higher than 3 refers to gpa > 3;,SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.salary = 'high' AND T2.gpa > 3
cs_semester,"Among undergraduate students, list the name of the course with the highest student satisfaction.",Undergraduate students refers to type = 'UG'; satisfaction refers to sat; highest satisfaction refers to MAX(sat);,SELECT T3.name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T1.type = 'UG' ORDER BY T2.sat DESC LIMIT 1
cs_semester,List the capability of research postgraduate students with an intellegence level of 4 and above.,research postgraduate students refers to type = 'RPG'; intelligence level of 4 and above refers to intelligence > = 4;,SELECT T1.capability FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T2.type = 'RPG' AND T2.intelligence >= 4
cs_semester,"In students with a grade of B, how many of them have an intellegence level of 3?",,SELECT COUNT(T1.student_id) FROM registration AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.grade = 'B' AND T2.intelligence = 3
cs_semester,What is the difficulty of the course in which a student with level of intellengence of 5 got an A grade?,difficulty of the course refers to diff;,SELECT T3.diff FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T2.grade = 'A' AND T1.intelligence = 5
cs_semester,"Among professors with the highest popularity, how many of their students have research capability of 5?",highest popularity refers to MAX(popularity); research capability refers to capability; capability = 5;,SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id WHERE T1.capability = 5 ORDER BY T2.popularity DESC LIMIT 1
cs_semester,List the course's name where students acquired a grade of D.,,SELECT T1.name FROM course AS T1 INNER JOIN registration AS T2 ON T1.course_id = T2.course_id WHERE T2.grade = 'D'
cs_semester,What is the capability on research of the student named Alvera McQuillin?,capability on research refers to capability;,SELECT T2.capability FROM student AS T1 INNER JOIN RA AS T2 ON T1.student_id = T2.student_id WHERE T1.f_name = 'Alvera' AND T1.l_name = 'McQuillin'
cs_semester,"Of courses with 3 credit, how many students have GPA of 3.2?",,SELECT COUNT(T1.student_id) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.credit = 3 AND T1.gpa = 3.2
cs_semester,"Among students with low salary, how many of them have a gpa of 3.5?",low salary refers to salary = 'low';,SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T2.gpa = 3.5 AND T1.salary = 'low'
cs_semester,List the student's email with grade of B in a course with difficulty greater than the 80% of average difficulty of all courses.,"difficulty refers to diff; course with difficulty greater than the 80% of average difficulty refers to diff > MULTIPLY(AVG(diff), 80%);",SELECT T2.email FROM registration AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T1.course_id = T3.course_id WHERE T1.grade = 'B' GROUP BY T3.diff HAVING T3.diff > AVG(T3.diff) * 0.8
cs_semester,"Among the professors with a teachability of 3 and below, what is the percentage of their student advisees with a low salary?","teachability < = 3; percentage = MULTIPLY(DIVIDE(COUNT(salary = 'low'), COUNT(salary)), 1.0);",SELECT CAST(SUM(CASE WHEN T1.salary = 'low' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.salary) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id WHERE T2.teachingability < 3
cs_semester,Find the most important and most difficult courses.,most important refers to MAX(credit); most difficult refers to MAX(diff);,SELECT name FROM course WHERE credit = ( SELECT MAX(credit) FROM course ) AND diff = ( SELECT MAX(diff) FROM course )
cs_semester,What is the average teaching ability of the most popular professors?,average = AVG(teachingability); most popular professor refers to MAX(popularity);,SELECT CAST(SUM(teachingability) AS REAL) / COUNT(prof_id) FROM prof WHERE popularity = ( SELECT MAX(popularity) FROM prof )
cs_semester,Calculate the average satisfaction of the good students with their courses.,"average satisfaction = DIVIDE(SUM(sat), COUNT(course_id)); satisfaction refers to sat; good student refers to grade = 'B';",SELECT CAST(SUM(sat) AS REAL) / COUNT(course_id) FROM registration WHERE grade = 'B'
cs_semester,"Among the students with less than four intelligence, list the full name and phone number of students with a greater than 3 GPA.","intelligence < 4; full name = f_name, l_name; gpa > 3;","SELECT f_name, l_name, phone_number FROM student WHERE gpa > 3 AND intelligence < 4"
cs_semester,Name the students with above-average capability.,"name of the students = f_name, l_name; above average-capability refers to capability > AVG(capability);","SELECT T1.f_name, T1.l_name FROM student AS T1 INNER JOIN RA AS T2 ON T1.student_id = T2.student_id WHERE T2.capability > ( SELECT AVG(capability) FROM RA )"
cs_semester,"For the students with an intelligence of 5, list the full name and courses taken by them who have less than a 3 GPA.","full name of the students = f_name, l_name; gpa < 3;","SELECT T1.f_name, T1.l_name, T3.name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T1.intelligence = 5 AND T1.gpa < 3"
cs_semester,What is the average capability of students with less than a 2.5 GPA?,average capability = AVG(capability); gpa < 2.5;,SELECT CAST(SUM(T1.capability) AS REAL) / COUNT(T1.student_id) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T2.gpa < 2.5
cs_semester,List the full name of the professors who advised students with intelligence 1.,"full name of the professors = first_name, last_name;","SELECT T1.first_name, T1.last_name FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id WHERE T3.intelligence = 1"
cs_semester,What is the difference in the average GPA of students who took the hardest and easiest courses?,"difference in the average gpa = SUBTRACT(AVG(gpa WHERE MAX(diff)), AVG(gpa where min(diff))); difficulty of the course refers to diff; hardest course refers to MAX(diff); easiest course refers to MIN(diff);","SELECT AVG(T1.gpa) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.diff IN (2, 1) GROUP BY T3.diff"
cs_semester,Give the full name and capability of students who failed in any courses.,"full name of students = f_name, l_name; failed refers to grade IS NULL;","SELECT T2.f_name, T2.l_name, T1.capability FROM RA AS T1 INNER JOIN student AS T2 ON T2.student_id = T1.student_id INNER JOIN registration AS T3 ON T2.student_id = T3.student_id WHERE T3.grade IS NULL OR T3.grade = ''"
cs_semester,"Of the students with high salaries, how many took the computer vision course?",high salaries refers to salary = 'High';,SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN registration AS T2 ON T2.student_id = T1.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T1.salary = 'high' AND T3.name = 'Computer Vision'
cs_semester,Find the full name and popularity of the professor who advises the most number of students.,"full name of the professor = first_name, last_name; most number of students refers to MAX(COUNT(student_id));","SELECT T1.first_name, T1.last_name, T1.popularity FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id GROUP BY T1.prof_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1"
cs_semester,"Please give the name of the course in which most numbers of the students got an A. Also, list the full name of the students who got an A in this course.","most number of students got an A refers MAX(COUNT(student_id WHERE grade = 'A')); full name = f_name, l_name; got an A refers to grade = 'A';","SELECT T3.name, T2.f_name, T2.l_name FROM registration AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T1.course_id = T3.course_id WHERE T1.grade = 'A' GROUP BY T3.name ORDER BY COUNT(T1.student_id) DESC LIMIT 1"
cs_semester,Calculate the difference between the average satisfaction of the students with high salaries and no salary.,"average satisfaction difference = SUBTRACT(AVG(sat where salary = 'high')), (AVG(sat where salary = 'free')); satisfaction refers to sat; no salary refers to salary = 'free';",SELECT AVG(T2.sat) - ( SELECT AVG(T2.sat) FROM RA AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id WHERE T1.salary = 'free' ) AS diff FROM RA AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id WHERE T1.salary = 'high'
cs_semester,Find the university from which the professor who advised most undergraduate students graduated.,university from which the professor graduated refers to graduate_from; undergraduate students refers to type = 'UG';,SELECT T1.graduate_from FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id WHERE T3.type = 'UG' GROUP BY T1.prof_id ORDER BY COUNT(T2.student_id) DESC LIMIT 1
cs_semester,"Among the professors with more than average teaching ability, list the full name and email address of the professors who advise two or more students.","more than average teaching ability refers to teachingability > AVG(teachingability); full_name of the professor = first_name, last_name; email address of the professor refers to email; advises two or more students refers to COUNT(student_id) > = 2;
","SELECT T2.first_name, T2.last_name, T2.email FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id WHERE T2.teachingability > ( SELECT AVG(teachingability) FROM prof ) GROUP BY T2.prof_id HAVING COUNT(T1.student_id) >= 2"
cs_semester,What percentage of students are highly satisfied with the Intro to Database 2 course?,"percentage = MULTIPLY(DIVIDE(COUNT(MAX(sat)), (COUNT(student_id))), 1.0); highly satisfied refers to MAX(sat);",SELECT CAST(( SELECT COUNT(*) FROM course WHERE name = 'Intro to Database 2' AND course_id IN ( SELECT course_id FROM registration WHERE sat = ( SELECT MAX(sat) FROM registration ) ) ) AS REAL) * 100  / COUNT(T1.student_id) FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.name = 'Intro to Database 2'
cs_semester,What is the first and last name of students with highest gpa?,first name refers of students refers to f_name; last name of students refers to l_name; highest gpa refers to MAX(gpa);,"SELECT f_name, l_name FROM student WHERE gpa = ( SELECT MAX(gpa) FROM student )"
cs_semester,"Among professors with the highest teachability, how many of their students have high salary?",highest teachability refers to MAX(teachability); high salary refers to salary = 'high';,SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id WHERE T1.salary = 'high' ORDER BY T2.teachingability DESC LIMIT 1
cs_semester,What is the salary range of the student with an email of grosellg@hku.hk?,salary range refers to salary;,SELECT T1.salary FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T2.email = 'grosellg@hku.hk'
cs_semester,"Among students that gave satisfaction of value 4 for the course named ""Statistical Learning"", how many of them have a gpa of 3.8?","satisfaction refers to sat;

sat = 4; gpa = 3.8 ",SELECT COUNT(T1.student_id) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.name = 'Statistical learning' AND T2.sat = 4 AND T1.gpa = 3.8
cs_semester,"Among courses with difficulty of 3, how many students have intellegence level of 2?",difficulty of 3 refers to diff = 3; intelligence = 2,SELECT COUNT(T1.student_id) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.diff = 3 AND T1.intelligence = 2
cs_semester,"List the student's first and last name that got a C in the course named ""Applied Deep Learning"".",student's first name refers to f_name; student's last name refers to l_name; got a C refers to grade = 'C';,"SELECT T1.f_name, T1.l_name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.name = 'Applied Deep Learning ' AND T2.grade = 'C'"
cs_semester,"Among research postgraduate students, give the name of the course with the student satisfaction value of 1.",research postgraduate students refers to type = 'RPG'; name of the course refers to name; satisfaction refers to sat; sat = 1;,SELECT T3.name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T2.sat = 1 AND T1.type = 'RPG'
cs_semester,"Among the students with a capability below 3, what is the difference of undergraduate students from research postgraduate students?","capability < 3; difference = subtract(count(type = 'UG')), (count(type = 'RPG')); undergraduate students refers to type = 'UG'; research postgraduate students refers to type = 'RPG';",SELECT SUM(CASE WHEN T2.type = 'UG' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.type = 'RPG' THEN 1 ELSE 0 END) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.capability < 3
computer_student,What is the average number of students for each advisor?,students refers to advisedBy.p_id; advisor refers to p_id_dummy; average number = avg(count(advisedBy.p_id)),SELECT CAST(COUNT(p_id) AS REAL) / COUNT(DISTINCT p_id_dummy) AS avgnum FROM advisedBy GROUP BY p_id_dummy
computer_student,How many professors are teaching course ID 18?,professors refers to taughtBy.p_id; course ID 18 refers to taughtBy.course_id,SELECT COUNT(DISTINCT p_id) FROM taughtBy WHERE course_id = 18
computer_student,List all the course IDs for professional or master/graduate courses.,professional or master/graduate courses refers to courseLevel = 'Level_500',SELECT course_id FROM course WHERE courseLevel = 'Level_500'
computer_student,How many courses are there for basic or medium undergraduate courses?,basic or medium undergraduate courses refers to courseLevel = 'Level_300'; courses refers to course.course_id,SELECT COUNT(course_id) FROM course WHERE courseLevel = 'Level_300'
computer_student,List the ID of all professors who are not faculty member along with the courses taught by him/her.,ID of all professors refers to person.p_id where professor = 1; not faculty member refers to hasPosition = 0; courses refers to taughtBy.course_id,"SELECT T2.p_id, T2.course_id FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id WHERE T1.professor = 1 AND T1.hasPosition <> 0"
computer_student,Provide the ID of professors who are teaching high-level or harder undergraduate course.,ID of professors refers to taughtBy.p_id; high-level or harder undergraduate course refers to courseLevel = 'Level_400',SELECT T2.p_id FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T1.courseLevel = 'Level_400'
computer_student,What are the courses taught by the advisors who gave advice to student with ID 376?,courses refers to course_id; advisors refers to p_id_dummy and taughtBy.p_id; student with ID 376 refers to advisedBy.p_id = 376,SELECT T3.course_id FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id INNER JOIN taughtBy AS T3 ON T2.p_id = T3.p_id WHERE T1.p_id = 141
computer_student,Name the advisors for students in Year 3 of the program.,advisors refers to p_id_dummy; students in Year 3 of the program refers to yearsInProgram = 'Year_3',SELECT T1.p_id FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.yearsInProgram = 'Year_3'
computer_student,Which level of courses is taught by professor ID 297?,professor ID 297 refers to taughtBy.p_id = 297,SELECT T1.courseLevel FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T2.p_id = 297
computer_student,What level is course 165? List the professors who teach the course.,course 165 refers to course_id = 165; professors refers to taughtBy.p_id,"SELECT T1.courseLevel, T2.p_id FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T2.course_id = 165"
computer_student,List the ID and years in program for students taught by advisor with ID 5.,advisor with ID 5 refers to p_id_dummy = 5,"SELECT T1.p_id, T2.yearsInProgram FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T1.p_id_dummy = 5"
computer_student,State the courses and level of courses by professors who are faculty employees.,professors who are faculty employees refers to professor = 1; faculty employees refers to hasPosition = 'Faculty_eme',"SELECT T3.course_id, T3.courseLevel FROM taughtBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id INNER JOIN course AS T3 ON T3.course_id = T1.course_id WHERE T2.hasPosition = 'Faculty_eme'"
computer_student,Find the ID of advisor of student ID 80 and state the level of courses taught by him/her.,ID of advisor refers to p_id_dummy; student ID 80 refers to advisedBy.p_id = 80; level of courses refers to courseLevel,"SELECT T1.p_id_dummy, T2.courseLevel FROM advisedBy AS T1 INNER JOIN course AS T2 ON T1.p_id = T2.course_id INNER JOIN taughtBy AS T3 ON T2.course_id = T3.course_id WHERE T1.p_id = 80"
computer_student,Provide the ID of professors who teach in both harder undergraduate course and master/graduate courses.,harder undergraduate course refers to courseLevel = 'Level_400'; master/graduate courses refers to courseLevel = 'Level_500'; ID of professors refers to taughtBy.p_id,SELECT DISTINCT T2.p_id FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T1.courseLevel = 'Level_400' OR T1.courseLevel = 'Level_500'
computer_student,Who are the professors who gave advice to students in the 12th years of program?,professors refers to p_id_dummy; 12th years of program refers to yearsInProgram = 'Year_12',SELECT T1.p_id_dummy FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.yearsInProgram = 'Year_12'
computer_student,Which are the courses with the most number of professors? State the course ID and the level of the course.,courses refers taughtBy.course_id; most number of professors  refers to max(count(taughtBy.p_id)); level of the course refers to courseLevel,"SELECT T1.course_id, T1.courseLevel FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id, T1.courseLevel ORDER BY COUNT(T1.course_id) DESC LIMIT 1"
computer_student,How many basic and medium undergraduate courses are there?,basic and medium undergraduate courses refers to courseLevel = 'Level_300' and courses refers to course.course_id,SELECT COUNT(*) FROM course WHERE courseLevel = 'Level_300'
computer_student,How many people teaches course no.11?,people refers to taughtBy.p_id; course no.11 refers to course_id = 11,SELECT COUNT(*) FROM taughtBy WHERE course_id = 11
computer_student,"Which course has more teachers, course no.16 or course no.18?",teachers refers to taughtBy.p_id; course no.16 refers to course_id = 16; course no.18 refers to course_id = 18,SELECT course_id FROM taughtBy WHERE course_id = 11 OR course_id = 18 GROUP BY course_id ORDER BY COUNT(course_id) DESC LIMIT 1
computer_student,How many teachers are faculty employees?,teachers refers to professor = 1; faculty employees refers to hasPosition = 'Faculty_eme',SELECT COUNT(*) FROM person WHERE hasPosition = 'Faculty_eme'
computer_student,Please list the IDs of the teachers who have advised more than 4 others to teach.,teachers refers to p_id_dummy; have advised more than 4 others refers to count(advisedBy.p_id) > 4,SELECT p_id_dummy FROM advisedBy GROUP BY p_id_dummy HAVING COUNT(p_id_dummy) > 4
computer_student,How many basic or medium undergraduate courses are taught by a professor?,basic or medium undergraduate courses refers to courseLevel = 'Level_300'; professor refers to professor = 1,SELECT COUNT(*) FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id INNER JOIN person AS T3 ON T3.p_id = T2.p_id WHERE T1.courseLevel = 'Level_300' AND T3.professor = 1
computer_student,Please list the IDs of all the faculty employees who teaches a basic or medium undergraduate course.,faculty employees refers to hasPosition = 'Faculty_eme'; basic or medium undergraduate course refers to courseLevel = 'Level_300',SELECT T2.p_id FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id INNER JOIN person AS T3 ON T3.p_id = T2.p_id WHERE T1.courseLevel = 'Level_300' AND T3.hasPosition = 'Faculty_eme'
computer_student,Is the teacher who teaches course no.9 a faculty member?,teacher refers to taughtBy.p_id; course no.9 refers to taughtBy.course_id = 9; faculty member refers to hasPosition ! = 0,SELECT T2.hasPosition FROM taughtBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T1.course_id = 9
computer_student,Please list the levels of the all courses taught by teacher no.79.,levels of the all courses refers to courseLevel; teacher no.79 refers to taughtBy.p_id = 79,SELECT T1.courseLevel FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T2.p_id = 79
computer_student,Please list the IDs of the advisors of the students who are in the 5th year of their program.,IDs of the advisors refers to p_id_dummy; in the 5th year of their program refers to yearsInProgram = 'Year_5',SELECT T1.p_id_dummy FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.yearsInProgram = 'Year_5'
computer_student,How many students are advised to teach by a professor teaching basic or medium undergraduate courses?,students refers to advisedBy.p_id; professor refers to p_id_dummy and taughtBy.p_id and professor = 1; basic or medium undergraduate courses refers to courseLevel = 'Level_300',SELECT COUNT(DISTINCT T4.p_id) FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id INNER JOIN course AS T3 ON T3.course_id = T2.course_id INNER JOIN advisedBy AS T4 ON T4.p_id = T1.p_id WHERE T1.professor = 1 AND T3.courseLevel = 'Level_300'
computer_student,"Among the courses that are basic or medium undergraduate courses, how many of them are taught by a faculty member?",courses that are basic or medium undergraduate courses refers to courseLevel = 'Level_300'; faculty member refers to hasPosition ! = 0,SELECT COUNT(*) FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id INNER JOIN person AS T3 ON T2.p_id = T3.p_id WHERE T3.professor = 1 AND T1.courseLevel = 'Level_300'
computer_student,"For the professor who advised student no.6, please list the IDs of the courses he or she teaches.",professor refers to p_id_dummy and professor = 1; student no.6 refers to advisedBy.p_id = 6; IDs of the courses refers to taughtBy.course_id,SELECT T2.course_id FROM taughtBy AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id INNER JOIN advisedBy AS T3 ON T3.p_id = T1.p_id WHERE T1.p_id = 9
computer_student,What is the level of the course with the most number of teachers?,level of the course refers to courseLevel; course with most number of teachers refers to course_id = max(count(taughtBy.p_id)),SELECT T1.courseLevel FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id ORDER BY COUNT(T2.p_id) DESC LIMIT 1
computer_student,Please list the IDs of the professors that teaches more than 3 courses.,IDs of the professors refers to taughtBy.p_id and professor = 1; teaches more than 3 courses  refers to count(course_id) > 3,SELECT T1.p_id FROM taughtBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.professor = 1 GROUP BY T1.p_id HAVING COUNT(DISTINCT T1.course_id) > 3
computer_student,Please list the IDs of the top 3 professors that teaches the most courses.,IDs of the professors refers to taughtBy.p_id and professor = 1; teaches the most courses refers to max(count(course_id)),SELECT T1.p_id FROM taughtBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.professor = 1 GROUP BY T1.p_id ORDER BY COUNT(*) DESC LIMIT 3
computer_student,"In total, all the students in the 3rd year of their program are advised by how many professors?",3rd year of their program refers to yearsInProgram = 'Year_3'; professors refers to p_id_dummy,SELECT COUNT(DISTINCT T1.p_id_dummy) FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.yearsInProgram = 'Year_3'
computer_student,What is the average number of courses taught by a professor?,"professor refers to professor = 1; average number of courses = divide(count(taughtBy.course_id), count(taughtBy.p_id) where professor = 1 )",SELECT CAST(COUNT(T1.course_id) AS REAL) / COUNT(DISTINCT T2.p_id) AS num FROM taughtBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.professor = 1
computer_student,What is the ratio of professors and students?,"professors refers to professor = 1; students refers to student = 1; ratio = divide(count(person.p_id) when professor = 1, count(person.p_id) when student = 1)",SELECT CAST(SUM(CASE  WHEN professor = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE  WHEN student = 1 THEN 1 ELSE 0 END) AS per FROM person
computer_student,Calculate the percentage of high-level undergraduate course.,"high-level undergraduate course refers to courseLevel = 'Level_400'; percentage = divide(count(course.course_id) when courseLevel = 'Level_400', count(course.course_id)) * 100%",SELECT CAST(SUM(CASE  WHEN courseLevel = 'Level_400' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS per FROM course
computer_student,List down all the person IDs who taught course ID of 18.,person IDs refers to taughtBy.p_id; course ID of 18  refers to taughtBy.course_id = 18,SELECT p_id FROM taughtBy WHERE course_id = 18
computer_student,"Provide the position status and IDs of professor who advised student ID ""303"".","position status refers to hasPosition; IDs of professor refers to p_id_dummy; student ID ""303"" refers to advisedBy.p_id = 303","SELECT T2.hasPosition, T1.p_id_dummy FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id_dummy = T2.p_id WHERE T1.p_id = 303"
computer_student,List the person IDs and course levels of the affiliated professors in faculty.,person IDs refers to person.p_id; affiliated professors in faculty refers to professor = 1 and hasPosition = 'Faculty_aff',"SELECT T1.p_id, T3.courseLevel FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id INNER JOIN course AS T3 ON T3.course_id = T2.course_id WHERE T1.hasPosition = 'Faculty_aff'"
computer_student,Describe the year in program and in phase status for the student with most number in advisor.,student refers to advisedBy.p_id; most number in advisor refers to max(count(p_id_dummy)),"SELECT T2.yearsInProgram, T2.inPhase FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id GROUP BY T1.p_id ORDER BY COUNT(*) DESC LIMIT 1"
computer_student,List down the advised student IDs and IDs of employing professor in faculty.,advised student IDs refers to person.p_id; IDs of employing professor in faculty refers to p_id_dummy and hasPosition = 'Faculty_eme',"SELECT T1.p_id, T2.p_id FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id_dummy = T2.p_id WHERE hasPosition = 'Faculty_eme'"
computer_student,List the course IDs and levels of person IDs from 40 to 50.,course IDs and levels refers to course.course_id and courseLevel; person IDs from 40 to 50 refers to taughtBy.p_id between 40 and 50,"SELECT T1.course_id, T1.courseLevel FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T2.p_id BETWEEN 40 AND 50"
computer_student,Describe the course level and list of person IDs who taught course ID of 147.,person IDs refers to taughtBy.p_id; course ID of 147 refers to course.course_id = 147,"SELECT T1.courseLevel, T1.course_id FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T2.p_id = 141"
computer_student,Mention the person ID of faculty professor who taught course ID 104 and the course level.,person ID refers to person.p_id; faculty professor refers to professor = 1 and hasPosition ! = 0,"SELECT T1.p_id, T3.courseLevel FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id INNER JOIN course AS T3 ON T3.course_id = T2.course_id WHERE T3.course_id = 104 AND T1.hasPosition <> 0"
computer_student,Find the professor ID and position in faculty who taught high-level undergraduate course of less than 10 in ID.,professor ID refers to person.p_id when professor = 1; position in faculty refers to hasPosition; high-level undergraduate course refers to courseLevel = 'Level_400'; less than 10 in ID refers to course.course_id < 10,"SELECT T1.p_id, T1.hasPosition FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id INNER JOIN course AS T3 ON T3.course_id = T2.course_id WHERE T3.courseLevel = 'Level_400' AND T2.course_id < 10"
computer_student,List the professor ID who taught the course ID from 121 to 130 of basic undergraduate courses.,professor ID refers to taughtBy.p_id; course ID from 121 to 130 of basic undergraduate courses refers to courseLevel = 'Level_300' and course.course_id between 121 and 130,SELECT T2.p_id FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T1.courseLevel = 'Level_300' AND T1.course_id > 121 AND T1.course_id < 130
computer_student,List the advisor IDs for students with eighth year of program and position status in faculty of those professors.,advisor IDs refers to p_id_dummy and person.p_id where professor = 1; eighth year of program refers to yearsInprogram = 'Year_8'; position status in faculty of those professors refers to hasPosition,"SELECT T1.p_id_dummy, T2.hasPosition FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.yearsInProgram = 'Year_8'"
computer_student,List any five of course IDs with professor IDs who taught master courses.,professor IDs refers to taughtBy.p_id; master course refers to courseLevel = 'Level_500',"SELECT T1.course_id, T2.p_id FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T1.courseLevel = 'Level_500' LIMIT 5"
computer_student,How many students are under advisor 415?,advisor 415 refers to p_id_dummy = 415,SELECT COUNT(*) FROM advisedBy WHERE p_id_dummy = 415
computer_student,How many professional or master/graduate courses are there?,professional or master/graduate courses refers to courseLevel = 'Level_500',SELECT COUNT(*) FROM course WHERE courseLevel = 'Level_500'
computer_student,How many non-faculty members are not undergoing the phase of qualifications?,non-faculty members refers to hasPosition = 0; are not undergoing the phase of qualifications refers to inPhase = 0,SELECT COUNT(*) FROM person WHERE hasPosition = 0 AND inPhase = 0
computer_student,Which professor taught the least amount of courses?,professor refers to taughtBy.p_id; least amount of courses refers to min(count(course_id)),SELECT p_id FROM taughtBy GROUP BY p_id ORDER BY COUNT(course_id) ASC LIMIT 1
computer_student,"Among the students being advised by Advisor 5, how many students are in the 5th year?",Advisor 5 refers to p_id_dummy = 5; are in the 5th year refers to yearsInProgram = 'Year_5',SELECT COUNT(*) FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T1.p_id_dummy = 5 AND T2.student = 1 AND T2.yearsInProgram = 'Year_5'
computer_student,Which professor teaches the highest number of professional or master/graduate courses?,professor refers to taughtBy.p_id; highest number of professional or master/graduate courses refers to max(count(taughtBy.course_id)) where courseLevel = 'Level_500',SELECT T2.p_id FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T1.courseLevel = 'Level_500' GROUP BY T2.p_id ORDER BY COUNT(T2.course_id) DESC LIMIT 1
computer_student,"Among the faculty affiliated professor, how many professors teaches professional or master/undergraduate courses?",faculty affiliated professor refers to professor = 1 and hasPosition = 'Faculty_aff'; professional or master/undergraduate courses refers to courseLevel = 'Level_500',SELECT COUNT(*) FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id INNER JOIN course AS T3 ON T3.course_id = T2.course_id WHERE T1.hasPosition = 'Faculty_aff' AND T1.professor = 1 AND T3.courseLevel = 'Level_500'
computer_student,Who are the top 5 professors who teaches the highest number of professional or master/undergraduate courses?,professors refers to course.p_id; highest number of professional or master/undergraduate courses refers to max(count(course.course_id)) where courseLevel = 'Level_500',SELECT T2.p_id FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T1.courseLevel = 'Level_500' GROUP BY T2.p_id ORDER BY COUNT(T2.p_id) DESC LIMIT 5
computer_student,How many advisors are in charge of advising all the students in 1st year?,advisors refers to p_id_dummy; students in 1st year refers to student = 1 and yearsInProgram = 'Year_1',SELECT COUNT(T1.p_id_dummy) FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.yearsInProgram = 'Year_1' AND T2.student = 1
computer_student,How many professors teaches no more than two high-level or harder undergraduate courses?,professors refers to taughtBy.p_id; high-level or harder undergraduate courses  refers to courseLevel = 'Level_400' ; no more than two refers to count(taughtBy.course_id) < = 2,SELECT COUNT(*) FROM ( SELECT COUNT(T2.p_id) FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T1.courseLevel = 'Level_400' GROUP BY T2.p_id HAVING COUNT(DISTINCT T1.course_id) <= 2 )
computer_student,"Between the faculty employee professors, how many teaches high-level or harder undergraduate courses? Indicate each of the professors unique identifying number.",faculty employee professors refers to hasPosition = 'Faculty_eme' and professor = 1; high-level or harder undergraduate courses refers to courseLevel = 'Level_400'; professors unique identifying number refers to person.p_id,SELECT COUNT(*) FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id INNER JOIN course AS T3 ON T3.course_id = T2.course_id WHERE T1.hasPosition = 'Faculty_eme' AND T1.professor = 1 AND T3.courseLevel = 'Level_400'
computer_student,What is the position in the faculty of the professor who teaches the highest number of courses?,position in the faculty refers to hasPosition; professor refers to professor = 1; teaches the highest number of courses refers to max(count(taughtBy.course_id)),SELECT T1.hasPosition FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id WHERE T1.professor = 1 GROUP BY T1.p_id ORDER BY COUNT(T2.course_id) DESC LIMIT 1
computer_student,What year in the program do the students with more than 2 advisors are in?,students refers to student = 1; more than 2 advisors refers to count(p_id_dummy) > 2,SELECT T2.yearsInProgram FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.student = 1 GROUP BY T2.p_id HAVING COUNT(T2.p_id) > 2
computer_student,How many professors teaches basic or medium undergraduate courses?,professors refers to taughtBy.p_id; basic or medium undergraduate courses refers to couresLevel = 'Level_300',SELECT COUNT(*) FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T1.courseLevel = 'Level_300'
computer_student,"Among the students being advised by advisors, which students' year in the program do the advisors advise the majority of?",students refers to student = 1; students' year in the program do the advisors advise the majority of refers to max(count(yearsInProgram)),SELECT T2.yearsInProgram FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.student = 1 GROUP BY T2.yearsInProgram ORDER BY COUNT(T1.p_id_dummy) DESC LIMIT 1
computer_student,How many students that are undergoing the pre-phase of qualification have advisors?,students refers to student = 1 and ; undergoing the phase of pre-qualification refers to inPhase = 'Pre-Quals'; have advisors refers to advisedBy.p_id,SELECT COUNT(T1.p_id_dummy) FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.inPhase = 'Pre_Quals' AND T2.student = 1
computer_student,What is the average number of professional or master/undergraduate courses being taught by each professor?,"professional or master/undergraduate courses refers to courseLevel = 'Level_500'; average number = divide(count(taughtBy.course_id), count(taughtBy.p_id))",SELECT CAST(COUNT(T1.course_id) AS REAL) / COUNT(DISTINCT T2.p_id) FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T1.courseLevel = 'Level_500'
computer_student,How many courses were taught by more than 4 people?,courses refers to taughtBy.course_id; more than 4 people refers to count(taughtBy.p_id) > 4,SELECT COUNT(*) FROM ( SELECT COUNT(course_id) FROM taughtBy GROUP BY course_id HAVING COUNT(course_id) > 4 )
computer_student,What is the total of professional courses available at the university? List out all the course id.,professional courses refers to courseLevel = 'Level_500'; course id refers to course.course_id,SELECT COUNT(course_id) FROM course WHERE courseLevel = 'Level_500'
computer_student,What is the sum of year 1 and year 2 students?,year 1 and year 2 students refers to yearsInProgram = 'Year_1' and yearsInProgram = 'Year_2' and student = 1,SELECT COUNT(*) FROM person WHERE yearsInProgram = 'Year_1' OR yearsInProgram = 'Year_2'
computer_student,How many courses were taught by a professor who is currently the member of faculty?,professor refers to professor = 1;  member of faculty refers to hasPosition <> 0,SELECT COUNT(*) FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id WHERE T1.professor = 1 AND T1.hasPosition <> 0
computer_student,Which professor taught the most courses and what is the position of this person in the university?,professor refers to taughtBy.p_id; most courses refers to max(taughtBy.p_id); position refers to hasPosition,"SELECT T1.p_id, T1.hasPosition FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id GROUP BY T1.p_id ORDER BY COUNT(T2.course_id) DESC LIMIT 1"
computer_student,Which courses were taught by a professor who is not a faculty member?,courses refers to taughtBy.course_id; professor refers to professor = 1; is not a faculty member refers to hasPosition = 0,SELECT DISTINCT T2.course_id FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id WHERE T1.professor = 1 AND T1.hasPosition = 0
computer_student,Which member of the faculty are teaching the most courses and what is his/her general course level?,"member of the faculty refers to hasPosition <> 0, most courses refers to max(count(course.course_id))","SELECT T1.p_id, T3.courseLevel FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id INNER JOIN course AS T3 ON T3.course_id = T2.course_id GROUP BY T1.p_id ORDER BY COUNT(T2.course_id) DESC LIMIT 1"
talkingdata,What is the device id of the oldest user?,oldest user refers to MAX(age);,SELECT device_id FROM gender_age WHERE age = ( SELECT MAX(age) FROM gender_age )
talkingdata,"How many events were held at coordinate 97,40?","coordinate 97,40 refers to longitude = 97 AND latitude = 40;",SELECT COUNT(event_id) FROM `events` WHERE latitude = 40 AND longitude = 97
talkingdata,How many male users are in the age group of M32-38?,male refers to gender = 'M'; age group refers to group; `group` = 'M32-38';,SELECT COUNT(gender) FROM gender_age WHERE gender = 'M' AND `group` = 'M32-38'
talkingdata,How many female users over the age of 50 are there?,female refers to gender = 'F'; over the age of 50 refers to age > 50;,SELECT COUNT(gender) FROM gender_age WHERE age > 50 AND gender = 'F'
talkingdata,How many active users were there in the event id 2?,active users refers to is_active = 1;,SELECT COUNT(is_active) FROM app_events WHERE event_id = 2 AND is_active = 1
talkingdata,What is the gender of the youngest user?,youngest user refers to MIN(age);,SELECT gender FROM gender_age WHERE age = ( SELECT MIN(age) FROM gender_age )
talkingdata,What is the name of the category which most users belong to?,most users belong to refers to MAX(COUNT(app_id)); name of category refers to category;,"SELECT T.category FROM ( SELECT T2.category, COUNT(T1.app_id) AS num FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T2.label_id = T1.label_id GROUP BY T1.app_id, T2.category ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,What is the model of the oldest user's device?,model of the device refers to device_model; oldest user refers to MAX(age);,SELECT T1.device_model FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id ORDER BY T2.age DESC LIMIT 1
talkingdata,How many users are there in the Home Decoration category?,,SELECT COUNT(T1.app_id) FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T2.label_id = T1.label_id WHERE T2.category = 'Home Decoration'
talkingdata,How many male users are active in the events held on 5/1/2016?,male refers to gender = 'M'; active refers to is_active = 1; on 5/1/2016 refers to timestamp LIKE '2016-05-01%';,SELECT COUNT(T3.gender) FROM app_events AS T1 INNER JOIN events_relevant AS T2 ON T2.event_id = T1.event_id INNER JOIN gender_age AS T3 ON T3.device_id = T2.device_id WHERE T1.is_active = 1 AND T3.gender = 'M' AND T2.timestamp LIKE '2016-05-01%'
talkingdata,How many female users use ZenFone 5 devices?,female refers to gender = 'F'; ZenFone 5 refers to device_model = 'ZenFone 5';,SELECT COUNT(T1.gender) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T2.device_id = T1.device_id WHERE T1.gender = 'F' AND T2.device_model = 'ZenFone 5'
talkingdata,"What is the age of the oldest active user that participated in the event held on 5/6/2016 at coordinates 121, 31?","oldest user refers to MAX(age); active user refers to is_active = 1; on 5/6/2016 refers to timestamp LIKE '2016-05-06%'; coordinates 121, 31 refers to longitude = 121 AND latitude = 31;","SELECT T3.age FROM app_events AS T1 INNER JOIN events_relevant AS T2 ON T1.event_id = T2.event_id INNER JOIN gender_age AS T3 ON T2.device_id = T3.device_id WHERE T1.is_active = 1 AND T2.longitude = 121 AND T2.latitude = 31 AND SUBSTR(T2.timestamp, 1, 10) = '2016-05-06' ORDER BY T3.age DESC LIMIT 1"
talkingdata,What is the most common device model among female users between the ages 27 to 28?,most common device model refers to MAX(COUNT(device_id)); female refers to gender = 'F'; between the ages 27 to 28 refers to group = 'F27-28';,SELECT T2.device_model FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.`group` = 'F27-28' AND T1.gender = 'F' ORDER BY T2.device_id DESC LIMIT 1
talkingdata,What are the categories of the top 2 oldest events?,oldest event refers to MIN(timestamp);,SELECT T4.category FROM events_relevant AS T1 INNER JOIN app_events_relevant AS T2 ON T1.event_id = T2.event_id INNER JOIN app_labels AS T3 ON T3.app_id = T2.app_id INNER JOIN label_categories AS T4 ON T3.label_id = T4.label_id ORDER BY T1.timestamp LIMIT 2
talkingdata,What is the gender of the majority of Vivo phone users?,majority of Vivo phone users refers to MAX(COUNT(phone_brand = 'vivo'));,"SELECT T.gender FROM ( SELECT T2.gender, COUNT(T2.gender) AS num FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id WHERE T1.phone_brand = 'vivo' GROUP BY T2.gender ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,Which category has the highest number of users?,highest number of users refers to MAX(COUNT(app_id));,"SELECT T.category FROM ( SELECT T2.category, COUNT(T1.app_id) AS num FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T2.label_id = T1.label_id GROUP BY T1.app_id, T2.category ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,How many users belong to the MOBA category?,,SELECT COUNT(T2.app_id) FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T2.label_id = T1.label_id WHERE T1.category = 'MOBA'
talkingdata,What is the percentage of female OPPO users against the male OPPO users?,"percentage = DIVIDE(MULTIPLY(CONCAT(COUNT(device_id WHERE phone_brand = 'OPPO' AND gender = 'F'), 100), COUNT(device_id)), '%') AS 'the percentage of female OPPO users'; DIVIDE(MULTIPLY(CONCAT(COUNT(device_id WHERE phone_brand = 'OPPO' AND gender = 'M'), 100), COUNT(device_id)), '%') AS 'the percentage of male OPPO users';","SELECT SUM(IIF(T2.gender = 'F', 1, 0)) * 100 / COUNT(T2.device_id) AS perFemale , SUM(IIF(T2.gender = 'M', 1, 0)) * 100 / COUNT(T2.device_id) AS perMale FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id WHERE T1.phone_brand = 'OPPO'"
talkingdata,"What were the locations of the events on 8th May, 2016?","location = longitude, latitude; on 8th May, 2016 refers to `timestamp` LIKE '2016-05-08%';","SELECT longitude, latitude FROM `events` WHERE SUBSTR(`timestamp`, 1, 10) = '2016-05-08'"
talkingdata,List the app users IDs and installed status for the event ID of 844.,app user IDs refers to app_id; is_installed = 1 means the app status is installed; is_installed = 0 means the app status is not installed;,"SELECT app_id , IIF(is_installed = 1, 'YES', 'NO') AS status FROM app_events WHERE event_id = 844"
talkingdata,"How many events were there on 30th April, 2016?","on 30th April, 2016 refers to `timestamp` LIKE '2016-04-30%';","SELECT COUNT(event_id) FROM events WHERE SUBSTR(`timestamp`, 1, 10) = '2016-04-30'"
talkingdata,How many users used Vivo Xplay3S model?,Vivo Xplay3S model refers to phone_brand = 'vivo' AND device_model = 'Xplay3S';,SELECT COUNT(device_id) FROM phone_brand_device_model2 WHERE device_model = 'Xplay3S' AND phone_brand = 'vivo'
talkingdata,What is the ratio of male and female users in 27-28 age group?,"ratio = DIVIDE(COUNT(device_id WHERE gender = 'M' AND `group` = 'M27-28'), COUNT(device_id WHERE gender = 'F' AND `group` = 'F27-28')); 27-28 age group refers to `group` = 'F27-28';","SELECT SUM(IIF(gender = 'M' AND `group` = 'M27-28', 1, 0)) / SUM(IIF(gender = 'F' AND `group` = 'F27-28', 1, 0)) AS r FROM gender_age"
talkingdata,What are the labels' IDs of online shopping and online malls categories?,,"SELECT label_id FROM label_categories WHERE category IN ('online shopping', 'online malls')"
talkingdata,"Describe the phone brands and models of the users who participated in events on 5th May, 2016 at the coordinates of (112,44).","models refers to device_model; on 5th May, 2016 refers to timestamp LIKE '2016-05-05%'; coordinates of (112,44) refers to longitude = 112 AND latitude = 44;","SELECT DISTINCT T2.phone_brand, T2.device_model FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T2.device_id = T1.device_id WHERE T1.timestamp LIKE '2016-05-05%' AND T1.longitude = 112 AND T1.latitude = 44"
talkingdata,Provide the app users IDs and time for the event ID of 82.,app user IDs refers to app_id; time refers to timestamp;,"SELECT T1.app_id, T2.timestamp FROM app_events AS T1 INNER JOIN events AS T2 ON T2.event_id = T1.event_id WHERE T2.event_id = 82"
talkingdata,Describe the device user gender and age of the event ID of 15251.,,"SELECT T1.gender, T1.age FROM gender_age AS T1 INNER JOIN events AS T2 ON T2.device_id = T1.device_id WHERE T2.event_id = 15251"
talkingdata,"How many events did the 88-years-old male users participate on 4th May,2016?","88-years-old refers to age = 88; male refers to gender = 'M'; on 4th May, 2016 refers to timestamp LIKE '2016-05-04%';","SELECT COUNT(T2.event_id) FROM gender_age AS T1 INNER JOIN events AS T2 ON T2.device_id = T1.device_id WHERE T1.gender = 'M' AND SUBSTR(`timestamp`, 1, 10) = '2016-05-04' AND T1.age = 88"
talkingdata,"Describe the ages, genders and numbers of events participated by the users at coordinates of (-102,38).","coordinates of (-102,38) refers to longitude = -102, latitude = 38;","SELECT DISTINCT T1.age, T1.gender, COUNT(T2.event_id) FROM gender_age AS T1 INNER JOIN `events` AS T2 ON T2.device_id = T1.device_id WHERE T2.longitude = -102 AND T2.latitude = 38 GROUP BY T1.age, T1.gender, T2.longitude, T2.latitude"
talkingdata,"Provide the phone brands and models of the users who were at the coordinates of (80,44).","models refers to device_model; coordinates of (80,44) refers to longitude = 80 AND latitude = 44;","SELECT DISTINCT T1.phone_brand, T1.device_model FROM phone_brand_device_model2 AS T1 INNER JOIN events AS T2 ON T2.device_id = T1.device_id WHERE T2.longitude = 80 AND T2.latitude = 44"
talkingdata,List the included categories in the event ID of 155.,,SELECT DISTINCT T1.category FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T2.label_id = T1.label_id INNER JOIN app_events AS T3 ON T3.app_id = T2.app_id WHERE T3.event_id = 155
talkingdata,"Among HTC Butterfly phone users, list any five devices' IDs used by females.",HTC Butterfly refers to phone_brand = 'HTC' AND device_model = 'Butterfly'; females refers to gender = 'F';,SELECT T2.device_id FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id WHERE T1.device_model = 'Butterfly' AND T2.gender = 'F' AND T1.phone_brand = 'HTC' LIMIT 5
talkingdata,How many app IDs were included under science fiction category?,,SELECT COUNT(T2.app_id) FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T2.label_id = T1.label_id WHERE T1.category = 'science fiction'
talkingdata,What are the ages and genders of the LG L70 users?,LG L70 refers to phone_brand = 'LG' AND device_model = 'L70';,"SELECT T2.age, T2.gender FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id WHERE T1.phone_brand = 'LG' AND T1.device_model = 'L70'"
talkingdata,Calculate the percentage of the app user IDs under Industry tag category.,"percentage = DIVIDE(MULTIPLY(CONCAT(COUNT(app_id WHERE category = 'Industry tag'), 100), COUNT(app_id)),'%');","SELECT SUM(IIF(T1.category = 'Industry tag', 1, 0)) * 100 / COUNT(T2.app_id) AS per FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T2.label_id = T1.label_id"
talkingdata,"Among the LG brand users, calculate the percentage of the Nexus 5 model user. What is the ratio of male and female users of it?","LG brand refers to phone_brand = 'LG'; percentage = DIVIDE(MULTIPLY(CONCAT(COUNT(device_id WHERE device_model = 'Nexus 5'), 100), COUNT(device_id)),'%'); ratio = DIVIDE(COUNT(device_id WHERE device_model = 'Nexus 5' AND gender = 'M'), COUNT(device_id WHERE device_model = 'Nexus 5' AND gender = 'F')); Nexus 5 model refers to device_model = 'Nexus 5';","SELECT SUM(IIF(T1.device_model = 'Nexus 5', 1, 0)) * 100 / COUNT(T1.device_id) AS per , SUM(IIF(T1.device_model = 'Nexus 5' AND T2.gender = 'M', 1, 0)) / SUM(IIF(T1.device_model = 'Nexus 5' AND T2.gender = 'F', 1, 0)) AS r FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id WHERE T1.phone_brand = 'LG'"
talkingdata,How many users of the app were not active when event no.2 happened?,not active refers to is_active = 0; event no. refers to event_id; event_id = 2;,SELECT COUNT(event_id) FROM app_events WHERE event_id = 2 AND is_active = 0
talkingdata,How many events in total have happened on the devices in 2016?,in 2016 refers to `timestamp` LIKE '2016%';,"SELECT COUNT(event_id) FROM `events` WHERE SUBSTR(`timestamp`, 1, 4) = '2016'"
talkingdata,How many events have happened on device no.29182687948017100 in 2016?,device no. refers to device_id; device_id = 29182687948017100; in 2016 refers to `timestamp` LIKE '2016%';,"SELECT COUNT(event_id) FROM `events` WHERE SUBSTR(`timestamp`, 1, 4) = '2016' AND device_id = 29182687948017100"
talkingdata,How many device users are male?,male refers to gender = 'M';,SELECT COUNT(device_id) FROM gender_age WHERE gender = 'M'
talkingdata,What is the age of the oldest device user?,oldest device user refers to MAX(age);,SELECT MAX(age) FROM gender_age
talkingdata,"Among the female users of the devices, how many of them are under 30?",female refers to gender = 'F'; under 30 refers to age < 30;,SELECT COUNT(device_id) FROM gender_age WHERE age < 30 AND gender = 'F'
talkingdata,"Among the users who use a Galaxy Note 2, how many of them are female?",Galaxy Note 2 refers to device_model = 'Galaxy Note 2'; female refers to gender = 'F';,SELECT COUNT(T1.device_id) FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id WHERE T2.gender = 'F' AND T1.device_model = 'Galaxy Note 2'
talkingdata,Please list the ages of all the users who use a Galaxy Note 2.,Galaxy Note 2 refers to device_model = 'Galaxy Note 2';,SELECT T2.age FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id WHERE T1.device_model = 'Galaxy Note 2'
talkingdata,What is the device model of the device used by the oldest user?,oldest user refers to MAX(age);,SELECT device_model FROM phone_brand_device_model2 WHERE device_id IN ( SELECT device_id FROM gender_age WHERE age = ( SELECT MAX(age) FROM gender_age ) )
talkingdata,To which user group do most of the users who uses a vivo device belong?,user group where most of the users belong refers to MAX(COUNT(group)); vivo device refers to phone_brand = 'vivo';,"SELECT T.`group` FROM ( SELECT T2.`group`, COUNT(`group`) AS num FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id WHERE T1.phone_brand = 'vivo' GROUP BY T2.`group` ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,How many app users belong to the category of Securities?,,SELECT COUNT(T1.app_id) FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T2.label_id = T1.label_id WHERE T2.category = 'Securities'
talkingdata,To which categories does app user no.1977658975649780000 belong?,app no. refers to app_id; app_id = 1977658975649780000;,SELECT T1.category FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T2.app_id = 1977658975649780000
talkingdata,Please list the categories of the app users who are not active when event no.2 happened.,not active refers to is_active = 0; event no. refers to event_id; event_id = 2;,SELECT DISTINCT T1.category FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id INNER JOIN app_events AS T3 ON T2.app_id = T3.app_id WHERE T3.event_id = 2 AND T3.is_active = 0
talkingdata,Please list the location coordinates of all the devices with an inactive app user when event no.2 happened.,"location coordinates = longitude, latitude; inactive refers to is_active = 0; event no. refers to event_id; event_id = 2;","SELECT DISTINCT T2.longitude, T2.latitude FROM app_events AS T1 INNER JOIN events AS T2 ON T2.event_id = T1.event_id WHERE T2.event_id = 2 AND T1.is_active = 0"
talkingdata,"Among all the times event no.2 happened when the app user was not active, when was the earliest time this situation happened?",event no. refers to event_id; event_id = 2; not active refers to is_active = 0; earliest time refers to MIN(timestamp);,SELECT T2.timestamp FROM app_events AS T1 INNER JOIN events AS T2 ON T2.event_id = T1.event_id WHERE T1.is_active = 0 AND T2.event_id = 2 ORDER BY T2.timestamp LIMIT 1
talkingdata,Please list the IDs of the events happened on all the vivo devices.,IDs of the events refers to event_id; vivo devices refers to phone_brand = 'vivo';,SELECT T2.event_id FROM phone_brand_device_model2 AS T1 INNER JOIN events AS T2 ON T2.device_id = T1.device_id WHERE T1.phone_brand = 'vivo'
talkingdata,"Among the devices with event no.2 happening, how many of them are vivo devices?",event no. refers to event_id; event_id = 2; vivo devices refers to phone_brand = 'vivo';,SELECT COUNT(T1.device_id) FROM phone_brand_device_model2 AS T1 INNER JOIN events AS T2 ON T2.device_id = T1.device_id WHERE T1.phone_brand = 'vivo' AND T2.event_id = 2
talkingdata,Please list the time when event no.2 happened on a vivo device.,time refers to timestamp; event no. refers to event_id; event_id = '2'; vivo device refers to phone_brand = 'vivo';,SELECT T1.timestamp FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.event_id = T2.device_id WHERE T2.phone_brand = 'vivo' AND T1.event_id = '2'
talkingdata,How many events in total have happened on all the vivo devices in the year 2016?,vivo devices refers to phone_brand = 'vivo'; in the year 2016 refers to year(timestamp) = 2016;,"SELECT COUNT(T1.event_id) FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.event_id = T2.device_id WHERE STRFTIME('%Y', T1.timestamp) = '2016' AND T2.phone_brand = 'vivo'"
talkingdata,"Among the users who uses a vivo device, how many of them are female and under 30?",vivo device refers to phone_brand = 'vivo'; female refers to gender = 'F'; under 30 refers to age < 30;,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.gender = 'F' AND T2.phone_brand = 'vivo' AND T1.age < 30
talkingdata,What is the category that the most app users belong to?,most app users refers to MAX(COUNT(app_id));,"SELECT T.category FROM ( SELECT T1.category, COUNT(T2.app_id) AS num FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id GROUP BY T1.label_id ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,What is the brand of the device used by the youngest female user?,brand of the device refers to phone_brand; youngest refers to MIN(age); female refers to gender = 'F';,SELECT phone_brand FROM phone_brand_device_model2 WHERE device_id IN ( SELECT * FROM ( SELECT device_id FROM gender_age WHERE gender = 'F' ORDER BY age LIMIT 1 ) AS T )
talkingdata,How many users in user group M23-26 use a vivo device?,user group M23-26 refers to group = 'M23-26'; vivo device refers to phone_brand = 'vivo';,SELECT COUNT(T2.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.`group` = 'M23-26' AND T2.phone_brand = 'vivo'
talkingdata,"Among all the users who use a vivo device, what is the percentage of the users in the M23-26 user group?","vivo device refers to phone_brand = 'vivo'; percentage = MULTIPLY(DIVIDE(COUNT(phone_brand = 'vivo WHERE group = 'M23-26), COUNT(phone_brand = 'vivo)), 100); M23-26 user group refers to group = 'M23-26';","SELECT SUM(IIF(T1.`group` = 'M23-26', 1.0, 0)) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo'"
talkingdata,"Among all the devices with event no.2 happening, what is the percentage of the device being a vivo phone?","event no. refers to event_id; event_id = '2'; percentage = SUM(IF(phone_brand = 'vivo',1,0)), COUNT(device_id) WHERE event_id = '2'; vivo phone refers to phone_brand = 'vivo';","SELECT SUM(IIF(T2.phone_brand = 'vivo', 1, 0)) / COUNT(T1.device_id) AS per FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.event_id = T2.device_id WHERE T1.event_id = '2'"
talkingdata,What is the average age of all the vivo device users?,average age = AVG(age); vivo device refers to phone_brand = 'vivo';,SELECT AVG(age) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo'
talkingdata,How many female users belong to the age group of 27 to 28?,female refers to gender = 'F'; age group of 27 to 28 refers to `group` = 'F27-28';,SELECT COUNT(device_id) FROM gender_age WHERE `group` = 'F27-28' AND gender = 'F'
talkingdata,What is the age of the oldest male user of the app?,oldest user refers to MAX(age); male refers to gender = 'M';,SELECT MAX(age) FROM gender_age WHERE gender = 'M'
talkingdata,How many users installed the app but are not active?,installed refers to is_installed = 1; not active refers to is_active = 0;,SELECT COUNT(app_id) FROM app_events WHERE is_installed = 1 AND is_active = 0
talkingdata,What is the age of the youngest female user of the app?,youngest user refers to MIN(age); female refers to gender = 'F';,SELECT MIN(age) FROM gender_age WHERE gender = 'F'
talkingdata,How many models does the VIVO phone brand released?,models refers to device_model;,SELECT COUNT(device_id) FROM phone_brand_device_model2 WHERE phone_brand = 'vivo'
talkingdata,List at least 15 phone models released under the OPPO brand.,phone models refers to device_model; OPPO brand refers to phone_brand = 'OPPO';,SELECT device_model FROM phone_brand_device_model2 WHERE phone_brand = 'OPPO' LIMIT 15
talkingdata,List at least 10 device models that male users over the age of 39 usually use.,male refers to gender = 'M'; over the age of 39 refers to group = 'M39+';,SELECT T1.device_model FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T1.device_id = T2.device_id WHERE T2.`group` = 'M39+' AND T2.gender = 'M' LIMIT 10
talkingdata,List 5 device models that users use to install the app and are active in using the app.,install refers to is_installed = 1; active refers to is_active = 1;,SELECT T1.device_model FROM phone_brand_device_model2 AS T1 INNER JOIN events AS T2 ON T1.device_id = T2.event_id INNER JOIN app_events AS T3 ON T2.event_id = T3.event_id WHERE T3.is_active = 1 AND T3.is_installed = 1 LIMIT 5
talkingdata,"How many users belong to ""Financial Information"" category?",,SELECT COUNT(T1.app_id) FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id WHERE T2.category = 'Financial Information'
talkingdata,"How many users belong to ""game-Art Style"" category?",,SELECT COUNT(T1.app_id) FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id WHERE T2.category = 'game-Art Style'
talkingdata,Provide the total number of the male users that use OPPO as their phone brand.,male refers to gender = 'Male';,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'OPPO' AND T1.gender = 'M'
talkingdata,What is the brand of the youngest user's device?,brand of the device refers to phone_brand; youngest user refers to MIN(age);,SELECT device_model FROM phone_brand_device_model2 WHERE device_id IN ( SELECT device_id FROM gender_age WHERE age = ( SELECT MIN(age) FROM gender_age ) )
talkingdata,List at least 3 categories with the lowest number of users.,lowest number of users refers to MIN(COUNT(label_id));,SELECT T1.category FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id ORDER BY T2.label_id LIMIT 3
talkingdata,How many male users use the Galaxy Ace Plus model?,male refers to gender = 'M'; Galaxy Ace Plus refers to device_model = 'Galaxy Ace Plus';,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'Galaxy Ace Plus' AND T1.gender = 'M'
talkingdata,What is the age group of most OPPO users?,age group refers to group; most OPPO users refers to MAX(COUNT(phone_brand = 'OPPO')); OPPO users refers to phone_brand = 'OPPO';,"SELECT T.`group` FROM ( SELECT T1.`group`, COUNT(T1.`group`) AS num FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'OPPO' GROUP BY T1.`group` ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,List at least 5 device models that are commonly used by female users.,device models that are commonly used refers to MAX(COUNT(device_model)); female refers to gender = 'F';,"SELECT T.device_model FROM ( SELECT T2.device_model, COUNT(T2.device_model) AS num FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.gender = 'F' GROUP BY T2.device_model ) AS T ORDER BY T.num DESC LIMIT 5"
talkingdata,"Calculate the ratio in percentage between the average number of app users belonging to ""80s Japanese comic"" and ""90s Japanese comic"".","ratio in percentage = DIVIDE(SUM(IF(category = '80s Japanese comic',1,0)), COUNT(app_id)) as '80s'; DIVIDE(SUM(IF(category = '90s Japanese comic',1,0)), COUNT(app_id)) as '90s'; 80s Japanese comic refers to category = '80s Japanese comic'; 90s Japanese comic refers to category = '80s Japanese comic';","SELECT SUM(IIF(T1.category = '80s Japanese comic', 1, 0)) / COUNT(T1.label_id) AS J8 , SUM(IIF(T1.category = '90s Japanese comic', 1, 0)) / COUNT(T1.label_id) AS J9 FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id"
talkingdata,"Among the female users that uses OPPO as their phone brand, what is the percentage of them of the user that uses R815T model to install the app?","female refers to gender = 'F'; percentage = DIVIDE(SUM(IF(phone_brand = 'OPPO',1,0)), SUM(IF(device_id = 'R815T',1,0))); R815T refers to device_id = 'R815T';","SELECT SUM(IIF(T1.phone_brand = 'OPPO', 1, 0)) / SUM(IIF(T1.device_id = 'R815T', 1, 0)) AS num FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T1.device_id = T2.device_id WHERE T2.gender = 'F'"
talkingdata,"What is the phone brand of the device model ""坚果手机""?",,SELECT phone_brand FROM phone_brand_device_model2 WHERE device_model = '坚果手机'
talkingdata,"Give the number of device models for ""中兴"" phone brand.",,SELECT COUNT(device_id) FROM phone_brand_device_model2 WHERE device_model = '中兴'
talkingdata,Which group does age 24 belong to?,,SELECT `group` FROM gender_age WHERE age = '24'
talkingdata,Give the time stamp for event No.887711.,event no. refers to event_id; event_id = '887711';,SELECT timestamp FROM events WHERE event_id = '887711'
talkingdata,Provide the number of events that happened on 2016/5/6.,on 2016/5/6 refers to timestamp = '2016/5/6 XX:XX:XX';,"SELECT COUNT(event_id) FROM events WHERE SUBSTR(`timestamp`, 1, 10) = '2016-05-06'"
talkingdata,"For the event which happened at 23:55:16 on 2016/5/7, in the location coordinate(113, 28), on what device did it happen? Give the name of the device model.","at 23:55:16 on 2016/5/7 refers to timestamp = '2016/5/7 23:55:16'; location coordinate (113, 28) refers to longitude = '113' AND latitude = '28';",SELECT T1.device_model FROM phone_brand_device_model2 AS T1 INNER JOIN events AS T2 ON T1.device_id = T2.event_id WHERE T2.longitude = '113' AND T2.latitude = '28' AND T2.timestamp = '2016-05-07 23:55:16'
talkingdata,"Give the number of ""game-Fishing"" apps.",game-Fishing refers to category = 'game-Fishing';,SELECT COUNT(T2.app_id) FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T1.category = 'game-Fishing'
talkingdata,"State the number of the ""魅蓝Note 2"" users who are in the ""F29-32"" group.",魅蓝Note 2 refers to device_model = '魅蓝Note 2';,SELECT COUNT(T2.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.`group` = 'F29-32' AND T2.device_model = '魅蓝Note 2'
talkingdata,Give the number of 30-year-old users who were active in the events on 2016/5/2.,30-year-old refers to age = '30'; active refers to is_active = 1; on 2016/5/2 refers to timestamp = '2016/5/2 XX:XX:XX';,"SELECT COUNT(T3.device_id) FROM app_events AS T1 INNER JOIN events AS T2 ON T1.event_id = T2.event_id INNER JOIN gender_age AS T3 ON T2.device_id = T3.device_id WHERE SUBSTR(`timestamp`, 1, 10) = '2016-05-02' AND T1.is_active = 1 AND T3.age = '30'"
talkingdata,"For the event which happened at 23:33:34 on 2016/5/6, how many installed apps were involved?",at 23:33:34 on 2016/5/6 refers to timestamp = '2016/5/6 23:33:34'; installed refers to is_installed = '1';,"SELECT COUNT(T1.event_id) FROM app_events AS T1 INNER JOIN events AS T2 ON T1.event_id = T2.event_id WHERE SUBSTR(T2.`timestamp`, 1, 10) = '2016-05-06' AND T1.is_installed = '1'"
talkingdata,"Give the number of female users of ""E派"" brand devices.",female refers to gender = 'F'; E派 brand refers to phone_brand = 'E派';,SELECT COUNT(T2.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.gender = 'F' AND T2.phone_brand = 'E派'
talkingdata,"How many male users of the ""Galaxy S5"" device model?",male refers to gender = 'M';,SELECT COUNT(T1.device_id) FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T1.device_id = T2.device_id WHERE T1.device_model = 'Galaxy S5' AND T2.gender = 'M'
talkingdata,"How many users from the group ""F29-32"" who were active in the events on 2016/5/7?",active users refers to is_active = '1'; on 2016/5/7 refers to timestamp = '2016/5/7 XX:XX:XX';,"SELECT COUNT(T1.app_id) FROM app_events AS T1 INNER JOIN events AS T2 ON T1.event_id = T2.event_id INNER JOIN gender_age AS T3 ON T2.event_id = T3.device_id WHERE SUBSTR(T2.`timestamp`, 1, 10) = '2016-05-07' AND T1.is_active = '1' AND T3.`group` = 'F29-32'"
talkingdata,Which category does the app id No.894384172610331000 belong to?,,SELECT T1.category FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T2.app_id = '894384172610331000'
talkingdata,"For the event which happened at 14:09:49 on 2016/5/6, in the location coordinate(116, 40), how many apps were active?","at 14:09:49 on 2016/5/6 refers to timestamp = '2016/5/6 14:09:49'; location coordinate(116, 40) refers to longitude = '116' AND latitude = '40'; active refers to is_active = '1';",SELECT COUNT(T1.app_id) FROM app_events AS T1 INNER JOIN events AS T2 ON T1.event_id = T2.event_id WHERE T2.timestamp = '2016-05-06 14:09:49' AND T1.is_active = '1' AND T2.longitude = '116' AND T2.latitude = '40'
talkingdata,How many times is the number of active apps in the event that happened at 7:50:28 on 2016/5/2 than in the event that happened at 7:41:03 on 2016/5/2?,"how many times = DIVIDE(SUM(IF(timestamp = '2016/5/2 7:50:28', 1,0)), SUM(IF(timestamp = '2016/5/2 7:41:03',1,0))); active refers to is_active = '1'; at 7:50:28 on 2016/5/2 refers to timestamp = '2016/5/2 7:50:28'; at 7:41:03 on 2016/5/2 refers to timestamp = '2016/5/2 7:41:03';","SELECT SUM(IIF(timestamp = '2016-05-02 7:50:28', 1, 0)) / SUM(IIF(timestamp = '2016-05-02 7:41:03', 1, 0)) AS num FROM events AS T1 INNER JOIN app_events AS T2 ON T1.event_id = T2.event_id WHERE T2.is_active = '1'"
talkingdata,How many devices are of the brand vivo?,brand vivo refers to phone_brand = 'vivo';,SELECT COUNT(device_id) FROM phone_brand_device_model2 WHERE phone_brand = 'vivo'
talkingdata,How many more devices are there of the brand vivo than of the brand LG?,"how many more = SUBTRACT(SUM(IF(phone_brand = 'vivo',1,0)), SUM(IF(phone_brand = 'LG',1,0))); brand vivo refers to phone_brand = 'vivo'; brand LG refers to phone_brand = 'LG';","SELECT SUM(IIF(phone_brand = 'vivo', 1, 0)) - SUM(IIF(phone_brand = 'LG', 1, 0)) AS num FROM phone_brand_device_model2"
talkingdata,What is the ID of the device used by the youngest user?,ID of the device refers to device_id; youngest user refers to MIN(age);,SELECT device_id FROM gender_age WHERE age = ( SELECT MIN(age) FROM gender_age )
talkingdata,"Among the female users of the devices, how many of them are over 30?",female refers to gender = 'F'; over 30 refers to age > 30;,SELECT COUNT(device_id) FROM gender_age WHERE age > 30 AND gender = 'F'
talkingdata,Is the oldest device user male or female?,MAX(Age) AND gender = 'M' means that the oldest device user is male; MAX(Age) AND gender = 'F' means that the oldest device user is female;,SELECT gender FROM gender_age WHERE age = ( SELECT MAX(age) FROM gender_age )
talkingdata,What is the age of the youngest female device user?,youngest refers to MIN(age); female refers to gender = 'F';,SELECT MIN(age) FROM gender_age WHERE gender = 'F'
talkingdata,"Among all the users who use a vivo device, what is the age of the youngest user?",vivo device refers to phone_brand = 'vivo'; youngest refers to MIN(age);,SELECT T1.age FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo' ORDER BY T1.age LIMIT 1
talkingdata,Please list the app IDs of all the users in the Securities category.,,SELECT T2.app_id FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T1.category = 'Securities'
talkingdata,"For the device with an event occurring on 2016/5/1 at 0:55:25, what is the gender of its user?",on 2016/5/1 at 0:55:25 refers to timestamp = '2016-05-01 00:55:25';,SELECT T1.gender FROM gender_age AS T1 INNER JOIN events AS T2 ON T1.device_id = T2.device_id WHERE T2.timestamp = '2016-05-01 00:55:25'
talkingdata,"Among the devices with an event occurring in 2016, how many of them are owned by a user in the M23-26 user group?",in 2016 refers to year(timestamp) = 2016; M23-26 user group refers to `group` = 'M23-26';,"SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN events AS T2 ON T1.device_id = T2.device_id WHERE STRFTIME('%Y', T2.timestamp) = '2016' AND T1.`group` = 'M23-26'"
talkingdata,What is the brand of the device used by the most users in the M23-26 user group?,brand of the device refers to phone_brand; M23-26 user group refers to `group` = 'M23-26';,"SELECT T.phone_brand FROM ( SELECT T2.phone_brand, COUNT(T1.device_id) AS num FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.`group` = 'M23-26' GROUP BY T2.phone_brand ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,Please list the location coordinates of all the Galaxy Note 2 devices when an event happened.,"location coordinates = longitude, latitude; Galaxy Note 2 refers to device_model = 'Galaxy Note 2';","SELECT T1.longitude, T1.latitude FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'Galaxy Note 2'"
talkingdata,Please list all the models of the devices used by a female user.,models of the devices refers to device_model; female refers to gender = 'F';,SELECT T1.device_model FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T1.device_id = T2.device_id WHERE T2.gender = 'F'
talkingdata,What are the categories that app user ID7324884708820020000 belongs to?,app user ID refers to app_id; app_id = 7324884708820020000;,SELECT T1.category FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T2.app_id = 7324884708820020000
talkingdata,"Among the app users who were not active when event no.2 happened, how many of them belong to the category Property Industry 1.0?",not active refers to is_active = 0; event no. refers to event_id; event_id = 2;,SELECT COUNT(T2.app_id) FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id INNER JOIN app_events AS T3 ON T2.app_id = T3.app_id WHERE T3.is_active = 0 AND T1.category = 'Property Industry 1.0' AND T3.event_id = 2
talkingdata,How many categories in total do the app users who were not active when event no.2 happened belong to?,not active refers to is_active = 0; event no. refers to event_id; event_id = 2;,SELECT COUNT(*) FROM ( SELECT COUNT(DISTINCT T1.category) AS result FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id INNER JOIN app_events AS T3 ON T2.app_id = T3.app_id WHERE T3.event_id = 2 AND T3.is_active = 0 GROUP BY T1.category ) T
talkingdata,What is the device model used by the most female users over 30?,female users refers to gender = 'F'; most female users refers to MAX(COUNT(gender = 'F')); over 30 refers to age > 30;,"SELECT T.device_model FROM ( SELECT T2.device_model, COUNT(T2.device_model) AS num FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.age > 30 AND T1.gender = 'F' GROUP BY T2.device_model ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,"Please list the models of all the devices with an event under the location coordinates (121, 31).","models of the devices refers to device_model; location coordinates (121, 31) refers to longitude = 121 AND latitude = 31;",SELECT T2.device_model FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.longitude = 121 AND T1.latitude = 31
talkingdata,What are the top 3 categories with the most app users?,most app users refers to MAX(COUNT(app_id));,"SELECT T.category FROM ( SELECT T2.category, COUNT(T1.app_id) AS num FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id GROUP BY T2.category ) AS T ORDER BY T.num DESC LIMIT 3"
talkingdata,Please list the event IDs of the events that have happened on the device of the oldest user.,oldest user refers to MAX(age);,SELECT T2.event_id FROM gender_age AS T1 INNER JOIN events AS T2 ON T1.device_id = T2.device_id ORDER BY T1.age DESC LIMIT 1
talkingdata,How many events have happened on the device of the youngest female user?,youngest refers to MIN(age); female refers to gender = 'F';,"SELECT COUNT(T1.event_id) FROM events AS T1 INNER JOIN gender_age AS T2 ON T1.device_id = T2.device_id WHERE T2.gender = 'F' GROUP BY T1.event_id, T2.age ORDER BY T2.age LIMIT 1"
talkingdata,"Among the devices on which an event happened on 2016/5/1, how many of them are used by a male user?",on 2016/5/1 refers to timestamp = '2016-05-01'; male refers to gender = 'M';,SELECT COUNT(T1.device_id) FROM events AS T1 INNER JOIN gender_age AS T2 ON T1.device_id = T2.device_id WHERE T1.timestamp = '2016-05-01' AND T2.gender = 'M'
talkingdata,"Which category has more app users, Securities or Finance?","more app users refers to SUBTRACT(IF(SUM(category = 'Securities'), SUM(category = 'Finance')) > 0,'Securities','Finance') as more;","SELECT IIF(SUM(IIF(T2.category = 'Securities', 1, 0)) - SUM(IIF(T2.category = 'Finance', 1, 0)) > 0, 'Securities', 'Finance') AS diff FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id"
talkingdata,Please list the device models of all the devices used by a user in the M23-26 user group.,M23-26 user group refers to `group` = 'M23-26';,SELECT T2.device_model FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.`group` = 'M23-26'
talkingdata,What is the average age of the female users who uses a vivo device?,average age = AVG(age); female refers to gender = 'F'; vivo device refers to phone_brand = 'vivo';,SELECT AVG(T1.age) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo' AND T1.gender = 'F'
talkingdata,What is the ratio of female users to male users who uses a vivo device?,"ratio = DIVIDE(SUM(gender = 'M' WHERE phone_brand = 'vivo'), SUM(gender = 'F' WHERE phone_brand = 'vivo')); female refers to gender = 'F'; male refers to gender = 'M'; vivo device refers to phone_brand = 'vivo';","SELECT SUM(IIF(T1.gender = 'M', 1, 0)) / SUM(IIF(T1.gender = 'F', 1, 0)) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo'"
talkingdata,What is the ratio of the number of app users that belong to the Securities category to the number of app users that belong to the Finance category?,"ratio = DIVIDE(SUM(category = 'Securities'), SUM(category = 'Finance'));","SELECT SUM(IIF(T2.category = 'Securities', 1, 0)) / SUM(IIF(T2.category = 'Finance', 1, 0)) AS per FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id"
talkingdata,"What is the label ID of ""Third-party card management"" category?",,SELECT label_id FROM label_categories WHERE category = 'Third-party card management'
talkingdata,"What is the ratio of active and inactive app users of the event ID ""58""?","ratio = DIVIDE(SUM(is_active = 1), SUM(is_active = 0)); active refers to is_active = 1; inactive refers to is_active = 0;","SELECT SUM(IIF(is_active = 1, 1, 0)) / SUM(IIF(is_active = 0, 1, 0)) AS per FROM app_events WHERE event_id = 58"
talkingdata,"How many events did the device ID ""3915082290673130000"" join?",,SELECT COUNT(event_id) FROM events WHERE device_id = 3915082290673130000
talkingdata,Calculate the percentage of male users among all device users.,"percentage = DVIDE(SUM(gender = 'M'), COUNT(device_id)); male refers to gender = 'M';","SELECT SUM(IIF(gender = 'M', 1, 0)) / COUNT(device_id) AS per FROM gender_age"
talkingdata,"How many events were participated by the users at longitude of ""-156""?",,SELECT COUNT(event_id) FROM events WHERE longitude = -156
talkingdata,"How many app users belong to label ID of ""48""?",,SELECT COUNT(app_id) FROM app_labels WHERE label_id = 48
talkingdata,"How many category names start with the word ""game""?",category names refers to category; start with the word game refers to category like 'game%';,SELECT COUNT(label_id) FROM label_categories WHERE category LIKE 'game%'
talkingdata,"Provide the number of events participated by the device users at coordinates of (80,37).","coordinates of (80,37) refers to longitude = 80 and latitude = 37;",SELECT COUNT(event_id) FROM events WHERE longitude = 80 AND latitude = 37
talkingdata,"List down the labels' IDs and categories of the app ID ""5758400314709850000"".",,"SELECT T1.label_id, T2.category FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id WHERE T1.app_id = 5758400314709850000"
talkingdata,List down the app IDs under the category of game-Rowing .,,SELECT T2.app_id FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T1.category = 'game-Rowing'
talkingdata,What are the label IDs and app IDs of the Chinese Classical Mythology category?,,"SELECT T1.label_id, T2.app_id FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T1.category = 'Chinese Classical Mythology'"
talkingdata,"Describe the number of app IDs and location of the event ID ""79641"".","location = longitude, latitude;","SELECT COUNT(T1.app_id), T2.longitude, T2.latitude FROM app_events AS T1 INNER JOIN events AS T2 ON T1.event_id = T2.event_id WHERE T1.event_id = 79641 GROUP BY T2.longitude, T2.latitude"
talkingdata,"Provide the locations and times of the events of app ID ""8715964299802120000"".","locations = longitude, latitude; times of the events refers to timestamp;","SELECT T1.longitude, T1.latitude, T1.timestamp FROM events AS T1 INNER JOIN app_events AS T2 ON T1.event_id = T2.event_id WHERE T2.app_id = 8715964299802120000"
talkingdata,"How many OPPO users participated in events which were held around 12 AM on 1st May,2016?","OPPO refers to phone_brand = 'OPPO'; around 12 AM on 1st May, 2016 refers to timestamp is '2016-05-01'","SELECT COUNT(T1.device_id) FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'OPPO' AND STRFTIME('%Y-%m-%d', T1.`timestamp`) = '2016-05-01'"
talkingdata,What is the ratio of male and female users of vivo X5pro model?,"ratio = DIVIDE(SUM(gender = 'M' WHERE device_model = 'X5Pro'), SUM(gender = 'F' WHERE device_model = 'X5Pro')); male refers to gender = 'M'; female refers to gender = 'F'; vivo X5pro model refers to phone_brand = 'vivo' AND device_model = 'X5Pro';","SELECT SUM(IIF(T1.gender = 'M', 1, 0)) / SUM(IIF(T1.gender = 'F', 1, 0)) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo' AND T2.device_model = 'X5Pro'"
talkingdata,How many females use ZUK Z1 phones in the age group under 23?,females refers to gender = 'F'; ZUK Z1 refers to phone_brand = 'ZUK' AND device_model = 'Z1'; under 23 refers to `group` = 'F23-' ;,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.gender = 'F' AND T2.device_model = 'Z1' AND T1.`group` = 'F23-' AND T2.phone_brand = 'ZUK'
talkingdata,List the phone brands and models of the users under 10 years of age.,models refers to device_model; under 10 years of age refers to age < 10;,"SELECT T2.phone_brand, T2.device_model FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.age < 10"
talkingdata,"Among the HTC users, calculate the percentage of female users who are over 80.","HTC refers to phone_brand = 'HTC'; percentage = DIVIDE(SUM(gender = 'F' AND age > 80), COUNT(device_id)); female refers to gender = 'F'; over 80 refers to age > 80","SELECT SUM(IIF(T1.gender = 'F' AND T1.age > 80, 1, 0)) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'HTC'"
talkingdata,"Which phone brand and model was used for event ID ""6701""?",model refers to device_model;,"SELECT T2.phone_brand, T2.device_model FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.event_id = 6701"
talkingdata,"Between device ID of ""-9215352913819630000"" and ""-9222956879900150000"", mention the age and gender of device user who participated more events.",more events refers to MAX(COUNT(event_id));,"SELECT T.age, T.gender FROM ( SELECT T2.age, T2.gender, COUNT(T1.device_id) AS num FROM events AS T1 INNER JOIN gender_age AS T2 ON T1.device_id = T2.device_id WHERE T1.device_id BETWEEN -9215352913819630000 AND -9222956879900150000 GROUP BY T2.age, T2.gender ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,List out the time of the event id 12.,time refers to timestamp;,SELECT timestamp FROM events WHERE event_id = 12
talkingdata,How many active users are there in the event?,active refers to is_active = 1;,SELECT COUNT(app_id) FROM app_events WHERE is_active = 1
talkingdata,"How many devices belong to model ""A51""?",model refers to device_model; device_model = 'A51';,SELECT COUNT(device_id) FROM phone_brand_device_model2 WHERE device_model = 'A51'
talkingdata,"State the gender of users who use the device ""-9222956879900150000"".",device refers to device_id; device_id = -9222956879900150000;,SELECT gender FROM gender_age WHERE device_id = -9222956879900150000
talkingdata,How many labels belong to the game-card category?,labels refers to label_id;,SELECT COUNT(label_id) FROM label_categories WHERE category = 'game-card'
talkingdata,What is the age group of users who use phone brand of vivo?,age group refers to group;,SELECT T1.`group` FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo'
talkingdata,How many users who are under 30 years old use device model of Galaxy Note 2?,under 30 refers to age < 30;,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'Galaxy Note 2' AND T1.age < 30
talkingdata,"Among the users who use OPPO, calculate the percentage of those who are under 50 years old.","OPPO refers to phone_brand = 'OPPO'; percentage = MULTIPLY(DIVIDE(SUM(age < 50), COUNT(device_id)), 1.0); under 50 years old refers to age < 50;","SELECT SUM(IIF(T1.age < 50, 1, 0)) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'OPPO'"
talkingdata,What is the average age of the users who use model device of R7?,average age = AVG(age);,SELECT SUM(T1.age) / COUNT(T1.device_id) AS avg FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'R7'
talkingdata,What is the category of the label that represented the behavior category of app id 5902120154267990000?,label that represented the behavior category refers to label_id;,SELECT T1.category FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T2.app_id = 5902120154267990000
talkingdata,Mention the group of age of users who use phone brand of LG.,group of age refers to group;,SELECT T1.`group` FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'LG'
talkingdata,State the category of the label that represented the behavior category of app id 4955831798976240000.,label that represented the behavior category refers to label_id;,SELECT T1.category FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T2.app_id = 4955831798976240000
talkingdata,How many female users use device model of MI 3?,female refers to gender = 'F';,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.gender = 'F' AND T2.device_model = 'MI 3'
talkingdata,"Among the male users, how many users use device model of Desire 820?",male refers to gender = 'M';,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'Desire 820' AND T1.gender = 'M'
talkingdata,"Among the users who are above 20, how many users use device model of ELIFE E7 Mini?",above 20 refers to age > 20;,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'ELIFE E7 Mini' AND T1.age > 20
talkingdata,State the number of users who are under 50 and above 20 use device model of Galaxy Premier.,under 50 and above 20 refers to age BTWEEEN 20 AND 50;,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.age BETWEEN 20 AND 50 AND T2.device_model = 'Galaxy Premier'
talkingdata,Give the number of male users who use phone branded HTC.,male refers to gender = 'M';,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.gender = 'M' AND T2.phone_brand = 'HTC'
talkingdata,How many users who are between 20 and 60 use phone brand of TCL?,,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.age BETWEEN 20 AND 60 AND T2.phone_brand = 'TCL'
talkingdata,"Among the users who use SUGAR, calculate the percentage of those who are above 20 years old.","SUGAR refers to phone_brand = 'SUGAR'; percentage = MULTIPLY(DIVIDE(SUM(age > 20), COUNT(device_id)) 1.0); above 20 years old refers to age > 20;","SELECT SUM(IIF(T1.age > 20, 1, 0)) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'SUGAR'"
talkingdata,"Indicate the location of all the events that occurred on April 30, 2016.","location = longitude, latitude; on April 30, 2016 refers timestamp BETWEEN '2016-04-30 00:00:00' AND '2016-04-30 23:59:59';","SELECT longitude, latitude FROM events WHERE date(timestamp) = '2016-04-30'"
talkingdata,How many different models does the HTC brand have?,models refers to device_model; HTC brand refers to phone_brand = 'HTC';,SELECT COUNT(device_model) FROM phone_brand_device_model2 WHERE phone_brand = 'HTC'
talkingdata,Identify all installed and activated apps by their id.,installed refers to is_installed = 1; activated refers to is_active = 1; id refers to app_id;,SELECT app_id FROM app_events WHERE is_active = 1 AND is_installed = 1
talkingdata,How many apps are labeled 7?,labeled 7 refers to label_id = 7;,SELECT COUNT(app_id) FROM app_labels WHERE label_id = 7
talkingdata,Identify by their id all the devices that are used by women who are in the age range of 29 to 31 years.,id refers to device_id; women refers to gender = 'F'; age range of 29 to 31 years refers to age between 29 and 31;,SELECT device_id FROM gender_age_train WHERE age BETWEEN 29 AND 31 AND gender = 'F'
talkingdata,Identify by their id all the apps that belong to the game-stress reliever category.,id refers to device_id;,SELECT T2.app_id FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T1.category = 'game-stress reliever'
talkingdata,On what date were the most events logged on devices for 40-year-old male users?,date refers to timestamp; most events refers to MAX(COUNT(event_id)); 40-year-old  refers to age = 40; male refers to gender = 'M';,"SELECT T.timestamp FROM ( SELECT T2.timestamp, COUNT(T2.event_id) AS num FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id WHERE T1.gender = 'M' AND T1.age = 40 GROUP BY T2.timestamp ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,On which brand of phone are the most applications installed?,brand of phone refers to phone_brand; most applications are installed refers to MAX(COUNT(is_installed = 1));,"SELECT T.phone_brand FROM ( SELECT T1.phone_brand, COUNT(T4.is_active) AS num FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T1.device_id = T2.device_id INNER JOIN events_relevant AS T3 ON T2.device_id = T3.device_id INNER JOIN app_events_relevant AS T4 ON T3.event_id = T4.event_id WHERE T4.is_active = 1 GROUP BY T1.phone_brand ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,How many men under the age of 23 have apps installed but are not active on their devices?,men refers to gender = 'M'; under the age of 23 refers to age < 23; installed refers to is_installed = 1; not active refers to is_active = 0;,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id INNER JOIN app_events_relevant AS T3 ON T2.event_id = T3.event_id WHERE T1.gender = 'M' AND T3.is_active = 0 AND T1.age < 23
talkingdata,How many women have apps from the game-Finding fault category installed on their device?,women refers to gender = 'F'; installed refers to is_installed = 1;,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id INNER JOIN app_events_relevant AS T3 ON T2.event_id = T3.event_id WHERE T1.age < 23 AND T1.gender = 'F' AND T3.is_active = 0 AND T3.is_installed = 1
talkingdata,Which gender logged in the most to an event in the first 10 days of May 2016?,gender that logged in the most refers to MAX(COUNT(gender)); first 10 days of May 2016 refers to timestamp BETWEEN '2016-05-01 00:00:00' AND '2016-05-10 23:59:59';,"SELECT T.gender FROM ( SELECT T1.gender, COUNT(T1.device_id) AS num FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id WHERE date(T2.timestamp) BETWEEN '2016-05-01' AND '2016-05-10' GROUP BY T1.gender ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,What age group is the most using SM-T2558 model phones?,age group using SM-T2558 model phones the most refers to MAX(COUNT(group WHERE device_model = 'SM-T2558')); SM-T2558 model phones refers to device_model = 'SM-T2558';,"SELECT T.`group` FROM ( SELECT T1.`group`, COUNT(T1.device_id) AS num FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'SM-T2558' GROUP BY T1.`group` ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,How many people over the age of 50 do not have HTC One M8 Eye phones?,over the age of 50 refers to age > 50; do not have HTC One M8 Eye phones refers to phone_brand ! = 'HTC' AND device_model ! = 'One M8 Eye';,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.age > 50 AND T2.device_model != 'One M8 Eye' AND T2.phone_brand != 'HTC'
talkingdata,Locate all events on devices of women under 30 years old.,"locate = longitude, latitude; women refers to gender = 'F'; under 30 years old refers to age < 30;",SELECT T1.device_id FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id WHERE T1.gender = 'F' AND T1.age < 30
talkingdata,What percentage of women do not have applications installed on their mobile with respect to men?,"percentage = MULTIPLY(DIVIDE(SUM(gender = 'F'), SUM(gender = 'M')), 1.0); women refers to gender = 'F'; not installed refers to is_installed = 0; men refers to gender = 'M';","SELECT SUM(IIF(T1.gender = 'F', 1, 0)) / SUM(IIF(T1.gender = 'M', 1, 0)) AS per FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id INNER JOIN app_events_relevant AS T3 ON T2.event_id = T3.event_id WHERE T3.is_installed = 0"
talkingdata,Calculate the average age of people who have apps installed but are not active on their devices.,average age = AVG(age); installed refers to is_installed = 1; not active refers to is_active = 0;,SELECT AVG(T1.age) FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id INNER JOIN app_events_relevant AS T3 ON T2.event_id = T3.event_id WHERE T3.is_installed = 1 AND T3.is_active = 0
talkingdata,Please list any three events that happened on the 1st of May 2016 that have the same latitude of 31.,on the 1st of May 2016 refers to timestamp like '2016-05-01%';,SELECT event_id FROM events WHERE timestamp LIKE '2016-05-01%' AND latitude = 31 LIMIT 3
talkingdata,Please list any three events that have the longitude and latitude of 0.,,SELECT event_id FROM events WHERE longitude = 0 AND latitude = 0 LIMIT 3
talkingdata,What is the difference between the events of device number -9222956879900150000 that can be located and those that are unable to be located?,"difference = SUBTRACT(SUM(latitude! = 0 and longitude! = 0), SUM(latitude = 0 and longitude = 0)); device number refers to device_id; device_id = -922956879900150000; can be location refers to latitude ! = 0 and longitude ! = 0; unable to be location refers to latitude = 0 and longitude = 0;","SELECT SUM(IIF(latitude != 0 AND longitude != 0, 1, 0)) - SUM(IIF(latitude = 0 AND longitude = 0, 1, 0)) AS diff FROM events WHERE device_id = '-922956879900150000'"
talkingdata,Please list any three devices that are owned by female users.,female refers to gender = 'F';,SELECT device_id FROM gender_age WHERE gender = 'F' LIMIT 3
talkingdata,"Please list any five app categories that are related to games, along with their label ID.",app categories refers to category; related to games refers to category like '%game%';,"SELECT category, label_id FROM label_categories WHERE category LIKE '%game%' LIMIT 5"
talkingdata,Please list any three OPPO device models.,OPPO refers to phone_brand = 'OPPO';,SELECT device_model FROM phone_brand_device_model2 WHERE phone_brand = 'OPPO' LIMIT 3
talkingdata,What is the percentage of users who experienced event number 6 who have the app installed but do not use the app?,"percentage = MULTIPLY(DIVIDE(SUM(is_installed = 1 and is_active = 0), COUNT(app_id)), 1.0); event number refers to event_id = 6; installed refers to is_installed = 1; do not use refers to is_active = 0;","SELECT SUM(IIF(is_installed = 1 AND is_active = 0, 1, 0)) / COUNT(app_id) AS perrcent FROM app_events WHERE event_id = 6"
talkingdata,Which gender owned more of the Galaxy Note 2 device model?,"gender that owned more = SUBTRACT(IF(SUM(gender = 'M'), SUM(gender = 'F'),'M','F'));","SELECT IIF(SUM(IIF(T1.gender = 'M', 1, 0)) - SUM(IIF(T1.gender = 'F', 1, 0)) > 0, 'M', 'F') AS gender FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'Galaxy Note 2'"
talkingdata,When did event number 2 happen and how many users were active?,event number refers to event_id; event_id = 2; active refers to is_active = 1;,SELECT COUNT(T1.app_id) AS num FROM app_events AS T1 INNER JOIN events AS T2 ON T1.event_id = T2.event_id WHERE T1.event_id = 2 AND T1.is_active = 1 GROUP BY T2.timestamp
talkingdata,Which behavior category does user number 5902120154267990000 belong to?,behavior category refers to category; number refers to app_id; app_id = 5902120154267990000;,SELECT T1.category FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T2.app_id = 5902120154267990000
talkingdata,How many users belong to the same behavior category as comics?,behavior category refers to category; category = 'comics';,SELECT COUNT(T2.app_id) FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T1.category = 'comics'
talkingdata,What is the age and gender of the person who uses the device number 29182687948017100 on event number 1?,device number refers to device_id; device_id = 29182687948017100; event number refers to event_id; and event_id = 1;,"SELECT T1.age, T1.gender FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id WHERE T1.device_id = 29182687948017100 AND T2.event_id = 1"
talkingdata,How many male users have the log of events at the same longitude of 114?,male refers to gender = 'M';,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id WHERE T2.longitude = 114 AND T1.gender = 'M'
talkingdata,When did event number 7 happen for user number -8022267440849930000?,event number refers to event_id; event_id = 7; user number refers to app_id; app_id = -8022267440849930000;,SELECT T1.timestamp FROM events_relevant AS T1 INNER JOIN app_events AS T2 ON T1.event_id = T2.event_id WHERE T2.app_id = -8022267440849930000 AND T1.event_id = 7
talkingdata,What are the behavior categories that user number -9222198347540750000 belongs to?,behavior categories refers to category; user number refers to app_id; app_id = -9222198347540750000;,SELECT T3.category FROM app_all AS T1 INNER JOIN app_labels AS T2 ON T1.app_id = T2.app_id INNER JOIN label_categories AS T3 ON T2.label_id = T3.label_id WHERE T1.app_id = -9222198347540750000
talkingdata,Please provide the age group of any LG Nexus 4 device users.,age group refers to `group`; LG Nexus 4 refers to phone_brand = 'LG' AND device_model = 'Nexus 4';,SELECT T1.`group` FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'LG' AND T2.device_model = 'Nexus 4'
talkingdata,Please provide the gender of at least one user who owns an HTC Desire 826 device.,HTC Desire 826 refers to phone_brand = 'HTC' AND device_model = 'Desire 826';,SELECT T1.gender FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'Desire 826' AND T2.phone_brand = 'HTC'
talkingdata,"What is the percentage of users who are in the same behavior category as ""Academic Information""?","percentage = MULTIPLY(DIVIDE(SUM(category = 'Academic Information'), COUNT(app_id)), 1.0); behavior category refers to category; category = 'Academic Information';","SELECT SUM(IIF(T1.category = 'Academic Information', 1.0, 0)) / COUNT(T2.app_id) AS per FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id"
talkingdata,What is the percentage of device users in the F27-28 age group who experienced an event on the 3rd of May 2016?,"percentage = MULTIPLY(DIVIDE(SUM(`group` = 'F27-28'), COUNT(device_id)), 1.0); on the 3rd of May 2016 refers to timestamp = '2016-05-03%';","SELECT SUM(IIF(T1.`group` = 'F27-28', 1, 0)) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id WHERE SUBSTR(T2.timestamp, 1, 10) = '2016-05-03'"
talkingdata,How many OPPO devices are there?,OPPO devices refers to phone_brand = 'OPPO';,SELECT COUNT(device_id) FROM phone_brand_device_model2 WHERE phone_brand = 'OPPO'
talkingdata,What is the most common age group among all device users?,most common age group refers to MAX(COUNT(`group`));,"SELECT T.num FROM ( SELECT `group`, COUNT(`group`) AS num FROM gender_age GROUP BY `group` ) T"
talkingdata,"How many events does the device ""4069764298338760000"" have?",,SELECT COUNT(event_id) FROM events WHERE device_id = 4069764298338760000
talkingdata,"How many of the apps belong in the ""Equity Fund"" category?",,SELECT COUNT(T1.app_id) FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id WHERE T2.category = 'Equity Fund'
talkingdata,List all females aged 24 to 26 devices' locations.,females refers to gender = 'F'; aged 24 to 26 refers to `group` = 'F24-26';,"SELECT T2.longitude, T2.latitude FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id WHERE T1.`group` = 'F24-26' AND T1.gender = 'F'"
talkingdata,How many male users have a Galaxy Note 3?,male refers to gender = 'M'; Galaxy Note 3 refers to device_model = 'Galaxy Note 3';,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'Galaxy Note 3' AND T1.gender = 'M'
talkingdata,List all the devices' brands and models of events on 5/7/2016 at 6:03:22 AM.,devices' brands refers to phone_brand; models refers to device_model; on 5/7/2016 at 6:03:22 AM refers to timestamp = '2016-05-07 06:03:22';,"SELECT T1.phone_brand, T1.device_model FROM phone_brand_device_model2 AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id WHERE T2.timestamp = '2016-05-07 06:03:22'"
talkingdata,Which brand is most common among people in their twenties?,brand refers to phone_brand; brand that is most common refers to MAX(COUNT(phone_brand)); twenties refers to age BETWEEN 20 AND 30;,"SELECT T.phone_brand FROM ( SELECT T2.phone_brand, COUNT(T2.phone_brand) AS num FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.age BETWEEN 20 AND 30 GROUP BY T2.phone_brand ) AS T ORDER BY T.num DESC LIMIT 1"
talkingdata,What percentage of vivo devices belong to users with no information?,"percentage = MULTIPLY(DIVIDE(SUM(gender = NULL and age = NULL and `group` = NULL), COUNT(device_id)), 1.0); vivo devices refers to phone_brand = 'vivo'; no information refers to gender = NULL AND age = NULL AND `group` = NULL;","SELECT SUM(IIF(T1.gender IS NULL AND T1.age IS NULL AND T1.`group` IS NULL, 1, 0)) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo'"
law_episode,"Please list all the keywords of the episode ""Refuge: Part 1"".","episode ""Refuge: Part 1"" refers to title = 'Refuge: Part 1'",SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Refuge: Part 1'
law_episode,"How many keywords are there for season 9, episode 23 of law_and_order?",,SELECT COUNT(T2.keyword) FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.season = 9 AND T1.episode = 23
law_episode,"What is the title of the episode with the keyword ""laundering money""?","keyword ""laundering money"" refers to keyword = 'laundering money'",SELECT T1.title FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T2.keyword = 'laundering money'
law_episode,Please list all the keywords for the episodes with a rating of over 8.,a rating of over 8 refers to rating > 8,SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.rating > 8
law_episode,"How many 10-star votes were given to the episode titled ""Cherished""?","10-star vote refers to stars = 10; titled ""Cherished"" refers to title = 'Cherished'",SELECT T2.votes FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Cherished' AND T2.stars = 10
law_episode,"How many votes did the episode titled ""Cherished"" get in total?","titled ""Cherished"" refers to title = 'Cherished'",SELECT SUM(T2.votes) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Cherished'
law_episode,What is the title of the episode that got the most 10-star votes?,the most refers to max(votes); 10-star refers to stars = 10,SELECT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T2.stars = 10 ORDER BY T2.votes DESC LIMIT 1
law_episode,"Park Dietz was credited in which role in the episode titled ""Cherished""?","credited refers to credited = 'true'; titled ""Cherished"" refers to title = 'Cherished'",SELECT T2.role FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T1.title = 'Cherished' AND T3.name = 'Park Dietz' AND T2.credited = 'true'
law_episode,"How many people had filled a role in the episode titled ""Cherished"", but did not show up in the on-screen credits?","titled ""Cherished"" refers to title = 'Cherished'; did not show up in the on-screen credits refers to credited = ''",SELECT COUNT(T1.episode_id) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Cherished' AND T2.credited = 'false'
law_episode,"Who was credited as ""technical advisor"" in the episode titled ""Cherished""?","who refers to name; credited refers to credited = 'true'; as ""technical advisor"" refers to role = 'technical advisor'; titled ""Cherished"" refers to title = 'Cherished'",SELECT T3.name FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T1.title = 'Cherished' AND T2.credited = 'true' AND T2.role = 'technical advisor'
law_episode,For how many times was Park Dietz credited?,credited refers to credited = 'true',SELECT COUNT(T3.person_id) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T2.credited = 'true' AND T3.name = 'Park Dietz'
law_episode,Please list the titles of all the episodes in which Park Dietz was credited.,credited refers to credited = 'true',SELECT T1.title FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T2.credited = 'true' AND T3.name = 'Park Dietz'
law_episode,Was Anthony Azzara's role in episode tt0629204 displayed in the credits at the end of the episode?,episode tt0629204 refers to episode_id = 'tt0629204'; credited refers to credited = 'true'; not credited refers to credited = '',SELECT T1.credited FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T2.name = 'Anthony Azzara' AND T1.episode_id = 'tt0629204'
law_episode,How many keywords are there in the episode Disciple?,episode Disciple refers to title = 'Disciple',SELECT COUNT(T2.keyword) FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Disciple'
law_episode,Which episode got the most 1 star votes? Give its title.,the most refers to max(votes); 1 star refers to stars = '1',SELECT T2.title FROM Vote AS T1 INNER JOIN Episode AS T2 ON T2.episode_id = T1.episode_id WHERE T1.stars = 1 ORDER BY T1.votes DESC LIMIT 1
law_episode,"How many nominations did Law and Order season 9, episode 20 get?",Law and Order refers to series = 'Law and Order',SELECT COUNT(T2.award_id) FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE T2.series = 'Law and Order' AND T1.season = 9 AND T1.episode = 20
law_episode,"For season 9, episode 17 of the show Law and Order, how many roles have been included in the credit?",Law and Order refers to series = 'Law and Order'; included in the credit refers to credited = 'true',SELECT COUNT(T2.role) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.series = 'Law and Order' AND T1.season = 9 AND T1.episode = 17 AND T2.credited = 'true'
law_episode,Describe what happened in the episode of award no.296.,description of what happened refers to summary; award no.296 refers to award_id = '296',SELECT T1.summary FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE T2.award_id = 296
law_episode,Which role did Joseph Blair play in the show?,,SELECT T1.role FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T2.name = 'Joseph Blair'
law_episode,How many awards has Rene Balcer been nominated for?,,SELECT COUNT(T2.award_id) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T1.name = 'Rene Balcer'
law_episode,"For the episode with the most votes, give its air date.",the most votes refers to max(votes),SELECT T2.air_date FROM Vote AS T1 INNER JOIN Episode AS T2 ON T2.episode_id = T1.episode_id GROUP BY T2.episode_id ORDER BY SUM(T1.votes) DESC LIMIT 1
law_episode,Who was nominated for award no.313? Give the full name.,award no.313 refers to award_id = '313'; full name refers to name,SELECT T1.name FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.award_id = 313
law_episode,How many episodes did J.K. Simmons' role appear on the show?,,SELECT COUNT(T1.role) FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T2.name = 'J.K. Simmons'
law_episode,Display the number of 9-star votes the episode Sideshow received.,9-star vote refers to stars = '9'; episode Sideshow refers to title = 'Sideshow',SELECT T2.votes FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T2.stars = 9 AND T1.title = 'Sideshow'
law_episode,"How many times is the number of keywords in ""Refuge: Part 1"" episode than ""Shield"" episode?","""Refuge: Part 1"" episode refers to title = 'Refuge: Part 1'; ""Shield"" episode refers to title = 'Shield'; times = divide(count(keyword where title = 'Refuge: Part 1'), count(keyword where title = 'Shield'))",SELECT CAST(SUM(CASE WHEN T1.title = 'Refuge: Part 1' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.title = 'Shield' THEN 1 ELSE 0 END) FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id
law_episode,Calculate the average number of cast members that appeared in the credit from the 185th to the 193rd episode.,"appeared in the credit refers to credited = 'TRUE'; from the 185th to the 193rd episode refers to number_in_series between 185 and 193; cast refers to category = 'Cast'; average number = divide(count(episode_id), 9)",SELECT CAST(COUNT(T1.episode_id) AS REAL) / (193 - 185 + 1) FROM Credit AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.category = 'Cast' AND T1.credited = 'true' AND T2.number_in_series BETWEEN 185 AND 193
law_episode,What are the names of the person that were not credited at the end of episode tt0629391?,not credited refers to credited = ''; episode tt0629391 refers to episode_id = 'tt0629391',SELECT T2.name FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T1.credited = 'false' AND T1.episode_id = 'tt0629391'
law_episode,How many people have won at least 3 awards?,won refers to result = 'Winner'; at least 3 awards refers to count(result) > 3,SELECT COUNT(T1.person_id) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.result = 'Winner' GROUP BY T1.person_id HAVING COUNT(T2.award_id) >= 3
law_episode,Who is the script supervisor of the series in episode tt0629204?,who refers to name; script supervisor refers to role = 'script supervisor'; episode tt0629204 refers to episode_id = 'tt0629204',SELECT T2.name FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T1.episode_id = 'tt0629204' AND T1.role = 'script supervisor'
law_episode,How many awards has Julia Roberts been nominated for?,been nominated refers to result = 'Nominee',SELECT COUNT(T2.award_id) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T1.name = 'Julia Roberts' AND T2.result = 'Nominee'
law_episode,Who is the tallest camera operator?,who refers to name; the tallest refers to max(height_meters); camera operator refers to role = 'camera operator',SELECT T2.name FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T1.role = 'camera operator' ORDER BY T2.height_meters DESC LIMIT 1
law_episode,"How many people, who were born in Canada, won an award in 1999?",born in Canada refers to birth_country = 'Canada'; in 1999 refers to year = 1999,SELECT COUNT(T1.person_id) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.year = 1999 AND T1.birth_country = 'Canada'
law_episode,How many people gave the most enjoyed episode a 10-star rating?,the most enjoyed refers max(rating); 10-star refers to stars = 10,SELECT COUNT(T1.episode_id) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T2.stars = 10
law_episode,"What are the keywords of the ""Shield"" episode?","""Shield"" episode refers to title = 'Shield'",SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Shield'
law_episode,"What is the percentage of people who gave the ""True North"" episode a 1-star rating?","the ""True North"" episode refers to title = 'True North'; 1-star refers to stars = 1; percentage = divide(count(episode_id where stars = 1), count(episode_id)) * 100% where title = 'True North'",SELECT CAST(SUM(CASE WHEN T2.stars = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.episode_id) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'True North' AND T1.episode_id = 'tt0629477'
law_episode,What is the title of the episode with the highest number of keywords?,the highest number of keywords refers to max(count(keyword)),SELECT T1.title FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id GROUP BY T1.episode_id ORDER BY COUNT(T2.keyword) DESC LIMIT 1
law_episode,"Among the episodes that were aired in 1998, how many won an International Monitor Awards?",aired in 1998 refers to air_date like '1998%'; won refers to result = 'Winner'; International Monitor Awards refers to organization = 'International Monitor Awards',"SELECT COUNT(T1.episode_id) FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE strftime('%Y', T1.air_date) = '1998' AND T2.organization = 'International Monitor Awards' AND T2.result = 'Winner'"
law_episode,"How many times did the episode titled ""Agony"" win an award?","titled ""Agony"" refers to title = 'Agony'; win an award refers to result = 'Winner'",SELECT COUNT(T2.award_id) FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Agony' AND T2.result = 'Winner'
law_episode,How many episodes are there in the 9th season of Law and Order? Calculate the average number of casts per season of the said series.,"the 9th season refers to season = 9; Law and Order refers to series = 'Law and Order'; cast refers to category = 'Cast'; average number of casts per season = divide(count(person_id), count(episode_id))","SELECT SUM(CASE WHEN T2.season = 9 THEN 1 ELSE 0 END) AS num , CAST(SUM(CASE WHEN T2.season = 9 THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.episode_id) FROM Credit AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.category = 'Cast' AND T2.series = 'Law and Order'"
law_episode,What are the keywords of the episode which received the 2nd-highest number of votes?,the 2nd-highest number of votes refers to second max(votes),SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.votes NOT IN ( SELECT MAX(T1.votes) FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id ) ORDER BY T1.votes DESC LIMIT 1
law_episode,"How many awards did the ""Agony"" win?","the ""Agony"" refers to title = 'Agony'; win refers to result = 'Winner'",SELECT COUNT(T2.award) FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Agony' AND T2.result = 'Winner'
law_episode,"Who is the narrator of the ""Flight"" episode?","who refers to name; narrator refers to role = 'Narrator'; the ""Flight"" episode refers to title = 'Flight'",SELECT T3.name FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T1.title = 'Flight' AND T2.role = 'Narrator'
law_episode,In which organization did Constantine Makris win the most awards?,win refers to result = 'Winner'; the most awards refers to max(count(award_id)),SELECT T2.organization FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T1.name = 'Constantine Makris' AND T2.result = 'Winner' GROUP BY T2.organization ORDER BY COUNT(T2.award_id) DESC LIMIT 1
law_episode,Who is the stunt coordinator in episode 3?,who refers to name; stunt coordinator refers to role = 'stunt coordinator',SELECT T3.name FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T1.episode = 3 AND T2.role = 'stunt coordinator'
law_episode,"How many people were not credited at the end of the ""Admissions"" episode?","not credited refers to credited = ''; the ""Admissions"" episode refers to title = 'Admissions'",SELECT COUNT(T2.person_id) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Admissions' AND T2.credited = 'false'
law_episode,What is the title of the episode that has the highest number of crews in the Art Department?,the highest number of crews refers to max(count(person_id)); in the Art Department refers to category = 'Art Department',SELECT T2.title FROM Credit AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.category = 'Art Department' GROUP BY T2.episode_id ORDER BY COUNT(T1.category) DESC LIMIT 1
law_episode,How many roles did Julia Roberts play in the series?,,SELECT COUNT(T1.role) FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T2.name = 'Julia Roberts'
law_episode,What are the titles of the top 3 episodes that received no less than 30 votes in its 10-star rating?,no less than 30 votes refers to votes > = 30; 10-star rating refers to stars = 10,SELECT T2.title FROM Vote AS T1 INNER JOIN Episode AS T2 ON T2.episode_id = T1.episode_id WHERE T1.votes >= 30 AND T1.stars = 10 ORDER BY T1.votes DESC LIMIT 3
law_episode,"Who is the youngest person to ever play a ""clerk"" role in the series?","who refers to name; the youngest person refers to max(birthdate); a ""clerk"" role refers to role = 'Clerk'",SELECT T2.name FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T1.role = 'Clerk' AND T2.birthdate IS NOT NULL ORDER BY T2.birthdate LIMIT 1
law_episode,How many people did not enjoy the finale episode?,did not enjoy refers to stars = 1; the finale episode refers to episode = 24,SELECT COUNT(T1.episode_id) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T1.episode = 24 AND T2.stars = 1
law_episode,List the names of all the cast members in the series.,cast member refers to category = 'Cast',SELECT T2.name FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T1.category = 'Cast'
law_episode,Who is the person who appeared the most in the series? Calculate in percentage how many times he or she appeared.,"who refers to name; appear the most refers to max(count(person_id)); percentage = divide(count(person_id where max(count(person_id))), count(person_id)) * 100%","SELECT T2.person_id, CAST(COUNT(T2.person_id) AS REAL) * 100 / ( SELECT COUNT(T2.person_id) AS num FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id ) AS per FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id GROUP BY T2.person_id ORDER BY COUNT(T2.person_id) DESC LIMIT 1"
law_episode,Which episodes of the Law & Order have been nominated for the Primetime Emmy Awards?,episode refers to award; the Primetime Emmy Awards refers to award_category like 'Primetime Emmy',SELECT DISTINCT episode_id FROM Award WHERE award_category = 'Primetime Emmy'
law_episode,How many episodes have not won any Law & Order series awards?,have not won any award refers to Result = 'Nominee',SELECT COUNT(award_id) FROM Award WHERE Result = 'Nominee'
law_episode,What roles have not been credited at the end of the episodes?,have not been credited refers to credited = '',SELECT DISTINCT role FROM Credit WHERE credited = 'false'
law_episode,What is the title of the 3 worst rated episodes?,worst rated refers to min(rating),SELECT title FROM Episode ORDER BY rating LIMIT 3
law_episode,What is the full place of birth of Rene Chenevert Balcer?,"full place of birth refers to birth_place, birth_region; Rene Chenevert Balcer refers to birth_name = 'Rene Chenevert Balcer'","SELECT birth_place, birth_region FROM Person WHERE birth_name = 'Rene Chenevert Balcer'"
law_episode,What is the name of the actors born in the USA?,born in the USA refers to birth_country = 'USA',SELECT name FROM Person WHERE birth_country = 'USA'
law_episode,What is the title of the episodes that were least enjoyed?,least enjoyed refers to stars = 1,SELECT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T2.stars = 1
law_episode,What are the names of the two people who won an award for their role as directors?,won an award refers to result = 'Winner'; role as director refers to role = 'director',SELECT T1.name FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.Result = 'Winner' AND T2.role = 'director'
law_episode,How many votes did the episode titled Juvenile get?,the episode titled Juvenile refers to title = 'Juvenile',SELECT SUM(T2.votes) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Juvenile'
law_episode,In which episodes was Anthony Azzara not credited?,which episode refers to title; not credited refers to credited = '',SELECT T1.title FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T2.credited = 'false' AND T3.name = 'Anthony Azzara'
law_episode,In what year did the episodes titled DWB get an award?,titled DWB refers to title = 'DWB'; get an award refers to result = 'Winner',SELECT DISTINCT T1.year FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T2.title = 'DWB' AND T1.result = 'Winner'
law_episode,In which region were the assistant location managers born?,region refers to birth_region; assistant location manager refers to role = 'assistant location manager',SELECT T2.birth_region FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T1.role = 'president of NBC West Coast'
law_episode,How many stars did the episodes in which Donna Villella worked?,,SELECT COUNT(T3.person_id) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T3.name = 'Donna Villella'
law_episode,What role was Julia Roberts nominated for?,nominated refers to result = 'Nominee',SELECT T2.role FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.Result = 'Nominee' AND T1.name = 'Julia Roberts'
law_episode,What role does the tallest person play?,the tallest refers to max(height_meters),SELECT T2.role FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.person_id = T2.person_id INNER JOIN Award AS T3 ON T2.episode_id = T3.episode_id ORDER BY T1.height_meters DESC LIMIT 1
law_episode,What is the title of the episode with the most nominations?,the most nominations refers to max(count(episode_id where result = 'Nominee')),SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.result = 'Nominee' GROUP BY T2.episode_id ORDER BY COUNT(T1.result) DESC LIMIT 1
law_episode,What was the rating of the episodes that Jace Alexander worked on?,,SELECT T1.rating FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T3.name = 'Jace Alexander'
law_episode,What are the names of all the people who worked on episode 19 of season 9?,,SELECT T3.name FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T1.episode = 19 AND T1.season = 9
law_episode,What is the average star rating of the episodes Jim Bracchitta has worked on?,"average star rating = divide(sum(stars), count(episode_id)) where name = 'Jim Bracchitta'",SELECT CAST(SUM(T3.stars) AS REAL) / COUNT(T2.episode_id) FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.person_id = T2.person_id INNER JOIN Vote AS T3 ON T2.episode_id = T3.episode_id WHERE T3.stars = 1 AND T1.name = 'Jim Bracchitta'
law_episode,What percentage of people have worked on the True North episode as additional crew?,"the True North episode refers to title = 'True North'; additional crew refers to role = 'Additional Crew'; percentage = divide(count(episode_id where role = 'Additional Crew'), count(episode_id)) * 100% where title = 'True North'",SELECT CAST(SUM(CASE WHEN T2.role = 'Additional Crew' THEN 1 ELSE 0 END) AS REAL ) * 100 / COUNT(T1.episode_id) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'True North'
law_episode,"Write down the title, summary, and air date of the episode that garnered 72 10-star votes.",72 10-star votes refers to stars = 10 and votes = 72,"SELECT T2.title, T2.summary, T2.air_date FROM Vote AS T1 INNER JOIN Episode AS T2 ON T2.episode_id = T1.episode_id WHERE T1.stars = 10 AND T1.votes = 72"
law_episode,How many 6-star votes did episode 12 get? Please include the air date and rating.,6-star vote refers to stars = 6,"SELECT T2.air_date, T2.rating FROM Vote AS T1 INNER JOIN Episode AS T2 ON T2.episode_id = T1.episode_id WHERE T1.stars = 6 AND T2.episode = 12"
law_episode,Who is the winner of the Best Television Episode award for the Edgar category in 2000? Include his or her name and role.,the Best Television Episode award refers to award = 'Best Television Episode'; the Edgar category refers to award_category = 'Edgar'; in 2000 refers to year = 2000,"SELECT T1.name, T2.role FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.year = 2000 AND T2.award_category = 'Edgar' AND T2.award = 'Best Television Episode'"
law_episode,"Write down the organization, year, award, and award category in which Rene Balcer is the winner.",Rene Balcer refers to name = 'Rene Balcer'; the winner refers to result = 'Winner',"SELECT T2.organization, T2.year, T2.award, T2.award_category FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T1.name = 'Rene Balcer' AND T2.result = 'Winner'"
law_episode,Give me the years and episode IDs in which Constantine Makris was the winner of the Television Silver Gavel Award at the American Bar Association Silver Gavel Awards for Media and the Arts for two consecutive years.,the winner refers to result = 'Winner'; the Television refers to award = 'Television'; Silver Gavel Award refers to award_category = 'Silver Gavel Award'; the American Bar Association Silver Gavel Awards for Media and the Arts refers to organization = 'American Bar Association Silver Gavel Awards for Media and the Arts',"SELECT t3.years, t3.episode_id FROM ( SELECT DISTINCT T2.year AS years, T2.episode_id, row_number() OVER (PARTITION BY T2.episode_id ORDER BY T2.year) AS rm FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.award = 'Television' AND T2.award_category = 'Silver Gavel Award' AND T1.name = 'Constantine Makris' AND T2.result = 'Winner' AND T2.organization = 'American Bar Association Silver Gavel Awards for Media and the Arts' ) AS T3 GROUP BY t3.episode_id HAVING COUNT(t3.years - t3.rm) >= 2"
law_episode,Who was the Law and Order series writer who also won the Television Silver Gavel Award at the American Bar Association Silver Gavel Awards for Media and the Arts for two consecutive years?,who refers to name; writer refers to role = 'writer'; won refers to result = 'Winner'; the Television refers to award = 'Television'; Silver Gavel Award refers to award_category = 'Silver Gavel Award'; the American Bar Association Silver Gavel Awards for Media and the Arts refers to organization = 'American Bar Association Silver Gavel Awards for Media and the Arts',"SELECT t3.name FROM ( SELECT DISTINCT T2.year AS years, T1.name, row_number() OVER (PARTITION BY T1.name ORDER BY T2.year) AS rm FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.award = 'Television' AND T2.award_category = 'Silver Gavel Award' AND T2.series = 'Law and Order' AND T2.result = 'Winner' AND T2.organization = 'American Bar Association Silver Gavel Awards for Media and the Arts' ) AS T3 GROUP BY t3.name HAVING COUNT(t3.years - t3.rm) >= 2"
law_episode,How many times was episode 20 of the Law and Order series nominated for the Primetime Emmy Awards in 1999?,nominated refers to result = 'nominee'; the Law and Order series refers to series = 'Law and Order'; the Primetime Emmy Awards refers to organization = 'Primetime Emmy Awards'; in 1999 refers to year = 1999,SELECT COUNT(T2.award_id) FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE T2.year = 1999 AND T2.result = 'Nominee' AND T1.episode = 20 AND T2.organization = 'Primetime Emmy Awards' AND T1.series = 'Law and Order'
law_episode,"On what episode did Julia Roberts win the ""Outstanding Guest Actress in a Drama Series"" award during the 1999 Primetime Emmy Awards? Tell me her role.","win refers to result = 'Winner'; the ""Outstanding Guest Actress in a Drama Series"" award refers to award = 'Outstanding Guest Actress in a Drama Series'; the 1999 refers to year = 1999; Primetime Emmy Awards refers to organization = 'Primetime Emmy Awards'","SELECT T3.episode_id, T2.role FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id INNER JOIN Episode AS T3 ON T2.episode_id = T3.episode_id WHERE T2.year = 1999 AND T2.award = 'Outstanding Guest Actress in a Drama Series' AND T2.organization = 'Primetime Emmy Awards' AND T1.name = 'Julia Roberts' AND T2.result = 'Nominee'"
law_episode,List the titles and air dates of episodes that were produced by Billy Fox.,produced refers to role = 'producer',"SELECT T1.title, T1.air_date FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T2.category = 'Produced by' AND T2.role = 'producer' AND T3.name = 'Billy Fox'"
law_episode,"Among the American casts, how many were uncredited on episode ID tt0629228?",American refers to birth_country = 'USA'; cast refers to category = 'Cast'; uncredited refers to credited = '',SELECT COUNT(T1.person_id) FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T1.episode_id = 'tt0629228' AND T1.category = 'Cast' AND T1.credited = 'false' AND T2.birth_country = 'USA'
law_episode,What was the role of Jason Kuschner in episode 9?,,SELECT T1.role FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id INNER JOIN Episode AS T3 ON T1.episode_id = T3.episode_id WHERE T3.episode = 9 AND T2.name = 'Jason Kuschner'
law_episode,"Who played the role of the ""president of NBC West Coast"" in the first episode?","who refers to name; the role of the ""president of NBC West Coast"" refers to role = 'president of NBC West Coast'; the first episode refers to episode = 1",SELECT T2.name FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id INNER JOIN Episode AS T3 ON T1.episode_id = T3.episode_id WHERE T3.episode = 1 AND T1.role = 'president of NBC West Coast'
law_episode,"List down the titles of the top 3 episodes, from highest to lowest, in terms of their weighted stars.","weighted stars = divide(sum(stars, percent), 100)",SELECT T2.title FROM Vote AS T1 INNER JOIN Episode AS T2 ON T2.episode_id = T1.episode_id WHERE T1.stars BETWEEN 1 AND 10 GROUP BY T2.title ORDER BY CAST(SUM(T1.stars * T1.percent) AS REAL) / 100 DESC LIMIT 3
law_episode,What is the ratio of American casts on episode 2 of the series? Please include their roles.,"American refers to birth_country = 'USA'; cast refers to category = 'Cast'; ratio = divide(count(person_id where birth_country = 'USA'), total(category)) where category = 'Cast'","SELECT CAST(SUM(CASE WHEN T2.category = 'Cast' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.category), T1.role FROM Award AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Episode AS T3 ON T2.episode_id = T3.episode_id INNER JOIN Person AS T4 ON T2.person_id = T4.person_id WHERE T3.episode = 2 AND T4.birth_country = 'USA'"
law_episode,How many people from Canada are nominated for an award?,from Canada refers to birth_country = Canada; nominated refers to award is NOT NULL,SELECT COUNT(T1.person_id) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T1.birth_country = 'Canada'
law_episode,How many episodes are credited to Jerry Orbach?,,SELECT COUNT(T2.person_id) FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T2.name = 'Jerry Orbach'
law_episode,List out all the credit names for episode 9.,credit name refers to name,SELECT T3.name FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T1.episode = 9
law_episode,List out all award titles nominated for episode 20.,award title refers to title; nominated refers to result = 'Winner' or result = 'Nominee',"SELECT T2.award FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE T1.episode = 20 AND T2.result IN ('Winner', 'Nominee')"
law_episode,Which role have won at least two awards for the entire season and list out the name?,at least two awards refers to count(role) >1,SELECT T1.name FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id GROUP BY T2.role HAVING COUNT(T2.award_id) > 1
law_episode,List out director names that received an award along with the episode number.,director refers to role = 'director'; received an award refers to result = 'Winner'; episode number refers to episode,"SELECT T3.name, T1.episode_id FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T2.person_id = T3.person_id WHERE T2.role = 'director' AND T2.result = 'Winner'"
law_episode,Which episodes are nominated for an awards but not win?,nominated for an award but not win refers to result = 'Nominee',SELECT T1.episode FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE T2.result = 'Nominee'
law_episode,What is the average rating for each episode in season 9?,"average rating = divide(sum(rating), count(episode_id))",SELECT SUM(rating) / COUNT(episode_id) FROM Episode WHERE season = 9
law_episode,What is the difference of 10 stars votes between the first episode and the last episode?,"the first episode refers to episode = 1; the last episode refers to episode = 24; 10 stars vote refers to stars = 10; the difference = subtract(votes where episode = 1, votes where episode = 24) where stars = 10",SELECT SUM(CASE WHEN T2.episode = 24 THEN T1.votes ELSE 0 END) - SUM(CASE WHEN T2.episode = 1 THEN T1.votes ELSE 0 END) FROM Vote AS T1 INNER JOIN Episode AS T2 ON T2.episode_id = T1.episode_id WHERE T1.stars = 10
law_episode,What is the episode rating with the most award won?,the most award won refers to max(episode_id where result = 'Winner'),SELECT T1.rating FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE T2.result = 'Winner' GROUP BY T1.episode_id ORDER BY COUNT(T2.award_id) DESC LIMIT 1
law_episode,How many credits have been displayed from episode 1 until 10?,credit displayed refers to credited = 'true'; from episode 1 until 10 refers to episode > = 1 AND episode < = 10,SELECT COUNT(T1.person_id) FROM Credit AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.credited = 'true' AND T2.episode BETWEEN 1 AND 10
law_episode,What is the episode that has mafia keyword?,mafia keyword refers to Keyword = 'mafia',SELECT T1.episode FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T2.Keyword = 'mafia'
law_episode,What is the average star with highest percentage for episodes that have received award?,"received award refers to result = 'Winner'; the highest percentage refers to max(percent); average star = divide(sum(stars), count(episode_id))",SELECT T2.person_id FROM Vote AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id ORDER BY T1.percent DESC LIMIT 1
law_episode,What is the average ranking episodes that are nominated for an award?,"average ranking = divide(sum(rating), sum(episode_id))",SELECT SUM(T1.rating) / COUNT(T1.episode) FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id
law_episode,"How many winners have been awarded a Television award by the ""American Bar Association Silver Gavel Awards for Media and the Arts""?","winner refers to result = 'Winner'; Television award refers to award = 'Television'; the ""American Bar Association Silver Gavel Awards for Media and the Arts"" refers to organization = 'American Bar Association Silver Gavel Awards for Media and the Arts'",SELECT COUNT(award_id) FROM Award WHERE result = 'Winner' AND award = 'Television' AND organization = 'American Bar Association Silver Gavel Awards for Media and the Arts'
law_episode,Which continent was Michael Preston born on?,continent refers to birth_country,SELECT birth_country FROM Person WHERE name = 'Michael Preston'
law_episode,Who was the nominee playing the role of Katrina Ludlow in the Law & Order series?,nominee refers to result = 'Nominee'; the role of Katrina Ludlow refers to role = 'Katrina Ludlow',SELECT T2.name FROM Award AS T1 INNER JOIN Person AS T2 ON T1.person_id = T2.person_id WHERE T1.result = 'Nominee' AND T1.role = 'Katrina Ludlow' AND T1.series = 'Law and Order'
law_episode,"Who played the role of a teleplay in the episode that won ""Best Television Episode""?","the role of a teleplay refers to role = 'teleplay'; won refers to result = 'Winner'; ""Best Television Episode"" refers to award = 'Best Television Episode'",SELECT T2.name FROM Award AS T1 INNER JOIN Person AS T2 ON T1.person_id = T2.person_id WHERE T1.result = 'Winner' AND T1.award = 'Best Television Episode'
law_episode,"What is the date of birth of the actor who played the role of a ""writer""?",date of birth refers to birthdate,SELECT T2.birthdate FROM Award AS T1 INNER JOIN Person AS T2 ON T1.person_id = T2.person_id WHERE T1.role = 'writer'
law_episode,"Which episode was nominated for the award for ""Outstanding Costume Design for a Series""?","episode refers to title; ""Outstanding Costume Design for a Series"" refers to award = 'Outstanding Costume Design for a Series'",SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award = 'Outstanding Costume Design for a Series'
law_episode,Which episode has the highest total number of viewer votes?,episode refers to title; the highest total number of viewer votes refers to max(sum(votes)),SELECT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id GROUP BY T1.title ORDER BY SUM(T1.votes) DESC LIMIT 1
law_episode,"Who was the actor who was portraying ""Alex Brown"" and has been credited?","who refers to name; portraying ""Alex Brown"" refers to role = 'Alex Brown'; has been credited refers to credited = 'true'",SELECT T1.name FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.person_id = T2.person_id WHERE T2.role = 'Alex Brown' AND T2.credited = 'true'
law_episode,"Where is the place of birth of the actor with the number nm0007064 who has not been credited for playing the role of a ""Narrator""?","place of birth refers to birth_place; actor with the number nm0007064 refers to person_id = 'nm007064'; has not been credited refers to credited = ''; the role of a ""Narrator"" refers to role = 'narrator'",SELECT DISTINCT T1.birth_place FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.person_id = T2.person_id WHERE T1.person_id = 'nm0007064' AND T2.role = 'Narrator' AND T2.credited = 'false'
law_episode,"What are the keywords of the episode ""Shield""?","the episode ""Shield"" refers to title = 'Shield'",SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Shield'
law_episode,Who are the actors with a height of over 1.80m in an episode that won an award?,who refers to name; a height of over 1.80m refers to height_meters > 1.80; won an award refers to result = 'Winner',SELECT T2.name FROM Award AS T1 INNER JOIN Person AS T2 ON T1.person_id = T2.person_id WHERE T1.result = 'Winner' AND T2.height_meters > 1.80
law_episode,"Which episode has the two keywords ""nun"" and ""priest""?","episode refers to title; the two keywords ""nun"" and ""priest"" refers to keyword = 'nun' or keyword = 'priest';","SELECT T1.title FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T2.keyword IN ('nun', 'priest')"
law_episode,"Which episode number has the second highest positive viewer comments and has been awarded ""Best Television Episode""?","episode number refers to episode_id; awarded ""Best Television Episode"" refers to award = 'Best Television Episode' and result = 'Winner'; the second highest positive viewer comments refers to rating = 8.5",SELECT T2.episode_id FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award = 'Best Television Episode' AND T1.result = 'Winner' ORDER BY T2.rating DESC LIMIT 2
law_episode,Please list any three episodes that were most enjoyed by the viewers.,episode refers to title; most enjoyed by the viewers refers to stars = 10,SELECT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T2.stars = 10 LIMIT 3
synthea,"According to the observation on 2008/3/11, what was the height of Elly Koss?",2008/3/11 refers to date = '2008-03-11'; height refers to DESCRIPTION = 'Body Height' from observations;,"SELECT T2.value, T2.units FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.date = '2008-03-11' AND T2.description = 'Body Height'"
synthea,By how much did Elly Koss's weight increase from the observation in 2008 to the observation in 2009?,"SUBTRACT((DATE like '2009%'), (DATE like '2008%')) where DESCRIPTION = 'Body Weight';","SELECT SUM(CASE WHEN strftime('%Y', T2.date) = '2009' THEN T2.VALUE END) - SUM(CASE WHEN strftime('%Y', T2.date) = '2008' THEN T2.VALUE END) AS increase , T2.units FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.description = 'Body Height'"
synthea,"During all the observations of Elly Koss, what was the highest Systolic Blood Pressure observed?",the highest Systolic Blood Pressure refers to MAX(DESCRIPTION = 'Systolic Blood Pressure') from observations;,"SELECT T2.value, T2.units FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.description = 'Systolic Blood Pressure' ORDER BY T2.VALUE DESC LIMIT 1"
synthea,For how many times had Elly Koss have her Systolic Blood Pressure observed?,Systolic Blood Pressure refers to DESCRIPTION = 'Systolic Blood Pressure';,SELECT COUNT(T2.description) FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.description = 'Systolic Blood Pressure'
synthea,The highest Systolic Blood Pressure was observed in which patient? Please give his or her full name.,"the highest Systolic Blood Pressure refers to MAX(DESCRIPTION = 'Systolic Blood Pressure') from observations; full name refers to first, last;","SELECT T1.first, T1.last FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T2.VALUE = ( SELECT MAX(VALUE) FROM observations WHERE description = 'Systolic Blood Pressure' ) LIMIT 1"
synthea,For how long was Elly Koss required to take Acetaminophen?,"SUM(MULTIPLY(365, SUBTRACT(strftime('%Y', STOP), strftime('%Y', START))), MULTIPLY(30, SUBTRACT(strftime('%m', STOP), strftime('%m', START))), SUBTRACT(strftime('%d', STOP), strftime('%d', START))) where DESCRIPTION like 'Acetaminophen%';","SELECT strftime('%J', T2.STOP) - strftime('%J', T2.START) AS days FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.description LIKE 'Acetaminophen%'"
synthea,Please list all the medication that are prescribed to Elly Koss.,medication that are prescribed refers to DESCRIPTION from medications;,SELECT DISTINCT T2.description FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss'
synthea,Why did Elly Koss need to take Acetaminophen?,why need to take Acetaminophen refers to REASONDESCRIPTION  where DESCRIPTION like 'Acetaminophen%' from medications;,SELECT T2.REASONDESCRIPTION FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.description LIKE 'Acetaminophen%'
synthea,What medication did Elly Koss take when she had Streptococcal sore throat?,medication refers to DESCRIPTION from medications; Streptococcal sore throat refers to REASONDESCRIPTION like 'Streptococcal sore throat%';,SELECT T2.description FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.reasondescription = 'Streptococcal sore throat (disorder)'
synthea,Please give the full names of all the patients who had been prescribed with Acetaminophen.,"full name refers to first, last; prescribed with Acetaminophen refer to DESCRIPTION like 'Acetaminophen%' from medications;","SELECT DISTINCT T1.first, T1.last FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.description LIKE 'Acetaminophen%'"
synthea,What was the condition of Elly Koss on 2009/1/8?,condition on 2009/1/8 refers to DESCRIPTION from conditions where START = '2009-01-08';,SELECT T2.description FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.START = '2009-01-08'
synthea,For how long did Elly Koss's cystitis last?,"SUM(MULTIPLY(365, SUBTRACT(strftime('%Y', STOP), strftime('%Y', START))), MULTIPLY(30, SUBTRACT(strftime('%m', STOP), strftime('%m', START))), SUBTRACT(strftime('%d', STOP), strftime('%d', START))) where DESCRIPTION = 'Cystitis';","SELECT strftime('%J', T2.STOP) - strftime('%J', T2.START) AS days FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.description = 'Cystitis'"
synthea,"According to all the observations of Elly Koss, what was her average weight?","DIVIDE(SUM(VALUE), COUNT(VALUE)) WHERE DESCRIPTION = 'Body Weight';","SELECT AVG(T2.VALUE), T2.units FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.description = 'Body Weight'"
synthea,"Among all the patients who once had cystitis, what was the percentage of them being married?","DIVIDE(COUNT(marital = 'M'), COUNT(patient)) as percentage where DESCRIPTION = 'Cystitis';
",SELECT CAST(SUM(CASE WHEN T1.marital = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T2.description = 'Cystitis'
synthea,Give the body height status of Mr. Vincent Wyman on 2010/8/2.,body height status refers to DESCRIPTION = 'Body Height' from observations; on 2010/8/2 refers to DATE = '2010-08-02';,"SELECT T2.description, T2.VALUE, T2.units FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Mr.' AND T1.first = 'Vincent' AND T1.last = 'Wyman' AND T2.date = '2010-08-02' AND T2.description = 'Body Height'"
synthea,How many care plans has Mrs. Norman Berge taken?,,SELECT COUNT(T2.PATIENT) FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Mrs.' AND T1.first = 'Norman' AND T1.last = 'Berge'
synthea,Why did Mrs. Annabelle Pouros take leucovorin 100 mg injection on 1970/12/19? State the reason.,reason why take leucovorin 100 mg injection refers to REASONDESCRIPTION where DESCRIPTION = 'Leucovorin 100 MG Injection'; on 1970/12/19 refers to START = '1970-12-19';,SELECT T2.reasondescription FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Mrs.' AND T1.first = 'Annabelle' AND T1.last = 'Pouros' AND T2.start = '1970-12-19' AND T2.description = 'Leucovorin 100 MG Injection'
synthea,What is the prevalence percentage of condition no. 64859006?,condition no. 64859006 refers to conditions where CODE = '64859006';,"SELECT DISTINCT T1.""PREVALENCE PERCENTAGE"" FROM all_prevalences AS T1 INNER JOIN conditions AS T2 ON lower(T1.ITEM) = lower(T2.DESCRIPTION) WHERE T2.code = '64859006'"
synthea,State the prevalence rate of condition no. 368581000119106.,condition no. 368581000119106 refers to conditions where CODE = '368581000119106';,"SELECT DISTINCT T1.""PREVALENCE RATE"" FROM all_prevalences AS T1 INNER JOIN conditions AS T2 ON lower(T1.ITEM) = lower(T2.DESCRIPTION) WHERE T2.code = '368581000119106'"
synthea,Give the procedure description of Ms. Jacquelyn Shanahan on 2009/8/9.,on 2009/8/9 refers to DATE = '2009-08-09';,SELECT DISTINCT T2.description FROM patients AS T1 INNER JOIN procedures AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Ms.' AND T1.first = 'Jacquelyn' AND T1.last = 'Shanahan' AND T2.DATE = '2009-08-09'
synthea,Give the number of claims did Ms. Abbie Cole have in the year of 2011.,in the year of 2011 refers to BILLABLEPERIOD between '2010-12-31' and '2012-01-01';,SELECT COUNT(T2.BILLABLEPERIOD) FROM patients AS T1 INNER JOIN claims AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Ms.' AND T1.first = 'Abbie' AND T1.last = 'Cole' AND T2.BILLABLEPERIOD BETWEEN '2010-12-31' AND '2012-01-01'
synthea,How many allergies does Mrs. Saundra Monahan have?,allergies refer to PATIENT from allergies;,SELECT COUNT(DISTINCT T2.code) FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Mrs.' AND T1.first = 'Saundra' AND T1.last = 'Monahan'
synthea,Provide the name of the patient who had a claim on 1947/9/11.,"name of the patient implies full name and refers to first, last; on 1947/9/11 refers to BILLABLEPERIOD = '1947-09-11';","SELECT T1.first, T1.last FROM patients AS T1 INNER JOIN claims AS T2 ON T1.patient = T2.PATIENT WHERE T2.billableperiod = '1947-09-11'"
synthea,Describe the encounter of Mr. Hubert Baumbach on 2008/10/25.,encounter refers to DESCRIPTION from encounters; on 2008/10/25 refers to DATE = '2008-10-25';,SELECT T2.description FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Mr.' AND T1.first = 'Hubert' AND T1.last = 'Baumbach' AND T2.date = '2008-10-25'
synthea,What kind of condition did Keven Kuhn have from 2016/9/24 to 2016/10/10? Describe the condition.,kind of condition refers to DESCRIPTION from conditions; from 2016/9/24 to 2016/10/10 refers to START = '2016-09-24' and STOP = '2016-10-10';,SELECT T2.description FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Keven' AND T1.last = 'Kuhn' AND T2.start = '2016-09-24' AND T2.stop = '2016-10-10'
synthea,When did Mrs. Ira Deckow have the standard pregnancy test?,standard pregnancy test refers to DESCRIPTION = 'Standard pregnancy test' from procedures;,SELECT T2.date FROM patients AS T1 INNER JOIN procedures AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Mrs.' AND T1.first = 'Ira' AND T1.last = 'Deckow' AND T2.description = 'Standard pregnancy test'
synthea,Calculate the average period of Mr. Wesley Lemke's care plans.,"DIVIDE(SUBTRACT(stop time - start time), COUNT(ID)));","SELECT CAST(SUM(strftime('%J', T2.STOP) - strftime('%J', T2.START)) AS REAL) / COUNT(T1.patient) FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Mr.' AND T1.first = 'Wesley' AND T1.last = 'Lemke'"
synthea,State the average period of Ms. Angelena Kertzmann's several normal pregnancies.,"DIVIDE(SUBTRACT(stop time - start time), COUNT(DESCRIPTION = 'Normal pregnancy')));","SELECT CAST(SUM(strftime('%J', T2.STOP) - strftime('%J', T2.START)) AS REAL) / COUNT(T2.PATIENT) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Ms.' AND T1.first = 'Angelena' AND T1.last = 'Kertzmann' AND T2.description = 'Normal pregnancy'"
synthea,What is the id of the patient who has the longest allergy period?,"id of the patient refers to PATIENT from allergies where STOP is not null; the longest allergy period refers to MAX(SUBTRACT((SUBSTR(STOP, - 2, 1)! = '9' then substr(STOP, length(STOP) - 1) + 2000 end), (SUBSTR(START, - 2, 1) = '9' then substr(START, length(START) - 1) + 1900 else substr(START, length(START) - 1) + 2000 end)));
","SELECT PATIENT FROM allergies WHERE STOP IS NOT NULL GROUP BY PATIENT ORDER BY CASE WHEN SUBSTR(STOP, -2, 1) != '9' THEN SUBSTR(STOP, LENGTH(STOP) - 1) + 2000 END - CASE WHEN SUBSTR(START, -2, 1) = '9' THEN SUBSTR(START, LENGTH(START) - 1) + 1900 ELSE SUBSTR(START, LENGTH(START) - 1) + 2000 END LIMIT 1"
synthea,How many patients have diabetes that started in 1988?,diabetes that started in 1988 refers to DESCRIPTION = 'Diabetes' from conditions and START like '1988%';,"SELECT COUNT(PATIENT) FROM conditions WHERE DESCRIPTION = 'Diabetes' AND strftime('%Y', START) = '1988'"
synthea,How many patients are allergic to eggs?,allergic to eggs refer to DESCRIPTION = 'Allergy to eggs' from allergies;,SELECT COUNT(PATIENT) FROM allergies WHERE DESCRIPTION = 'Allergy to eggs'
synthea,What is the id of the patient whose hypertension started most recently?,id of the patient refers to PATIENT from conditions;  hypertension refers to DESCRIPTION = 'Hypertension'; most recently refers to MAX(START);,SELECT PATIENT FROM conditions WHERE START = ( SELECT MAX(START) FROM conditions WHERE DESCRIPTION = 'Hypertension' )
synthea,What is the most common allergy among patients?,the most common allergy refers to MAX(COUNT(DESCRIPTION)) from allergies;,SELECT DESCRIPTION FROM allergies GROUP BY DESCRIPTION ORDER BY COUNT(DESCRIPTION) DESC LIMIT 1
synthea,What is/are the ids of the tallest patient/s?,id of the tallest patient/s refers to PATIENT from observations where MAX(DESCRIPTION = 'Body Height');,SELECT PATIENT FROM observations WHERE DESCRIPTION = 'Body Height' AND UNITS = 'cm' ORDER BY VALUE DESC LIMIT 1
synthea,What is the most common condition among the female Americans?,the most common condition refers to MAX(COUNT(DESCRIPTION)); among the female Americans refer to PATIENT where gender = 'F' and ethnicity = 'american';,SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.gender = 'F' AND T1.ethnicity = 'american' GROUP BY T2.DESCRIPTION ORDER BY COUNT(T2.DESCRIPTION) DESC LIMIT 1
synthea,"Among the patients that started taking Ibuprofen 200mg Oral Tablet in 2016, how many Dominican patients stopped taking the medicine after exactly one month?","Ibuprofen 200mg Oral Tablet refers to DESCRIPTION = 'Ibuprofen 200 MG Oral Tablet' from medications; started in 2016 refers to START like '2016%'; Dominican patients refer to ethnicity = 'dominican'; stopped taking the medicine after exactly one month refers to SUBTRACT(strftime('%m', STOP), strftime('%m', START)) = 1;","SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Ibuprofen 200 MG Oral Tablet' AND T1.ethnicity = 'dominican' AND strftime('%Y', T2.START) = '2016' AND strftime('%m', T2.STOP) - strftime('%m', T2.START) = 1"
synthea,How many of the patients born in 1920s had pneumonia?,patients born in 1920s refer to patient where birthdate like '192%'; pneumonia refers to DESCRIPTION = 'Pneumonia' from conditions;,"SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE DESCRIPTION = 'Pneumonia' AND strftime('%Y', T1.birthdate) LIKE '192%'"
synthea,What are the full names of the patients who started taking Yaz 28 Day Pack in 2011?,"full name refers to first, last; Yaz 28 Day Pack refers to DESCRIPTION = 'Yaz 28 Day Pack' from medications; started taking in 2011 refers to START like '2011%';","SELECT DISTINCT T1.first, T1.last, T1.suffix FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Yaz 28 Day Pack' AND strftime('%Y', T2.START) = '2011'"
synthea,How many Black patients were immunized with DTaP in 2013?,Black patients refer to patient where race = 'black'; immunized with DTaP refers to DESCRIPTION = 'DTaP' from immunizations; in 2013 refers to DATE like '2013%';,"SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T1.race = 'black' AND T2.DESCRIPTION = 'DTaP' AND strftime('%Y', T2.DATE) = '2013'"
synthea,How many immunizations did the patient with the most prevalent condition that started recently get?,patient with the most prevalent condition refers to patient where MAX(PREVALENCE RATE); started recently refers to MAX(START);,"SELECT COUNT(T2.patient) FROM all_prevalences AS T1 INNER JOIN conditions AS T2 ON lower(T1.ITEM) = lower(T2.DESCRIPTION) INNER JOIN immunizations AS T3 ON T2.PATIENT = T3.PATIENT GROUP BY T2.PATIENT ORDER BY T2.START DESC, T1.""PREVALENCE RATE"" DESC LIMIT 1"
synthea,How many patients have the most prevalent conditions?,the most prevalent conditions refer to MAX(PREVALENCE RATE);,"SELECT COUNT(DISTINCT T2.patient) FROM all_prevalences AS T1 INNER JOIN conditions AS T2 ON lower(T1.ITEM) = lower(T2.DESCRIPTION) ORDER BY T1.""PREVALENCE RATE"" DESC LIMIT 1"
synthea,What is the most common condition among the patients who received influenza seasonal injectable preservative free immunization?,the most common condition refers to MAX(DESCRIPTION) from conditions; patients who received influenza seasonal injectable preservative free immunization refer to PATIENT where DESCRIPTION = 'Influenza seasonal injectable preservative free' from immunizations;,SELECT T2.DESCRIPTION FROM immunizations AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.DESCRIPTION = 'Influenza  seasonal  injectable  preservative free' GROUP BY T2.DESCRIPTION ORDER BY COUNT(T2.DESCRIPTION) DESC LIMIT 1
synthea,List the ids of all the patients with condition that has a prevalence percentage of 18.8%.,ids of the patients refer to PATIENT from conditions; condition that has a prevalence percentage of 18.8% refers to PREVALENCE PERCENTAGE = 18.8;,"SELECT DISTINCT T1.PATIENT FROM conditions AS T1 INNER JOIN all_prevalences AS T2 ON lower(T2.ITEM) = lower(T1.DESCRIPTION) WHERE T2.""PREVALENCE PERCENTAGE"" = CAST(18.8 AS float)"
synthea,How many conditions did Tyree Eichmann have?,conditions refer to DESCRIPTION from conditions;,SELECT COUNT(DISTINCT T2.DESCRIPTION) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Tyree' AND T1.last = 'Eichmann'
synthea,"Among the patients who were immunized with meningococcal MCV4P, how many have viral sinusitis disorder after getting the immunization?",immunized with meningococcal MCV4P refers to DESCRIPTION = 'meningococcal MCV4P' from immunizations; viral sinusitis disorder refers to DESCRIPTION = 'Viral sinusitis (disorder)' from conditions;,SELECT COUNT(DISTINCT T1.patient) FROM immunizations AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.DESCRIPTION = 'meningococcal MCV4P' AND T2.DESCRIPTION = 'Viral sinusitis (disorder)'
synthea,"Among the patients with prediabetes, how many are female?",patients with prediabetes refer to PATIENT from conditions where DESCRIPTION = 'Prediabetes'; female refers to gender = 'F';,SELECT COUNT(DISTINCT T2.patient) FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.gender = 'F' AND T1.DESCRIPTION = 'Prediabetes'
synthea,Indicate the patient's full name with the lowest body mass index in kg/m2.,"full name refers to first, last; the lowest body mass index in kg/m2 refers to DESCRIPTION = Body Mass Index from observations where MIN(VALUE) and UNITS = 'kg/m2';","SELECT T1.first, T1.last FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Body Mass Index' AND T2.UNITS = 'kg/m2' ORDER BY T2.VALUE LIMIT 1"
synthea,What is the age of the patient with hypertension named Giovanni Russel?,"age refers to SUBTRACT(strftime('%Y', deathdate), strftime('%Y', birthdate)); hypertension refers to conditions where DESCRIPTION = 'Hypertension';","SELECT strftime('%Y', T2.deathdate) - strftime('%Y', T2.birthdate) AS age FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.first = 'Giovanni' AND T2.last = 'Russel' AND T1.DESCRIPTION = 'Hypertension'"
synthea,How many Asian female patients take oxaliplatin 5 MG/ML [Eloxatin]?,female refers to gender = 'F'; oxaliplatin 5 MG/ML [Eloxatin] refers to medications where DESCRIPTION = 'oxaliplatin 5 MG/ML [Eloxatin]';,SELECT COUNT(DISTINCT T2.patient) FROM medications AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'oxaliplatin 5 MG/ML [Eloxatin]' AND T2.race = 'asian' AND T2.gender = 'F'
synthea,Count all of the living patients that had a stroke.,"if deathdate is null, it means this patient is still alive or living; stroke refers to conditions where DESCRIPTION = 'Stroke';",SELECT COUNT(DISTINCT T2.patient) FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.description = 'Stroke' AND T2.deathdate IS NULL
synthea,What is the total number of Asian patients who are allergic to peanuts?,"Asian refers to race like 'asian%'; allergic to peanuts refers to allergies where DESCRIPTION = 'Allergy to peanuts'; 
",SELECT COUNT(T2.patient) FROM allergies AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Allergy to peanuts' AND T2.race = 'asian'
synthea,"Among the patients with hypertension, what is the average of their diastolic blood pressure?",hypertension refers to conditions where DESCRIPTION = 'Hypertension'; average diastolic blood pressure refers to AVG(VALUE) where DESCRIPTION = 'Diastolic Blood Pressure' from observations;,SELECT AVG(T1.VALUE) FROM observations AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient INNER JOIN conditions AS T3 ON T2.patient = T3.PATIENT WHERE T3.DESCRIPTION = 'Hypertension' AND T1.DESCRIPTION = 'Diastolic Blood Pressure'
synthea,What is the medicine prescribed for the patient with social security number 999-94-3751?,medicine prescribed refers to DESCRIPTION from medications; social security number 999-94-3751 refers to ssn = '999-94-3751';,SELECT T1.DESCRIPTION FROM medications AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.ssn = '999-94-3751'
synthea,Give the social security number of the female Irish patient allergic to grass pollen.,social security number refers to ssn; female refers to gender = 'F'; Irish refers to ethnicity = 'irish'; allergic to grass pollen refers to allergies where DESCRIPTION = 'Allergy to grass pollen';,SELECT T2.ssn FROM allergies AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Allergy to grass pollen' AND T2.ethnicity = 'irish' AND T2.gender = 'F'
synthea,Who is the patient involved in the care plan with code 311791003?,,"SELECT T2.first, T2.last FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.CODE = 315043002"
synthea,"Among the patients that died, what is the condition of the oldest patient?","if deathdate is not null, it means this patient died; condition refers to DESCRIPTION from conditions; the oldest patient refers to MAX(SUBTRACT(strftime('%Y', deathdate), strftime('%Y', birthdate)));","SELECT T1.DESCRIPTION FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.deathdate IS NOT NULL ORDER BY strftime('%Y', T2.deathdate) - strftime('%Y', T2.birthdate) DESC LIMIT 1"
synthea,What is the code of the prevalent disease with the highest occurrences?,,SELECT T2.code FROM all_prevalences AS T1 INNER JOIN conditions AS T2 ON T1.ITEM = T2.DESCRIPTION ORDER BY T1.OCCURRENCES DESC LIMIT 1
synthea,"What is the glucose level of the patient that lives at 365 Della Crossroad Suite 202, Deerfield, MA 01342 US?","glucose level refers to VALUE, UNITS where DESCRIPTION = 'Glucose' from observations; lives at 365 Della Crossroad Suite 202, Deerfield, MA 01342 US refers to address = '365 Della Crossroad Suite 202 Deerfield MA 01342 US';","SELECT DISTINCT T2.DESCRIPTION, T2.VALUE, T2.UNITS FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Glucose' AND T1.address = '365 Della Crossroad Suite 202 Deerfield MA 01342 US'"
synthea,Provide at least 5 social security numbers of patients with a prevalent disease with a prevalence percentage lower than 30% of the average prevalence percentage of conditions.,"social security number refers to ssn; prevalence percentage lower than 30% of the average prevalence percentage of conditions refers to PREVALENCE PERCENTAGE < MULTIPLY(0.3, AVG(PREVALENCE PERCENTAGE));","SELECT DISTINCT T2.ssn FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient INNER JOIN all_prevalences AS T3 ON lower(T1.DESCRIPTION) = lower(T3.ITEM) WHERE CAST(T3.""PREVALENCE PERCENTAGE"" AS REAL) * 100 / ( SELECT AVG('PREVALENCE PERCENTAGE') FROM all_prevalences ) < 30 LIMIT 5"
synthea,"Among the patients with acute bronchitis, what is the percentage of Asian women?","DIVIDE(COUNT(PATIENT where gender = 'F' and race = 'asian'), COUNT(PATIENT)) as percentage where DESCRIPTION = 'Acute bronchitis (disorder)' ;",SELECT CAST(SUM(CASE WHEN T2.gender = 'F' AND T2.race = 'asian' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.gender) FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Acute bronchitis (disorder)'
synthea,Provide the number of encounters for Major D'Amore.,,SELECT COUNT(T2.ID) FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Major' AND T1.last = 'D''Amore'
synthea,List the procedures received by Emmy Waelchi.,procedures refer to DESCRIPTION from procedures;,SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN procedures AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Emmy' AND T1.last = 'Waelchi'
synthea,Provide the patients' full names who received the extraction of wisdom tooth.,"patient's full name refers to first, last; extraction of wisdom tooth refers to DESCRIPTION = 'Extraction of wisdom tooth' from procedures;","SELECT T1.first, T1.last FROM patients AS T1 INNER JOIN procedures AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Extraction of wisdom tooth'"
synthea,Provide the body weight of Elly Koss in every observation.,body weight VALUE and UNITS where DESCRIPTION = 'Body Weight' from observations;,"SELECT T2.DESCRIPTION, T2.VALUE, T2.UNITS FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.DESCRIPTION = 'Body Weight'"
synthea,Name the patients who had an allergy to soy.,allergy to soy refers to allergies where DESCRIPTION = 'Allergy to soya';,"SELECT T1.first, T1.last FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Allergy to soya'"
synthea,How many times did Keven Kuhn receive DTaP immunization?,DTaP immunization refers to immunizations where DESCRIPTION = 'DTaP';,SELECT COUNT(T2.CODE) FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Keven' AND T1.last = 'Kuhn' AND T2.DESCRIPTION = 'DTaP'
synthea,Who had to take Clopidogrel 75 MG Oral Tablet for over 10 years?,"Who implies the full name of the patient which refers to first, last; Clopidogrel 75 MG Oral Tablet refers to medications where DESCRIPTION = 'Clopidogrel 75 MG Oral Tablet'; for over 10 years refers to SUBTRACT(strftime('%Y', STOP), strftime('%Y', START)) > 10;","SELECT T1.first, T1.last FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Clopidogrel 75 MG Oral Tablet' AND strftime('%Y', T2.STOP) - strftime('%Y', T2.START) > 10"
synthea,Which procedures and medications were received by the patient with the third-degree burn?,procedures refer to DESCRIPTION from procedures; medications refers to DESCRIPTION from medications; third-degree burn refers to conditions where DESCRIPTION = 'Third degree burn';,"SELECT DISTINCT T1.DESCRIPTION, T3.DESCRIPTION FROM procedures AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT INNER JOIN medications AS T3 ON T2.patient = T3.PATIENT WHERE T2.DESCRIPTION = 'Third degree burn'"
synthea,Provide medications received by patients with an allergy to mould on 6th June 2016.,medications refers to DESCRIPTION from medications; allergy to mould refers to allergies where DESCRIPTION = 'Allergy to mould'; on 6th June 2016 refers to START = '6/6/16';,SELECT T2.DESCRIPTION FROM allergies AS T1 INNER JOIN medications AS T2 ON T1.PATIENT = T2.PATIENT WHERE T1.START = '6/6/16' AND T1.DESCRIPTION = 'Allergy to mould'
synthea,Describe the care plans received by the patient with secondary malignant neoplasm of the colon.,care plans refer to DESCRIPTION from careplans; secondary malignant neoplasm of the colon refers to conditions where DESCRIPTION = 'Secondary malignant neoplasm of colon';,SELECT DISTINCT T1.DESCRIPTION FROM careplans AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Secondary malignant neoplasm of colon'
synthea,What is the prevalence rate of the patients' diseases started on 9th May 2014?,diseases started on 9th May 2014 refer to DESCRIPTION from conditions where START = '5/9/2014';,"SELECT T2.""PREVALENCE RATE"" FROM conditions AS T1 INNER JOIN all_prevalences AS T2 ON lower(T1.DESCRIPTION) = lower(T2.ITEM) WHERE T1.START = '2014-05-09'"
synthea,"Among observations in 2011, provide the names and ages of patients whose Systolic Blood Pressures are 200mmHg.","name implies the patient's full name which refers to first, last; age refers to deathdate is null then SUBTRACT(strftime('%Y', DATE), strftime('%Y', birthdate)); Systolic Blood Pressures are 200mmHg refers to DESCRIPTION = 'Systolic Blood Pressure' and VALUE = 200 and UNITS = 'mmHg' from observations; in 2011 refers to DATE like '2011%';","SELECT T2.first, T2.last , CASE WHEN T2.deathdate IS NULL THEN strftime('%Y', T1.DATE) - strftime('%Y', T2.birthdate) ELSE strftime('%Y', T2.deathdate) - strftime('%Y', T2.birthdate) END AS age FROM observations AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Systolic Blood Pressure' AND T1.VALUE = 200 AND T1.UNITS = 'mmHg' AND strftime('%Y', T1.DATE) = '2011'"
synthea,"Among the immunizations in 2017, calculate the percentage of patients who received the Influenza seasonal injectable preservative free. Among them, how many patients are English?","DIVIDE(COUNT(PATIENT when DESCRIPTION = 'Influenza seasonal injectable preservative free'), COUNT(PATIENT)) as percentage where strftime('%Y', 2017); English refers ethnicity = 'english';","SELECT CAST(SUM(CASE WHEN T2.DESCRIPTION = 'Influenza seasonal injectable preservative free' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.patient), SUM(CASE WHEN T1.ethnicity = 'english' THEN 1 ELSE 0 END) FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE strftime('%Y', T2.DATE) = '2017'"
synthea,List down the first name of patients who encountered normal pregnancy.,encountered normal pregnancy refers to encounters where REASONDESCRIPTION = 'Normal pregnancy';,SELECT DISTINCT T1.first FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T2.REASONDESCRIPTION = 'Normal pregnancy'
synthea,What are the birth date of patients who took outpatient encounter care plan?,outpatient encounter care plan refers to careplans where DESCRIPTION = 'Outpatient Encounter';,SELECT DISTINCT T1.birthdate FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Outpatient Encounter'
synthea,List down the first name of patients who have cystitis condition.,cystitis refers to conditions where DESCRIPTION = 'Cystitis';,SELECT DISTINCT T1.first FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Cystitis'
synthea,How many stroke patients have married?,stroke refers to conditions where DESCRIPTION = 'Stroke'; married refers to the marital status of the patient in which marital = 'M';,SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Stroke' AND T1.marital = 'M'
synthea,List down the address of patients who have billable period in 2010.,,SELECT DISTINCT T1.address FROM patients AS T1 INNER JOIN claims AS T2 ON T1.patient = T2.PATIENT WHERE T2.BILLABLEPERIOD LIKE '2010%'
synthea,List down the last name of patients who are allergic to dairy products.,allergic to dairy products refers to allergies where DESCRIPTION = 'Allergy to dairy product';,SELECT DISTINCT T1.last FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Allergy to dairy product'
synthea,When the allergy starts for Angelo Buckridge.,,SELECT T2.START FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Adolfo' AND T1.last = 'Schmitt' AND T2.STOP IS NOT NULL
synthea,How many of the male patients are allergic to house dust mites?,male patients refer to PATIENT where gender = 'M'; allergic to house dust mites refers to allergies where DESCRIPTION = 'House dust mite allergy';,SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'House dust mite allergy' AND T1.gender = 'M'
synthea,What kind of allergy is most common among white people?,kind of allergy is most common refers to MAX(COUNT(DESCRIPTION)) from allergies; white refers to race = 'white';,SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T1.race = 'white' GROUP BY T2.DESCRIPTION ORDER BY COUNT(T2.DESCRIPTION) DESC LIMIT 1
synthea,"List down the first name of patients who received ""Influenza seasonal injectable preservative free"" immunization.","""Influenza seasonal injectable preservative free"" immunization refers to immunizations where DESCRIPTION = 'Influenza seasonal injectable preservative free';","SELECT DISTINCT T1.first, T1.last FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Influenza  seasonal  injectable  preservative free'"
synthea,"Calculate the number of female patients who accepted ""HPV quadrivalent"" immunization.","female refers to gender = 'F'; ""HPV quadrivalent"" immunization refers to immunizations where DESCRIPTION = 'HPV quadrivalent';",SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'HPV  quadrivalent' AND T1.gender = 'F'
synthea,List down the encounter descriptions of patients who were born in Pittsfield MA US.,born in Pittsfield MA US refers to birthplace = 'Pittsfield MA US';,SELECT DISTINCT T2.DESCRIPTION FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T1.birthplace = 'Pittsfield MA US'
synthea,Calculate the total type of allergies for German people.,type of allergies refers to DESCRIPTION from allergies; German people refer to PATIENT where ethnicity = 'german';,SELECT COUNT(DISTINCT T2.DESCRIPTION) FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T1.ethnicity = 'german'
synthea,Calculate the average age of patients with prediabetes care plan.,"SUBTRACT(SUM(deathdate), SUM(birthdate)), COUNT(patient) where REASONDESCRIPTION = 'Prediabetes' from careplans;","SELECT CAST(SUM(CASE WHEN T1.deathdate IS NULL THEN strftime('%Y', T2.STOP) - strftime('%Y', T1.birthdate) ELSE strftime('%Y', T1.deathdate) - strftime('%Y', T1.birthdate) END) AS REAL) / COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T2.REASONDESCRIPTION = 'Prediabetes'"
synthea,How many of the patients who have stopped taking medication for 'coronary heart disease' are still alive?,"patients who have stopped taking medication for 'coronary heart disease' refer to PATIENT where REASONDESCRIPTION = 'Coronary Heart Disease' and STOP is not null from medications; if deathdate is null, it means this patient is still alive;",SELECT COUNT(DISTINCT T2.patient) FROM medications AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.REASONDESCRIPTION = 'Coronary Heart Disease' AND T1.STOP IS NOT NULL AND T2.deathdate IS NULL
synthea,How many of the patients who underwent a 'bone immobilization' procedure have a driver's license?,patients who underwent a 'bone immobilization' procedure refer to PATIENT from procedures where DESCRIPTION = 'Bone immobilization'; have a driver's license refers to drivers is not null;,SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN procedures AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Bone immobilization' AND T1.drivers IS NOT NULL
synthea,Indicate the full name of the patients who have 3 different allergies.,"full name refers to first, last; have 3 different allergies refer to allergies where COUNT(DESCRIPTION) > 3;","SELECT T1.first, T1.last FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT GROUP BY T1.patient ORDER BY COUNT(DISTINCT T2.DESCRIPTION) > 3"
synthea,How many patients with 'allergy to eggs' have been immunized with 'Td (adult) preservative free'?,allergy to eggs' refers to allergies where DESCRIPTION = 'Allergy to eggs'; immunized with 'Td (adult) preservative free' refers to immunizations where DESCRIPTION = 'Td (adult) preservative free';,SELECT COUNT(DISTINCT T2.patient) FROM allergies AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient INNER JOIN immunizations AS T3 ON T2.patient = T3.PATIENT WHERE T1.DESCRIPTION = 'Allergy to eggs' AND T3.DESCRIPTION = 'Td (adult) preservative free'
synthea,How many patients with a body weight of more than 100 kg have a 'diabetes self-management plan' care plan?,body weight of more than 100 kg refers to observations.DESCRIPTION = 'Body Weight' AND observations.VALUE > 100 AND observations.UNITS = 'kg'; diabetes self-management plan refers to careplans.DESCRIPTION = 'Diabetes self management plan';,SELECT COUNT(DISTINCT T2.patient) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient INNER JOIN observations AS T3 ON T2.patient = T3.PATIENT WHERE T3.DESCRIPTION = 'Body Weight' AND T1.DESCRIPTION = 'Diabetes self management plan' AND T3.VALUE > 100 AND T3.UNITS = 'kg'
synthea,What gender is more prone to 'dander (animal) allergy'?,gender who is more prone to dander (animal) allergy refers to MAX(COUNT(Gender WHERE allergies.DESCRIPTION = 'Dander (animal) allergy'));,SELECT T1.gender FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Dander (animal) allergy' GROUP BY T1.gender ORDER BY COUNT(T1.gender) DESC LIMIT 1
synthea,On what dates did the billable period begin for patients with the last name Dickinson?,dates when the billable period begin refers to BILLABLEPERIOD;,SELECT DISTINCT T2.BILLABLEPERIOD FROM patients AS T1 INNER JOIN claims AS T2 ON T1.patient = T2.PATIENT WHERE T1.last = 'Dickinson'
synthea,List the full name of all patients with 'otitis media'.,"full name = first, last; otitis media refers to conditions.DESCRIPTION = 'Otitis media';","SELECT DISTINCT T1.first, T1.last FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Otitis media'"
synthea,How many patients of Irish ethnicity take medication for 'myocardial infarction'?,take medication for myocardial infarction refers to medications.REASONDESCRIPTION = 'Myocardial Infarction';,SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.REASONDESCRIPTION = 'Myocardial Infarction' AND T1.ethnicity = 'irish'
synthea,How many patients with care plan for 'concussion with loss of consciousness' are married?,concussion with loss of consciousness refers to careplans.DESCRIPTION = 'Concussion with loss of consciousness'; married refers to marital = 'M';,SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.marital = 'M' AND T2.REASONDESCRIPTION = 'Concussion with loss of consciousness'
synthea,How many patients immunized against 'monovalent rotavirus' ceased their care plan on 11/23/2013?,immunized against monovalent rotavirus refers to immunizations.DESCRIPTION = 'rotavirus monovalent'; ceased their care plan on 11/23/2013 refers to careplans.STOP = '2013-11-23';,SELECT COUNT(DISTINCT T1.patient) FROM careplans AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'rotavirus  monovalent' AND T1.STOP = '2013-11-23'
synthea,How many women need to take 'Nitroglycerin 0.4 MG/ACTUAT [Nitrolingual]'?,women refers to gender = 'F'; Nitroglycerin 0.4 MG/ACTUAT [Nitrolingual] refers to medications.DESCRIPTION = 'Nitroglycerin 0.4 MG/ACTUAT [Nitrolingual]',SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Nitroglycerin 0.4 MG/ACTUAT [Nitrolingual]' AND T1.gender = 'F'
synthea,What percentage of patients born in 'Pembroke MA US' have 'allergy to grass pollen'?,"percentage = MULTIPLY(DIVIDE(SUM(patient WHERE allergies.DESCRIPTION = 'Allergy to grass pollen'), COUNT(patient) WHERE birthplace = 'Pembroke MA US'), 100.0); born in Pembroke MA US refers to birthplace = 'Pembroke MA US'; allergy to grass pollen refers to allergies.DESCRIPTION = 'Allergy to grass';",SELECT CAST(SUM(CASE WHEN T2.DESCRIPTION = 'Allergy to grass pollen' THEN 1 ELSE 0 END) AS REL) * 100 / COUNT(T1.patient) FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T1.birthplace = 'Pembroke MA US'
synthea,What is the average body weight of Asian patients?,average = AVG(observations.VALUE WHERE observations.DESCRIPTION = 'Body Weight' AND observations.UNITS = 'kg'); body weight refers to observations.DESCRIPTION = 'Body Weight'; Asian refers to race = 'asian';,SELECT SUM(T2.VALUE) / COUNT(T1.patient) FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T1.race = 'asian' AND T2.DESCRIPTION = 'Body Weight' AND T2.UNITS = 'kg'
synthea,Write down the Social Security numbers of patients who have latex allergies.,Social Security numbers refers to ssn; latex allergies refers to allergies.DESCRIPTION = 'Latex allergy';,SELECT T1.ssn FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Latex allergy'
synthea,How long did Isadora Moen's allergy last? Tell me what kind of allergy she has.,"how long the allergies last = SUBTRACT(allergies.STOP, allergies.START); kind of allergy refers to allergies.DESCRIPTION;","SELECT CASE WHEN SUBSTR(T1.STOP, -2, 1) != '9' THEN SUBSTR(T1.STOP, LENGTH(T1.STOP) - 1) + 2000 END - CASE WHEN SUBSTR(T1.START, -2, 1) = '9' THEN SUBSTR(T1.START, LENGTH(T1.START) - 1) + 1900 ELSE SUBSTR(T1.START, LENGTH(T1.START) - 1) + 2000 END AS years , T1.DESCRIPTION FROM allergies AS T1 INNER JOIN patients AS T2 ON T2.patient = T1.PATIENT WHERE T1.STOP IS NOT NULL AND T1.START IS NOT NULL AND T2.first = 'Isadora' AND T2.last = 'Moen'"
synthea,How many times was Elly Koss given a care plan between 1/11/2009 and 10/23/2010?,between 1/11/2009 and 10/23/2010 refers to careplans.START between '2009-11-1' and '2010-10-23';,SELECT COUNT(T2.PATIENT) FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.START BETWEEN '2009-01-11' AND '2010-10-23'
synthea,"In 2009, who among the married patients had undergone a care plan for more than 60 days?","in 2009 refers to year(careplans.START) = 2009; married patients refers to marital = 'M'; undergone a care plan for more than 60 days refers to SUBTRACT(careplans.STOP, careplans.START) > 60;","SELECT DISTINCT T1.first, T1.last FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.marital = 'M' AND strftime('%J', T2.STOP) - strftime('%J', T2.START) > 60"
synthea,Please provide the dates on which Elly Koss was immunized with the influenza seasonal injectable preservative-free vaccine.,date of immunization refers to immunizations.DATE; immunized with the influenza seasonal injectable preservative-free vaccine refers to immunizations.DESCRIPTION = 'Influenza seasonal injectable preservative free';,SELECT T2.DATE FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Influenza  seasonal  injectable  preservative free' AND T1.first = 'Elly' AND T1.last = 'Koss'
synthea,"From 7/9/2010 to 10/29/2013, how many black patients were immunized with the meningococcal MCV4P vaccine?",From 7/9/2010 to 10/29/2013 refers to DATE between '2010-07-09' and '2013-10-29'; black patients refers to race = 'black'; immunized with the meningococcal MCV4P vaccine refers to immunizations.DESCRIPTION = 'meningococcal MCV4P';,SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'meningococcal MCV4P' AND T2.DATE BETWEEN '2010-07-09' AND '2013-10-29' AND T1.race = 'black'
synthea,Give me the immunization codes and dates on which Ms. Jacquelyn Shanahan was immunized with influenza seasonal injectable preservative-free vaccine.,immunization codes refers to immunizations.CODE; immunization dates refers to immunizations.DATE; immunized with influenza seasonal injectable preservative-free vaccine refers to immunizations.DESCRIPTION = 'Influenza seasonal injectable preservative free'; 4 consecutive years refers to 4 succeeding years;,"SELECT DISTINCT T2.CODE, T2.DATE FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Ms.' AND T1.first = 'Jacquelyn' AND T1.last = 'Shanahan' AND T2.DESCRIPTION = 'Influenza  seasonal  injectable  preservative free'"
synthea,How long did Berry Keebler take the Acetaminophen 160 MG when he was admitted due to acute bronchitis?,"how long = SUBTRACT(medications.STOP, medications.START); Acetaminophen 160 MG refers to medications.DESCRIPTION = 'Acetaminophen 160 MG'; acute bronchitis refers to medications.REASONDESCRIPTION = 'Acute bronchitis (disorder)';","SELECT strftime('%J', T2.STOP) - strftime('%J', T2.START) AS takenDays FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Berry' AND T1.last = 'Keebler' AND T2.REASONDESCRIPTION = 'Acute bronchitis (disorder)' AND T2.DESCRIPTION = 'Acetaminophen 160 MG'"
synthea,"In 2010, how many single patients took Nitrofurantoin 5 mg/ML [Furadantin] to cure cystitis?","in 2010 refers to substr(medications.START, 1, 4) = '2010' AND substr(medications.stop, 1, 4) = '2010'; Nitrofurantoin 5 mg/ML [Furadantin] refers to medications.DESCRIPTION = 'Nitrofurantoin 5 MG/ML [Furadantin]'; cystitis refers to medications.REASONDESCRIPTION = 'Cystitis';","SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.marital = 'S' AND T2.REASONDESCRIPTION = 'Cystitis' AND T2.DESCRIPTION = 'Nitrofurantoin 5 MG/ML [Furadantin]' AND strftime('%Y', T2.START) = '2010'"
synthea,Tell me the reason for Lavelle Vandervort's encounter on 11/20/2013?,reason for encounter refers to encounters.REASONDESCRIPTION; on 11/20/2013 refers to encounters.DATE = '2013-11-20';,SELECT T2.REASONDESCRIPTION FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T2.DATE = '2013-11-20' AND T1.first = 'Lavelle' AND T1.last = 'Vandervort'
synthea,"From 1/9/2011 to 8/29/2012, how many German patients have their outpatient encounters?",From 1/9/2011 to 8/29/2012 refers to encounters.DATE between '2011-09-01' and '2012-08-29'; German patients refers to ethnicity = 'german'; outpatient encounters refers to encounters.DESCRIPTION = 'Outpatient Encounter';,SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T1.ethnicity = 'german' AND T2.DATE BETWEEN '2011-01-09' AND '2012-08-29' AND T2.DESCRIPTION = 'Outpatient Encounter'
synthea,What is the social security number and address of the patient who encountered viral sinusitis symptoms on 6/13/2008?,social security number refers to ssn; encountered viral sinusitis refers to encounters.REASONDESCRIPTION = 'Viral sinusitis (disorder)'; on 6/13/2008 refers to encounters.DATE = '2008-06-13';,"SELECT T1.ssn, T1.address FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T2.DATE = '2008-06-13' AND T2.REASONDESCRIPTION = 'Viral sinusitis (disorder)' AND T2.DESCRIPTION = 'Encounter for symptom'"
synthea,"Give me the reason, name of the drug, and duration of medication under encounter ID 23c293ec-dbae-4a22-896e-f12cf3c8bac3. Tell me if the patient is still alive.","reason refers to medications.REASONDESCRIPTION; name of the drug refers to medications.DESCRIPTION; duration of medication = SUBTRACT(julianday(medications.STOP, julianday(medications.START))); ecounter ID refers to encounters.ID; encounters.ID = '23c293ec-dbae-4a22-896e-f12cf3c8bac3'; if patients.deathdate is null then the patient is alive; if patients.deathdate is not null then the patient is not alive;","SELECT T2.REASONDESCRIPTION, T2.DESCRIPTION , strftime('%J', T2.STOP) - strftime('%J', T2.START) AS days , CASE WHEN T1.deathdate IS NULL THEN 'alive' ELSE 'dead' END FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.ENCOUNTER = '23c293ec-dbae-4a22-896e-f12cf3c8bac3'"
synthea,How many patients with shellfish allergies died when they were under 12 years old? Please give their full names.,"shellfish allergies refers to allergies.DESCRIPTION = 'Shellfish allergy'; died under 12 years old = DIVIDE(SUBTRACT(julianday(patients.deathdate), julianday(patients.birthdate)), 365) < 12; full names = first, last;","SELECT T1.first, T1.last FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Shellfish allergy' AND CAST((strftime('%J', T1.deathdate) - strftime('%J', T1.birthdate)) AS REAL) / 365 < 12"
synthea,How long was Mr. Major D'Amore prescribed with Amoxicillin 250 MG / Clavulanate 125 MG [Augmentin]?,"how long = SUBTRACT(julianday(medications.STOP, julianday(medications.START))); Amoxicillin 250 MG / Clavulanate 125 MG [Augmentin] refers to medications.DESCRIPTION = 'Amoxicillin 250 MG / Clavulanate 125 MG [Augmentin]';","SELECT strftime('%J', T2.STOP) - strftime('%J', T2.START) AS days FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = ' Amoxicillin 250 MG / Clavulanate 125 MG [Augmentin]' AND T1.first = 'Major' AND T1.last = 'D''Amore'"
synthea,How many types of medication have been prescribed to Mr. Major D'Amore since his visit to the hospital?,types of medications refers to medications.DESCRIPTION;,SELECT COUNT(DISTINCT T2.DESCRIPTION) FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Major' AND T1.last = 'D''Amore'
synthea,List out all the observation information collected for the patient named Bella Rolfson.,observation information refers to observations.DESCRIPTION AND observations.VALUE AND observations.UNITS;,"SELECT DISTINCT T2.DESCRIPTION, T2.VALUE, T2.UNITS FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Bella' AND T1.last = 'Rolfson'"
synthea,List out patient names with calcium deficiency.,"patient names = first, last; calcium deficiency refers to observations.DESCRIPTION = 'Calcium' and observations.VALUE < 8.6;","SELECT DISTINCT T1.first, T1.last FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Calcium' AND T2.VALUE < 8.6"
synthea,List out 5 most common conditions for underweight patient.,most common condition refers to MAX(COUNT(conditions.DESCRIPTION)); underweight patient refers to MIN(observations.VALUE WHERE observations.DESCRIPTION = 'Body Mass Index');,"SELECT DISTINCT T2.DESCRIPTION, T2.VALUE, T2.UNITS FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Body Mass Index' GROUP BY T2.VALUE ORDER BY COUNT(T2.VALUE) LIMIT 5"
synthea,How many mothers have taken immunization during prenatal visit?,expecting mothers can be attributed to encounters.REASONDESCRIPTION = 'Normal pregnancy';,SELECT COUNT(DISTINCT T2.PATIENT) FROM encounters AS T1 INNER JOIN immunizations AS T2 ON T1.PATIENT = T2.PATIENT WHERE T1.REASONDESCRIPTION = 'Normal pregnancy' AND T1.DATE = T2.DATE
synthea,What care plans have been received by Mrs. Elly Koss during year 1970?,"during year 1970 refers to substr(careplans.START, 1, 4) = '1970' and substr(careplans.STOP, 1, 4) = '1970';","SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND strftime('%Y', T2.START) = '2013'"
synthea,"What is the care plan, procedure, medication and the patient's full name for encounter 6f2e3935-b203-493e-a9c0-f23e847b9798?","car plan refers to careplans.DESCRIPTION; procedure refers to procedures.DESCRIPTION; medication refers to medications.DESCRIPTION; full name = first, last; encounter refers to encounters.ID; encounters.ID = '6f2e3935-b203-493e-a9c0-f23e847b9798';","SELECT DISTINCT T3.DESCRIPTION, T4.DESCRIPTION, T5.DESCRIPTION, T1.first, T1.last FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT INNER JOIN careplans AS T3 ON T1.patient = T3.PATIENT INNER JOIN procedures AS T4 ON T1.patient = T4.PATIENT INNER JOIN medications AS T5 ON T1.patient = T5.PATIENT WHERE T2.ID = '6f2e3935-b203-493e-a9c0-f23e847b9798'"
synthea,How many male patients are diagnosed with hypertension as compared to female patients?,male refers to gender = 'M'; diagnosed with hypertension refers to conditions.DESCRIPTION = 'Hypertension'; female refers to gender = 'F'; number of male patients with hypertension = count(patient WHERE gender = 'M' AND conditions.DESCRIPTION = 'Hypertension'); number of female patients with hypertension = count(patient WHERE gender = 'F' AND conditions.DESCRIPTION = 'Hypertension');,"SELECT COUNT(DISTINCT CASE WHEN T2.gender = 'M' THEN T2.patient END) AS Male , COUNT(DISTINCT CASE WHEN T2.gender = 'F' THEN T2.patient END) AS Female FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Hypertension'"
synthea,How many unmarried women were checked for normal pregnancy?,unmarried refers to marital = 'S'; women refers to gender = 'F'; normal pregnancy refers to conditions.DESCRIPTION = 'normal pregnancy';,SELECT COUNT(DISTINCT T2.patient) FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Normal pregnancy' AND T2.gender = 'F' AND T2.marital = 'S'
synthea,List out the procedure and medicine prescribed for drug overdose patients.,procedure refers to procedures.DESCRIPTION; medicine prescribed refers to medications.DESCRIPTION; drug overdose refers to encounters.REASONDESCRIPTION = 'Drug overdose';,"SELECT DISTINCT T2.DESCRIPTION, T3.DESCRIPTION FROM encounters AS T1 INNER JOIN procedures AS T2 ON T1.PATIENT = T2.PATIENT INNER JOIN medications AS T3 ON T1.PATIENT = T3.PATIENT WHERE T1.REASONDESCRIPTION = 'Drug overdose'"
synthea,What is the average body mass index for patients with higher total cholesterol?,"average body mass index = DIVIDE(SUM(observations.VALUE), COUNT(PATIENT) WHERE observations.DESCRIPTION = 'Body Mass Index'); body mass index refers to observations.DESCRIPTION = 'Body Mass Index'; higher total cholesterol refers to observations.DESCRIPTION = 'Total Cholesterol' and observations.VALUE > = 200;",SELECT SUM(T1.VALUE) / COUNT(T1.PATIENT) FROM observations AS T1 INNER JOIN ( SELECT DISTINCT PATIENT FROM observations WHERE DESCRIPTION = 'Total Cholesterol' AND VALUE > 200 ) AS T2 ON T1.PATIENT = T2.PATIENT WHERE T1.DESCRIPTION = 'Body Mass Index'
synthea,What is the difference between average glucose reading for patients in the 20s and 50s?,sum(case when t2.DATE-t1.birthdate between 20 and 29 then t2.VALUE else 0 end)/count(case when t2.DATE-t1.birthdate between 20 and 29 then t2.PATIENT else null end)-sum(case when t2.DATE-t1.birthdate between 50 and 59 then t2.VALUE else 0 end)/count(case when t2.DATE-t1.birthdate between 50 and 59 then t2.PATIENT else null end),"SELECT SUM(CASE WHEN ROUND((strftime('%J', T2.DATE) - strftime('%J', T1.birthdate)) / 365) BETWEEN 20 AND 30 THEN T2.VALUE ELSE 0 END) / COUNT(CASE WHEN ROUND((strftime('%J', T2.DATE) - strftime('%J', T1.birthdate)) / 365) BETWEEN 20 AND 30 THEN T2.PATIENT END) - SUM(CASE WHEN ROUND((strftime('%J', T2.DATE) - strftime('%J', T1.birthdate)) / 365) BETWEEN 50 AND 60 THEN T2.VALUE ELSE 0 END) / COUNT(CASE WHEN ROUND((strftime('%J', T2.DATE) - strftime('%J', T1.birthdate)) / 365) BETWEEN 50 AND 60 THEN T2.PATIENT END) AS difference FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Glucose'"
synthea,What is the percentage of the most common conditions for patients age 60 and above?,"most common condition refers to MAX(COUNT(conditions.DESCRIPTION)); age 60 and above refers to SUBTRACT(conditions.START, birthdate) > 60; percentage = MULTIPLY(DIVIDE(SUM(patients.patient WHERE MAX(COUNT(conditions.DESCRIPTION)) AND SUBTRACT(conditions.START, birthdate) > 60))), COUNT(patients.patient WHERE MAX(COUNT(conditions.DESCRIPTION)), 10);","SELECT CAST(SUM(CASE WHEN T5.DESCRIPTION = T3.DESCRIPTION THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.patient) FROM ( SELECT T2.DESCRIPTION, T1.patient FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE ROUND((strftime('%J', T2.START) - strftime('%J', T1.birthdate)) / 365) > 60 GROUP BY T2.DESCRIPTION ORDER BY COUNT(T2.DESCRIPTION) DESC LIMIT 1 ) AS T3 INNER JOIN patients AS T4 ON T3.patient = T4.patient INNER JOIN conditions AS T5 ON T4.patient = T5.PATIENT WHERE ROUND((strftime('%J', T5.START) - strftime('%J', T4.birthdate)) / 365) > 60"
synthea,Name the reason Walter Bahringer visited medical professionals in July 2009.,"reason for visiting medical professionals refers to encounters.REASONDESCRIPTION;  in July 2009 refers to  substr(encounters.DATE, 1, 7) = '2009-07' ;",SELECT T2.REASONDESCRIPTION FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Walter' AND T1.last = 'Bahringer' AND T2.DATE LIKE '2009-07%'
synthea,How old was Mr. Stacy Morar at the time of his first emergency room admission due to a drug overdose?,"how old = SUBTRACT(MIN(encounters.DATE), patients.birthdate); his first emergency room admission refers to MIN(encounters.DATE); drug overdose refers to encounters.REASONDESCRIPTION = 'Drug overdose' ;",SELECT T2.DATE - T1.birthdate AS age FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Stacy' AND T1.last = 'Morar' AND T2.DESCRIPTION = 'Emergency Room Admission' AND T2.REASONDESCRIPTION = 'Drug overdose' ORDER BY T2.DATE LIMIT 1
synthea,What drug is administered more often to treat child attention deficit disorder?,drug that was administered refers to medications.DESCRIPTION; child attention deficit disorder refers to medications.REASONDESCRIPTION = 'Child attention deficit disorder';,SELECT DESCRIPTION FROM medications WHERE REASONDESCRIPTION = 'Child attention deficit disorder' GROUP BY DESCRIPTION ORDER BY COUNT(DESCRIPTION) DESC LIMIT 1
synthea,Please include the full name of the patient who received a lung transplant.,"full name = first, last; lung transplant refers to procedures.DESCRIPTION = 'Transplant of lung (procedure)';","SELECT T2.first, T2.last FROM procedures AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Transplant of lung (procedure)'"
synthea,How many patients on average receive combined chemotherapy and radiation therapy procedures each year?,"average = DIVIDE(COUNT(procedures.PATIENT), COUNT(substr(procedures.DATE, 1, 4))); combined chemotherapy and radiation therapy refers to procedures.DESCRIPTION = 'Combined chemotherapy and radiation therapy (procedure)';","SELECT CAST(COUNT(PATIENT) AS REAL) / COUNT(DISTINCT strftime('%Y', DATE)) FROM procedures WHERE DESCRIPTION = 'Combined chemotherapy and radiation therapy (procedure)'"
synthea,Indicate the time frame and details of the most recent care plan suggested to Jacquelyn Shanahan.,"time frame = SUBTRACT(JULIANDAY(careplans.STOP), JULIANDAY(careplans.START)); details of care plan refers to careplans.DESCRIPTION; most recent care plan refers to MIN(careplans.STAR);","SELECT strftime('%J', T2.STOP) - strftime('%J', T2.START) AS timeFrame , T2.DESCRIPTION FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Jacquelyn' AND T1.last = 'Shanahan' ORDER BY T2.START DESC LIMIT 1"
synthea,Identify the allergy period for Isadora Moen and what triggered it.,"allergy period = SUBTRACT(allergies.START, allergies.STOP); what triggered the allergy refers to allergies.DESCRIPTION;","SELECT T2.START, T2.STOP, T2.DESCRIPTION FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Isadora' AND T1.last = 'Moen'"
synthea,How old was Mrs. Laronda Bernier at the time of her most recent medical encounter?,"how old = SUBTRACT(MIN(encounters.DATE), patients.birthdate); most recent medical encounter refers to MIN(encounters.DATE);",SELECT T2.DATE - T1.birthdate AS age FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Laronda' AND T1.last = 'Bernier' ORDER BY T2.DATE DESC LIMIT 1
synthea,What condition forced Mrs. Joye Homenick to seek medical attention in 2017?,"condition refers to conditions.DESCRIPTION; in 2017 refers to substr(conditions.START, 1, 4) = '2017';","SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Joye' AND T1.last = 'Homenick' AND strftime('%Y', T2.START) = '2017'"
synthea,When did Mrs. Joye Homenick receive her most recent influenza seasonal vaccine?,when a patient received her most recent vaccine refers to MAX(immunications.DATE); influenza seasonal vaccine refers to immunizations.DESCRIPTION = 'Influenza seasonal injectable preservative free';,SELECT T2.DATE FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Influenza  seasonal  injectable  preservative free' AND T1.first = 'Joye' AND T1.last = 'Homenick' ORDER BY T2.DATE DESC LIMIT 1
synthea,How long did Elly Koss have to take Acetaminophen 160 MG?,"how long = SUBTRACT(julianday(medications.stop), julianday(medications.START)); Acetaminophen 160 MG refers to medications.DESCRIPTION = 'Acetaminophen 160 MG';","SELECT strftime('%J', T2.STOP) - strftime('%J', T2.START) AS days FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND last = 'Koss' AND T2.DESCRIPTION = 'Acetaminophen 160 MG'"
synthea,How many patients sought medical attention due to a second-degree burn? Describe the care plan recommended to them.,second-degree burn refers to encounters.REASONDESCRIPTION = 'Second degree burn'; ;,"SELECT COUNT(DISTINCT T2.PATIENT), T2.DESCRIPTION FROM encounters AS T1 INNER JOIN careplans AS T2 ON T1.PATIENT = T2.PATIENT WHERE T2.REASONDESCRIPTION = 'Second degree burn'"
synthea,"Among all patients who sought medical attention in 2010 due to contact dermatitis, identify the percentage of females.","in 2010 refers to substr(encounters.DATE, 1, 4) = '2010'; contact dermatitis refers to encounters.REASONDESCRIPTION = 'Contact dermatitis'; percentage = MULTIPLY(DIVIDE(COUNT(encounters.PATIENT WHERE gender = 'F'), count(encounters.PATIENT) WHERE encounters.REASONDESCRIPTION = 'Contact dermatitis'), 1.0) females refers to gender = 'F';","SELECT CAST(SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.PATIENT) FROM encounters AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE strftime('%Y', T1.DATE) = '2010' AND T1.REASONDESCRIPTION = 'Contact dermatitis'"
synthea,How many interactions did Lorri Simons have with medical professionals between 2010 and 2017? What percentage of encounters are attributed to prenatal visits?,"between 2010 and 2017 refers to substr(encounters.DATE, 1, 4) between '2010' and '2017'; percentage = MULTIPLY(DIVIDE(COUNT(encounters.ID WHERE DESCRIPTION = 'Prenatal visit'), count(encounters.ID)), 1.0); prenatal visits refers to encounters.DESCRIPTION = 'Prenatal visit';","SELECT COUNT(T1.patient) , CAST(SUM(CASE WHEN T2.DESCRIPTION = 'Prenatal visit' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.patient) FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Lorri' AND T1.last = 'Simonis' AND strftime('%Y', T2.DATE) BETWEEN '2010' AND '2017'"
synthea,State description of medication taken by Joe Homenick.,description of medication refers to medications.DESCRIPTION;,SELECT T1.DESCRIPTION FROM medications AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.first = 'Joye' AND T2.last = 'Homenick'
synthea,What is the start date of the care plan of the patient whose maiden name is Adams?,start date of the care plan refers to careplans.START;,SELECT DISTINCT T1.START FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.maiden = 'Adams'
synthea,"Among the male patients, who has the earliest starting date of the care plan?",male patients refers to gender = 'M'; earliest starting date of the care plan refers to MIN(careplans.START);,"SELECT T2.first, T2.last FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.gender = 'M' ORDER BY T1.START LIMIT 1"
synthea,What is the percentage of Hispanic patients who stopped their care plan in 2011?,"Hispanic patients refers to ethnicity = 'hispanic'; percentage = MULTIPLY(DIVIDE(COUNT(careplans.PATIENT WHERE ethnicity = 'hispanic'), COUNT(careplans.PATIENT)), 1.0); stopped their care plan in 2011 refers to substr(careplans.stop, 1, 4) = '2011';","SELECT CAST(SUM(CASE WHEN T2.race = 'hispanic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.PATIENT) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE strftime('%Y', T1.stop) = '2011'"
synthea,State the description of the reason why Angelo Buckridge needs the care plan.,description of the reason of the care plan refers to careplans.REASONDESCRIPTION;,SELECT DISTINCT T1.REASONDESCRIPTION FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.first = 'Angelo' AND T2.last = 'Buckridge'
synthea,Mention the description of the care plan of American patients.,American refers to ethnicity = 'american';,SELECT DISTINCT T1.DESCRIPTION FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.ethnicity = 'american'
synthea,What are the medical encounter ids of patients who were born in Pembroke MA US?,medical encounter ids careplans.ID; born in Pembroke MA US refers to birthplace = 'Pembroke MA US';,SELECT DISTINCT T1.ENCOUNTER FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.birthplace = 'Pembroke MA US'
synthea,List out the start date of the care plan of alive patients.,start of the care plan refers to careplans.START; alive patients refers to deathdate is null;,SELECT DISTINCT T1.START FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.deathdate IS NULL
synthea,How many white patients have the reason code of 10509002?,white refers to race = 'white'; reason code of 10509002 refers to careplans.REASONCODE = '10509002';,SELECT COUNT(DISTINCT T1.PATIENT) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.race = 'white' AND T1.REASONCODE = '10509002'
synthea,"List out full name of patients who have ""Diabetic diet"" in the description of the care plan.","full name = first, last; Diabetic diet refers to careplans.DESCRIPTION = 'Diabetic diet';","SELECT DISTINCT T2.first, T2.last FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Diabetic diet'"
synthea,List out the stop date of the care plan of dead patients.,stop date of the care plan refers to careplans.STOP; dead patients refers to deathdate is not null;,SELECT DISTINCT T1.STOP FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.deathdate IS NOT NULL AND T1.STOP IS NOT NULL
synthea,How many Italian patients have the care plan code of 304510005?,Italian patients refers to ethnicity = 'italian';,SELECT COUNT(DISTINCT T2.patient) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.ethnicity = 'italian' AND T1.CODE = '304510005'
synthea,What is the percentage of female patients who started the care plan in 2010?,"female patients refers to gender = 'F'; started the care plan in 2010 refers to substr(careplans.START, 1, 4) = '2010'; percentage = MULTIPLY(DIVIDE(COUNT(patients.patient WHERE patients.gender = 'F'), COUNT(patients.patient) WHERE substr(careplans.START, 1, 4) = '2010'), 100);","SELECT CAST(SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.PATIENT) AS percentage FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE strftime('%Y', T1.START) = '2010'"
synthea,How many black patients stopped their care plan in 2017?,"black refers to race = 'black'; stopped their care plan in 2017 refers to substr(careplans.STOP, 1, 4) = '2017';","SELECT COUNT(DISTINCT T2.patient) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.race = 'black' AND strftime('%Y', T1.STOP) = '2017'"
synthea,How many male patients have prediabetes condition?,male refers to gender = 'M'; prediabetes condition refers to conditions.DESCRIPTION = 'Prediabetes';,SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 WHERE T2.DESCRIPTION = 'Prediabetes' AND T1.gender = 'M'
synthea,List the full names of patients with nut allergy.,"full names = first, last; nut allergy refers to allergies.DESCRIPTION = 'Allergy to nut';","SELECT DISTINCT T1.first, T1.last FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Allergy to nut'"
synthea,Describe the condition of patient Wilmer Koepp.,,SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Wilmer' AND T1.last = 'Koepp'
synthea,"Among the patients with viral sinusitis condition, which patient's gender is most affected? Provide the number for each respectively.",viral sinusitis condition refers to conditions.DESCRIPTION = 'Viral sinusitis (disorder)'; gender that is most affected refers to MAX(COUNT(gender WHERE conditions.DESCRIPTION = 'Viral sinusitis (disorder)'));,"SELECT SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END), SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Viral sinusitis (disorder)'"
synthea,Provide the full names of patients who have been taking Penicillin V Potassium 250 MG since 1948.,"full names = first, last; Penicillin V Potassium 250 MG refers to medications.DESCRIPTION = 'Penicillin V Potassium 250 MG'; since 1948 refers to substr(medications.START, 1, 4) > = '1948';","SELECT DISTINCT T1.first, T1.last FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Penicillin V Potassium 250 MG' AND strftime('%Y', T2.START) >= '1948'"
synthea,How many white patients whose birth year is 1935 have a stroke?,"white refers to race = 'white'; birth year is 1935 refers to substr(birthdate, 1, 4) = '1935'; stroke refers to conditions.DESCRIPTION = 'Stroke';","SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.patient WHERE strftime('%Y', T1.birthdate) = '1935' AND T1.race = 'white' AND T2.DESCRIPTION = 'Stroke'"
synthea,Which conditions the patient has when receiving the IPV immunization?,IPV immunization refers to immunizations.DESCRIPTION = 'IPV';,SELECT DISTINCT T2.DESCRIPTION FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT INNER JOIN immunizations AS T3 ON T1.patient = T3.PATIENT WHERE T3.DESCRIPTION = 'IPV'
synthea,List the patient ids whose disease has the most occurrences.,patient ids refers to patients.patient; disease with the most occurrence refers to MAX(all_prevalences.OCCURENCES);,SELECT T1.patient FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT INNER JOIN all_prevalences AS T3 ON T3.ITEM = T2.DESCRIPTION ORDER BY T3.OCCURRENCES DESC LIMIT 1
synthea,List all the full names of patients with a condition described as cystitis.,"full names = first, last; condition described as cystitis refers to conditions.DESCRIPTION = ''Cystitis';","SELECT DISTINCT T1.first, T1.last FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.patient WHERE T2.DESCRIPTION = 'Cystitis'"
synthea,How many male patients have been described as immune to quadrivalent HPV?,male refers to gender = 'M'; immune to quadrivalent HPV refers to immunizations.DESCRIPTION = 'HPV quadrivalent';,SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'HPV  quadrivalent' AND T1.gender = 'M'
synthea,Indicate the start date of patient Walter Bahringer's care plan.,start date of the care plan refers to careplans.START;,SELECT DISTINCT T2.start FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Walter' AND T1.last = 'Bahringer'
synthea,Describe the care plans of patient Major D'Amore's plan of care.,,SELECT DISTINCT T2.DESCRIPTION FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Major' AND T1.last = 'D''Amore'
synthea,Calculate the percentage of male patients with viral sinusitis condition.,"percentage = MULTIPLY(DIVIDE(COUNT(patients.patient WHERE gender = 'M'), COUNT(patients.patient) WHERE conditions.DESCRIPTION = 'Viral sinusitis (disorder))), 100); male patients refers to gender = 'M'; viral sinusitis condition refers to conditions.DESCRIPTION = 'Viral sinusitis (disorder)';",SELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Viral sinusitis (disorder)'
synthea,"Among the patients who have been using Penicillin V Potassium 250 MG, what percentage of patients are female?","Penicillin V Potassium 250 MG refers to medications.DESCRIPTION = 'Penicillin V Potassium 250 MG'; percentage = MULTIPLY(DIVIDE(patients.patient WHERE gender = 'F'), COUNT(patients.patient) WHERE medications.DESCRIPTION = 'Penicillin V Potassium 250 MG'), 100) female refers to gender = 'F';",SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.patient) FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Penicillin V Potassium 250 MG'
synthea,"Among the white patients, what is the average body height of the patients?",white refers to race = 'white'; average body height = AVG(observations.VALUE WHERE observations.DESCRIPTION = 'Body Height'); body height refers to observations.DESCRIPTION = 'Body Height';,SELECT AVG(T1.VALUE) FROM observations AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.race = 'white' AND T1.DESCRIPTION = 'Body Height'
synthea,"Indicate the care plan needed for the patient living at 179 Sydni Roads, Taunton, MA 02780 US.","living at 179 Sydni Roads, Taunton, MA 02780 US refers to address = '179 Sydni Roads Taunton MA 02780 US';",SELECT T1.DESCRIPTION FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.address = '179 Sydni Roads Taunton MA 02780 US'
synthea,Provide the allergen of the Dominican patient named Dirk Languish.,allergen refers to allergies.DESCRIPTION;,SELECT T1.DESCRIPTION FROM allergies AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.first = 'Dirk' AND T2.last = 'Langosh' AND T2.ethnicity = 'dominican'
synthea,How many patients who are allergic to peanuts have asthma?,allergic to peanuts refers to allergies.DESCRIPTION = 'Allergy to peanuts'; asthma refers to conditions.DESCRIPTION = 'Asthma';,SELECT COUNT(DISTINCT T2.patient) FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient INNER JOIN allergies AS T3 ON T2.patient = T3.PATIENT WHERE T1.DESCRIPTION = 'Asthma' AND T3.DESCRIPTION = 'Allergy to peanuts'
synthea,Who is the 44-year-old patient diagnosed with drug overdose?,"44-year-old = DIVIDE(SUBTRACT(julianday(conditions.START), julianday(patients.birthdate)), 365, 0) = 44;","SELECT T2.first, T2.last FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Drug overdose' AND ROUND((strftime('%J', T2.deathdate) - strftime('%J', T2.birthdate)) / 365) = 44"
synthea,Provide the social security number of the patient with the highest systolic blood pressure.,social security number refers to ssn; highest systolic blood pressure refers to MAX(observations.VALUE WHERE observations.DESCRIPTION = 'Systolic Blood Pressure');,SELECT T2.ssn FROM observations AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Systolic Blood Pressure' ORDER BY T1.VALUE DESC LIMIT 1
synthea,What is the care plan description of the prevalent disease with the highest prevalence percentage?,highest prevalence percentage refers to MAX(PREVALENCE PERCENTAGE);,"SELECT T4.DESCRIPTION FROM all_prevalences AS T1 INNER JOIN conditions AS T2 ON T2.DESCRIPTION = T1.ITEM INNER JOIN encounters AS T3 ON T2.ENCOUNTER = T3.ID INNER JOIN careplans AS T4 ON T4.ENCOUNTER = T3.ID ORDER BY T1.""PREVALENCE PERCENTAGE"" DESC LIMIT 1"
synthea,What is the care plan for the patient with social security number 999-15-3685?,social security number refers to ssn; ssn = '999-15-3685';,SELECT DISTINCT T1.DESCRIPTION FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.ssn = '999-15-3685'
synthea,Calculate the average age of the male patients that have hypertension.,"average age = AVG(DIVIDE(SUBTRACT(deathdate is null WHERE (julianday(substr(datetime('now'), 1, 10)))), julianday(patients.birthdate)), 365); male refers to gender = 'M'; hypertension refers to conditions.DESCRIPTION = 'Hypertension'","SELECT SUM(CASE WHEN T2.deathdate IS NULL THEN ROUND((strftime('%J', date('now')) - strftime('%J', T2.birthdate)) / 365) ELSE ROUND((strftime('%J', T2.deathdate) - strftime('%J', T2.birthdate)) / 365) END) / COUNT(T2.patient) FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Hypertension' AND T2.gender = 'M'"
synthea,List 5 patients' name that need medication due to streptococcal sore throat disorder.,"patients name = first, last; streptococcal sore throat disorder refers to medications.REASONDESCRIPTION = 'Streptococcal sore throat (disorder)';","SELECT DISTINCT T2.first, T2.last FROM medications AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.REASONDESCRIPTION = 'Streptococcal sore throat (disorder)' LIMIT 5"
synthea,Who is the patient with a body weight of 61.97 kg?,body weight of 61.97 kg refers to observations.DESCRIPTION = 'Body Weight' AND observations.VALUE = 61.97; observations.UNITS = 'kg',"SELECT T2.first, T2.last FROM observations AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Body Weight' AND T1.UNITS = 'kg' AND T1.VALUE = 61.97"
synthea,"Among the male patients, list down 5 birth dates of patients taking the medication ""Penicillin V Potassium 250 MG"".",male patients refers to gender = 'M'; Penicillin V Potassium 250 MG refers to medications.DESCRIPTION = 'Penicillin V Potassium 250 MG';,SELECT DISTINCT T2.birthdate FROM medications AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Penicillin V Potassium 250 MG' AND T2.gender = 'M' LIMIT 5
synthea,List down the full name of Irish patients diagnosed with the prevalent diseases that have an occurrence greater than the 96% of the average occurrences of all conditions.,"full name = first, last; Irish refers to ethnicity = 'irish'; prevalent diseases that have an occurrence greater than the 96% of the average occurrences of all conditions = OCCURRENCES > (AVG(MULTIPLY(all_prevalences.OCCURRENCES, 0.96)));","SELECT DISTINCT T2.first, T2.last FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient INNER JOIN all_prevalences AS T3 ON T1.DESCRIPTION = T3.ITEM WHERE T2.ethnicity = 'irish' AND 100 * CAST(T3.OCCURRENCES AS REAL) / ( SELECT AVG(OCCURRENCES) FROM all_prevalences ) > 96"
synthea,What is the difference between the number of married patients and the number of single patients with diabetes?,"difference = SUBTRACT(patients.patient WHERE marital = 'M'), COUNT(patients.patient WHERE marital = 'S') WHERE conditions.DESCRIPTION = 'Diabetes'); married patients refers to marital = 'M'; single patients refers to marital = 'S'; diabetes refers to conditions.DESCRIPTION = 'Diabetes';",SELECT SUM(CASE WHEN T2.marital = 'M' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.marital = 'S' THEN 1 ELSE 0 END) FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Diabetes'
car_retails,List the country and how many customers are there.,,"SELECT country, COUNT(customerNumber) FROM customers GROUP BY country"
car_retails,Which different vendor has the most amount of orders? Calculate the total estimated earnings.,"amount of order refers to quantityOrdered; most amount of orders refers to SUM(QuantityOrdered); estimated earnings refers to expected profits; expected profits = SUBTRACT(msrp, buyPrice);","SELECT DISTINCT T1.productVendor, T1.MSRP - T1.buyPrice FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode GROUP BY T1.productVendor, T1.MSRP, T1.buyPrice ORDER BY COUNT(T2.quantityOrdered) DESC LIMIT 1"
car_retails,Who is the sales agent of the distinct customer who paid the highest amount in the year 2004?,,"SELECT DISTINCT T3.lastName, T3.firstName FROM payments AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber INNER JOIN employees AS T3 ON T2.salesRepEmployeeNumber = T3.employeeNumber WHERE STRFTIME('%Y', T1.paymentDate) = '2004' ORDER BY T1.amount DESC LIMIT 1"
car_retails,What was the total price of the products shipped to Rovelli Gifts Distributors Ltd. between 1/1/2003 and 12/31/2003?,"Mini Gifts Distributors Ltd. Is the customer name; shippedDate between '2003-01-01' and '2003-12-31'; total price = MULTIPLY(quantityOrdered, priceEach);","SELECT T3.priceEach * T3.quantityOrdered FROM customers AS T1 INNER JOIN orders AS T2 ON T1.customerNumber = T2.customerNumber INNER JOIN orderdetails AS T3 ON T2.orderNumber = T3.orderNumber WHERE T1.customerName = 'Rovelli Gifts' AND T2.status = 'Shipped' AND STRFTIME('%Y', T2.shippedDate) = '2003'"
car_retails,How many employees are there in Sydney?,sales agent and sales representative are synonyms; Sydney is a city;,SELECT COUNT(employeeNumber) FROM employees WHERE officeCode = ( SELECT officeCode FROM offices WHERE city = 'Sydney' )
car_retails,Which sales representatives in New York city whose leader is Anthony Bow with the employee number is 1143? Indicate their employee numbers.,reportsTO' is the leader of the 'employeeNumber';,SELECT T1.employeeNumber FROM employees AS T1 INNER JOIN offices AS T2 ON T1.officeCode = T2.officeCode WHERE T1.reportsTo = 1143 AND T2.city = 'NYC'
car_retails,"What is the average, highest and lowest annual payments collected between 1/1/2003 to 12/31/2005?","paymentDate BETWEEN '2003-01-01' AND '2005-12-31'; average annual payments = DIVIDE(SUM(amount), 3);","SELECT CAST(SUM(T1.amount) AS REAL) / 3, MAX(T1.amount) , MIN(T1.amount) FROM payments AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE T1.paymentDate BETWEEN '2003-01-01' AND '2005-12-31'"
car_retails,Which countries do the top 5 highest paying customers in a single payment come from? Indicate their entire address.,highest paying customer refers to MAX(amount); entire address = addressLine1+addressLine2;,"SELECT DISTINCT T2.country, T2.addressLine1, T2.addressLine2 FROM payments AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber ORDER BY T1.amount DESC LIMIT 5"
car_retails,How many checks were issued by Euro+ Shopping Channel in the year 2004?,Euro+ Shopping Channel is a customer name; year(paymentDate) = '2004';,"SELECT COUNT(T1.checkNumber) FROM payments AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE customerName = 'Euro+ Shopping Channel' AND STRFTIME('%Y', T1.paymentDate) = '2004'"
car_retails,"Of all the classic cars, with a product scale of 1:18, which product is the most ordered product by customers?",classic car is a product line; most ordered product refers to MAX(quantityOrdered);,SELECT T1.productName FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode WHERE T1.productScale = '1:18' AND T1.productLine = 'Classic Cars' GROUP BY T1.productName ORDER BY SUM(T2.quantityOrdered) DESC LIMIT 1
car_retails,"How many customers have a credit limit of not more than 100,000 and which customer made the highest total payment amount for the year 2004?",creditLimit < = 100000; total payment amount refers to amount; highest total payment amount refers to MAX(amount); year(paymentDate) = '2004';,"SELECT ( SELECT COUNT(customerNumber) FROM customers WHERE creditLimit <= 100000 AND customerNumber IN ( SELECT customerNumber FROM payments WHERE STRFTIME('%Y', paymentDate) = '2004' ) ), T1.customerName FROM customers AS T1 INNER JOIN payments AS T2 ON T1.customerNumber = T2.customerNumber WHERE T1.creditLimit <= 100000 AND STRFTIME('%Y', T2.paymentDate) = '2004' GROUP BY T1.customerNumber, T1.customerName ORDER BY SUM(T2.amount) DESC LIMIT 1"
car_retails,"Which of the customers, whose Tokyo-based sales representative reports to the Vice President of Sales whose employee number is 1056, has paid the highest payment? List the customer's name, the contact person and calculate the total amount of that customer's total payments.",Tokyo is a city; 'reportsTO' is the leader of the 'employeeNumber'; highest payment refers to MAX(amount); total amount of payments = SUM(amount);,"SELECT T2.customerName, T2.contactFirstName, T2.contactLastName, SUM(T3.amount) FROM employees AS T1 INNER JOIN customers AS T2 ON T2.salesRepEmployeeNumber = T1.employeeNumber INNER JOIN payments AS T3 ON T2.customerNumber = T3.customerNumber INNER JOIN offices AS T4 ON T1.officeCode = T4.officeCode WHERE T4.city = 'Tokyo' AND T1.reportsTo = 1056 GROUP BY T2.customerName, T2.contactFirstName, T2.contactLastName ORDER BY amount DESC LIMIT 1"
car_retails,Which two products has the highest and lowest expected profits? Determine the total price for each product in terms of the largest quantity that was ordered.,"expected profits = SUBTRACT(msrp, buyPrice); total price = MULTIPLY(quantityOrdered, priceEach)","SELECT T2.productName, SUM(T1.quantityOrdered * T1.priceEach) FROM orderdetails AS T1 INNER JOIN ( SELECT productCode, productName FROM products ORDER BY MSRP - buyPrice DESC LIMIT 1 ) AS T2 ON T1.productCode = T2.productCode UNION SELECT T2.productName, SUM(quantityOrdered * priceEach) FROM orderdetails AS T1 INNER JOIN ( SELECT productCode, productName FROM products ORDER BY MSRP - buyPrice ASC LIMIT 1 ) AS T2 ON T1.productCode = T2.productCode"
car_retails,How many different orders with a total price greater than 4000 are cancelled?,"total price = MULTIPLY(quantityOrdered, priceEach) > 4000; cancelled orders refer to status = 'Cancelled';",SELECT COUNT(DISTINCT T1.orderNumber) FROM orderdetails AS T1 INNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber WHERE T1.quantityOrdered * T1.priceEach > 4000 AND T2.status = 'Cancelled'
car_retails,How many distinct orders were there in 2003 when the quantity ordered was less than 30?,year(orderDate) = '2003'; quantityOrdered < 30;,"SELECT COUNT(DISTINCT T1.orderNumber) FROM orderdetails AS T1 INNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber WHERE T1.quantityOrdered < 30 AND STRFTIME('%Y', T2.orderDate) = '2003'"
car_retails,What is the total value of cancelled orders?,"total value = SUM(MULTIPLY(quantityOrdered, priceEach)); cancelled orders refers to status = 'Cancelled';",SELECT SUM(T1.quantityOrdered * T1.priceEach) FROM orderdetails AS T1 INNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber WHERE T2.status = 'Cancelled'
car_retails,Please calculate the total value of Motorcycles orders.,"Motorcycle is a product line; total value = SUM(MULTIPLY(quantityOrdered, priceEach));",SELECT SUM(T1.quantityOrdered * T1.priceEach) FROM orderdetails AS T1 INNER JOIN products AS T2 ON T1.productCode = T2.productCode WHERE T2.productLine = 'Motorcycles'
car_retails,How many Planes orders were there?,Planes is a product line;,SELECT COUNT(T1.productCode) FROM orderdetails AS T1 INNER JOIN products AS T2 ON T1.productCode = T2.productCode WHERE T2.productLine = 'Planes'
car_retails,How many orders which expected profits greater than 100?,"expected profits greater than 100 = (SUBTRACT(msrp, buyPrice))>100;",SELECT COUNT(T1.productCode) FROM orderdetails AS T1 INNER JOIN products AS T2 ON T1.productCode = T2.productCode WHERE T2.MSRP - T2.buyPrice > 100
car_retails,Please calculate the average total price of orders from Exoto Designs Vendor in 2005.,"average total price = DIVIDE(SUM(MULTIPLY(quantityOrdered, priceEach))), COUNT(orderNumber)); year(orderDate) = '2005';","SELECT SUM(T2.quantityOrdered * T2.priceEach) / COUNT(T3.orderNumber) FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode INNER JOIN orders AS T3 ON T2.orderNumber = T3.orderNumber WHERE T1.productVendor = 'Exoto Designs' AND STRFTIME('%Y', T3.orderDate) = '2005'"
car_retails,How many sales representatives who have office code is 1?,sales representative refers to jobTitle = 'Sales Rep';,SELECT COUNT(officeCode) FROM employees WHERE jobTitle = 'Sales Rep' AND officeCode = 1
car_retails,"Please list different customer names with the payment amount of over 50,000.",amount > 50000;,SELECT DISTINCT T2.customerName FROM payments AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE T1.amount > 50000
car_retails,Please calculate the total payment amount of customers who come from the USA.,USA is a country; total amount payment refers to SUM(amount);,SELECT SUM(T1.amount) FROM payments AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE T2.country = 'USA'
car_retails,What are the total payments of customers with no credit limit in 2003?,total payment refers to SUM(amount); no credit limit refers to creditLimit = 0; year(paymentDate) = '2003';,"SELECT SUM(amount) FROM payments WHERE STRFTIME('%Y', paymentDate) = '2003' AND customerNumber IN ( SELECT customerNumber FROM customers WHERE creditLimit = 0 )"
car_retails,Please list the name and phone number of the customer whose order was cancelled.,cancelled order refers to status = 'Cancelled';,"SELECT T2.customerName, T2.phone FROM orders AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE T1.status = 'Cancelled'"
car_retails,How many French customers shipped 2 orders which have been cancelled?,French is a nationality of country = 'France'; cancelled orders refers to status = 'Cancelled';,SELECT COUNT(T2.country) FROM orders AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE T1.status = 'Shipped' AND T2.country = 'France' GROUP BY T2.customerNumber HAVING COUNT(T1.status) = 2
car_retails,Please calculate the average total price of shipped orders from German customers.,"average total price = DIVIDE(MULTIPLY(quantityOrdered, priceEach)), COUNT(orderNumber)); German is a nationality of country = 'Germany'; shipped orders refers to status = 'Shipped';",SELECT SUM(T3.quantityOrdered * T3.priceEach) / COUNT(T2.orderNumber) FROM customers AS T1 INNER JOIN orders AS T2 ON T1.customerNumber = T2.customerNumber INNER JOIN orderdetails AS T3 ON T2.orderNumber = T3.orderNumber WHERE T2.status = 'Shipped' AND T1.country = 'Germany'
car_retails,List out full name of employees who are working in Tokyo?,Tokyo is a city; full name = firstName+lastName;,"SELECT T1.firstName, T1.lastName FROM employees AS T1 INNER JOIN offices AS T2 ON T1.officeCode = T2.officeCode WHERE T2.city = 'Tokyo'"
car_retails,How many Sales Rep who are working in Tokyo? List out email and full name of those employees.,Sales Rep is a job title; Tokyo is a city; full name = firstName+lastName;,"SELECT T1.firstName, T1.lastName, T1.email FROM employees AS T1 INNER JOIN offices AS T2 ON T1.officeCode = T2.officeCode WHERE T2.city = 'Tokyo' AND T1.jobTitle = 'Sales Rep'"
car_retails,State the email of those who are staff of Murphy Diane whose number is 1002 and living in San Francisco,staff of refers to reportsTO; San Francisco is a city;,SELECT T1.email FROM employees AS T1 INNER JOIN offices AS T2 ON T1.officeCode = T2.officeCode WHERE T1.reportsTo = 1002 AND T2.city = 'San Francisco'
car_retails,"Determine the email and Code of employee who are working at United State, state MA",code of employee refers to employeeNumber; United States of America refers to country = 'USA';,"SELECT T1.email, T1.employeeNumber FROM employees AS T1 INNER JOIN offices AS T2 ON T1.officeCode = T2.officeCode WHERE T2.state = 'MA' AND T2.country = 'USA'"
car_retails,How many Sales Manager who are working in Sydney? List out their email.,Sales Manager is a job title; Sydney is a city;,SELECT T1.email FROM employees AS T1 INNER JOIN offices AS T2 ON T1.officeCode = T2.officeCode WHERE T1.jobTitle LIKE '%Sales Manager%' AND T2.city = 'Sydney'
car_retails,How many employees who are living in Australia and have the credit limit under 200000? State their email address and countries where they are working.,Australia is a country; creditLimit < 20000;,"SELECT T2.email, T3.country FROM customers AS T1 INNER JOIN employees AS T2 ON T1.salesRepEmployeeNumber = T2.employeeNumber INNER JOIN offices AS T3 ON T2.officeCode = T3.officeCode WHERE T3.country = 'Australia' AND T1.creditLimit < 200000 AND T2.jobTitle = 'Sales Rep'"
car_retails,State 10 emails of UK Sales Rep who have the lowest credit limit.,UK is a country; Sales Rep is a job title;,SELECT DISTINCT T2.email FROM customers AS T1 INNER JOIN employees AS T2 ON T1.salesRepEmployeeNumber = T2.employeeNumber WHERE T2.jobTitle = 'Sales Rep' AND T1.country = 'UK' ORDER BY T1.creditLimit LIMIT 10
car_retails,How many Australian customers who have credit line under 220000?,Australian is a nationality of country = 'Australia'; credit line refers to creditLimit; creditLimit < 220000;,SELECT COUNT(creditLimit) FROM customers WHERE creditLimit < 220000 AND country = 'Australia'
car_retails,List out 3 customer numbers who have highest amount payment,amount of payment refers to amount;,SELECT customerNumber FROM payments ORDER BY amount DESC LIMIT 3
car_retails,"Determine the email and Code of employee who are working at United State, state CA",United States of America refers to country = 'USA'; code of employee refers to employeeNumber;,"SELECT T1.email, T1.employeeNumber FROM employees AS T1 INNER JOIN offices AS T2 ON T1.officeCode = T2.officeCode WHERE T2.country = 'USA' AND T2.state = 'CA' GROUP BY T1.email, T1.officeCode"
car_retails,List out full name of employees who are working in Boston?,"full name = contactFirstName, contactLastName; Boston is a city;","SELECT T1.firstName, T1.lastName FROM employees AS T1 INNER JOIN offices AS T2 ON T1.officeCode = T2.officeCode WHERE T2.city = 'Boston'"
car_retails,State top 3 emails of UK Sales Rep who have the highest credit limit.,UK is a country; Sales Rep is a job title;,"SELECT T2.email FROM customers AS T1 INNER JOIN employees AS T2 ON T1.salesRepEmployeeNumber = T2.employeeNumber WHERE T2.jobTitle = 'Sales Rep' AND T1.country = 'UK' GROUP BY T1.customerName, T2.email ORDER BY SUM(T1.creditLimit) DESC LIMIT 3"
car_retails,How many customers who are in Norway and have credit line under 220000?,Norway is a country; credit line refers to creditLimit; creditLimit<220000;,SELECT COUNT(creditLimit) FROM customers WHERE creditLimit < 220000 AND country = 'Norway'
car_retails,List out full name and email of employees who are working in Paris?,full name = firstName+LastName; Paris is a city;,"SELECT T1.firstName, T1.lastName, T1.email FROM employees AS T1 INNER JOIN offices AS T2 ON T1.officeCode = T2.officeCode WHERE T2.city = 'Paris'"
car_retails,"List the product code of the top five motorcycles, by descending order, the number of quantity in stock.",motorcycle is a product line;,"SELECT productCode, quantityInStock FROM products WHERE productLine = 'Motorcycles' ORDER BY quantityInStock DESC LIMIT 5"
car_retails,"Among the German customers, how many of the them has credit limit of zero?",German is a nationality of country = 'Germany'; CREDITLIMIT = 0,SELECT COUNT(customerNumber) FROM customers WHERE creditLimit = 0 AND country = 'Germany'
car_retails,"From 2003 to 2004, how many customers have paid more than three times?",paymentdate BETWEEN '2003-01-01' AND '2004-12-31'; customers who have paid more than three times refers to (COUNT(customernumber)>3);,"SELECT COUNT(customernumber) FROM ( SELECT customernumber FROM payments WHERE STRFTIME('%Y', paymentDate) >= '2003' AND STRFTIME('%Y', paymentDate) <= '2004' GROUP BY customernumber HAVING COUNT(customernumber) > 3 ) T"
car_retails,What is the average actual profit by 1937 Lincoln Berline?,"average actual profit = AVG(SUBTRACT(priceEach, buyPrice)); 1937 Lincoln Berline is a product name;",SELECT SUM(T1.priceEach - T2.buyPrice) / COUNT(*) FROM orderdetails AS T1 INNER JOIN products AS T2 ON T1.productCode = T2.productCode WHERE T2.productName = '1937 Lincoln Berline'
car_retails,"Among the motorcycles with product scale of 1:10, which of them is the most ordered by American customers?",motorcycle is a product line; American is a nationality of country = 'USA';,SELECT T1.productName FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode INNER JOIN orders AS T3 ON T2.orderNumber = T3.orderNumber INNER JOIN customers AS T4 ON T3.customerNumber = T4.customerNumber WHERE T1.productLine = 'Motorcycles' AND T1.productScale = '1:10' AND T4.country = 'USA' GROUP BY T1.productName ORDER BY SUM(T2.quantityOrdered) DESC LIMIT 1
car_retails,"Between 8/1/2003 and 8/30/2004, how many checks were issued by Mini Gifts Distributors Ltd.? Please list their check numbers.",paymentDate BETWEEN '2003-08-01' AND '2004-08-30'; Mini Gifts Distributors Ltd. Is a customer name;,SELECT T1.checkNumber FROM payments AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE T1.paymentDate >= '2003-08-01' AND T1.paymentDate <= '2004-08-30' AND T2.customerName = 'Mini Gifts Distributors Ltd.'
car_retails,"For the planes which has the hightest total price, how much it exceeds the average?","plane is a product line; total price = MULTIPLY(quantityOrdered, priceEach); how much the total price exceeds the average = SUBTRACT(MAX(MULTIPLY(quantityOrdered, priceEach))), AVG(priceEach));",SELECT MAX(quantityOrdered * priceEach) - AVG(priceEach) FROM orderdetails WHERE productCode IN ( SELECT productCode FROM products WHERE productLine = 'Planes' )
car_retails,What is the total value of shipped vintage car orders from 2003-2004?,"total value = SUM(MULTIPLY(quantityOrdered, priceEach)); shipped orders refers to status = 'Shipped'; vintage car is a product line; year(orderDate) between 2003 and 2004;",SELECT SUM(T2.priceEach * T2.quantityOrdered) FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode INNER JOIN orders AS T3 ON T2.orderNumber = T3.orderNumber WHERE T3.status = 'Shipped' AND T3.orderDate BETWEEN '2003-01-01' AND '2004-12-31'
car_retails,Who is the sales agent of the customer who has made the highest payment? Include the full names of employee and his/her supervisor.,payment refers to amount; full name = firstName+lastName; supervisor refers to reportsTO; 'reportsTO' is the leader of the 'employeeNumber';,"SELECT T1.firstName, T1.lastName, T1.reportsTo FROM employees AS T1 INNER JOIN customers AS T2 ON T1.employeeNumber = T2.salesRepEmployeeNumber INNER JOIN payments AS T3 ON T2.customerNumber = T3.customerNumber ORDER BY T3.amount DESC LIMIT 1"
car_retails,What is the highest amount of order made by the sales representative in Boston? Please give the name of the product and amount.,"Boston is a city; amount of order = MULTIPLY(quantityOrdered, priceEach);","SELECT T2.productName, T1.quantityOrdered * T1.priceEach FROM orderdetails AS T1 INNER JOIN products AS T2 ON T1.productCode = T2.productCode INNER JOIN orders AS T3 ON T1.orderNumber = T3.orderNumber INNER JOIN customers AS T4 ON T3.customerNumber = T4.customerNumber WHERE T4.city = 'Boston' AND T4.salesRepEmployeeNumber IN ( SELECT employeeNumber FROM employees WHERE jobTitle = 'Sales Rep' ) ORDER BY T1.quantityOrdered DESC LIMIT 1"
car_retails,What is the total actual profit gained from orders made by American customers from 2003-01-06 to 2005-05-09?,"total actual profit = SUM(SUBTRACT(priceEach, buyPrice)); American is a nationality of country = 'USA'; orderDate BETWEEN '2003-01-06' AND '2005-05-09';",SELECT SUM(T2.priceEach - T1.buyPrice) FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode INNER JOIN orders AS T3 ON T2.orderNumber = T3.orderNumber INNER JOIN customers AS T4 ON T3.customerNumber = T4.customerNumber WHERE T3.orderDate > '2003-01-05' AND T3.orderDate < '2005-05-10'
car_retails,From which branch does the sales representative employee who made the most sales in 2005? Please indicates its full address and phone number.,orderDate between '2005-01-01' and '2005-12-31'; full address = addressLine1+addressLine2;,"SELECT T3.addressLine1, T3.addressLine2, T3.phone FROM orderdetails AS T1 INNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber INNER JOIN customers AS T3 ON T2.customerNumber = T3.customerNumber INNER JOIN employees AS T4 ON T3.salesRepEmployeeNumber = T4.employeeNumber INNER JOIN offices AS T5 ON T4.officeCode = T5.officeCode WHERE STRFTIME('%Y', T2.orderDate) = '2005' AND T4.jobTitle = 'Sales Rep' ORDER BY T1.quantityOrdered DESC LIMIT 1"
car_retails,What is the phone number of all companies where the last name of the contact person starts with the letter M and are not from Germany?,last name of contact person starts with M refers to lastName LIKE 'M%'; Germany is a country; not from Germany refers to country<>'Germany';,SELECT phone FROM customers WHERE contactLastName LIKE 'M%' AND country != 'Germany'
car_retails,Calculate the average amount of payments made by customers during the first half of 2004.,"average amount of payments = DIVIDE(SUM(amount), COUNT(customerNumber); first half of 2014 refers to paymentDate > = '2004-01-01' AND paymentDate < '2004-07-01;",SELECT AVG(amount) FROM payments WHERE paymentDate BETWEEN '2004-01-01' AND '2004-06-30'
car_retails,"Of all the orders placed and shipped throughout the year 2005, what percentage of those orders corresponds to customer number 186?","shipped orders refers to status = 'shipped'; year(shippedDate) = 2005; percentage = DIVIDE(SUM(customerNumber = 186)), COUNT(orderNumber)) as percentage;",SELECT CAST(SUM(CASE WHEN customerNumber = 186 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(orderNumber) FROM orders WHERE status = 'Shipped' AND shippedDate BETWEEN '2005-01-01' AND '2005-12-31'
car_retails,"How many customers with a canceled shipment have a credit limit greater than 115,000?",cancelled shipment refers to status = 'cancelled'; creditLimit > 115000;,SELECT COUNT(T1.customerNumber) FROM customers AS T1 INNER JOIN orders AS T2 ON T1.customerNumber = T2.customerNumber WHERE T2.status = 'Cancelled' AND T1.creditLimit > 115000
car_retails,On what date did the customer with the lowest credit limit serviced by sales representative Barry Jones make payments for his/her orders?,,SELECT T3.paymentDate FROM employees AS T1 INNER JOIN customers AS T2 ON T1.employeeNumber = T2.salesRepEmployeeNumber INNER JOIN payments AS T3 ON T2.customerNumber = T3.customerNumber WHERE T1.firstName = 'Barry' AND T1.lastName = 'Jones' AND T1.jobTitle = 'Sales Rep' ORDER BY T2.creditLimit ASC LIMIT 1
car_retails,To whom does the employee have to inform that is the sales representative of the French customer?,inform refers to reportsTo; 'reportsTO' is the leader of the 'employeeNumber'; France is a country; country = 'France';,SELECT T1.reportsTo FROM employees AS T1 INNER JOIN customers AS T2 ON T1.employeeNumber = T2.salesRepEmployeeNumber WHERE T2.country = 'France'
car_retails,"What is the full address of the customer who commented that DHL be used for the order that was shipped on April 4, 2005?",full address = addressLine1+addressLine2; shippedDate = '2005-04-04';,"SELECT T1.addressLine1, T1.addressLine2 FROM customers AS T1 INNER JOIN orders AS T2 ON T1.customerNumber = T2.customerNumber WHERE T2.shippedDate = '2005-04-04' AND T2.status = 'Shipped'"
car_retails,What is the full address of the office where the employee who is a sales representative for the customer whose business is located in the city of New York works?,full address = addressLine1 + addressLine2; NYC is a shortname of New York City.,"SELECT T2.addressLine1, T2.addressLine2 FROM employees AS T1 INNER JOIN customers AS T2 ON T1.employeeNumber = T2.salesRepEmployeeNumber INNER JOIN offices AS T3 ON T1.officeCode = T3.officeCode WHERE T2.city = 'NYC' AND T1.jobTitle = 'Sales Rep'"
car_retails,What is the full address of the office where 4 people work and one of them is Sales Representation?,full address = addressLine1+addressLine2; Sales Manager is a job title;,"SELECT T1.addressLine1, T1.addressLine2 FROM customers AS T1 INNER JOIN employees AS T2 ON T1.salesRepEmployeeNumber = T2.employeeNumber WHERE T2.jobTitle = 'Sales Rep'"
car_retails,"What profit can the seller Carousel DieCast Legends make from the sale of the product described as ""The perfect holiday or anniversary gift for executives""?","seller and product vendor are synonyms; Carousel DieCast Legends is a product vendor; profit = SUM(SUBTRACT(msrp, buyPrice));",SELECT SUM(T2.MSRP - T2.buyPrice) FROM productlines AS T1 INNER JOIN products AS T2 ON T1.productLine = T2.productLine WHERE T2.productVendor = 'Carousel DieCast Legends' AND T1.textDescription LIKE '%perfect holiday or anniversary gift for executives%'
car_retails,"Of the clients whose businesses are located in the city of Boston, calculate which of them has a higher average amount of payment.",average amount payment = AVG(amount);,SELECT T1.customerNumber FROM customers AS T1 INNER JOIN payments AS T2 ON T1.customerNumber = T2.customerNumber WHERE T1.city = 'Boston' GROUP BY T1.customerNumber ORDER BY SUM(T2.amount) / COUNT(T2.paymentDate) DESC LIMIT 1
car_retails,Calculate the total quantity ordered for 18th Century Vintage Horse Carriage and the average price.,18th Century Vintage Horse Carriage is a product name; average price = AVG(priceEach);,"SELECT SUM(T2.quantityOrdered) , SUM(T2.quantityOrdered * T2.priceEach) / SUM(T2.quantityOrdered) FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode WHERE T1.productName = '18th Century Vintage Horse Carriage'"
car_retails,How many kinds of products did order No. 10252 contain?,Products refer to productCode;,SELECT COUNT(t.productCode) FROM orderdetails t WHERE t.orderNumber = '10252'
car_retails,"Who is the sales representative that made the order which was sent to 25 Maiden Lane, Floor No. 4?",Sales representative is an employee;,"SELECT T2.firstName, T2.lastName FROM customers AS T1 INNER JOIN employees AS T2 ON T1.salesRepEmployeeNumber = T2.employeeNumber WHERE T1.addressLine1 = '25 Maiden Lane' AND T1.addressLine2 = 'Floor No. 4'"
car_retails,Where's Foon Yue Tseng's office located at? Give the detailed address.,Detailed address comprises addressLine1 and addressLine2;,"SELECT T1.addressLine1, T1.addressLine2 FROM offices AS T1 INNER JOIN employees AS T2 ON T1.officeCode = T2.officeCode WHERE T2.firstName = 'Foon Yue' AND T2.lastName = 'Tseng'"
car_retails,"Compared with the orders happened on 2005-04-08 and two days later, which day's order had a higher value?","2005-04-08 and two days later refer to orderDate = '2005-04-08' and orderDate = '2005-04-10'; order with a higher value refers to MAX(Total price) = MULTIPLY(quantityOrdered, priceEach); ","SELECT T2.orderDate FROM orderdetails AS T1 INNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber WHERE STRFTIME('%Y-%m-%d', T2.orderDate) = '2005-04-08' OR STRFTIME('%Y-%m-%d', T2.orderDate) = '2005-04-10' ORDER BY T1.quantityOrdered * T1.priceEach DESC LIMIT 1"
car_retails,How many products with the highest expected profits were sold in total?,"Products refer to productCode; Expected profits = SUBTRACT(MSRP, buyPrice);",SELECT SUM(t2.quantityOrdered) FROM orderdetails AS t2 INNER JOIN ( SELECT t1.productCode FROM products AS t1 ORDER BY t1.MSRP - t1.buyPrice DESC LIMIT 1 ) AS t3 ON t2.productCode = t3.productCode
car_retails,How much did Petit Auto pay on 2004-08-09?,Petit Auto is name of customer; paymentDate = '2004-08-09';,SELECT t1.amount FROM payments AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE t2.customerName = 'Petit Auto' AND t1.paymentDate = '2004-08-09'
car_retails,"What was the contact name for the check ""NR157385""?",Contact name refers to customerName;,"SELECT t2.contactFirstName, t2.contactLastName FROM payments AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE t1.checkNumber = 'NR157385'"
car_retails,Which customer made the order No. 10160? Give the contact name.,,"SELECT t2.contactFirstName, t2.contactLastName FROM orders AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE t1.orderNumber = '10160'"
car_retails,Where was the order No. 10383 shipped to? Show me the address.,Address comprises addressLine1 and addressLine2;,"SELECT t2.addressLine1, t2.addressLine2 FROM orders AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE t1.orderNumber = '10383'"
car_retails,"For the productline where the product No.S18_2949 was produced, what's the text description for that product line?",,SELECT t1.textDescription FROM productlines AS t1 INNER JOIN products AS t2 ON t1.productLine = t2.productLine WHERE t2.productCode = 'S18_2949'
car_retails,"If Dragon Souveniers, Ltd. aren't satisfied with their order and want to send a complain e-mail, which e-mail address should they send to?","E-mail address belongs to employee; customerName = 'Dragon Souveniers, Ltd.';","SELECT t2.email FROM customers AS t1 INNER JOIN employees AS t2 ON t1.salesRepEmployeeNumber = t2.employeeNumber WHERE t1.customerName = 'Dragon Souveniers, Ltd.'"
car_retails,How many French customers does Gerard Hernandez take care of?,Gerakd Hermandez is an employee; French customer refers to customer from France where country = 'France',SELECT COUNT(t1.customerNumber) FROM customers AS t1 INNER JOIN employees AS t2 ON t1.salesRepEmployeeNumber = t2.employeeNumber WHERE t1.country = 'France' AND t2.firstName = 'Gerard' AND t2.lastName = 'Hernandez'
car_retails,What was the latest order that customer No.114 made? Give the name of the product.,The latest refers to the most recent orderDate;,SELECT t3.productName FROM orderdetails AS t1 INNER JOIN orders AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN products AS t3 ON t1.productCode = t3.productCode WHERE t2.customerNumber = '114' ORDER BY t2.orderDate DESC LIMIT 1
car_retails,"For the product No. S18_3482 in the Order No.10108, how much discount did the customer have?","DIVIDE(SUBTRACT(MSRP, priceEach)), MSRP); product No. S18_3482 refers to productCode = 'S18_3482'",SELECT (t1.MSRP - t2.priceEach) / t1.MSRP FROM products AS t1 INNER JOIN orderdetails AS t2 ON t1.productCode = t2.productCode WHERE t1.productCode = 'S18_3482' AND t2.orderNumber = '10108'
car_retails,To whom does Steve Patterson report? Please give his or her full name.,reportsTO' is the leader of the 'employeeNumber';,"SELECT t2.firstName, t2.lastName FROM employees AS t1 INNER JOIN employees AS t2 ON t2.employeeNumber = t1.reportsTo WHERE t1.firstName = 'Steve' AND t1.lastName = 'Patterson'"
car_retails,How do I contact the President of the company?,President refers to the jobTitle;,SELECT t.email FROM employees t WHERE t.jobTitle = 'President'
car_retails,Who is the sales representitive of Muscle Machine Inc? Please give the employee's full name.,Sales representative refers to jobTitle = 'Sales Rep'; Muscle Machine Inc is name of customer;,"SELECT t2.firstName, t2.lastName FROM customers AS t1 INNER JOIN employees AS t2 ON t1.salesRepEmployeeNumber = t2.employeeNumber WHERE t1.customerName = 'Muscle Machine Inc'"
car_retails,"If I'm from the Muscle Machine Inc, to which e-mail adress should I write a letter if I want to reach the superior of my sales representitive?","Muscle Machine Inc is name of customer; superior refers to 'reportsTO', who is the leader of the 'employeeNumber'",SELECT t2.email FROM customers AS t1 INNER JOIN employees AS t2 ON t1.salesRepEmployeeNumber = t2.employeeNumber WHERE t1.customerName = 'Muscle Machine Inc'
car_retails,Please list all the customers that have Steve Patterson as their sales representitive.,Steve Patterson is an employee;,SELECT t1.customerName FROM customers AS t1 INNER JOIN employees AS t2 ON t1.salesRepEmployeeNumber = t2.employeeNumber WHERE t2.firstName = 'Steve' AND t2.lastName = 'Patterson'
car_retails,How many customers have an employee who reports to William Patterson as their sales representitive?,reportsTO' is the leader of the 'employeeNumber';,SELECT COUNT(t1.customerNumber) FROM customers AS t1 INNER JOIN employees AS t2 ON t1.salesRepEmployeeNumber = t2.employeeNumber WHERE t2.firstName = 'William' AND t2.lastName = 'Patterson'
car_retails,Please list the phone numbers of the top 3 customers that have the highest credit limit and have Leslie Jennings as their sales representitive.,,SELECT t1.phone FROM customers AS t1 INNER JOIN employees AS t2 ON t1.salesRepEmployeeNumber = t2.employeeNumber WHERE t2.firstName = 'Leslie' AND t2.lastName = 'Jennings' ORDER BY t1.creditLimit DESC LIMIT 3
car_retails,How many sales representitives are based in the offices in the USA?,Sales representative refers to jobTitle = 'Sales Rep'; country = 'USA';,SELECT COUNT(t1.employeeNumber) FROM employees AS t1 INNER JOIN offices AS t2 ON t1.officeCode = t2.officeCode WHERE t2.country = 'USA' AND t1.jobTitle = 'Sales Rep'
car_retails,Where can I find the office of the President of the company?,"Where can I find the office refers to address, comprising of addressLine1 and addressLine2; President is a jobTitle","SELECT t2.addressLine1, t2.addressLine2 FROM employees AS t1 INNER JOIN offices AS t2 ON t1.officeCode = t2.officeCode WHERE t1.jobTitle = 'President'"
car_retails,What's the postal code of the office the VP Sales is at?,VP Sales refers to jobTitle,SELECT t2.postalCode FROM employees AS t1 INNER JOIN offices AS t2 ON t1.officeCode = t2.officeCode WHERE t1.jobTitle = 'VP Sales'
car_retails,What is the total price of the order made by Cruz & Sons Co. on 2003/3/3?,"SUM(MULTIPLY(quantityOrdered, priceEach)) where orderDate = '2003-03-03'; customerName = 'Cruz & Sons Co.'",SELECT SUM(t1.priceEach * t1.quantityOrdered) FROM orderdetails AS t1 INNER JOIN orders AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN customers AS t3 ON t2.customerNumber = t3.customerNumber WHERE t3.customerName = 'Cruz & Sons Co.' AND t2.orderDate = '2003-03-03'
car_retails,Which product did Cruz & Sons Co. order on 2003/3/3?,Cruz & Sons Co. is name of customer; 2003/3/3 refers to orderDate;,SELECT t4.productName FROM orderdetails AS t1 INNER JOIN orders AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN customers AS t3 ON t2.customerNumber = t3.customerNumber INNER JOIN products AS t4 ON t1.productCode = t4.productCode WHERE t3.customerName = 'Cruz & Sons Co.' AND t2.orderDate = '2003-03-03'
car_retails,Which product did Cruz & Sons Co. ask for the biggest amount in a single order?,Cruz & Sons Co. is name of customer; the biggest amount refers to MAX(quantityOrdered).,SELECT t4.productName FROM orderdetails AS t1 INNER JOIN orders AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN customers AS t3 ON t2.customerNumber = t3.customerNumber INNER JOIN products AS t4 ON t1.productCode = t4.productCode WHERE t3.customerName = 'Cruz & Sons Co.' ORDER BY t1.priceEach * t1.quantityOrdered DESC LIMIT 1
car_retails,When were the products ordered by Cruz & Sons Co. on 2003-03-03 shipped?,Cruz & Sons Co. is name of customer; ordered on 2003-03-03 refers to orderDate;,SELECT t1.shippedDate FROM orders AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE t2.customerName = 'Cruz & Sons Co.' AND t1.orderDate = '2003-03-03'
car_retails,What is the amount of customers of 1957 Chevy Pickup by customers in a month?,,SELECT COUNT(T2.customerNumber) FROM orderdetails AS T1 INNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber WHERE T1.productCode IN ( SELECT productCode FROM products WHERE productName = '1957 Chevy Pickup' )
car_retails,Name the product from the 'Classic Cars' production line that has the greatest expected profit.,"The greatest expected profit refers to MAX(SUBTRACT(MSRP, buyPrice);","SELECT t.productName, t.MSRP - t.buyPrice FROM products AS t WHERE t.productLine = 'Classic Cars' ORDER BY t.MSRP - t.buyPrice DESC LIMIT 1"
car_retails,List all the name of customers who have orders that are still processing.,Still processing refers to status = 'In Process';,SELECT t2.customerName FROM orders AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE t1.status = 'In Process'
car_retails,"Among all orders shipped, calculate the percentage of orders shipped at least 3 days before the required date.","Orders shipped refer to status = 'Shipped'; at least 3 days before the required date refers to SUBTRACT(shippedDate, requiredDate)>3; DIVIDE(COUNT(orderNumber where SUBTRACT(shippedDate, requiredDate)>3), (COUNT(orderNumber) as percentage;",SELECT COUNT(CASE WHEN JULIANDAY(t1.shippeddate) - JULIANDAY(t1.requireddate) > 3 THEN T1.customerNumber ELSE NULL END) FROM orders AS T1 INNER JOIN orderdetails AS T2 ON T1.orderNumber = T2.orderNumber WHERE T1.status = 'Shipped'
car_retails,Find the customer who made the highest payment in 2005.,The highest payment refers to max(amount); 2005 refers to year(paymentDate);,"SELECT t2.customerName FROM payments AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE STRFTIME('%Y', t1.paymentDate) = '2005' GROUP BY t2.customerNumber, t2.customerName ORDER BY SUM(t1.amount) DESC LIMIT 1"
car_retails,Which is the most ordered quantity product? What is its expected profit margin per piece?,"The most ordered quantity product refers to productName where Max(quantityOrdered); SUBTRACT(MSRP, buyPrice);","SELECT productName, MSRP - buyPrice FROM products WHERE productCode = ( SELECT productCode FROM orderdetails ORDER BY quantityOrdered DESC LIMIT 1 )"
car_retails,"For the order has the most product ordered, name the customer who placed the order.","The largest order in terms of total price refers to MAX(SUM(MULTIPLY(quantityOrdered, priceEach)).","SELECT T2.firstName, T2.lastName FROM offices AS T1 INNER JOIN employees AS T2 ON T1.officeCode = T2.officeCode WHERE T2.employeeNumber = ( SELECT MAX(employeeNumber) FROM employees )"
car_retails,List all customer names with orders that are disputed.,"Orders that are disputed refer to status = 'Disputed'; the sales representative means employees; names refers to firstName, lastName.","SELECT t3.firstName, t3.lastName FROM orders AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber INNER JOIN employees AS t3 ON t2.salesRepEmployeeNumber = t3.employeeNumber WHERE t1.status = 'Disputed'"
car_retails,What is the percentage of employees are in Paris office?,"DIVIDE(COUNT(employeeNumber) when city = 'Paris'), (COUNT(employeeNumber)) as percentage;",SELECT CAST(COUNT(CASE WHEN t1.city = 'Paris' THEN t2.employeeNumber ELSE NULL END) AS REAL) * 100 / COUNT(t2.employeeNumber) FROM offices AS t1 INNER JOIN employees AS t2 ON t1.officeCode = t2.officeCode
car_retails,"Name the Sales Manager of Europe, Middle East, and Africa region. In which office does he/she report to?","Sales Manager refers to jobTitle; Europe, Middle East, and Africa region refers to territory = 'EMEA';","SELECT t2.firstName, t2.lastName FROM offices AS t1 INNER JOIN employees AS t2 ON t1.officeCode = t2.officeCode WHERE t2.jobTitle = 'Sale Manager (EMEA)'"
car_retails,List the name of employees in Japan office and who are they reporting to.,Japan is the name of the country; 'reportsTO' is the leader of the 'employeeNumber';,"SELECT t2.firstName, t2.lastName, t2.reportsTo FROM offices AS t1 INNER JOIN employees AS t2 ON t1.officeCode = t2.officeCode WHERE t1.country = 'Japan'"
car_retails,Which customer ordered 1939 'Chevrolet Deluxe Coupe' at the highest price?,1939 'Chevrolet Deluxe Coupe' refers to productName; the highest price refers to MAX(priceEach),SELECT t4.customerName FROM products AS t1 INNER JOIN orderdetails AS t2 ON t1.productCode = t2.productCode INNER JOIN orders AS t3 ON t2.orderNumber = t3.orderNumber INNER JOIN customers AS t4 ON t3.customerNumber = t4.customerNumber WHERE t1.productName = '1939 Chevrolet Deluxe Coupe' ORDER BY t2.priceEach DESC LIMIT 1
car_retails,What is the percentage of the payment amount in 2004 was made by Atelier graphique?,"DIVIDE(SUM(amount) where customerName = 'Atelier graphique'), (SUM(amount)) as percentage where year(paymentDate) = 2004;","SELECT SUM(CASE WHEN t1.customerName = 'Atelier graphique' THEN t2.amount ELSE 0 END) * 100 / SUM(t2.amount) FROM customers AS t1 INNER JOIN payments AS t2 ON t1.customerNumber = t2.customerNumber WHERE STRFTIME('%Y', t2.paymentDate) = '2004'"
car_retails,Calculate the actual profit for order number 10100.,"SUM(MULTIPLY(quantityOrdered (SUBTRACT (priceEach, buyPrice));",SELECT SUM((t1.priceEach - t2.buyPrice) * t1.quantityOrdered) FROM orderdetails AS t1 INNER JOIN products AS t2 ON t1.productCode = t2.productCode WHERE t1.orderNumber = '10100'
car_retails,How much did customer 103 pay in total?,Pay in total refers to SUM(amount);,SELECT SUM(t.amount) FROM payments t WHERE t.customerNumber = '103'
car_retails,What is the total price of the order 10100?,"SUM(MULTIPLY(quantityOrdered, priceEach)",SELECT SUM(t.priceEach * t.quantityOrdered) FROM orderdetails t WHERE t.orderNumber = '10100'
car_retails,Please list the top three product names with the highest unit price.,The highest unit price refers to MAX(priceEach),SELECT t1.productName FROM products AS t1 INNER JOIN orderdetails AS t2 ON t1.productCode = t2.productCode ORDER BY t2.priceEach DESC LIMIT 3
car_retails,"Among the customers of empolyee 1370, who has the highest credit limit?Please list the full name of the contact person.",Employee 1370 refers to employeeNumber = '1370';,"SELECT t2.contactFirstName, t2.contactLastName FROM employees AS t1 INNER JOIN customers AS t2 ON t1.employeeNumber = t2.salesRepEmployeeNumber WHERE t1.employeeNumber = '1370' ORDER BY t2.creditLimit DESC LIMIT 1"
car_retails,How many 2003 Harley-Davidson Eagle Drag Bikes were ordered?,2003 Harley-Davidson Eagle Drag Bikes refers to productName; how many ordered refers to COUNT(quantityOrdered);,SELECT SUM(t2.quantityOrdered) FROM products AS t1 INNER JOIN orderdetails AS t2 ON t1.productCode = t2.productCode WHERE t1.productName = '2003 Harley-Davidson Eagle Drag Bike'
car_retails,When was the product with the highest unit price shipped?,The highest unit price refers to MAX(priceEach); when shipped refers to shippedDate;,SELECT t1.shippedDate FROM orders AS t1 INNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber ORDER BY t2.priceEach DESC LIMIT 1
car_retails,How many motorcycles have been ordered in 2004?,Motorcycles refer to productLine = 'motorcycles'; ordered in 2004 refers to year(orderDate) = 2004;,"SELECT SUM(t2.quantityOrdered) FROM orders AS t1 INNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN products AS t3 ON t2.productCode = t3.productCode WHERE t3.productLine = 'motorcycles' AND STRFTIME('%Y', t1.orderDate) = '2004'"
car_retails,Please list the order number of the customer whose credit card has a limit of 45300.,Credit card does not have a limit refers to creditLimit = 45300;,SELECT t1.orderNumber FROM orders AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE t2.creditLimit = 45300
car_retails,"For Which order was the most profitable, please list the customer name of the order and the profit of the order.","Most profitable order can be computed as MAX(MULTIPLY(quantityOrdered, SUBTRACT(priceEach, buyPrice)).","SELECT t3.customerName, (t1.priceEach - t4.buyPrice) * t1.quantityOrdered FROM orderdetails AS t1 INNER JOIN orders AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN customers AS t3 ON t2.customerNumber = t3.customerNumber INNER JOIN products AS t4 ON t1.productCode = t4.productCode GROUP BY t3.customerName, t1.priceEach, t4.buyPrice, t1.quantityOrdered ORDER BY (t1.priceEach - t4.buyPrice) * t1.quantityOrdered DESC LIMIT 1"
car_retails,How many transactions payment made by customer that is lower than 10000. Group the result by year.,Transactions payment lower than 10000 refer to COUNT(amount) < 1000; by year refers to YEAR(paymentDate),"SELECT STRFTIME('%Y', t1.paymentDate), COUNT(t1.customerNumber) FROM payments AS t1 WHERE t1.amount < 10000 GROUP BY STRFTIME('%Y', t1.paymentDate)"
car_retails,List out 3 best seller products during year 2003 with their total quantity sold during 2003.,Best selling products refer to products with MAX(quantityOrdered); 2003 refers to year(orderDate) = 2003;,"SELECT t3.productName, SUM(t2.quantityOrdered) FROM orders AS t1 INNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN products AS t3 ON t2.productCode = t3.productCode WHERE STRFTIME('%Y', t1.orderDate) = '2003' GROUP BY t3.productName ORDER BY SUM(t2.quantityOrdered) DESC LIMIT 3"
car_retails,List out sale rep that has sold 1969 Harley Davidson Ultimate Chopper. List out their names and quantity sold throughout the year.,1969 Harley Davidson Ultimate Chopper refers to the name of the product; sale rep refers to employee; 2003 refers to year(orderDate) = 2003; quantity sold refers to quantityOrdered; their names refer to the name of customers; ,"SELECT t5.firstName, t5.lastName, SUM(t2.quantityOrdered) FROM products AS t1 INNER JOIN orderdetails AS t2 ON t1.productCode = t2.productCode INNER JOIN orders AS t3 ON t2.orderNumber = t3.orderNumber INNER JOIN customers AS t4 ON t3.customerNumber = t4.customerNumber INNER JOIN employees AS t5 ON t4.salesRepEmployeeNumber = t5.employeeNumber WHERE t1.productName = '1969 Harley Davidson Ultimate Chopper' GROUP BY t5.lastName, t5.firstName"
car_retails,Who are the sales representatives in New York City? List their full names.,New York City refers to city = 'NYC'; sales representative refers to jobTitle = 'Sales Rep';,"SELECT t1.lastName, t1.firstName FROM employees AS t1 INNER JOIN offices AS t2 ON t1.officeCode = t2.officeCode WHERE t2.city = 'NYC' AND t1.jobTitle = 'Sales Rep'"
car_retails,Identify the customer and list down the country with the check number GG31455.,,"SELECT t2.customerName, t2.country FROM payments AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE t1.checkNumber = 'GG31455'"
car_retails,How many 2001 Ferrari Enzo were ordered?,2001 Ferrari Enzo refers to productName;,SELECT SUM(t1.orderNumber) FROM orderdetails AS t1 INNER JOIN products AS t2 ON t1.productCode = t2.productCode WHERE t2.productName = '2001 Ferrari Enzo'
car_retails,Which 5 products has the lowest amount of orders? List the product names.,The lowest amount of orders refers to MIN(quantityOrdered);,SELECT t2.productName FROM orderdetails AS t1 INNER JOIN products AS t2 ON t1.productCode = t2.productCode GROUP BY t2.productName ORDER BY SUM(t1.quantityOrdered) ASC LIMIT 5
car_retails,List down the customer names with a disputed order status.,,SELECT t1.customerName FROM customers AS t1 INNER JOIN orders AS t2 ON t1.customerNumber = t2.customerNumber WHERE t2.status = 'Disputed'
car_retails,How many countries from the USA have an In Process order status?,country = 'USA',SELECT COUNT(t2.orderNumber) FROM customers AS t1 INNER JOIN orders AS t2 ON t1.customerNumber = t2.customerNumber WHERE t2.status = 'On Hold' AND t1.country = 'USA'
car_retails,Calculate the total price of shipped orders belonging to Land of Toys Inc. under the classic car line of products.,"SUM(MULTIPLY(quantityOrdered, priceEach)) where productLine = 'Classic Cars'; status = 'Shipped'; customername = 'Land of Toys Inc';",SELECT SUM(t3.priceEach * t3.quantityOrdered) FROM customers AS t1 INNER JOIN orders AS t2 ON t1.customerNumber = t2.customerNumber INNER JOIN orderdetails AS t3 ON t2.orderNumber = t3.orderNumber INNER JOIN products AS t4 ON t3.productCode = t4.productCode WHERE t4.productLine = 'Classic Cars' AND t1.customerName = 'Land of Toys Inc.' AND t2.status = 'Shipped'
restaurant,How many restaurants have not obtained a minimum of 3 in their reviews?,have not obtained a minimum of 3 in review refers to review < 3,SELECT COUNT(id_restaurant) FROM generalinfo WHERE review < 3
restaurant,What types of food are served at the 4 top-reviewed restaurants?,"top-reviewed refers to review = 4; type of food refers to food_type

",SELECT food_type FROM generalinfo WHERE review = ( SELECT MAX(review) FROM generalinfo ) LIMIT 4
restaurant,How many restaurants in the city of Richmond serve Mediterranean food?,Mediterranean food refers to food_type =   'mediterranean',SELECT COUNT(id_restaurant) FROM generalinfo WHERE food_type = 'mediterranean' AND city = 'richmond'
restaurant,List all the cities in Sonoma County.,,SELECT city FROM geographic WHERE county = 'sonoma county'
restaurant,What counties are not in the Bay Area Region?,not in the Bay Area region refers to region ! = 'bay area',SELECT DISTINCT county FROM geographic WHERE region != 'bay area'
restaurant,List all cities in the Northern California Region.,,SELECT city FROM geographic WHERE region = 'northern california'
restaurant,List by its ID number all restaurants on 11th Street in Oakland.,"11th Street refers to street_name = '11th street'; Oakland refers to city = 'oakland'; ID number of restaurant refers to id_restaurant

",SELECT id_restaurant FROM location WHERE city = 'oakland' AND street_name = '11th street'
restaurant,How many restaurants can we find at number 871 on its street?,number 871 on its street refers to street_num = 871,SELECT COUNT(id_restaurant) FROM location WHERE street_num = 871
restaurant,At what numbers on 9th Avenue of San Francisco there are restaurants?,9th Avenue refers to street_name = '9th avenue'; San Francisco refers to City = 'san francisco',SELECT id_restaurant FROM location WHERE City = 'san francisco' AND street_name = '9th avenue'
restaurant,What type of food is there in the restaurants on Adeline Street in Berkeley city?,"Adeline Street refers to street_name = 'adeline st'; type of food refers to food_type

",SELECT T1.food_type FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.street_name = 'adeline st' AND T2.city = 'berkeley'
restaurant,In which regions are there no African food restaurants?,no African food restaurants refers to food_type <> 'african',SELECT DISTINCT T2.region FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.food_type != 'african'
restaurant,In which counties are there A&W Root Beer Restaurants?,A&W Root Beer Restaurant refers to label = 'a & w root beer',SELECT DISTINCT T2.county FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.label = 'a & w root beer'
restaurant,Indicate street and number of the Adelitas Taqueria Restaurants.,street refers to street_name; number refers to street_num; Adelitas Taqueria Restaurant refers to label = 'adelitas taqueria',"SELECT T1.street_name, T1.street_num FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.label = 'adelitas taqueria'"
restaurant,"What type of food is served at the restaurant located at 3140, Alpine Road at San Mateo County?",3140 Alpine Road at San Mateo County refers to street_num = 3140 AND street_name = 'alpine rd' AND County = 'san mateo county'; type of food refers to food_type,SELECT T2.food_type FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant INNER JOIN geographic AS T3 ON T2.city = T3.city WHERE T3.County = 'san mateo county' AND T1.street_name = 'alpine rd' AND T1.street_num = 3140
restaurant,In which streets of the city of San Francisco are there restaurants that serve seafood?,street refers to street_name; seafood refers to food_type = 'seafood',SELECT T1.street_name FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'san francisco' AND T2.food_type = 'seafood' AND street_name IS NOT NULL
restaurant,List all counties where there is no Bakers Square Restaurant & Pie Shop.,no Bakers Square Restaurant & Pie Shop refers to label <> 'bakers square restaurant & pie shop',SELECT DISTINCT T2.county FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.label != 'bakers square restaurant & pie shop'
restaurant,In how many counties is there a street called Appian Way?,a street called Appian Way refers to street_name = 'appian way',SELECT COUNT(DISTINCT T2.county) FROM location AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.street_name = 'appian way'
restaurant,What is the rating of each restaurant reviews on Atlantic Ave?,Atlantic Ave refers to street_name = 'atlantic ave'; rating refers to review,SELECT T1.review FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.street_name = 'atlantic ave'
restaurant,Identify all restaurants in Contra Costa County by id.,,SELECT T1.id_restaurant FROM location AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'contra costa county'
restaurant,Identify all the restaurants in Yolo County by their label.,,"SELECT T1.id_restaurant, T1.label FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'yolo county'"
restaurant,What restaurant on Drive Street in San Rafael doesn't serve American food?,Drive Street refers to street_name = 'drive'; San Rafael refers to city = 'san rafael'; American food refers to food_type <> 'american',SELECT T1.label FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.street_name = 'drive' AND T1.food_type != 'american' AND T2.city = 'san rafael'
restaurant,On which streets in the city of San Francisco are there restaurants with a review of 1.7?,street refers to street_name; review of 1.7 refers to review = 1.7,SELECT T2.street_name FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'san francisco' AND T1.review = 1.7
restaurant,Which restaurant on the street Alameda de las Pulgas in the city of Menlo Park is the worst rated?,restaurant refers to label; street Alameda de las Pulgas refers to street_name = 'avenida de las pulgas'; the worst rated refers to min(review),SELECT T2.label FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.street_name = 'avenida de las pulgas' AND T2.city = 'menlo park' ORDER BY review LIMIT 1
restaurant,On what street in Tuolumne County is Good Heavens restaurant located?,street refers to street_name; Good Heavens restaurant refers to label = 'good heavens',SELECT T1.street_name FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant INNER JOIN geographic AS T3 ON T2.city = T3.city WHERE T2.label = 'good heavens' AND T3.county = 'tuolumne county'
restaurant,Indicate the street numbers where Aux Delices Vietnamese Restaurant are located.,street numbers refers to street_num; Aux Delices Vietnamese Restaurant refers to label = 'aux delices vietnamese restaurant',SELECT DISTINCT T1.street_num FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.label = 'aux delices vietnamese restaurant'
restaurant,Identify all the restaurants in Marin County by their id.,,SELECT T1.id_restaurant FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'marin county'
restaurant,In which regions are there no pizza restaurants?,no pizza restaurants refers to food_type = 'pizza',SELECT DISTINCT T2.region FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.food_type = 'pizza' AND T2.region != 'unknown'
restaurant,Calculate the average rating of reviews for restaurants in Santa Cruz County.,"average rating = divide(sum(review where county = 'santa cruz county'), count(id_restaurant where county = 'santa cruz county'))",SELECT AVG(T2.review) FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.county = 'santa cruz county'
restaurant,What percentage of restaurants in Monterey County have Mexican food?,"Mexican food refers to food_type = 'mexican'; percentage = divide(count(id_restaurant where food_type = 'mexican'), count(id_restaurant)) where county = 'monterey county' * 100%","SELECT CAST(SUM(IIF(T2.food_type = 'mexican', 1, 0)) AS REAL) * 100 / COUNT(T2.id_restaurant) FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.county = 'monterey county'"
restaurant,What percentage of streets named 11th Street are in Alameda County?,"street named 11th Street refers to street_name = '11th st'; percentage = divide(count(street_name = '11th st' and County = 'alameda county'), count(street_name where County = 'alameda county')) * 100%","SELECT CAST(SUM(IIF(T1.street_name = '11th st', 1, 0)) AS REAL) * 100 / COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.County = 'alameda county'"
restaurant,Please list all of the restaurants that serve European food.,restaurant refers to label; European food refers to food_type = 'european',SELECT label FROM generalinfo WHERE food_type = 'european'
restaurant,What cities are located in Northern California?,Northern California refers to region = 'northern california',SELECT city FROM geographic WHERE region = 'northern california'
restaurant,What does the one and only 24-hour diner's name?,24-hour diner refers to food_type = '24 hour diner'; diner name refers to label,SELECT label FROM generalinfo WHERE food_type = '24 hour diner'
restaurant,Please list any five cities that have an unidentified county and region.,unidentified county and region refers to county = 'unknown' AND region = 'unknown',SELECT city FROM geographic WHERE county = 'unknown' AND region = 'unknown' LIMIT 5
restaurant,What is the county and region of Davis City?,,"SELECT county, region FROM geographic WHERE city = 'Davis'"
restaurant,Please list all of the street names in Clayton City.,,SELECT street_name FROM location WHERE city = 'Clayton'
restaurant,What are the most popular restaurants in San Francisco among diners?,the most popular refers to max(review); restaurant refers to label; San Francisco refers to city = 'San Francisco',"SELECT id_restaurant, label FROM generalinfo WHERE city = 'San Francisco' AND review = ( SELECT MAX(review) FROM generalinfo WHERE city = 'San Francisco' )"
restaurant,How many American food restaurants are unpopular in Carmel?,American Food Restaurant refers to food_type = 'ameraican'; unpopular refers to min(review); Carmel refers to city = 'Carmel',SELECT COUNT(id_restaurant) FROM generalinfo WHERE food_type = 'american' AND city = 'carmel' AND review = ( SELECT MIN(review) FROM generalinfo WHERE food_type = 'american' AND city = 'carmel' )
restaurant,What is the percentage of restaurants that serve American food in Dublin city?,"American food refers to food_type = 'american food'; percentage = divide(count(id_restaurant), count(id_restaurant where food_type = 'american food')) where city = 'dublin' * 100%","SELECT CAST(SUM(IIF(food_type = 'american food', 1, 0)) AS REAL) * 100 / COUNT(id_restaurant) FROM generalinfo WHERE city = 'dublin'"
restaurant,What is the full address of Albert's Café?,"full address = street_num, street_name, city; Albert's Café refers to label = 'Albert's Café'","SELECT T2.street_num, T2.street_name, T1.city FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.label = 'Albert''s Café'"
restaurant,"What are the restaurants that are located at ""19th St. Oakland""?","restaurant refers to label; ""19th St. Oakland"" refers to street_name = '19th St' AND city = 'Oakland'",SELECT T1.id_restaurant FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'Oakland' AND T2.street_name = '19th St'
restaurant,"What kind of restaurants can be found at ""106 E 25th Ave""?","kind of restaurant refers to food_type; ""106 E 25th Ave"" refers to street_name = 'e 25th ave'",SELECT T1.food_type FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.street_num = 106 AND T2.street_name = 'e 25th ave'
restaurant,Please name any three restaurants that have an unidentified region.,restaurant name refers to label; unidentified region refers to region = 'unknown',SELECT T2.label FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant INNER JOIN geographic AS T3 ON T2.city = T3.city WHERE T3.region = 'unknown' LIMIT 3
restaurant,"What is the name of the Chinese restaurant that can be found at 104 San Tomas Aquino Road, Campbell?",restaurant name refers to label; Chinese restaurant refers to food_type = 'chinese'; 104 San Tomas Aquino Road Campbell refers to street_num = 104 AND street_name = 'san tomas aquino road' AND city = 'campbell',SELECT T1.label FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.street_num = 104 AND T1.city = 'campbell' AND T2.street_name = 'san tomas aquino road'
restaurant,"How many Thai restaurants can be found in San Pablo Ave, Albany?",Thai restaurant refers to food_type = 'thai'; San Pablo Ave Albany refers to street_name = 'san pablo ave' AND T1.city = 'albany',SELECT COUNT(T1.id_restaurant) FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.food_type = 'thai' AND T1.city = 'albany' AND T2.street_name = 'san pablo ave'
restaurant,What is the county and region of Plearn-Thai Cuisine restaurant?,Plearn-Thai Cuisine restaurant refers to label = 'plearn-thai cuisine',"SELECT T1.county, T1.region, T2.label FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T2.label = 'plearn-thai cuisine'"
restaurant,"What is the name of the restaurant that is located in El Dorado County, Lake Tahoe region?",restaurant name refers to label,SELECT T2.label FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.region = 'lake tahoe' AND T1.county = 'el dorado county'
restaurant,Which county and region does the street E. El Camino Real belong to?,street E. El Camino Real refers to street_name = 'E. El Camino Real',"SELECT DISTINCT T2.county, T2.region FROM location AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.street_name = 'E. El Camino Real'"
restaurant,What is the name of the least popular Indian restaurant on Shattuck Avenue in Berkeley?,restaurant name refers to label; the least popular refers to min(review); Indian restaurant refers to food_type = 'Indian restaurant'; Shattuck Avenue in Berkeley refers to street_name = 'shattuck ave' and city = 'berkeley',SELECT T1.id_restaurant FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'berkeley' AND T2.street_name = 'shattuck ave' AND T1.food_type = 'Indian restaurant' ORDER BY T1.review LIMIT 1
restaurant,What is the percentage of restaurants in the Bay Area region that scored over 4 for the review rating?,"scored over 4 refers to review > 4; percentage = divide(count(id_restaurant where region = 'bay area' and review > 4), count(id_restaurant where region = 'Bay Area')) * 100%","SELECT CAST(SUM(IIF(T2.review > 4, 1, 0)) AS REAL) * 100 / COUNT(T2.id_restaurant) FROM geographic AS T1 RIGHT JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.region = 'bay area'"
restaurant,List every city in San Mateo County.,,SELECT city FROM geographic WHERE county = 'san mateo county'
restaurant,How many restaurants have more than 4 star reviews?,more than 4 star review refers to review > 4,SELECT COUNT(id_restaurant) AS cnt FROM generalinfo WHERE review > 4
restaurant,Which street has the most restaurants?,street refers to street_name; the most restaurants refers to max(count(street_name)),SELECT street_name FROM location GROUP BY street_name ORDER BY COUNT(street_name) DESC LIMIT 1
restaurant,Which chicken restaurant has the highest review?,chicken restaurant refers to food_type = 'chicken'; the highest review refers to max(review),SELECT label FROM generalinfo WHERE food_type = 'chicken' ORDER BY review DESC LIMIT 1
restaurant,Which county is El Cerrito from?,El Cerrito refers to city = 'el cerrito',SELECT county FROM geographic WHERE city = 'el cerrito'
restaurant,How many restaurants are on Irving Street?,Irving Street refers to street_name = 'irving',SELECT COUNT(id_restaurant) FROM location WHERE street_name = 'irving'
restaurant,Provide a list of restaurants from Marin county.,restaurant refers to label,SELECT T1.label FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'marin county'
restaurant,What is the address of the Peking Duck restaurant?,"address refers to street_num, street_name; Peking Duck restaurant refers to label = 'peking duck restaurant'",SELECT T2.street_name FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.label = 'peking duck restaurant'
restaurant,List all the streets with more than 10 restaurants in Alameda county.,street refers to street_name; more than 10 restaurants refers to count(id_restaurant) > 10,SELECT T2.street_name FROM geographic AS T1 INNER JOIN location AS T2 ON T1.city = T2.city WHERE T1.county = 'alameda county' GROUP BY T2.street_name HAVING COUNT(T2.id_restaurant) > 10
restaurant,What are the regions with Greek restaurants?,Greek restaurant refers to food_type = 'greek',SELECT DISTINCT T1.region FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T2.food_type = 'greek'
restaurant,List all of the restaurant addresses from an unknown region.,"restaurant address refers to street_num, street_name; unknown region refers to region = 'unknown'",SELECT T2.street_name FROM geographic AS T1 INNER JOIN location AS T2 ON T1.city = T2.city WHERE T1.region = 'unknown'
restaurant,What is the review of the restaurant at 8440 Murray Ave?,8440 Murray Ave refers to street_num = 8440 and street_name = 'murray ave',SELECT T2.review FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.street_name = 'murray ave' AND T1.street_num = 8440
restaurant,What type of restaurant is most common in Monterey county?,type refers to food_type; most common refers to max(count(food_type)),SELECT T2.food_type FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.county = 'Monterey' GROUP BY T2.food_type ORDER BY COUNT(T2.food_type) DESC LIMIT 1
restaurant,Which street in San Francisco has the most burger restaurants?,street refers to street_name; San Francisco refers to city = 'san francisco'; burger restaurant refers to food_type = 'burgers'; the most burger restaurants refers to max(count(street_name where food_type = 'burgers' and city = 'san francisco')),SELECT T2.street_name FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'san francisco' AND T1.food_type = 'burgers' GROUP BY T2.street_name ORDER BY COUNT(T2.id_restaurant) DESC LIMIT 1
restaurant,What is the region of 1149 El Camino Real?,1149 El Camino Real refers to street_num = 1149 and street_name = 'el camino real',SELECT T2.region FROM location AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.street_num = 1149 AND T1.street_name = 'el camino real'
restaurant,What is the county of the Sankee restaurant?,Sankee restaurant refers to label = 'sankee',SELECT T2.county FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.label = 'sankee'
restaurant,How many streets with restaurants are there in the Northern California region?,,SELECT COUNT(T1.city) FROM geographic AS T1 INNER JOIN location AS T2 ON T1.city = T2.city WHERE T1.region = 'northern california'
restaurant,List all of the restaurants on Park St.,restaurant refers to label; Park St refers to street_name = 'park st',SELECT T2.label FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.street_name = 'park st'
restaurant,What percentage of restaurants are from the Bay Area?,"Bay Area refers to region = 'bay area'; percentage = divide(count(id_restaurant where region = 'bay area'), count(id_restaurant)) * 100%","SELECT CAST(SUM(IIF(T1.region = 'bay area', 1, 0)) AS REAL) * 100 / COUNT(T2.id_restaurant) FROM geographic AS T1 INNER JOIN location AS T2 ON T1.city = T2.city"
restaurant,List all the average reviews of Chinese restaurants for each county from highest to lowest.,"Chinese restaurant refers to food_type = 'chinese'; average review refers to divide(sum(review), count(review))",SELECT AVG(T1.review) FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.food_type = 'chinese' GROUP BY T1.id_restaurant ORDER BY AVG(T1.review) DESC
restaurant,List street names in San Francisco city.,,SELECT street_name FROM location WHERE city = 'San Francisco'
restaurant,List restaurant ids located in Danville city.,,SELECT id_restaurant FROM location WHERE city = 'Danville'
restaurant,How many cities are located in the Bay Area?,the Bay Area refers to region = 'bay area',SELECT COUNT(city) FROM geographic WHERE region = 'bay area'
restaurant,How many labels of the restaurant have an unknown country?,unknown county refers to county = 'unknown',SELECT COUNT(T1.label) FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'unknown'
restaurant,Please indicate the street names of restaurants with food type is American.,,SELECT T1.street_name FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T2.food_type = 'American'
restaurant,Please indicate which labels have the city located in Santa Cruz.,Santa Cruz refers to county = 'Santa Cruz county',SELECT T1.label FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'Santa Cruz county'
restaurant,"Give the review of the restaurant at 430, Broadway.",430 Broadway refers to street_num = 430 and street_name = 'Broadway',SELECT T1.review FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.street_name = 'Broadway' AND T2.street_num = 430
restaurant,Indicate the address of the restaurant with the most popular reviews.,"address refers to street_num, street_name; the most popular review refers to max(review)","SELECT T2.street_num, T2.street_name FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant ORDER BY T1.review DESC LIMIT 1"
restaurant,Which country has the most restaurants with Italian food?,Italian food refers to food_type = 'Italian',SELECT T2.county FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.food_type = 'Italian' GROUP BY T2.county ORDER BY COUNT(T1.id_restaurant) DESC LIMIT 1
restaurant,Find the percentage of restaurant in Napa Valley.,"Napa Valley refers to region = 'Napa Valley'; percentage = divide(count(id_restaurant where region = 'Napa Valley'), count(id_restaurant)) * 100%","SELECT CAST(SUM(IIF(region = 'Napa Valley', 1, 0)) AS REAL) * 100 / COUNT(region) FROM geographic"
restaurant,How many of the cities are in a Bay Area?,Bay Area refers to region = 'bay area',SELECT COUNT(city) FROM geographic WHERE region = 'bay area'
restaurant,List down the cities with unknown country.,unknown county refers to county = 'unknown',SELECT city FROM geographic WHERE county = 'unknown'
restaurant,What is the city located in Bay Area of Santa Clara?,Bay Area refers to region = 'bay area'; Santa Clara refers to county = 'santa clara county',SELECT city FROM geographic WHERE region = 'bay area' AND county = 'santa clara county'
restaurant,List down the restaurant ID of restaurants located in Sunnyvale.,Sunnyvale refers to city = 'sunnyvale',SELECT id_restaurant FROM location WHERE city = 'sunnyvale'
restaurant,"Among the restaurants on street number below 1000, how many of them are in Railroad St.?",street number below 1000 refers to street_num < 1000; Railroad St. refers to street_name = 'railroad',SELECT COUNT(city) FROM location WHERE street_name = 'railroad' AND street_num < 1000
restaurant,What is the name of the 24 hour diner at San Francisco?,name refers to label; 24 hour diner refers to food_type = '24 hour diner'; San Francisco refers to city = 'san francisco',SELECT label FROM generalinfo WHERE food_type = '24 hour diner' AND city = 'san francisco'
restaurant,"Give the review of the restaurant located in Ocean St., Santa Cruz.",Ocean St. refers to street_name = 'ocean st'; Santa Cruz refers to city = 'santa cruz',SELECT T2.review FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.city = 'santa cruz' AND T1.street_name = 'ocean st'
restaurant,Give the street number of a bar in Oakland with a 2.7 review.,street number refers to street_num; bar refers to food_type = 'bar'; Oakland refers to city = 'oakland'; 2.7 review refers to review = 2.7,SELECT T2.street_num FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.review = 2.7 AND T2.city = 'oakland' AND T1.food_type = 'bar'
restaurant,"Among the bakeries, what is total number of bakery located at University Avenue, Palo Alto?",bakery refers to food_type = 'bakery'; University Avenue refers to street_name = 'university ave.'; Palo Alto refers to city = 'palo alto',SELECT COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.food_type = 'bakery' AND T2.city = 'palo alto' AND T1.street_name = 'university ave.'
restaurant,"Among the listed winery, what is the street number of the winery named ""Tulocay Winery""?","winery refers to food_type = 'winery'; street number refers to street_num; ""Tulocay Winery"" refers to label = 'Tulocay winery'",SELECT T1.street_num FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.label = 'Tulocay winery' AND T2.food_type = 'winery'
restaurant,"List the review and label of the restaurants in Mission Blvd., Hayward.",Mission Blvd. refers to street_name = 'mission blvd'; Hayward refers to city = 'hayward',"SELECT T2.review, T2.label FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.city = 'hayward' AND T1.street_name = 'mission blvd'"
restaurant,"Among all indian restaurants in Castro St., Mountainview, how many of them is about cookhouse in their label?","indian restaurant refers to food_type = 'indian'; Castro St. refers to street_name = 'castro st'; Mountainview refers to city = 'mountainview'; have the word ""Indian"" in label refers to label = 'indian'",SELECT COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.street_name = 'castro st' AND T1.city = 'mountain view' AND T2.food_type = 'indian' AND T2.label LIKE '%cookhouse%'
restaurant,"In restaurants with a review of 2, how many restaurants have a street number below 500?",review of 2 refers to review = 2; street number below 500 refers to street_num < 500,SELECT COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.review = 2 AND T1.street_num < 500
restaurant,"Among all asian restaurants in N. Milpitas Blvd., Milpitas, how many of them have restaurant ID greater than 385?",asian restaurant refers to food_type = 'asian'; N. Milpitas Blvd. refers to street_name = 'n milpitas blvd'; Milpitas refers to city = 'milpitas'; restaurant ID greater than 385 refers to id_restaurant > 385,SELECT COUNT(T1.id_restaurant) AS num FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.city = 'milpitas' AND T2.food_type = 'asian' AND T1.street_name = 'n milpitas blvd' AND T1.id_restaurant > 385
restaurant,"What is the restaurant's name and ID located at Ocean Avenue, San Francisco?",restaurant's name refers to label; Ocean Avenue refers to street_name = 'ocean avenue'; San Francisco refers to city = 'san francisco',"SELECT T2.label, T1.id_restaurant FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'san francisco' AND T1.street_name = 'ocean avenue'"
restaurant,"What is the full address of the restaurant named ""Sanuki Restaurant""?","full address refers to city, street_num, street_name; restaurant named ""Sanuki Restaurant"" refers to label = 'sanuki restaurant'","SELECT T2.city, T1.street_num, T1.street_name FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.label = 'sanuki restaurant'"
restaurant,"List the food type of the restaurant located in 22779 6th St., Hayward City.",22779 refers to street_num = 22779; 6th St. refers to street_name = '6th St',SELECT T2.food_type FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.street_num = 22779 AND T1.street_name = '6th St' AND T2.city = 'hayward'
restaurant,"How many American restaurants are located in Front, San Francisco?",American restaurant refers to food_type = 'american'; Front refers to street_name = 'front'; San Francisco refers to city = 'san francisco',SELECT COUNT(T2.food_type = 'american') FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'san francisco' AND T1.street_name = 'front'
restaurant,List the restaurant's ID that has a review greater than the 70% of average review of all American restaurants with street number greater than 2000.,"American restaurant refers to food_type = 'american'; street number greater than 2000 refers to street_num > 2000; review greater than the 70% of average review refers to review > multiply(avg(review), 0.7)",SELECT T1.id_restaurant FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.food_type = 'american' AND T1.street_num > 2000 GROUP BY T1.id_restaurant ORDER BY AVG(T2.review) * 0.7 DESC
restaurant,"Among the restaurants located on the street number ranges from 1000 to 2000, what is the percentage of Afghani restaurants are there?","street number ranges from 1000 to 2000 refers to 1000 < = street_num < = 2000; Afghani restaurant refers to food_type = 'afghani'; percentage = divide(count(id_restaurant where food_type = 'afghani'), count(id_restaurant)) * 100%","SELECT CAST(SUM(IIF(T2.food_type = 'afghani', 1, 0)) AS REAL) * 100 / COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE 1000 <= T1.street_num <= 2000"
restaurant,What is the name of the most popular restaurant serving Asian foods in San Francisco?,the most popular refers to max(review); Asian food refers to food_type = 'asian'; San Francisco refers to city = 'san francisco',SELECT label FROM generalinfo WHERE food_type = 'asian' AND city = 'san francisco' AND review = ( SELECT MAX(review) FROM generalinfo WHERE food_type = 'asian' AND city = 'san francisco' )
restaurant,How many cities are there in Monterey?,Monterey refers to region = 'monterey',SELECT COUNT(DISTINCT city) FROM geographic WHERE region = 'monterey'
restaurant,How many deli in Belmont have a review rating of 2 or more?,deli ris a food type; Belmont refers to city = 'belmont'; review rating of 2 or more refers to review > 2,SELECT COUNT(id_restaurant) FROM generalinfo WHERE city = 'belmont' AND review > 2 AND food_type = 'deli'
restaurant,Which county in northern California has the highest number of cities?,northern California refers to region = 'northern california'; the highest number of cities refers to max(count(city)),SELECT county FROM geographic WHERE region = 'northern california' GROUP BY county ORDER BY COUNT(city) DESC LIMIT 1
restaurant,How many restaurants can you find in Concord?,Concord refers to city = 'concord',SELECT COUNT(id_restaurant) FROM location WHERE city = 'concord'
restaurant,In which region can you find the top 4 most popular restaurants?,the top 4 most popular restaurant refers to top 4 max(review),SELECT T2.region FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city ORDER BY T1.review DESC LIMIT 4
restaurant,"How many Chinese restaurants are there on 1st st, Livermore?",Chinese restaurant refers to food_type = 'chinese'; 1st st refers to street_name = '1st st'; Livermore refers to city = 'livermore',SELECT COUNT(T1.id_restaurant) FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'livermore' AND T1.food_type = 'chinese' AND T2.street_name = '1st st'
restaurant,How many Indian restaurants are there in the Los Angeles area?,Indian restaurant refers to food_type = 'indian'; the Los Angeles area refers to region = 'los angeles area',SELECT COUNT(T1.city) FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T2.food_type = 'indian' AND T1.region = 'los angeles area'
restaurant,"In the Bay Area, what is the most common type of food served by restaurants?",the Bay Area refers to region = 'bay area'; the most common type of food refers to max(count(food_type)),SELECT T2.food_type FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.region = 'bay area' GROUP BY T2.food_type ORDER BY COUNT(T2.food_type) DESC LIMIT 1
restaurant,"How many restaurants in Broadway, Oakland received a review of no more than 3?",Broadway refers to street_name = 'broadway';  Oakland refers to city = 'oakland'; a review of no more than 3 refers to review < 3,SELECT COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.street_name = 'broadway' AND T2.review < 3 AND T1.city = 'oakland'
restaurant,In which region can you find the highest number of Baskin Robbins restaurants?,the highest number refers to max(count(city)); Baskin Robbins restaurant refers to label = 'baskin robbins',SELECT T2.region AS num FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.label = 'baskin robbins' GROUP BY T2.region ORDER BY COUNT(T1.city) DESC LIMIT 1
restaurant,List all the streets where pizza-serving restaurants are found in San Jose.,street refers to street_name; pizza-serving restaurant refers to food_type = 'pizza'; San Jose refers to city = 'san jose',SELECT T1.street_name FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T2.food_type = 'pizza' AND T1.city = 'san jose'
restaurant,How many types of restaurants are there in the Yosemite and Mono Lake area?,,SELECT COUNT(T2.food_type) FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.region = 'yosemite and mono lake area'
restaurant,What is the full address of the most popular restaurant among the diners?,"full address refers to street_num, street_name, city; the most popular refers to max(review)","SELECT T2.street_name, T2.street_num, T2.city FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant ORDER BY T1.review DESC LIMIT 1"
restaurant,In which counties can you find the restaurant with the highest number of branches?,restaurant refers to label; the highest number of branches refers to max(count(city)),SELECT T2.county FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city GROUP BY T2.county ORDER BY COUNT(T1.label) DESC LIMIT 1
restaurant,Which region has the highest number of restaurants?,the highest number refers to max(count(id_restaurant)),SELECT T1.region FROM geographic AS T1 INNER JOIN location AS T2 ON T1.city = T2.city GROUP BY T1.region ORDER BY COUNT(T2.id_restaurant) DESC LIMIT 1
restaurant,List the full address of all the American restaurants with a review of 4 or more?,"full address refers to street_num, street_name, city; American restaurant refers to food_type = 'american'; a review of 4 or more refers to review > 4","SELECT T1.street_num, T1.street_name, T1.city FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T2.review >= 4"
soccer_2016,How many players were born after the year 1985?,"born after the year 1985 refers to SUBSTR(DOB, 1, 4) > 1985","SELECT COUNT(Player_Id) FROM Player WHERE SUBSTR(DOB, 1, 4) > 1985"
soccer_2016,"How many matches were there in May, 2008?","in May 2008 refers to SUBSTR(Match_Date, 1, 4) = '2008' AND SUBSTR(Match_Date, 7, 1) = '5'","SELECT COUNT(Match_Id) FROM `Match` WHERE SUBSTR(Match_Date, 1, 4) = '2008' AND SUBSTR(Match_Date, 7, 1) = '5'"
soccer_2016,"For how many times has player no.41 won the ""man of the match"" award?","player no.41 won the ""man of the match"" refers to Man_of_the_Match = 41",SELECT COUNT(Match_Id) FROM `Match` WHERE Man_of_the_Match = 41
soccer_2016,Please list the IDs of all the matches in the year 2008.,"ID of matches refers to Match_Id; in the year 2008 refers to SUBSTR(Match_Date, 1, 4) = '2008'","SELECT Match_Id FROM `Match` WHERE SUBSTR(Match_Date, 1, 4) = '2008'"
soccer_2016,How many players are from Australia?,Australia refers to Country_Name = 'Australia',SELECT COUNT(CASE WHEN T2.Country_Name = 'Australia' THEN T1.Player_Id ELSE NULL END) FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_Id
soccer_2016,Which country is the oldest player from?,country refers to Country_Name; the oldest refers to min(DOB),SELECT T1.Country_Name FROM Country AS T1 INNER JOIN Player AS T2 ON T2.Country_Name = T1.Country_Id WHERE T2.Country_Name IS NOT NULL ORDER BY T2.DOB LIMIT 1
soccer_2016,What is the bowling skill of SC Ganguly?,SC Ganguly refers to Player_Name = 'SC Ganguly',SELECT T1.Bowling_Skill FROM Bowling_Style AS T1 INNER JOIN Player AS T2 ON T2.Bowling_skill = T1.Bowling_Id WHERE T2.Player_Name = 'SC Ganguly'
soccer_2016,"Among the players who use the right hand as their batting hand, how many of them were born after 1985?","right hand as batting hand refers to Batting_Hand = 'Right-hand bat'; born after 1985 refers to SUBSTR(DOB, 1, 4) > 1985","SELECT SUM(CASE WHEN SUBSTR(T1.DOB, 1, 4) > 1985 THEN 1 ELSE 0 END) FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id WHERE T2.Batting_Hand = 'Right-hand bat'"
soccer_2016,Please list the names of the players who use the right hand as their batting hand and are from Australia.,name of player refers to Player_Name; right hand as batting hand refers to Batting_Hand = 'Right-hand bat'; Australia refers to Country_Name = 'Australia',SELECT T2.Player_Name FROM Country AS T1 INNER JOIN Player AS T2 ON T2.Country_Name = T1.Country_id INNER JOIN Batting_Style AS T3 ON T2.Batting_hand = T3.Batting_Id WHERE T1.Country_Name = 'Australia' AND T3.Batting_Hand = 'Right-hand bat'
soccer_2016,Please list the bowling skills of all the players from Australia.,Australia refers to Country_Name = 'Australia',SELECT T2.Bowling_Skill FROM Player AS T1 INNER JOIN Bowling_Style AS T2 ON T1.Bowling_skill = T2.Bowling_Id INNER JOIN Country AS T3 ON T1.Country_Name = T3.Country_Id WHERE T3.Country_Name = 'Australia' GROUP BY T2.Bowling_Skill
soccer_2016,"Among the players whose bowling skill is ""Legbreak"", when was the oldest one of them born?",the oldest refers to min(DOB); date of birth refers to DOB,SELECT MIN(T1.DOB) FROM Player AS T1 INNER JOIN Bowling_Style AS T2 ON T1.Bowling_skill = T2.Bowling_Id WHERE T2.Bowling_Skill = 'Legbreak'
soccer_2016,What is the bowling skill used by most players?,bowling skill used by most players refers to max(count(Bowling_Skill)),SELECT T1.Bowling_Skill FROM Bowling_Style AS T1 INNER JOIN Player AS T2 ON T2.Bowling_skill = T1.Bowling_Id GROUP BY T1.Bowling_Skill ORDER BY COUNT(T1.Bowling_Skill) DESC LIMIT 1
soccer_2016,"What is the name of the player who won the ""man of the match"" award in the match on 2008/4/18?",name of player refers to Player_Name; on 2008/4/18 refers to Match_Date = '2008-04-18',SELECT T2.Player_Name FROM Match AS T1 INNER JOIN Player AS T2 ON T2.Player_Id = T1.Man_of_the_Match WHERE T1.Match_Date = '2008-04-18'
soccer_2016,For how many times has SC Ganguly played as team captain in a match?,SC Ganguly refers to Player_Name = 'SC Ganguly'; team captain refers to Role_Desc = 'Captain',SELECT SUM(CASE WHEN T3.Role_Desc = 'Captain' THEN 1 ELSE 0 END) FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Rolee AS T3 ON T2.Role_Id = T3.Role_Id WHERE T1.Player_Name = 'SC Ganguly'
soccer_2016,What is the role of SC Ganguly in the match on 2008/4/18?,role refers to of Role_Id; SC Ganguly refers to Player_Name = 'SC Ganguly'; on 2008/4/18 refers to Match_Date = '2008-04-18',SELECT T2.Role_Id FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Rolee AS T3 ON T2.Role_Id = T3.Role_Id INNER JOIN Match AS T4 ON T2.Match_Id = T4.Match_Id WHERE T1.Player_Name = 'SC Ganguly' AND T4.Match_Date = '2008-04-18'
soccer_2016,"Among all the matches SC Ganguly has played in, what is the highest winning margin?",SC Ganguly refers to Player_Name = 'SC Ganguly'; the highest winning margin refers to max(Win_Margin),SELECT MAX(T3.Win_Margin) FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Match AS T3 ON T2.Match_Id = T3.Match_Id WHERE T1.Player_Name = 'SC Ganguly'
soccer_2016,What is the average winning margin of all the matches SC Ganguly has played in?,"SC Ganguly refers to Player_Name = 'SC Ganguly'; the average winning margin = divide(sum(Win_Margin), count(Match_Id)) where Player_Name = 'SC Ganguly'",SELECT CAST(SUM(T3.Win_Margin) AS REAL) / COUNT(*) FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Match AS T3 ON T2.Match_Id = T3.Match_Id WHERE T1.Player_Name = 'SC Ganguly'
soccer_2016,"Among all the players born after the year 1985, what is the percentage of the players who use the right hand as their batting hand?","born after the year 1985 refers to SUBSTR(DOB, 1, 4) > 1985; right hand as batting hand refers to Batting_Hand = 'Right-hand bat'; percentage = divide(count(Player_Id where Batting_Hand = 'Right-hand bat'), count(Player_Id)) * 100% where SUBSTR(DOB, 1, 4) > 1985","SELECT CAST(SUM(CASE WHEN T2.Batting_Hand = 'Right-hand bat' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Player_Id) FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id WHERE SUBSTR(T1.DOB, 1, 4) > 1985"
soccer_2016,Give the name of the youngest player.,name of player refers to Player_Name; the youngest refers to max(DOB),SELECT Player_Name FROM Player ORDER BY DOB DESC LIMIT 1
soccer_2016,How many times has Sunrisers Hyderabad been the toss winner of a game?,Sunrisers Hyderabad refers to Team_Name = 'Sunrisers Hyderabad'; time of toss winner refers to count(Toss_Winner),SELECT SUM(CASE WHEN Toss_Winner = ( SELECT Team_Id FROM Team WHERE Team_Name = 'Sunrisers Hyderabad' ) THEN 1 ELSE 0 END) FROM `Match`
soccer_2016,"Give the name of the striker in the match no. 419169, over no.3, ball no.2, inning no.2.",name of the striker refers to Player_Name; match no. 419169 refers to Match_Id = 419169; over no.3 refers to Over_Id = 3; ball no.2 refers to Ball_Id = 2; inning no.2 refers to Innings_No = 2,SELECT T2.Player_Name FROM Ball_by_Ball AS T1 INNER JOIN Player AS T2 ON T1.Striker = T2.Player_Id WHERE T1.Match_Id = 419169 AND T1.Over_Id = 3 AND T1.Ball_Id = 2 AND T1.Innings_No = 2
soccer_2016,Give the name of venue for the game with a win margin of 138 points.,name of venue refers to Venue_Name; a win margin of 138 points refers to Win_Margin = 138,SELECT T2.Venue_Name FROM `Match` AS T1 INNER JOIN Venue AS T2 ON T1.Venue_Id = T2.Venue_Id WHERE T1.Win_Margin = 138
soccer_2016,"For the game on 2008/5/12, who was the man of the match?",on 2008/5/12 refers to Match_Date = '2008-05-12'; name refers to Player_Name;,SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Match AS T2 ON T1.Player_Id = T2.Man_of_the_Match WHERE T2.Match_Date = '2008-05-12'
soccer_2016,State the name of captain keeper of the match no.419117.,name refers to Player_Name; captain keeper refers to Role_Desc = 'CaptainKeeper'; match no.419117 refers to Match_Id = '419117',SELECT T3.Player_Name FROM Player_Match AS T1 INNER JOIN Rolee AS T2 ON T1.Role_Id = T2.Role_Id INNER JOIN Player AS T3 ON T1.Player_Id = T3.Player_Id WHERE T1.Match_Id = '419117' AND T2.Role_Desc = 'CaptainKeeper'
soccer_2016,Who was the man of the series in 2013? Give the full name.,full name refers to Player_Name; in 2013 refers to Season_Year = 2013,SELECT T2.Player_Name FROM Season AS T1 INNER JOIN Player AS T2 ON T1.Man_of_the_Series = T2.Player_Id WHERE T1.Season_Year = 2013
soccer_2016,Give the date of birth of the 2014 Orange Cap winner.,date of birth refers to DOB; 2014 refers to Season_Year = 2014; Orange Cap winner refers to Orange_Cap IS NOT NULL,SELECT T2.DOB FROM Season AS T1 INNER JOIN Player AS T2 ON T1.Man_of_the_Series = T2.Player_Id WHERE T1.Season_Year = 2014 AND T1.Orange_Cap IS NOT NULL
soccer_2016,What is the nationality of the 7th season Purple Cap winner?,nationality refers to Country_Name; the 7th season refers to Season_Id = 7; Purple Cap winner refers to Purple_Cap IS NOT NULL,SELECT T3.Country_Name FROM Season AS T1 INNER JOIN Player AS T2 ON T1.Man_of_the_Series = T2.Player_Id INNER JOIN Country AS T3 ON T2.Country_Name = T3.Country_Id WHERE T1.Season_Id = 7 AND T1.Purple_Cap IS NOT NULL
soccer_2016,Which country does Ranchi city belong to?,country refers to Country_Name; Ranchi city refers to City_Name = 'Ranchi',SELECT T2.Country_Name FROM City AS T1 INNER JOIN Country AS T2 ON T1.Country_Id = T2.Country_Id WHERE T1.City_Name = 'Ranchi'
soccer_2016,How many Indian cities are there in the database?,Indian refers to Country_Name = 'India',SELECT SUM(CASE WHEN T2.Country_Name = 'India' THEN 1 ELSE 0 END) FROM City AS T1 INNER JOIN Country AS T2 ON T1.Country_Id = T2.Country_Id
soccer_2016,State the name of the city with the most venues.,name of the city refers to City_Name; the most venues refers to max(count(Venue_Id)),SELECT T1.City_Name FROM City AS T1 INNER JOIN Venue AS T2 ON T1.City_Id = T2.City_Id GROUP BY T1.City_Id ORDER BY COUNT(T2.Venue_Id) DESC LIMIT 1
soccer_2016,What is the batting hand of MK Pandey?,MK Pandey refers to Player_Name = 'MK Pandey',SELECT T2.Batting_hand FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id WHERE T1.Player_Name = 'MK Pandey'
soccer_2016,"In the database, how many times is the number of Indian cities to the South African cities?","Indian refers to Country_Name = 'India'; South African refers to Country_Name = 'South Africa'; how many times = divide(count(City_Id where Country_Name = 'India'), count(City_Id where Country_Name = 'South Africa'))",SELECT CAST(SUM(CASE WHEN T2.Country_Name = 'India' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.Country_Name = 'South Africa' THEN 1 ELSE 0 END) FROM City AS T1 INNER JOIN Country AS T2 ON T1.Country_Id = T2.Country_Id
soccer_2016,How many times does M Chinnaswamy Stadium host games than Maharashtra Cricket Association Stadium?,"M Chinnaswamy Stadium refers to Venue_Name = 'M Chinnaswamy Stadium'; Maharashtra Cricket Association Stadium refers to Venue_Name = 'Maharashtra Cricket Association Stadium'; how many times = divide(count(Match_Id where Venue_Name = 'M Chinnaswamy Stadium'), count(Match_Id where Venue_Name = 'Maharashtra Cricket Association Stadium'))",SELECT SUM(CASE WHEN T2.Venue_Name = 'M Chinnaswamy Stadium' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.Venue_Name = 'Maharashtra Cricket Association Stadium' THEN 1 ELSE 0 END) FROM `Match` AS T1 INNER JOIN Venue AS T2 ON T1.Venue_Id = T2.Venue_Id
soccer_2016,Who is the oldest player?,name of the player refers to Player_Name; the oldest refers to min(DOB),SELECT Player_Name FROM Player ORDER BY DOB ASC LIMIT 1
soccer_2016,How many matches were played on May 2008?,"in May 2008 refers to SUBSTR(Match_Date, 1, 4) = '2008' AND SUBSTR(Match_Date, 7, 1) = '5'","SELECT SUM(CASE WHEN SUBSTR(Match_Date, 7, 1) = '5' THEN 1 ELSE 0 END) FROM `Match` WHERE SUBSTR(Match_Date, 1, 4) = '2008'"
soccer_2016,How many players were born in the 90s?,born in the 90s refers to DOB > = '1990-01-01' AND DOB < = '1999-12-31',SELECT COUNT(Player_Id) AS cnt FROM Player WHERE DOB BETWEEN '1990-01-01' AND '1999-12-31'
soccer_2016,How many matches did Team 10 play in 2012?,"Team 10 refers to Team_1 = 10 OR Team_2 = 10; in 2012 refers to SUBSTR(Match_Date, 1, 4) = '2012'","SELECT SUM(CASE WHEN Team_1 = 10 OR Team_2 = 10 THEN 1 ELSE 0 END) FROM `Match` WHERE SUBSTR(Match_Date, 1, 4) = '2012'"
soccer_2016,List the id of the player who won the Orange Cap for 2 consecutive seasons.,id of the player who won the Orange Cap refers to Orange_Cap; for 2 consecutive seasons refers to count(Season_Year) > 1,SELECT Orange_Cap FROM Season GROUP BY Orange_Cap HAVING COUNT(Season_Year) > 1
soccer_2016,How many matches were played in Season 7?,Season 7 refers to Season_Id = 7,SELECT COUNT(Match_Id) FROM `Match` WHERE Season_Id = 7
soccer_2016,How many umpires are from South Africa?,South Africa refers to Country_Name = 'South Africa',SELECT SUM(CASE WHEN T1.Country_Name = 'South Africa' THEN 1 ELSE 0 END) FROM Country AS T1 INNER JOIN Umpire AS T2 ON T1.Country_ID = T2.Umpire_Country
soccer_2016,What is the name of the player with the highest number of outstanding player awards in a particular match?,name of the player refers to Player_Name; the highest number of outstanding player awards refers to max(count(Man_of_the_Match)),SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Match AS T2 ON T1.Player_Id = T2.Man_of_the_Match GROUP BY T2.Man_of_the_Match ORDER BY COUNT(T2.Man_of_the_Match) DESC LIMIT 1
soccer_2016,In which country do the majority of the players are from?,country refers to Country_Name; the majority of the players  refers to max(count(Country_Name)),SELECT T1.Country_Name FROM Country AS T1 INNER JOIN Player AS T2 ON T1.Country_Id = T2.Country_Name GROUP BY T2.Country_Name ORDER BY COUNT(T2.Country_Name) DESC LIMIT 1
soccer_2016,How many Orange Cap awards were won by CH Gayle?,CH Gayle refers to Player_Name = 'CH Gayle',SELECT SUM(CASE WHEN T1.Player_Name = 'CH Gayle' THEN 1 ELSE 0 END) AS cnt FROM Player AS T1 INNER JOIN Season AS T2 ON T1.Player_Id = T2.Orange_Cap
soccer_2016,Which season played the highest number of matches at M Chinnaswamy Stadium?,season refers to Season_Id; the highest number of matches refers to max(count(Season_Id)); M Chinnaswamy Stadium refers to Venue_Name = 'M Chinnaswamy Stadium',SELECT T1.Season_Id FROM `Match` AS T1 INNER JOIN Venue AS T2 ON T1.Venue_Id = T2.Venue_Id WHERE T2.Venue_Name = 'M Chinnaswamy Stadium' GROUP BY T1.Season_Id ORDER BY COUNT(T1.Season_Id) DESC LIMIT 1
soccer_2016,What is the name of the team that won the most number of matches in season 1?,name of the team refers to Team_Name; the most number of matches refers to max(count(Match_Winner)); season 1 refers to season_Id = 1,SELECT Team_Name FROM Team WHERE Team_Id = ( SELECT Match_Winner FROM `Match` WHERE season_Id = 1 GROUP BY Match_Winner ORDER BY COUNT(Match_Winner) DESC LIMIT 1 )
soccer_2016,Which venue did Kolkata Knight Riders play most of their matches as a Team 1?,venue refers to Venue_Name; Kolkata Knight Riders refers to Team_Name = 'Kolkata Knight Riders'; most of their matches refers to max(count(Venue_Id)); Team 1 refers to Team_Id = Team_1,SELECT T3.Venue_Name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.Team_Id = T2.Team_1 INNER JOIN Venue AS T3 ON T2.Venue_Id = T3.Venue_Id WHERE T1.Team_Name = 'Kolkata Knight Riders' GROUP BY T3.Venue_Id ORDER BY COUNT(T3.Venue_Id) DESC LIMIT 1
soccer_2016,Which team has the highest number of losses of all time?,"name of the team refers to Team_Name; the highest number of losses refers to max(add(count(Team_1 where Team_Id = Team_1 and Team_1 <> Match_Winner), count(Team_2 where Team_Id = Team_2 and Team_2 <> Match_Winner)))","SELECT T1.Team_Name FROM Team AS T1 INNER JOIN ( SELECT COUNT(Team_1) AS a, Team_1 FROM Match WHERE Team_1 <> Match_Winner GROUP BY Team_1 UNION SELECT COUNT(Team_2) AS a, Team_2 FROM Match WHERE Team_2 <> Match_Winner GROUP BY Team_2 ORDER BY a DESC LIMIT 1 ) AS T2 ON T1.Team_Id = T2.Team_1"
soccer_2016,"Who is the player who won the first ever ""man of the match"" award?","name of the player refers to Player_Name; the first ever refers to min(match_date); ""man of the match"" award refers to Player_Id in 'Man_of_the_Match'",SELECT Player_Name FROM Player WHERE Player_Id = ( SELECT Man_of_the_Match FROM `Match` ORDER BY match_date ASC LIMIT 1 )
soccer_2016,When did Chennai Super Kings play its first match?,match date refers to Match_Date; Chennai Super Kings refers to Team_Name = 'Chennai Super Kings'; first match refers to min(Match_Date),SELECT Match_Date FROM `Match` WHERE team_1 = ( SELECT Team_Id FROM Team WHERE Team_Name = 'Chennai Super Kings' ) OR Team_2 = ( SELECT Team_Id FROM Team WHERE Team_Name = 'Chennai Super Kings' ) ORDER BY Match_Date ASC LIMIT 1
soccer_2016,How many players with left-hand batting style are from India?,left-hand batting style refers to Batting_hand = 'Left-hand bat'; India refers to Country_Name = 'India',SELECT SUM(CASE WHEN T1.Batting_hand = 'Left-hand bat' THEN 1 ELSE 0 END) AS cnt FROM Batting_Style AS T1 INNER JOIN Player AS T2 ON T1.Batting_Id = T2.Batting_hand INNER JOIN Country AS T3 ON T2.Country_Name = T3.Country_Id WHERE T3.Country_Name = 'India'
soccer_2016,Who is the player that has the highest number of roles as a captain for Deccan Chargers?,name of the player refers to Player_Name; the highest number of roles refers to max(count(Role_Id)); as a captain refers to Role_Desc = 'Captain'; Deccan Chargers refers to Team_Name = 'Deccan Chargers',SELECT T4.Player_Name FROM Team AS T1 INNER JOIN Player_Match AS T2 ON T1.Team_id = T2.Team_id INNER JOIN Rolee AS T3 ON T2.Role_Id = T3.Role_Id INNER JOIN Player AS T4 ON T2.Player_Id = T4.Player_Id WHERE T1.Team_Name = 'Deccan Chargers' AND T1.Team_Id = 8 AND T3.Role_Desc = 'Captain' AND T3.Role_Id = 1 GROUP BY T4.Player_Id ORDER BY COUNT(T3.Role_Id) DESC LIMIT 1
soccer_2016,What is the percentage of all right-handed batting players among all the other players?,"right-handed batting refers to Batting_hand = 'Right-hand bat'; percentage = divide(count(Player_Id where Batting_hand = 'Right-hand bat'), count(Player_Id)) * 100%",SELECT CAST(SUM(CASE WHEN T1.Batting_hand = 'Right-hand bat' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Player_Id) FROM Batting_Style AS T1 INNER JOIN Player AS T2 ON T2.Batting_hand = T1.Batting_Id
soccer_2016,"Name the player who is born on July 7, 1981.",name of the player refers to Player_Name; born on July 7 1981 refers to DOB = '1981-07-07',SELECT Player_name FROM Player WHERE DOB = '1981-07-07'
soccer_2016,How many matches were played by the player with player ID 2?,player ID 2 refers to Player_Id = 2,SELECT SUM(CASE WHEN Player_Id = 2 THEN 1 ELSE 0 END) FROM Player_Match
soccer_2016,List the first team's name in the match with the highest winning margin.,team's name refers to Team_Name; first team refers to Team_Id = Team_1; the highest winning margin refers to max(Win_Margin),SELECT T2.Team_Name FROM Match AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Team_1 ORDER BY T1.Win_Margin DESC LIMIT 1
soccer_2016,Give the country where St. George's Park is located.,country refers to Country_Name; St. George's Park refers to Venue_Name = 'St George''s Park',SELECT T3.Country_Name FROM Venue AS T1 INNER JOIN City AS T2 ON T2.City_Id = T1.City_Id INNER JOIN Country AS T3 ON T3.Country_Id = T2.Country_id WHERE T1.Venue_Name = 'St George''s Park'
soccer_2016,List the player's name of Mumbai Indians in the match ID 335990.,Mumbai Indians refers to Team_Name = 'Mumbai Indians'; match ID 335990 refers to Match_Id = 335990,SELECT T3.Team_Name FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T2.Player_Id = T1.Player_Id INNER JOIN Team AS T3 ON T3.Team_Id = T2.Team_Id WHERE T2.Match_Id = 335990 AND T3.Team_Name = 'Mumbai Indians' GROUP BY T3.Team_Name
soccer_2016,"Provide the winning team's name in the match with the point of winning margin of 7 on May 7, 2009.",the winning team refers to Team_Id = Match_Winner; the point of winning margin of 7 refers to Win_Margin = 7; on May 7 2009 refers to Match_Date = '2009-05-07',SELECT T1.Team_Name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.Team_Id = T2.Match_Winner WHERE T2.Match_Date = '2009-05-07' AND T2.Win_Margin = 7
soccer_2016,How many of the matches are Superover?,Superover refers to Outcome_Type = 'Superover',SELECT SUM(CASE WHEN T2.Outcome_Type = 'Superover' THEN 1 ELSE 0 END) FROM Match AS T1 INNER JOIN Outcome AS T2 ON T2.Outcome_Id = T1.Outcome_type
soccer_2016,List the cities located in U.A.E.,city refers to City_Name; U.A.E refers to Country_Name = 'U.A.E',SELECT T1.City_Name FROM City AS T1 INNER JOIN Country AS T2 ON T2.Country_Id = T1.Country_id WHERE T2.Country_Name = 'U.A.E'
soccer_2016,"What is the total number of won matches of the team named ""Pune Warriors""?","the team named ""Pune Warriors"" refers to Team_Name = 'Pune Warriors'; the total number of won matches = count(Team_Name where Team_Id = Match_Winner)",SELECT SUM(CASE WHEN T2.Team_Name = 'Pune Warriors' THEN 1 ELSE 0 END) FROM Match AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Match_Winner
soccer_2016,"Among the matches held in 2015, who is the winning team in the match ID 829768?",in 2015 refers to Match_Date LIKE '2015%'; the winning team refers to Team_Id = Match_Winner; match ID 829768 refers to Match_Id = 829768,SELECT T2.Team_Name FROM Match AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Match_Winner WHERE T1.Match_Date LIKE '2015%' AND T1.Match_Id = 829768
soccer_2016,What is the role of K Goel in the match ID 335992?,role refers to Role_Desc; K Goel refers to Player_Name = 'K Goel'; match ID 335992 refers to Match_Id = 335992,SELECT T3.Role_Desc FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T2.Player_Id = T1.Player_Id INNER JOIN Rolee AS T3 ON T3.Role_Id = T2.Role_Id WHERE T2.Match_Id = 335992 AND T1.Player_Name = 'K Goel'
soccer_2016,How many cities are located in South Africa?,South Africa refers to Country_Name = 'South Africa',SELECT SUM(CASE WHEN T2.Country_Name = 'South Africa' THEN 1 ELSE 0 END) FROM City AS T1 INNER JOIN Country AS T2 ON T2.Country_Id = T1.Country_id
soccer_2016,"How many matches were held at the venue named ""Newlands""?","the venue named ""Newlands"" refers to Venue_Name = 'Newlands'",SELECT SUM(CASE WHEN T2.Venue_Name = 'Newlands' THEN 1 ELSE 0 END) FROM Match AS T1 INNER JOIN Venue AS T2 ON T2.Venue_Id = T1.Venue_Id
soccer_2016,"Provide the point of the winning margin in a match between Mumbai Indians and Royal Challengers Bangalore on May 28, 2008.",point of the winning margin refers to Win_Margin; Mumbai Indians refers to Team_Name = 'Mumbai Indians'; Royal Challengers Bangalore refers to Team_Name = 'Royal Challengers Bangalore'; on May 28 2008 refers to Match_Date = '2008-05-28',SELECT T1.Win_Margin FROM Match AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Team_1 INNER JOIN Team AS T3 ON T3.Team_Id = T1.Team_2 WHERE (T2.Team_Name = 'Mumbai Indians' AND T3.Team_Name = 'Royal Challengers Bangalore' AND T1.Match_Date = '2008-05-28') OR (T2.Team_Name = 'Royal Challengers Bangalore' AND T3.Team_Name = 'Mumbai Indians' AND T1.Match_Date = '2008-05-28')
soccer_2016,List the names of the first andthe second teams that played a match with the point of the winning margin lower than the 30% of the average winning margin of the matches held in 2011.,"name of the team refers to Team_Name; in 2011 refers to Match_Date LIKE '2011%'; the point of winning margin lower than 30% of the average winning margin refers to Win_Margin < multiply(avg(Win_Margin), 0.3) where Match_Date LIKE '2011%'","SELECT DISTINCT CASE WHEN T1.Win_Margin < ( SELECT AVG(Win_Margin) * 0.3 FROM Match WHERE Match_Date LIKE '2011%' ) THEN T2.Team_Name END, CASE WHEN T1.Win_Margin < ( SELECT AVG(Win_Margin) * 0.3 FROM Match WHERE Match_Date LIKE '2011%' ) THEN T3.Team_Name END FROM Match AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Team_1 INNER JOIN Team AS T3 ON T3.Team_Id = T1.Team_2 WHERE T1.Match_Date LIKE '2011%'"
soccer_2016,"Among the players born in 1977, what is the percentage of the players with a role as a captain?","born in 1977 refers to DOB LIKE '1977%'; a role as a captain refers to Role_Desc = 'Captain'; percentage = divide(count(Role_Id where Role_Desc = 'Captain'), count(Role_Id)) * 100% where DOB LIKE '1977%'",SELECT CAST(SUM(CASE WHEN T1.Role_Desc = 'Captain' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Role_Id) FROM Rolee AS T1 INNER JOIN Player_Match AS T2 ON T2.Role_Id = T1.Role_Id INNER JOIN Player AS T3 ON T3.Player_Id = T2.Player_Id WHERE T3.DOB LIKE '1977%'
soccer_2016,"How many overs were there in the first innings of match ID ""335996""?","the first innings refers to Innings_No = 1; match ID ""335996"" refers to Match_Id = 335996",SELECT COUNT(Over_Id) FROM Ball_by_Ball WHERE Match_Id = 335996 AND Innings_No = 1
soccer_2016,"List the over IDs, ball IDs, and innings numbers of the match ID ""336004"" while the batsman got the maximum scores.","over ID refers to Over_Id; ball ID refers to Ball_Id; innings number refers to Innings_No; match ID ""336004"" refers to Match_Id = 336004; batsman got the maximum scores refers to max(Runs_Scored)","SELECT Over_Id, Ball_Id, Innings_No FROM Batsman_Scored WHERE Match_Id = 336004 ORDER BY Runs_Scored DESC LIMIT 1"
soccer_2016,Describe any five matches IDs that reached over ID 20.,reached over ID 20 refers to Over_Id = 20,SELECT Match_Id FROM Ball_by_Ball WHERE Over_Id = 20 GROUP BY Match_Id LIMIT 5
soccer_2016,"How many players got out in the first inning of match ID ""548335""?","got out refers to Player_Out; the first inning refers to Innings_No = 1; match ID ""548335"" refers to Match_Id = 548335",SELECT SUM(CASE WHEN Match_Id = 548335 THEN 1 ELSE 0 END) FROM Wicket_Taken WHERE Innings_No = 1
soccer_2016,List the players' names who were born in 1971.,players' name refers to Player_name; born in 1971 refers to DOB LIKE '1971%',SELECT Player_name FROM Player WHERE DOB LIKE '1971%'
soccer_2016,Provide the match IDs which were held on 18th April 2015.,on 18th April 2015 refers to DATE(Match_Date) = '2015-04-18',SELECT Match_Id FROM Match WHERE Match_Date LIKE '%2015-04-18%'
soccer_2016,List the match IDs which had players out by hit wickets.,had players out by hit wickets refers to Out_Name = 'hit wicket',SELECT T1.Match_Id FROM Wicket_Taken AS T1 INNER JOIN Out_Type AS T2 ON T2.Out_Id = T1.Kind_Out WHERE T2.Out_Name = 'hit wicket'
soccer_2016,How many players got out by being stumped in the second innings of all matches?,got out by being stumped refers to Out_Name = 'stumped'; the second innings refers to Innings_No = 2,SELECT SUM(CASE WHEN T1.Innings_No = 2 THEN 1 ELSE 0 END) FROM Wicket_Taken AS T1 INNER JOIN Out_Type AS T2 ON T2.Out_Id = T1.Kind_Out WHERE T2.Out_Name = 'stumped'
soccer_2016,How many times did Yuvraj Singh receive the Man of the Match award?,Yuvraj Singh refers to Player_Name = 'Yuvraj Singh'; receive the Man of the Match award refers to Player_Id = Man_of_the_Match,SELECT SUM(CASE WHEN T2.Player_Name = 'Yuvraj Singh' THEN 1 ELSE 0 END) FROM Match AS T1 INNER JOIN Player AS T2 ON T2.Player_Id = T1.Man_of_the_Match
soccer_2016,"Among the players who were born in 1977, provide names and birthdates of the players from England.",born in 1977 refers to DOB LIKE '1977%'; name refers to Player_Name; birthdate refers to DOB; England refers to Country_Name = 'England',"SELECT T2.Player_Name, T2.DOB FROM Country AS T1 INNER JOIN Player AS T2 ON T2.Country_Name = T1.Country_Id WHERE T2.DOB LIKE '1977%' AND T1.Country_Name = 'England'"
soccer_2016,Who got the Man of the Series Award in 2010?,player's name refers to Player_Name; got the Man of the Series Award refers to Man_of_the_Match = Player_Id; in 2010 refers to Season_Year = 2010,SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Match AS T2 ON T2.Man_of_the_Match = T1.Player_Id INNER JOIN Season AS T3 ON T3.Season_Id = T2.Season_Id WHERE T3.Season_Year = 2010 GROUP BY T1.Player_Name
soccer_2016,"Calculate the win rate of the team ""Chennai Super Kings"".","team ""Chennai Super Kings"" refers to Team_Name = 'Chennai Super Kings'; win rate = divide(count(Match_Id where Match_Winner = 3), count(Match_Id)) * 100%",SELECT CAST(SUM(CASE WHEN T1.Match_Winner = 3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Match_Id) FROM Match AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Team_1 INNER JOIN Team AS T3 ON T3.Team_Id = T1.Team_2 WHERE T2.Team_Name = 'Chennai Super Kings' OR T3.Team_Name = 'Chennai Super Kings'
soccer_2016,List the names and countries of the players from Gujarat Lions who played in the match held on 11th April 2016.,player's name refers to Player_Name; country refers to Country_Name; Gujarat Lions refers to Team_Name = 'Gujarat Lions'; on 11th April 2016 refers to Match_Date = '2016-04-11',"SELECT T4.Player_Name, T5.Country_Name FROM Player_Match AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Team_Id INNER JOIN Match AS T3 ON T3.Match_Id = T1.Match_Id INNER JOIN Player AS T4 ON T4.Player_Id = T1.Player_Id INNER JOIN Country AS T5 ON T5.Country_Id = T4.Country_Name WHERE T2.Team_Name = 'Gujarat Lions' AND T3.Match_Date = '2016-04-11'"
soccer_2016,Provide the names and birthdates of players who have left-arm fast skills.,player's name refers to Player_Name; birthdate refers to DOB; have left-arm fast skills refers to Bowling_skill = 'Left-arm fast',"SELECT T1.Player_Name, T1.DOB FROM Player AS T1 INNER JOIN Bowling_Style AS T2 ON T2.Bowling_Id = T1.Bowling_skill WHERE T2.Bowling_skill = 'Left-arm fast'"
soccer_2016,Where did BR Doctrove come from?,the country the umpire comes from refers to Country_Name; BR Doctrove refers to Umpire_Name = 'BR Doctrove',SELECT T1.Country_Name FROM Country AS T1 INNER JOIN Umpire AS T2 ON T2.Umpire_Country = T1.Country_Id WHERE T2.Umpire_Name = 'BR Doctrove'
soccer_2016,Who was the captain of the winning team in the match held on 1st June 2008?,player's name refers to Player_Name; captain refers to Role_Desc = 'Captain'; the winning team refers to Match_Winner = Team_Id; on 1st June 2008 refers to Match_Date = '2008-06-01',SELECT T3.Player_Name FROM Player_Match AS T1 INNER JOIN Match AS T2 ON T2.Match_Id = T1.Match_Id INNER JOIN Player AS T3 ON T3.Player_Id = T1.Player_Id INNER JOIN Rolee AS T4 ON T4.Role_Id = T1.Role_Id WHERE T2.Match_Date = '2008-06-01' AND T4.Role_Desc = 'Captain' AND T2.Match_Winner = T1.Team_Id
soccer_2016,Which team did CK Kapugedera belong to? How many matches did he play?,team refers to Team_Name; CK Kapugedera refers to Player_Name = 'CK Kapugedera',"SELECT T3.Team_Name, COUNT(T2.Match_Id) FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T2.Player_Id = T1.Player_Id INNER JOIN Team AS T3 ON T3.Team_Id = T2.Team_Id WHERE T1.Player_Name = 'CK Kapugedera'"
soccer_2016,"Among the matches held in Mumbai, how many percent of them were held in Wankhede Stadium?","Mumbai refers to City_Name = 'Mumbai'; Wankhede Stadium refers to Venue_Name = 'Wankhede Stadium'; percent = divide(count(Match_Id where Venue_Name = 'Wankhede Stadium'), count(Match_Id)) * 100% where City_Name = 'Mumbai'",SELECT CAST(SUM(CASE WHEN T2.Venue_Name = 'Wankhede Stadium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.Match_Id) FROM City AS T1 INNER JOIN Venue AS T2 ON T2.City_Id = T1.City_Id INNER JOIN Match AS T3 ON T3.Venue_Id = T2.Venue_Id WHERE T1.City_Name = 'Mumbai'
soccer_2016,"Among the players out in match ID 392187, calculate the percentage of players out by bowl.","out by bowl refers to Out_Name = 'bowled'; percentage = divide(count(Player_Out where Out_Name = 'bowled'), count(Player_Out)) * 100% where Match_Id = 392187",SELECT CAST(SUM(CASE WHEN T2.Out_Name = 'bowled' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Player_Out) FROM Wicket_Taken AS T1 INNER JOIN Out_Type AS T2 ON T2.Out_Id = T1.Kind_Out WHERE T1.Match_Id = 392187
soccer_2016,How many percent of the toss-winners decided to bowl first on the pitch from 2010 to 2016?,"decide to bowl first refers to Toss_Name = 'field'; from 2010 to 2016 refers to Match_Date BETWEEN '2010-01-01' AND '2016-12-31'; percent = divide(count(Toss_Id where Toss_Name = 'field'), count(Toss_Id)) * 100% where Match_Date BETWEEN '2010-01-01' AND '2016-12-31'",SELECT CAST(SUM(CASE WHEN T2.Toss_Name = 'field' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Toss_Id) FROM Match AS T1 INNER JOIN Toss_Decision AS T2 ON T2.Toss_Id = T1.Toss_Decide WHERE T1.Match_Date BETWEEN '2010-01-01' AND '2016-12-31'
soccer_2016,"List down the ID of toss winners who decided to bat after winning the ""toss of the coin"".",decided to bat refers to Toss_Decide = 2; ID of toss winners refers to Toss_winner,SELECT Toss_Winner FROM Match WHERE Toss_Decide = 2
soccer_2016,"List down the match ID of matches that the ""man of the match"" award was given to BB McCullum.",,SELECT T1.Match_Id FROM Match AS T1 INNER JOIN Player AS T2 ON T2.Player_Id = T1.Man_of_the_Match WHERE T2.Player_Name = 'BB McCullum'
soccer_2016,"List down the DOB of players who received the ""man of the match"" award.",,SELECT T2.DOB FROM Match AS T1 INNER JOIN Player AS T2 ON T2.Player_Id = T1.Man_of_the_Match
soccer_2016,List down the name of teams that won the toss of the coin from matches with ID from 336010 to 336020.,name of teams refers to Team_Name; won the toss refers to Toss_Winner; matches with ID from 336010 to 336020  refers to Match_Id BETWEEN 336010 AND 336020,SELECT T2.Team_Name FROM Match AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Toss_Winner WHERE T1.Match_Id BETWEEN 336010 AND 336020
soccer_2016,How many matches have Mumbai Indians won?,Mumbai Indians refers to Team_Name = 'Mumbai Indians'; won refers to Match_Winner,SELECT SUM(CASE WHEN T2.Team_Name = 'Mumbai Indians' THEN 1 ELSE 0 END) FROM Match AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Match_Winner
soccer_2016,List down names of teams that have played as second team against Pune Warriors.,names of teams refers to Team_Name; second team refers to Team_2; Pune Warriors refers to Team_Name = 'Pune Warriors',SELECT T2.Team_Name FROM Match AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Team_2 WHERE T1.Team_1 = ( SELECT Team_Id FROM Team WHERE Team_Name = 'Pune Warriors' ) GROUP BY T2.Team_Name
soccer_2016,What is the name of the team that won match ID 336000?,name of the team refers to Team_Name; won refers to Match_Winner,SELECT T2.Team_Name FROM Match AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Match_Winner WHERE T1.Match_Id = 336000
soccer_2016,What are the match IDs that were played at Brabourne Stadium?,at Brabourne Stadium refers to Venue_Name = 'Brabourne Stadium',SELECT T1.Match_Id FROM Match AS T1 INNER JOIN Venue AS T2 ON T2.Venue_Id = T1.Venue_Id WHERE T2.Venue_Name = 'Brabourne Stadium'
soccer_2016,List down the name of venues in season 2.,name of venues refers to Venue_Name; season 2 refers to Season_Id = 2,SELECT T2.Venue_Name FROM Match AS T1 INNER JOIN Venue AS T2 ON T2.Venue_Id = T1.Venue_Id WHERE T1.Season_Id = 2 GROUP BY T2.Venue_Name
soccer_2016,What is the city of M Chinnaswamy Stadium?,city refers to City_Name; M Chinnaswamy Stadium refers to Venue_Name = 'M Chinnaswamy Stadium',SELECT T1.City_Name FROM City AS T1 INNER JOIN Venue AS T2 ON T2.City_Id = T1.City_Id WHERE T2.Venue_Name = 'M Chinnaswamy Stadium'
soccer_2016,List down all of the venues in Mumbai.,venues refers to Venue_Name; Mumbai refers to City_Name = 'Mumbai',SELECT T2.Venue_Name FROM City AS T1 INNER JOIN Venue AS T2 ON T2.City_Id = T1.City_Id WHERE T1.City_Name = 'Mumbai'
soccer_2016,List down all of the winning teams' IDs that played in St George's Park.,winning teams' refers to Match_Winner; played in St George's Park refers to Venue_Name like 'St George%',SELECT T2.Match_Winner FROM Venue AS T1 INNER JOIN Match AS T2 ON T1.Venue_Id = T2.Venue_Id WHERE T1.Venue_Name LIKE 'St George%'
soccer_2016,Is SuperSport Park located at Centurion?,SuperSport Park refers to Venue_Name = 'SuperSport Park'; Centurion refers to City_Name = 'Centurion',SELECT T2.City_Name FROM Venue AS T1 INNER JOIN City AS T2 ON T1.City_Id = T2.City_Id WHERE T1.Venue_Name LIKE 'St George%'
soccer_2016,Calculate the total winning match for Deccan Chargers.,winning refers to Match_Winner; Deccan Chargers refers to Team_Name = 'Deccan Chargers',SELECT SUM(T2.Match_Winner) FROM Team AS T1 INNER JOIN Match AS T2 ON T1.Team_Id = T2.Match_Winner WHERE T1.Team_Name = 'Deccan Chargers'
soccer_2016,Count the total venues located in Pune City.,Pune City refers to City_Name = 'Pune',SELECT SUM(T1.Venue_Name) FROM Venue AS T1 INNER JOIN City AS T2 ON T1.City_Id = T2.City_Id WHERE T2.City_Name = 'Pune'
soccer_2016,Give the player id of the player who was at the non-striker end for the most number of balls in the match 501219.,"most number of balls refers to max(Ball_Id); match 501219 refers to Match_Id = 501219;
player id also refers to non_striker or ball_id",SELECT Ball_Id FROM Ball_by_Ball WHERE Non_Striker = Ball_Id ORDER BY Ball_Id DESC LIMIT 1
soccer_2016,Calculate the average runs scored during the first half of all first innings.,"first half refers to 1 < Over_Id and Over_Id < 25; average = divide(sum(Over_Id) when 1 < Over_Id and Over_Id < 25, sum(Runs_Scored)) as percentage; first innings refers to Innings_No = 1",SELECT CAST(SUM(CASE WHEN 1 < Over_Id AND Over_Id < 25 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(Runs_Scored) FROM Batsman_Scored WHERE Innings_No = 1
soccer_2016,What are the average extra runs given in the second innings of every match?,"second innings refers to Innings_No = 2; average extra runs = divide(sum(Extra_Runs), count(Innings_No)) when Innings_No = 2",SELECT AVG(Innings_No) FROM Extra_Runs WHERE Innings_No = 2
soccer_2016,"Among the matches, what percentage have a winning margin above 100?","winning margin above 100 refers to Win_Margin > 100; percentage = divide(count(Match_Id) when Win_Margin > 100, count(Match_Id)) as percentage",SELECT CAST(COUNT(CASE WHEN Win_Margin > 100 THEN 1 ELSE 0 END) AS REAL) * 100 / TOTAL(Match_Id) FROM `Match`
soccer_2016,List the name of the players born between 1970 and 1990 in descending order of age.,name of the players refers to Player_Name; born between 1970 and 1990 refers to DOB between '1970-01-01' and '1990-12-31',SELECT Player_Name FROM Player WHERE DOB BETWEEN '1970-01-01' AND '1990-12-31' ORDER BY DOB DESC
soccer_2016,"Of the wickets taken in the third overs, how many are without the involvement of fielders?",third overs refers to Over_Id = 3; without the involvement of fielders refers to Fielders = '',SELECT SUM(CASE WHEN Fielders = '' THEN 1 ELSE 0 END) FROM Wicket_Taken WHERE Over_Id = 3
soccer_2016,"From which country does the most umpires are from? How many of them are from the mentioned country?
",which country refers to Country_Id; most umpires refers to max(count(Umpire_Id)),"SELECT T2.Country_Id, COUNT(T1.Umpire_Id) FROM Umpire AS T1 INNER JOIN Country AS T2 ON T2.Country_Id = T1.Umpire_Country GROUP BY T2.Country_Id ORDER BY COUNT(T1.Umpire_Id) DESC LIMIT 1"
soccer_2016,"Among the players, what percentage are both captain and keeper?","captain and keeper refers to Role_Desc = 'CaptainKeeper'; percentage = divide(count(Player_Id) when Role_Desc = 'CaptainKeeper', count(Player_Id)) as percentage",SELECT CAST(SUM(CASE WHEN T2.Role_Desc = 'CaptainKeeper' THEN 1 ELSE 0 END) AS REAL) * 100 / TOTAL(T1.Player_Id) FROM Player_Match AS T1 INNER JOIN Rolee AS T2 ON T1.Role_Id = T2.Role_Id
soccer_2016,"In the players, how many were out by hit wicket?",out by hit wicket refers to Out_Name = 'hit wicket',SELECT Player_Out FROM Wicket_Taken AS T1 INNER JOIN Out_Type AS T2 ON T1.Kind_Out = T2.Out_Id WHERE Out_Name = 'hit wicket'
soccer_2016,"On average, how many players from each country bat with their right hand?","bat with their right hand refers to Batting_hand = 'Right-hand bat'; average = divide(count(Player_Id) when Batting_hand = 'Right-hand bat', count(Country_Name))",SELECT CAST(SUM(CASE WHEN T1.Batting_hand = 'Right-hand bat' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Country_Name) FROM Batting_Style AS T1 INNER JOIN Player AS T2 ON T1.Batting_id = T2.Batting_hand
soccer_2016,What percentage of players have Legbreak skill?,"Legbreak skill refers to Bowling_skill = 'Legbreak' ; percentage = divide(sum(Player_Id) when Bowling_skill = 'Legbreak', count(Player_Id)) as percentage",SELECT CAST(SUM(CASE WHEN T2.Bowling_skill = ' Legbreak' THEN 1 ELSE 0 END) AS REAL) * 100 / TOTAL(T1.Player_Id) FROM Player AS T1 INNER JOIN Bowling_Style AS T2 ON T1.Bowling_skill = T2.Bowling_Id
soccer_2016,"In the matches where the winning margin is less than fifty, how many teams won by wicket?",winning margin is less than fifty refers to Win_Margin < 50; won by wicket refers to Win_Type = 'wickets',SELECT COUNT(T2.Win_Id) FROM `Match` AS T1 INNER JOIN Win_By AS T2 ON T1.Win_Type = T2.Win_Id WHERE T2.Win_Type = 'wickets' AND T1.Win_Margin < 50
soccer_2016,In how many venues did team 2 win the toss and lose the match?,team 2 win the toss refers to Toss_Winner = Team_2 ; lose the match refers to Match_Winner = Team_1,SELECT SUM(CASE WHEN T1.Team_2 = T1.Match_Winner THEN 1 ELSE 0 END) FROM `Match` AS T1 INNER JOIN Venue AS T2 ON T1.Venue_Id = T2.Venue_Id WHERE T1.Team_1 = T1.Toss_Winner
soccer_2016,Which player became the man of the series in the year 2012? Give the name and country of this player.,year 2012 refers to Season_Year = 2012; name of player refers to Player_Name.; country of this player refers to Country_Name,"SELECT T2.Player_Name, T3.Country_Name FROM Season AS T1 INNER JOIN Player AS T2 ON T1.Man_of_the_Series = T2.Player_Id INNER JOIN Country AS T3 ON T2.Country_Name = T3.Country_Id WHERE T1.Season_Year = 2012"
soccer_2016,Give the name of the venue where the most number of matches are held.,name of the venue refers to Venue_Name; most number of matches refers to max(count(Venue_Id)),SELECT T2.Venue_Name FROM `Match` AS T1 INNER JOIN Venue AS T2 ON T1.Venue_Id = T2.Venue_Id GROUP BY T2.Venue_Name ORDER BY COUNT(T2.Venue_Id) DESC LIMIT 1
soccer_2016,Which city hosted the least number of no-result matches?,city refers to City_Name; no-result matches refers to Win_type = 'NoResult'; least number refers to min(count(Win_type = 'NoResult')),SELECT T4.City_Name FROM `Match` AS T1 INNER JOIN Win_By AS T2 ON T1.Win_Type = T2.Win_Id INNER JOIN Venue AS T3 ON T1.Venue_Id = T3.Venue_Id INNER JOIN City AS T4 ON T3.City_Id = T4.City_Id WHERE T2.Win_Type = 'NO Result' GROUP BY T4.City_Id ORDER BY COUNT(T2.Win_Type) ASC LIMIT 1
soccer_2016,Write the name of the player who was the man of the series more than one time.,name of the player refers to Player_Name; man of the series more than one time refers to count(Man_of_the_Series) > 1,SELECT T2.Player_Name FROM Season AS T1 INNER JOIN Player AS T2 ON T1.Man_of_the_Series = T2.Player_Id WHERE T1.Man_of_the_Series > 1
soccer_2016,List the name and country of the players who got more than average catches in ascending order of the number of catches.,"name and country of the players refers to Player_Name and Country_Name; catches refers to Out_name = 'caught'; average catches refers to divide(count(Player_ID) when Out_name = 'caught', sum(Player_ID))","SELECT T1.Player_Name, T4.Country_Name FROM Player AS T1 INNER JOIN Wicket_Taken AS T2 ON T1.Player_Id = T2.Fielders INNER JOIN Out_Type AS T3 ON T2.Kind_Out = T3.Out_Id INNER JOIN Country AS T4 ON T1.Country_Name = T4.Country_Id GROUP BY T1.Player_Name ORDER BY COUNT(T3.Out_Name) ASC"
soccer_2016,"Of the matches that were won by runs by team 1, what percentage have team 1 won the toss and decided to field?","won by runs refers to Win_Type = 'runs'; won the toss and decided to field refers to Toss_Winner and Toss_Name = 'field'; percentage = divide(count(Team_1) when Match_Winner = Team_1 and Toss_Winner = Team_1, count(Team_1)) as percentage",SELECT CAST(COUNT(CASE WHEN T1.Team_1 = T1.Match_Winner = T1.Toss_Winner THEN 1 ELSE 0 END) AS REAL) * 100 / TOTAL(T1.Team_1) FROM `Match` AS T1 INNER JOIN Win_By AS T2 ON T1.Win_Type = T2.Win_Id INNER JOIN Toss_Decision AS T3 ON T1.Toss_Decide = T3.Toss_Id WHERE T3.Toss_Name = 'field' AND T2.Win_Type = 'runs'
soccer_2016,What is the difference in the average number of players out by lbw and runout in the matches?,out by lbw refers to Out_Id = 4; runout refers to Out_Id = 3; average out by lbw refers to  avg(Player_Out when Out_Id = 4); average out by runout refers to  avg(Player_Out when Out_Id = 3),SELECT AVG(T1.Player_Out) FROM Wicket_Taken AS T1 INNER JOIN Out_Type AS T2 ON T1.Kind_Out = T2.Out_Id WHERE T2.Out_Name = 'lbw'
soccer_2016,Identify by their ID all the overs in which the player with ID 7 was on strike.,Identify by their ID all the overs refers to Over_Id; player with ID 7 was on strike refers to Striker = 7,SELECT DISTINCT Over_Id FROM Ball_by_Ball WHERE Striker = 7
soccer_2016,How many first teams chose to bat after winning the toss?,first teams refers to Team_1; chose to bat after winning the toss refers to Toss_Winner and Toss_Decide = 2,SELECT COUNT(Team_1) FROM `Match` WHERE Team_1 = Toss_Winner AND Toss_Decide = 2
soccer_2016,How many games were played in March 2010?,were played in March 2010 refers to Match_Date = '2010-03%',SELECT SUM(CASE WHEN Match_Date LIKE '2010-03%' THEN 1 ELSE 0 END) FROM `Match`
soccer_2016,How many players are older than Gurkeerat Singh player?,older than Gurkeerat Singh player refers to DOB ! = 'Gurkeerat Singh' and DOB < '1990-06-29',SELECT SUM(CASE WHEN DOB < '1990-06-29' THEN 1 ELSE 0 END) FROM Player WHERE Player_Name != 'Gurkeerat Singh'
soccer_2016,How many times has SR Watson been named 'Man of the Match'?,,SELECT SUM(CASE WHEN T2.Player_Name = 'SR Watson' THEN 1 ELSE 0 END) FROM `Match` AS T1 INNER JOIN Player AS T2 ON T1.Man_of_the_Match = T2.Player_Id
soccer_2016,Indicate the name of the most versatile players of the Delhi Daredevils.,"if a player has multiple roles in a match, it means this player is versatile; name refers to Player_Name; most versatile player refers to MAX(COUNT(Role_id)); Delhi Daredevils refers to Team_Name = 'Delhi Daredevils'",SELECT T3.Player_Name FROM Player_Match AS T1 INNER JOIN Team AS T2 ON T1.Team_Id = T2.Team_Id INNER JOIN Player AS T3 ON T1.Player_Id = T3.Player_Id WHERE T2.Team_Name = 'Delhi Daredevils' GROUP BY T3.Player_Name ORDER BY COUNT(T1.Role_Id) DESC LIMIT 1
soccer_2016,What is the name of the player who has been chosen the most times for 'Man of the Series'?,name of the player refers to Player_Name; most times for 'Man of the Series' refers to max(count(Man_of_the_Match)),SELECT T3.Player_Name FROM Season AS T1 INNER JOIN Match AS T2 ON T1.Man_of_the_Series = T2.Man_of_the_Match INNER JOIN Player AS T3 ON T2.Man_of_the_Match = T3.Player_Id GROUP BY T3.Player_Name ORDER BY COUNT(T1.Man_of_the_Series) DESC LIMIT 1
soccer_2016,In what year did SP Narine win the Orange Cap?,year refers to Season_Year,"SELECT T4.Season_Year, T4.Orange_Cap FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Match AS T3 ON T2.Match_Id = T3.Match_Id INNER JOIN Season AS T4 ON T3.Season_Id = T4.Season_Id WHERE T1.Player_Name = 'SP Narine' GROUP BY T4.Season_Year, T4.Orange_Cap"
soccer_2016,Which teams have had a player awarded the Purple Cap and another with the Orange Cap in the same season?,,"SELECT T5.Team_Name, T1.Orange_Cap, T1.Purple_Cap FROM Season AS T1 INNER JOIN Match AS T2 ON T1.Season_Id = T2.Season_Id INNER JOIN Player_Match AS T3 ON T2.Match_Id = T3.Match_Id INNER JOIN Player AS T4 ON T3.Player_Id = T4.Player_Id INNER JOIN Team AS T5 ON T3.Team_Id = T5.Team_Id GROUP BY T5.Team_Name, T1.Orange_Cap, T1.Purple_Cap"
soccer_2016,List all Zimbabwean players.,Zimbabwean refers to Country_Name = 'Zimbabwea'; players refers to Player_Name,SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_Id WHERE T2.Country_Name = 'Zimbabwea'
soccer_2016,How many players bat with their left hands?,bat with their left hands refers to Batting_hand = 'Left-hand bat',SELECT SUM(CASE WHEN T2.Batting_hand = 'Left-hand bat' THEN 1 ELSE 0 END) FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id
soccer_2016,How many games were not won by runs?,not won by runs refers to Win_Type ! = 'runs',SELECT SUM(CASE WHEN T2.Win_Type != 'runs' THEN 1 ELSE 0 END) FROM `Match` AS T1 INNER JOIN Win_By AS T2 ON T1.Win_Type = T2.Win_Id
soccer_2016,List the name of all New Zealand umpires.,New Zealand umpires refers to Country_Name = 'New Zealand'; name of umpires refers to Umpire_Name,SELECT T1.Umpire_Name FROM Umpire AS T1 INNER JOIN Country AS T2 ON T1.Umpire_Country = T2.Country_Id WHERE T2.Country_Name = 'New Zealand'
soccer_2016,In which country do most players have the 'slow left-arm chinaman' bowling style?,'slow left-arm chinaman' bowling style refers to Bowling_skill = 'Slow left-arm chinaman'; most players  refers to max(count(Country_Id)),SELECT T3.Country_Name FROM Bowling_Style AS T1 INNER JOIN Player AS T2 ON T1.Bowling_Id = T2.Bowling_skill INNER JOIN Country AS T3 ON T2.Country_Name = T3.Country_Id WHERE T1.Bowling_skill = 'Slow left-arm chinaman'
soccer_2016,In which venue did Kochi Tuskers Kerala play most of their matches?,Kochi Tuskers Kerala refers to Team_Name = 'Kochi Tuskers Kerala'; most of their matches refers to max(Venue_Id),SELECT T1.Venue_Name FROM Venue AS T1 INNER JOIN Match AS T2 ON T1.Venue_Id = T2.Venue_Id INNER JOIN Team AS T3 ON T2.Team_1 = T3.Team_Id WHERE T3.Team_Name = 'Kochi Tuskers Kerala' GROUP BY T1.Venue_Name
soccer_2016,In how many games in which the batting team was the Delhi Daredevils were no runs scored?,batting team was the Delhi Daredevils refers to Team_Name = 'Delhi Daredevils' and Team_1 = Team_Id where Team_Batting = 1 or Team_2 = Team_Id where Team_Batting = 2; no runs scored refers to Runs_Scored = 0,SELECT COUNT(T1.Runs_Scored) FROM Batsman_Scored AS T1 INNER JOIN Ball_by_Ball AS T2 ON T1.Match_Id = T2.Match_Id INNER JOIN Match AS T3 ON T2.Match_Id = T3.Match_Id INNER JOIN Team AS T4 ON T3.Team_1 = T4.Team_Id WHERE T2.Team_Batting = 1 OR T2.Team_Batting = 2 AND T4.Team_Name = 'Delhi Daredevils'
soccer_2016,In what percentage of games played at the Dr DY Patil Sports Academy venue did the winning team win by a margin of less than 10?,"Dr DY Patil Sports Academy venue refers to Venue_Name = 'Dr DY Patil Sports Academy'; win by a margin of less than 10 refers to Win_Margin < 10; percentage = divide(count(Venue_Id) when Win_Margin < 10, sum(Venue_Id)) as percentage",SELECT CAST(COUNT(CASE WHEN T2.Win_Margin < 10 THEN 1 ELSE 0 END) AS REAL) * 100 / TOTAL(T1.Venue_Id) FROM Venue AS T1 INNER JOIN Match AS T2 ON T1.Venue_Id = T2.Venue_Id WHERE T1.Venue_Name = 'Dr DY Patil Sports Academy'
soccer_2016,What is the average number of extra runs made as noballs?,"noballs refers to Extra_Name = 'noballs' ; average number = divide(sum(Extra_Runs), count(Extra_Runs))",SELECT AVG(T1.Extra_Runs) FROM Extra_Runs AS T1 INNER JOIN Extra_Type AS T2 ON T1.Extra_Type_Id = T2.Extra_Id WHERE T2.Extra_Name = 'noballs'
soccer_2016,"List the player's ID of the top five players, by descending order, in terms of bowling skill.",player's ID refers to Player_Id,SELECT Player_Id FROM Player ORDER BY Bowling_skill DESC LIMIT 5
soccer_2016,"How many players were born before 10/16/1975, and have a bowling skill of less than 3?",born before 10/16/1975 refers to DOB < 1975-10-16; bowling skill of less than 3 refers to Bowling_skill < 3,SELECT COUNT(*) FROM Player WHERE DOB < '1975-10-16' AND Bowling_skill < 3
soccer_2016,What is the name of the youngest player?,name refers to Player_Name; youngest player refers to max(DOB),SELECT Player_Name FROM Player ORDER BY DOB DESC LIMIT 1
soccer_2016,"Tally the player IDs of ""Man of the Series"" awardees for the seasons from 2011 to 2015.",seasons from 2011 to 2015 refers to 2011 < Season_Year < 2015,SELECT Man_of_the_Series FROM Season WHERE 2011 < Season_Year < 2015
soccer_2016,What is the total number of runs scored by the batsmen during the 2nd inning of the match ID 335988?,number of runs refers to Runs_Scored; 2nd inning refers to Innings_No = 2,SELECT SUM(Runs_Scored) FROM Batsman_Scored WHERE Match_Id = 335988 AND Innings_No = 2
soccer_2016,"Between match nos. 335989 and 337000, how many times did a batsman score more than 3 runs during over no. 1, ball no. 1, and inning no. 1 of the matches?","Between match no. 335989 and 337000 refers to 335989 < Match_Id < 337000; batsman score more than 3 runs during over no. 1, ball no. 1, and inning no. 1 of the matches refers to Runs_Scored > 3 and  Over_Id = 1 and Ball_Id = 1 and Innings_No = 1",SELECT SUM(CASE WHEN Runs_Scored > 3 THEN 1 ELSE 0 END) FROM Batsman_Scored WHERE 335989 < Match_Id < 337000 AND Innings_No = 1 AND Over_Id = 1 AND Ball_Id = 1
soccer_2016,Give me the match ID and date of the matches that were held in Kingsmead for three consecutive days.,date of the matches refers to Match_Date; held in Kingsmead refers to Venue_Name = 'Kingsmead',"SELECT T1.Match_Id, T1.Match_Date FROM `Match` AS T1 INNER JOIN Venue AS T2 ON T1.Venue_Id = T2.Venue_Id WHERE T2.Venue_Name = 'Kingsmead'"
soccer_2016,How many times did the matches were held in MA Chidambaram Stadium from 5/9/2009 to 8/8/2011?,MA Chidambaram Stadium refers to Venue_Name = 'MA Chidambaram Stadium' ; from 5/9/2009 to 8/8/2011 refers to Match_Date between '2009-05-09' and '2011-08-08',SELECT SUM(CASE WHEN Venue_Name = 'MA Chidambaram Stadium' THEN 1 ELSE 0 END) FROM `Match` AS T1 INNER JOIN Venue AS T2 ON T1.Venue_Id = T2.Venue_Id WHERE Match_Date BETWEEN '2009-05-09' AND '2011-08-08'
soccer_2016,Where was the ID 336005 match held? Please give me the venue and the city.,ID 336005 match refers to Match_Id = '336005'; venue refers to Venue_Name; city refers to City_Name,"SELECT T2.Venue_Name, T3.City_Name FROM `Match` AS T1 INNER JOIN Venue AS T2 ON T1.Venue_Id = T2.Venue_Id INNER JOIN City AS T3 ON T2.City_Id = T3.City_Id WHERE T1.Match_Id = '336005'"
soccer_2016,"Which team wins the toss during the match ID 336011, and can you tell me whether they decided to bat or field?",wins the toss refers to Toss_Winner; whether they decided to bat or field refers to Toss_Name,"SELECT T2.Toss_Name, T1.Toss_Decide, T1.Toss_Winner FROM `Match` AS T1 INNER JOIN Toss_Decision AS T2 ON T1.Toss_Decide = T2.Toss_Id WHERE T1.Match_Id = '336011'"
soccer_2016,"Among the South African players, how many were born before 4/11/1980?",South African players refers to Country_Name = 'South Africa'; born before 4/11/1980 refers to DOB < '1980-4-11',SELECT SUM(CASE WHEN T1.DOB < '1980-4-11' THEN 1 ELSE 0 END) FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_Id WHERE T2.Country_Name = 'South Africa'
soccer_2016,Write down the name of players whose bowling skill is Legbreak.,name of players refers to Player_Name,SELECT T2.Player_Name FROM Bowling_Style AS T1 INNER JOIN Player AS T2 ON T1.Bowling_Id = T2.Bowling_skill WHERE T1.Bowling_skill = 'Legbreak'
soccer_2016,When and for what role did the youngest player appear in his first match?,When refers to Match_Date; youngest player refers to max(DOB); first match refers to min(Match_Date),"SELECT T1.Match_Date, T4.Role_Desc FROM `Match` AS T1 INNER JOIN Player_Match AS T2 ON T1.Match_Id = T2.Match_Id INNER JOIN Player AS T3 ON T2.Player_Id = T3.Player_Id INNER JOIN Rolee AS T4 ON T2.Role_Id = T4.Role_Id ORDER BY T3.DOB DESC LIMIT 1"
soccer_2016,"Tally the match IDs in which V Kohli is the ""Man of the Match"".",,SELECT T1.Match_Id FROM `Match` AS T1 INNER JOIN Player AS T2 ON T1.Man_of_the_Match = T2.Player_Id WHERE T2.Player_Name = 'V Kohli'
soccer_2016,"From 2011 to 2012, how many Australian players became the ""Man of the Match""?",From 2011 to 2012 refers to Match_Date between '2011%' and '2012%'; Australian players refers to Country_Name = 'Australia',SELECT SUM(CASE WHEN T1.Match_Date BETWEEN '2011%' AND '2012%' THEN 1 ELSE 0 END) FROM `Match` AS T1 INNER JOIN Player AS T2 ON T2.Player_Id = T1.Man_of_the_Match INNER JOIN Country AS T3 ON T3.Country_Id = T2.Country_Name WHERE T3.Country_Name = 'Australia'
soccer_2016,"Who among the players won both ""Man of the Series"" and ""Orange Cap"" in the same season?",Who refers to Player_Name;,SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Season AS T2 ON T1.Player_Id = T2.Man_of_the_Series = T2.Orange_Cap
soccer_2016,When did the Sunrisers Hyderabad win their first match?,Sunrisers Hyderabad refers to Team_Name = 'Sunrisers Hyderabad'; win their first match refers to Match_Winner and min(Match_Date),SELECT T1.Match_Date FROM `Match` AS T1 INNER JOIN Team AS T2 ON T1.Match_Winner = T2.Team_Id WHERE T2.Team_Name = 'Sunrisers Hyderabad'
soccer_2016,Write down the player names and IDs of the English umpires.,English umpires refers to Country_Name = 'England',"SELECT T1.Umpire_Name, T1.Umpire_Id FROM Umpire AS T1 INNER JOIN Country AS T2 ON T1.Umpire_Country = T2.Country_Id WHERE T2.Country_Name = 'England'"
soccer_2016,Calculate the run rate at the end of 17 overs of the match ID 335987 on 4/18/2008.,"4/18/2008 refers to Match_Date = 4/18/2008; end of 17 overs refers to count(Toss_Name = 'field' ) = 17; run rate = divide(sum(Runs_Scored) when Toss_Name = 'bat', sum(Over_Id) when Toss_Name = 'field')",SELECT CAST(COUNT(CASE WHEN T1.Toss_Name = 'bat' THEN T3.Runs_Scored ELSE NULL END) AS REAL) / SUM(CASE WHEN T1.Toss_Name = 'field' THEN 1 ELSE 0 END) FROM Toss_Decision AS T1 INNER JOIN Match AS T2 ON T1.Toss_Id = T2.Toss_Decide INNER JOIN Batsman_Scored AS T3 ON T2.Match_Id = T3.Match_Id WHERE T2.Match_Id = 335987 AND T2.Match_Date = '2008-04-18' GROUP BY T3.Over_Id HAVING COUNT(T1.Toss_Name = 'field') = 17
soccer_2016,"Compute the run rate at the end of 16 overs of the match ID 335999. Please include the name of the ""Man of_the Match"".","end of 16 overs refers to count(Toss_Name = 'field' ) = 16; run rate = divide(count(Runs_Scored) when Toss_Name = 'bat', sum(Over_Id)when Toss_Name = 'field'); name refers to Player_Name",SELECT CAST(COUNT(CASE WHEN T1.Toss_Name = 'bat' THEN T3.Runs_Scored ELSE NULL END) AS REAL) / SUM(CASE WHEN T1.Toss_Name = 'field' THEN 1 ELSE 0 END) FROM Toss_Decision AS T1 INNER JOIN Match AS T2 ON T1.Toss_Id = T2.Toss_Decide INNER JOIN Batsman_Scored AS T3 ON T2.Match_Id = T3.Match_Id WHERE T2.Match_Id = 335987 AND T2.Match_Date = '2008-04-18' GROUP BY T3.Over_Id HAVING COUNT(T1.Toss_Name = 'field') = 16
soccer_2016,What is the id of the team with the highest number of matches won?,id of the team refers to Team_Id; highest number of matches won refers to max(count(Match_Winner)),SELECT Match_Id FROM `Match` ORDER BY Match_Winner DESC LIMIT 1
soccer_2016,Which year do the majority of the players were born?,year refers to DOB; majority of the players refers to max(count(Player_Id)),SELECT DOB FROM Player GROUP BY DOB ORDER BY COUNT(DOB) DESC LIMIT 1
soccer_2016,What is the date of the match that has the highest wager on the final result of a game?,date of the match refers to Match_Date; highest wager refers to max(Win_Margin),SELECT Match_Date FROM `Match` ORDER BY Win_Margin DESC LIMIT 1
soccer_2016,Which season has the fewest number of matches?,fewest number of matches refers to min(count(Match_Id)),SELECT Season_Id FROM `Match` GROUP BY Season_Id ORDER BY COUNT(Match_Id) LIMIT 1
soccer_2016,How many players have won at least 5 man of the match awards?,won at least 5 man of the match awards refers to COUNT(Match_Id) > = 5,SELECT COUNT(Match_Id) FROM `Match` GROUP BY Man_of_the_Match HAVING COUNT(Match_Id) >= 5
soccer_2016,Who is the player who received the man of the match award during the last match of Season 9?,Who refers to Player_Name; last match of Season 9 refers to max(Match_Date) where Season_Id = 9,SELECT T1.Player_name FROM Player AS T1 INNER JOIN Match AS T2 ON T1.Player_Id = T2.Man_of_the_Match WHERE T2.Season_Id = 9 ORDER BY T2.Match_Date DESC LIMIT 1
soccer_2016,What is the name of the team that won the first ever match?,name of the team refers to Team_Name; won the first ever match refers to Match_Winner where max(Match_Date),SELECT T1.Team_Name FROM team AS T1 INNER JOIN Match AS T2 ON T1.Team_Id = T2.Match_Winner WHERE T2.Season_Id = 1 ORDER BY T2.Match_Date LIMIT 1
soccer_2016,How many cities are in U.A.E?,U.A.E refers to Country_Name = 'U.A.E',SELECT SUM(CASE WHEN T2.Country_Name = 'U.A.E' THEN 1 ELSE 0 END) FROM City AS T1 INNER JOIN country AS T2 ON T1.Country_id = T2.Country_id
soccer_2016,List the names of all the umpires from England.,from England refers to Country_Name = 'England',SELECT T1.Umpire_Name FROM Umpire AS T1 INNER JOIN country AS T2 ON T2.Country_Id = T1.Umpire_Country WHERE T2.Country_Name = 'England'
soccer_2016,How many players bowl in the legbreak style?,legbreak style refers to Bowling_skill = 'Legbreak',SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Bowling_Style AS T2 ON T1.Bowling_skill = T2.Bowling_Id WHERE T2.Bowling_skill = 'Legbreak'
soccer_2016,How many matches did Rajasthan Royals play in Season 8?, Season 8 refers to Season_Id = 8,SELECT SUM(CASE WHEN T1.Season_Id = 8 THEN 1 ELSE 0 END) FROM `Match` AS T1 INNER JOIN Team AS T2 ON T1.Team_1 = T2.Team_Id OR T1.Team_2 = T2.Team_Id WHERE T2.Team_Name = 'Rajasthan Royals'
soccer_2016,Which country is umpire TH Wijewardene from?,country refers to Country_Name,SELECT T2.Country_Name FROM Umpire AS T1 INNER JOIN country AS T2 ON T2.Country_Id = T1.Umpire_Country WHERE T1.Umpire_Name = 'TH Wijewardene'
soccer_2016,What are the names of the venues in Abu Dhabi?,names of the venues refers to Venue_Name; Abu Dhabi refers to City_Name = 'Abu Dhabi',SELECT T1.Venue_Name FROM Venue AS T1 INNER JOIN City AS T2 ON T1.City_Id = T2.City_Id WHERE T2.City_Name = 'Abu Dhabi'
soccer_2016,Which country is the youngest player from?,country refers to Country_Name; youngest player refers to max(DOB),SELECT T1.Country_Name FROM Country AS T1 INNER JOIN Player AS T2 ON T1.Country_Id = T2.Country_Name ORDER BY T2.DOB DESC LIMIT 1
soccer_2016,List all the names of the winning team's players in the first match of season 1.,names refers to Player_Name; winning team's refers to Match_Winner; first match of season 1 refers to Season_Id = 1 and min(Match_Date),SELECT T3.Player_Name FROM `Match` AS T1 INNER JOIN Player_Match AS T2 ON T1.Match_Winner = T2.Team_Id INNER JOIN Player AS T3 ON T2.Player_Id = T3.Player_Id WHERE T1.Season_Id = 1 ORDER BY T1.Match_Date LIMIT 1
soccer_2016,Who is the youngest player to have won the Purple Cap?,"Who refers to Player_Name; youngest player to have won the Purple Cap refers to min(subtract(Season_Year, DOB))","SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Season AS T2 ON T1.Player_Id = T2.Purple_Cap ORDER BY T2.Season_Year - SUBSTR(T1.DOB, 1, 4) LIMIT 1"
soccer_2016,"Provide the complete name of the venue, city and country where the last match was held.","name of the venue, city and country refers to Venue_Name and City_Name and Country_Name; last match refers to max(Match_Date)","SELECT T1.Venue_Name, T2.City_Name, T3.Country_Name FROM Venue AS T1 INNER JOIN City AS T2 ON T1.City_Id = T2.City_Id INNER JOIN Country AS T3 ON T2.Country_Id = T3.Country_Id INNER JOIN Match AS T4 ON T1.Venue_Id = T4.Venue_Id ORDER BY T4.Match_Date DESC LIMIT 1"
soccer_2016,"How many overs were there in each innings of match ID ""336011""?",,"SELECT SUM(CASE WHEN Innings_No = 1 THEN 1 ELSE 0 END) AS IN1 , SUM(CASE WHEN Innings_No = 2 THEN 1 ELSE 0 END) AS IN2 FROM Ball_by_Ball WHERE Match_Id = 336011"
soccer_2016,"List the ball IDs, scores, and innings numbers in the over ID 20 of match ID ""335988"".",innings numbers refers to Innings_No,"SELECT Ball_Id, Runs_Scored, Innings_No FROM Batsman_Scored WHERE Match_Id = 335988 AND Over_Id = 20"
soccer_2016,How many matches were held in 2011?,held in 2011 refers to Match_Date like '2011%';,SELECT COUNT(Match_Id) FROM `Match` WHERE Match_Date LIKE '2011%'
soccer_2016,How old is Ishan Kishan in 2022?,"old refers to SUBTRACT(2022, SUBSTR(DOB, 1, 4)); Ishan Kishan refers to Player_Name = 'Ishan Kishan';","SELECT 2022 - SUBSTR(DOB, 1, 4) FROM Player WHERE Player_Name = 'Ishan Kishan'"
soccer_2016,Calculate the win rate of the toss-winners in 2012.,"in 2012 refers to Match_Date like '2012%'; win rate refers to DIVIDE(COUNT(Toss_Winner = Match_Winner), COUNT(Match_Date like '2012%'))",SELECT CAST(SUM(CASE WHEN Toss_Winner = Match_Winner THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Match_Date LIKE '2012%' THEN 1 ELSE 0 END) FROM `Match`
soccer_2016,How many matches in 2009 had win margins of less than 10?,in 2009 refers to Match_Date like '2009%'; win margins of less than 10 refers to Win_Margin < 10;,SELECT COUNT(Match_Id) FROM `Match` WHERE Match_Date LIKE '2009%' AND Win_Margin < 10
soccer_2016,Provide the players' names in both teams of the match that was held in June 2014.,"held in June 2014 refers to SUBSTR(Match_Date, 7, 1) = 6 and SUBSTR(Match_Date, 1, 4) = 2014","SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Match AS T3 ON T2.Match_Id = T3.Match_Id WHERE SUBSTR(T3.Match_Date, 1, 4) = '2014' AND SUBSTR(T3.Match_Date, 7, 1) = '6' LIMIT 2"
soccer_2016,How many matches did Mohammad Hafeez play?,Mohammad Hafeez refers to Player_Name = 'Mohammad Hafeez';,SELECT SUM(CASE WHEN T2.Player_Name = 'Mohammad Hafeez' THEN 1 ELSE 0 END) FROM Player_Match AS T1 INNER JOIN Player AS T2 ON T1.Player_Id = T2.Player_Id
soccer_2016,"Among the players from South Africa, provide the players' names who were born in 1984.",from South Africa refers to Country_Name = 'South Africa'; born in 1984 refers to DOB like '1984%';,SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_Id WHERE T2.Country_Name = 'South Africa' AND T1.DOB LIKE '1984%'
soccer_2016,"Among the"" Mumbai Indians"" team that played in 2009, how many percent of the matches did they win?","played in 2009 Match_Date like '2009%'; Mumbai Indians"" team refers to Team_Name = 'Mumbai Indians'; percent of the matches did they win refers to DIVIDE(COUNT(Match_Winner = Team_Id), COUNT(Match_Id))",SELECT CAST(SUM(CASE WHEN T1.Match_Winner = T2.Team_Id THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Match_Id) FROM `Match` AS T1 INNER JOIN Team AS T2 ON T1.Team_1 = T2.Team_Id OR T1.Team_2 = T2.Team_Id WHERE T2.Team_Name = 'Mumbai Indians' AND T1.Match_Date LIKE '2009%'
soccer_2016,What is the ratio of players with batting hands of left and right?,"batting hands of left refers to Batting_hand = 'Left-hand bat'; right refers to Batting_hand = 2; ratio refers to DIVIDE(COUNT(Batting_hand = 'Right-hand bat'), COUNT(Batting_hand = 2))",SELECT CAST(SUM(CASE WHEN T2.Batting_hand = 'Left-hand bat' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.Batting_hand = 'Right-hand bat' THEN 1 ELSE 0 END) FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id
soccer_2016,Who is the eldest player and where did he/she come from?,eldest player refers to MIN(DOB); where he/she come from refers to Country_Name,"SELECT T1.Player_Name, T2.Country_Name FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_Id ORDER BY T1.DOB LIMIT 1"
soccer_2016,Which bowling skills did the players from Zimbabwea have?,Zimbabwea refers to Country_Name = 'Zimbabwea';,SELECT T1.Bowling_skill FROM Bowling_Style AS T1 INNER JOIN Player AS T2 ON T1.Bowling_Id = T2.Bowling_skill INNER JOIN Country AS T3 ON T2.Country_Name = T3.Country_Id WHERE T3.Country_Name = 'Zimbabwea'
soccer_2016,List the IDs and names of the umpires from New Zealand.,New Zealand refers to Country_Name = 'New Zealand'; ID of the umpire refers to Umpire_Id; name of the umpire refers to Umpire_Name,"SELECT T1.Umpire_Id, T1.Umpire_Name FROM Umpire AS T1 INNER JOIN Country AS T2 ON T1.Umpire_Country = T2.Country_Id WHERE T2.Country_Name = 'New Zealand'"
soccer_2016,Who was the captain-keeper of Rising Pune Supergiants?,captain-keeper refers to Role_Desc = 'CaptainKeeper'; Rising Pune Supergiants refers to Role_Desc = 'CaptainKeeper',SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Team AS T3 ON T2.Team_Id = T3.Team_Id INNER JOIN Rolee AS T4 ON T2.Role_Id = T4.Role_Id WHERE T3.Team_Name = 'Rising Pune Supergiants' AND T4.Role_Desc = 'CaptainKeeper' GROUP BY T1.Player_Name
soccer_2016,How many matches did the Sunrisers Hyderabad team win in 2013?,Sunrisers Hyderabad team refers to Team_Name = 'Sunrisers Hyderabad'; in 2013 refers to Match_Date like '2013%';,SELECT SUM(CASE WHEN Match_Date LIKE '2013%' THEN 1 ELSE 0 END) FROM `Match` AS T1 INNER JOIN Team AS T2 ON T1.Match_Winner = T2.Team_Id WHERE T2.Team_Name = 'Sunrisers Hyderabad'
soccer_2016,Provide match ID which had the extra type of penalty.,extra type of penalty refers to Extra_Name = 'penalty';,SELECT T1.Match_Id FROM Extra_Runs AS T1 INNER JOIN Extra_Type AS T2 ON T1.Extra_Type_Id = T2.Extra_Id WHERE T2.Extra_Name = 'penalty'
soccer_2016,Name the teams played in a match which resulted in a tie in 2015.,"resulted in a tie refers to Win_Type = 'Tie'; in 2015 refers to SUBSTR(Match_Date, 1, 4) = 2015","SELECT T1.Team_Name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.Team_Id = T2.Team_1 OR T1.Team_Id = T2.Team_2 INNER JOIN Win_By AS T3 ON T2.Win_Type = T3.Win_Id WHERE SUBSTR(T2.Match_Date, 1, 4) = '2015' AND T3.Win_Type = 'Tie' LIMIT 1"
soccer_2016,Calculate the average players out in the first innings per match. How many of them were out by the leg before wicket?,out by the leg refers to Out_Name = 'lbw'; out in the first innings refers to Innings_No = 2;,"SELECT CAST(COUNT(T1.Player_Out) AS REAL) / COUNT(T1.Match_Id), SUM(CASE WHEN T2.Out_Name = 'lbw' THEN 1 ELSE 0 END) FROM Wicket_Taken AS T1 INNER JOIN Out_Type AS T2 ON T1.Kind_Out = T2.Out_Id WHERE T1.Innings_No = 2"
soccer_2016,How many matches are there in 2008?,in 2008 refers to Match_Date like '2008%',SELECT COUNT(Match_Id) FROM `Match` WHERE Match_Date LIKE '2008%'
soccer_2016,Count the matches with a total of two innings.,total of two innings refers to innings_no = 2;,SELECT COUNT(Match_Id) FROM Wicket_Taken WHERE innings_no = 2
soccer_2016,"Which is the country of the city named ""Rajkot""?","city named ""Rajkot"" refers to city_name = 'Rajkot';",SELECT T1.Country_Name FROM Country AS T1 INNER JOIN city AS T2 ON T1.Country_Id = T2.Country_Id WHERE city_name = 'Rajkot'
soccer_2016,How many of the matches are Superover?,are Superover refers to win_type = 'wickets';,SELECT SUM(CASE WHEN T2.win_type = 'wickets' THEN 1 ELSE 0 END) FROM `Match` AS T1 INNER JOIN Win_By AS T2 ON T1.Win_Type = T2.Win_Id
soccer_2016,"What are the teams that played in a match with the point of winning margin of 38 on April 30, 2009?","point of winning margin of 38 refers to win_margin = 38; on April 30, 2009 refers to match_date = '2009-04-30'; team refers to Team_Name;",SELECT T1.Team_Name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.Team_Id = T2.Team_1 WHERE T2.win_margin = 38 AND match_date = '2009-04-30'
soccer_2016,Give the name of the team of T Kohli in the match ID 335989.,team of T Kohli refers to player_name = 'T Kohli';,SELECT T1.Team_Name FROM Team AS T1 INNER JOIN Player_Match AS T2 ON T1.Team_Id = T2.Team_Id INNER JOIN Player AS T3 ON T2.Player_Id = T3.Player_Id WHERE T2.match_id = 335989 AND T3.player_name = 'T Kohli'
soccer_2016,"How many venues are located at Centurion, South Africa?",venues are located at Centurion refers to city_name = 'Centurion'; South Africa refers to country_name = 'South Africa',SELECT COUNT(T1.Venue_name) FROM Venue AS T1 INNER JOIN City AS T2 ON T1.City_Id = T2.City_Id INNER JOIN Country AS T3 ON T2.Country_Id = T3.Country_Id WHERE T3.country_name = 'South Africa' AND T2.city_name = 'Centurion'
soccer_2016,"Among the matches of Delhi Daredevils in 2014, how many won matches are there?",Delhi Daredevils refers to team_name = 'Delhi Daredevils'; in 2014 refers to Match_Date contains '2014';,SELECT COUNT(T1.Match_Winner) FROM `Match` AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Team_1 OR T2.Team_Id = T1.Team_2 WHERE T2.team_name = 'Delhi Daredevils' AND T1.Match_Date LIKE '2014%'
soccer_2016,"Among the matches played by Royal Challengers Bangalore, what is the match ID of the match with the highest winning margin?",Royal Challengers Bangalore refers to team_name = 'Royal Challengers Bangalore'; highest winning margin refers to MAX(win_margin),SELECT T2.match_id FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_id = T2.match_winner WHERE T1.team_name = 'Royal Challengers Bangalore' AND T2.match_date LIKE '2012%' ORDER BY T2.win_margin DESC LIMIT 1
soccer_2016,How many times did K Goel played as a player only?,K Goel refers to Player_Name = 'K Goel'; played as a player only refers to Role_Id = 3,SELECT COUNT(T1.Match_Id) FROM Player_Match AS T1 INNER JOIN Player AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Rolee AS T3 ON T1.Role_Id = T3.Role_Id WHERE T2.Player_Name = 'K Goel' AND T3.Role_Id = 3
soccer_2016,What is the average winning margin of the matches held in Newlands?,average winning margin refers to avg(win_margin); held in Newlands refers to venue_name = 'Newlands',SELECT AVG(T1.win_margin) FROM Match AS T1 INNER JOIN Venue AS T2 ON T1.venue_id = T2.venue_id WHERE T2.venue_name = 'Newlands'
soccer_2016,Provide the losing team's name in the match ID 336039.,"losing team's name refers to Team_Id NOT in ""match_winner"" column",SELECT Team_Name FROM Team WHERE Team_Id = ( SELECT CASE WHEN Team_1 = Match_Winner THEN Team_2 ELSE Team_1 END FROM Match WHERE match_id = 336039 )
soccer_2016,What is the venue for the match ID 829768?,"
venue refers to Venue_Name",SELECT T1.Venue_Name FROM Venue AS T1 INNER JOIN Match AS T2 ON T1.venue_id = T2.venue_id WHERE T2.match_id = 829768
soccer_2016,What is the second team's name in the match with the lowest winning margin?,lowest winning margin refers to MIN(win_margin); team name refers to team_name; second team refers to team_2,SELECT T1.team_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_id = T2.team_2 ORDER BY T2.win_margin LIMIT 1
soccer_2016,"Among the matches in 2013, what is the percentage of winning of the team ""Mumbai Indians""?","in 2013 refers to Match_Date like '2013%'; winning of the team ""Mumbai Indians"" refers to Match_Winner = 7; percentage refers to DIVIDE(COUNT(Match_Winner = 7), COUNT(Match_Winner))",SELECT CAST(SUM(CASE WHEN T2.Match_Winner = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Match_Winner) FROM Team AS T1 INNER JOIN Match AS T2 ON T1.Team_Id = T2.Match_Winner WHERE T2.Match_Date LIKE '2013%'
soccer_2016,What is the difference between the number of matches where SC Ganguly played as a Captain and those matches where he played other roles?,"SC Ganguly refers to Player_Name = 'SC Ganguly'; played as a Captain refers to Role_Id = 1; played other roles refers to Role_Id > 1; difference refers to SUBTRACT(COUNT(Role_Id = 1), COUNT(Role_Id > 1))",SELECT SUM(CASE WHEN T3.Role_Id = 1 THEN 1 ELSE 0 END) - SUM(CASE WHEN T3.Role_Id > 1 THEN 1 ELSE 0 END) FROM Player_Match AS T1 INNER JOIN Player AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Rolee AS T3 ON T1.Role_Id = T3.Role_Id WHERE T2.Player_Name = 'SC Ganguly'
soccer_2016,How many players have the bowling skill greater than 2?,bowling skill greater than 2 refers to Bowling_skill > 2,SELECT COUNT(Player_Name) FROM Player WHERE Bowling_skill > 2
soccer_2016,How many players were born in 1970?,born in 1970 refers to DOB like '1970%';,SELECT COUNT(Player_Name) FROM Player WHERE DOB LIKE '1970%'
soccer_2016,How many players were born in the 80s and have bowling skill of 2?,born in the 80s refers to DOB like '198%'; have bowling skill of 2 refers to Bowling_skill = 2;,SELECT COUNT(Player_Name) FROM Player WHERE DOB LIKE '198%' AND Bowling_skill = 2
soccer_2016,"How many matches are there in April, 2008?","in April, 2008 refers to Match_date like '2008-04%'",SELECT COUNT(Match_Id) FROM Match WHERE Match_date LIKE '2008-04%'
soccer_2016,What is the city name of country ID 3?,,SELECT City_Name FROM City WHERE Country_ID = 3
soccer_2016,How many victory matches were there in 2008?,in 2008 refers to Match_Date like '2008%',SELECT COUNT(Match_Id) FROM Match WHERE Match_Date LIKE '2008%' AND Match_Winner IS NOT NULL
soccer_2016,Provide the country ID of East London.,East London refers to City_Name = 'East London',SELECT Country_id FROM City WHERE City_Name = 'East London'
soccer_2016,How old is SC Ganguly in 2008?,"SC Ganguly refers to Player_Name = 'SC Ganguly'; old refers to SUBTRACT(2008, strftime('%Y',DOB))","SELECT 2008 - strftime('%Y', DOB) FROM Player WHERE Player_Name = 'SC Ganguly'"
soccer_2016,List the names of players who play by the left hand.,play by the left hand refers to Batting_hand =   'Left-hand bat',SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id WHERE T2.Batting_hand = 'Left-hand bat'
soccer_2016,How many players are Indians?,are Indians refers to Country_Name = 'India',SELECT COUNT(T1.Player_Id) FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_ID WHERE T2.Country_Name = 'India'
soccer_2016,List the name of England players.,England players refers to Country_Name = 'England',SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_ID WHERE T2.Country_Name = 'England'
soccer_2016,What is the venue name of Bandladore?,Bandladore refers to City_Name = 'Bangalore',SELECT T1.Venue_Name FROM Venue AS T1 INNER JOIN City AS T2 ON T1.City_ID = T2.City_ID WHERE T2.City_Name = 'Bangalore'
soccer_2016,What are the names of players who participated in season year 2008?,season year 2008 refers to Season_Year = 2008,SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Match AS T2 ON T1.Player_Id = T2.Man_of_the_Match INNER JOIN Player_Match AS T3 ON T3.Player_Id = T1.Player_Id INNER JOIN Season AS T4 ON T2.Season_Id = T4.Season_Id WHERE T4.Season_Year = 2008 GROUP BY T1.Player_Name
soccer_2016,What are the names of players that have run scored less than 3?,scored less than 3 refers to Runs_Scored < 3; name of player refers to Player_name;,SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Batsman_Scored AS T3 ON T2.Match_ID = T3.Match_ID WHERE T3.Runs_Scored < 3 GROUP BY T1.Player_Name
soccer_2016,What is the role of SC Ganguly?,SC Ganguly refers to Player_Name = 'SC Ganguly'; role refers to Role_Desc,SELECT T3.Role_Desc FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Rolee AS T3 ON T2.Role_Id = T3.Role_Id WHERE T1.Player_Name = 'SC Ganguly' GROUP BY T3.Role_Desc
soccer_2016,List the names of players who played as a keeper.,played as a keeper refers to Role_Desc = 'Keeper'; name of player refers to Player_Name;,SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Rolee AS T3 ON T2.Role_Id = T3.Role_Id WHERE T3.Role_Desc = 'Keeper' GROUP BY T1.Player_Name
soccer_2016,What are the names of players in team 1?,in team 1 refers to Team_Id = 1; name of player refers to Player_Name;,SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Team AS T3 ON T2.Team_Id = T3.Team_Id WHERE T3.Team_Id = 1 GROUP BY T1.Player_Name
soccer_2016,How many players played as a captain in season year 2008?,played as a captain refers to Role_Desc = 'Captain'; in season year 2008 refers Match_Date like '2008%',SELECT COUNT(T1.Player_Id) FROM Player_Match AS T1 INNER JOIN Match AS T2 ON T1.Match_Id = T2.Match_Id INNER JOIN Rolee AS T3 ON T1.Role_Id = T3.Role_Id WHERE T3.Role_Desc = 'Captain' AND T2.Match_Date LIKE '2008%'
soccer_2016,Which teams did SC Ganguly join in season year 2008?,SC Ganguly refers to Player_Name = 'SC Ganguly'; in season year 2008 refers to Season_Year = 2008,SELECT T5.Team_Name FROM Player AS T1 INNER JOIN Match AS T2 ON T1.Player_Id = T2.Man_of_the_Match INNER JOIN Player_Match AS T3 ON T3.Player_Id = T1.Player_Id INNER JOIN Season AS T4 ON T2.Season_Id = T4.Season_Id INNER JOIN Team AS T5 ON T3.Team_Id = T5.Team_Id WHERE T4.Season_Year = 2008 AND T1.Player_Name = 'SC Ganguly' GROUP BY T5.Team_Name
soccer_2016,What type did match ID 336000 win?,type of match won refers to Win_Type,SELECT T2.Win_Type FROM Match AS T1 INNER JOIN Win_By AS T2 ON T1.Win_Type = T2.Win_Id WHERE T1.Match_Id = 336000
soccer_2016,Where did SB Joshi come from?,SB Joshi refers to Player_Name = 'SB Joshi'; where the player come from refers to Country_Name,SELECT T2.Country_Name FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_ID WHERE T1.Player_Name = 'SB Joshi'
soccer_2016,How many players have left arm fast in bowling skill?,have left arm fast in bowling skill refers to Bowling_skill = 'Left-arm fast';,SELECT COUNT(T1.Player_Id) FROM Player AS T1 INNER JOIN Bowling_Style AS T2 ON T1.Bowling_skill = T2.Bowling_Id WHERE T2.Bowling_skill = 'Left-arm fast'
soccer_2016,What is the outcome type of match ID 392195?,,SELECT T2.Outcome_Type FROM Match AS T1 INNER JOIN Outcome AS T2 ON T1.Outcome_type = T2.Outcome_Id WHERE T1.Match_Id = '392195'
soccer_2016,Who is the youngest player and which city did he/she come from?,youngest player refers to MIN(DOB); city refers to City_Name,SELECT T3.City_Name FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_Id INNER JOIN City AS T3 ON T2.Country_Id = T3.Country_Id ORDER BY T1.DOB LIMIT 1
soccer_2016,How many matches did team Kings XI Punjab win in season year 2008?,in season year 2008 refers to Season_Year = 2008; team Kings XI Punjab refers to Team_Name = 'Kings XI Punjab',SELECT COUNT(DISTINCT T2.Match_Id) FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_id = T2.match_winner INNER JOIN Player_Match AS T3 ON T1.Team_Id = T3.Team_Id INNER JOIN Season AS T4 ON T2.Season_Id = T4.Season_Id WHERE T1.Team_Name = 'Kings XI Punjab' AND T4.Season_Year = 2008
soccer_2016,How many seasons did Pune Warriors participate in?,Pune Warriors refers to Team_Name = 'Pune Warriors',SELECT COUNT(T.Season_Year) FROM ( SELECT T4.Season_Year FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_id = T2.match_winner INNER JOIN Player_Match AS T3 ON T1.Team_Id = T3.Team_Id INNER JOIN Season AS T4 ON T2.Season_Id = T4.Season_Id WHERE T1.Team_Name = 'Pune Warriors' GROUP BY T4.Season_Year ) T
soccer_2016,What year was R Dravid born and the role he played?,R Dravid refers to Player_Name = 'R Dravid'; year born refers to DOB; role refers to Role_Desc,"SELECT T1.DOB, T3.Role_Desc FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Rolee AS T3 ON T2.Role_Id = T3.Role_Id WHERE T1.Player_Name = 'R Dravid' GROUP BY T1.DOB, T3.Role_Desc"
soccer_2016,How many times did SC Ganguly be the man of the match?,SC Ganguly refers to Player_Name = 'SC Ganguly',SELECT COUNT(T2.Man_of_the_Match) FROM Player AS T1 INNER JOIN Match AS T2 ON T1.Player_Id = T2.Man_of_the_Match INNER JOIN Player_Match AS T3 ON T3.Player_Id = T1.Player_Id WHERE T1.Player_Name = 'SC Ganguly'
soccer_2016,How many matches did team Mumbai Indians win in 2008?,team Mumbai Indians refers to Team_Name = 'Mumbai Indians'; in 2008 refers to Match_Date like '2008%',SELECT COUNT(T.Match_Id) FROM ( SELECT T2.Match_Id FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_id = T2.match_winner INNER JOIN Player_Match AS T3 ON T1.Team_Id = T3.Team_Id WHERE T1.Team_Name = 'Mumbai Indians' AND T2.Match_Date LIKE '2008%' GROUP BY T2.Match_Id ) T
soccer_2016,Which team won by wickets in match ID 335993?,team refers to Team_Name,SELECT T1.Team_Name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_id = T2.match_winner INNER JOIN Player_Match AS T3 ON T1.Team_Id = T3.Team_Id INNER JOIN Win_By AS T4 ON T2.Win_Type = T4.Win_Id WHERE T2.Match_Id = '335993' GROUP BY T1.Team_Name
soccer_2016,Count the matches that were won by wickets in all season.,won by wickets refers to Win_type = 'wickets';,SELECT COUNT(T1.Match_Id) FROM Match AS T1 INNER JOIN Win_By AS T2 ON T1.Win_Type = T2.Win_Id WHERE T2.Win_type = 'wickets'
soccer_2016,What is the role of W Jaffer in season year 2012?,W Jaffer refers to Player_name = 'W Jaffer'; in season year 2012 refers to Season_Year = 2012; role refers to Role_Desc,SELECT T4.Role_Desc FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Match AS T3 ON T2.Match_Id = T3.Match_Id INNER JOIN Rolee AS T4 ON T2.Role_Id = T4.Role_Id INNER JOIN Season AS T5 ON T3.Season_Id = T5.Season_Id WHERE T1.Player_name = 'W Jaffer' AND T5.Season_Year = 2012
soccer_2016,What are the names of players who had been man of the match more than 5 times in season year 2008?,man of the match more than 5 times refers to COUNT(Man_of_the_Match) > 5; in season year 2008 refers to Season_Year = 2008; name of player refers to Player_Name;,SELECT CASE WHEN COUNT(T2.Man_of_the_Match) > 5 THEN T1.Player_Name ELSE 0 END FROM Player AS T1 INNER JOIN Match AS T2 ON T1.Player_Id = T2.Man_of_the_Match INNER JOIN Player_Match AS T3 ON T3.Player_Id = T1.Player_Id INNER JOIN Season AS T4 ON T2.Season_Id = T4.Season_Id WHERE T4.Season_Year = 2008
soccer_2016,What is the average of Indian players that were born between 1975 and 1985 among all players?,"Indian players refers to Country_Name = 'India'; born between 1975 and 1985 refers to strftime('%Y',T1.DOB) between '1975' and '1985'; average refers to DIVIDE(COUNT(Country_Name = 'India'), COUNT(Player_Id))","SELECT CAST(SUM(CASE WHEN T2.Country_Name = 'India' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.Player_Id) FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_ID WHERE strftime('%Y', T1.DOB) BETWEEN '1975' AND '1985'"
soccer_2016,Calculate the percentage of left hand batting style players among all players.,"left hand batting style players refers to Batting_hand = 'Left-hand bat'; percentage refers to DIVIDE(COUNT(Batting_hand = 'Left-hand bat'), COUNT(Player_Id)) * 100.0",SELECT CAST(SUM(CASE WHEN T2.Batting_hand = 'Left-hand bat' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Player_Id) FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id
soccer_2016,What is the percentage of matches that are won by runs?,"won by runs refers to win_type = 1; percentage refers to DIVIDE(COUNT(win_type = 1), COUNT(Win_Type)) * 100",SELECT CAST(SUM(CASE WHEN T1.win_type = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Win_Type) FROM Match AS T1 INNER JOIN Win_By AS T2 ON T1.Win_Type = T2.Win_Id
soccer_2016,How many matches have 7 points of winning margin?,have 7 points of winning margin refers to win_margin = 7;,SELECT COUNT(Match_Id) FROM Match WHERE win_margin = 7
soccer_2016,What is the total number of players born between 1970 to 1975?,"born between 1970 to 1975 refers to strftime('%Y',DOB) between '1970' and '1975'","SELECT COUNT(Player_Id) FROM Player WHERE strftime('%Y', DOB) BETWEEN '1970' AND '1975'"
soccer_2016,"Who is the winning team in a match held on April 26, 2009 with a winning margin of 6 points?","winning margin of 6 points refers to Win_Margin = 6; held on April 26, 2009 refers to Match_Date = '2009-04-26'",SELECT T1.Team_Name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_id = T2.match_winner WHERE T2.Win_Margin = 6 AND T2.Match_Date = '2009-04-26'
soccer_2016,"In the match ID 419135, who won by runs?",who refers to Team_Name,SELECT T1.Team_Name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_id = T2.match_winner INNER JOIN Win_By AS T3 ON T2.win_type = T3.win_id WHERE T2.Match_Id = 419135
soccer_2016,"Among the matches held in St. George's Park, give the match ID of the match with the highest winning margin points.",held in St. George's Park refers to Venue_Name = 'St George''s Park'; highest winning margin points refers to MAX(Win_Margin),SELECT T2.Match_Id FROM Venue AS T1 INNER JOIN Match AS T2 ON T1.venue_id = T2.venue_id WHERE T1.Venue_Name = 'St George''s Park' ORDER BY T2.Win_Margin DESC LIMIT 1
soccer_2016,How many of the players are from Sri Lanka?,from Sri Lanka refers to Country_Name = 'Sri Lanka';,SELECT COUNT(*) FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_ID WHERE T2.Country_Name = 'Sri Lanka'
soccer_2016,List the player's name who played as a captain.,played as a captain refers to Role_Desc = 'captain'; player refers to Player_Name,SELECT T2.Player_Name FROM Player_Match AS T1 INNER JOIN Player AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Rolee AS T3 ON T1.Role_Id = T3.Role_Id WHERE T3.Role_Desc = 'Captain' GROUP BY T2.Player_Name
soccer_2016,Give the match's venue and winning team for the match ID 392194.,venue refers to Venue_Name; winning team refers to match_winner,"SELECT T1.Venue_Name, T3.Team_Name FROM Venue AS T1 INNER JOIN Match AS T2 ON T1.venue_id = T2.venue_id INNER JOIN Team AS T3 ON T2.match_winner = T3.Team_Id WHERE T2.Match_Id = 392194"
soccer_2016,"Among the matches of Delhi Daredevils in 2009, what is the percentage of their matches won by wickets?","Delhi Daredevils refers to team_name = 'Delhi Daredevils'; in 2009 refers to Match_Date = '2009%'; won by wickets refers to Win_Type = 'wickets'; percentage refers to DIVIDE(COUNT(Win_Type = 'wickets'), COUNT(Win_Type))",SELECT CAST(SUM(CASE WHEN T3.Win_Type = 'wickets' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.Win_Type) FROM Team AS T1 INNER JOIN Match AS T2 ON T1.Team_Id = T2.Match_Winner INNER JOIN Win_By AS T3 ON T2.Win_Type = T3.Win_Id WHERE T1.Team_Name = 'Delhi Daredevils'
music_tracker,What is the release title of the single that was released by Ron Hunt in 1979 that was downloaded 239 times?,release title refers to groupName; Ron Hunt is an artist; groupYear = 1979; releaseType = 'single'; downloaded 239 times refer to totalSnatched = 239;,SELECT groupName FROM torrents WHERE artist LIKE 'ron hunt & ronnie g & the sm crew' AND groupYear = 1979 AND releaseType LIKE 'single' AND totalSnatched = 239
music_tracker,How many times was the album released by blowfly in 1980 downloaded?,blowfly is an artist; groupYear = 1980; album refers to releaseType; downloaded refers to totalSnatched;,SELECT totalSnatched FROM torrents WHERE artist LIKE 'blowfly' AND groupYear = 1980
music_tracker,What is the tag of the album with the highest amount of downloads?,album refers to releaseType; the highest amount of downloads refers to MAX(totalSnatched);,SELECT T2.tag FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.releaseType = 'album' ORDER BY T1.totalSnatched DESC LIMIT 1
music_tracker,What are the top 5 tags with the highest amount of downloads?,the highest amount of downloads refers to MAX(totalSnatched);,SELECT T2.tag FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.releaseType = 'album' ORDER BY T1.totalSnatched DESC LIMIT 5
music_tracker,"What is the release title of the single under the ""funk"" tag that was released the oldest?",release title of single refers to groupName where releaseType = 'single'; the oldest means coming before all others in time and refers to MIN(groupYear);,SELECT T1.groupName FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag LIKE 'funk' AND T1.releaseType = 'single' ORDER BY T1.groupYear LIMIT 1
music_tracker,"Name all the release titles of the ""ep's"" under the alternative tag.","release titles of the ""ep's"" refer to groupName where releaseType = 'ep';",SELECT T1.groupName FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag LIKE 'alternative' AND T1.releaseType = 'ep'
music_tracker,What are the tags of the top 5 least downloaded live albums?,least downloaded album refers to MIN(totalSnatched where releaseType = 'album');,SELECT T2.tag FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.releaseType = 'album' ORDER BY T1.totalSnatched LIMIT 5
music_tracker,What is the tag and the artist of the most downloaded single?,the most downloaded single refers to MAX(totalSnatched where releaseType = 'single');,"SELECT T2.tag, T1.artist FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.releaseType = 'single' ORDER BY T1.totalSnatched DESC LIMIT 1"
music_tracker,"How many releases are tagged ""1980s""?",tag = '1980s';,SELECT COUNT(id) FROM tags WHERE tag LIKE '1980s'
music_tracker,"How many times has the release ""city funk"" been downloaded?",groupName = 'city funk'; downloaded refers to totalSnatched;,SELECT totalSnatched FROM torrents WHERE groupName LIKE 'city funk'
music_tracker,Please list the releases that have been downloaded for more than 20000 times.,releases refer to groupName; downloaded for more than 20000 times refers to totalSnatched > 20000;,SELECT groupName FROM torrents WHERE totalSnatched > 20000
music_tracker,"What are the tags of the release ""sugarhill gang""?","release ""sugarhill gang"" refers to groupName = 'sugarhill gang';",SELECT T2.tag FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.groupName = 'sugarhill gang'
music_tracker,"How many tags does the release ""city funk"" have？","release ""city funk"" refers to groupName = 'city funk';",SELECT COUNT(T2.tag) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.groupName = 'city funk'
music_tracker,"Please list the titles of all the releases with the tag ""1980s"".",titles refer to groupName;,SELECT T1.groupName FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = '1980s'
music_tracker,"Among the releases with the tag ""1980s"", which one of them is the most downloaded? Please give its title.",title refers to groupName; the most downloaded refers to MAX(totalSnatched);,SELECT T1.groupName FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = '1980s' ORDER BY T1.totalSnatched DESC LIMIT 1
music_tracker,"How many releases by the artist michael jackson are tagged ""pop""?",tag = 'pop';,SELECT COUNT(T1.groupName) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'pop' AND T1.artist = 'michael jackson'
music_tracker,"Among the releases that were released in 2000, how many of them were released as an album and tagged ""pop""?",groupYear = 2000; album refers to releaseType;,SELECT COUNT(T1.groupName) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'pop' AND T1.releaseType = 'album' AND T1.groupYear = 2000
music_tracker,"What are the average download times for the a release tagged ""1980s""?",AVG(totalSnatched where tag = '1980s');,SELECT CAST(SUM(T1.totalSnatched) AS REAL) / COUNT(T2.tag) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = '1980s'
music_tracker,Name the title of the top three releases with the highest number of downloads.,title refers to groupName; the highest number of downloads refers to MAX(totalSnatched);,SELECT groupName FROM torrents ORDER BY totalSnatched DESC LIMIT 3
music_tracker,Provide the name of the artist who released his or her Single-Table in 2012 with the highest number of downloads. Name the Single-Table title as well.,title refers to groupName; the highest number of downloads refers to MAX(totalSnatched where groupYear = 2012 and releaseType = 'single');,"SELECT artist, groupName FROM torrents WHERE groupYear = 2012 AND releaseType LIKE 'Single' ORDER BY totalSnatched DESC LIMIT 1"
music_tracker,How many albums and Single-Tables were released by the artist named '50 cent' between 2010 and 2015?,albums refer to releaseType = 'album'; releaseType = 'single'; between 2010 and 2015 refers to groupYear between 2010 and 2015;,"SELECT COUNT(id), ( SELECT COUNT(id) FROM torrents WHERE groupYear BETWEEN 2010 AND 2015 AND artist LIKE '50 cent' AND releaseType LIKE 'album' ) FROM torrents WHERE groupYear BETWEEN 2010 AND 2015 AND artist LIKE '50 cent' AND releaseType LIKE 'Single'"
music_tracker,"An American rapper '2Pac' released his first solo album in 1991, how many years have passed until his next album was released?","2Pac is an artist; album refers to releaseType; groupYear = 1991; SUBTRACT(groupYear = 1991, groupYear where releaseType = 'album' LIMIT 1 OFFSET 1);","SELECT ( SELECT groupYear FROM torrents WHERE artist LIKE '2Pac' AND releaseType LIKE 'album' ORDER BY groupYear LIMIT 1, 1 ) - groupYear FROM torrents WHERE artist LIKE '2Pac' AND releaseType LIKE 'album' AND groupYear = 1991"
music_tracker,Find the average number of downloads for Single-Tables released by '2Pac' between 2001 and 2013.,2Pac is an artist; releaseType = 'single'; between 2001 and 2013 refers to groupYear between 2001 and 2013; average number of downloads = AVG(totalSnatched);,SELECT AVG(totalSnatched) FROM torrents WHERE artist LIKE '2Pac' AND releaseType LIKE 'Single' AND groupYear BETWEEN 2001 AND 2013
music_tracker,"Provide the title, release year and the tag associated with the live album that has the highest number of downloads?",release year refers to groupYear; title of live album refers to groupName where releaseType = 'live album'; the highest number of downloads refers to MAX(totalSnatched);,"SELECT T1.groupName, T1.groupYear, T2.tag FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.releaseType = 'live album' ORDER BY T1.totalSnatched DESC LIMIT 1"
music_tracker,Provide the name of artists who released at least two bootlegs in 2016.,at least two bootlegs refer to COUNT(releaseType = 'bootleg')≥ 2; groupYear = 2016;,SELECT artist FROM torrents WHERE groupYear = 2016 AND releaseType LIKE 'bootleg' GROUP BY artist HAVING COUNT(releaseType) > 2
music_tracker,Which artist released singles between 1980 to 1982?,releaseType = 'single'; between 1980 to 1982 refers to groupYear between 1980 and 1982;,SELECT artist FROM torrents WHERE groupYear BETWEEN 1980 AND 1982 AND releaseType LIKE 'single'
music_tracker,Indicates groups with id from 10 to 20 with singles downloaded at least 20.,releaseType = 'single'; downloaded at least 20 refers to totalSnatched ≥ 20; id from 10 to 20 refer to id between 10 and 20; groups refer to groupName;,SELECT groupName FROM torrents WHERE totalSnatched >= 20 AND releaseType LIKE 'single' AND id BETWEEN 10 AND 20
music_tracker,"Among the artists from 1980 to 1982. Which artist was tagged as ""disco""?",from 1980 to 1982 refers to groupYear between 1980 and 1982; tag = 'disco';,SELECT T1.artist FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'disco' AND T1.groupYear BETWEEN 1980 AND 1982
music_tracker,"Provide the name of artists who had no more than 100 downloads and are tagged ""funk"" in 1980.",no more than 100 downloads refer to totalSnatched ≤ 100; groupYear = 1980; tag = 'funk';,SELECT T1.artist FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'funk' AND T1.groupYear = 1980 AND T1.totalSnatched <= 100
music_tracker,"Which artist has released the most singles with the tag ""soul""?",the most singles refer to MAX(COUNT(releaseType = 'single'));,SELECT T1.artist FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'soul' AND T1.releaseType = 'single' GROUP BY T1.artist ORDER BY COUNT(T1.releaseType) DESC LIMIT 1
music_tracker,"Among the artists with the id from 10 to 30. Which artist released the product with the tag ""funk"" in 1980?",id from 10 to 30 refers to id between 10 and 30; groupYear = 1980;,SELECT T1.artist FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'funk' AND T1.groupYear = 1980 AND T1.id BETWEEN 10 AND 30
music_tracker,List the group name has the most downloaded that have released jazz genres from 1982 or later.,the most downloaded refers to MAX(totalSnatched); tag = 'jazz'; from 1982 or later refers to groupYear ≥ 1982;,SELECT T1.groupName FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'jazz' AND T1.groupYear >= 1982 ORDER BY T1.totalSnatched DESC LIMIT 1
music_tracker,"Which artist has id ""16""? Provide her or his tag genre.",FALSE;,SELECT T2.tag FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.id = 16
music_tracker,"Among id from 10 to 50. Which artist tagged as ""new.york"" has the most downloads?",Among id from 10 to 50 refers to id between 10 and 50; tag = 'new.york'; the most downloads refer to MAX(totalSnatched);,SELECT T1.artist FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.id BETWEEN 10 AND 50 AND T2.tag LIKE 'new.york' ORDER BY T1.totalSnatched DESC LIMIT 1
music_tracker,"List the name of artists who have released albums and mixtape from 1980 to 1985 in ""dance"" genre.",albums and mixtape refer to releaseType; from 1980 to 1985 refers to groupYear between 1980 and 1985; tag = 'dance';,SELECT COUNT(T1.artist) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'dance' AND T1.groupYear BETWEEN 1980 AND 1985 AND T1.releaseType LIKE 'album' OR T1.releaseType LIKE 'mixtape'
music_tracker,"How many singles were released between 1979 and 1981 labeled as ""soul""?",releaseType = 'single'; between 1979 and 1981 refers to groupYear between 1979 and 1981; tag = 'soul';,SELECT COUNT(T2.tag) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'soul' AND T1.groupYear BETWEEN 1979 AND 1981 AND T1.releaseType LIKE 'single'
music_tracker,How many singles were released in 1979?,releaseType = 'single'; groupYear = 1979;,SELECT COUNT(releaseType) FROM torrents WHERE releaseType LIKE 'single' AND groupYear = 1979
music_tracker,"In 1980, how many singles were released by sugar daddy?",sugar daddy is an artist; releaseType = 'single'; groupYear = 1980;,SELECT COUNT(releaseType) FROM torrents WHERE artist LIKE 'sugar daddy' AND releaseType LIKE 'Single' AND groupYear = 1980
music_tracker,How many christmas albums were released in 2004?,album refers to releaseType; groupYear = 2004; tag = 'christmas';,SELECT COUNT(T1.id) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'christmas' AND T1.groupYear = 2004 AND T1.releaseType LIKE 'album'
music_tracker,Please list all tags of kurtis blow from 2000 to 2010.,kurtis blow is an artist; from 2000 to 2010 refers to groupYear between 2000 and 2010;,SELECT T2.tag FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.groupYear BETWEEN 2000 AND 2010 AND T1.artist LIKE 'kurtis blow'
music_tracker,Which album title and tag that millie jackson released in 1980?,millie jackson is an artist; album title refers to groupName where releaseType = 'album'; groupYear = 1980;,"SELECT T1.groupName, T2.tag FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.groupYear = 1980 AND T1.artist LIKE 'millie jackson' AND T1.releaseType LIKE 'album'"
music_tracker,Please list all release titles whose tag is jazz in 2005.,release titles refer to groupName; groupYear = 2005;,SELECT T1.groupName FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.groupYear = 2005 AND T2.tag LIKE 'jazz'
music_tracker,"From 1980 to 2000, which artist had the most disco releases?",From 1980 to 2000 refers to groupYear between 1980 and 2000; tag = 'disco'; the most releases refer to MAX(COUNT(id));,SELECT T1.artist FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.groupYear BETWEEN 1980 AND 2000 AND T2.tag LIKE 'disco' GROUP BY T1.artist ORDER BY COUNT(T2.tag) DESC LIMIT 1
music_tracker,Which artists have released singles with the tag 1970s?,releaseType = 'single';,SELECT T1.artist FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.releaseType = 'single' AND T2.tag LIKE '1970s'
music_tracker,"From 1979 to 1982, what was the percentage of united.states albums out of total albums were released?","From 1979 to 1982 refers to groupYear between 1979 and 1982; United States refer to tag; albums refer to releaseType; DIVIDE(COUNT(releaseType = 'album' where tag = 'united.states' and groupYear between 1979 and 1982), COUNT(releaseType = 'album' where groupYear between 1979 and 1982)) as percentage;",SELECT CAST(SUM(CASE WHEN T2.tag LIKE 'united.states' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.releaseType) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.groupYear BETWEEN 1979 AND 1982 AND T1.releaseType LIKE 'album'
world_development_indicators,"Among the countries in the group of Heavily Indebted Poor Countries, how many of them are under the lending category of the International Development Associations?",group of Heavily Indebted Poor Countries is OtherGroups = 'HIPC'; International Development Associations refers to lendingcategory = 'IDA',SELECT COUNT(CountryCode) FROM Country WHERE LendingCategory = 'IDA' AND OtherGroups = 'HIPC'
world_development_indicators,Please list the countries under the lending category of the International Development Associations and have a external debt reporting finished by estimation.,countries refer to the ShortName; International Development Associations refers to lendingcategory = 'IDA'; have a external debt reporting finished by estimation refers to ExternalDebtReportingStatus = 'Estimate',"SELECT ShortName, ExternalDebtReportingStatus FROM Country WHERE LendingCategory = 'IDA'"
world_development_indicators,What's the description of the series code SM.POP.TOTL for Aruba?,Aruba is the name of the country where ShortName = 'Aruba',SELECT T2.Description FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.ShortName = 'Aruba' AND T2.Seriescode = 'SM.POP.TOTL'
world_development_indicators,Please list the countries in Latin America & Caribbean with a note on the series code SM.POP.TOTL.,Countries refer to the ShortName; Latin America & Caribbean is the name of the region,"SELECT T1.SHORTNAME, T2.Description FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.Region = 'Latin America & Caribbean' AND T2.Seriescode = 'SM.POP.TOTL'"
world_development_indicators,"Among the countries with note on the series code SM.POP.TOTL, how many of them are in the low-income group?",countries refer to Countrycode; low-income group refers to incomegroup = 'Low income'; with notes refers to description IS NOT NULL; series code SM.POP.TOTL refers to Seriescode = 'SM.POP.TOTL',SELECT COUNT(T1.Countrycode) FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Seriescode = 'SM.POP.TOTL' AND T1.IncomeGroup = 'Low income'
world_development_indicators,Please list the descriptions of the series code SM.POP.TOTL for all the countries that are under the lending category of the International Development Associations.,Countries are the Countrycode; International Development Associations refers to lendingcategory = 'IDA',SELECT T2.Description FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.LendingCategory = 'IDA' AND T2.Seriescode = 'SM.POP.TOTL'
world_development_indicators,How many low-income countries under the lending category of the International Development Associations have a note on the series code SM.POP.TOTL?,low-income countries are where the incomegroup = Low income,SELECT COUNT(T1.Countrycode) FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.LendingCategory = 'IDA' AND T2.Seriescode = 'SM.POP.TOTL' AND IncomeGroup = 'Low income'
world_development_indicators,"Among the countries in the High income: OECD group whose currency unit is Euro, how many of them have a note on the series code SP.DYN.AMRT.FE?",countries refer to Countrycode; in the high income refers to incomegroup = 'High'; with notes refers to description IS NOT NULL; series code SP.DYN.AMRT.FE refers to Seriescode = 'SP.DYN.AMRT.FE',SELECT COUNT(T1.Countrycode) FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.IncomeGroup = 'High income: OECD' AND T1.CurrencyUnit = 'Euro' AND T2.Seriescode = 'SP.DYN.AMRT.FE'
world_development_indicators,"What is the long name of the country with the description ""Estimates are derived from data on foreign-born population."" on the series code SM.POP.TOTL?",,SELECT T1.LongName FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Description = 'Estimates are derived FROM data on foreign-born population.' AND T2.Seriescode = 'SM.POP.TOTL'
world_development_indicators,What is the description of the footnote on the series code AG.LND.FRST.K2 in 1990 for Aruba?,Year = 1990; Aruba is the name of country where ShortName = 'Aruba',SELECT T2.Description FROM Country AS T1 INNER JOIN FootNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.ShortName = 'Aruba' AND T2.Seriescode = 'AG.LND.FRST.K2' AND T2.Year = 'YR1990'
world_development_indicators,On which years did Aruba got a footnote on the series code AG.LND.FRST.K2?,Aruba is the name of country where ShortName = 'Aruba',SELECT T2.Year FROM Country AS T1 INNER JOIN FootNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.ShortName = 'Aruba' AND T2.Seriescode = 'AG.LND.FRST.K2'
world_development_indicators,"Please list the countries that got the footnote ""Data are classified as official aid."" on the series code DC.DAC.AUSL.CD in 2002.",countries are the Countrycode; footnote refers to Description = 'Data are classified as official aid',SELECT T1.SHORTNAME FROM Country AS T1 INNER JOIN FootNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Description = 'Data are classified as official aid.' AND T2.Seriescode = 'DC.DAC.AUSL.CD' AND T2.Year LIKE '%2002%'
world_development_indicators,How many footnotes did Aruba got on different series code in the year 2002?,Aruba is the name of country where ShortName = 'Aruba',SELECT COUNT(T2.SeriesCode) FROM Country AS T1 INNER JOIN FootNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.ShortName = 'Aruba' AND T2.Year = 'YR2002'
world_development_indicators,For how many consecutive years did Aruba get a footnote on the series code BX.KLT.DINV.CD.WD?,Aruba is the name of country where ShortName = 'Aruba',SELECT COUNT(T2.Year) FROM Country AS T1 INNER JOIN FootNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.ShortName = 'Aruba' AND T2.Seriescode = 'BX.KLT.DINV.CD.WD'
world_development_indicators,What is the average adolescent fertility rate of the country whose Alpha2Code is 1A over the years this indicator was calculated.,"the average adolescent fertility rate is DIVIDE(SUM(value), SUM(IndicatorName like 'adolescent fertility rate%'))",SELECT AVG(T2.Value) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName LIKE 'adolescent fertility rate%'
world_development_indicators,What are the special notes for the country whose average adolescent fertility rate is the highest?,"the average adolescent fertility rate is DIVIDE(SUM(value), SUM(IndicatorName like 'adolescent fertility rate%')); MAX(average adolescent fertility rate)",SELECT DISTINCT T1.SpecialNotes FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Value = ( SELECT Value FROM Indicators WHERE IndicatorName LIKE 'Adolescent fertility rate%' ORDER BY Value DESC LIMIT 1 )
world_development_indicators,List the East Asia & Pacific countries which are under the High income: nonOECD group. Please include their alpha code.,the East Asia & Pacific countries are where Region = 'East Asia & Pacific'; High income: nonOECD group is where IncomeGroup = 'High income: nonOECD',"SELECT CountryCode, Alpha2Code FROM Country WHERE Region = 'East Asia & Pacific' AND IncomeGroup = 'High income: nonOECD'"
world_development_indicators,In which country's latest trade data and latest water withdrawal data were both updated in the year 2013? Give its long name and Alpha 2 code.,,"SELECT LongName, Alpha2Code FROM Country WHERE LatestTradeData = 2013 AND LatestWaterWithdrawalData = 2013"
world_development_indicators,"What is the average value of Adjusted net enrolment rate, primary, both sexes (%) indicator in Algeria from 1975 to 1980?","the average value of Adjusted net enrolment rate, primary, both sexes (%) is DIVIDE(SUM(Value), SUM(IndicatorName = 'Adjusted net enrolment rate, primary, both sexes (%)')); Year BETWEEN 1975 AND 1980; Algeria is the name of country where CountryName = 'Algeria'","SELECT CAST(SUM(Value) AS REAL) / COUNT(CountryCode) FROM Indicators WHERE CountryName = 'Algeria' AND Year > 1974 AND Year < 1981 AND IndicatorName = 'Adjusted net enrolment rate, primary, both sexes (%)'"
world_development_indicators,What are the Indicator names and aggregation methods when the topic is Economic Policy & Debt: Balance of payments: Capital & financial account?,,"SELECT IndicatorName, AggregationMethod FROM Series WHERE Topic = 'Economic Policy & Debt: Balance of payments: Capital & financial account'"
world_development_indicators,List down the series codes in which the topic is about Environment: Emissions and the license type is restricted. Please include their alpha code.,,SELECT SeriesCode FROM Series WHERE Topic = 'Environment: Emissions' AND LicenseType = 'Restricted'
world_development_indicators,"In 1970, how many Middle Eastern & North African countries whose value for CO2 emissions from gaseous fuel consumption (kt) indicator is more than 600?",Year = 1970; Middle East & North Africa is the name of the region where Region = 'Middle East & North Africa'; CO2 emissions from gaseous fuel consumption (kt) is the name of indicator where IndicatorName = 'CO2 emissions from gaseous fuel consumption (kt)',SELECT COUNT(T2.CountryCode)  FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Region = 'Middle East & North Africa' AND T1.IndicatorName = 'CO2 emissions FROM gaseous fuel consumption (kt)' AND T1.Year = 1970 AND T1.Value > 600
world_development_indicators,"List down the top 3 Latin American & Caribbean countries with the highest average value in ""CO2 emissions (kt)"" indicator since 1965. Give their highest value and in what year.","Latin American & Caribbean countries is the name of the region where Region in ('Latin America' , 'Caribbean'); CO2 emissions from gaseous fuel consumption (kt) is the name of indicator where IndicatorName = 'CO2 emissions from gaseous fuel consumption (kt)'; average value in CO2 emissions (kt) = DIVIDE(SUM(Value), SUM(IndicatorName = 'CO2 emissions from gaseous fuel consumption (kt)')); Year > 1965","SELECT DISTINCT T1.CountryCode, T1.Year, T1.Value FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Region = 'Latin America & Caribbean' AND T1.IndicatorName = 'CO2 emissions (kt)' AND T1.Year > 1965 AND T1.Year < 1980 ORDER BY T1.Value DESC LIMIT 3"
world_development_indicators,"What is the series note description of the series ""SP.DYN.TO65.MA.ZS"" which covers the topic ""Health: Mortality"" in 1967?",in 1967 refers to Year = 'YR1967',SELECT T2.Description FROM Series AS T1 INNER JOIN SeriesNotes AS T2 ON T1.SeriesCode = T2.Seriescode WHERE T1.SeriesCode = 'SP.DYN.TO65.MA.ZS' AND T1.Topic = 'Health: Mortality' AND T2.Year = 'YR1967'
world_development_indicators,Please write down the footnote descriptions of Albania in 1981.,Albania is the name of country where Country = 'Albania',SELECT DISTINCT T1.Description FROM FootNotes AS T1 INNER JOIN Country AS T2 ON T1.Countrycode = T2.CountryCode WHERE T1.Year = 'YR1981' AND T2.ShortName = 'Albania'
world_development_indicators,Enumerate the footnote narratives of The Bahamas under the series code SH.DTH.IMRT in the year 1984.,narratives is Description; The Bahamas is the name of the country where Country = 'The Bahamas',SELECT DISTINCT T1.Description FROM FootNotes AS T1 INNER JOIN Country AS T2 ON T1.Countrycode = T2.CountryCode WHERE T1.Year = 'YR1984' AND T2.ShortName = 'The Bahamas' AND T1.Seriescode = 'SH.DTH.IMRT'
world_development_indicators,"What is the short name of the country in which the ""Net bilateral aid flows from DAC donors, Sweden (current US$)"" indicator hit the 570,000 value in 1970?","Net bilateral aid flows from DAC donors, Sweden (current US$) is the name of indicator where IndicatorName = 'Net bilateral aid flows from DAC donors, Sweden (current US$)'; Year = 1970; Value > 570,000","SELECT T2.ShortName FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IndicatorName = 'Net bilateral aid flows FROM DAC donors, Sweden (current US$)' AND T1.Year = 1970 AND T1.Value = 570000"
world_development_indicators,"List down the World Bank code of the countries whose country note has described ""Data source : Human Mortality Database by University of California, Berkeley, and Max Planck Institute for Demographic Research.""? Please include their lending category.",World Bank code refers to Wb2code; Data source refers to Description,"SELECT DISTINCT T1.Wb2code, T1.LendingCategory FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Description = 'Data source : Human Mortality Database by University of California, Berkeley, and Max Planck Institute for Demographic Research.' AND T1.LendingCategory != ''"
world_development_indicators,"What is the topic of the series when the Total reserves minus gold (current US$) indicator of Haiti hit the value of 3,000,000 in 1961? Please include its series code and license type.",Total reserves minus gold (current US$) is the IndicatorName; Haiti is the CountryName; Year = 1961,"SELECT T2.Topic, T2.Seriescode, T2.LicenseType FROM Indicators AS T1 INNER JOIN Series AS T2 ON T1.IndicatorName = T2.IndicatorName WHERE T1.Year = 1961 AND T1.CountryName = 'Haiti' AND T1.IndicatorName = 'Total reserves minus gold (current US$)' AND T1.Value = 3000000"
world_development_indicators,"How many countries have reached their Adjusted net national income per capita (constant 2005 US$) indicator value to more than 1,000 but have not finished their external debt reporting?",Adjusted net national income per capita (constant 2005 US$) is the IndicatorName; have not finished their external debt reporting means ExternalDebtReportingStatus = 'Preliminary',SELECT COUNT(T1.CountryCode) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.IndicatorName = 'Adjusted net national income per capita (constant 2005 US$)' AND T1.ExternalDebtReportingStatus = 'Preliminary' AND T2.Value > 1000
world_development_indicators,Which countries have a fertility rate between 4 and 5 in 1979? List their names.,"Year = 1979; fertility rate refers to IndicatorName = 'Fertility rate, total (births per woman)'; Value is between 4 and 5;","SELECT CountryName FROM Indicators WHERE Year = 1979 AND IndicatorName = 'Fertility rate, total (births per woman)' AND value >= 4 AND Value <= 5"
world_development_indicators,Find the countries in south Asia which are in the low-income group. What is the source of their recent income and expenditure data? List it alongside the table name of the countries.,South Asia is the name of the region; IncomeGroup = 'Low income';,"SELECT TableName, SourceOfMostRecentIncomeAndExpenditureData FROM Country WHERE Region = 'South Asia' AND IncomeGroup = 'Low income'"
world_development_indicators,What are the sources for the data of children who finished primary school education in Latin America & Caribbean countries?,"Latin America & Caribbean is the name of the region; children who finished primary school education refer to IndicatorName = 'Out-of-school children of primary school age, both sexes (number)'; sources refer to Description;","SELECT DISTINCT T2.Source FROM Footnotes AS T1 INNER JOIN Series AS T2 ON T1.Seriescode = T2.SeriesCode INNER JOIN Country AS T3 ON T1.Countrycode = T3.CountryCode WHERE T3.Region = 'Latin America & Caribbean' AND T2.IndicatorName = 'Children out of school, primary'"
world_development_indicators,List the sources for the Net Migration in South American countries in 2002.,South American is the name of the region; Year contains '2002'; sources refer to Description; IndicatorName = 'Net migration';,SELECT T2.Source FROM CountryNotes AS T1 INNER JOIN Series AS T2 ON T1.Seriescode = T2.SeriesCode INNER JOIN Country AS T3 ON T1.Countrycode = T3.CountryCode INNER JOIN SeriesNotes AS T4 ON T2.SeriesCode = T4.Seriescode WHERE T4.Year LIKE '%2002%' AND T2.IndicatorName = 'Net migration'
world_development_indicators,What are the sources for the data of children who finished primary school education in North American countries?,"North American is the name of the region; sources refer to Description; children who finished primary school education refer to IndicatorName = 'Out-of-school children of primary school age, both sexes (number)';","SELECT DISTINCT T3.Description FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode INNER JOIN CountryNotes AS T3 ON T2.CountryCode = T3.Countrycode WHERE T1.Region = 'North America' AND T2.IndicatorName = 'Out-of-school children of primary school age, both sexes (number)'"
world_development_indicators,"In the countries for which the latest trade data are from 2013, what was the GDP growth in 2014? List them in the ascending order of GDP.",IndicatorName = 'GDP growth (annual %)'; Year = 2014;,"SELECT DISTINCT T1.CountryCode, T2.Value FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.LatestTradeData = 2013 AND T2.IndicatorName LIKE 'GDP growth (annual %)' AND T2.year = 2014 AND T2.Value > 0 ORDER BY T2.Value ASC"
world_development_indicators,Which European countries had the highest private expenditure on health in 2005? List the top ten countries in descending order and find the source of the data.,Year = 2005; private expenditure on health refers to IndicatorName = 'Out-of-pocket health expenditure (% of private expenditure on health)'; the highest refers to MAX(Value); source refers to Description;,"SELECT DISTINCT T1.CountryCode, T3.Description FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode INNER JOIN CountryNotes AS T3 ON T1.CountryCode = T3.Countrycode WHERE T2.IndicatorName = 'Out-of-pocket health expenditure (% of private expenditure on health)' AND T2.Value > 0 AND T2.year = 2005 ORDER BY T2.Value DESC LIMIT 10"
world_development_indicators,How many low income countries are there in South Asia?,South Asia is the name of the region; IncomeGroup = 'Low income';,SELECT COUNT(CountryCode) FROM Country WHERE Region = 'South Asia' AND IncomeGroup = 'Low income'
world_development_indicators,Please list the short name of countries which have the latest trade data after 2010.,the latest trade data after 2010 implies LatestTradeData > 2010;,SELECT ShortName FROM Country WHERE LatestTradeData > 2010
world_development_indicators,Please calculate the percentage of Sub-Saharan African countries which are in the Special trade system.,"Sub-Saharan African is the name of the region; SystemOfTrade = 'Special trade system'; countries refer to CountryCode; DIVIDE(COUNT (CountryCode where SystemOfTrade = 'Special trade system' and Region = 'Sub-Saharan Africa'), COUNT(CountryCode where Region = 'Sub-Saharan Africa')) as percentage;",SELECT  CAST(SUM(CASE WHEN Region = 'Sub-Saharan Africa' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CountryCode) FROM Country WHERE SystemOfTrade = 'Special trade system'
world_development_indicators,Please calculate the average of Arms imports (SIPRI trend indicator values) of the European & Central Asian countries.,"European & Central Asian is the name of the region; IndicatorName = 'Arms imports (SIPRI trend indicator values)'; countries refer to CountryCode; DIVIDE(Sum(Value), Count(CountryCode));",SELECT CAST(SUM(T2.Value) AS REAL) / COUNT(T1.CountryCode) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Region = 'Europe & Central Asia' AND T2.IndicatorName = 'Arms imports (SIPRI trend indicator values)'
world_development_indicators,Which upper middle income country has the lowest value of CO2 emissions (kt)?,IncomeGroup = 'Upper middle income'; IndicatorName = 'CO2 emissions (kt); the lowest value refers to MIN(Value);,SELECT T1.CountryCode FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IncomeGroup = 'Upper middle income' AND T2.IndicatorName = 'CO2 emissions (kt)' ORDER BY T2.Value ASC LIMIT 1
world_development_indicators,"What is the minimum of International migrant stock, total of heavily indebted poor countries?","IndicatorName = 'International migrant stock, total'; heavily indebted poor countries referred to by its abbreviated 'HIPC' = OtherGroups; MIN(Value);","SELECT MIN(T2.Value) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.OtherGroups = 'HIPC' AND T2.IndicatorName = 'International migrant stock, total'"
world_development_indicators,Please list the indicator names belonging to Education: Inputs topic in 2000.,Year = 'YR2000';,SELECT DISTINCT T2.IndicatorName FROM Footnotes AS T1 INNER JOIN Series AS T2 ON T1.Seriescode = T2.SeriesCode WHERE T1.Year = 'YR2000' AND T2.Topic = 'Education: Inputs'
world_development_indicators,How many annual indicators use the Sum aggregation method from 2001 to 2003?,"Annual refers to Periodicity; from 2001 to 2003 implies Year = 'YR2001', Year = 'YR2002' , Year = 'YR2003';","SELECT COUNT(DISTINCT T2.SeriesCode)  FROM Footnotes AS T1 INNER JOIN Series AS T2 ON T1.Seriescode = T2.SeriesCode WHERE T1.Year IN ('YR2001', 'YR2002', 'YR2003') AND T2.Periodicity = 'Annual' AND T2.AggregationMethod = 'Sum'"
world_development_indicators,"In 2005, which series codes use the International Monetary Fund, Balance of Payments Statistics Yearbook and data files source?",Year contains '2005'; series codes contain 'International Monetary Fund',"SELECT T1.Seriescode, T2.Source FROM Footnotes AS T1 INNER JOIN Series AS T2 ON T1.Seriescode = T2.SeriesCode WHERE T1.Year LIKE '%2005%' AND T2.Source LIKE 'International Monetary Fund%'"
world_development_indicators,"What percentage of countries in South Asia have the Life expectancy at birth, female (years) greater than 50?","South Asia is the name of the region; IndicatorName = 'Life expectancy at birth, female (years)'; greater than 50 refers to Value>50; DIVIDE(COUNT(CountryCode where IndicatorName = 'Life expectancy at birth, female (years)'; Value>50; Region = 'South Asia'), COUNT(CountryCode where Region = 'South Asia')) as percentage;","SELECT CAST(SUM(CASE WHEN T2.value > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CountryCode) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Region = 'South Asia' AND T2.IndicatorName = 'Life expectancy at birth, female (years)'"
world_development_indicators,"From 1960 to 1965, which country had the highest Death rate, crude (per 1,000 people)?","IndicatorName = 'Death rate, crude (per 1,000 people)'; the highest refers to MAX(Value); from 1960 to 1965 refers to Year between '1960' and '1965'; country refers to CountryName;","SELECT CountryName FROM Indicators WHERE Year BETWEEN 1960 AND 1965 AND IndicatorName = 'Death rate, crude (per 1,000 people)' ORDER BY Value DESC LIMIT 1"
world_development_indicators,Please list the indicator names of Arab World whose values are higher than 50 in 1960.,Arab World refers to CountryName; Year = '1960'; values are higher than 50 refers to Value>50;,SELECT IndicatorName FROM Indicators WHERE CountryName = 'Arab World' AND Year = 1960 AND Value > 50
world_development_indicators,Which country has the highest value of Merchandise imports by the reporting economy (current US$)?,country refers to CountryName; the highest value implies MAX(Value); IndicatorName = 'Merchandise imports by the reporting economy (current US$)';,SELECT CountryName FROM Indicators WHERE IndicatorName = 'Merchandise imports by the reporting economy (current US$)' ORDER BY Value DESC LIMIT 1
world_development_indicators,Please list annual indicator names which have values of more than 100 in 1965.,Annual refers to Periodicity; values of more than 100 implies Value>100; Year = '1965';,SELECT DISTINCT T2.IndicatorName FROM Indicators AS T1 INNER JOIN Series AS T2 ON T1.IndicatorName = T2.IndicatorName WHERE T1.Year = 1965 AND T1.Value > 100 AND T2.Periodicity = 'Annual'
world_development_indicators,"From 1968 to 1970, what are indicator names whose license type is open and values are less than 100?",From 1968 to 1970 refers to Year between '1968' and '1970'; values are less than 100 imply Value<100;,SELECT DISTINCT T1.IndicatorName FROM Indicators AS T1 INNER JOIN Series AS T2 ON T1.IndicatorName = T2.IndicatorName WHERE T1.Year >= 1968 AND T1.Year < 1971 AND T2.LicenseType = 'Open' AND T1.Value < 100
world_development_indicators,Which country had the highest value of indicator belongs to Private Sector & Trade: Exports topic? Please list the country name and indicator name.,country refers to CountryName;,"SELECT T1.CountryName, T1.IndicatorName FROM Indicators AS T1 INNER JOIN Series AS T2 ON T1.IndicatorName = T2.IndicatorName WHERE T2.Topic = 'Private Sector & Trade: Exports' ORDER BY T1.Value DESC LIMIT 1"
world_development_indicators,Which indicator name uses the Weighted average method and has the lowest value?,AggregationMethod = 'Weighted average'; the lowest value implies MIN(Value);,"SELECT T1.IndicatorName, MIN(T1.Value) FROM Indicators AS T1 INNER JOIN Series AS T2 ON T1.IndicatorName = T2.IndicatorName WHERE T2.AggregationMethod = 'Weighted average'"
world_development_indicators,Please list out all annual indicator names of Sudan in 1961?,Sudan is the name of the country; Periodicity = 'Annual'; Year = '1961',SELECT T1.IndicatorName FROM Indicators AS T1 INNER JOIN Series AS T2 ON T1.IndicatorName = T2.IndicatorName WHERE T1.CountryName = 'Sudan' AND T1.Year = 1961 AND T2.Periodicity = 'Annual'
world_development_indicators,"From 1960 to 1965, which country has the lowest value of indicator belongs to Health: Population: Structure?",From 1960 to 1965 refers to Year between '1960' and '1965'; the lowest value implies MIN(Value); country refers to CountryName;,SELECT CountryName FROM Indicators WHERE Value = ( SELECT MIN(T1.Value) FROM Indicators AS T1 INNER JOIN Series AS T2 ON T1.IndicatorName = T2.IndicatorName WHERE T1.Year >= 1960 AND T1.Year < 1966 AND T2.Topic = 'Health: Population: Structure' )
world_development_indicators,"What percentage of upper middle income countries which have the CO2 emissions from liquid fuel consumption (% of total)

less than 80%?","IndicatorName = 'CO2 emissions from liquid fuel consumption (% of total)'; less than 80% implies Value<80%; IncomeGroup = 'Upper middle income'; DIVIDE(COUNT(CountryCode where IndicatorName = 'CO2 emissions from liquid fuel consumption (% of total)'; Value<80%; IncomeGroup = 'Upper middle income'), COUNT(CountryCode where IncomeGroup = 'Upper middle income'));",SELECT SUM(CASE WHEN T2.IndicatorName = 'CO2 emissions FROM liquid fuel consumption (% of total)' AND t2.Value < 80 THEN 1 ELSE 0 END) * 1.0 / COUNT(T1.CountryCode) persent FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IncomeGroup = 'Upper middle income'
world_development_indicators,What is indicator code of Rural population?,IndicatorName = 'Rural population';,SELECT DISTINCT IndicatorCode FROM Indicators WHERE IndicatorName = 'Rural population'
world_development_indicators,How many country uses the 2008 System of National Accounts methodology? List our their table name.,,SELECT TableName  FROM Country WHERE SystemOfNationalAccounts = 'Country uses the 2008 System of National Accounts methodology.'
world_development_indicators,List out the series code of countries using Euro as their currency unit.,,SELECT DISTINCT T2.SeriesCode FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.CurrencyUnit = 'Euro'
world_development_indicators,List out the long name of countries using series code as DT.DOD.DSTC.CD,,SELECT T1.LongName FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.SeriesCode = 'DT.DOD.DSTC.CD'
world_development_indicators,Mention the series code of countries using Hong Kong dollar as their currency unit.,,SELECT T2.SeriesCode FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.CurrencyUnit = 'Hong Kong dollar'
world_development_indicators,List out the table name of countries using series code as SP.DYN.TO65.MA.ZS,,SELECT T1.TableName FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Seriescode = 'SP.DYN.TO65.MA.ZS'
world_development_indicators,List out the country name of lower earning countries,lower earning countries refer to IncomeGroup = 'Low income';,SELECT DISTINCT T2.CountryName FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IncomeGroup = 'Low income'
world_development_indicators,List out the series code and country code of the poor countries that located in Latin American & Carribbean.,Latin American & Carribbean is the name of the region; poor countries refers to IncomeGroup = 'Low income';,"SELECT T2.SeriesCode, T2.CountryCode FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.Region = 'Latin America & Caribbean' AND t1.incomegroup = 'Low income'"
world_development_indicators,Mention the series code of countries using Australian dollar as their currency unit. Which country belongs to middle income group among them.,middle income group refers to IncomeGroup = 'Low middle income';,"SELECT T1.CountryCode, T2.SeriesCode FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.CurrencyUnit = 'Australian dollar' AND T1.IncomeGroup = 'Lower middle income'"
world_development_indicators,List out the country name of upper middle income group. Which country has the earliest national account base year? List out the region where this country locates.,"IncomeGroup = 'Upper middle income'; the earliest national account base year refers to MIN(NationalAccountsBaseYear); 
",SELECT DISTINCT T1.CountryName FROM indicators AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.IncomeGroup = 'Upper middle income' UNION SELECT longname FROM ( SELECT longname FROM country WHERE NationalAccountsBaseYear <> '' ORDER BY NationalAccountsBaseYear ASC LIMIT 1 )
world_development_indicators,List out the country code and country name of the rich countries using Euro as their currency unit,Non-OECD and OECD countries can be regarded as rich countries for those that are part of the High Income Group;,"SELECT DISTINCT T1.CountryCode, T2.CountryName FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.CurrencyUnit = 'Euro' AND (T1.IncomeGroup = 'High income: OECD' OR T1.IncomeGroup = 'High income: nonOECD')"
world_development_indicators,List out the table name and currency unit of countries using series code as FP.CPI.TOTL,,"SELECT T1.TableName, T1.CurrencyUnit FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.SeriesCode = 'FP.CPI.TOTL'"
world_development_indicators,List out the name and indicator code of high income: nonOECD countries,high income: non-OECD' refer to IncomeGroup;,"SELECT DISTINCT T1.CountryCode, T2.CountryName FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IncomeGroup = 'High income: nonOECD'"
world_development_indicators,Mention the series code of countries using pound sterling as their currency unit. Which country belongs to high income group among them.,,"SELECT DISTINCT T1.CountryCode, T1.CurrencyUnit, T1.IncomeGroup FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.CurrencyUnit = 'Pound sterling' AND T1.IncomeGroup LIKE '%high income%'"
world_development_indicators,List down 10 country codes and it's short names.,,"SELECT CountryCode, ShortName FROM Country LIMIT 10"
world_development_indicators,How many of the countries name start with alphabet A? List down the Alpha2Code of them.,countries name starts with alphabet A refers to shortname like 'A%';,SELECT COUNT(ShortName) FROM Country WHERE ShortName LIKE 'A%' UNION SELECT alpha2code FROM country WHERE shortname LIKE 'A%'
world_development_indicators,Which countries use Euro as their currency? List down the table name.,CurrencyUnit = 'Euro';,SELECT TableName FROM Country WHERE CurrencyUnit = 'Euro'
world_development_indicators,How many of the countries do not have special notes? List the long name.,do not have special notes implies SpecialNotes are NULL;,SELECT COUNT(LongName) FROM Country WHERE SpecialNotes = '' UNION SELECT longname FROM country WHERE specialnotes = ''
world_development_indicators,Which high income group countries are from Asia?,Asia is the name of the region;,"SELECT CountryCode, Region FROM Country WHERE (IncomeGroup = 'High income: OECD' OR IncomeGroup = 'High income: nonOECD') AND Region LIKE '%Asia%'"
world_development_indicators,Name the countries' long name with national accounts base year prior to 1980.,national accounts base year prior to 1980 means before 1980 and refers to NationalAccountsBaseYear<1980;,SELECT LongName FROM Country WHERE NationalAccountsBaseYear < '1980' AND NationalAccountsBaseYear != ''
world_development_indicators,Which low income country has a series code of DT.DOD.DECT.CD? Name the country code of it.,IncomeGroup = 'Low income';,SELECT T1.CountryCode FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.IncomeGroup = 'Low income' AND T2.Seriescode = 'DT.DOD.DECT.CD'
world_development_indicators,"State the table name of country with description of ""Covers mainland Tanzania only"".",,SELECT DISTINCT T1.TableName FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Description = 'Covers mainland Tanzania only.'
world_development_indicators,Write down the description and series code of Benin in year 2005.,Benin is the short name of the country; year 2005 refers to Year = 'YR2005';,"SELECT T2.Description, T2.Seriescode FROM Country AS T1 INNER JOIN FootNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.TableName = 'Benin' AND T2.Year = 'YR2005'"
world_development_indicators,What are the footnote description of Finland in year 2000?,Finland is the short name of the country; year 2000 refers to Year = 'YR2000';,SELECT DISTINCT T2.Description FROM Country AS T1 INNER JOIN FootNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.TableName = 'Finland' AND T2.Year = 'YR2000'
world_development_indicators,"What are the years when countries have indicator name of ""Air transport, passengers carried""? List the table name of these countries.",,"SELECT DISTINCT T2.Year, T1.TableName FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.IndicatorName = 'Air transport, passengers carried'"
world_development_indicators,List the long name of countries with indicator name in 1980.,with any indicator name implies IndicatorName is not NULL; Year = '1980';,SELECT DISTINCT T1.LongName FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Year = 1980 AND T2.IndicatorName IS NOT NULL
world_development_indicators,State the currency of Malaysia and what are the indicator code used by this country in 1970?,Malaysia is the name of the country; currency refers to CurrencyUnit; Year = '1970';,"SELECT T1.currencyunit, T2.IndicatorCode FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.TableName = 'Malaysia' AND T2.Year = 1970"
world_development_indicators,Name 5 country codes of country with highest value and state the region of these countries.,with highest value refers to MAX(Value);,"SELECT DISTINCT T1.CountryCode, T1.Region FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode ORDER BY T2.Value DESC LIMIT 5"
world_development_indicators,"How many countries have country note description as ""Sources: UN Energy Statistics (2014)""? List the currency of these countries.",countries refer to CountryCode; currency refers to CurrencyUnit;,SELECT COUNT(DISTINCT T1.Countrycode) FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Description = 'Sources: UN Energy Statistics (2014)' UNION SELECT DISTINCT t1.CurrencyUnit FROM country AS t1 INNER JOIN countrynotes AS t2 ON t1.CountryCode = t2.Countrycode WHERE t2.Description = 'Sources: UN Energy Statistics (2014)'
world_development_indicators,How many footnotes have been made in year 1980 and what are the table names of these countries that made the footnotes?,year 1980 refers to Year = 'YR1980';,SELECT COUNT(T2.Description) FROM Country AS T1 INNER JOIN FootNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Year = 'YR1980' UNION ALL SELECT DISTINCT T1.TableName FROM Country AS T1 INNER JOIN FootNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Year = 'YR1980'
world_development_indicators,"List the series code of country with country notes description as ""Data sources : Eurostat"" and state the Wb2Code of these countries.",,"SELECT T2.seriescode, T1.Wb2Code FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Description = 'Data sources : Eurostat'"
world_development_indicators,"Among the low income countries, which country has the lowest fertility rate?","fertility rate refers to IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'; lowest refers to MIN(Value); IncomeGroup = 'Low income';","SELECT T2.CountryName FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IncomeGroup = 'Low income' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' ORDER BY T2.Value LIMIT 1"
world_development_indicators,How much is the total urban population of middle income countries in 1960?,IncomeGroup = 'Middle income'; Year = 1960; urban population refers to IndicatorName;,SELECT SUM(T2.Value) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IncomeGroup LIKE '%middle income' AND T2.Year = 1960 AND T2.IndicatorName = 'Urban population'
world_development_indicators,Name the country with fastest growth in adjusted net national income in 1980 and state the currency used by this country.,fastest growth refers to MAX(Value); IndicatorName = 'Adjusted net national income (annual % growth)'; Year = '1980'; currency refers to CurrencyUnit;,"SELECT T2.countryname, T1.CurrencyUnit FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.IndicatorName = 'Adjusted net national income (annual % growth)' AND T2.Year = 1980 AND T1.CurrencyUnit != '' ORDER BY T2.Value DESC LIMIT 1"
world_development_indicators,How many countries using the 1993 System of National Accounts methodology?,use the 1993 System of National Accounts methodology refers to SystemOfNationalAccounts = '1993 System of National Accounts methodology.',SELECT COUNT(CountryCode) FROM Country WHERE SystemOfNationalAccounts = 'Country uses the 1993 System of National Accounts methodology.'
world_development_indicators,Which country have completed vital registration? List all the countries.,have completed vital registration refers to VitalRegistrationComplete = Yes; country name refers to ShortName,SELECT ShortName FROM Country WHERE VitalRegistrationComplete = 'Yes'
world_development_indicators,Which country have conducted population census from 2010 until 2012 and have completed vital registration?,from 2010 until 2012 refers to LatestPopulationCensus between '2010' and '2012'; have completed vital registration refers to VitalRegistrationComplete = 'Yes'; CountryName = ShortName + LongName,"SELECT ShortName, LongName FROM Country WHERE LatestPopulationCensus >= 2010 AND LatestPopulationCensus < 2013 AND VitalRegistrationComplete = 'Yes'"
world_development_indicators,Which country have the highest CO2 emissions in 1960?,which country refers to countryname; the highest CO2 emissions refers to max(value where indicatorname = 'CO2 emissions (metric tons per capita)'); in 1960 refers to year = '1970',SELECT CountryName FROM Indicators WHERE Year = 1960 AND IndicatorName = 'CO2 emissions (metric tons per capita)' ORDER BY Value DESC LIMIT 1
world_development_indicators,What is the ratio between country with the highest number of infant deaths in 1971 and the lowest number of infant deaths in 1971? List the country with the highest number of infant deaths in 1971 and the lowest number of infant deaths in 1971.,"ratio = divide(max(value where indicatorname = 'Number of infant deaths' and year = '1971'), min(value where indicatorname = 'Number of infant deaths' and year = '1971')); the highest number of infant deaths in 1971 refers to max(value where indicatorname = 'Number of infant deaths' and year = '1971'); the lowest number of infant deaths in 1971 refers to min(value where indicatorname = 'Number of infant deaths' and year = '1971')","SELECT CAST(MAX(value) AS REAL) / MIN(value) FROM indicators WHERE indicatorname = 'Number of infant deaths' AND year = '1971' UNION ALL SELECT countryname FROM ( SELECT countryname, MAX(value) FROM indicators WHERE indicatorname = 'Number of infant deaths' AND year = '1971' ) UNION SELECT countryname FROM ( SELECT countryname, MIN(value) FROM indicators WHERE indicatorname = 'Number of infant deaths' AND year = '1971' )"
world_development_indicators,What country have the series code of SP.DYN.CBRT.IN?,what country refers to ShortName,SELECT T1.ShortName FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.SeriesCode = 'SP.DYN.CBRT.IN'
world_development_indicators,Which country have data classified as official aid?,which country refers to ShortName; have data classified as official aid refers to description = 'Data are classified as official aid.',SELECT DISTINCT T1.CountryCode FROM Country AS T1 INNER JOIN FootNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Description = 'Data are classified as official aid.'
world_development_indicators,What country have its data estimated based on regression?,what country refers to LongName; have its data estimated based on regression refers to description = 'Estimates are based on regression.',SELECT DISTINCT T1.ShortName FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Description = 'Estimates are based on regression.'
world_development_indicators,List all the country in East Asia & Pacific region that have more than 2000000 urban population in 1970.,country refers to LongName; have more than 2000000 urban population refers to value where indicatorname = 'Urban population'>2000000; in 1970 refers to year = '1970',SELECT DISTINCT T1.CountryCode FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Year = 1970 AND T1.Region = 'East Asia & Pacific' AND T2.Value > 2000000 AND t2.indicatorname = 'Urban population'
world_development_indicators,"In 1960, what is largest population for country with upper middle income?","in 1960 refers to year = '1960'; the largest population refers to max(value where IndicatorName = 'Population, total'); country with upper middle income refers to incomegroup = 'Upper middle income'","SELECT MAX(T2.Value) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IncomeGroup = 'Upper middle income' AND T2.Year = 1960 AND T2.IndicatorName = 'Population, total'"
world_development_indicators,How many countries uses the 1968 System of National Accounts methodology?,uses the 1968 System of National Accounts methodology refers to SystemOfNationalAccounts = '1968 System of National Accounts methodology',SELECT COUNT(CountryCode)  FROM Country WHERE SystemOfNationalAccounts = 'Country uses the 1968 System of National Accounts methodology.'
world_development_indicators,"What upper middle income country under East Asia & Pacific region which covers the topic about Social Protection & Labor: Migration
? Indicate the short name of the said country.",upper middle income country refers to incomegroup = 'Upper middle income',SELECT DISTINCT T1.ShortName FROM Country AS T1 INNER JOIN footnotes AS T2 ON T1.CountryCode = T2.CountryCode INNER JOIN Series AS T3 ON T2.Seriescode = T3.SeriesCode WHERE T1.IncomeGroup = 'Upper middle income' AND T1.Region = 'East Asia & Pacific' AND T3.Topic = 'Social Protection & Labor: Migration'
world_development_indicators,Name the country in which the topic is about Poverty: Shared Prosperity. Indicate the long name of the country.,,SELECT DISTINCT T1.LongName FROM Country AS T1 INNER JOIN footnotes AS T2 ON T1.CountryCode = T2.Countrycode INNER JOIN Series AS T3 ON T2.Seriescode = T3.SeriesCode WHERE T3.Topic = 'Poverty: Shared prosperity'
world_development_indicators,"What country has the latest trade data with a series code of ""SP.DYN.CDRT.IN
""? List the table name of the country.","the latest trade data refers to LatestTradeData = '2013'; with a series code of ""SP.DYN.CDRT.IN
"" refers to indicatorcode = 'SP.DYN.CDRT.IN'",SELECT DISTINCT T1.TableName FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.LatestTradeData = 2013 AND T2.IndicatorCode = 'SP.DYN.CDRT.IN'
world_development_indicators,"What country in the region of Sub-Saharan Africa has a series code of ""SP.DYN.AMRT.FE""? Indicate the long name of the country",,SELECT DISTINCT T3.LongName FROM SeriesNotes AS T1 INNER JOIN CountryNotes AS T2 ON T1.SeriesCode = T2.Seriescode INNER JOIN Country AS T3 ON T2.Countrycode = T3.CountryCode WHERE T3.Region = 'Sub-Saharan Africa' AND T1.SeriesCode = 'SP.DYN.AMRT.FE'
world_development_indicators,How many countries are using the same type of currency? Please list the short names of any 3 countries.,any 3 countries refers to count(shortname)>3,SELECT ShortName FROM country WHERE currencyunit = 'U.S. dollar' LIMIT 3
world_development_indicators,What South Asian nations have low incomes? Please include the entire names of the nations in your answer.,South Asian nations refers to region = 'South Asia'; have low incomes refers to incomegroup = 'Low income'; the entire names refers to longname,SELECT LongName FROM Country WHERE IncomeGroup = 'Low income' AND Region = 'South Asia'
world_development_indicators,Please provide full name of any two countries using special trade system.,full name refers to longname; using special trade system refers to systemoftrade = 'Special trade system',SELECT LongName FROM Country WHERE SystemOfTrade = 'Special trade system' LIMIT 2
world_development_indicators,Which country has had the highest proportion of CO2 emissions from transport?,the highest proportion of CO2 emissions from transport refers to max(value where indicatorname = 'CO2 emissions from transport (% of total fuel combustion)'),SELECT CountryName FROM Indicators WHERE IndicatorName LIKE 'CO2 emissions FROM transport%' ORDER BY Value DESC LIMIT 1
world_development_indicators,Which country has the lowest percentage of arable land?,which country refers to countryname; the lowest percentage of arable land refers to min(value where indicatorname = 'Arable land (% of land area)'),SELECT CountryName FROM Indicators WHERE IndicatorName LIKE 'Arable land (% of land area)' ORDER BY Value DESC LIMIT 1
world_development_indicators,What are the subjects of series that have a restricted type of license?,subjects refers to topic; a restricted type of license refers to  licenseType = 'Restricted',SELECT DISTINCT Topic FROM Series WHERE LicenseType = 'Restricted'
world_development_indicators,Which countries in the upper middle income category still have unfinished external debt reporting? Please provide the country codes in your answer.,in the upper middle income category refers to incomegroup = 'Upper middle income'; still have unfinished external debt reporting refers to ExternalDebtReportingStatus = 'Preliminary',SELECT CountryCode FROM Country WHERE IncomeGroup = 'Upper middle income' AND ExternalDebtReportingStatus = 'Preliminary'
world_development_indicators,What is the percentage of countries in the Middle East and North Africa that have finished reporting on their real external debt?,"percentage = divide(count(countrycode where  ExternalDebtReportingStatus = 'Actual' ), count(countrycode))*100%; in the Middle East and North Africa refers to region = 'Middle East & North Africa'; have finished reporting on their real external debt refers to ExternalDebtReportingStatus = 'Actual'",SELECT CAST(SUM(CASE WHEN ExternalDebtReportingStatus = 'Actual' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CountryCode) FROM Country WHERE region = 'Middle East & North Africa'
world_development_indicators,"Which form of government has more countries that have completed the actual external debt reporting between the two types of government accounting concepts, budgetary central government vs. consolidated central government?",have completed the actual external debt reporting refers to ExternalDebtReportingStatus = 'Actual',"SELECT SUM(CASE WHEN GovernmentAccountingConcept = 'Budgetary central government' THEN 1 ELSE 0 END), SUM(CASE WHEN GovernmentAccountingConcept = 'Consolidated central government' THEN 1 ELSE 0 END) central_nums FROM country WHERE ExternalDebtReportingStatus = 'Actual'"
world_development_indicators,How many nations in East Asia and the Pacific have completed their external debt reporting on time?,in East Asia and the Pacific refers to region = 'East Asia & Pacific'; have completed their external debt reporting on time refers to ExternalDebtReportingStatus = 'Estimate',SELECT COUNT(CountryCode)  FROM Country WHERE Region = 'East Asia & Pacific' AND ExternalDebtReportingStatus = 'Estimate'
world_development_indicators,What proportion of Sub-Saharan Africa's countries have lower middle incomes?,"proportion = divide(count(countrycode where incomegroup = 'Low income'), count(countrycode))*100%; Sub-Saharan Africa's countries refers to region = 'Sub-Saharan Africa'; have lower middle incomes refers to incomegroup = 'Low income'",SELECT SUM(CASE WHEN IncomeGroup = 'Lower middle income' THEN 1 ELSE 0 END) * 100.0 / COUNT(CountryCode) persentage FROM Country WHERE Region = 'Sub-Saharan Africa'
world_development_indicators,"From 1961 to 1980, what was the highest percentage of land used for agriculture in the Republic of Benin?",from 1961 to 1980 refers to year between '1961' and '1980'; the highest percentage of land used for agriculture refers to max(value where IndicatorName = 'Agricultural land (% of land area)'); in the Republic of Benin refers to longname = 'Republic of Benin',SELECT MAX(T1.Value) FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Year >= 1961 AND T1.Year < 1981 AND T1.IndicatorName LIKE 'Agricultural land (% of land area)' AND T2.LongName = 'Republic of Benin'
world_development_indicators,Please list the full names of any three countries that have their series code with a description of UN Energy Statistics (2014).,full name refers to longname,SELECT DISTINCT T2.LongName FROM CountryNotes AS T1 INNER JOIN Country AS T2 ON T1.Countrycode = T2.CountryCode WHERE T1.Description = 'Sources: UN Energy Statistics (2014)' LIMIT 3
world_development_indicators,What was the deposit interest rate in the Commonwealth of Australia in 1979 in percentage?,deposit interest rate refers to value where IndicatorName = 'Deposit interest rate (%)'; in the Commonwealth of Australia refers to  LongName = 'Commonwealth of Australia'; in 1979 refers to Year = '1979',SELECT T1.Value FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.LongName = 'Commonwealth of Australia' AND T1.IndicatorName = 'Deposit interest rate (%)' AND T1.Year = 1979
world_development_indicators,What is the series code for Germany and what is its description?,Germany refers to shortname = 'Germany',"SELECT T1.Seriescode, T1.Description FROM CountryNotes AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.ShortName = 'Germany'"
world_development_indicators,Please provide the subject of series of Austria.,subject refers to topic; Austria refers to shortname = 'Austria',SELECT DISTINCT T3.Topic FROM CountryNotes AS T1 INNER JOIN Country AS T2 ON T1.Countrycode = T2.CountryCode INNER JOIN Series AS T3 ON T1.Seriescode = T3.SeriesCode WHERE T2.ShortName = 'Austria'
world_development_indicators,What is the subject of the series SP.DYN.AMRT.MA and what does it pertain to?,subject refers to topic; pertain to refers to Description,"SELECT DISTINCT T1.Topic, T2.Description FROM Series AS T1 INNER JOIN SeriesNotes AS T2 ON T1.SeriesCode = T2.Seriescode WHERE T1.SeriesCode = 'SP.DYN.AMRT.MA'"
world_development_indicators,"How many countries are having their country's footnotes described as ""unspecified""? Please provide the full names of any three of those countries.","described as ""unspecified"" refers to Description = 'Not specified'; full names refers to LongName",SELECT COUNT(DISTINCT T1.CountryCode)  FROM Country AS T1 INNER JOIN Footnotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Description = 'Unspecified' OR T2.Description = 'Not specified' UNION SELECT T1.LongName FROM Country AS T1 INNER JOIN Footnotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Description = 'Unspecified' OR T2.Description = 'Not specified' LIMIT 4
world_development_indicators,Which nation completed its external debt reporting in 1980 and had a Land under cereal production value of 3018500?,completed its external debt reporting refers to ExternalDebtReportingStatus = 'Actual'; in 1980 refers to year = 1980; Land under cereal production value of 3018500 refers to value = 3018500,SELECT T2.CountryCode FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IndicatorName LIKE 'Land under cereal production%' AND T1.Value = 3018500 AND T1.Year = 1980 AND T2.ExternalDebtReportingStatus = 'Actual'
world_development_indicators,What portion of the nations in Latin America and the Caribbean had more than 50% of their land used for agriculture in 1961?,"portion = divide(count(CountryName where Year = '1961' and Value>50), count(CountryName))*100%; nations in Latin America and the Caribbean refers to region = 'Latin America & Caribbean';  more than 50% of their land used for agriculture refers to value where indicatorname = 'Agricultural land (% of land area)'>50; in 1961 refers to Year = '1961'",SELECT CAST(SUM(CASE WHEN T1.Value > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.CountryCode) FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Year = 1961 AND T2.Region = 'Latin America & Caribbean' AND indicatorname = 'Agricultural land (% of land area)'
world_development_indicators,What are the full names of the countries in South Asia that belongs to the low income group?,full name refers to longname; the countries in South Asia refer to region = 'South Asia'; belongs to the low income group refers to incomegroup = 'Low income',SELECT LongName FROM Country WHERE IncomeGroup = 'Low income' AND Region = 'South Asia'
world_development_indicators,What is the indicator code for Mobile Cellular Subscriptions of Brazil?,Mobile Cellular Subscriptions refers to indicatorname = 'Mobile cellular subscriptions'; Brazil refers to CountryName = 'Brazil',SELECT DISTINCT IndicatorCode FROM Indicators WHERE CountryName = 'Brazil' AND IndicatorName = 'Mobile cellular subscriptions'
world_development_indicators,How many countries in Europe & Central Asia uses Danish krone as its currency? List the full names of those coutnries.,countries in Europe & Central Asia refer to region = 'Europe & Central Asia'; uses Danish krone refers to currencyunit = 'Danish krone'; full name refers to longname,SELECT COUNT(longname) FROM country WHERE region = 'Europe & Central Asia' AND currencyunit = 'Danish krone' UNION SELECT longname FROM country WHERE currencyunit = 'Danish krone' AND region = 'Europe & Central Asia'
world_development_indicators,What is the name of the country with the highest percentage of rural population in the overall total population? Indicate the rural population percentage of total population.,the highest percentage of rural population in the overall total population refers to max(value where indicatorname = 'Rural population (% of total population)'),"SELECT countryname, MAX(value) FROM indicators WHERE indicatorname = 'Rural population (% of total population)'"
world_development_indicators,How many countries have a latest population census in 2011? Indicate their full names.,have a latest population census in 2011 refers to LatestPopulationCensus = '2011'; full name refers to LongName,SELECT COUNT(LongName) FROM country WHERE LatestPopulationCensus = '2011' UNION ALL SELECT LongName FROM country WHERE LatestPopulationCensus = '2011'
world_development_indicators,What is the agricultural land area in sq. km of Italy in 1968?,agricultural land area in sq. km refers value where indicatorname = 'Agricultural land (sq. km)'; Italy refers to countryname = 'Italy'; in 1968 refers to year = '1968',SELECT Value FROM Indicators WHERE IndicatorName = 'Agricultural land (sq. km)' AND Year = 1968 AND CountryName = 'Italy'
world_development_indicators,"In Sub-Saharan Africa, how many female out-of-school children of primary school age are there in the country with the higest number of female out-of-school children of primary school age? Indicate the year of when it was recorded.","in Sub-Saharan Africa refers to Region = 'Sub-Saharan Africa'; the higest number of female out-of-school children of primary school age refers to max(value where IndicatorName = 'Out-of-school children of primary school age, female (number)')","SELECT MAX(T1.value), T1.year FROM indicators AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Region = 'Sub-Saharan Africa' AND T1.IndicatorName = 'Out-of-school children of primary school age, female (number)'"
world_development_indicators,What is the series code for number of infant deaths in year 1965 for the country whose full name is Islamic State of Afghanistan?,number of infant deaths refers to IndicatorName = 'Number of infant deaths'; in year 1965 refers to Year = '1965'; full name is Islamic State of Afghanistan refers to LongName = 'Islamic State of Afghanistan',SELECT DISTINCT T3.Seriescode FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode INNER JOIN CountryNotes AS T3 ON T2.CountryCode = T3.Countrycode WHERE T2.IndicatorName = 'Number of infant deaths' AND T1.LongName = 'Islamic State of Afghanistan' AND T2.Year = 1965
world_development_indicators,"Among the countries who uses the 1968 System of National Accounts methodology, how many are in the Middle East & North Africa? Name the country with the highest CO2 emissions from solid fuel consumption in kiloton.",uses the 1968 System of National Accounts methodology refers to SystemOfNationalAccounts = '1968 System of National Accounts methodology'; in the Middle East & North Africa refers to Region = 'Middle East & North Africa'; the highest CO2 emissions from solid fuel consumption in kiloton refers to max(value where IndicatorName = 'CO2 emissions from solid fuel consumption (kt)'),SELECT COUNT(DISTINCT T1.CountryCode) FROM indicators AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Region = 'Middle East & North Africa' AND T2.SystemOfNationalAccounts = 'Country uses the 1968 System of National Accounts methodology.' AND T1.IndicatorName = 'CO2 emissions FROM solid fuel consumption (kt)' UNION SELECT * FROM ( SELECT T1.CountryName FROM indicators AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Region = 'Middle East & North Africa' AND T2.SystemOfNationalAccounts = 'Country uses the 1968 System of National Accounts methodology.' AND T1.IndicatorName = 'CO2 emissions FROM solid fuel consumption (kt)' GROUP BY T1.CountryName ORDER BY SUM(T1.value) DESC LIMIT 1 )
world_development_indicators,What are the indicator codes for the Republic of Albania in the year 1960?,the Republic of Albania refers to LongName = 'Republic of Albania'; in the year 1960 refers to Year = '1960',SELECT DISTINCT T1.IndicatorCode FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Year = 1960 AND T2.LongName = 'Republic of Albania'
world_development_indicators,What is the lending category of the country with a cereal production of 6140000 metric tons for the year 1966?,cereal production of 6140000 metric tons refers value where IndicatorName = 'Cereal production (metric tons)'> 6140000; the year 1966 refers to Year = '1966',SELECT T1.LendingCategory FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.IndicatorName = 'Cereal production (metric tons)' AND T2.Value = 6140000 AND T2.Year = 1966
world_development_indicators,Which country has the highest population in largest city for 19 consecutive years starting from 1960? Indicate the region to which the country is located.,the highest population in largest city refers to max(value where IndicatorName = 'Population in largest city'); for 19 consecutive years starting from 1960 refers to Year BETWEEN'1960' and '1979',"SELECT T2.CountryCode, T2.Region FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IndicatorName = 'Population in largest city' AND T1.Year >= 1960 AND T1.Year < 1980 ORDER BY T2.Region DESC LIMIT 1"
world_development_indicators,"From 1975 to 1980, how much is the total amount CO2 emmission in kiloton of the the world? Indicate which year the world recorded its highest CO2 emmissions.",from 1975 to 1980 refers to Year between 1975 and 1980; the total amount CO2 emmission in kiloton of the the world refers to sum(value where IndicatorName like 'CO2%'); the world recorded its highest CO2 emmissions refers to max(value where IndicatorName like 'CO2%'),"SELECT SUM(T1.Value), T1.Year FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IndicatorName = 'CO2 emissions (kt)' AND T1.Year >= 1975 AND T1.Year < 1981 AND T1.CountryCode = 'WLD' AND T2.SpecialNotes = 'World aggregate.'"
world_development_indicators,Which country has the smallest land area in square kilometers for 19 consecutive years starting from year 1961? Indicate how much is its land area in square kilometers in those years and the income group of the country.,the smallest land area in square kilometers refers to min(value where IndicatorName like 'Land area (sq. km)'); for 19 consecutive years starting from year 1961 refers to Year between 1961 and 1979,"SELECT T1.CountryName, SUM(T1.Value) area, T2.IncomeGroup FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IndicatorName = 'Land area (sq. km)' AND T1.Year >= 1961 AND T1.Year < 1980 GROUP BY T1.CountryCode ORDER BY SUM(T1.Value) ASC LIMIT 1"
world_development_indicators,What is the average number of passengers carried via air transport per year by Bulgaria between 1970 to 1980? Indicate the country's system of trade.,"average number refers to avg(value); passengers carried via air transport per year refers to value where IndicatorName = 'Air transport, passengers carried'; by Bulgaria refers to CountryName = 'Bulgaria'; between 1970 to 1980 refers to Year between 1970 and 1980","SELECT AVG(T1.Value), T2.SystemOfTrade FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IndicatorName = 'Air transport, passengers carried' AND T1.Year >= 1970 AND T1.Year < 1981 AND T1.CountryName = 'Bulgaria'"
world_development_indicators,What's the lastest household survey in Angola and when did it take place?,in Angola refers to ShortName = 'Angola'; when refers to PppSurveyYear,"SELECT LatestHouseholdSurvey, PppSurveyYear FROM Country WHERE ShortName = 'Angola'"
world_development_indicators,How many countries in the North America Region has completed the vital registration?,has completed the vital registration refers to VitalRegistrationComplete = 'Yes',SELECT COUNT(CountryCode) FROM Country WHERE VitalRegistrationComplete = 'Yes' AND Region = 'North America'
world_development_indicators,In which years does the country whose Alpha2Code is 1A have a result of the indicator Adolescent fertility rate?,"indicator Adolescent fertility rate refers to IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'

","SELECT T2.Year FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'"
world_development_indicators,What's the long name of the country that got 3000000 on the indicator Arms exports in 1960?,long name refers to CountryName; got 3000000 on the indicator Arms exports refers to value where IndicatorName = 'Arms exports (SIPRI trend indicator values)' = 3000000; in 1960 refers to Year = 1960,SELECT T1.LongName FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.IndicatorName = 'Arms exports (SIPRI trend indicator values)' AND T2.Year = 1960 AND T2.Value = 3000000
world_development_indicators,Please list the Alpha2Codes of all the countries that have an indicator on Rural population in 1960.,in 1960 refers to year = '1960',SELECT T1.Alpha2Code FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.IndicatorName = 'Rural population' AND T2.Year = 1960
world_development_indicators,"Which country's indicator for Adolescent fertility rate is the highest in 1960, please give its special notes.","indicator for Adolescent fertility rate is the highest refers to max(value where IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'); in 1960 refers to year = '1960'","SELECT DISTINCT T1.CountryCode, T1.SpecialNotes FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Value = ( SELECT Value FROM Indicators WHERE IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' AND Year = 1960 ORDER BY Value DESC LIMIT 1 )"
world_development_indicators,By how much did the indicator on Adolescent fertility rate increase from 1960 to 1961 in the country whose Alpha2Code is 1A?,"by how much = subtract(sum(value where Year = 1961), sum(value where Year = 1960)); indicator on Adolescent fertility rate refers to IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)%'","SELECT ( SELECT T2.Value FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' AND T2.Year = 1961 ) - ( SELECT T2.Value FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' AND T2.Year = 1960 ) DIFF"
world_development_indicators,What is the note for Australia on the indicator SP.ADO.TFRT?,note refers to Description; for Australia refers to ShortName = 'Australia'; indicator SP.ADO.TFRT refers to Seriescode = 'SP.ADO.TFRT',SELECT T2.Description FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Seriescode = 'SP.ADO.TFRT' AND T1.ShortName = 'Australia'
world_development_indicators,Please list the notes for Aruba on the indicators under the topic of Environment: Energy production & use.,note refers to Description; for Aruba refers to ShortName = 'Aruba',SELECT T2.Description FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode INNER JOIN Series AS T3 ON T2.Seriescode = T3.SeriesCode WHERE T1.ShortName = 'Aruba' AND T3.Topic = 'Environment: Energy production & use'
world_development_indicators,Which countries have notes on the indicator BX.KLT.DINV.CD.WD?,indicator BX.KLT.DINV.CD.WD refers to Seriescode = 'BX.KLT.DINV.CD.WD',SELECT T1.ShortName FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode INNER JOIN Series AS T3 ON T2.Seriescode = T3.SeriesCode WHERE T3.Seriescode = 'BX.KLT.DINV.CD.WD'
world_development_indicators,"For the country that has notes on the indicator Inflation, consumer prices, in which region is it in?","indicator Inflation, consumer prices refers to IndicatorName = 'Inflation, consumer prices (annual %)'","SELECT T1.Region FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode INNER JOIN Series AS T3 ON T2.Seriescode = T3.SeriesCode WHERE T3.IndicatorName = 'Inflation, consumer prices (annual %)'"
world_development_indicators,"How many countries have notes on the indicator Stocks traded, turnover ratio of domestic shares?","indicator Stocks traded, turnover ratio of domestic shares refers to IndicatorName = 'Stocks traded, turnover ratio of domestic shares (%)'","SELECT COUNT(T1.Countrycode)  FROM CountryNotes AS T1 INNER JOIN Series AS T2 ON T1.Seriescode = T2.SeriesCode WHERE T2.IndicatorName = 'Stocks traded, turnover ratio of domestic shares (%)'"
world_development_indicators,What's the agregation method for the indicator whose value is 133 in 1960 for the Arab World?,in 1960 refers to Year = 1960; for the Arab World refers to CountryName = 'Arab World',SELECT T2.AggregationMethod FROM Indicators AS T1 INNER JOIN Series AS T2 ON T1.IndicatorName = T2.IndicatorName INNER JOIN Country AS T3 ON T1.CountryCode = T3.CountryCode WHERE T3.ShortName = 'Arab World' AND T1.Value = 133 AND T1.Year = 1960
world_development_indicators,"What's the value of the indicator whose long definition is ""Adolescent fertility rate is the number of births per 1,000 women ages 15-19."" for the Arab World in 1960?",in 1960 refers to Year = 1960; for the Arab World refers to CountryName = 'Arab World',"SELECT T1.Value FROM Indicators AS T1 INNER JOIN Series AS T2 ON T1.IndicatorName = T2.IndicatorName INNER JOIN Country AS T3 ON T1.CountryCode = T3.CountryCode WHERE T2.LongDefinition = 'Adolescent fertility rate is the number of births per 1,000 women ages 15-19.' AND T3.ShortName = 'Arab World' AND T1.Year = 1960"
world_development_indicators,What is the percentage of increase of the indicator on Adolescent fertility rate from 1960 to 1961 in the country whose Alpha2Code is 1A?,"the percentage of increase from 1960 to 1961 = divide(subtract(sum(value where Year = 1961), sum(Value where Year = 1960)), sum(Value where Year = 1960)) *100%; indicator on Adolescent fertility rate refers to IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)%'

","SELECT (( SELECT T2.Value FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' AND T2.Year = 1961 ) - ( SELECT T2.Value FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' AND T2.Year = 1960 )) * 1.0 / ( SELECT SUM(T2.Value) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' AND T2.Year = 1960 )"
world_development_indicators,What is the average value of Adolescent fertility rate in the country whose Alpha2Code is 1A?,"average value = AVG(Value) where IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'","SELECT CAST(SUM(T2.Value) AS REAL) * 100 / COUNT(T2.Year) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'"
movielens,List the different director IDs of the movies whose user rating is more than 4.,,SELECT DISTINCT T2.directorid FROM u2base AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.rating > 4
movielens,"Among the users who gave a rating of 5, how many of them are male?",Male users mean that u_gender = 'M',SELECT COUNT(T1.userid) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating = 5 AND T2.u_gender = 'M'
movielens,List the genres of the movies which actor id 851 is the star.,,SELECT T2.genre FROM movies2actors AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T1.actorid = T3.actorid WHERE T3.actorid = 851
movielens,How many movies from the USA which user rating is less than 3?,,SELECT COUNT(T1.movieid) FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'USA' AND T1.rating < 3
movielens,"Among the movies from France, how many of them are drama?",France a one country,SELECT COUNT(T1.movieid) FROM movies2directors AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'France' AND T1.genre = 'drama'
movielens,What is the average occupation of users whose ratings are not more than 2 ?,,SELECT AVG(T2.occupation) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating < 2
movielens,"List the top 10 USA movies, by descending order, from the highest to the lowest, the user rating.",USA is a country,SELECT T1.movieid FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'USA' GROUP BY T1.movieid ORDER BY AVG(T1.rating) DESC LIMIT 10
movielens,What is the average number of casts of movies that are from the USA?,USA is a country,SELECT AVG(T2.cast_num) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'USA'
movielens,List the top 5 movies from other countries which to language is not in English.,not in English can be represented by isEnglish = 'F',SELECT DISTINCT T1.movieid FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'other' AND T2.isEnglish = 'F' LIMIT 5
movielens,"Among the best actors, how many of them got a rating of 5 to the movies they starred?",,SELECT COUNT(T1.actorid) FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid INNER JOIN u2base AS T3 ON T2.movieid = T3.movieid WHERE T1.a_quality = 5 AND T3.rating = 5
movielens,What is the average rating of the newest movies from France?,France is a country; year = 4 represents the newest date.,SELECT AVG(T1.rating) FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'france' AND T2.year = 4
movielens,"Among the most rated UK movies, how many of them has running time of less than 2?",UK is a country,SELECT COUNT(T1.movieid) FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'UK' AND T2.runningtime < 2 AND T1.rating = 5
movielens,List the id of male users who gave ratings of less than 3 to French movies with running time of 2.,Male users mean that u_gender = 'M'; France is a country,SELECT T1.userid FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid INNER JOIN users AS T3 ON T1.userid = T3.userid WHERE T2.country = 'France' AND T2.runningtime = 2 AND T1.rating < 3 AND T3.u_gender = 'M'
movielens,"Among the worst actresses, how many of them got a rating of more than 3 to the movies they starred?",Worst actresses means a_quality is the least; The least a_quality is 0,SELECT COUNT(T1.userid) FROM u2base AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid INNER JOIN users AS T4 ON T1.userid = T4.userid WHERE T3.a_quality = 0 AND T1.rating > 3 AND T4.u_gender = 'F'
movielens,What is the ID of audiences that gave the most rating of 5?,The audience and users are the same meaning,SELECT userid FROM u2base WHERE rating = 5 GROUP BY userid ORDER BY COUNT(movieid) DESC LIMIT 1
movielens,What are the ID of actors that had worked together with director 22397? What was the genre of that movie?,,"SELECT T2.actorid, T4.genre FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid INNER JOIN movies2directors AS T4 ON T1.movieid = T4.movieid WHERE T4.directorid = 22397"
movielens,Please list down the ID of actors and directors in action movies.,,"SELECT T2.actorid, T1.directorid FROM movies2directors AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T1.genre = 'Action'"
movielens,How many female actors acted in the movies of year 4?,Female actors mean that a_gender = 'F',SELECT COUNT(T2.actorid) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid WHERE T3.a_gender = 'F' AND T1.year = 4
movielens,What are the ID of actors with quality rating of 3 acted in English USA movies?,English movies refers to isEnglish = 'T'; USA is a country,SELECT T2.actorid FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid WHERE T3.a_quality = 3 AND T1.country = 'USA' AND T1.isEnglish = 'T'
movielens,List down the ID of movies with running time of 3 and average revenue of 1?,,SELECT T1.movieid FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid INNER JOIN directors AS T3 ON T2.directorid = T3.directorid WHERE T1.runningtime = 3 AND T3.avg_revenue = 1
movielens,UK produced what genre of movies?,UK is a country,SELECT T2.genre FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'UK'
movielens,What is the favourite movie genre for audiences of age 18?,The audience and users are the same meaning,SELECT T1.genre FROM movies2directors AS T1 INNER JOIN u2base AS T2 ON T1.movieid = T2.movieid INNER JOIN users AS T3 ON T2.userid = T3.userid WHERE T3.age = 18 GROUP BY T1.genre ORDER BY COUNT(T1.movieid) DESC LIMIT 1
movielens,What is the ID of actors that acted in the movies most viewed by audience with occupation 5?,The audience and users are the same meaning,SELECT T3.actorid FROM users AS T1 INNER JOIN u2base AS T2 ON T1.userid = T2.userid INNER JOIN movies2actors AS T3 ON T2.movieid = T3.movieid WHERE T1.occupation = 5 GROUP BY T2.movieid ORDER BY COUNT(T1.userid) DESC LIMIT 1
movielens,Movies with rating 3 are viewed by audiences in which distinct age group?,The audience and users are the same meaning,SELECT DISTINCT T2.age FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating = 3
movielens,Action movies are mostly directed by directors of which country?,,SELECT T3.country FROM movies2directors AS T1 INNER JOIN directors AS T2 ON T1.directorid = T2.directorid INNER JOIN movies AS T3 ON T1.movieid = T3.movieid WHERE T1.genre = 'Action' GROUP BY T3.country ORDER BY COUNT(T3.country) DESC LIMIT 1
movielens,Please list down ID of movies acted by top 5 actors based on actor rating.,,SELECT T2.movieid FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid GROUP BY T2.actorid ORDER BY AVG(T1.a_quality) DESC LIMIT 5
movielens,List down 5 non English adventure movies from UK?,not English refers to isEnglish = 'F'; UK is a country,SELECT T1.movieid FROM movies2directors AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'UK' AND T1.genre = 'Adventure' AND T2.isEnglish = 'F' LIMIT 5
movielens,What is the percentage of female audiences who viewed movies with rating 2?,The audience and users are the same meaning; Female users refers to u_gender = 'F'; Percentage of female users = count(female users) / count(all users); count(all users) = count(female users) + count(male users),"SELECT CAST(SUM(IIF(T2.u_gender = 'F', 1, 0)) AS REAL) * 100 / COUNT(T2.userid) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating = 2"
movielens,What is the difference of female and male audiences in number who viewed horror movies?,The audience and users are the same meaning; Difference of female and male audiences = count(female users) - count(male users); Female users refers to u_gender = 'F'; Male users refers to u_gender = 'M',"SELECT SUM(IIF(T2.u_gender = 'F', 1, 0)) - SUM(IIF(T2.u_gender = 'M', 1, 0)) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid INNER JOIN movies2directors AS T3 ON T3.movieid = T1.movieid WHERE T3.genre = 'horror'"
movielens,Please list the genre of the movies that are the newest and is in English.,"Year contains relative value, higher year value refers to newer date; Year = 4 refers to newest date, Year = 1 refer to oldest date; In English means isEnglish = T",SELECT T2.genre FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.year = 4 AND T1.isEnglish = 'T'
movielens,"Among the action movies from the USA, how many of them are not in English?",USA is a country; not in English can be represented by isEnglish = 'F',SELECT COUNT(T1.movieid) FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'USA' AND T1.isEnglish = 'F' AND T2.genre = 'Action'
movielens,"For the male users no older than 18, how many times have they given the highest rating?",Male users refers to u_gender = 'M',SELECT COUNT(T1.movieid) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating = 5 AND T2.age < 18 AND T2.u_gender = 'M'
movielens,Please list the ID of the movie that has been mostly rated by female users.,Female users refers to u_gender = 'F',SELECT T1.movieid FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T2.u_gender = 'F' GROUP BY T1.movieid ORDER BY COUNT(T2.userid) DESC LIMIT 1
movielens,"Among divergent movies that got the highest rating, how many of them are from the UK?",UK is a country,SELECT COUNT(DISTINCT T1.movieid) FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'UK' AND T1.rating = 5
movielens,Please list different IDs of movies that are the newest and have gotten the lowest rating.,"Year contains relative value, higer year value refers to newer date; Year = 4 refers to newest date, Year = 1 refer to oldest date; Lowest rating = 1",SELECT DISTINCT T1.movieid FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.year = 4 AND T1.rating = 1
movielens,"For the movies in English that are the oldest, how many of them have the lowest rating?","Year contains relative value, higer year value refers to newer date; Year = 4 refers to newest date, Year = 1 refer to oldest date; Lowest rating = 1；isEnglish = 'T' means English movie",SELECT COUNT(DISTINCT T1.movieid) FROM movies AS T1 INNER JOIN u2base AS T2 ON T1.movieid = T2.movieid WHERE T1.year = 1 AND T2.rating = 1 AND T1.isEnglish = 'T'
movielens,How many different female users have rated movies from France?,France is a country; Female users mean that u_gender = 'F',SELECT COUNT(DISTINCT T2.userid) FROM users AS T1 INNER JOIN u2base AS T2 ON T1.userid = T2.userid INNER JOIN movies AS T3 ON T2.movieid = T3.movieid WHERE T1.u_gender = 'F' AND T3.country = 'France'
movielens,"For different directors who direct well, how many of them have directed an action film?","direct well means the quality of directing is good, which means d_quality = 4.",SELECT COUNT(DISTINCT T2.directorid) FROM movies2directors AS T2 INNER JOIN directors AS T3 ON T2.directorid = T3.directorid WHERE T2.genre = 'Action' AND T3.d_quality = 4
movielens,Please list the genre of the movies that are directed by the directors with the highest level of average revenue.,,SELECT T2.genre FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid WHERE T1.avg_revenue = 4
movielens,How many distinct movies in English stars a male actor who acts the best?,Male actors mean that a_gender = 'M'; isEnglish = 'T' means movies in English,SELECT COUNT(DISTINCT T1.actorid) FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid INNER JOIN movies AS T3 ON T2.movieid = T3.movieid WHERE T3.isEnglish = 'T' AND T1.a_gender = 'M' AND T1.a_quality = 5
movielens,Please list the country of the movie that stars an actress who acts the worse.,"a_quality = 5 refers to act the best, a_quality = 0 refers to act the worst",SELECT T3.country FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid INNER JOIN movies AS T3 ON T2.movieid = T3.movieid WHERE T1.a_gender = 'F' AND T1.a_quality = 0
movielens,What is the highest average rating for action movies made in the USA?,USA is a country,SELECT AVG(T2.rating) FROM movies AS T1 INNER JOIN u2base AS T2 ON T1.movieid = T2.movieid INNER JOIN movies2directors AS T3 ON T1.movieid = T3.movieid WHERE T1.country = 'USA' AND T3.genre = 'Action' GROUP BY T1.movieid ORDER BY AVG(T2.rating) DESC LIMIT 1
movielens,"Among the films directed by directors who direct the best, how many of them have an average rating of over 3.5?","d_quality = 5 refers to direct the best, d_quality = 0 refers to direct the worst",SELECT COUNT(*) FROM ( SELECT DISTINCT T2.movieid FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid INNER JOIN u2base AS T3 ON T2.movieid = T3.movieid WHERE T1.d_quality = 5 GROUP BY T2.movieid HAVING AVG(T3.rating) > 3.5 ) AS T1
movielens,Which adventure movie has the highest average rating?,,SELECT T1.movieid FROM movies2directors AS T1 INNER JOIN u2base AS T2 ON T1.movieid = T2.movieid WHERE T1.genre = 'Adventure' GROUP BY T1.movieid ORDER BY AVG(T2.rating) DESC LIMIT 1
movielens,How many of the users who rate the movie with the id '2462959' are female?,Female users mean that u_gender = 'F',SELECT COUNT(T1.userid) FROM users AS T1 INNER JOIN u2base AS T2 ON T1.userid = T2.userid WHERE T2.userid = 2462959 AND T1.u_gender = 'F'
movielens,What is the most distinct rated movie with a running time of 0?,,SELECT DISTINCT T1.movieid FROM movies AS T1 INNER JOIN u2base AS T2 ON T1.movieid = T2.movieid WHERE T1.runningtime = 0 AND T2.rating = ( SELECT MAX(rating) FROM u2base )
movielens,List the ids and ratings of each actors played in the movie with the id 1722327?,,"SELECT T1.actorid, T1.a_quality FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid WHERE T2.movieid = 1722327"
movielens,Which directors with the best quality directed the most films?,d_quality = 5 refers to direct the best,SELECT T1.directorid FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid WHERE T1.d_quality = 5 GROUP BY T1.directorid ORDER BY COUNT(T2.movieid) DESC LIMIT 1
movielens,How many drama movie with the rating of 3?,,SELECT COUNT(DISTINCT T2.movieid) FROM u2base AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T2.genre = 'drama' AND T1.rating = 3
movielens,How many of the movies rated 5 are rated by a user between the ages of 25 and 35?,,SELECT COUNT(T1.movieid) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating = 5 AND T2.age BETWEEN 25 AND 35
movielens,Please list all horror films that have a rating of 1.,,SELECT T1.movieid FROM u2base AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.rating = 1 AND T2.genre = 'Horror'
movielens,List the IDs of all the directors who worked on French films.,France is a country,SELECT T2.directorid FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'France'
movielens,List all of the user ids and ages who rated movies with the id 1695219?,,"SELECT T2.userid, T2.age FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.movieid = 1695219"
movielens,Which genre contains the greatest number of non-English films?,isEnglish = 'F' means non-English,SELECT T2.genre FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.isEnglish = 'F' GROUP BY T2.genre ORDER BY COUNT(T1.movieid) DESC LIMIT 1
movielens,List the cast and the director of the movie with the id 1949144.,,"SELECT T1.actorid, T2.directorid FROM movies2actors AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.movieid = 1949144"
movielens,"Among the actors who acted in UK movies, what percentage of actors received a rating of at least 3?",UK is a country,"SELECT CAST(SUM(IIF(T3.a_quality >= 3, 1, 0)) AS REAL) * 100 / COUNT(T1.movieid) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid WHERE T1.country = 'UK'"
movielens,What is the proportion of action movies directors who are called 'box office success paradox'?,'box office success paradox' means average revenue exceeds their quality; The proportion can be computed by [(avg_revenue > d_quality) / ()] * 100%,"SELECT CAST(SUM(IIF(T2.avg_revenue > T2.d_quality, 1, 0)) AS REAL) * 100 / COUNT(T1.movieid) FROM movies2directors AS T1 INNER JOIN directors AS T2 ON T1.directorid = T2.directorid WHERE T1.genre = 'Action'"
movielens,Please list the actor IDs whose movies have the newest published date.,"Year contains relative value, higher year value refers to newer date; Year = 4 refers to newest date",SELECT T1.actorid FROM movies2actors AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.year = 4
movielens,Who are cast members in an English movie which has a running time equal to 2? Please list their IDs.,isEnglish = 'T' means English movie,SELECT T2.actorid FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T1.runningtime = 2 AND T1.isEnglish = 'T'
movielens,Which actor has acted in at least 2 French films? Please list their IDs.,France is a country,SELECT T2.actorid FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'France' GROUP BY T2.actorid HAVING COUNT(T1.movieid) > 2
movielens,How many American movies have cast number more than 1?,USA is a country,SELECT COUNT(T2.actorid) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'USA' AND T2.cast_num > 1
movielens,Please list movie IDs which has the oldest publication date and the cast numbers are zero.,"Year contains relative value, higher year value refers to newer date; Year = 1 refer to oldest date",SELECT DISTINCT T1.movieid FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T1.year = 1 AND T2.cast_num = 0
movielens,How many actors have acted in both US or UK films?,US and UK are 2 countries,SELECT COUNT(T1.actorid) FROM movies2actors AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'USA' OR T2.country = 'UK'
movielens,How many directors with average revenue of 4 have made either action or adventure films?,,SELECT COUNT(T1.directorid) FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid WHERE T1.avg_revenue = 4 AND (T2.genre = 'Adventure' OR T2.genre = 'Action')
movielens,Please list director IDs who have the quality of at least 3 and have made at least 2 different genres of movies.,,SELECT T1.directorid FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid WHERE T1.d_quality >= 3 GROUP BY T1.directorid HAVING COUNT(T2.movieid) >= 2
movielens,How many American comedies are there?,USA is a country,SELECT COUNT(T1.movieid) FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'USA' AND T2.genre = 'comedy'
movielens,How many latest released dramas and action movies?,,"SELECT COUNT(T1.movieid) FROM movies2directors AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.year = 4 AND T1.genre IN ('Action', 'drama')"
movielens,What horror movies have a running time of at least 2? Please list movie IDs.,Higher value of running time means running time is longer,SELECT T1.movieid FROM movies2directors AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.runningtime >= 2 AND T1.genre = 'Horror'
movielens,Please calculate negative critical reception of American movies,"'negative critical reception' refers to percentage of movies with a rating of 1, which = [count(rating = 1) / count(all movies)] * 100% ","SELECT CAST(SUM(IIF(T1.rating = 1, 1, 0)) AS REAL) * 100 / COUNT(T1.movieid) FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'USA'"
movielens,What is the disparate number of the comedy films that got the 1 rating?,,SELECT COUNT(DISTINCT T1.movieid) FROM movies2directors AS T1 INNER JOIN u2base AS T2 ON T1.movieid = T2.movieid WHERE T2.rating = 1 AND T1.genre = 'comedy'
movielens,What's different average revenue status for director who directed the movie that got the most 1 ratings?,,SELECT DISTINCT T1.avg_revenue FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid WHERE T1.d_quality = 5
movielens,How many French movies got the highest ranking?,France is a country,SELECT COUNT(movieid) FROM movies WHERE country = 'France' AND movieid IN ( SELECT movieid FROM u2base WHERE rating = ( SELECT MAX(rating) FROM u2base ) )
movielens,List the movie that has been rated most by 25 years old users.,,SELECT T2.movieid FROM users AS T1 INNER JOIN u2base AS T2 ON T1.userid = T2.userid WHERE T1.age = 25 GROUP BY T2.movieid ORDER BY COUNT(T1.userid) DESC LIMIT 1
movielens,How many separate 35 year-old uesers have rated the movie from UK?,UK is a country,SELECT COUNT(DISTINCT T2.userid) FROM movies AS T1 INNER JOIN u2base AS T2 ON T1.movieid = T2.movieid INNER JOIN users AS T3 ON T2.userid = T3.userid WHERE T1.country = 'UK' AND T3.age = 35
movielens,List the user ids and ages who gave the rate 2 to the movie No. 2409051.,,"SELECT T1.userid, T1.age FROM users AS T1 INNER JOIN u2base AS T2 ON T1.userid = T2.userid WHERE T2.movieid = '2409051' AND T2.rating = 2"
movielens,Please give the ids of the oldest films that got the most ratings.,Films and movies share the same meaning; oldest film refers to the movie with year = 1,SELECT DISTINCT T1.movieid FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T1.rating = 5 AND T2.year = 1
movielens,Which different movies from France got the least ratings?,France is a country,SELECT DISTINCT T1.movieid FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'France' AND T1.rating = 1
movielens,How many female actors have been played a role in any of French or USA movies?,French and USA are two countries; Female actors mean that a_gender = 'F',"SELECT COUNT(T2.actorid) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T1.country IN ('France', 'USA')"
movielens,How many different actors have played a role in the highest rating movie?,highest rating of a movie is 5,SELECT COUNT(DISTINCT T2.actorid) FROM u2base AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T1.rating = 5
movielens,Which Crime film got the lowest average rating?,,SELECT T2.movieid FROM u2base AS T2 INNER JOIN movies2directors AS T3 ON T2.movieid = T3.movieid WHERE T3.genre = 'Crime' GROUP BY T2.movieid ORDER BY AVG(T2.rating) LIMIT 1
movielens,What's the ratio of gender in actors to actress in all the UK movies?,UK is a country; Male actors mean that a_gender = 'M'; Female actors mean that a_gender = 'F'; ratio; ratio of gender in actors = count(a_gender = 'M') / a_gender = 'F',"SELECT CAST(SUM(IIF(T3.a_gender = 'M', 1, 0)) AS REAL) / SUM(IIF(T3.a_gender = 'F', 1, 0)) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid WHERE T1.country = 'UK'"
movielens,How many 35-year-old female users gave the movie 1711133 a rating of 3?,Female users mean that u_gender = 'F',SELECT COUNT(T1.userid) FROM users AS T1 INNER JOIN u2base AS T2 ON T1.userid = T2.userid WHERE T2.rating = 3 AND T2.movieid = '1711133' AND T1.age = 35 AND T1.u_gender = 'F'
movielens,How many users have rated 1 each for the UK's second newest movies with a running time of 2?,"second newest movies refers to year = 2 since year in this database is a relative value, less is the newer",SELECT COUNT(T2.userid) FROM movies AS T1 INNER JOIN u2base AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'UK' AND T1.runningtime = 2 AND T2.rating = 1 AND T1.year = 2
movielens,How many unique directors with an average earnings of 2 and a quality of 3 have not made comedy films? List them.,,SELECT DISTINCT T1.directorid FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid WHERE T1.d_quality = 3 AND T1.avg_revenue = 2 AND T2.genre != 'Comedy'
movielens,Calculate the percentage of female actors and quality 2 who have appeared twice at the casting of the film 1672580.,Female actors mean that a_gender = 'F'; percentage can be computed by [cast_num = 2 AND a_quality = 2 in female) / (all female actors)] * 100%,"SELECT CAST(SUM(IIF(T2.cast_num = 2 AND T1.a_quality = 2, 1, 0)) AS REAL) * 100 / COUNT(T1.actorid) FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid WHERE T2.movieid = 1672580 AND T1.a_gender = 'F'"
movielens,How many of the worst actors are men and how many of the worst actors are women? Indicate your answer in ratio form.,The worst actors means a_quality = 0; Men and male share the same meaning; men actors refers to a_gender = 'M',"SELECT CAST(SUM(IIF(a_gender = 'M', 1, 0)) AS REAL) / SUM(IIF(a_gender = 'F', 1, 0)) FROM actors WHERE a_quality = 0"
movielens,Which actor has appeared in the most films?,,SELECT actorid FROM movies2actors GROUP BY actorid ORDER BY COUNT(movieid) DESC LIMIT 1
movielens,What is the most popular genre of film directed by directors?,Most popular genre indicates that the genre has the most number of movies,SELECT genre FROM movies2directors GROUP BY genre ORDER BY COUNT(movieid) DESC LIMIT 1
movielens,What are the most common film genres made by the worst directors?,"d_quality = 5 refers to the best directors, d_quality = 0 refers to the worst directors",SELECT T2.genre FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid WHERE T1.d_quality = 0 GROUP BY T2.genre ORDER BY COUNT(T2.movieid) DESC LIMIT 1
movielens,What non-English American film/s has received the lowest user ratings? Mention the movie's I.D.,USA is a country; non-English means isEnglish = 'F',SELECT T2.movieid FROM movies AS T1 INNER JOIN u2base AS T2 ON T1.movieid = T2.movieid WHERE T1.isEnglish = 'F' AND T1.country = 'USA' ORDER BY T2.rating LIMIT 1
movielens,What is the total average movie directed by the directors who's quality and revenue is 4?,,SELECT CAST(SUM(CASE WHEN T1.d_quality = 4 AND T1.avg_revenue = 4 THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.movieid) FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid
movielens,Which movies have received the greatest ratings from female users whose occupations fall within the category of 3?,Female users mean that u_gender = 'F',SELECT T2.movieid FROM users AS T1 INNER JOIN u2base AS T2 ON T1.userid = T2.userid INNER JOIN movies AS T3 ON T2.movieid = T3.movieid WHERE T1.u_gender = 'F' AND T1.occupation = 3 AND T2.rating = 5
movielens,"How many female actresses appeared in the movie 2312852, what country was it in, and what was it's running time?",female actresses mean that a_gender = 'F',"SELECT SUM(IIF(T1.a_gender = 'F', 1, 0)) , T3.country, T3.runningtime FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid INNER JOIN movies AS T3 ON T2.movieid = T3.movieid WHERE T2.movieid = 2312852 GROUP BY T3.country, T3.runningtime"
movielens,How many horror movies were made by the worst directors?,"d_quality = 5 refers to direct the best, d_quality = 0 refers to direct the worst",SELECT COUNT(T1.movieid) FROM movies2directors AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid INNER JOIN directors AS T3 ON T1.directorid = T3.directorid WHERE T1.genre = 'horror' AND T3.d_quality = 0
movielens,What are the genres of all the English-language foreign films having a runtime of two hours or less? List each one.,isEnglish = 'T' means films in English; Film and movie share the same meaning,SELECT T2.genre FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.runningtime <= 2 AND T1.isEnglish = 'T' AND T1.country = 'other'
movielens,"Among the English comedy movies produced in the UK, how many movies with a running time of 3 was rated the highest by users between the age 45-50? Indicate the movie names.",UK is a country,SELECT DISTINCT T1.movieid FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid INNER JOIN u2base AS T3 ON T1.movieid = T3.movieid INNER JOIN users AS T4 ON T3.userid = T4.userid WHERE T1.country = 'UK' AND T2.genre = 'Comedy' AND T1.runningtime = 3 AND T3.rating = 5 AND T4.age BETWEEN 45 AND 50 AND T1.isEnglish = 'T'
movielens,What is the percentage difference of English and non-English-language crime movies in other countries in year 3?,non-English-language refers to isEnglish = 'F'; The percentage difference can be computed by [count(isEnglish = 'T' in movies) - count(isEnglish = 'F' in movies) / (all movies)] * 100%,"SELECT CAST(SUM(IIF(T1.isEnglish = 'T', 1, 0)) - SUM(IIF(T1.isEnglish = 'F', 1, 0)) AS REAL) * 100 / COUNT(T1.movieid) FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'other' AND T1.year = 3"
movielens,What is the total amount male and female actors who were casted in movie ID 1684910 and what is the proportion between the highest quality actors against the worst quality of actors? Indicate your answer in percentage. List the the director as well as the genre.,"Female actors mean that a_gender = 'F'; Male actors mean that a_gender = 'M'; a_quality = 5 refers to act the best, a_quality = 0 refers to act the worst","SELECT SUM(IIF(a_gender = 'M', 1, 0)) , SUM(IIF(a_gender = 'F', 1, 0)) , CAST(SUM(IIF(a_quality = 5, 1, 0)) AS REAL) * 100 / COUNT(*) , CAST(SUM(IIF(a_quality = 0, 1, 0)) AS REAL) * 100 / COUNT(*), ( SELECT directorid FROM movies2directors WHERE movieid = 1684910 ) , ( SELECT genre FROM movies2directors WHERE movieid = 1684910 ) FROM actors WHERE actorid IN ( SELECT actorid FROM movies2actors WHERE movieid = 1684910 )"
superstore,Please list the names of all the products ordered in order CA-2011-112326 in superstores in the center.,"names of all the products refers to ""Product Name""; order CA-2011-112326 refers to ""Order ID"" = 'CA-2011-112326'; in the center refers to Region = 'Central';",SELECT DISTINCT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Order ID` = 'CA-2011-112326'
superstore,"Among all the orders made by Aimee Bixby, what was the longest shipment time?","made by Aimee Bixby refers to ""Customer Name"" = 'Aimee Bixby'; longest shipment time refers to MAX(SUM(SUTRACT(julianday(""Ship Date""), julianday(""Order Date"")), 1))","SELECT MAX(strftime('%J', `Ship Date`) - strftime('%J', `Order Date`)) AS longestTimeDays FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Customer Name` = 'Aimee Bixby'"
superstore,"Among all the orders made by Aimee Bixby, how many of them chose the slowest delivery speed?","made by Aimee Bixby refers to ""Customer Name"" = 'Aimee Bixby'; the slowest delivery speed refers to ""Ship Mode"" = 'Standard Class';",SELECT COUNT(DISTINCT T2.`Order ID`) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Customer Name` = 'Aimee Bixby' AND T2.`Ship Mode` = 'Standard Class'
superstore,How many orders has Aimee Bixby made?,"Aimee Bixby made refers to ""Customer Name"" = 'Aimee Bixby';",SELECT COUNT(DISTINCT T2.`Order ID`) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Customer Name` = 'Aimee Bixby'
superstore,Please list the IDs of the orders made by Aimee Bixby with more than 3 kinds of products ordered.,"made by Aimee Bixby refers to ""Customer Name"" = 'Aimee Bixby'; with more than 3 kinds of products ordered refers to count(""Product ID"") > 3;",SELECT DISTINCT T2.`Order ID` FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Customer Name` = 'Aimee Bixby' GROUP BY T2.`Product ID` HAVING COUNT(T2.`Product ID`) > 3
superstore,"Among the orders made by Aimee Bixby, how many of them included at least one kind of product under the category ""Furniture""?","made by Aimee Bixby refers to ""Customer Name"" = 'Aimee Bixby';",SELECT COUNT(DISTINCT T2.`Order ID`) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T3.Category = 'Furniture' AND T1.`Customer Name` = 'Aimee Bixby'
superstore,Please list the names of all the products ordered by Aimee Bixby in 2016.,"ordered by Aimee Bixby refers to ""Customer Name"" = 'Aimee Bixby'; ordered n 2016 refers to strftime('%Y', ""Order Date"") = '2016';","SELECT DISTINCT T3.`Product Name` FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Aimee Bixby' AND STRFTIME('%Y', T2.`Ship Date`) = '2016'"
superstore,"What is the total quantity of ""Telescoping Adjustable Floor Lamp"" ordered from central superstores?","""Telescoping Adjustable Floor Lamp"" is a ""Product Name""; from central superstores refers to Region = 'Central';",SELECT SUM(T1.Quantity) FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'Telescoping Adjustable Floor Lamp'
superstore,"Please list the names of all the customers who had ordered the product ""Telescoping Adjustable Floor Lamp"".","""Telescoping Adjustable Floor Lamp"" is a product name; names of all the customers refers to ""Customer Name""",SELECT DISTINCT T1.`Customer Name` FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T3.`Product Name` = 'Telescoping Adjustable Floor Lamp'
superstore,"Among the customers who have ordered the product ""Telescoping Adjustable Floor Lamp"", how many of them are consumers?","""Telescoping Adjustable Floor Lamp"" is a ""Product Name""; consumers refers to Segment = 'Consumer';",SELECT COUNT(DISTINCT T1.`Customer Name`) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T3.`Product Name` = 'Telescoping Adjustable Floor Lamp' AND T1.Segment = 'Consumer'
superstore,What was the quantity of Xerox 1952 ordered by Aimee Bixby on 2014/9/10?,"Xerox 1952 is a ""Product Name""; ordered by Aimee Bixby refers to ""Customer Name"" = 'Aimee Bixby'; on 2014/9/10 refers to ""Order Date"" = date('2014-09-10');",SELECT SUM(T2.Quantity) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Aimee Bixby' AND T3.`Product Name` = 'Xerox 1952' AND T2.`Order Date` = '2014-09-10'
superstore,For how many times has Aimee Bixby ordered the product Xerox 1952?,"Xerox 1952 is a ""Product Name""; Aimee Bixby ordered refers to ""Customer Name"" = 'Aimee Bixby';",SELECT COUNT(DISTINCT T2.`Order ID`) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Aimee Bixby' AND T3.`Product Name` = 'Xerox 1952'
superstore,What was the original price of Xerox 1952 ordered by Aimee Bixby on 2014/9/10?,"Xerox 1952 is a ""Product Name""; ordered by Aimee Bixby refers to ""Customer Name"" = 'Aimee Bixby'; on 2014/9/10 refers to ""Order Date"" = date('2014-09-10'); original price refers to DIVIDE(Sales, SUTRACT(1, discount))",SELECT DISTINCT T2.Sales / (1 - T2.Discount) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Aimee Bixby' AND T3.`Product Name` = 'Xerox 1952' AND T2.`Order Date` = '2014-09-10'
superstore,What was the total cost of Xerox 1952 ordered by Aimee Bixby on 2014/9/10?,"Xerox 1952 is a ""Product Name""; ordered by Aimee Bixby refers to ""Customer Name"" = 'Aimee Bixby'; on 2014/9/10 refers to ""Order Date"" = date('2014-09-10'); total cost refers to SUTRACT(MULTIPLY(DIVIDE(Sales, SUTRACT(1, discount)), Quantity), Profit)",SELECT DISTINCT (T2.Sales / (1 - T2.discount)) * T2.Quantity - Profit FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Aimee Bixby' AND T3.`Product Name` = 'Xerox 1952' AND T2.`Order Date` = '2014-09-10'
superstore,How many art products were ordered in 2013 in the east superstore?,"ordered in 2013 refers to strftime('%Y', ""Order Date"") = '2013'; art products refers to ""Sub-Category"" = 'Art'","SELECT COUNT(DISTINCT T1.`Product ID`) FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Sub-Category` = 'Art' AND T1.Region = 'East' AND STRFTIME('%Y', T1.`Order Date`) = '2013'"
superstore,Who is the customer who purchased the largest total cost of products in a single order?,"largest total cost refers to MAX(SUTRACT(MULTIPLY(DIVIDE(Sales, SUTRACT(1, discount)), Quantity), Profit))","SELECT T2.`Customer Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` GROUP BY T1.`Order ID`, T2.`Customer Name` ORDER BY SUM((T1.Sales / (1 - T1.Discount)) * T1.Quantity - T1.Profit) DESC LIMIT 1"
superstore,What is the name of the product that has the highest original price?,"has the highest original price refers to MAX(DIVIDE(Sales, SUTRACT(1, discount))); name of the product refers to ""Product Name""",SELECT T2.`Product Name` FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` ORDER BY (T1.Sales / (1 - T1.Discount)) DESC LIMIT 1
superstore,What is the name of the product that was ordered recently by Darren Powers?,"Darren Powers is the ""Customer Name""; name of the product refers to ""Product Name""; recently refers to MAX(""Order Date"")",SELECT T3.`Product Name` FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Darren Powers' ORDER BY T2.`Order Date` DESC LIMIT 1
superstore,How many quantities of Advantus plastic paper clips were ordered overall?,"Advantus plastic paper clips is the ""Product Name"";",SELECT SUM(T1.Quantity) FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'Advantus Plastic Paper Clips'
superstore,Which order of Logitech G600 MMO Gaming Mouse has the highest total cost?,"Logitech G600 MMO Gaming Mouse refers to ""Product Name""; highest total cost refers to MAX(SUTRACT(MULTIPLY(DIVIDE(Sales, SUTRACT(1, discount)), Quantity), Profit))",SELECT T1.`Order ID` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'Logitech G600 MMO Gaming Mouse' GROUP BY T1.`Order ID` ORDER BY SUM((T1.Sales / (1 - T1.Discount)) * T1.Quantity - T1.Profit) DESC LIMIT 1
superstore,What are the names of the products that were ordered by Alejandro Grove?,"ordered by Alejandro Grove refers to ""Customer Name"" = 'Alejandro Grove'; names of the products refers to ""Product Name""",SELECT DISTINCT T3.`Product Name` FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T2.`Customer Name` = 'Alejandro Grove'
superstore,How many customers in Chicago ordered at least 10 Cardinal EasyOpen D-Ring Binders in a single order?,"at least 10 goods refers to Quantity > = 14; Cardinal EasyOpen D-Ring Binders refers to ""Product Name""; customers in Chicago refers to City = 'Chicago'",SELECT COUNT(DISTINCT T1.`Customer ID`) FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T3.`Product Name` = 'Cardinal EasyOpen D-Ring Binders' AND T2.City = 'Chicago' AND T1.Quantity > 10
superstore,"What are the names of the products with a profit of no less than 1,000 in one single order?","profit of no less than 1,000 refers to Profit > = 1000; names of the products refers to ""Product Name""",SELECT DISTINCT T2.`Product Name` FROM west_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.Profit > 1000
superstore,Name 10 products that were shipped first class from the East region.,"shipped first class refers to ""Ship Mode"" = 'First Class'; Region = 'East'",SELECT T2.`Product Name` FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Ship Mode` = 'First Class' AND T2.Region = 'East' LIMIT 10
superstore,List the products ordered by Becky Martin around the Central region.,"ordered by Becky Martin refers to ""Customer Name"" = 'Becky Martin'; Region = 'Central'; products refers to ""Product Name""",SELECT DISTINCT T3.`Product Name` FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Becky Martin' AND T3.Region = 'Central'
superstore,List 5 customers in the West region who had their item shipped 'Second Class.',"shipped 'Second Class.' refers to ""Ship Mode"" = 'Second Class'; customers refers to ""Customer Name""; Region = 'West'",SELECT DISTINCT T2.`Customer Name` FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.Region = 'West' AND T1.`Ship Mode` = 'Second Class' LIMIT 5
superstore,Add the total profit of Patrick Gardner in the Central region.,"Patrick Gardner is the ""Customer Name""; Region = 'Central'",SELECT SUM(T2.Profit) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Customer Name` = 'Patrick Gardner' AND T1.Region = 'Central'
superstore,Which item was shipped on 3/4/2013 and scheduled for same day delivery in the South region?,"shipped on 3/4/2013 refers to ""Order Date"" = date('2013-03-04'); same day delivery refers to ""Ship Mode"" = 'Same Day'; item refers to ""Product Name""",SELECT T2.`Product Name` FROM south_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Ship Date` = '2013-03-04' AND T2.Region = 'South' AND T1.`Order Date` = '2013-03-04'
superstore,"What is the total sales of 'Avery Hi-Liter EverBold Pen Style Fluorescent Highlighters, 4/Pack' in the Central region?","'Avery Hi-Liter EverBold Pen Style Fluorescent Highlighters, 4/Pack' is the ""Product Name"";","SELECT SUM(T1.Sales) FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'Avery Hi-Liter EverBold Pen Style Fluorescent Highlighters, 4/Pack' AND T2.Region = 'Central'"
superstore,Name the item ordered by Jonathan Doherty with the highest quantity in the East region.,"Jonathan Doherty is the ""Customer Name""; highest quantity refers to MAX(Quantity); Region = 'East'",SELECT T3.`Product Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T2.`Customer Name` = 'Jonathan Doherty' AND T2.Region = 'East' ORDER BY T1.Quantity DESC LIMIT 1
superstore,How much is the total quantity of items from the East region shipped on 3/25/2015? Name the products.,"shipped on 3/25/2015 refers to ""Ship Date"" = Date('2015-03-25');","SELECT SUM(T1.Quantity), T2.`Product Name` FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Ship Date` = '2015-03-25' AND T2.Region = 'East'"
superstore,"Which customer ordered 'Global High-Back Leather Tilter, Burgundy' on 10/13/2013 in the East region?","'Global High-Back Leather Tilter, Burgundy' is the ""Product Name""; on 10/13/2013 refers to ""Order Date"" = Date('2013-10-13'); Region = 'East'","SELECT DISTINCT T2.`Customer Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T3.`Product Name` = 'Global High-Back Leather Tilter, Burgundy' AND T1.`Order Date` = '2013-10-13' AND T1.Region = 'East'"
superstore,What category does the item ordered by Katherine Murray on 11/4/2018 in the South region belong to?,"ordered by Katherine Murray refers to ""Customer Name"" = 'Katherine Murray'; on 11/4/2018 refers to ""Order Date"" = Date('2018-11-04');",SELECT DISTINCT T3.Category FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T2.`Customer Name` = 'Katherine Murray' AND T1.`Order Date` = '2018-11-04' AND T2.Region = 'South'
superstore,What percentage do items under the category of 'Furniture' make up the total number of items ordered that are shipped as standard in the West region?,"shipped as standard refers to ""Ship Mode"" = 'Standard Class'; Region = 'West'; percentage refers to DIVIDE(SUM(Quantity where Category = 'Furniture'), SUM(Quantity)) * 1.0",SELECT CAST(SUM(CASE  WHEN T2.Category = 'Furniture' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(T1.Quantity) FROM west_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Region = 'West' AND T1.`Ship Mode` = 'Standard Class'
superstore,What is the ship date of the order by the customer named Ann Chong in the central region?,"Ann Chong' is the ""Customer Name""; Region = 'Central'",SELECT T2.`Ship Date` FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Customer Name` = 'Ann Chong' AND T1.Region = 'Central'
superstore,Give the customer segment from the West region that orders the order ID CA-2011-108189.,Region = 'West',SELECT DISTINCT T2.Segment FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.Region = 'West' AND T1.`Order ID` = 'CA-2011-108189'
superstore,What are the total sales of the accumulated orders of Hon Valutask Swivel Chairs in the West region?,"'Hon Valutask Swivel Chairs' is the ""Product Name""",SELECT SUM(T1.Sales) FROM west_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'Hon Valutask Swivel Chairs' AND T1.Region = 'West'
superstore,Provide the order ID of Frank Olsen of the South region.,"Frank Olsen' is the ""Customer Name""; Region = 'South'",SELECT T1.`Order ID` FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T2.Region = 'South' AND T2.`Customer Name` = 'Frank Olsen'
superstore,"What product was ordered in the Central region on April 26, 2018, and shipped by April 27, 2018?","on April 26, 2018 refers to ""Order Date"" = date('2018-04-26'); shipped by April 27, 2018 refers to ""Ship Date"" = date('2018-04-27');",SELECT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Order Date` = '2018-04-26' AND T1.`Ship Date` = '2018-04-27' AND T2.Region = 'Central'
superstore,From which city and state does the customer that bought the product with the highest sales?,highest sales refers to max(Sales),"SELECT T5.City, T5.State FROM west_superstore AS T1 INNER JOIN east_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN central_superstore AS T3 ON T3.`Customer ID` = T2.`Customer ID` INNER JOIN south_superstore AS T4 ON T4.`Customer ID` = T3.`Customer ID` INNER JOIN people AS T5 ON T5.`Customer ID` = T4.`Customer ID` ORDER BY T2.Sales DESC LIMIT 1"
superstore,Who is the customer from the East region that purchased the order with the highest profit?,highest profit refers to MAX(profit); Region = 'East',SELECT T2.`Customer Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.Region = 'East' ORDER BY T1.Profit DESC LIMIT 1
superstore,"Among the customers from Chicago, Illinois, what is the highest quantity of products bought in a single order?",from Chicago refers to City = 'Chicago'; Illinois refers to State = 'Illinois'; highest quantity refers to max(Quantity),SELECT T1.Quantity FROM west_superstore AS T1 INNER JOIN east_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN central_superstore AS T3 ON T3.`Customer ID` = T2.`Customer ID` INNER JOIN south_superstore AS T4 ON T4.`Customer ID` = T3.`Customer ID` INNER JOIN people AS T5 ON T5.`Customer ID` = T4.`Customer ID` WHERE T5.City = 'Chicago' AND T5.State = 'Illinois' ORDER BY T1.Quantity DESC LIMIT 1
superstore,What are the order date and product name of the order ID CA-2011-137274 from the Central region?,,"SELECT T1.`Order Date`, T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Order ID` = 'CA-2011-137274' AND T2.Region = 'Central'"
superstore,List down the customers that purchased the product named Xerox 23 in the South region.,"product named Xerox 23 refers to ""Product Name"" = 'Xerox 23'; customers refers to ""Customer Name""",SELECT DISTINCT T2.`Customer Name` FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T1.Region = 'South' AND T3.`Product Name` = 'Xerox 23'
superstore,"Among the products under the office supplies category, what is the product that made the highest sales in the Central region?",made the highest sales refers to MAX(Sales),SELECT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Category = 'Office Supplies' AND T2.Region = 'Central' ORDER BY T1.Sales DESC LIMIT 1
superstore,Who is the customer from the West region that received the highest discount?,"received the highest discount refers to MAX(discount); customer refers to ""Customer Name""",SELECT T2.`Customer Name` FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.Region = 'West' ORDER BY T1.Discount DESC LIMIT 1
superstore,Provide the names of the products with a profit greater than 98% of the average profit of all products in the East region.,"names of the products refers to ""Product Name"";  profit greater than 98% of the average profit refers to Profit > MULTIPLY(AVG(Profit), 0.98)",SELECT DISTINCT T2.`Product Name` FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Region = 'East' AND T1.Profit > ( SELECT AVG(Profit) * 0.98 FROM east_superstore )
superstore,Name the customers from the Eastern region whose orders cost above 80000.,"cost above 80000 refers to SUTRACT(MULTIPLY(DIVIDE(Sales, SUTRACT(1, discount)), Quantity), Profit) > 80000",SELECT DISTINCT T2.`Customer Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.Region = 'East' AND T1.Sales / (1 - T1.Discount) * T1.Quantity - T1.Profit > 80000
superstore,How many orders were made by Maxwell Schwartz in 2015?,"Maxwell Schwartz' is the ""Customer Name""; in 2015 refers to strftime('%Y', ""Order Date"") = '2015';","SELECT COUNT(DISTINCT T1.`Order ID`) FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T2.`Customer Name` = 'Maxwell Schwartz' AND STRFTIME('%Y', T1.`Order Date`) = '2015'"
superstore,Who ordered the Bush Mission Pointe Library in the Central Region?,"Bush Mission Pointe Library' is the ""Product Name"";",SELECT DISTINCT T2.`Customer Name` FROM central_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T3.`Product Name` = 'Bush Mission Pointe Library' AND T3.Region = 'Central'
superstore,Calculate the total profit by Cisco SPA301 for all regions.,"Cisco SPA301' is the ""Product Name""; all regions refers to central_superstore, south_superstore, west_superstore, east_superstore",SELECT SUM(T1.Profit) + SUM(T2.Profit) + SUM(T3.Profit) + SUM(T4.Profit) AS totalProfit FROM west_superstore AS T1 INNER JOIN east_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN central_superstore AS T3 ON T3.`Customer ID` = T2.`Customer ID` INNER JOIN south_superstore AS T4 ON T4.`Customer ID` = T3.`Customer ID` INNER JOIN product AS T5 ON T5.`Product ID` = T4.`Product ID` WHERE T5.`Product Name` = 'Cisco SPA301'
superstore,List the products that were ordered by Anne McFarland from the Western store.,"Anne McFarland' is the ""Customer Name""; Western store refers to west_superstore; products refers to ""Product Name""",SELECT DISTINCT T3.`Product Name` FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T2.`Customer Name` = 'Anne McFarland'
superstore,List the products ordered by customers in Coachella.,"in Coachella refers to City = 'Coachella'; products refers to ""Product Name""",SELECT DISTINCT T3.`Product Name` FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T2.City = 'Coachella'
superstore,Compare the numbers of orders between the Eastern and Western stores in 2015.,"in 2015 refers to strftime('%Y', ""Order Date"") = '2015'; Eastern store refers to east_superstore; Western store refers west_superstore;","SELECT east, west FROM ( SELECT COUNT(`Order ID`) AS east , ( SELECT COUNT(`Order ID`) FROM west_superstore WHERE `Order Date` LIKE '2015%' ) AS west FROM east_superstore WHERE `Order Date` LIKE '2015%' )"
superstore,List the products ordered by Matt Abelman from the Western store in 2013.,"ordered by Matt Abelman refers to ""Customer Name"" = 'Matt Abelman'; in 2013 refers to ""Order Date"" like '2013%'","SELECT DISTINCT T3.`Product Name` FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T2.`Customer Name` = 'Matt Abelman' AND STRFTIME('%Y', T1.`Order Date`) = '2013'"
superstore,Calculate the total cost of the orders by Brad Thomas in 2016.,"Brad Thomas is the ""Customer Name""; in 2016 refers to strftime('%Y', ""Order Date"") = '2016'; total cost refers to SUM(SUTRACT(MULTIPLY(DIVIDE(Sales, SUTRACT(1, discount)), Quantity), Profit))","SELECT SUM((T1.Sales / (1 - T1.Discount)) * T1.Quantity - T1.Profit) AS cost FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T1.`Product ID` = T3.`Product ID` AND T1.Region = T3.Region WHERE T1.Region = 'East' AND T2.`Customer Name` = 'Brad Thomas' AND strftime('%Y', T1.`Order Date`) = '2016'"
superstore,"Provide the names, cities, and countries of the customers who ordered the Plantronics single ear headset.","Plantronics Single Ear Headset' is the ""Product Name""; name refers to ""Customer Name"";","SELECT DISTINCT T2.`Customer Name`, T2.City, T2.Country FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T3.`Product Name` = 'Plantronics Single Ear Headset'"
superstore,Provide the shipping dates and products of the orders by Gene Hale.,"Gene Hale' refers to ""Customer Name""; shipping date refers to ""Ship Date""; products refers to ""Product Name""","SELECT DISTINCT T2.`Ship Date`, T3.`Product Name` FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Gene Hale'"
superstore,How many orders in the south superstore with the fastest delivery are items of furniture?,fastest delivery refers to Ship Mode = 'First Class'; furniture refers to Category = 'Furniture',SELECT COUNT(T1.`Order ID`) FROM south_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Ship Mode` = 'First Class' AND T2.Category = 'Furniture'
superstore,How many office supply orders were made by Cindy Stewart in the south superstore?,office supply refers to Category = 'Office Supplies',SELECT COUNT(*) FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T3.Category = 'Office Supplies' AND T2.`Customer Name` = 'Cindy Stewart'
superstore,What product category got the highest profit in the south superstore?,highest profit refers to MAX(Profit),SELECT T2.Category FROM south_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` ORDER BY T1.Profit DESC LIMIT 1
superstore,List the name of all products that Cindy Stewart ordered in the east superstore.,name of all products refers to Product Name; Cindy Stewart is the Customer Name;,SELECT T3.`Product Name` FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T2.`Customer Name` = 'Cindy Stewart'
superstore,List the name of all products in the west superstore that customers chose for same-day shipment in the year 2013.,"name of all products refers to Product Name; same-day shipment refers to ""Ship Mode"" = 'Same Day'; year 2013 refers to ""Ship Date"" BETWEEN '2013-01-01' AND '2013-12-31'",SELECT T2.`Product Name` FROM west_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Ship Mode` = 'Same Day' AND T1.`Ship Date` LIKE '2013%'
superstore,What product category that Sam Craven ordered from the central and east superstore?,,SELECT DISTINCT T3.Category FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` LEFT JOIN central_superstore AS T4 ON T3.`Product ID` = T4.`Product ID` WHERE T2.`Customer Name` = 'Sam Craven'
superstore,"What is the total quantity that Cindy Stewart order ""Lexmark X 9575 Professional All-in-One Color Printer"" in the south superstore?","Lexmark X 9575 Professional All-in-One Color Printer' is the ""Product Name""",SELECT SUM(T1.Quantity) FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T2.`Customer Name` = 'Cindy Stewart' AND T3.`Product Name` = 'Lexmark X 9575 Professional All-in-One Color Printer'
superstore,List the name of all the products with order quantities greater than or equal to 10 in the central superstore that has been shipped by the slowest delivery method.,"name of all the products refers to Product Name; order quantities greater than or equal to 10 refers to COUNT(""Order ID"") > = 10; slowest delivery refers to ""Ship Mode"" = 'Standard Class'",SELECT DISTINCT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Ship Mode` = 'Standard Class' AND T1.Quantity >= 10
superstore,What product category got the least sales in the west superstore?,least sales refers to Sales = MIN(Sales),SELECT T2.Category FROM west_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` ORDER BY T1.Sales LIMIT 1
superstore,"What is the total profit of ""Memorex Froggy Flash Drive 8 GB in south superstore?","""Memorix Froggy Flash Drive 8 GB"" is the ""Product Name""",SELECT SUM(T1.Profit) FROM south_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` GROUP BY T2.`Product Name` = 'Memorix Froggy Flash Drive 8 GB'
superstore,"What is the total sales of furniture products in the east superstore in the year 2016.
","furniture products refers to Category = 'Furnitures'; in the year 2016 refers to ""Order Date"" BETWEEN '2016-01-01' AND '2016-12-31'","SELECT SUM(T1.Sales) FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE STRFTIME('%Y', T1.`Order Date`) = '2016' AND T2.Category = 'Furniture'"
superstore,"Calculate the average sales of """"Sharp AL-1530CS Digital Copier in the east and the west superstore.","Sharp AL-1530CS Digital Copier' is the ""Product Name""; average sales = AVG(Sales)",SELECT AVG(T1.Sales) FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T3.`Product Name` = 'Sharp AL-1530CS Digital Copier'
superstore,Calculate the percentage of ordered office supplies products in the central and the south superstore.,"office supplies products refers to Category = 'Office Supplies'; central refers to Region = 'Central'; south superstore refers to Region = 'South'; percentage = divide(SUM(Product ID where Category = 'Office Supplies'), count(Product ID)) * 100 where Region = 'Central' OR Region = 'South'",SELECT CAST(SUM(CASE  WHEN T3.Category = 'Office Supplies' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.Category) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID`
superstore,What is the ratio between customers who live in Texas and customers who live in Indiana?,"live in Texas refers to State = 'Texas'; live in Indiana refers to State = 'Indiana'; Ratio = divide(sum(State = 'Texas'), sum(State = 'Indiana'))",SELECT CAST(SUM(CASE  WHEN State = 'Texas' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE  WHEN State = 'Indiana' THEN 1 ELSE 0 END) FROM people
superstore,"Among the orders in Central superstore, which art product were ordered the most?",art product refers to Sub-Category = 'Art'; the most refers to max(order_number),SELECT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Sub-Category` = 'Art' GROUP BY T2.`Product Name` ORDER BY COUNT(T2.`Product ID`) DESC LIMIT 1
superstore,"Among the customers in South superstore, which customers ordered more than 3 times in 2015? State the name of the customers.","name of the customers refers to Customer_Name; in 2015 refers to ""Order Date"" BETWEEN '2015-01-01' AND '2015-12-31'; more than 3 times refers to count(Order_ID) > 3","SELECT DISTINCT T2.`Customer Name` FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE STRFTIME('%Y', T1.`Order Date`) = '2015' GROUP BY T2.`Customer Name` HAVING COUNT(T2.`Customer Name`) > 3"
superstore,State the highest profit made by Anna Chung's orders in the Central Superstore.,highest profit refers to max(Profit),SELECT MAX(T2.Profit) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Customer Name` = 'Anna Chung'
superstore,How many orders were made by Corey Roper in 2015?,,"SELECT COUNT(T2.`Customer ID`) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Customer Name` = 'Corey Roper' AND STRFTIME('%Y', T2.`Ship Date`) = '2015'"
superstore,Calculate the difference between the total sales in the East superstore and the total sales in the West superstore.,"East superstore refers to Region = 'East'; West superstore refers to Region = 'West'; difference = subtract(sum(Sales) when Region = 'East', sum(Sales) when Region = 'West')",SELECT SUM(T1.Sales) - SUM(T2.Sales) AS difference FROM east_superstore AS T1 INNER JOIN west_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID`
superstore,What are the names of the ordered products that have profit deficiency in central superstore?,names of the ordered products refers to Product Name; deficiency refers to profit value is negative; profit > 0,SELECT DISTINCT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Region = 'Central' AND T1.Profit < 0
superstore,"In west superstore, what is the name and the shipping mode of the product that was ordered with the shortest shipment time?","name refers to ""Product Name""; shipping mode refers to Ship Mode; shortest shipment time refers to min(subtract(Ship Date, Order Date))","SELECT DISTINCT T2.`Product Name`, T1.`Ship Mode` FROM west_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Region = 'West' ORDER BY T1.`Ship Date` - T1.`Order Date` LIMIT 1"
superstore,How many orders of O'Sullivan Plantations 2-Door Library in Landvery Oak in central superstore were shipped through the shipping mode with the fastest delivery speed?,"'O'Sullivan Cherrywood Estates Traditional Bookcase' is the ""Product Name""; shipping mode with the fastest delivery speed refers to ""Ship Mode"" = 'First Class'",SELECT COUNT(DISTINCT T1.`Order ID`) FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'O''Sullivan Plantations 2-Door Library in Landvery Oak' AND T2.Region = 'Central' AND T1.`Ship Mode` = 'First Class'
superstore,What is the name of the corporate customer from Rhode Island who had the highest number of orders in 2016 from the east superstore?,"corporate customer refers to Segment = 'Corporate'; Rhode Island refers to State = 'Rhode Island'; in 2016 refers to ""Order Date"" BETWEEN '2016-01-01' AND '2016-12-31'; east superstore refers to Region = 'East'; highest number of orders refers to max(order_number); name of corporate customer refers to ""Customer Name""","SELECT T2.`Customer Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T2.Segment = 'Corporate' AND T2.State = 'Rhode Island' AND T2.Region = 'East' AND STRFTIME('%Y', T1.`Order Date`) = '2016' GROUP BY T2.`Customer Name` ORDER BY COUNT(T2.`Customer Name`) DESC LIMIT 1"
superstore,"Among the orders with sales value of no less than 5,000 in west superstore, how many were bought by the customers in California?","customers in California refers to State = 'California'; orders with sales value of no less than 5,000 refers to Sales > = 5,000",SELECT COUNT(DISTINCT T1.`Order ID`) FROM west_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` INNER JOIN people AS T3 ON T3.`Customer ID` = T1.`Customer ID` WHERE T1.Sales > 5000 AND T3.State = 'California' AND T2.Region = 'West'
superstore,In which segment does the customer who purchased the product from the east superstore with the highest original price belong?,"highest original price refers to max(divide(Sales, subtract(1, Discount)))",SELECT T2.Segment FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T1.Region = 'East' ORDER BY (T1.Sales / (1 - T1.Discount)) DESC LIMIT 1
superstore,What is the shipment duration for order number CA-2011-134103?,"shipment duration = subtract(""Ship Date"", ""Order Date""); order number CA-2011-134103 refers to ""Order ID"" = 'CA-2011-134103'","SELECT DISTINCT strftime('%J', `Ship Date`) - strftime('%J', `Order Date`) AS duration FROM central_superstore WHERE `Order ID` = 'CA-2011-134103'"
superstore,How many orders with a quantity greater than 5 have been shipped by the fastest delivery method?,orders with a quantity greater than 5 refers to Quantity > 5; shipped by the fastest delivery method refers to Ship Mode = 'First Class',SELECT COUNT(DISTINCT `Order ID`) FROM central_superstore WHERE Quantity > 5 AND `Ship Mode` = 'First Class'
superstore,Please list any three orders that caused a loss to the company.,caused a loss to the company refers to Profit < 0,SELECT `Order ID` FROM central_superstore WHERE Profit < 0 LIMIT 3
superstore,Which product did Phillina Ober buy?,"product refers to ""Product Name""",SELECT DISTINCT T3.`Product Name` FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Phillina Ober'
superstore,"Who was the customer in the South Region superstore who bought the most “Hon Multipurpose Stacking Arm Chairs""?","customer refers to ""Customer Name""; “Hon Multipurpose Stacking Arm Chairs"" is the ""Product Name"";",SELECT T2.`Customer Name` FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T3.`Product Name` = 'Hon Multipurpose Stacking Arm Chairs' GROUP BY T2.`Customer Name` ORDER BY COUNT(T2.`Customer Name`) DESC LIMIT 1
superstore,"What is the profit from selling the ""O'Sullivan Living Dimensions 2-Shelf Bookcases""?","""O'Sullivan Living Dimensions 2-Shelf Bookcases"" refers to ""Product Name""",SELECT DISTINCT T1.Profit FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'O''Sullivan Living Dimensions 2-Shelf Bookcases'
superstore,"How many of the ""Hon Pagoda Stacking Chairs"" have been sold in total in the west superstore?","Hon Pagoda Stacking Chairs' is the ""Product Name""; west superstore refers to Region = 'West'",SELECT SUM(T1.Quantity) FROM west_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'Hon Pagoda Stacking Chairs'
superstore,How many orders purchased by Aaron Bergman have been delivered with the slowest shipping speed?,"slowest shipping speed refers to ""Ship Mode"" = 'Standard Class'",SELECT COUNT(*) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Customer Name` = 'Aaron Bergman' AND T2.`Ship Mode` = 'Standard Class'
superstore,"What is the original price of the ""Black Avery Flip-Chart Easel Binder""?","""Black Avery Flip-Chart Easel Binder"" is the ""Product Name""; original price = divide(Sales, subtract(1, Discount))",SELECT T1.Sales / (1 - T1.Discount) FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'Blackstonian Pencils'
superstore,What is the name of the product that Aimee Bixby bought?,"name of the product refers to ""Product Name""",SELECT DISTINCT T3.`Product Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T2.`Customer Name` = 'Aimee Bixby'
superstore,"Indicate the profit of product Sauder Camden County Barrister Bookcase, Planked Cherry Finish.","Sauder Camden County Barrister Bookcase, Planked Cherry Finish' refers to ""Product Name""","SELECT DISTINCT T1.Profit FROM south_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'Sauder Camden County Barrister Bookcase, Planked Cherry Finish'"
superstore,How many furniture products had been shipped by standard class in the East superstore?,"furniture products refers to Category = 'Furniture'; shipped by standard class refers to ""Ship Mode"" = 'Standard Class'",SELECT COUNT(T2.Category) FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Ship Mode` = 'Standard Class'
superstore,"What is the highest profit order in the East superstore of customers from Houston, Texas?","highest profit refers to max(Profit); Houston, Texas refers to City = 'Houston' and State = 'Texas'",SELECT T1.`Order ID` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T2.City = 'Houston' AND T2.State = 'Texas' ORDER BY T1.Profit DESC LIMIT 1
superstore,How many furniture products were ordered at central superstore?,furniture products refers to Category = 'Furniture',SELECT COUNT(*) FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Category = 'Furniture'
superstore,What are the names of the products that had been shipped in March 2013 at central superstore?,"names of the products refers to Product Name; shipped in March 2013 refers to ""Ship Date"" = '2013-03%'","SELECT DISTINCT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE strftime('%Y-%m', T1.`Ship Date`) = '2013-03'"
superstore,How many orders were made by customers who live in Texas at the Central superstore?,customer live in Texas refers to State = 'Texas',SELECT COUNT(DISTINCT T2.`Order ID`) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.State = 'Texas'
superstore,How many orders were made by Alan Barnes in 2015 at the Central superstore?,"in 2015 refers to ""Order Date"" = '2015%'","SELECT COUNT(DISTINCT T2.`Order ID`) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Customer Name` = 'Alan Barnes' AND STRFTIME('%Y', T2.`Order Date`) = '2015'"
superstore,What is the product name of order CA-2011-115791 in the East superstore?,"order CA-2011-115791 refers to ""Order ID"" = 'CA-2011-115791'",SELECT DISTINCT T2.`Product Name` FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Order ID` = 'CA-2011-141817'
superstore,What is the percentage of orders with 0.2 discount in the Central superstore were purchased by customers who live in Texas?,"live in Texas refers to State = 'Texas'; percentage = divide(sum(Order ID) when Discount = 0.2, sum(Order ID)) as percentage",SELECT CAST(SUM(CASE  WHEN T2.Discount = 0.2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.State = 'Texas'
superstore,What is the percentage of furniture orders that were shipped through first class in 2013 at the Central superstore?,"furniture refers to Category = 'Furniture'; shipped through first class in 2013 refers to ship mode = 'first class' and ""Ship Date"" = '2013%'; percentage = divide(sum(Order ID) when Category = 'Furniture' and ""Ship Date"" = '2013%', sum(Order ID)) as percentage","SELECT CAST(SUM(CASE  WHEN T1.`Ship Mode` = 'First Class' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Category = 'Furniture' AND STRFTIME('%Y', T1.`Ship Date`) = '2013'"
superstore,"Who order from the west region on August 12, 2013, and received a discount of 0.2?","Who refers to ""Customer Name""; on August 12, 2013 refers to ""Order Date"" = '2013-08-12'; discount of 0.2 refers to discount = 0.2",SELECT DISTINCT T2.`Customer Name` FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Order Date` = '2013-08-12' AND T1.Discount = 0.2 AND T1.Region = 'West'
superstore,"What is the order ID of the security-Tint Envelopes product ordered on June 3, 2013, in the Central region?","Security-Tint Envelopes' refers to ""Product Name""; ordered on June 3, 2013 refers to ""Order Date"" = '2013-06-03'",SELECT DISTINCT T1.`Order ID` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'Security-Tint Envelopes' AND T1.`Order Date` = '2013-06-03'
superstore,List the product's name bought by the customer named Bill Shonely from the Central region.,,SELECT DISTINCT T3.`Product Name` FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Bill Shonely' AND T2.Region = 'Central'
superstore,Please give the name of customers from the West region that bought exactly 8 items in their purchase.,"name of customers refers to ""Customer Name""; bought exactly 8 items refers to Quantity = 8",SELECT DISTINCT T2.`Customer Name` FROM west_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.Quantity = 8 AND T1.Region = 'West'
superstore,"Among the customers from Houston, Texas, what is the total profit of their orders in the Central region?","customers from Houston, Texas refers to State = 'Texas' and City = 'Houston'; total profit = sum(Profit)",SELECT SUM(T2.Profit) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.City = 'Houston' AND T1.State = 'Texas' AND T2.Region = 'Central'
superstore,"Who is the customer with an order shipped on March 5, 2013, in the eastern region?","Who is the customer refers to Customer Name; shipped on March 5, 2013 refers to ""Ship Date"" = '2013-03-05'; eastern region refers to Region = 'East'",SELECT DISTINCT T2.`Customer Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Ship Date` = '2013-03-05'
superstore,"Among the orders from 2016 in the Central region, what is the product with the lowest profit?","orders from 2016 refers to ""Order Date"" = '2016%'; product refers to ""Product Name""; lowest profit refers to min(Profit)","SELECT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Region = 'Central' AND STRFTIME('%Y', T1.`Order Date`) = '2016' ORDER BY T1.Profit ASC LIMIT 1"
superstore,Who ordered the order ID CA-2011-118976 from the East region?,"Who refers to ""Customer Name""",SELECT DISTINCT T2.`Customer Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Order ID` = 'CA-2011-118976' AND T2.Region = 'East'
superstore,Provide the product's name of the product with the highest sales in the South region.,highest sales refers to max(Sales),SELECT T2.`Product Name` FROM south_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Region = 'South' ORDER BY T1.Sales DESC LIMIT 1
superstore,"List down the sales, profit, and subcategories of the product ordered in the order ID US-2011-126571 in the East region.",,"SELECT T1.Sales, T1.Profit, T2.`Sub-Category` FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Order ID` = 'US-2011-126571' AND T2.Region = 'East'"
superstore,What is the product's name in the highest quantity in a single purchase?,highest quantity refers to max(Quantity),SELECT T2.`Product Name` FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Region = 'East' ORDER BY T1.Quantity DESC LIMIT 1
superstore,List the customer's name from the South region with a standard class ship mode and sales greater than the 88% of the average sales of all orders.,sales greater than the 88% of the average sales of all orders refers to Sales > avg(Sales) * 0.88; South region refers to south_superstore,SELECT DISTINCT T2.`Customer Name` FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T2.Region = 'South' AND T1.`Ship Mode` = 'Standard Class' AND 100 * T1.Sales / ( SELECT AVG(Sales) FROM south_superstore ) > 88
superstore,"Among the customers from Indiana, what is the percentage of their purchased orders in the Central region with no discount?","Indiana refers to State = 'Indiana'; no discount refers to Discount = 0; percentage = divide(sum(Discount) when Discount = 0, count(Discount)) as percentage",SELECT CAST(SUM(CASE  WHEN T2.Discount = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T2.Region = 'Central' AND T1.State = 'Indiana'
shooting,"Among all the male officers, what is the percentage of them are White?","male refers to gender = 'M'; white refers to race = 'W'; percentage = divide(count(officers where race = 'W'), count(officers)) where gender = 'M' * 100%","SELECT CAST(SUM(IIF(race = 'W', 1, 0)) AS REAL) * 100 / COUNT(case_number) FROM officers WHERE gender = 'M'"
shooting,What is the percentage of the cases involved more than 3 officers from year 2010 to 2015?,"more than 3 officers refers to officer_count > 3; from year 2010 to 2015 refers to date between '2010-01-01' and '2015-12-31'; percentage = divide(count(case_number where officer_count > 3), count(case_number)) where date between '2010-01-01' and '2015-12-31' * 100%","SELECT CAST(SUM(IIF(officer_count > 3, 1, 0)) AS REAL) * 100 / COUNT(case_number) FROM incidents WHERE STRFTIME('%Y', date) BETWEEN '2010' AND '2015'"
shooting,In which year has the greatest number of cases where Handgun was used as weapon?,year refers to year(date); the greatest number of cases refers to max(count(case_number)); OS Spray was used as weapon refers to subject_weapon = 'OS Spray',"SELECT STRFTIME('%Y', date) FROM incidents WHERE subject_weapon = 'Handgun' GROUP BY STRFTIME('%Y', date) ORDER BY COUNT(case_number) DESC LIMIT 1"
shooting,"Among the cases dismissed by the grand jury disposition, what percentage of cases is where the subject is injured?","dismissed by the grand jury disposition refers to grand_jury_disposition = 'No Bill'; the subject is injured refers to subject_statuses = 'injured'; percentage = divide(count(incidents where subject_statuses = 'injured'), count(incidents)) where grand_jury_disposition = 'No Bill' * 100%",SELECT CAST(SUM(subject_statuses = 'Injured') AS REAL) * 100 / COUNT(case_number) FROM incidents WHERE grand_jury_disposition = 'No Bill'
shooting,Did the number of cases with Vehicle as subject weapon increase or decrease from year 2007 to 2008. State the difference.,number of cases refers to count(case_number); with Vehicle as subject weapon refers to subject_weapon = 'Vehicle'; year 2007 refers to date between '2007-01-01' and '2007-12-31'; year 2008 refers to date between '2008-01-01' and '2008-12-31',"SELECT SUM(IIF(STRFTIME('%Y', date) = '2007', 1, 0)) - SUM(IIF(STRFTIME('%Y', date) = '2008', 1, 0)) FROM incidents WHERE subject_weapon = 'Vehicle'"
shooting,"Among the 'Handgun' weapon used by subject, how many percent were 'Shoot and Miss'?","'Handgun' weapon refers to subject_weapon = 'Handgun'; 'Shoot and Miss' refers to subject_statuses = 'Shoot and Miss'; percent = divide(count(incidents where subject_statuses = 'Shoot and Miss'), count(incidents)) where subject_weapon = 'Handgun' * 100%",SELECT CAST(SUM(subject_statuses = 'Shoot and Miss') AS REAL) * 100 / COUNT(case_number) FROM incidents WHERE subject_weapon = 'Handgun'
shooting,Who are the officers involved in cases that are voted as 'No Bill'. List their last name and gender.,voted as 'No Bill' refers to grand_jury_disposition = 'No Bill',"SELECT T2.last_name, T2.gender FROM incidents AS T1 INNER JOIN officers AS T2 ON T1.case_number = T2.case_number WHERE T1.grand_jury_disposition = 'No Bill'"
shooting,"Which are the cases where the subject are female. List the case number, subject status and weapon.",female refers to gender = 'F'; weapon refers to subject_weapon,"SELECT T1.case_number, T1.subject_statuses, T1.subject_weapon FROM incidents AS T1 INNER JOIN subjects AS T2 ON T1.case_number = T2.case_number WHERE T2.gender = 'F'"
shooting,"From the cases where the subject are male, list the case number and the location and subject status.",male refers to gender = 'M',"SELECT T1.case_number, T1.location, T1.subject_statuses FROM incidents AS T1 INNER JOIN subjects AS T2 ON T1.case_number = T2.case_number WHERE T2.gender = 'M'"
shooting,"For case(s) where officer 'Evenden, George' is in charged, state the case number and the grand jury disposition?","officer 'Evenden, George' refers to full_name = 'Evenden, George'","SELECT T1.case_number, T1.grand_jury_disposition FROM incidents AS T1 INNER JOIN officers AS T2 ON T1.case_number = T2.case_number WHERE T2.first_name = 'George' AND T2.last_name = 'Evenden'"
shooting,"For case number '134472-2015', list the last name of the officers involved and state the subject statuses.",,"SELECT T2.last_name, T1.subject_statuses FROM incidents AS T1 INNER JOIN officers AS T2 ON T1.case_number = T2.case_number WHERE T1.case_number = '134472-2015'"
shooting,"From the cases where the subject were deceased, list the subject's last name, gender, race and case number.",subject were deceased refers to subject_statuses = 'Deceased',"SELECT T2.last_name, T2.gender, T2.race, T2.case_number FROM incidents AS T1 INNER JOIN subjects AS T2 ON T1.case_number = T2.case_number WHERE T1.subject_statuses = 'Deceased'"
shooting,What is the percentage of subject who are female used the Vehicle as weapon?,"female refers to gender = 'F'; use Vehicle as weapon refers to subject_weapon = 'Vehicle'; percentage = divide(count(case_number where subject_weapon = 'Vehicle'), count(case_number)) where gender = 'F' * 100%",SELECT CAST(SUM(T1.subject_weapon = 'Vehicle') AS REAL) * 100 / COUNT(T1.case_number) FROM incidents T1 INNER JOIN subjects T2 ON T1.case_number = T2.case_number WHERE T2.gender = 'F'
shooting,"From the 'Injured' statuses of the subject, what is the ratio of weapons used are knife against handgun?","the 'Shoot and Miss' status refers to subject_statuses = 'Shoot and Miss'; knife refers to subject_weapon = 'knife'; toy handgun refers to subject_weapon = 'toy handgun'; ratio = divide(count(case_number where subject_weapon = 'knife'), count(case_number where subject_weapon = 'toy handgun')) where subject_statuses = 'Shoot and Miss'",SELECT CAST(SUM(T1.subject_weapon = 'Knife') AS REAL) * 100 / SUM(T1.subject_weapon = 'Handgun') FROM incidents AS T1 INNER JOIN subjects AS T2 ON T1.case_number = T2.case_number WHERE T1.subject_statuses = 'Injured'
shooting,List all cases from the year 2012 in which the subject was deceased,case refers to case_number; year 2012 refers to date between '2012-01-01' and '2012-12-31'; subject was deceased refers to subject_statuses = 'Deceased',"SELECT case_number FROM incidents WHERE STRFTIME('%Y', date) > '2011' AND subject_statuses = 'Deceased'"
shooting,"Of all male officers, what percentage are black officers?","male refers to gender = 'M'; black refers to race = 'B'; percentage = divide(count(officers where race = 'B'), count(officers)) where gender = 'M' * 100%",SELECT CAST(SUM(race = 'B') AS REAL) * 100 / COUNT(case_number) FROM officers WHERE gender = 'M'
shooting,How many incidents in which the subject's weapon was a vehicle were investigated by a female officer?,subject's weapon was a vehicle refers to subject_weapon = 'Vehicle'; female refers to gender = 'F',SELECT COUNT(T1.case_number) FROM incidents AS T1 INNER JOIN officers AS T2 ON T1.case_number = T2.case_number WHERE T1.subject_weapon = 'Vehicle' AND T2.gender = 'F'
shooting,In how many cases where the subject was a female was the subject's status listed as Deceased?, female refers to gender = 'F'; subject's status listed as Deceased refers to subject_statuses = 'Deceased',SELECT COUNT(T1.case_number) FROM incidents AS T1 INNER JOIN subjects AS T2 ON T1.case_number = T2.case_number WHERE T2.gender = 'F' AND T1.subject_statuses = 'Deceased'
shooting,"Of the black officers, how many of them investigated cases between the years 2010 and 2015?",black refers to race = 'B'; between the years 2010 and 2015 refers to date between '2010-01-01' and '2015-12-31'; case refers to case_number,SELECT COUNT(T1.case_number) FROM officers AS T1 INNER JOIN incidents AS T2 ON T2.case_number = T1.case_number WHERE T1.race = 'B' AND T2.date BETWEEN '2010-01-01' AND '2015-12-31'
shooting,How many instances were found in June 2015?,in June 2015 refers to date between '2015-06-01' and '2015-06-30'; record number refers to case_number,SELECT COUNT(case_number) FROM incidents WHERE date BETWEEN '2015-06-01' AND '2015-06-30'
shooting,How many people were injured between 2006 and 2014 as a result of a handgun?,injured refers to subject_statuses = 'injured'; between 2006 and 2014 refers to date between '2006-01-01' and '2013-12-31'; handgun refers to subject_weapon = 'handgun'; where the incidents took place refers to location,SELECT COUNT(location) FROM incidents WHERE subject_weapon = 'Handgun' AND subject_statuses = 'Injured' AND date BETWEEN '2006-01-01' AND '2013-12-31'
shooting,What is the most common type of weapon that causes death?,the most common type of weapon refers to max(count(subject_weapon)); causes death refers to subject_statuses = 'Deceased',SELECT subject_weapon FROM incidents WHERE subject_statuses = 'Deceased' GROUP BY subject_weapon ORDER BY COUNT(case_number) DESC LIMIT 1
shooting,What is the proportion of white males and females in the police force?,"white refers to race = 'W'; male refers to gender = 'M'; female refers to gender = 'F'; proportion of white males = divide(count(officers where race = 'W' and gender = 'M'), count(officers)) * 100%; proportion of white females = divide(count(officers where race = 'W' and gender = 'F'), count(officers)) * 100%",SELECT CAST(SUM(gender = 'M') AS REAL) / SUM(gender = 'F') FROM officers WHERE race = 'W'
shooting,How many more black female victims than white female victims were discovered?,"black refers to race = 'B'; female refers to gender = 'F'; white refers to race = 'W'; result = subtract(count(victims where race = 'B'), count(victims where race = 'W')) where gender = 'F'",SELECT SUM(race = 'B') - SUM(race = 'W') FROM subjects WHERE gender = 'F'
shooting,What percentage of deaths were caused by rifles?,"rifle refers to subject_weapon = 'rifles'; death refers to subject_statuses = 'Deceased'; percentage = divide(count(incidents where subject_weapon = 'rifles'), count(incidents)) where subject_statuses = 'Deceased' * 100%",SELECT CAST(SUM(subject_statuses = 'Deceased') AS REAL) * 100 / COUNT(case_number) FROM incidents WHERE subject_weapon = 'Rifle'
shooting,Which type of weapon was used to attack the victim in the record number 031347-2015? What is the victim's race and gender?,type of weapon refers to subject_weapon; record number 031347-2015 refers to case_number = '031347-2015',"SELECT T1.subject_weapon, T2.race, T2.gender FROM incidents AS T1 INNER JOIN subjects AS T2 ON T1.case_number = T2.case_number WHERE T1.case_number = '031347-2015'"
shooting,Which near-death incident did a policeman by the name of Ruben Fredirick look into? What is the victim in this incident's race and gender?,near-death refers to subject_statuses = 'Deceased Injured'; incident refers to case_number; Ruben Fredirick refers to full_name = 'Ruben Fredirick',"SELECT T1.case_number, T3.race, T3.gender FROM incidents AS T1 INNER JOIN officers AS T2 ON T1.case_number = T2.case_number INNER JOIN subjects AS T3 ON T1.case_number = T3.case_number WHERE T2.first_name = 'Fredirick' AND T2.last_name = 'Ruben'"
shooting,What proportion of male police officers looked into events where people were injured?,"male refers to gender = 'M'; people were injured refers to subject_statuses = 'Injured'; proportion = divide(count(case_number where gender = 'M'), count(case_number)) where subject_statuses = 'Injured' * 100%",SELECT CAST(SUM(T2.gender = 'M') AS REAL) * 100 / COUNT(T1.case_number) FROM incidents T1 INNER JOIN officers T2 ON T1.case_number = T2.case_number WHERE T1.subject_statuses = 'Injured'
genes,"For the genes that are located in the plasma membrane, please list their number of chromosomes.",,SELECT T1.Chromosome FROM Genes AS T1 INNER JOIN Classification AS T2 ON T1.GeneID = T2.GeneID WHERE T2.Localization = 'plasma membrane'
genes,How many non-essential genes are located in the nucleus?,,SELECT COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Classification AS T2 ON T1.GeneID = T2.GeneID WHERE T2.Localization = 'nucleus' AND T1.Essential = 'Non-Essential'
genes,"Among the genes with nucleic acid metabolism defects, how many of them can be found in the vacuole?",,SELECT COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Classification AS T2 ON T1.GeneID = T2.GeneID WHERE T2.Localization = 'vacuole' AND T1.Phenotype = 'Nucleic acid metabolism defects'
genes,Please list the location of the genes that have the most chromosomes.,,SELECT T2.Localization FROM Genes AS T1 INNER JOIN Classification AS T2 ON T1.GeneID = T2.GeneID ORDER BY T1.Chromosome DESC LIMIT 1
genes,"Among the pairs of genes that are both located in the nucleus, what is the highest expression correlation score?",,SELECT T2.Expression_Corr FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 INNER JOIN Genes AS T3 ON T3.GeneID = T2.GeneID2 WHERE T1.Localization = 'nucleus' AND T3.Localization = 'nucleus' ORDER BY T2.Expression_Corr DESC LIMIT 1
genes,What are the functions of the pair of genes that have the lowest expression correlation score?a,,SELECT T1.Function FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 ORDER BY T2.Expression_Corr ASC LIMIT 1
genes,"Among the pairs of genes that are not from the class of motorproteins, how many of them are negatively correlated?","If Expression_Corr < 0, it means the negatively correlated",SELECT COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T2.Expression_Corr < 0 AND T1.Class = 'Motorproteins'
genes,"For the pairs of genes with one having 8 chromosomes and the other having 6 chromosomes, what is the highest expression correlation score?",,SELECT T2.Expression_Corr FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Chromosome = 6 OR T1.Chromosome = 8 ORDER BY T2.Expression_Corr DESC LIMIT 1
genes,Please list the motif of the genes that are located in the cytoplasm and have 7 chromosomes.,,"SELECT T2.GeneID1, T2.GeneID2 FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Localization = 'cytoplasm' AND T1.Chromosome = 7"
genes,"For the non-essential genes whose functions are transcription, how many of them are not located in the cytoplasm?",,SELECT COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Localization != 'cytoplasm' AND T1.Function = 'TRANSCRIPTION' AND T1.Essential = 'NON-Essential'
genes,How many pairs of positively correlated genes are both non-essential?,"If Expression_Corr > 0, it means the expression correlation is positive",SELECT COUNT(T2.GeneID2) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T2.Expression_Corr > 0 AND T1.Essential = 'Non-Essential'
genes,"If a pair of genes is positively correlated, what is the possibility of it being composed of two genes both with over 10 chromosomes?",Positively correlated means Expression_Corr > 0; Possibility = count(the pairs of genes with both chromosomes over 20) / count(pairs of genes that are positively correlated),"SELECT CAST(SUM(IIF(T1.Chromosome > 10 AND T3.Chromosome > 10, 1, 0)) AS REAL) * 100 / COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 INNER JOIN Genes AS T3 ON T3.GeneID = T2.GeneID2 WHERE T2.Expression_Corr > 0"
genes,"For the pairs of genes both from the class ATPases, what is the average expression correlation score?",,SELECT AVG(T2.Expression_Corr) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Class = 'ATPases'
genes,Lists all genes by identifier number located in the cytoplasm and whose function is metabolism.,,SELECT DISTINCT GeneID FROM Genes WHERE Localization = 'cytoplasm' AND Function = 'METABOLISM'
genes,How many different genes do we have if we add those located in the plasma and in the nucleus?,,"SELECT COUNT(GeneID) FROM Classification WHERE Localization IN ('plasma', 'nucleus')"
genes,What kind of expression correlation occurs in physical type interacting gene pairs and what percentage of these are negatively correlated?,If the Expression_Corr value is negative then it's negatively correlated. Percentage of Negative Correlation = count(negative Expression_Corr physical type) / count(Expression_Corr physical type) * 100%,SELECT Expression_Corr FROM Interactions WHERE Type = 'Physical' UNION ALL SELECT CAST(SUM(Expression_Corr < 0) AS REAL) * 100 / COUNT(*) FROM Interactions WHERE Type = 'Physical'
genes,"What percentage of genes located in the cytoskeleton are of unknown class? And of these, how many are not conditional phenotypes?",Percentage = count(genes located in the cytoskeleton unknown class) / count(genes located in the cytoskeleton) * 100%,"SELECT SUM(Localization = 'cytoskeleton' AND Phenotype = 'Conditional phenotypes') , CAST(SUM(Localization = 'cytoskeleton') AS REAL) * 100 / COUNT(GeneID) FROM Genes;"
genes,What type of interactions occurs in genes whose function is cellular transport and transport medicine and are classified as non-essential?,,SELECT T2.Type FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Function = 'TRANSCRIPTION' AND T1.Essential = 'Non-Essential'
genes,List all genes whose interaction is with genes located in the nucleus in which it is positively correlated.,If the Expression_Corr value is positive then it's positively correlated,SELECT T1.GeneID FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T2.Expression_Corr > 0 AND T1.Localization = 'nucleus'
genes,"Taking all the essential genes of the transcription factors class located in the nucleus as a reference, how many of them carry out a genetic-type interaction with another gene? List them.",,SELECT T2.GeneID1 FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Localization = 'nucleus' AND T1.Class = 'Transcription factors' AND T1.Essential = 'Essential' AND T2.Expression_Corr != 0
genes,"Of all the nonessential genes that are not of the motorprotein class and whose phenotype is cell cycle defects, how many do not have a physical type of interaction?",,SELECT COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T2.Type != 'Physical' AND T1.Phenotype = 'Cell cycle defects' AND T1.Class != 'Motorproteins' AND T1.Essential = 'Non-Essential'
genes,"Of the genes whose phenotype and motif are nucleic acid metabolism defects, PS00107, what percentage perform positive interaction with another gene?","Percentage of no interaction = [count(nucleic acid metabolism, PS00107, no interaction) / count(nucleic acid metabolism, PS00107) * 100%","SELECT CAST(SUM(IIF(T2.Expression_Corr > 0, 1, 0)) AS REAL) * 100 / COUNT(T2.GeneID1) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Phenotype = 'Nucleic acid metabolism defects' AND T1.Motif = 'PS00107'"
genes,"Which negatively correlated, genetically interacting genes are non-essential? What percentage do they represent with respect to those that are essential?","If the Expression_Corr value is negative then it's negatively correlated; Percentage of Essensity = [count(negatively correlated, genetical interaction, non-essential) / count(negatively correlated, genetical interaction, non-essential+negatively correlated, genetical interaction, essential)] * 100%",SELECT CAST(COUNT(T1.GeneID) AS REAL) * 100 / ( SELECT COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T2.Expression_Corr < 0 ) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T2.Expression_Corr < 0 AND T1.Essential = 'Non-Essential'
app_store,"How many apps were last updated in January of 2018? Please write one translated review with positive sentiment for each app, if there's any.","updated in January of 2018 refers to Last Updated BETWEEN 'January 1, 2018' and 'January 31, 2018';","SELECT DISTINCT Translated_Review FROM user_reviews WHERE App IN ( SELECT App FROM playstore WHERE `Last Updated` BETWEEN 'January 1, 2018' AND 'January 31, 2018' ) AND Sentiment = 'Positive'"
app_store,How many users mildly likes the 7 Minute Workout app and when was it last updated?,mildly likes the app refers to Sentiment_Polarity> = 0 and Sentiment_Polarity<0.5;,"SELECT COUNT(T2.Sentiment_Polarity), T1.""Last Updated"" FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = '7 Minute Workout' AND T2.Sentiment_Polarity BETWEEN 0 AND 0.5"
app_store,How many users holds neutral attitude towards the HTC Weather app? Indicate the app's rating on the Google Play Store.,user holds neutral attitude refers to Sentiment = 'Neutral';,"SELECT COUNT(T1.Rating), T1.Rating FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'HTC Weather' AND T2.Sentiment = 'Neutral'"
app_store,What is the name and category of the app with the highest amount of -1 sentiment polarity score?,highest amount of -1 sentiment polarity score refers to MAX(Count(Sentiment_Polarity = 1.0)),"SELECT DISTINCT T1.App, T1.Category FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Sentiment_Polarity = '-1.0'"
app_store,What is the average sentiment polarity score of the Cooking Fever app? Indicate the age group that the app is targeted at.,average sentiment polarity score = AVG(Sentiment_Polarity); age group the app is target at refers to Content Rating;,"SELECT AVG(T2.Sentiment_Polarity), T1.""Content Rating"" FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'Cooking Fever'"
app_store,What is the lowest sentiment polarity score of the Basketball Stars app for people who dislikes the app pretty much and how many downloads does it have?,lowest sentiment polarity score refers to MIN(Sentiment_Polarity); user dislike the app pretty much refers to Sentiment_Polarity<-0.5; number of downloads it has refers to installs;,"SELECT MIN(T2.Sentiment_Polarity), T1.Installs FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'Basketball Stars'"
app_store,"For the Akinator app, how many reviews have sentiment subjectivity of no more than 0.5 and what is its current version?",Sentiment_Subjectivity<0.5; current version refers to Current Ver;,"SELECT COUNT(T2.Sentiment_Subjectivity), T1.""Current Ver"" FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'Akinator' AND T2.Sentiment_Subjectivity < 0.5"
app_store,How many apps have rating of 5?,FALSE;,SELECT COUNT(App) FROM playstore WHERE Rating = 5
app_store,What are the top 5 installed free apps?,free app refers to price = 0; most installed app refers to MAX(Installs);,"SELECT App FROM playstore WHERE Price = 0 ORDER BY CAST(REPLACE(REPLACE(Installs, ',', ''), '+', '') AS INTEGER) DESC LIMIT 5"
app_store,Name the top 10 most reviewed apps.,most reviewed app refers to MAX(Reviews);,SELECT DISTINCT App FROM playstore ORDER BY Reviews DESC LIMIT 10
app_store,"How many of the users hold neutral attitude on ""10 Best Foods for You"" app and what category is this app?",neutral attitude refers to Sentiment = 'Neutral';,"SELECT COUNT(T2.App), T1.Category FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = '10 Best Foods for You' AND T2.Sentiment = 'Neutral'"
app_store,What are the apps that users pretty like this app and how many installs amount of these apps?,users pretty much likes the app refers to Sentiment_Polarity = 'Positive';,"SELECT DISTINCT T1.App, T1.Installs FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Sentiment_Polarity > 0"
app_store,List apps whose rating is 3.9 and state the translated review of each app.,lowest rating refers to Rating = 1;,"SELECT T1.App, T2.Translated_Review FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Rating = 3.9"
app_store,How many apps that are only compatible with Android ver 8.0 and above? List down the users' sentiment of these apps.,"compatible with android refers to Android Ver; Android Ver"" = '8.0 and up';",SELECT DISTINCT Sentiment FROM user_reviews WHERE App IN ( SELECT App FROM playstore WHERE `Android Ver` = '8.0 and up' )
app_store,Which apps have multiple genres and what is the total sentiment subjectivity of these apps?,multiple genres refers to COUNT(Genres>1; total sentiment subjectivity = Sum(Sentiment_Subjectivity);,SELECT SUM(T2.Sentiment_Subjectivity) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Genres > 1
app_store,Which apps have not been updated since year 2015 and what kind of sentiment users hold on it?,"since year 2015 refers to ""Last Updated""<'January 1, 2015';","SELECT DISTINCT App, Sentiment FROM user_reviews WHERE App IN ( SELECT App FROM playstore WHERE CAST(SUBSTR('Last Updated', -4, 4) AS INTEGER) < 2015 )"
app_store,What is the total installs of apps with content rating of adults only 18+ and what are the translated reviews of it?,total installs = SUM(Installs);,"SELECT SUM(T1.Installs), T2.Translated_Review FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.""Content Rating"" = 'Adults only 18+'"
app_store,Which of the app is the best selling app and what is the sentiments polarity of it?,"best selling app = MAX(MULTIPLY(Price, Installs));","SELECT T1.App, T2.Sentiment_Polarity FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App ORDER BY T1.Price * CAST(REPLACE(REPLACE(Installs, ',', ''), '+', '') AS INTEGER) DESC LIMIT 1"
app_store,What is the average rating of comic category apps? How many users hold positive attitude towards this app?,average rating = AVG(Rating where Category = 'COMICS'); number of users who hold a positive attitude towards the app refers to SUM(Sentiment = 'Positive');,"SELECT AVG(T1.Rating) , COUNT(CASE WHEN T2.Sentiment = 'Positive' THEN 1 ELSE NULL END) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Category = 'COMICS'"
app_store,"What is the rating for ""Draw A Stickman""?",Draw A Stickman refers to App = 'Draw A Stickman';,SELECT Rating FROM playstore WHERE APP = 'Draw A Stickman'
app_store,"How many of the reviews for the app ""Brit + Co"" have a comment?",Brit + Co refers to App = 'Brit + Co'; comment refers to Translated Review NOT null;,SELECT COUNT(App) FROM user_reviews WHERE App = 'Brit + Co' AND Translated_Review IS NOT NULL
app_store,List the top 5 shopping apps with the most reviews.,shopping apps refers to Genre = 'Shopping'; most reviews refers to MAX(Reviews);,SELECT DISTINCT App FROM playstore WHERE Genres = 'Shopping' GROUP BY App ORDER BY COUNT(App) DESC LIMIT 5
app_store,"How many neutral reviews does the app ""Dino War: Rise of Beasts"" have?",neutral reviews refers to Sentiment = 'Neutral';,SELECT COUNT(App) FROM user_reviews WHERE App = 'Dino War: Rise of Beasts' AND Sentiment = 'Neutral'
app_store,"What are the apps with only 5,000+ installs?","Installs = '5,000+';","SELECT DISTINCT App FROM playstore WHERE Installs = '5,000+'"
app_store,"List all the negative comments on the ""Dog Run - Pet Dog Simulator"" app.",negative comment refers to Sentiment = 'Negative';,SELECT Translated_Review FROM user_reviews WHERE App = 'Dog Run - Pet Dog Simulator' AND Sentiment = 'Negative'
app_store,Which free app has the most Negative comments?,paid app refers to Type = 'Paid'; negative comment refers to Sentiment = 'Negative'; paid app with most negative comments refers to MAX(COUNT(Sentiment = 'Negative')) where Type = 'Paid';,SELECT T1.App FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Type = 'Free' AND T2.Sentiment = 'Negative' GROUP BY T1.App ORDER BY COUNT(T2.Sentiment) DESC LIMIT 1
app_store,"How many negative comments are there in all the apps with 100,000,000+ installs?","negative comment refers to Sentiment = 'Negative'; Installs = '100,000,000+';","SELECT COUNT(T2.Sentiment) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Installs = '100,000,000+' AND T2.Sentiment = 'Negative'"
app_store,"What are the content ratings for the apps that have ""gr8"" in their comments?",app with gr8 in their comments refers to Translated_Review LIKE '%gr8%';,SELECT DISTINCT T1.`Content Rating` FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Translated_Review LIKE '%gr8%'
app_store,What is the total Sentiment polarity score of the most expensive app?,total sentiment polarity score = sum(Sentiment_Polarity); most expensive app refers to MAX(Price);,SELECT SUM(T2.Sentiment_Polarity) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Price = ( SELECT MAX(Price) FROM playstore )
app_store,"What is the rating for ""Garden Coloring Book""? List all of its reviews.",Golfshot Plus: Golf GPS refers to App = 'Golfshot Plus: Golf GPS'; review refers to Translated_Review;,"SELECT T1.Rating, T2.Translated_Review FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'Garden Coloring Book'"
app_store,Which Photography app has the highest total Sentiment subjectivity score?,Photography app refers to Genre = 'Photography'; highest total sentiment subjectivity score = MAX(sum(Sentiment_Subjectivity));,SELECT T1.App FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Genres = 'Photography' GROUP BY T1.App ORDER BY SUM(T2.Sentiment_Subjectivity) DESC LIMIT 1
app_store,List all the comments on the lowest rated Mature 17+ app.,comments refers to Translated_Review; lowest rated refers to Rating = 1; Mature 17+ refers to Content Rating = 'Mature 17+ ';,"SELECT T2.Translated_Review FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.""Content Rating"" = 'Mature 17+' ORDER BY T1.Rating LIMIT 1"
app_store,What is the number of installments of the app with the highest total Sentiment polarity score?,installments refers to Installs; highest total sentiment polarity score = MAX(SUM(Sentiment_Polarity));,SELECT T1.Installs FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App GROUP BY T1.App ORDER BY SUM(T2.Sentiment_Polarity) DESC LIMIT 1
app_store,What is the number of neutral comments from all the weather apps?,neutral comments refers to Sentiment = 'Neutral'; weather app refers to Genre = 'Weather';,SELECT COUNT(T2.Sentiment) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Genres = 'Weather' AND T2.Sentiment = 'Neutral'
app_store,"Which 1,000,000,000+ intalls apps has the most no comment reviews?",no comment refers to Translated_Review = 'nan'; most no comment reviews = (MAX(COUNT(Translated_Review = 'nan')));,"SELECT T1.App FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Installs = '1,000,000+' AND T2.Translated_Review = 'nan' GROUP BY T1.App ORDER BY COUNT(T2.Translated_Review) DESC LIMIT 1"
app_store,"What is the rating and the total Sentiment subjectivity score of ""Onefootball - Soccer Scores""?",Onefootball - Soccer Scores refers to App = 'Onefootball - Soccer Scores';,"SELECT T1.Rating, SUM(T2.Sentiment_Subjectivity) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'Onefootball - Soccer Scores'"
app_store,"What percentage of no comment reviews are from ""Teen"" content rating apps?","no comment refers to Translated_Review = 'nan'; percentage = DIVIDE((SUM(Content Rating = 'Teen')), COUNT(*));",SELECT CAST(COUNT(CASE WHEN T1.`Content Rating` = 'Teen' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.App) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Translated_Review = 'nan'
app_store,Which apps have 5 rating? List out then application name.,application name refers to App;,SELECT DISTINCT App FROM playstore WHERE Rating = 5
app_store,Which apps have been reviewed more than 75 000 000 times and the content is suitable for teenagers?,Reviews>75000000; suitable for teenagers refers to Content Rating = 'Teen';,SELECT DISTINCT App FROM playstore WHERE Reviews > 75000000 AND `Content Rating` = 'Teen'
app_store,List out genre that have downloads more than 1000000000.,"downloads and installs are synonyms; Installs = '1,000,000,000+';","SELECT Genres FROM playstore WHERE Installs = '1,000,000,000+' GROUP BY Genres"
app_store,What is the average price for a dating application?,average price = AVG(Price where Genre = 'Dating'); dating application refers to Genre = 'Dating';,SELECT AVG(Price) FROM playstore WHERE Genres = 'Dating'
app_store,What is the average download for entertainment apps with size no more than 1.0 M?,downloads and installs are synonyms; entertainment apps refers to Category = 'ENTERTAINMENT';,"SELECT AVG(CAST(REPLACE(REPLACE(Installs, ',', ''), '+', '') AS INTEGER)) FROM playstore WHERE Category = 'ENTERTAINMENT' AND Size < '1.0M'"
app_store,What is the average review number for application with 5 rating?,average review = AVG(Review); application refers to app; Rating = 5;,SELECT AVG(Reviews) FROM playstore WHERE Rating = 5
app_store,List out the top 3 genre for application with a sentiment review greater than 0.5.,sentiment review refers to Sentiment_Polarity; Sentiment_Polarity>0.5;,SELECT Genres FROM playstore WHERE App IN ( SELECT App FROM user_reviews WHERE Sentiment = 'Positive' AND Sentiment_Polarity > 0.5 ORDER BY Sentiment_Polarity DESC LIMIT 3 )
app_store,What is the percentage of application with 4.7 rating having more positives sentiment than negative sentiment?,"percentage = DIVIDE(SUBTRACT(SUM(Sentiment = 'Positive')), (SUM(Sentiment = 'Negative')), SUM(Sentiment = 'Negative')) as percentage; having more positive sentiment than negative sentiment refers to Sentiment = 'Positive'>Sentiment = 'Negative';",SELECT CAST(COUNT(CASE WHEN ( SELECT COUNT(CASE WHEN Sentiment = 'Positive' THEN 1 ELSE NULL END) - COUNT(CASE WHEN Sentiment = 'Negative' THEN 1 ELSE NULL END) FROM user_reviews GROUP BY App ) > 0 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.Sentiment) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Rating = 4.7
app_store,List down app that does not have negative sentiment and give their average rating?,doest not have negative sentiment refers to Sentiment! = 'Negative'; average = AVG(Sentiment_Polarity);,"SELECT T1.App, AVG(T2.Sentiment_Polarity) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Sentiment != 'Negative' GROUP BY T1.App"
app_store,List down application that have not been updated since 2015. What is the percentage of this application having more negative sentiment than positive sentiment?,"percentage = DIVIDE(SUBTRACT(SUM(Sentiment = 'Positive')), (SUM(Sentiment = 'Negative'))), (SUM(Sentiment = 'Negative')) as percent; Last Updated>'2015';","SELECT CAST((( SELECT COUNT(*) Po FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE SUBSTR(T1.""Last Updated"", -4, 4) > '2015' AND T2.Sentiment = 'Positive' ) - ( SELECT COUNT(*) Ne FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE SUBSTR(T1.""Last Updated"", -4, 4) > '2015' AND T2.Sentiment = 'Negative' )) AS REAL) * 100 / ( SELECT COUNT(*) NUM FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE SUBSTR(T1.""Last Updated"", -4, 4) > '2015' )"
app_store,What is the percentage for free application with a rating 4.5 and above have not been updated since 2018?,"paid refers to Type = 'Paid'; application refers to App; Rating>4.5; Last Updated>'2018; percentage = DIVIDE(SUM(Genres = 'Mature 17+' and Rating>4.5 and substr(""Last Updated"",-4,4)>'2018' )), (COUNT(App)) as percent;","SELECT CAST(SUM(CASE WHEN SUBSTR('Last Updated', -4) > '2018' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(App) PER FROM playstore WHERE Type = 'Free' AND Rating >= 4.5"
app_store,What genre does Honkai Impact 3rd belong to?,Honkai Impact 3rd is the App;,SELECT DISTINCT Genres FROM playstore WHERE App = 'Honkai Impact 3rd'
app_store,List down the rating for the App Learn C++.,FALSE;,SELECT DISTINCT Rating FROM playstore WHERE App = 'Learn C++'
app_store,What is the average price of games belonging in the arcade genre which has a content rating of Everyone 10+?,average price = AVG(Price);,SELECT AVG(Price) FROM playstore WHERE 'Content Rating' = 'Everyone 10+' AND Genres = 'Arcade'
app_store,How much is the size of Browser 4G and how many users have a pretty positive favorability on it?,Browser 4G is the App; pretty positive favorability refers to Sentiment_Polarity score = 0.5,"SELECT T1.Size, COUNT(T1.App) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'Browser 4G' AND T2.Sentiment_Polarity >= 0.5"
app_store,Name the Apps with a sentiment objectivity of 0.3 and include their number of installs.,FALSE;,"SELECT DISTINCT T1.App, T1.Installs FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Sentiment_Polarity = 0.3"
app_store,How much is the average sentiment polarity score of Golf GPS Rangefinder: Golf Pad and what is it's rating in the Google Play Store?,average sentiment polarity score = AVG(Sentiment_Polarity); Golf GPS Rangefinder: Golf Pad  is the App;,"SELECT AVG(T2.Sentiment_Polarity), T1.Rating FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'Golf GPS Rangefinder: Golf Pad'"
app_store,List the top 5 lowest rated puzzle games and count the number of negative sentiments the games received.,lowest rating refers to MIN(Rating); puzzle is the genre;,"SELECT T1.App, COUNT(T1.App) COUNTNUMBER FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Sentiment = 'Negative' GROUP BY T1.App ORDER BY T1.Rating LIMIT 5"
app_store,What is the percentage ratio between positive sentiments and negative sentiments that are in Fate/Grand Order? Also indicate the current version.,"Fate/Grand Order is the App; percentage ratio = MULTIPLY(DIVIDE((SUM(Sentiment = 'Positive')), (SUM(Sentiment = 'Negative'))), 100);","SELECT CAST(SUM(CASE WHEN T2.Sentiment = 'Positive' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.Sentiment = 'Negative' THEN 1 ELSE 0 END), T1.`Current Ver` FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'Fate/Grand Order (English)' AND T1.`Current Ver` = '1.18.0'"
app_store,Indicate the number of installs and include the percentage of positive sentiments of FREEDOME VPN Unlimited anonymous Wifi Security.,"FREEDOME VPN Unlimited anonymous Wifi Security is the App; percentage = MULTIPLY(DIVIDE((SUM(Sentiment = 'Positive')), (COUNT(*))), 100)","SELECT T1.Installs , CAST(SUM(CASE WHEN T2.Sentiment = 'Positive' THEN 1 ELSE 0 END) * 100 / SUM(CASE WHEN T2.Sentiment IS NOT NULL THEN 1.0 ELSE 0 END) AS REAL) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'FREEDOME VPN Unlimited anonymous Wifi Security'"
app_store,"For the Honkai Impact 3rd App, what is the highest sentiment polarity score and what genre does it belong to?",highest sentiment polarity score refers to MAX(Sentiment_Polarity);,"SELECT MAX(T2.Sentiment_Polarity), T1.Genres FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'Honkai Impact 3rd' AND T2.Sentiment_Polarity > 0.5 GROUP BY T1.Genres"
app_store,What is the rating of Dragon Ball Legends and how many users dislike this App?,Dragon Ball Legends is the app; users who dislikes the app refers to Sentiment_Polarity<-0.5;,"SELECT T1.Rating, COUNT(T2.Sentiment_Polarity) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'Dragon Ball Legends' AND CAST(Sentiment_Polarity AS INTEGER) < -0.5"
app_store,Which education App has the worst rating and state the translated review if available.,education App refers to Category = 'EDUCATION'; worst rated app refers to Rating = 1;,"SELECT T1.App, T2.Translated_Review FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Category = 'EDUCATION' GROUP BY T1.App, T2.Translated_Review ORDER BY T1.Rating ASC LIMIT 1"
app_store,List all free sports Apps and their translated review.,paid sports Apps refers to type = 'Paid' and Category = 'SPORTS';,"SELECT T1.App, T2.Translated_Review FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Type = 'Free' AND T1.Category = 'SPORTS'"
app_store,"Among the role playing game genre, how many are targeted to teens and what is their average sentiment polarity score?",targeted to teen refers to Content Rating = 'Teen'; average = AVG(Sentiment_Polarity);,"SELECT COUNT(T1.App), AVG(T2.Sentiment_Polarity) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.""Content Rating"" = 'Teen' AND T1.Genres = 'Role Playing'"
app_store,What is the average rating of Apps falling under the racing genre and what is the percentage ratio of positive sentiment reviews?,"average rating = AVG(Rating); percentage = MULTIPLY(DIVIDE((SUM(Sentiment = 'Positive')), (COUNT(*)), 100));","SELECT AVG(T1.Rating), CAST(COUNT(CASE WHEN T2.Sentiment = 'Positive' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.Sentiment) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Genres = 'Racing'"
regional_sales,Which region has the most number of sales team?,the most number of sales team refers to MAX(COUNT(Sales Team));,SELECT Region FROM `Sales Team` GROUP BY Region ORDER BY COUNT(DISTINCT `Sales Team`) DESC LIMIT 1
regional_sales,List all the customers with name containing the word 'Group'.,name containing the word 'Group' refers to Customer Names LIKE '%Group%';,"SELECT T FROM ( SELECT IIF(`Customer Names` LIKE '%Group%', `Customer Names`, NULL) AS T FROM Customers ) WHERE T IS NOT NULL"
regional_sales,What is the average median income for all City type of stores?,AVG(Median Income) where Type = 'City';,SELECT AVG(`Median Income`) FROM `Store Locations` WHERE Type = 'City'
regional_sales,Name the sales team and the region of order number 'SO - 000137'.,,"SELECT T2.`Sales Team`, T2.Region FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.OrderNumber = 'SO - 000137'"
regional_sales,List all the order numbers along with its product name for each order under the sales team of 'Douglas Tucker'.,,"SELECT DISTINCT T1.ProductID, T1.`Product Name` FROM Products AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._ProductID = T1.ProductID INNER JOIN `Sales Team` AS T3 ON T3.SalesTeamID = T2._SalesTeamID WHERE T3.`Sales Team` = 'Douglas Tucker'"
regional_sales,"Among orders in 2020, name the customers who had the greatest discount applied for 'Cocktail Glasses'",MAX(Discount Applied) where Product Name = 'Cocktail Glasses'; orders in 2020 refer to the OrderDate between 01-01-2020 and 31-12-2020;,"SELECT DISTINCT T1.`Customer Names` FROM Customers AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._CustomerID = T1.CustomerID INNER JOIN Products AS T3 ON T3.ProductID = T2._ProductID WHERE T3.`Product Name` = 'Cocktail Glasses' AND SUBSTR(T2.OrderDate, -2) = '20' AND T2.`Discount Applied` = ( SELECT T2.`Discount Applied` FROM Customers AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._CustomerID = T1.CustomerID INNER JOIN Products AS T3 ON T3.ProductID = T2._ProductID WHERE T3.`Product Name` = 'Cocktail Glasses' AND T2.OrderDate LIKE '%/%/20' ORDER BY T2.`Discount Applied` DESC LIMIT 1 )"
regional_sales,List all the order numbers for In-Store sales and find the city where the store is located.,In-Store sales refer to Sales Channel = 'In-Store'; city refers to City Name;,"SELECT DISTINCT T1.OrderNumber, T2.`City Name` FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T1.`Sales Channel` = 'In-Store'"
regional_sales,"Name the most expensive ordered? Who, when was it ordered?",the most expensive refers to MAX(Unit Cost); who refers to Customer Names; when refers to OrderDate;,"SELECT T2.OrderNumber, T1.`Customer Names`, T2.OrderDate FROM Customers AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._CustomerID = T1.CustomerID INNER JOIN Products AS T3 ON T3.ProductID = T2._ProductID ORDER BY T2.`Unit Cost` DESC LIMIT 1"
regional_sales,List all the numbers ordered by 'Rochester Ltd' in 2018.,"Rochester Ltd is the name of the customer; all the numbers ordered refer to OrderNumber; 2018 refers to SUBSTR(OrderDate, -2) = '18';",SELECT DISTINCT T FROM ( SELECT CASE  WHEN T1.OrderDate LIKE '%/%/18' AND T2.`Customer Names` = 'Rochester Ltd' THEN T1.OrderNumber ELSE NULL END AS T FROM `Sales Orders` T1 INNER JOIN Customers T2 ON T2.CustomerID = T1._CustomerID ) WHERE T IS NOT NULL
regional_sales,Provide all the orders from WARE-NMK1003. Name the product and sales team for each of these order.,all the orders from WARE-NMK1003 refer to OrderNumber where WarehouseCode = 'WARE-NMK1003'; product refers to Product Name;,"SELECT DISTINCT T1.`Product Name`, T3.`Sales Team` FROM Products AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._ProductID = T1.ProductID INNER JOIN `Sales Team` AS T3 ON T3.SalesTeamID = T2._SalesTeamID WHERE T2.WarehouseCode = 'WARE-NMK1003'"
regional_sales,List the name of all customers who had made orders online.,orders online refer to Sales Channel = 'Online';,SELECT T FROM ( SELECT CASE  WHEN T2.`Sales Channel` = 'Online' THEN T1.`Customer Names` ELSE NULL END AS T FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID ) WHERE T IS NOT NULL
regional_sales,Calculate the average net profit for bakeware product.,"net profit can be computed as SUBTRACT(Unit Price, Unit Cost); AVG(net profit) where Product Name = 'Bakeware';","SELECT AVG(REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', ''))  FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE T2.`Product Name` = 'Bakeware'"
regional_sales,Name the sales team name who had orders with the greatest net profit in 2020.,"net profit can be computed as SUBTRACT(Unit Price, Unit Cost); the greatest net profit in 2020 refers to MAX(net profit) where OrderDate LIKE '%/20';","SELECT T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.OrderDate LIKE '%/%/20' GROUP BY T2.`Sales Team` ORDER BY SUM(REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')) DESC LIMIT 1"
regional_sales,Sate the order number and calculate the net profit for each order under Joshua Bennett.,"net profit can be computed as SUBTRACT(Unit Price, Unit Cost); Joshua Bennett is the name of Sales Team;","SELECT T1.OrderNumber , REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')  FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T2.`Sales Team` = 'Joshua Bennett'"
regional_sales,"Among the sales order shipped in July 2018, calculate the percentage of orders for home fragrances.","shipped in July 2018 refers to ShipDate between 01-07-2018 and 31-07-2018; DIVIDE(COUNT(OrderNumber where Product Name = 'Home Fragrances' and SUBSTR(OrderDate, 1, 1) = '7'), COUNT(OrderNumber where SUBSTR(ShipDate, -2) = '18')) as percentage;",SELECT SUM(CASE WHEN T2.`Product Name` = 'Home Fragrances' THEN 1 ELSE 0 END) * 100 / COUNT(T1.OrderNumber)  FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE T1.ShipDate LIKE '7/%/18'
regional_sales,"List down the customer IDs and names that start with alphabet ""W"".","names that start with alphabet ""W"" refer to Customer Names LIKE 'W%';","SELECT DISTINCT CustomerID, `Customer Names` FROM Customers WHERE `Customer Names` LIKE 'W%' ORDER BY `Customer Names` DESC"
regional_sales,"List down the product IDs and names that include the word ""Outdoor"".","names that include the word ""Outdoor"" refer to Product Name LIKE '%Outdoor%';","SELECT ProductID, T FROM ( SELECT ProductID , CASE  WHEN `Product Name` LIKE '%Outdoor%' THEN `Product Name` ELSE NULL END AS T FROM Products ) WHERE T IS NOT NULL ORDER BY T DESC"
regional_sales,"Among the sales with 40% discount via in-store channel, how many products were shipped from warehouse code of WARE-NMK1003?",40% discount refers to Discount Applied = 0.4; in-store channel refers to Sales Channel = 'In-Store'; orders refer to OrderNumber;,SELECT COUNT(DISTINCT T) FROM ( SELECT CASE  WHEN `Sales Channel` = 'In-Store' AND WarehouseCode = 'WARE-NMK1003' AND `Discount Applied` = '0.4' THEN OrderNumber ELSE NULL END AS T FROM `Sales Orders` ) WHERE T IS NOT NULL
regional_sales,Mention the most populated city and median income of the store in Florida state.,most populated refers to Max(Population);,"SELECT `City Name`, `Median Income` FROM `Store Locations` WHERE State = 'Florida' ORDER BY Population DESC LIMIT 1"
regional_sales,"Describe the ID, city and region of the stores which are in Allen country.",ID refers to StoreID;,"SELECT DISTINCT T2.StoreID, T2.`City Name`, T1.Region FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode WHERE T2.County = 'Allen County'"
regional_sales,"List the ID, city, state and region for the store type which is fewer between borough and CDP.",COUNT(StoreID) < COUNT(StoreID where Type = 'Borough') < COUNT(StoreID where Type = 'CDP');,"SELECT DISTINCT T2.StoreID, T2.`City Name`, T1.State, T2.Type FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode WHERE T2.Type = 'Borough' OR T2.Type = 'CDP'"
regional_sales,Write down the region and name of the sale team ID of 18 and compare their orders between in-store and online.,sale team ID of 18 refers to _SalesTeamID = 18; COUNT(OrderNumber where Sales Channel = 'In-Store') > COUNT(OrderNumber where Sales Channel = 'Online');,"SELECT T2.Region, T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T2.SalesTeamID = 18 AND T1.`Sales Channel` = 'In-Store' OR T1.`Sales Channel` = 'Online'"
regional_sales,"Calculate the percentage of order via in-store channel of customer ""Medline"".","Medline is the name of the customer; DIVIDE(COUNT(OrderNumber where Sales Channel = 'In-Store' and Customer Names = 'Medline'), COUNT(OrderNumber where Customer Names = 'Medline')) as percentage;",SELECT CAST(SUM(CASE WHEN T1.`Sales Channel` = 'In-Store' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1._CustomerID) FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID WHERE T2.`Customer Names` = 'Medline '
regional_sales,"Describe the customer names and lasting delivery periods for the product of ""Bedroom Furniture"" by wholesale channel in 2019.","delivery period in 2019 means time between placing of an order and the receipt of product and refers to SUBTRACT(DeliveryDate, OrderDate) where SUBSTR(OrderDate, -2 ) = '19'; Sales Channel = 'Wholesale'; Product Name = 'Bedroom Furniture';","SELECT T1.`Customer Names`, T2.DeliveryDate FROM Customers AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._CustomerID = T1.CustomerID INNER JOIN Products AS T3 ON T3.ProductID = T2._ProductID WHERE T2.`Sales Channel` = 'Wholesale' AND T3.`Product Name` = 'Bedroom Furniture' AND T2.OrderDate LIKE '%/%/19'"
regional_sales,Describe the customer names and product names which had over 3800 USD in net profit.,"over 3800 USD in net profit refers to SUBTRACT(Unit Price, Unit Cost) where Net Profit > 3800;","SELECT DISTINCT `Customer Names`, `Product Name` FROM ( SELECT T1.`Customer Names`, T3.`Product Name` , REPLACE(T2.`Unit Price`, ',', '') - REPLACE(T2.`Unit Cost`, ',', '') AS T FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID INNER JOIN Products T3 ON T3.ProductID = T2._ProductID ) WHERE T > 3800"
regional_sales,List the store located cities with regions in no water area of California state.,cities refer to City Name; no water area refers to Water Area = 0;,SELECT DISTINCT T2.`City Name` FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode WHERE T2.State = 'California' AND T2.`Water Area` = '0'
regional_sales,"Calculate the order percentage by ""Carlos Miller"" sales team.","DIVIDE(COUNT(OrderNumber where Sales Team = 'Carlos Miller'), COUNT(OrderNumber)) as percentage;",SELECT CAST(SUM(CASE WHEN T2.`Sales Team` = 'Carlos Miller' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID
regional_sales,"Compare the number of orders between ""Platters"" and ""Serveware"" products.",COUNT(OrderNumber where Product Name = 'Platters') > COUNT(OrderNumber where Product Name = 'Serveware');,"SELECT SUM(CASE WHEN T2.`Product Name` = 'Platters' THEN 1 ELSE 0 END) AS num1 , SUM(CASE WHEN T2.`Product Name` = 'Serveware' THEN 1 ELSE 0 END) AS num2 FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID"
regional_sales,Calculate the total net profit of the store located in highest median income city.,"net profit can be computed as SUBTRACT(Unit Price, Unit Cost); highest median income city refers to City Name where MAX(Median Income);","SELECT SUM(REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID ORDER BY T2.`Median Income` DESC LIMIT 1"
regional_sales,"Among the sales team in South region, write down the numbers of orders made by the sales team ID of one digit.",sales team ID of one digit refers to _SalesTeamID BETWEEN 1 AND 9; numbers of orders refer to COUNT(OrderNumber);,SELECT COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T2.Region = 'South' AND T2.SalesTeamID BETWEEN 1 AND 9 GROUP BY T2.SalesTeamID HAVING COUNT(T1.OrderNumber)
regional_sales,How many orders have order date in 5/31/2018?,orders refer to OrderNumber;,"SELECT SUM(IIF(OrderDate = '5/31/18', 1, 0)) FROM `Sales Orders`"
regional_sales,List out the name of orders which have delivery date of 6/13/2018.,,"SELECT DISTINCT T FROM ( SELECT IIF(DeliveryDate = '6/13/18', OrderNumber, NULL) AS T FROM `Sales Orders` ) WHERE T IS NOT NULL"
regional_sales,How many orders placed were with more than 5 product quantities?,orders refer to OrderNumber; more than 5 product quantities refer to Order Quantity > 5;,"SELECT SUM(IIF(`Order Quantity` > 5, 1, 0)) FROM `Sales Orders`"
regional_sales,"State the full name of state code ""GA"".",,"SELECT T FROM ( SELECT IIF(StateCode = 'GA', State, NULL) AS T FROM Regions ) WHERE T IS NOT NULL"
regional_sales,How many states located in the Midwest region?,,SELECT COUNT(DISTINCT T) FROM ( SELECT CASE  WHEN Region = 'Midwest' THEN StateCode ELSE NULL END AS T FROM Regions ) WHERE T IS NOT NULL
regional_sales,List out the product name of order which has unit cost of 781.22.,,"SELECT T FROM ( SELECT DISTINCT IIF(T1.`Unit Cost` = 781.22, T2.`Product Name`, NULL) AS T FROM `Sales Orders` T1 INNER JOIN Products T2 ON T2.ProductID = T1._ProductID ) WHERE T IS NOT NULL"
regional_sales,State the delivery date of cookware.,Cookware is the name of the product;,"SELECT T FROM ( SELECT DISTINCT IIF(T2.`Product Name` = 'Cookware', T1.DeliveryDate, NULL) AS T FROM `Sales Orders` T1 INNER JOIN Products T2 ON T2.ProductID = T1._ProductID ) WHERE T IS NOT NULL"
regional_sales,How many furniture cushions orders which have date of order in 2018?,"furniture cushions orders refer to OrderNumber where Product Name = 'Furniture Cushions'; date of order in 2018 refers to SUBSTR(OrderDate, -2) = '18'",SELECT SUM(CASE WHEN T1.OrderDate LIKE '%/%/18' AND T2.`Product Name` = 'Furniture Cushions' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID
regional_sales,List out the name of products which have been applied 10% discount.,applied 10% discount refers to Discount Applied = 0.1;,"SELECT T FROM ( SELECT DISTINCT IIF(T1.`Discount Applied` = 0.1, T2.`Product Name`, NULL) AS T FROM `Sales Orders` T1 INNER JOIN Products T2 ON T2.ProductID = T1._ProductID ) WHERE T IS NOT NULL"
regional_sales,Calculate the average net profit of phones which have sales channel of distributor.,"net profit can be computed as SUBTRACT(Unit Price, Unit Cost); AVG(net profit) where Product Name = 'Phones' and Sales Channel = 'Distributor';","SELECT SUM(REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')) / COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE T2.`Product Name` = 'Phones' AND T1.`Sales Channel` = 'Distributor'"
regional_sales,Calculate the average net profit of bar tools which has ordered quantity exceed 5.,"net profit can be computed as SUBTRACT(Unit Price, Unit Cost); AVG(net profit) where Product Name = 'Bar Tools' and Order Quantity > 5;","SELECT SUM(REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')) / COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE T2.`Product Name` = 'Bar Tools' AND T1.`Order Quantity` > 5"
regional_sales,List out the city name of states located in South region.,,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T1.Region = 'South' THEN T2.`City Name` END AS T FROM Regions T1 INNER JOIN `Store Locations` T2 ON T2.StateCode = T1.StateCode ) WHERE T IS NOT NULL
regional_sales,"What is the region of stores which have type of ""Town"" in the list?",,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T2.Type = 'Town' THEN T1.Region END AS T FROM Regions T1 INNER JOIN `Store Locations` T2 ON T2.StateCode = T1.StateCode ) WHERE T IS NOT NULL
regional_sales,How many orders that Medsep Group had made?,Medsep Group is the name of the customer; orders refer to OrderNumber;,SELECT SUM(CASE WHEN T1.`Customer Names` = 'Medsep Group' THEN 1 ELSE 0 END) FROM Customers AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._CustomerID = T1.CustomerID
regional_sales,List out the discount levels applied for all orders from Ole Group.,Ole Group is the name of the customer; discount levels applied refer to Discount Applied NOT NULL;,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T1.`Customer Names` = 'Ole Group' THEN T2.`Discount Applied` END AS T FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID ) WHERE T IS NOT NULL
regional_sales,State the customer name of orders which has shipped date in 7/8/2018.,shipped date in 7/8/2018 refers to ShipDate = '7/8/18',SELECT T FROM ( SELECT DISTINCT CASE  WHEN T2.ShipDate = '7/8/18' THEN T1.`Customer Names` END AS T FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID ) WHERE T IS NOT NULL
regional_sales,"Among the orders placed by Ei, how many orders have quantity greater than 4?",Ei is the name of the customer; orders have quantity greater than 4 refer to OrderNumber WHERE Order Quantity > 4;,SELECT SUM(CASE WHEN T1.`Order Quantity` > 4 AND T2.`Customer Names` = 'Ei ' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID
regional_sales,"Among the orders placed by Pacific Ltd, how many orders have been applied 5% discount ?",orders by Pacific Ltd refer to OrderNumber where Customer Names = 'Pacific Ltd'; applied 5% discount refers to Discount Applied = 0.05;,SELECT SUM(CASE WHEN T1.`Discount Applied` = 0.05 AND T2.`Customer Names` = 'Pacific Ltd' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID
regional_sales,What is the customer names of orders which have unit cost greater than 4000USD?,unit cost greater than 4000USD refers to Unit Cost > 4000;,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T2.`Unit Cost` > 4000 THEN T1.`Customer Names` END AS T FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID ) WHERE T IS NOT NULL
regional_sales,Please list the id and detailed position of all stores in Birmingham city.,Latitude and Longitude coordinates can be used to identify the detailed position of stores; id refers to StoreID;,"SELECT StoreID, Latitude, Longitude FROM `Store Locations` WHERE `City Name` = 'Birmingham'"
regional_sales,Which city has the largest population?,city has the largest population refers to City Name where MAX(Population);,SELECT `City Name` FROM `Store Locations` ORDER BY Population DESC LIMIT 1
regional_sales,How many CDP stores are there in California?,California is a state; CDP stores refer to StoreID where Type = 'CDP';,SELECT SUM(CASE WHEN State = 'California' AND Type = 'CDP' THEN 1 ELSE 0 END) FROM `Store Locations`
regional_sales,Please give the order number and product name of the order which has the lowest unit price.,the lowest unit price refers to MIN(Unit Price);,"SELECT T1.OrderNumber, T2.`Product Name` FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE REPLACE(T1.`Unit Price`, ',', '') = ( SELECT REPLACE(T1.`Unit Price`, ',', '') FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID ORDER BY REPLACE(T1.`Unit Price`, ',', '') LIMIT 1 )"
regional_sales,Which product has the highest net profit in 2019?,"net profit can be computed as SUBTRACT(Unit Price, Unit Cost); the highest net profit in 2019 refers to MAX(Net Profit) where OrderDate LIKE '%/19'; product refers to Product Name;","SELECT T2.`Product Name` FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE T1.OrderDate LIKE '%/%/19' ORDER BY REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '') DESC LIMIT 1"
regional_sales,What is the average unit price of a Cookware product?,AVG(Unit Price where Product Name = 'Cookware');,"SELECT AVG(REPLACE(T1.`Unit Price`, ',', '')) FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE T2.`Product Name` = 'Cookware'"
regional_sales,Please list all sale team names which had orders on 5/31/2018.,had orders on 5/31/2018 refer to OrderDate = '5/31/18'; sale team names refer to Sales Team;,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T1.OrderDate = '5/31/18' THEN T2.`Sales Team` ELSE NULL END AS T FROM `Sales Orders` T1 INNER JOIN `Sales Team` T2 ON T2.SalesTeamID = T1._SalesTeamID ) WHERE T IS NOT NULL
regional_sales,Which sales team name has the least orders in 2019?,"sale team names refer to Sales Team; the least orders in 2019 refer to MIN(COUNT(OrderNumber where SUBSTR(OrderDate, -2) = '19'));",SELECT T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.OrderDate LIKE '%/%/19' GROUP BY T2.`Sales Team` ORDER BY COUNT(T1.OrderNumber) ASC LIMIT 1
regional_sales,"From 2018 to 2020, which year did the George Lewis group have the highest number of orders?","George Lewis refers to Sales Team; the highest number of orders refers to MAX(COUNT(OrderNumber)); which year from 2018 to 2020 refers to SUBSTR(OrderDate, -2) IN ('18', '19', '20') GROUP BY SUBSTR(OrderDate, -2);","SELECT SUBSTR(T1.OrderDate, -2, 2) FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T2.`Sales Team` = 'George Lewis' GROUP BY SUBSTR(T1.OrderDate, -2, 2) ORDER BY COUNT(T1.OrderNumber) DESC LIMIT 1"
regional_sales,What is the percentage of total orders from stores in Orange County in 2018?,"DIVIDE(COUNT(OrderNumber where County = 'Orange County' and SUBSTR(OrderDate, -2) = '18'), COUNT(OrderNumber where SUBSTR(OrderDate, -2) = '18')) as percentage;",SELECT CAST(SUM(CASE WHEN T2.County = 'Orange County' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T1.OrderDate LIKE '%/%/18'
regional_sales,Which order number has the highest unit price?,the highest unit price refers to MAX(Unit Price);,"SELECT OrderNumber FROM `Sales Orders` WHERE REPLACE(`Unit Price`, ',', '') = ( SELECT REPLACE(`Unit Price`, ',', '') FROM `Sales Orders` ORDER BY REPLACE(`Unit Price`, ',', '') DESC LIMIT 1 )"
regional_sales,Which sales team id has the highest number of orders in 2018?,"the highest number of orders in 2018 refers to MAX(COUNT(OrderNumber where SUBSTR(OrderDate, -2) = '18'));",SELECT _SalesTeamID FROM `Sales Orders` WHERE OrderDate LIKE '%/%/18' GROUP BY _SalesTeamID ORDER BY COUNT(_SalesTeamID) DESC LIMIT 1
regional_sales,What is the unit cost of order SO - 000103?,OrderNumber = 'SO - 000103';,"SELECT DISTINCT T FROM ( SELECT IIF(OrderNumber = 'SO - 000103', `Unit Cost`, NULL) AS T FROM `Sales Orders` ) WHERE T IS NOT NULL"
regional_sales,"In 2020, what were the total orders of all stores in Maricopa County?","total orders refer to COUNT(OrderNumber); 2020 refers to SUBSTR(OrderDate, -2) = '20';",SELECT SUM(CASE WHEN T2.County = 'Maricopa County' AND OrderDate LIKE '%/%/20' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID
regional_sales,What is the detailed position of the store which has order SO - 000115?,Latitude and Longitude coordinates can be used to identify the detailed position of stores; store refers to StoreID WHERE OrderNumber = 'SO - 000115';,"SELECT T2.Latitude, T2.Longitude FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T1.OrderNumber = 'SO - 000115'"
regional_sales,Please calculate the total number of orders by each city in 2019.,total number of orders refers to COUNT(OrderNumber); 2019 refers to OrderDate between 01-01-2019 and 31-12-2019; city refers to City Name;,SELECT COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T1.OrderDate LIKE '%/%/19' GROUP BY T2.`City Name` HAVING COUNT(T1.OrderNumber)
regional_sales,Please list the names of customers who have total orders of over 3 in 2018.,"total orders of over 3 in 2018 refer to COUNT(OrderNumber) > 3 where SUBSTR(OrderDate, -2) = '18';","SELECT DISTINCT IIF(COUNT(T2.CustomerID) > 3, T2.`Customer Names`, NULL) FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID WHERE T1.OrderDate LIKE '%/%/18' GROUP BY T1._CustomerID HAVING COUNT(T2.CustomerID)"
regional_sales,What were the total orders of Medsep Group from 2018 to 2020?,"Medsep Group is the name of the customer; total orders refer to COUNT(OrderNumber); from 2018 to 2020 refers to SUBSTR(OrderDate, -2) IN ('18', '19', '20');","SELECT SUM(CASE WHEN SUBSTR(T1.OrderDate, -2) IN ('18', '19', '20') AND T2.`Customer Names` = 'Medsep Group' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID"
regional_sales,Please list the customer names whose order quantity was more than 5 on 6/1/2018.,order quantity was more than 5 on 6/1/2018 refers to Order Quantity > 5 where OrderDate = 6/1/2018;,SELECT T FROM ( SELECT DISTINCT CASE  WHEN SUM(T1.`Order Quantity`) > 5 THEN T2.`Customer Names` END AS T FROM `Sales Orders` T1 INNER JOIN Customers T2 ON T2.CustomerID = T1._CustomerID WHERE T1.OrderDate = '6/1/18' GROUP BY T1._CustomerID ) WHERE T IS NOT NULL
regional_sales,What is the percentage of total orders of Stephen Payne that had a net profit of over 1000?,"Sales Team = 'Stephen Payne'; net profit can be computed as SUBTRACT(Unit Price, Unit Cost); DIVIDE(COUNT(OrderNumber where Sales Team = 'Stephen Payne' and Net Profit > 1000)), (COUNT(OrderNumber where Sales Team = 'Stephen Payne')) as percentage;","SELECT CAST(SUM(CASE WHEN REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '') > 1000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T2.`Sales Team` = 'Stephen Payne'"
regional_sales,How many sales team were from Northeast?,Northeast is the name of the region;,SELECT SUM(CASE WHEN Region = 'Northeast' THEN 1 ELSE 0 END) FROM `Sales Team`
regional_sales,State the name of all city in Maricopa County along with its latitude and longitude.,,"SELECT DISTINCT `City Name`, Latitude, Longitude FROM `Store Locations` WHERE County = 'Maricopa County'"
regional_sales,Which order have the highest unit cost?,order have the highest unit cost refers to OrderNumber where MAX(Unit Cost);,"SELECT OrderNumber FROM `Sales Orders` WHERE REPLACE(`Unit Cost`, ',', '') = ( SELECT REPLACE(`Unit Cost`, ',', '') FROM `Sales Orders` ORDER BY REPLACE(`Unit Cost`, ',', '') DESC LIMIT 1 )"
regional_sales,List all the name of products with the ID of 30 to 40.,products with the ID of 30 to 40 refer to Product Name WHERE ProductID BETWEEN 30 AND 40;,SELECT T FROM ( SELECT CASE  WHEN ProductID BETWEEN 30 AND 40 THEN `Product Name` ELSE NULL END AS T FROM Products ) WHERE T IS NOT NULL
regional_sales,Calculate ratio between the highest unit cost and the lowest unit cost?,"ratio can be calculated as DIVIDE(MAX(Unit_Cost)), MIN(Unit Cost);","SELECT ( SELECT REPLACE(`Unit Cost`, ',', '') FROM `Sales Orders` WHERE REPLACE(`Unit Cost`, ',', '') = ( SELECT REPLACE(`Unit Cost`, ',', '') FROM `Sales Orders` ORDER BY REPLACE(`Unit Cost`, ',', '') DESC LIMIT 1 ) ORDER BY REPLACE(`Unit Cost`, ',', '') DESC LIMIT 1 ) / ( SELECT REPLACE(`Unit Cost`, ',', '') FROM `Sales Orders` WHERE REPLACE(`Unit Cost`, ',', '') = ( SELECT REPLACE(`Unit Cost`, ',', '') FROM `Sales Orders` ORDER BY REPLACE(`Unit Cost`, ',', '') ASC LIMIT 1 ) ORDER BY REPLACE(`Unit Cost`, ',', '') ASC LIMIT 1 )"
regional_sales,Which product was ordered the most in 2018?,"product refers to Product Name; ordered the most in 2018 refers to MAX(COUNT(OrderNumber)) where SUBSTR(OrderDate, -2) = '18';",SELECT T2.`Product Name` FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE T1.OrderDate LIKE '%/%/18' GROUP BY T1._ProductID ORDER BY COUNT(T1._ProductID) DESC LIMIT 1
regional_sales,How many products sold by Adam Hernandez?,products sold by Adam Hernandez refer to SUM(Order Quantity where Sales Team = 'Adam Hernandez');,SELECT SUM(CASE WHEN T2.`Sales Team` = 'Adam Hernandez' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID
regional_sales,List all orders where its products were shipped from Daly City.,shipped from Daly City refers to Store Locations where City Name = 'Daly City'; orders refer to OrderNumber;,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T2.`City Name` = 'Daly City' THEN T1.OrderNumber END AS T FROM `Sales Orders` T1 INNER JOIN `Store Locations` T2 ON T2.StoreID = T1._StoreID ) WHERE T IS NOT NULL
regional_sales,How many orders made by Rochester Ltd?,Rochester Ltd is the name of the customer; orders refer to OrderNumber;,SELECT SUM(CASE WHEN T1.`Customer Names` = 'Rochester Ltd' THEN 1 ELSE 0 END) FROM Customers AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._CustomerID = T1.CustomerID
regional_sales,State the order number where Qualitest ordered the highest product quantity.,Qualitest ordered the highest product quantity refers to Customer Names where MAX(Order Quantity);,SELECT T1.OrderNumber FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID WHERE T2.`Customer Names` = 'Qualitest ' ORDER BY T1.`Order Quantity` DESC LIMIT 1
regional_sales,List the order for all in-store sales along with the products sold.,orders for all in-store sales refer to OrderNumber where Sales Channel = 'In-Store'; products refer to Product Name;,"SELECT DISTINCT T1.OrderNumber, T2.`Product Name` FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE T1.`Sales Channel` = 'In-Store'"
regional_sales,How many online sales were made in May 2018 where products were shipped from Norman?,online sales refer to OrderNumber where Sales Channel = 'Online'; May 2018 refers to OrderDate LIKE '5/%/18'; Norman is the name of the city;,SELECT SUM(CASE WHEN T1.OrderDate LIKE '5/%/18' AND T1.`Sales Channel` = 'Online' AND T2.`City Name` = 'Norman' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID
regional_sales,"Among the products sold in Maricopa County, which was the least sold?",the least sold product refers to Product Name where MIN(Order Quantity);,SELECT T1.`Product Name` FROM Products AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._ProductID = T1.ProductID INNER JOIN `Store Locations` AS T3 ON T3.StoreID = T2._StoreID WHERE T3.County = 'Maricopa County' ORDER BY T2.`Order Quantity` ASC LIMIT 1
regional_sales,State all the order numbers for sales team of Samuel Fowler.,,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T2.`Sales Team` = 'Samuel Fowler' THEN T1.OrderNumber ELSE NULL END AS T FROM `Sales Orders` T1 INNER JOIN `Sales Team` T2 ON T2.SalesTeamID = T1._SalesTeamID ) WHERE T IS NOT NULL
regional_sales,Find the number of baseball ordered in December 2017.,Product Name = 'Baseball'; December 2017 refers to OrderDate LIKE '12/%/17';,SELECT COUNT(T2.OrderNumber) FROM Products AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._ProductID = T1.ProductID WHERE T1.`Product Name` = 'Baseball' AND T2.OrderDate LIKE '12/%/18'
regional_sales,Find the average number of ornaments sold each month in 2018.,"DIVIDE(SUM(Order Quantity where Product Name = 'Ornaments' and OrderDate LIKE '%/18'), 12);",SELECT CAST(SUM(T2.`Order Quantity`) AS REAL) / 12 FROM Products AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._ProductID = T1.ProductID WHERE T1.`Product Name` = 'Ornaments' AND T2.OrderDate LIKE '%/%/18'
regional_sales,Find the percentage of products that were shipped from Burbank in 2018?,"DIVIDE(SUM(Order Quantity where City Name = 'Burbank' and SUBSTR(OrderDate, -2) = '18')), (SUM(Order Quantity where SUBSTR(OrderDate, -2) = '18')) as percentage;",SELECT CAST(SUM(CASE WHEN T3.`City Name` = 'Burbank' THEN T2.`Order Quantity` ELSE 0 END) AS REAL) * 100 / SUM(T2.`Order Quantity`) FROM Products AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._ProductID = T1.ProductID INNER JOIN `Store Locations` AS T3 ON T3.StoreID = T2._StoreID WHERE T2.OrderDate LIKE '%/%/18'
regional_sales,"What is the difference in order number from ""WARE-MKL1006"" and ""WARE-NBV1002""?","""WARE-NBV1002"" and ""WARE-MKL1006"" are both WarehouseCode; difference in order number = Subtract(Count(OrderNumber where WarehouseCode = 'WARE-MKL1006'), Count(OrderNumber where WarehouseCode = 'WARE-NBV1002'))","SELECT SUM(IIF(WarehouseCode = 'WARE-MKL1006', 1, 0)) - SUM(IIF(WarehouseCode = 'WARE-NBV1002', 1, 0)) AS difference FROM `Sales Orders`"
regional_sales,"Describe the product names delivered in 2021 for the customer ""Sundial"".",delivered in 2021 refer to DeliveryDate LIKE '%/21'; 'Sundial' is the Customer Names,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T2.DeliveryDate LIKE '%/%/21' AND T1.`Customer Names` = 'Sundial ' THEN T3.`Product Name` END AS T FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID INNER JOIN Products T3 ON T3.ProductID = T2._ProductID ) WHERE T IS NOT NULL
regional_sales,"Write down the store IDs and region of the state ""Michigan"".","""Michigan"" is the State","SELECT DISTINCT T2.StoreID, T1.Region FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode WHERE T2.State = 'Michigan'"
regional_sales,"Compare the total number of orders between customer ""Apollo Ltd"" and ""Pacific Ltd"".","""Apollo Ltd"" and ""Pacific Ltd"" are both Customer Names; total number of orders refers to COUNT(OrderNumber)","SELECT SUM(CASE WHEN T2.`Customer Names` = 'Apollo Ltd' THEN 1 ELSE 0 END), SUM(CASE WHEN T2.`Customer Names` = 'Pacific Ltd' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID"
regional_sales,"Find the store ID with more orders between ""Aurora"" and ""Babylon"" city.","""Aurora"" refers to City Name = 'Aurora (Township)'; ""Babylon"" refers to City Name = 'Babylong (Town)'; more order refers to Max(Count(OrderNumber))",SELECT T2.StoreID FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T2.`City Name` = 'Aurora (Township)' OR T2.`City Name` = 'Babylon (Town)' GROUP BY T2.StoreID ORDER BY COUNT(T1.OrderNumber) DESC LIMIT 1
regional_sales,"List down the customer names and product names of the order made by ""Anthony Torres"" via distributor channel.","""Anthony Torres"" is the name of Sales Team; distributor channel refers to Sales Channel = 'Distributor'","SELECT DISTINCT T1.`Customer Names`, T4.`Product Name` FROM Customers AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._CustomerID = T1.CustomerID INNER JOIN `Sales Team` AS T3 ON T3.SalesTeamID = T2._SalesTeamID INNER JOIN Products AS T4 ON T4.ProductID = T2._ProductID WHERE T3.`Sales Team` = 'Anthony Torres' AND T2.`Sales Channel` = 'Distributor'"
regional_sales,Mention the customer names and IDs which ordered total net profit of above 5000 USD through online channel.,"IDs refers to CustomerID; total net profit of above 5000 USD refers to SUM(Subtract(Unit Price, Unit Cost)) > 5000","SELECT DISTINCT `Customer Names`, CustomerID FROM ( SELECT T2.`Customer Names`, T2.CustomerID , SUM(REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')) AS T FROM `Sales Orders` T1 INNER JOIN Customers T2 ON T2.CustomerID = T1._CustomerID WHERE T1.`Sales Channel` = 'Online' GROUP BY T2.CustomerID ) WHERE T > 5000"
regional_sales,Find the net profit of the floral products which were delivered in 2021.,"floral product refers to Product Name = 'Floral'; total net profit = SUM(Subtract(Unit Price, Unit Cost)); delivered in 2021 refers to DeliveryDate LIKE '%/21'","SELECT SUM(REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')) FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE T1.DeliveryDate LIKE '%/%/21' AND T2.`Product Name` = 'Floral'"
regional_sales,Count the number of orders made from the store in city with population of 3000000 to 4000000.,number of order refers to OrderNumber; population of 3000000 to 4000000 refers to Population BETWEEN 3000000 AND 4000000,SELECT COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T2.Population BETWEEN 3000000 AND 4000000
regional_sales,Name the products via wholesale channel of the store under Pacific/Honolulu time zone.,products refers to Product Name; via wholesale channel refers to Sales Channel = 'Wholesale',SELECT T FROM ( SELECT DISTINCT CASE  WHEN T3.`Time Zone` = 'Pacific/Honolulu' AND T2.`Sales Channel` = 'Wholesale' THEN T1.`Product Name` ELSE NULL END AS T FROM Products T1 INNER JOIN `Sales Orders` T2 ON T2._ProductID = T1.ProductID INNER JOIN `Store Locations` T3 ON T3.StoreID = T2._StoreID ) WHERE T IS NOT NULL
regional_sales,"List the order numbers and product names which were ordered on 6th June, 2018.",ordered on 6th June 2018 refers to OrderDate = '6/5/18',"SELECT DISTINCT OrderNumber, `Product Name` FROM ( SELECT IIF(T2.OrderDate = '6/6/18', T2.OrderNumber, NULL) AS ""OrderNumber"" , IIF(T2.OrderDate = '6/6/18', T1.`Product Name`, NULL) AS ""Product Name"" FROM Products T1 INNER JOIN `Sales Orders` T2 ON T2._ProductID = T1.ProductID ) WHERE OrderNumber IS NOT NULL AND `Product Name` IS NOT NULL"
regional_sales,"Find the average yearly order by customer Weimei Corp for 2018, 2019 and 2020.","""Weimei Corp"" is the Customer Names; in 2018, 2019 and 2020 refers to SUBSTR (OrderDate, -2) IN ('18', '19', '20') : Average order = Divide (Count (OrderNumber), 3)",SELECT COUNT(T1.OrderNumber) / 3 FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID WHERE (T1.OrderDate LIKE '%/%/18' AND T2.`Customer Names` = 'Weimei Corp') OR (T1.OrderDate LIKE '%/%/19' AND T2.`Customer Names` = 'Weimei Corp') OR (T1.OrderDate LIKE '%/%/20' AND T2.`Customer Names` = 'Weimei Corp')
regional_sales,"Calculate the average monthly order and percentage of warehouse ""WARE-NMK1003"" in 2019. Among them, mention number of orders for floor lamps.","""WARE-NMK1003"" is the WarehouseCode; in 2019 refers to SUBSTR(OrderDate, -2) = '19'; average = Divide (Count (OrderNumber where SUBSTR(OrderDate, -2) = '19'), 12); Percentage = Divide (Count(OrderNumber where WarehouseCode = 'WARE-NMK1003'), Count(OrderNumber)) * 100; 'Floor Lamps' is the Product Name; number of orders refers to Count(OrderNumber)","SELECT CAST(SUM(CASE WHEN T2.WarehouseCode = 'WARE-NMK1003' THEN 1 ELSE 0 END) AS REAL) / 12 , CAST(SUM(CASE WHEN T2.WarehouseCode = 'WARE-NMK1003' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.OrderNumber), COUNT(CASE WHEN T1.`Product Name` = 'Floor Lamps' AND T2.WarehouseCode = 'WARE-NMK1003' THEN T2.`Order Quantity` ELSE NULL END) FROM Products AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._ProductID = T1.ProductID WHERE T2.OrderDate LIKE '%/%/19'"
regional_sales,Indicate the procured dates for the customer whose ID is 11.,ID is 11 refers to _CustomerID = 11;,"SELECT DISTINCT T FROM ( SELECT IIF(_CustomerID = 11, ProcuredDate, NULL) AS T FROM `Sales Orders` ) WHERE T IS NOT NULL"
regional_sales,How many orders through distributor were for the minimum quantity?,"""Distributor"" is the Sales Channel; minimum quantity refers to Min(Order Quantity)",SELECT SUM(CASE WHEN `Order Quantity` = 1 AND `Sales Channel` = 'Distributor' THEN 1 ELSE 0 END) FROM `Sales Orders`
regional_sales,List by ID all sales teams that have sold products at a 10% discount in store.,ID refers to _SalesTeamID; 10% discount refers to Discount Applied = 0.1; 'In-Store' is the Sales Channel,SELECT DISTINCT T FROM ( SELECT CASE  WHEN `Discount Applied` = '0.1' AND `Sales Channel` = 'In-Store' THEN _SalesTeamID ELSE NULL END AS T FROM `Sales Orders` ) WHERE T IS NOT NULL
regional_sales,How many Borough-type stores located in the city of Brooklyn have a population of less than 3 million?,"""Brooklyn"" is the CityName; population of less than 3 million refers to Population < 3000000",SELECT SUM(CASE WHEN Population < 3000000 AND Type = 'Borough' AND `City Name` = 'Brooklyn' THEN 1 ELSE 0 END) FROM `Store Locations`
regional_sales,How many states are in the Midwest region?,,SELECT COUNT(DISTINCT T) FROM ( SELECT CASE  WHEN Region = 'Midwest' THEN State ELSE NULL END AS T FROM Regions ) WHERE T IS NOT NULL
regional_sales,What are the top 10 products with the highest net profit?,"products refers to Product Name; highest net profit = Max(Subtract(Unit Price, Unit Cost))","SELECT T2.`Product Name` FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID GROUP BY T1._ProductID ORDER BY SUM(REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')) DESC LIMIT 10"
regional_sales,Indicate the name of the customers who have placed an order of 3 units in February 2018.,name of customer refers to Customer Names; order of 3 unit refers to Order Quantity = 3; in February 2018 refers to OrderDate LIKE '2/%/18',SELECT T FROM ( SELECT DISTINCT CASE  WHEN T2.`Order Quantity` = 3 AND T2.OrderDate LIKE '2/%/18' THEN T1.`Customer Names` END AS T FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID ) WHERE T IS NOT NULL
regional_sales,"What are the names of the sales teams that have served to customer Apotheca, Ltd?","name of sales team refers to Sales Team; 'Apotheca, Ltd' is the Customer Names","SELECT DISTINCT T3.`Sales Team` FROM Customers AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._CustomerID = T1.CustomerID INNER JOIN `Sales Team` AS T3 ON T3.SalesTeamID = T2._SalesTeamID WHERE T1.`Customer Names` = 'Apotheca, Ltd'"
regional_sales,In which regions are the stores that have shipped products through the WARE-UHY1004 warehouse?,"""WARE-UHY1004"" is the WarehouseCode",SELECT T FROM ( SELECT DISTINCT CASE  WHEN T3.WarehouseCode = 'WARE-UHY1004' THEN T1.Region END AS T FROM Regions T1 INNER JOIN `Store Locations` T2 ON T2.StateCode = T1.StateCode INNER JOIN `Sales Orders` T3 ON T3._StoreID = T2.StoreID ) WHERE T IS NOT NULL
regional_sales,List all the cities where Shawn Torres sells Audio products.,"""Shawn Torres"" is the name of Sales Team; Audio product refers to Product Name = 'Audio'",SELECT T FROM ( SELECT DISTINCT CASE  WHEN T4.`Product Name` = 'Audio' AND T3.`Sales Team` = 'Shawn Torres' THEN T1.`City Name` ELSE NULL END AS T FROM `Store Locations` T1 INNER JOIN `Sales Orders` T2 ON T2._StoreID = T1.StoreID INNER JOIN `Sales Team` T3 ON T3.SalesTeamID = T2._SalesTeamID INNER JOIN Products T4 ON T4.ProductID = T2._ProductID ) WHERE T IS NOT NULL
regional_sales,Lists the name of the product and customer who placed an order on 10/21/18 and it was delivered on 11/21/19.,ordered on 10/21/18 refers to OrderDate = '10/21/18'; delivered on 11/21/19 refers to DeliveryDate = '11/21/19'; name of product refers to Product Name,"SELECT T3.`Product Name`, T1.`Customer Names` FROM Customers AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._CustomerID = T1.CustomerID INNER JOIN Products AS T3 ON T3.ProductID = T2._ProductID WHERE T2.OrderDate = '10/21/18' AND T2.DeliveryDate = '11/21/19'"
regional_sales,"How many stores procured products on October 27, 2018, in the city of Oregon?","October 27, 2018 refers to ProcuredDate = '10/27/18'; 'Oregon' is the State",SELECT SUM(CASE WHEN T1.ProcuredDate = '10/27/18' AND T2.`City Name` = 'Orlando' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID
regional_sales,What sales channels are used the most in the 3 places with the highest median income?,highest median income refers to Max(Median Income),SELECT `Sales Channel` FROM ( SELECT T1.`Sales Channel` FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID ORDER BY T2.`Median Income` DESC LIMIT 3 ) GROUP BY `Sales Channel` ORDER BY COUNT(`Sales Channel`) DESC LIMIT 1
regional_sales,List the 5 sales teams that have made sales with the highest net profits.,"highest net profit = Max(Subtract (Unit Price, Unit Cost))","SELECT T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID ORDER BY REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '') DESC LIMIT 5"
regional_sales,What is the highest discount applied by the store located in a city of the state of Colorado whose land area is 111039036.,highest discount applied refers to Max(Discount Applied),SELECT MAX(T1.`Discount Applied`) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T2.State = 'Colorado' AND T2.`Land Area` = 111039036
regional_sales,How many different time zones are there in the Northeast region?,,SELECT COUNT(DISTINCT T2.`Time Zone`) FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode WHERE T1.Region = 'Northeast'
regional_sales,What type of store is most popular in the South?,in the South refers to Region = 'South'; type of store that is most popular refers to Max(Count(Type)),SELECT DISTINCT CASE WHEN MAX(T2.Population) THEN T2.Type END FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode
regional_sales,To which region does the sales team that has used the WARE-MKL1006 warehouse the most times for its shipments belong?,"""WARE-MKL1006"" is the WarehouseCode; most shipment to region refers to Max(Count(Region))",SELECT T2.Region FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.WarehouseCode = 'WARE-MKL1006' GROUP BY T2.Region ORDER BY COUNT(T1.OrderNumber) DESC LIMIT 1
regional_sales,In which city is the store with the highest sales order unit price located?,highest sales order unit price refers to Max(Unit Price),"SELECT T2.`City Name` FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE REPLACE(T1.`Unit Price`, ',', '') = ( SELECT REPLACE(T1.`Unit Price`, ',', '') FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID ORDER BY REPLACE(T1.`Unit Price`, ',', '') DESC LIMIT 1 ) ORDER BY REPLACE(T1.`Unit Price`, ',', '') DESC LIMIT 1"
regional_sales,How many online purchases did Ole Group make in May 2019?,"""Ole Group"" is the Customer Names; online purchase refers to Sales Channel = 'Online'; made in May 2019 refers to OrderDate LIKE '5/%/19'",SELECT SUM(CASE WHEN T1.`Sales Channel` = 'Online' AND T2.`Customer Names` = 'Ole Group' AND T1.OrderDate LIKE '5/%/19' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID
regional_sales,"How many stores with less need for products, and purchased through a distributor, are located in Washtenaw County?",less need for products refers to Order Quantity = 1; purchased through a distributor refers to Sales Channel = 'Distributor'; 'Harri County' is the County,SELECT SUM(CASE WHEN T1.`Order Quantity` = 1 AND T1.`Sales Channel` = 'Distributor' AND T2.County = 'Washtenaw County' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID
regional_sales,What is the least purchased product by stores in the city of Santa Clarita?,least purchased product refers to Min(Count(Product Name)); 'Santa Clarita' is the City,SELECT T1.`Product Name` FROM Products AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._ProductID = T1.ProductID INNER JOIN `Store Locations` AS T3 ON T3.StoreID = T2._StoreID WHERE T3.`City Name` = 'Santa Clarita' GROUP BY T1.`Product Name` ORDER BY COUNT(T1.`Product Name`) ASC LIMIT 1
regional_sales,At what Latitude and Longitude is the store that has used the WARE-PUJ1005 warehouse the fewest times?,WARE-PUJ1005 is the WarehouseCode; fewest times refers to Min (Count(WarehouseCode)),"SELECT T2.Latitude, T2.Longitude FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T1.WarehouseCode = 'WARE-PUJ1005' GROUP BY T2.StoreID ORDER BY COUNT(T1.WarehouseCode) ASC LIMIT 1"
regional_sales,What percentage of sell orders on 04/04/2020 were for the state of New York?,"sales order on 04/04/2020 refers to OrderDate = '4/4/20'; 'New York' is  the City Name; percentage = Divide (Sum(OrderNumber where City Name = 'New York'), Count (OrderNumber)) * 100",SELECT CAST(SUM(CASE WHEN T2.State = 'New York' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T1.OrderDate = '4/4/20'
regional_sales,What is the average land area of ​​the cities in which stores that purchased products for a unit price of 998.30 are located?,"average land area = Divide (Sum(Land Area), Count(Land Area))",SELECT AVG(T2.`Land Area`) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T1.`Unit Price` = '998.30'
regional_sales,What is the average household income in cities in the state of New Hampshire where there are stores of the type city?,"""New Hampshire"" is the State; average household income = AVG(Household Income)",SELECT AVG(T2.`Household Income`) FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode WHERE T2.State = 'New Hampshire' AND T2.Type = 'City'
regional_sales,How many sales teams are there in the Midwest?,"""Midwest"" is the Region",SELECT SUM(CASE WHEN Region = 'Midwest' THEN 1 ELSE 0 END) FROM `Sales Team`
regional_sales,Indicate order numbers with an order date after 1/1/2018.,order date after 1/1/2018 refers to OrderDate > '1/1/2018',SELECT DISTINCT T FROM ( SELECT CASE  WHEN OrderDate > '1/1/18' THEN OrderNumber ELSE NULL END AS T FROM `Sales Orders` ) WHERE T IS NOT NULL
regional_sales,How many sales channels does the sales team have in the Midwest?,"""Midwest"" is the Region",SELECT COUNT(T1.`Sales Channel`) FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T2.Region = 'Midwest'
regional_sales,Which sales team has the other with the highest unit price?,highest unit price refers to Max(Unit Price),"SELECT T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE REPLACE(T1.`Unit Price`, ',', '') = ( SELECT REPLACE(T1.`Unit Price`, ',', '') FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID ORDER BY REPLACE(T1.`Unit Price`, ',', '') DESC LIMIT 1 ) ORDER BY REPLACE(T1.`Unit Price`, ',', '') DESC LIMIT 1"
regional_sales,Which regions have online sales channels that have the most discounts?,most discount refers to Max(Discount Applied),SELECT T2.Region FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.`Sales Channel` = 'Online' ORDER BY T1.`Discount Applied` DESC LIMIT 1
regional_sales,"Which Apollo Ltd customer's order number has the most expensive unit price, indicating the order date?","""Apollo Ltd"" is the Customer Names; most expensive unit price refers to max(Unit Price)","SELECT T1.OrderNumber, T1.OrderDate FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID WHERE T2.`Customer Names` = 'Apollo Ltd' ORDER BY T1.`Unit Price` DESC LIMIT 1"
regional_sales,"Provide order number, warehouse code of customers Elorac, Corp.","""Elorac, Corp"" is the Customer Names","SELECT DISTINCT T1.OrderNumber, T1.WarehouseCode FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID WHERE T2.`Customer Names` = 'Elorac, Corp'"
regional_sales,Name of customers who have ordered Cocktail Glasses by online sales channel.,"""Cocktail Glasses"" is the Product Name; customer refers to Customer Names",SELECT T FROM ( SELECT DISTINCT CASE  WHEN T3.`Product Name` = 'Cocktail Glasses' AND T2.`Sales Channel` = 'Online' THEN T1.`Customer Names` END AS T FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID INNER JOIN Products T3 ON T3.ProductID = T2._ProductID ) WHERE T IS NOT NULL
regional_sales,Which store in Arizona has the most net profit?,"""Arizona"" is the name of State; most net profit = Max(Subtract( Unit Price, Unit Cost))",SELECT T2.StoreID FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T2.State = 'Arizona' ORDER BY T1.`Unit Price` - T1.`Unit Cost` DESC LIMIT 1
regional_sales,How much more is the Florida store's computer product unit price than the Texas store?,"""Florida"" and ""Texas"" are both the name of State; Computer product refers to Product Name = 'Computers; difference in unit price = Subtract (Unit Price where State = 'Florida', Unit Price where State = 'Texas')",SELECT SUM(CASE WHEN T3.State = 'Florida' THEN T2.`Unit Price` ELSE 0 END) - SUM(CASE WHEN T3.State = 'Texas' THEN T2.`Unit Price` ELSE 0 END) FROM Products AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._ProductID = T1.ProductID INNER JOIN `Store Locations` AS T3 ON T3.StoreID = T2._StoreID WHERE T1.`Product Name` = 'Computers'
regional_sales,"Among sales teams in Midwest region, which sales team has an order quantity greater than 5?",order quantity greater than 5 refers to Order Quantity > 5,SELECT DISTINCT T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T2.Region = 'Midwest' AND T1.`Order Quantity` > 5
regional_sales,Please indicate store id in the state of California that have been applied 20% discount in store.,"""California"" is the name of State; in store refers to Sales Channel = 'In-Store'; 20% discount refers to Discount Applied = '0.2'",SELECT T FROM ( SELECT DISTINCT CASE  WHEN T2.State = 'California' AND T1.`Sales Channel` = 'In-Store' AND T1.`Discount Applied` = 0.2 THEN T2.StoreID END AS T FROM `Sales Orders` T1 INNER JOIN `Store Locations` T2 ON T2.StoreID = T1._StoreID ) WHERE T IS NOT NULL
regional_sales,List the name of the customer with the most number of order quantity from 2018 to 2020.,name of customer refers to Customer Names; from 2018 to 2020 refers to OrderDate between '1/1/2018' and '31/12/2020'; most number of order quantity refers to Order Quantity = 8,SELECT T1.`Customer Names` FROM Customers AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._CustomerID = T1.CustomerID WHERE T2.OrderDate LIKE '%/%/18' OR T2.OrderDate LIKE '%/%/19' OR T2.OrderDate LIKE '%/%/20' ORDER BY T2.`Order Quantity` DESC LIMIT 1
regional_sales,Please indicate total order quantity of product Candles and calculate the percentage of such product among all the orders.,"total order quantity refers to Sum (Order Quantity); 'Candles' is the Products Name; percentage = Divide (Sum(Order Quantity where Product Name = 'Candles'), Sum(Order Quantity)) * 100","SELECT SUM(CASE WHEN T1.`Product Name` = 'Candles' THEN T2.`Order Quantity` ELSE 0 END), CAST(SUM(CASE WHEN T1.`Product Name` = 'Candles' THEN T2.`Order Quantity` ELSE 0 END) AS REAL) * 100 / SUM(T2.`Order Quantity`) FROM Products AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._ProductID = T1.ProductID INNER JOIN `Store Locations` AS T3 ON T3.StoreID = T2._StoreID"
regional_sales,Which region is Joshua Bennet located in?,"""Joshua Bennett"" is the name of Sales Team",SELECT T FROM ( SELECT DISTINCT CASE  WHEN `Sales Team` = 'Joshua Bennett' THEN Region ELSE NULL END AS T FROM `Sales Team` ) WHERE T IS NOT NULL
regional_sales,What is the store id of the store located in the most populous county?,most populous country refers to Max(Population),SELECT CASE WHEN MAX(Population) THEN StoreID END FROM `Store Locations`
regional_sales,How many sales teams are there in the Midwest?,"""Midwest"" is the Region",SELECT SUM(CASE WHEN Region = 'Midwest' THEN 1 ELSE 0 END) FROM `Sales Team`
regional_sales,What is the type of store located in the city with the highest amount of water area?,type of store in City refers to Type = 'City'; highest amount of water area refers to Max(Water Area),SELECT CASE WHEN MAX(`Water Area`) THEN Type END FROM `Store Locations`
regional_sales,How many online orders were shipped during the month of June 2018?,"online orders refers to Sales Channel = 'Online'; shipped during the month of June 2018 refers to SUBSTR(ShipDate, 1, 1) = '6' AND SUBSTR(ShipDate,-2) = '18'","SELECT SUM(IIF(ShipDate LIKE '6/%/18' AND `Sales Channel` = 'Online', 1, 0)) FROM `Sales Orders`"
regional_sales,How much is the discount applied to the order with the highest unit price?,highest unit price refers to Max(Unit Price),"SELECT `Discount Applied` FROM `Sales Orders` WHERE REPLACE(`Unit Price`, ',', '') = ( SELECT REPLACE(`Unit Price`, ',', '') FROM `Sales Orders` ORDER BY REPLACE(`Unit Price`, ',', '') DESC LIMIT 1 ) ORDER BY REPLACE(`Unit Price`, ',', '') DESC LIMIT 1"
regional_sales,What is the name of the product with the highest net profit?,"highest net profit = Max(Subtract (Unit Price, Unit Cost)); name of product refers to Product Name","SELECT T2.`Product Name` FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID ORDER BY REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '') DESC LIMIT 1"
regional_sales,"In the Northeast region, what is the average household income for each city located in the state with the highest number of stores?","average household income = Divide (Sum(Household Income), Count(City Name)); highest number of store refers to Max(Count(StoreID))",SELECT AVG(T2.`Household Income`) FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode WHERE T1.Region = 'Northeast' GROUP BY T2.State ORDER BY COUNT(T2.StoreID) DESC LIMIT 1
regional_sales,"In which region can you find the stores located in the state whose median income is no more than 30,000?","median income no more than 30,000 refers to Median Income < 30,000",SELECT T FROM ( SELECT DISTINCT CASE  WHEN T2.`Median Income` < 30000 THEN T1.Region END AS T FROM Regions T1 INNER JOIN `Store Locations` T2 ON T2.StateCode = T1.StateCode ) WHERE T IS NOT NULL
regional_sales,"In the West, how many stores are there in the city whose land area is below 20,000,000?","""West"" is the Region; land area is below 20,000,000 refers to Land Area < 20,000,000",SELECT SUM(CASE WHEN T1.Region = 'West' AND T2.`Land Area` < 20000000 THEN 1 ELSE 0 END) FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode
regional_sales,What is the name of the customer who purchased the product with the highest net profiit?,"highest net profit = Max(Subtract (Unit Price, Unit Cost)); name of customer refers to Customer Names","SELECT `Customer Names` FROM ( SELECT T1.`Customer Names`, T2.`Unit Price` - T2.`Unit Cost` AS ""net profit"" FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID ) ORDER BY `net profit` DESC LIMIT 1"
regional_sales,"In 2019, how many orders were shipped by the sales team with the highest number of orders in the said year? Provide the name of the sales team.","shipped refers to ShipDate; in 2019 refers to shipped in 2019 refers to SUBSTR(ShipDate, -2) = '19'; order in the said year refers to SUBSTR(OrderDate, -2) = '19'; highest number of order refers to Max(Count(OrderNumber))","SELECT COUNT(T1.OrderNumber), T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.OrderDate LIKE '%/%/19' AND T1.ShipDate LIKE '%/%/19' GROUP BY T2.`Sales Team` ORDER BY COUNT(T1.OrderNumber) DESC LIMIT 1"
regional_sales,"Among the products with an order quantity of no less than 5 that was shipped in the month of May 2019, what is the name of the product with the lowest net profit?","order quantity of no less than 5 refers to Order Quantity > 5; shipped in the month of May 2019 refers to ShipDate LIKE '5/%/19'; lowest net profit = Min(Subtract(Unit Price, Unit Cost)); name of product refers to Products Name","SELECT T2.`Product Name` FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE T1.`Order Quantity` > 5 AND ShipDate LIKE '5/%/19' ORDER BY REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '') ASC LIMIT 1"
regional_sales,What is the detailed coordinates of the store where the product with the 4th highest profit were purchased from?,"detailed coordinates refers to Latitude, Longitude; highest net profit = Max(Subtract(Unit Price, Unit Cost))","SELECT T2.Latitude, T2.Longitude FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID ORDER BY REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '') DESC LIMIT 3, 1"
regional_sales,How many orders were shipped by the sales team with the highest amount of shipped orders in 2020? Give the name of the said sales team.,"shipped refers to ShipDate; in 2020 refers to SUBSTR(ShipDate, -2) = '20'; highest amount of shipped orders refers to Max(Count(OrderNumber))","SELECT COUNT(T1.OrderNumber), T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.ShipDate LIKE '%/%/20' GROUP BY T2.`Sales Team` ORDER BY COUNT(T1.OrderNumber) DESC LIMIT 1"
regional_sales,"Between 2018 to 2020, what is the average amount of shipped orders per year under Carl Nguyen?","shipped refers to ShipDate; between 2018 and 2020 refers to SUBSTR(ShipDate, -2) IN ('18', '19', '20'); 'Carl Nguyen' is the name of Sales Team; average shipped orders per year = Divide (Count(OrderNumber), 3)",SELECT CAST(COUNT(T1.OrderNumber) AS REAL) / 3 FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE (T2.`Sales Team` = 'Carl Nguyen' AND ShipDate LIKE '%/%/18') OR (T2.`Sales Team` = 'Carl Nguyen' AND ShipDate LIKE '%/%/19') OR (T2.`Sales Team` = 'Carl Nguyen' AND ShipDate LIKE '%/%/20')
regional_sales,What is the amount of discount applied to the product with the highest net profit and what is the name of the said product?,"highest net profit refers to Max(Subtract(Unit Price, Unit Cost)); name of product refers to Product Name","SELECT T1.`Unit Price` * T1.`Discount Applied`, T2.`Product Name` FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID ORDER BY REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '') DESC LIMIT 1"
regional_sales,What are the names of the top 3 customers who paid the highest amount of price per order after discount?,"highest price per order after discount refers to Max(Subtract(Multiply (Unit Price, Order Quantity), Discount Applied)); name of customer refers to Customer Names","SELECT `Customer Names` FROM ( SELECT T1.`Customer Names` , REPLACE(T2.`Unit Price`, ',', '') * T2.`Order Quantity` - REPLACE(T2.`Unit Price`, ',', '') * T2.`Discount Applied` AS T FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID ) ORDER BY T DESC LIMIT 3"
regional_sales,Which sales channel was most preferred in commercializing products in January 2020 based on the number of orders placed?,"order refers to OrderDate; in 2020 refers to Substr(OrderDate, -2) = '20'; January refers to Substr(OrderDate, 1, 1) = '1';  most preferred sales channel refers to Sales Channel where Max(Count(OrderNumber))",SELECT `Sales Channel` FROM `Sales Orders` WHERE OrderDate LIKE '1/%/20' GROUP BY `Sales Channel` ORDER BY COUNT(`Sales Channel`) DESC LIMIT 1
regional_sales,Name the product that was registered in the sales order 'SO - 0005951'.,sales order 'SO - 0005951' refers to OrderNumber = 'SO - 0005951'; product refers to Product Name,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T2.OrderNumber = 'SO - 0005951' THEN T1.`Product Name` ELSE NULL END AS T FROM Products T1 INNER JOIN `Sales Orders` T2 ON T2._ProductID = T1.ProductID ) WHERE T IS NOT NULL
regional_sales,Identify the store location and sales team who processed the sales order 'SO - 0001004'.,sales order 'SO - 0001004' refers to OrderNumber = 'SO - 0001004'; store location refers to City Name,"SELECT T3.`Sales Team`, T1.`City Name` FROM `Store Locations` AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._StoreID = T1.StoreID INNER JOIN `Sales Team` AS T3 ON T3.SalesTeamID = T2._SalesTeamID WHERE T2.OrderNumber = 'SO - 0001004'"
regional_sales,"Identify the top customer of the store located in Gilbert, Arizona based on net profit associated with the customer relationship in 2019.","""Gilbert"" is the City Name; 'Arizona' is the name of State; customer relationship in 2019 refers to ProcuredDate LIKE '%/19'; top net profit refers to Max(Subtract(Unit Price, Unit Cost))","SELECT T1.`Customer Names` FROM Customers AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._CustomerID = T1.CustomerID INNER JOIN `Store Locations` AS T3 ON T3.StoreID = T2._StoreID WHERE T3.`City Name` = 'Gilbert' AND T2.ProcuredDate LIKE '%/%/19' ORDER BY REPLACE(T2.`Unit Price`, ',', '') - REPLACE(T2.`Unit Cost`, ',', '') DESC LIMIT 1"
regional_sales,How many sales orders were processed by the store located in Chandler in 2020?,"""Chandler"" is the City Name; orders refers to OrderDate; in 2020 refers to Substr(OrderDate, -2) = '20'",SELECT SUM(CASE WHEN T2.`City Name` = 'Chandler' AND T1.OrderDate LIKE '%/%/20' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID
regional_sales,What is the average household income of Glendale?,"""Glendale"" is the City Name; Average household income refers to avg(Household Income)",SELECT AVG(`Household Income`) FROM `Store Locations` WHERE `City Name` = 'Glendale'
regional_sales,What was the best discount applied to sales orders in 2020?,"sales orders in 2020 refers to Substr(OrderDate, -2) = '20'; best discount applied refers to Max(Discount Applied)",SELECT MAX(`Discount Applied`) FROM `Sales Orders` WHERE OrderDate LIKE '%/%/20'
european_football_1,What is the most consecutive games tied by Ebbsfleet as an away team in the 2008 season?,consecutive games mean happen one after the other without interruption and refer to Date; tied refers to FTR = 'D';,SELECT COUNT(*) FROM matchs WHERE season = 2008 AND AwayTeam = 'Ebbsfleet' AND FTR = 'D'
european_football_1,"Of all the divisions in the world, what percentage of them belong to England?","DIVIDE(COUNT(division where country = 'England'), COUNT(division)) as percentage;",SELECT CAST(COUNT(CASE WHEN country = 'England' THEN division ELSE NULL END) AS REAL) * 100 / COUNT(division) FROM divisions
european_football_1,"What percentage of games won, games lost and games drawn does Cittadella have as a home team in total?","Percentage of games won = DIVIDE(COUNT(FTR = 'H' where HomeTeam = 'Cittadella'), COUNT(Div where HomeTeam = 'Cittadella')) as percentage; Percentage of games lost = DIVIDE(COUNT(FTR = 'A' where HomeTeam = 'Cittadella')), COUNT(Div where HomeTeam = 'Cittadella') as percentage; percentage of games drawn = DIVIDE(SUM(FTR = 'D'where HomeTeam = 'Cittadella'), COUNT(Div where HomeTeam = 'Cittadella')) as percentage;
","SELECT CAST(COUNT(CASE WHEN FTR = 'H' THEN 1 ELSE NULL END) / COUNT(HomeTeam) AS REAL) * 100, CAST(COUNT(CASE WHEN FTR = 'A' THEN 1 ELSE NULL END) AS REAL) / COUNT(HomeTeam), CAST(COUNT(CASE WHEN FTR = 'D' THEN 1 ELSE NULL END) AS REAL) / COUNT(HomeTeam) FROM matchs WHERE HomeTeam = 'Cittadella'"
european_football_1,"Of all the teams that played as a team away against Caen in the 2010 season, which one has the highest winning percentage?","Caen refers to HomeTeam; which one refers to AwayTeam; the highest winning percentage = MAX(DIVIDE(COUNT(FTR = 'A' where HomeTeam = 'Caen', season = '2010')), COUNT(Div where HomeTeam = 'Caen', season = '2010')) as percentage;",SELECT AwayTeam FROM matchs WHERE HomeTeam = 'Caen' AND season = 2010 AND FTR = 'A' GROUP BY AwayTeam ORDER BY COUNT(AwayTeam) DESC LIMIT 1
european_football_1,What percentage of matches played on 2005/07/30 belong to the F1 division?,"Division refers to Div; DIVIDE(COUNT(Div = 'F1', Date = '2005/07/30'), COUNT(Div, Date = '2005/07/30')) as percentage;",SELECT CAST(SUM(CASE WHEN Div = 'F1' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Div) FROM matchs WHERE Date = '2005-07-30' 
european_football_1,What percentage of all tied games did the Sassuolo team play in?,"tied games refer FTR = 'D'; DIVIDE(COUNT(Div where FTR = 'D', HomeTeam = 'Sassuolo' or AwayTeam = 'Sassuolo'), COUNT(Div where HomeTeam = 'Sassuolo' or AwayTeam = 'Sassuolo')) as percentage;",SELECT CAST(SUM(CASE WHEN HomeTeam = 'Sassuolo' OR AwayTeam = 'Sassuolo' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(FTR) FROM matchs WHERE FTR = 'D'
european_football_1,What is the percentage whereby the away team scored 2 goals during the 2017 seasons?,"scored 2 goals refers to FTAG = 2, which is short name for Final-time Away-team Goals; DIVIDE(COUNT(Div where season = 2017, FTAG = '2'), COUNT(Div where season = 2017)) as percentage;",SELECT CAST(SUM(CASE WHEN FTAG = 2 THEN 1 ELSE 0 END) / COUNT(FTAG) AS REAL) * 100 FROM matchs WHERE season = 2017
european_football_1,What is the name of all the teams that played in the EFL League One division?,all the teams include both HomeTeam and AwayTeam; name = 'EFL League One'; DIV = 'E2';,"SELECT T1.HomeTeam,T1.AwayTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div=T2.division WHERE T2.name = 'EFL League One' and T1.Div = 'E2' "
european_football_1,How many teams playing in divisions in Greece have ever scored 4 or more goals?,"teams include both HomeTeam and AwayTeam; country = 'Greece'; scored 4 or more goals refer to FTAG≥4, which is short name for Final-time Away-team Goals;",SELECT COUNT(DISTINCT CASE WHEN T1.FTHG >= 4 THEN HomeTeam ELSE NULL end) + COUNT(DISTINCT CASE WHEN T1.FTAG >= 4 THEN AwayTeam ELSE NULL end) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.country = 'Greece' 
european_football_1,How many matches played in the 2019 season of Scottish Championship league were ended with an equal result of 2-2?,matches refer to Div; Scottish Championship is a name of the league; equal result of 2-2 refers to FTAG = 2 AND FTHG = 2;,SELECT COUNT(T1.Div) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2019 AND T2.name = 'Scottish Championship' AND T1.FTAG = 2 AND T1.FTHG = 2
european_football_1,Which 2 Scottish teams scored 10 goals playing as a local team and in which seasons?,"local team refers to HomeTeam; Scottish means belong to the country = 'Scotland'; scored 10 goals refer to FTHG = 10, which is short name for Final-time Away-team Goals;",SELECT T1.HomeTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.country = 'Scotland' AND T1.FTHG = 10
european_football_1,"From the Spanish LaLiga division in the 2017 season, which team won the most times as a local team and by what percentage?","local team refers to HomeTeam; Spanish means belong to the country = 'Spain'; LaLiga is a name of division; won as a local team refers to FTR = 'H', where H stands for home victory; DIVIDE(COUNT(Div where name = 'LaLiga', country = 'Spain', season = 2017, FRT = 'H'), COUNT(Div where name = 'LaLiga', country = 'Spain', season = 2017)) as percentage;","SELECT T1.HomeTeam HWHT , CAST(COUNT(CASE WHEN T1.FTR = 'H' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(HomeTeam) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'LaLiga' AND T2.country = 'Spain' AND T1.season = 2017"
european_football_1,How many teams that played in the 2012 season belong to any of the English divisions and what percentage play in each of the divisions?,matches = Div,"SELECT ( SELECT COUNT(T1.Div) AS total FROM matchs T1 INNER JOIN divisions T2 ON T2.division = T1.Div WHERE T2.country = 'England' AND T1.season = 2012 ) AS num , CASE WHEN 1 THEN T.result END AS percentage FROM ( SELECT 100.0 * COUNT(T1.Div) / ( SELECT COUNT(T1.Div) FROM matchs T1 INNER JOIN divisions T2 ON T2.division = T1.Div WHERE T2.country = 'England' AND T1.season = 2012 ) AS result FROM matchs T1 INNER JOIN divisions T2 ON T2.division = T1.Div WHERE T2.country = 'England' AND T1.season = 2012 GROUP BY T2.division ) AS T"
european_football_1,What is the highest final-time score across all divisions in the 2021 season? Which team was the team that made up that score?,"MAX(SUM where FTHG, FTAG, season = 2021);","SELECT ( SELECT MAX(MAX(FTAG), MAX(FTHG)) FROM matchs WHERE season = 2021 ) AS T1, AwayTeam FROM matchs WHERE season = 2021 AND FTHG = T1 OR FTAG = T1"
european_football_1,What is the name of the home team in division P1 with the highest final time goal in all seasons?,the highest final time goal refers to MAX(FTHG); P1 = Div;,SELECT HomeTeam FROM matchs WHERE Div = 'P1' AND season = 2021 ORDER BY FTHG DESC LIMIT 1
european_football_1,What was the difference in home team and away team win percentages across all divisions in 2010?,"2010 refers to season = 2010; SUBTRACT(DIVIDE(COUNT(Div where FTR = 'H', season = 2010), COUNT(Div where season = 2010)), COUNT(Div where FTR = 'A', season = 2010), COUNT(Div where season = 2010)) as percentage;",SELECT CAST(COUNT(CASE WHEN FTR = 'H' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(FTR) - CAST(COUNT(CASE WHEN FTR = 'A' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(FTR) DIFFERENCE FROM matchs WHERE season = 2010
european_football_1,Which division had the most draft matches in the 2008 season?,the most draft matches refer to MAX(COUNT(Div)) where FTR = 'D';,SELECT Div FROM matchs WHERE season = 2008 AND FTR = 'D' GROUP BY Div ORDER BY COUNT(FTR) DESC LIMIT 1
european_football_1,"Which team won the match in the EC division on January 20, 2008 at home?","won at home refers to FTR = 'H'; January 20, 2008 refers to Date = '2008-01-20'; EC division refers to Div = 'EC';",SELECT HomeTeam FROM matchs WHERE Div = 'EC' AND Date = '2008-01-20' AND FTR = 'H'
european_football_1,"What is the name of the division in which Club Brugge and Genk competed on September 13, 2009?","September 13, 2009 refers to Date = '2009-09-13'; Club Brugge refers to HomeTeam; Genk refers to AwayTeam;",SELECT T2.name FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.Date = '2009-09-13' and T1.HomeTeam = 'Club Brugge' AND T1.AwayTeam = 'Genk'
european_football_1,How many matches were played in the Scottish Premiership division from 2006 to 2008?,Scottish Premiership is a name of division; from 2006 to 2008 means seasons between 2006 and 2008;,SELECT COUNT(T1.Div) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Scottish Premiership' AND (T1.season BETWEEN 2006 AND 2008)
european_football_1,"In which division was the match between Hibernian, the away team, and Hearts, the home team, played? To which country does this division belong?",FALSE;,"SELECT DISTINCT T2.division,T2.country FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.HomeTeam = 'Hearts' AND T1.AwayTeam = 'Hibernian'"
european_football_1,Which away team in the division of Bundesliga has the highest final time goals?,Bundesliga is a name of division; the highest final time goals refers to MAX(FTAG);,SELECT T1.AwayTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div=T2.division WHERE T2.name = 'Bundesliga' ORDER BY T1.FTAG DESC LIMIT 1
european_football_1,Please provide the names of any three away teams that competed in the Italian divisions.,"Italian means belong to country = 'Italy"";",SELECT T1.AwayTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div=T2.division WHERE T2.country = 'Italy' LIMIT 3
european_football_1,What is the name of the division that has had the lowest number of draft matches in the 2019 season?,the lowest number of draft matches refers to MIN(COUNT(FTR = 'D'));,SELECT T2.name FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2019 AND T1.FTR = 'D' GROUP BY T2.division ORDER BY COUNT(FTR) LIMIT 1
european_football_1,How many times did Valencia's home team win in the LaLiga division?,LaLiga is a name of the division; Valencia's home team refers to HomeTeam = 'Valencia'; win refers to FTR = 'H';,SELECT COUNT(T1.HomeTeam) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'LaLiga' AND T1.HomeTeam = 'Valencia' AND T1.FTR = 'H'
european_football_1,In how many matches in the Seria A division did both teams have equal goals?,"Seria A is a name of division; equal goals refers to FTR = 'D', where D stands for draft;",SELECT COUNT(T1.FTR) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Seria A' AND T1.FTR = 'D'
european_football_1,How many football divisions does England have?,England is the name of country;,SELECT COUNT(division) FROM divisions WHERE country = 'England'
european_football_1,What's the name of the football division in the Netherlands?,Netherlands is the name of country;,SELECT name FROM divisions WHERE country = 'Netherlands'
european_football_1,"Who is the winner of the game happened on 2009/10/10, between ""East Fife"" and ""Dumbarton""?",2009/10/10 is a date; the winner refers to FTR = 'A'; East Fife and Dumbarton are name of teams where HomeTeam = 'East Fife'; AwayTeam = 'Dumbarton';,SELECT CASE WHEN FTR = 'H' THEN 'East Fife' ELSE 'Dumbarton' END WINNER FROM matchs WHERE Date = '2009-10-10' AND HomeTeam = 'East Fife' AND AwayTeam = 'Dumbarton'
european_football_1,What was the final score for the game Bursaspor vs Denizlispor on 2009/4/26?,"Bursaspor vs Denizlispor are names of teams where HomeTeam = 'Bursaspor' and AwayTeam = 'Denizlispor'; Date = '2009-04-26'; final score refers to FTHG, FTAG;","SELECT FTHG, FTAG FROM matchs WHERE Date = '2009-04-26' AND HomeTeam = 'Bursaspor' AND AwayTeam = 'Denizlispor'"
european_football_1,When did the first match that score more than 10 goals happen?,"score more than 10 goals refers to SUM(FTHG, FTAG)>10, which are short names for Final-time Home-team Goals and Final-time Away-team Goals; the first means the earliest and refers to MIN(Date);",SELECT MIN(Date) FROM matchs WHERE FTHG + FTAG > 10
european_football_1,"For the Ligue 2 game that made the most goals, who is the winner of that game?","Ligue 2 is the name of division; the most goals refer to MAX(SUM(FTHG, FTAG)) which are short names for Final-time Home-team Goals and Final-time Away-team Goals; winner refers to FTR = 'A';",SELECT CASE WHEN T1.FTR = 'H' THEN T1.HomeTeam ELSE T1.AwayTeam END WINNER FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Ligue 2' ORDER BY T1.FTAG + T1.FTHG DESC LIMIT 1
european_football_1,How many Away Victories happened on 2016/3/27 in the LaLiga 2 division?,Away victories refer to FTR = 'A'; LaLiga 2 is the name of division; Date = '2016-03-27';,SELECT COUNT(T1.FTR) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'LaLiga 2' AND T1.Date = '2016-03-27' AND T1.FTR = 'A'
european_football_1,How many draw games happened on 2018/8/7 for National League?,National League is the name of division; Date = '2018-08-07'; draw refers to FTR = 'D'; games refer to Div;,SELECT COUNT(T1.FTR) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'National League' AND T1.Date = '2018-08-07' AND T1.FTR = 'D'
european_football_1,Which country had the game that Away team made the most goals?,"the most goals refer to MAX(FTAG), which is a short name for Final-time Away-team Goals;",SELECT T2.country FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division GROUP BY T2.country ORDER BY SUM(T1.FTAG) DESC LIMIT 1
european_football_1,"For a game had a score of 1-8 in the year of 2011, what division was that game in? Give the full name of the division.",2011 refers to season; a score of 1-8 refers to FTHG = '1' and FTAG = '8';,"SELECT T2.division, T2.name FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2011 AND T1.FTHG = 1 AND T1.FTAG = 8"
european_football_1,Which division had the most games with more than 5 total field goals on 2020/2/22? Give the full name of the division?,"more than 5 total field goals refers to SUM(FTHG, FTAG)>5, which are short names for Final-time Home-team Goals and Final-time Away-team Goals; 2020/2/22 is a date;","SELECT T2.division, T2.name FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.Date = '2020-02-22' AND T1.FTAG + T1.FTHG > 5 ORDER BY T1.FTAG + T1.FTHG DESC LIMIT 1"
european_football_1,Give the full name of the divison that had the most 0-0 games.,the most 0-0 games means a no-score draw and refers to MAX(COUNT(Div where FTHG = '0' and FTAG = '0'));,SELECT T2.name FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.FTAG = 0 AND T1.FTHG = 0 GROUP BY T2.division ORDER BY COUNT(T1.FTAG) DESC LIMIT 1
european_football_1,"How many Scottish League One games took place on the day that ""Pro Vercelli"" and ""Pescara""had a 5-2 game?",Pro Vercelli and Pescara are names of teams; HomeTeam = 'Pro Vercelli'; AwayTeam = 'Pescara'; 5-2 is a score where FTHG = '5' and FTAG = '2'; Scottish League One is a name of division; games refer to Div;,SELECT COUNT(T1.Date) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Scottish League One' AND T1.Date = ( SELECT Date FROM matchs WHERE FTHG = 5 AND FTAG = 2 AND HomeTeam = 'Pro Vercelli' AND AwayTeam = 'Pescara' )
european_football_1,List the number of games that ended up with 5-0 in Greece.,5-0 is a score where FTHG = '5' and FTAG = '0'; Greece is a name of country; games refer to Div;,SELECT COUNT(T1.Div) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.country = 'Greece' AND T1.FTHG = 5 AND T1.FTAG = 0
european_football_1,Which country did Bradford Team belongs to?,Bradford team refers to HomeTeam = 'Bradford' or AwayTeam = 'Bradford';,SELECT DISTINCT T2.country FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.HomeTeam = 'Bradford' OR T1.AwayTeam = 'Bradford'
european_football_1,How many Eredivisie teams have played in 2008?,Eredivisie is the name of division; 2008 refers to season; teams refer to HomeTeam;,SELECT COUNT(DISTINCT T1.HomeTeam) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Eredivisie' AND T1.season = 2008
european_football_1,What's the home win ratio of the Bundesliga division in 2021?,"home win refers to FTR = 'H', where H stands for home victory; season = '2021'; Bundesliga is a name of division; DIVIDE(COUNT(Div where FTR = 'H, season = '2021' and name = 'Bundesliga'), COUNT(Div where season = '2021' and name = 'Bundesliga')) as percentage;",SELECT CAST(COUNT(CASE WHEN T1.FTR = 'H' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.FTR) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2021 AND T2.name = 'Bundesliga'
european_football_1,"For all the games ended up with 1-1, what percentage of them are from Liga NOS division?","1-1 is a score where FTHG = '1' and FTAG = '1'; Liga NOS is the name of division; DIVIDE(COUNT(Div where FTHG = '1', FTAG = '1', name = 'Liga NOS'), COUNT(Div where FTHG = '1' and FTAG = '1')) as percentage;",SELECT CAST(COUNT(CASE WHEN T2.name = 'Liga NOS' THEN T1.Div ELSE NULL END) AS REAL) * 100 / COUNT(T1.Div) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.FTHG = 1 AND FTAG = 1
european_football_1,How many matches were held during the 2021 season's Premier League?,Premier League is the name of division;,SELECT COUNT(T1.Div) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2021 AND T2.name = 'Premier League'
european_football_1,Which team was the home team in the match of the Bundesliga division on 2020/10/2?,Bundesliga is the name of division; Date = '2020/10/2';,SELECT T1.HomeTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.Date = '2020-10-02' AND T2.name = 'Bundesliga'
european_football_1,Which team won the match of the Bundesliga division on 2020/10/2?,Bundesliga is the name of division; Date = '2020/10/2'; won the match refers to FTR = 'H';,SELECT CASE WHEN T1.FTR = 'H' THEN T1.HomeTeam WHEN T1.FTR = 'A' THEN T1.AwayTeam END WINNER FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.Date = '2020-10-02' AND T2.name = 'Bundesliga'
european_football_1,Which team has the most victories as the home team in matches of the Bundesliga division?,Bundesliga is the name of division; the most victories as the home team refers to MAX(COUNT(FTR = 'H'));,SELECT T1.HomeTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Bundesliga' AND T1.FTR = 'H' GROUP BY T1.HomeTeam ORDER BY COUNT(T1.FTR) DESC LIMIT 1
european_football_1,How many times did the team Werder Bremen win as the away team in matches of the Bundesliga division?,"Bundesliga is the name of division; win as the away team refers to FTR = 'A', where 'A' stands for away victory;",SELECT COUNT(T1.Div) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Bundesliga' AND T1.AwayTeam = 'Werder Bremen' AND T1.FTR = 'A'
european_football_1,How many matches of the Bundesliga division ended with an away victory in the 2021 season?,"Bundesliga is the name of division; away victory refers to FTR = 'A', where 'A' stands for away victory;",SELECT COUNT(T1.Div) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Bundesliga' AND T1.FTR = 'A' AND T1.season = 2021
european_football_1,"Of the matches in all seasons of the Bundesliga division, how many of them ended with a tie?","Bundesliga is the name of division; tie refers to FTR = 'D', where D stands for draft;",SELECT COUNT(T1.Div) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Bundesliga' AND T1.FTR = 'D'
european_football_1,How many home victories does the Bundesliga division have in more or less than the Premier League division in the 2021 season?,"Bundesliga and the Premier League are names of division; home victories refer to FTR = 'H', where H stands for home victory; SUBTRACT(COUNT(FTR = 'H' where season = 2021, name = 'Bundesliga'), COUNT(FTR = 'H' where season = 2021, name = 'Premier League'));",SELECT COUNT(CASE WHEN T2.name = 'Bundesliga' THEN 1 ELSE NULL END) - COUNT(CASE WHEN T2.name = 'Premier League' THEN 1 ELSE NULL END) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2021 AND T1.FTR = 'H'
european_football_1,Please list the home teams in the matches of the Bundesliga division that ended with a home victory in the 2021 season.,"Bundesliga is the name of division; home victory refers to refer to FTR = 'H', where H stands for home victory;",SELECT DISTINCT T1.HomeTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2021 AND T1.FTR = 'H' AND T2.name = 'Bundesliga'
european_football_1,"Which team had more home victories in the 2021 season's matches of the Bundesliga division, Augsburg or Mainz?",Bundesliga is the name of division; more home victories refer to MAX(FTR = 'H)'; Augsburg and Mainz are names of teams and refer to HomeTeam;,SELECT CASE WHEN COUNT(CASE WHEN T1.HomeTeam = 'Augsburg' THEN 1 ELSE NULL END) - COUNT(CASE WHEN T1.HomeTeam = ' Mainz' THEN 1 ELSE NULL END) > 0 THEN 'Augsburg' ELSE 'Mainz' END FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2021 AND T1.FTR = 'H'
european_football_1,Which team had the most final-time home-team goals in the 2021 season's matches of the Bundesliga division?,Bundesliga is the name of division; the most final-time home-team goals refers to MAX(FTHG);,SELECT T1.HomeTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Bundesliga' AND T1.season = 2021 ORDER BY T1.FTHG DESC LIMIT 1
european_football_1,How many final-time home-team goals were there in total in all the matches of the Bundesliga division in the 2021 season?,Bundesliga is the name of division; final-time home-team goals refers to FTHG;,SELECT SUM(T1.FTHG) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Bundesliga' AND T1.season = 2021
european_football_1,What's the winning rate of Club Brugge in the 2021 Premier League?,"Premier League is name of division; season = 2021; Club Brugge is name of team; Club Brugge wins implies HomeTeam = 'Club Brugge' and FTR = 'H' and AwayTeam = 'Club Brugge' and FTR = 'A'; DIVIDE(SUM(COUNT(FTR = 'H' where HomeTeam = 'Club Brugge', name = 'Premier League', season = 2021), COUNT(FTR = 'A'where AwayTeam = 'Club Brugge', name = 'Premier League', season = 2021)), COUNT(Div where name = 'Premier League', season = 2021));",SELECT CAST(COUNT(CASE WHEN T1.FTR = 'H' THEN 1 ELSE NULL END) + COUNT(CASE WHEN T1.FTR = 'A' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(t1.FTR) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2021 AND T1.AwayTeam = 'Club Brugge' OR T1.HomeTeam = 'Club Brugge'
professional_basketball,"Among the winning game from the team, what is the percentage of the winning was home game.","percentage of winning at the home = Divide(homeWon, won) * 100",SELECT CAST(homeWon AS REAL) * 100 / won  FROM teams
professional_basketball,Which team(s) has greater than 75% lost among all the games played.,"greater than 75% lost refers to Divide(lost, games) > 0.75; team refers to tmID",SELECT name FROM teams WHERE CAST(lost AS REAL) * 100 / games > 75
professional_basketball,List the team name and the total wins of the team in year 2005 which has greater winning from the previous year.,2005 refers to year = 2005 ; previous year refers to year = 2004; team with greater winning than previous year refers to Won where year = 2005 > Won where year = 2004; team name refers to tmID,"SELECT T1.name, T1.won FROM teams AS T1 INNER JOIN ( SELECT * FROM teams WHERE year = 2004 ) AS T2 on T1.tmID = T2.tmID WHERE T1.year = 2005 and T1.won > T2.won"
professional_basketball,"For team who has more home won than home lost more than 80%, list the team name and the offense points.","home won than home lost more than 80% refers to Divide(Subtract(homeWon, homeLost), games) > 0.8; offense point refers to o_fgm","SELECT name, o_pts FROM teams WHERE CAST((homeWon - homeLost) AS REAL) * 100 / games > 80"
professional_basketball,What is the percentage of the teams who had post season (playoff) were ranked number 1?,"had post season (play off) refers to playoff is not null; percentage = Divide (Count(Team where rank = 1, Count(Team))) * 100",SELECT CAST(SUM(CASE WHEN rank = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(name) FROM teams
professional_basketball,Who is the coach for 'BOS' team in year 1950. List the coach ID together with the number of game won and lost.,'BOS' is the tmID; 1950 refers to year = 1950; number of game won refers to won; number of game lost refers to lost,"SELECT coachID, won, lost FROM coaches WHERE year = 1950 AND tmID = 'BOS'"
professional_basketball,Who is the longest serving coach from year 1970 to 1980. List the coach ID and the team(s) he served.,1970 to 1980 refers to year between 1970 and 1980; longest serving coach Max(Count(coachID)); team(s) he served refers to tmID,"SELECT coachID, tmID FROM coaches WHERE year BETWEEN 1970 AND 1980 ORDER BY stint DESC LIMIT 1"
professional_basketball,"In year 2000, who are the coaches with more than 50 games won. List the coachID, team name and number of game won at home game.",more than 50 games won refers to won > 50,"SELECT T1.coachID, T2.name, T2.won FROM coaches AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = 2000 AND T2.won > 50"
professional_basketball,"List all the coaches with more game lost than won from year 2000-2010. List the coach ID, team name and year.",from year 2000 to 2010 refers to year between 2000 and 2010; more game lost then won refers to lost > won,"SELECT DISTINCT T1.coachID, T2.tmID, T1.year FROM coaches AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year BETWEEN 2000 AND 2010 AND T2.lost > T2.won"
professional_basketball,"Which are the teams coached by 'adelmri01' from year 1990-1995. List the team name, year and offense point.",year 1990-1995 refers to year between 1990 and 1995; 'adelmri01' is the coachID; offense point refers to o_fgm,"SELECT T2.name, T1.year, T2.o_pts FROM coaches AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year BETWEEN 1990 AND 1995 AND T1.coachID = 'adelmri01'"
professional_basketball,Which team(s) had 90% games won. List the coach ID for the team and year played.,"team with 90% games won refers to Divide (won, games) > 0.9","SELECT DISTINCT T2.name, T1.year, T1.coachID FROM coaches AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID WHERE CAST(T2.won AS REAL) * 100 / T2.games > 90"
professional_basketball,"What is the percentage of player who won ""All-Defensive First Team"" from 1980 - 2000 is from 'NY'.","""All-Defensive First Team"" is the award; ' NY' is the birthState; 1980 to 2000 refers to year between 1980 and 2000; percentage = Divide (Count(playerID where birthState = 'NY'), Count(playerID)) * 100",SELECT COUNT(DISTINCT T1.playerID) FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T1.birthState = 'NY' AND T2.award = 'All-Defensive First Team' AND T2.year BETWEEN 1980 AND 2000
professional_basketball,What division did the team coached by the winner of the 1977 NBA Coach of the Year award play in in 1976?,"""NBA Coach of the Year"" is the award; in 1977 refers to year = 1977; in 1976 refers to year = 1976; division refers to divisionID",SELECT DISTINCT T3.divID FROM awards_coaches AS T1 INNER JOIN coaches AS T2 ON T1.coachID = T2.coachID INNER JOIN teams AS T3 ON T2.tmID = T3.tmID WHERE T1.year = 1977 AND T1.award = 'NBA Coach of the Year' AND T3.year = 1976
professional_basketball,Which coach of the Chicago Bulls during the year 1981 won the NBA Coach of the Year award in the 1970s?,"""Chicago Bull"" is the name of team; during the year 1981 refers to year = 1981; 'NBA Coach of the Year' is the award; in the 1970s refers to year between 1970 to 1979",SELECT DISTINCT T2.coachID FROM coaches AS T1 INNER JOIN awards_coaches AS T2 ON T1.coachID = T2.coachID INNER JOIN teams AS T3 ON T3.tmID = T1.tmID WHERE T2.award = 'NBA Coach of the Year' AND T2.year BETWEEN 1970 AND 1979 AND T1.year = 1981 AND T3.name = 'Chicago Bulls'
professional_basketball,What is the nickname of the NBA player whose team competed in the Western Conference in the season 2006 and who had a total of two blocks?,completed in the Western conference refers to conference = 'West'; in season 2006 refers to season_id = 2006; total of two blocks refers to blocks = 2; nickname refers to nameNick,SELECT T2.nameNick FROM player_allstar AS T1 INNER JOIN players AS T2 ON T1.playerID = T2.playerID WHERE T1.blocks = 2 AND T1.conference = 'West' AND T1.season_id = 2006
professional_basketball,In what year did the only team to beat the Houston in the final round of postseason series games earn its lowest ranking?,beat the Huston refers to tmIDLoser = 'HSM';  in final round of post season refers to round = 'DSF',SELECT T2.year FROM series_post AS T1 INNER JOIN teams AS T2 ON T1.tmIDWinner = T2.tmID WHERE T1.round = 'DSF' AND T1.tmIDLoser = 'HSM' ORDER BY T2.rank ASC LIMIT 1
professional_basketball,What is the birth date of the player with the most assists during the 1985 All-Star season?,most assist refers to Max(assists); in 1985 All Star season refers to season_id = 1985,SELECT T1.birthDate FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T2.season_id = 1985 ORDER BY T2.assists DESC LIMIT 1
professional_basketball,"Which player, born in Winter Haven, played 12 minutes per season during the 1980s in the All-Stars?",born in Winter Haven refers to birthCity = 'Winter Haven'; during the 1980s in All-Stars refers to season_id = 1980; played in 12 minutes  per season refers to minutes = 12,"SELECT DISTINCT T1.firstName, T1.middleName, T1.lastName FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.birthCity = 'Winter Haven' AND T2.season_id BETWEEN 1980 AND 1989 AND T2.minutes = 12"
professional_basketball,"Of all the All-star players who played in the Eastern Conference for no more than 5 minutes, how many went to Illinois College?",Eastern conference refers to conference = 'East'; no more than 5 minutes refers to minutes < 5,SELECT COUNT(DISTINCT T1.playerID) FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T2.conference = 'East' AND T2.minutes <= 5 AND T1.college = 'Illinois'
professional_basketball,"Between the years 1990 and 2007, of the total rebounds achieved by each player, how many managed to exceed 75% of defensive rebounds?","the year 1990 and 2007 refers to year BETWEEN 1990 AND 2007; exceed 75% of defensive rebounds refers to Divide (dRebounds, rebounds) * 100 > 75",SELECT COUNT(DISTINCT playerID) FROM player_allstar WHERE CAST(d_rebounds AS REAL) * 100 / rebounds > 75 AND season_id BETWEEN 1990 AND 2007
professional_basketball,in which year costela01 obtained the best balance of games won as a coach?,"""costela01"" is the coachID; best balance of game won refers to Max(Divide(won, Sum(won, lost)))",SELECT year FROM coaches WHERE coachID = 'costela01' ORDER BY CAST(won AS REAL) / (won + lost) DESC LIMIT 1
professional_basketball,"How many total minutes has the Brooklyn-born player, known by the name of Superman, played during all of his NBA All-Star seasons?","""Brooklyn"" is the birthCity of player; known by the name of Superman refers to nameNick like '%Superman%'; total minutes refers to Sum(minutes)",SELECT SUM(T2.minutes) FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.birthCity = 'Brooklyn' AND T1.nameNick LIKE '%Superman%'
professional_basketball,"Of all the teams coached by the winner of the 1994 NBA Coach of the Year award, which team has lost the most times playing at home?",of 1994 refers to year = 1994; 'NBA Coach of the Year' is the award; lost the most time at home refers to Max(homeLost),SELECT T3.tmID FROM awards_coaches AS T1 INNER JOIN coaches AS T2 ON T1.coachID = T2.coachID INNER JOIN teams AS T3 ON T3.tmID = T2.tmID WHERE T1.year = 1994 AND T1.award = 'NBA Coach of the Year' GROUP BY T3.tmID ORDER BY SUM(T3.homeLost) DESC LIMIT 1
professional_basketball,Which winning team in the final round of the postseason series games against the LAL won more than 60 games in the NBA league during the year 1996?,final round of post season refers to round = 'CSF'; won against LAL refers to tmIDLoser = 'LAL'; in the NBA league refers to lgID = 'NBA'; won more than 60 games refers to won > 60,SELECT DISTINCT T2.tmID FROM series_post AS T1 INNER JOIN teams AS T2 ON T1.tmIDWinner = T2.tmID WHERE T2.won > 60 AND T1.year = 1996 AND T1.round = 'CSF' AND T1.tmIDLoser = 'LAL'
professional_basketball,In which league did the player who weighs 40% less than the heaviest player and whose height is 80 inches play?,"weigh 40% less than the heaviest player refers to weight = Multiply(Max (weight), 0.6); league refers to lgID","SELECT T2.lgID FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID GROUP BY T2.lgID, T1.weight HAVING T1.weight = MAX(T1.weight) - MAX(T1.weight) * 0.4"
professional_basketball,Please list the name of the coach who has served more than 2 NBA teams.,"""NBA"" is the lgID; server more than 2 teams refers to Count(tmID) = 2",SELECT coachID FROM coaches GROUP BY coachID HAVING COUNT(DISTINCT tmID) > 2
professional_basketball,"What is the name of the coach during whose period of coaching, a team has the most numbers of games won in the post-season games?",the most number of game won in post season refers to Max(post_wins); coach refers to coachID,SELECT coachID FROM coaches ORDER BY post_wins DESC LIMIT 1
professional_basketball,"Among the coaches who have served more than 2 NBA teams, during which coach's period of coaching, a team has the least numbers of games lost in the post-season games?",served more than 2 NBA teams refers to count (tmID) > = 2; least number of game lost in post season refers to Min(post_losses),SELECT coachID FROM coaches WHERE lgID = 'NBA' AND post_wins != 0 AND post_losses != 0 AND coachID IN ( SELECT coachID FROM coaches WHERE lgID = 'NBA' GROUP BY coachID HAVING COUNT(tmID) > 2 ) ORDER BY post_losses ASC LIMIT 1
professional_basketball,"Among the players from the ABA league, how many of them have the center position?","""ABA"" is the lgID; center position refers to pos =   'C' or pos = 'F-C'; players refers to playerID",SELECT COUNT(DISTINCT T1.playerID) FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.lgID = 'ABA' AND (T1.pos = 'C' OR T1.pos = 'F-C')
professional_basketball,Please list the first name of the players from the NBA league with the forward position.,"""NBA"" is the lgID; with the forward position refers to pos = 'F' of pos = 'F-C'",SELECT DISTINCT T1.firstName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE (T1.pos = 'F' OR T1.pos = 'F-C') AND T2.lgID = 'NBA'
professional_basketball,"Among the players who went to high school in Chicago, how many of them belongs to the west conference?",high school in Chicago refers to hsCity = 'Chicago'; belong to the west conference refers to divID = 'WE',SELECT COUNT(DISTINCT T1.playerID) FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.hsCity = 'Chicago' AND T2.conference = 'West'
professional_basketball,"For the players who belongs to the east conference, please list the name of the college they went to.",belong to the east conference refers to divID = 'EA',SELECT DISTINCT T1.college FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T2.conference = 'East'
professional_basketball,"Among the players from the NBL league, how many of them were born in Spencer?","""NBL"" is the lgID; 'Spencer' is the birthCity",SELECT COUNT(DISTINCT T1.playerID) FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T1.birthCity = 'Spencer' AND T2.lgID = 'NBL'
professional_basketball,Please list the birth date of the player who has won the most MVPs.,won the most MVP refers to Max(Count(award = 'Most Valuable Player')),"SELECT T1.birthDate FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T2.award = 'Most Valuable Player' GROUP BY T1.playerID, T1.birthDate ORDER BY COUNT(award) DESC LIMIT 1"
professional_basketball,"Among the players born in Whitestone, how many of them have won the MVP?","""Whitestone"" is the birthCity of the player; won the MVP refers to award = 'Most Valuable Player'",SELECT COUNT(DISTINCT T1.playerID) FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T2.award = 'Most Valuable Player' AND T1.birthCity = 'Houston'
professional_basketball,"Among the players who have won the award of Rookie of the year, what is the height of the tallest player?","""Rookie of the Year"" is the award; tallest player refers to Max(height)",SELECT T1.height FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T2.award = 'Rookie of the Year' ORDER BY T1.height DESC LIMIT 1
professional_basketball,What is the average weight of the players who have won the award of Rookie of the year?,"""Rookie of the Year"" is the award; average weight = Divide (Sum(weight), Count(playerID))",SELECT AVG(T1.weight) FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T2.award = 'Rookie of the Year'
professional_basketball,"Among the players that went to high school in New York and have won the MVP, what is their average height?","high school in New York refers to highSchool like '%New York%'; won the MVP refers to award = 'Most Valuable Player'; average height = Divide (Sum(height), Count(playerID))",SELECT AVG(T1.height) FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T2.award = 'Most Valuable Player' AND T1.birthCity = 'New York'
professional_basketball,Please list the top ten teams with the highest scores in 2000.,in 2000 refers to year = 2000; team with highest score refers to Max(o_fgm),SELECT tmID FROM players_teams WHERE year = 2000 GROUP BY tmID ORDER BY SUM(PostPoints) DESC LIMIT 10
professional_basketball,Which teams have winning rate less than 50%?,"team with winning rate less than 50% refers to Divide (won, Sum(won, lost)) < 0.5",SELECT name FROM teams WHERE CAST(won AS REAL) * 100 / (won + lost) < 50
professional_basketball,Who are the coaches for team with winning rate of 80% and above?,"winning rate of 80% and above refers to Divide (won, Sum(won, lost)) > 0.8; coaches refers to coachID","SELECT coachID FROM coaches GROUP BY tmID, coachID, won, lost HAVING CAST(won AS REAL) * 100 / (won + lost) > 80"
professional_basketball,Which coach has serviced in NBA for more than 10 years.,"""NBA"" is the lgID; coach who serviced for more than 10 years refers to coachID where Subtract (Max(year), Min(year)) > 10",SELECT coachID FROM coaches WHERE lgID = 'NBA' GROUP BY coachID HAVING MAX(year) - MIN(year) > 10
professional_basketball,"How many teams have played more than 3800 points and have player with ""Most Valuable Player"" award?",played more than 3800 points refers to Sum(points) > = 3800,"SELECT COUNT(DISTINCT T4.name) FROM ( SELECT T1.name, SUM(T2.points) FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year INNER JOIN awards_players AS T3 ON T2.playerID = T3.playerID WHERE T3.award = 'Most Valuable Player' GROUP BY T1.name HAVING SUM(T2.points) >= 3800 ) AS T4"
professional_basketball,"Which player from ""AFS"" team has the tallest height?","""AFS"" is the tmID; tallest height refers to Max(height)","SELECT T1.firstName, T1.middleName, T1.lastName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.tmID = 'AFS' ORDER BY T1.height DESC LIMIT 1"
professional_basketball,"Please list down the last name of players from ""BLB"" team.","""BLB"" is the tmID",SELECT T1.lastName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.tmID = 'BLB'
professional_basketball,"From 1962 to 1975, how many coaches received the award?",from 1960 to 1975 refers to year between 1960 and 1975,SELECT COUNT(DISTINCT coachID) FROM awards_coaches WHERE year BETWEEN 1962 AND 1975
professional_basketball,Please list the coach IDs who received the award twice from 1970 to 1990.,from 1970 to 1990 refers to year between 1970 and 1990;  received award twice refers to coachID where Count(coachID) = 2,"SELECT coachID FROM awards_coaches WHERE year BETWEEN 1970 AND 1990 GROUP BY coachID, award HAVING COUNT(award) = 2"
professional_basketball,"From 1962 to 2011, how many coaches received both NBA and ABA awards?",from 1962 to 2011 refers to year between 1960 and 2011; received both NBA and ABA award refers to coachID where award LIKE 'NBA%' and 'ABA%',SELECT COUNT(DISTINCT coachID) FROM awards_coaches WHERE year BETWEEN 1962 AND 2011 AND award = 'ABA Coach of the Year' AND coachID IN ( SELECT coachID FROM awards_coaches WHERE year BETWEEN 1962 AND 2011 AND award = 'NBA Coach of the Year' )
professional_basketball,"In 1975, what was the average point of all-star players coming from the USA?","in 1975 refers to season_id = 1975; coming from USA refers to birthCountry = 'USA'; average point refers to Divide (Sum(points), Count(playerID))",SELECT AVG(T2.points) FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T2.season_id = 1975
professional_basketball,Please list the last names and first names of all-star players who are higher than 75 inch.,higher than 75 inch refers to height > 75,"SELECT DISTINCT T1.lastName, T1.firstName FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.height > 75"
professional_basketball,What is the minimum weight of all-star players coming from UCLA college?,minimum weight refers to Min(weight),SELECT MIN(T1.weight) FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.college = 'UCLA'
professional_basketball,What is the maximum weight of USA all-star players?,"""USA"" is the birthCountry of player;  maximum weight refers to Max(weight)",SELECT MAX(T1.weight) FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.birthCountry = 'USA'
professional_basketball,"From 1960 to 1970, what is the total point of all-star players who are still alive?",from 1960 to 1970 refers to season_id between 1960 and 1970; still alive refers to deathDate = '0000-00-00',SELECT SUM(T2.points) FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T2.season_id BETWEEN 1960 AND 1970 AND T1.deathDate = '0000-00-00'
professional_basketball,"Among players who were born after 1950, who had offence rebounds rates more than 30%? Please list their last names and first names.","born after 1950 refers to birthDate > = '1950-01-01'; offence rebound rate more than 30% refers to Divide (oRebounds, rebounds) > 0.3","SELECT DISTINCT T1.lastName, T1.firstName FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.birthDate > 1950 AND CAST(T2.o_rebounds AS REAL) * 100 / T2.rebounds > 30"
professional_basketball,How many players received Rookie of the Year award from 1969 to 2010?,from 1969 to 2010 refers to year BETWEEN 1969 and 2010; 'Rookie of the Year' is the award,SELECT COUNT(playerID) FROM awards_players WHERE year BETWEEN 1969 AND 2010 AND award = 'Rookie of the Year'
professional_basketball,Please list the team names which have at least 3 all-star players.,team with at least 3 all star player refers to tmID where Count(player_allstar.playerID) > = 3,SELECT T1.tmID FROM players_teams AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID GROUP BY T1.tmID HAVING COUNT(DISTINCT T1.playerID) >= 3
professional_basketball,"From 1950 to 1970, what is the maximum point of players whose teams were ranked 1?",from 1950 to 1970 refers to year between 1950 and 1970; team with rank 1 refers to rank = 1; maximum point refers to Max(points),SELECT MAX(T2.points) FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year BETWEEN 1950 AND 1970 AND T1.rank = 1
professional_basketball,Please list the last names and first names of all-star players whose team were ranked 1 for consecutive 3 years from 1937 to 1940.,from 1937 to 1940 refers to year between 1937 and 1940; rank 1 for 3 years refers to tmID where Count (rank = 1) > = 3,"SELECT T5.lastName, T5.firstName FROM players_teams AS T4 INNER JOIN players AS T5 ON T4.playerID = T5.playerID WHERE T4.year BETWEEN 1937 AND 1940 AND T4.tmID IN ( SELECT DISTINCT T1.tmID FROM teams AS T1 INNER JOIN teams AS T2 INNER JOIN teams AS T3 ON T1.tmID = T2.tmID AND T2.tmID = T3.tmID AND T3.year - T2.year = 1 AND T2.year - T1.year = 1 WHERE T1.rank = 1 AND T1.year BETWEEN 1937 AND 1940 )"
professional_basketball,"Among the teams that were ranked 3 from 1937 to 1940, what is the team name whose players had the highest point?",from 1937 to 1940 refers to year between 1937 and 1940; player with highest point refers to Max(points),SELECT DISTINCT T1.name FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.rank = 3 AND T1.year BETWEEN 1937 AND 1940 ORDER BY T2.points DESC LIMIT 1
professional_basketball,"In 1937, how many teams whose players got at least 500 points?",in 1937 refers to year = 1937; player got at least 500 points refers to Sum(points) > = 500,"SELECT COUNT(*) FROM ( SELECT T2.name, SUM(T1.points) FROM players_teams AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = 1937 GROUP BY T2.name HAVING SUM(points) >= 500 ) AS T3"
professional_basketball,"In 1990, how many players whose teams had the winning rate of more than 75%?","in 1990 refers to year = 1990; winning rate of more than 75% refers to Divide(won, games) > 0.75",SELECT COUNT(DISTINCT T1.playerID) FROM players_teams AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE CAST(T2.won AS REAL) * 100 / CAST(T2.games AS REAL) > 75 AND T1.year = 1990
professional_basketball,Please list the top three shortest black players.,shortest player refers to Min(height); black players refers to race = 'B',"SELECT firstName, lastName FROM players WHERE race = 'B' AND height > 0 ORDER BY height ASC LIMIT 3"
professional_basketball,How many players with the first name Joe were drafted in 1970?,drafted in 1970 refers to draftYear = 1970,SELECT COUNT(DISTINCT playerID) FROM draft WHERE firstName = 'Joe' AND draftYear = 1970
professional_basketball,How many field goals did George Mikan make overall between 1951 and 1953?,between 1951 and 1953 refers to season_id; field goal refers to fg_made,SELECT COUNT(fg_made) FROM player_allstar WHERE first_name = 'George' AND last_name = 'Mikan' AND season_id BETWEEN 1951 AND 1953
professional_basketball,What are the basketball players' BMI ranges?,"BMI = Multiply(Divide(weight, Multiply(height, height)), 703)","SELECT MIN(CAST(weight AS REAL) / (height * height)) , MAX(CAST(weight AS REAL) / (height * height)) FROM players"
professional_basketball,What is the name of the team with the highest home lost rate?,"highest home lost rate = Max(Divide(homelost, Sum(homeWon, homeLost)))",SELECT name FROM teams ORDER BY CAST(homeWon AS REAL) / (homeWon + homeLost) DESC LIMIT 1
professional_basketball,How old was Alexis Ajinca when he was first drafted?,"age when drafted refers to Subtract(draftYear, year(birthDate)); first drafted refers to draftYear","SELECT draftYear - strftime('%Y', birthDate) FROM draft AS T1 INNER JOIN players AS T2 ON T1.playerID = T2.playerID WHERE T1.firstName = 'Alexis' AND T1.lastName = 'Ajinca' AND draftRound = 1"
professional_basketball,Who is the tallest player in Denver Nuggets since 1980?,"""Denver Nuggets"" is the name of team; since 1980 refers to year > 1980; tallest player = Max(height)","SELECT T1.firstName, T1.lastName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID INNER JOIN teams AS T3 ON T3.tmID = T2.tmID WHERE T3.name = 'Denver Nuggets' AND T2.year > 1980 ORDER BY T1.height DESC LIMIT 1"
professional_basketball,"Among the players who have passed away, who had the most award?",pass away refers to deathDate ! = 'null'; most award refers to playerID where Max(Count(award)),SELECT T1.playerID FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE deathDate IS NOT NULL GROUP BY T1.playerID ORDER BY COUNT(award) DESC LIMIT 1
professional_basketball,What is the full name of the team that has the most players from UCLA?,"""UCLA"" is the college; team with most players refers to tmID where Max(Count(playerID))",SELECT T3.name FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID INNER JOIN teams AS T3 ON T3.tmID = T2.tmID WHERE T1.college = 'UCLA' GROUP BY T3.name ORDER BY COUNT(DISTINCT T1.playerID) DESC LIMIT 1
professional_basketball,What is the average BMI of an All-star player?,"average BMI refers to AVG (Multiply(Divide(weight, Multiply(height, height)), 703))",SELECT AVG(CAST(T1.weight AS REAL) / (T1.height * T1.height)) FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID
professional_basketball,What is the full name of the team with the fastest growth in winning rate in the 'ABA' league from 1972 to 1973?,"""ABA"" is the lgID; from 1972 to 1973 refers to year = 1972 and year = 1973; team with the fastest growth in winning rate = Max(Subtract(Divide(won where year = 1973, Sum(won, lost)),Divide(won where year = 1972, Sum(won, lost))))",SELECT T1.name FROM teams AS T1 INNER JOIN ( SELECT * FROM teams WHERE lgID = 'ABA' AND year = 1972 ) AS T2 ON T1.tmID = T2.tmID WHERE T1.lgID = 'ABA' AND T1.year = 1973 ORDER BY (CAST(T1.won AS REAL) / (T1.won + T1.lost) - (CAST(T2.won AS REAL) / (T2.won + T2.lost))) DESC LIMIT 1
professional_basketball,Please list the first names of the players with the most personal fouls in the 'NBL' league.,"""NBL"" is the lgID; most  personal foul refers to Max(Count(PF))","SELECT T1.firstName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.lgID = 'NBL' GROUP BY T1.playerID, T1.firstName ORDER BY COUNT(PF) DESC LIMIT 1"
professional_basketball,What is the average height of an East conference All-star player?,average height refers to avg(height),SELECT AVG(DISTINCT height) FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE conference = 'East'
professional_basketball,"Among the coaches who won the 'ABA Coach of the Year' award, which is the coach with the highest number of won games?","""ABA Coach of the Year"" is the award; highest number of won games refers to Max(Count(won))","SELECT T1.coachID FROM coaches AS T1 INNER JOIN awards_coaches AS T2 ON T1.coachID = T2.coachID WHERE T2.award = 'ABA Coach of the Year' GROUP BY T1.coachID, T1.won ORDER BY T1.won DESC LIMIT 1"
professional_basketball,What is the full name of the team that the 'NBA Coach of the Year' 1992 winner coached?,"""NBA Coach of the Year"" is the award; in 1992 refers to year = 1992;",SELECT name FROM teams AS T1 INNER JOIN coaches AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year INNER JOIN awards_coaches AS T3 ON T2.coachID = T3.coachID AND T2.year = T3.year WHERE T3.year = 1992 AND award = 'NBA Coach of the Year'
professional_basketball,What is the first and last name of the player with the highest field goal made rate in 1973?,"in 1973 refers to year = 1973; player with highest field goal made refers to Max(Divide(fgMade, fgAttempted))","SELECT T1.firstName, T1.lastName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE year = 1973 ORDER BY CAST(T2.fgMade AS REAL) / T2.fgAttempted DESC LIMIT 1"
professional_basketball,What is the full name of the team that selected Mike Lynn?,full name refers to teams.name,SELECT T1.name FROM teams AS T1 INNER JOIN draft AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.draftYear WHERE T2.firstName = 'Mike' AND T2.lastName = 'Lynn'
professional_basketball,"Among the Most improved Players awarded from 1985-1990, how many player whose country is USA?",the Most improved Player refers to award = 'Most Improved Player'; from 1985-1990 refers to year between 1985 and 1990; country is USA refers to birthCountry = 'USA',SELECT COUNT(DISTINCT T2.playerID) FROM awards_players AS T1 INNER JOIN players AS T2 ON T1.playerID = T2.playerID WHERE T1.award = 'Most Improved Player' AND T2.birthCountry = 'USA' AND T1.year BETWEEN 1985 AND 1990
professional_basketball,Please list out the first name and last name of player who attended California college and have been selected as all stars?,California college refers to college = 'California',"SELECT DISTINCT T1.firstName, T1.lastName FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.college = 'California'"
professional_basketball,"From 1950 to 1970, how many coaches who received more than 1 award?",from 1950 to 1970 refers to year between 1950 and 1970; more than 3 awards refers to count(award) > 3,SELECT COUNT(coachID) FROM awards_coaches WHERE year BETWEEN 1950 AND 1970 GROUP BY coachID HAVING COUNT(coachID) > 1
professional_basketball,How many players received Most Valuable Player award from 1969 to 1975?,Most Valuable Player award refers to award = 'Most Valuable Player'; from 1969 to 1975 refers to year between 1969 and 1975,SELECT COUNT(DISTINCT playerID) FROM awards_players WHERE year BETWEEN 1969 AND 1975 AND award = 'Most Valuable Player'
professional_basketball,Please list the team names which have at least 5 players were born in the same state.,team name refers to teams.name; state that a player is born refers to birthState,"SELECT DISTINCT name FROM teams WHERE tmID IN ( SELECT tmID FROM players_teams AS T1 INNER JOIN players AS T2 ON T1.playerID = T2.playerID WHERE T2.birthState IS NOT NULL GROUP BY T1.tmID, T2.birthState HAVING COUNT(*) > 5 )"
professional_basketball,How many teams in the NBA which has at least 3 all-star players?,NBA refers to lgID = 'NBA'; have at least 3 all-star players refers to count(player_allstar.playerID) > 3,SELECT COUNT(*) FROM ( SELECT tmID FROM players_teams AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.lgID = 'NBA' GROUP BY T1.tmID HAVING COUNT(DISTINCT T1.playerID) > 3 ) AS T3
professional_basketball,Which state has the most players selected as all stars?,state refers to birthState; the most players refers to max(count(playerID)),SELECT T1.birthState FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID GROUP BY T1.birthState ORDER BY COUNT(DISTINCT T1.playerID) DESC LIMIT 1
professional_basketball,How many players whose teams were ranked 6 in 1937?,ranked 6 refers to rank = 6; in 1937 refers to year = 1937,SELECT COUNT(DISTINCT T1.playerID) FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID INNER JOIN teams AS T3 ON T3.tmID = T2.tmID WHERE T3.year = 1937 AND T3.rank = 6
professional_basketball,"In 1950, how many players whose teams have the losing rate less than 20%?","in 1950 refers to year = 1950; losing rate less than 20% refers to divide(lost, add(won, lost)) < 0.2",SELECT COUNT(DISTINCT T1.playerID) FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID INNER JOIN teams AS T3 ON T3.tmID = T2.tmID WHERE CAST(T3.lost AS REAL) * 100 / (T3.lost + T3.won) < 20
professional_basketball,List the full name of players who are born outside USA.,"full name refers to firstName, middleName, lastName; born outside USA refers to birthCountry ! = 'USA'","SELECT firstName, middleName, lastName FROM players WHERE birthCountry != 'USA'"
professional_basketball,List out all the coach ID who have served more than 2 different teams.,more than 2 different teams refers to count(tmID) > 2,SELECT coachID FROM coaches GROUP BY coachID HAVING COUNT(DISTINCT tmID) > 2
professional_basketball,Which coach has the most 'won' than 'lost' in year '1988'?,"in year '1988' refers to year = 1988; the most 'won' than 'lost' refers to max(subtract(won, lost))",SELECT coachID FROM coaches WHERE year = 1988 ORDER BY won - lost DESC LIMIT 1
professional_basketball,Name the team in which the coach won the title 'NBA Coach of the Year' in 2010.,team name refers to teams.name; won the title 'NBA Coach of the Year' refers to award = 'NBA Coach of the Year'; in 2010 refers to year = 2010,SELECT DISTINCT T1.tmID FROM coaches AS T1 INNER JOIN awards_coaches AS T2 ON T1.coachID = T2.coachID WHERE T2.year = 2010 AND T2.award = 'NBA Coach of the Year'
professional_basketball,"List the first name, last name, height and weight of the players who has all free throw attempted successfully made.",all free throw attempted successfully made refers to ftAttempted > 0 and ftAttempted = ftMade,"SELECT DISTINCT T1.firstName, T1.lastName, T1.height, T1.weight FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T2.ft_attempted > 0 AND ft_attempted = ft_made"
professional_basketball,"List the first name, last name and team name of players who are drafted from 'Seattle' between year 1965 to 1970.",team name refers to teams.name; drafted from 'Seattle' refers to draftFrom = 'Seattle'; between year 1965 to 1970 refers to draftYear between 1965 and 1970,"SELECT DISTINCT T1.firstName, T1.lastName, T3.name FROM players AS T1 INNER JOIN draft AS T2 ON T1.playerID = T2.playerID INNER JOIN teams AS T3 ON T2.tmID = T3.tmID WHERE T2.draftFrom = 'Seattle' AND T2.draftYear BETWEEN 1965 AND 1970"
professional_basketball,"List the full name and age of the player when he won the ""Finals MVP"" in 2003.","full name refers to firstName, middleName, lastName; age = subtract(2003, year(birthDate)); won the ""Finals MVP"" refers to award = 'Finals MVP'; in 2003 refers to year = 2003","SELECT T1.firstName, T1.middleName, T1.lastName , 2003 - strftime('%Y', T1.birthDate) FROM awards_players AS T2 JOIN players AS T1 ON T2.playerID = T1.playerID WHERE T2.award = 'Finals MVP' AND T2.year = 2003"
professional_basketball,List the champion (team name) and year from year 1950 to 1960.,champion refers to round = 'F'; team name refers to teams.name; from year 1950 to 1960 refers to year between 1950 and 1960,"SELECT DISTINCT T1.name, T2.year FROM teams AS T1 JOIN series_post AS T2 ON T1.tmID = T2.tmIDWinner WHERE T2.round = 'F' AND T2.year BETWEEN 1950 AND 1960"
professional_basketball,Name the teams along with the coaches that went to 'Quarter Final' round in 1946.,team name refers to teams.name; coach refers to coachID; 'Quarter Final' round refers to round = 'QF'; in 1946 refers to year = 1946,"SELECT DISTINCT T1.coachID, T3.name FROM coaches AS T1 JOIN series_post AS T2 ON T1.tmID = T2.tmIDWinner JOIN teams AS T3 ON T3.tmID = T1.tmID WHERE T2.round = 'QF' AND T2.year = 1946"
professional_basketball,List out all the players fullname who won the championship in 1970.,"full name refers to firstName, middleName, lastName; won the championship refers to round = 'F'; in 1970 refers to year = 1970","SELECT DISTINCT T3.firstName, T3.middleName, T3.lastName FROM series_post AS T1 INNER JOIN players_teams AS T2 ON T1.tmIDWinner = T2.tmID INNER JOIN players AS T3 ON T3.playerID = T2.playerID WHERE T1.year = 1970 AND T1.round = 'F'"
professional_basketball,From which college was the player who won the most award in 1970.,college refers to highSchool; won the most award refers to max(count(award)); in 1970 refers to year = 1970,SELECT college FROM players WHERE playerID = ( SELECT playerID FROM awards_players WHERE year = 1970 GROUP BY playerID ORDER BY COUNT(award) DESC LIMIT 1 )
professional_basketball,"Name the youngest player who ever won ""Rookie of the Year"".","player name refers to playerID; the youngest refers to max(birthDate); won ""Rookie of the Year"" refers to award = 'Rookie of the Year'","SELECT T1.firstName, T1.middleName, T1.lastName FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T2.award = 'Rookie of the Year' ORDER BY T1.birthDate DESC LIMIT 1"
professional_basketball,List the full name of players who are drafted from round 1 in 1973 but not born in USA.,"full name refers to firstName, middleName, lastName; in 1973 refers to year = 1973; not born in USA refers to birthCountry <> 'USA'","SELECT T1.firstName, T1.middleName, T1.lastName FROM players AS T1 INNER JOIN draft AS T2 ON T1.playerID = T2.playerID WHERE T2.draftRound = 1 AND T1.birthCountry != 'USA' AND T2.draftYear = 1973"
professional_basketball,What is the percentage of offense rebounds from the total rebounds of the players in year 2000.,"in year 2000 refers to year = 2000; percentage = divide(sum(o_rebounds), sum(rebounds)) * 100%",SELECT CAST(SUM(T2.o_rebounds) AS REAL) * 100 / SUM(T2.rebounds) FROM players_teams AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.year = 2000
professional_basketball,"List the year, team and coach that with winning rate of above 75%.","team refers to teams.name; coach refers to coachID; winning rate of above 75% refers to divide(won, add(won, lost)) > 0.75","SELECT DISTINCT T1.year, T2.name, T1.coachID FROM coaches AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID WHERE CAST(T1.won AS REAL) / CAST((T1.won + T1.lost) AS REAL) > 0.75"
professional_basketball,List all the coatches of the Oklahoma City Thunder,coach refers to coachID; Oklahoma City Thunder refers to name = 'Oklahoma City Thunder',SELECT DISTINCT coachID FROM coaches AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID WHERE name = 'Oklahoma City Thunder'
professional_basketball,"How many players, in games played in 1990, achieved 50% or less of oRebounds than dRebounds.","in 1990 refers to season_id = 1990; 50% or less of oRebounds than dRebounds refers to o_rebounds < = multiply(d_rebounds, 0.5)",SELECT COUNT(playerID) FROM players_teams WHERE CAST(oRebounds AS REAL) * 100 / dRebounds <= 50 AND year = 1990
professional_basketball,How many players did not get more than 10 steals between the years 2000 and 2005?,did not get more than 10 steals refers to count(steals) < = 10; between the years 2000 and 2005 refers to season_id between 2000 and 2005,SELECT COUNT(DISTINCT playerID) FROM player_allstar WHERE season_id BETWEEN 2000 AND 2005 AND steals <= 10
professional_basketball,Which player selected by Portland in 2nd draftRound won Rookie of the Year in 1971?,2nd draftRound refers to draftRound = 2; won Rookie of the Year refers to award = 'Rookie of the Year'; in 1971 refers to draftYear = 1971,SELECT T1.playerID FROM draft AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T2.award = 'Rookie of the Year' AND T1.draftYear = 1971 AND T1.draftRound = 2
professional_basketball,How many All Star players who played in the 1973 season were black?,1973 season refers to season_id = 1973; black refers to race = 'B',SELECT COUNT(DISTINCT T1.playerID) FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T2.season_id = 1973 AND T1.race = 'B'
professional_basketball,"Which winning team in the 1947 playoff quarterfinals managed to score 3,513 defensive points that same year?","team refers to tmID; quarterfinal refers to round = 'QF'; score 3,513 defensive points refers to d_pts > = 3513",SELECT T2.tmID FROM series_post AS T1 INNER JOIN teams AS T2 ON T1.tmIDWinner = T2.tmID WHERE T1.year = 1947 AND T1.round = 'QF' AND T2.d_pts = 3513
professional_basketball,Percentage of games lost out of total games played by the Houston Mavericks,"Houston Mavericks refers to name = 'Houston Mavericks'; percentage = divide(sum(lost), sum(games)) * 100%",SELECT CAST(SUM(lost) AS REAL) * 100 / SUM(games) FROM teams WHERE name = 'Houston Mavericks'
professional_basketball,"Please list the players who received the ""Most Valuable Player"" award in the NBA league after the year of 1990, along with their IDs.","player refers to playerID; ""Most Valuable Player"" award refers to award = 'Most Valuable Player'; after the year of 1990 refers to year > 1990; ID refers to playerID",SELECT playerID FROM awards_players WHERE year > 1990 AND award = 'Most Valuable Player' AND lgID = 'NBA'
professional_basketball,How many times between 1975 and 1980 did the player abdulka01 play for LAL?,between 1975 and 1980 refers to year between 1975 and 1980; player abdulka01 refers to playerID = 'abdulka01'; play for LAL refers to tmID = 'LAL',SELECT COUNT(DISTINCT T2.year) FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.tmID = 'LAL' AND T2.year BETWEEN 1975 AND 1980 AND T1.playerID = 'abdulka01'
professional_basketball,"What is the percentage of coaches in 1969 who were awarded ""NBA Coach of the Year""?","in 1969 refers to year = 1969; awarded ""NBA Coach of the Year"" refers to award = 'NBA Coach of the Year'; percentage = divide(count(coachID where year = 1969 and award = 'NBA Coach of the Year'), count(coachID)) * 100%",SELECT CAST(SUM(CASE WHEN award = 'NBA Coach of the Year' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM awards_coaches WHERE year = 1969
professional_basketball,What were the difference of the CHS team's winning rate between 1946 and 1947 in the post-season series games? Please provide your answer in percentages.,"CHS team refers to tmIDWinner = 'CHS'; difference = subtract(divide(count(series_post where year = 1947 and tmIDWinner = 'CHS'), count(series_post where year = 1947)), divide(count(series_post where year = 1946 and tmIDWinner = 'CHS'), count(series_post where year = 1946)))",SELECT CAST(SUM(CASE WHEN year = 1947 AND tmIDWinner = 'CHS' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN year = 1947 THEN 1 ELSE 0 END) - CAST(SUM(CASE WHEN year = 1946 AND tmIDWinner = 'CHS' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN year = 1946 THEN 1 ELSE 0 END) FROM series_post
professional_basketball,How many awards were given out in 2010 to players who attended high school in Chicago?,in 2010 refers to year = 2010; attended high school in Chicago refers to college = 'Chicago',SELECT COUNT(T1.award) FROM awards_players AS T1 INNER JOIN players AS T2 ON T1.playerID = T2.playerID WHERE T1.year = 2010 AND T2.hsCity = 'Chicago'
professional_basketball,"What is the percentage of players who attended Auburn University and won an ""All-Defensive Second Team"" award?","Auburn University refers to college = 'Auburn'; won an ""All-Defensive Second Team"" award refers to award = 'All-Defensive Second Team'; percentage = divide(count(playerID where award = 'All-Defensive Second Team'), count(playerID)) where college = 'Auburn' * 100%",SELECT CAST(SUM(CASE WHEN T2.award = 'All-Defensive Second Team' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T1.college = 'Auburn'
professional_basketball,Please list the top five players with the most steals in the year 1997. Please give their full name.,"full name refers to firstName, middleName, lastName; in the year 1997 refers to year = 1997; the most steals refers to max(steals)","SELECT DISTINCT T1.firstName, T1.middleName, T1.lastName FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T2.season_id = 1997 ORDER BY T2.steals DESC LIMIT 5"
professional_basketball,What is the name of the university that was drafted from the player who won the NBA Finals MVP in 1990?,name of the university refers to highSchool; NBA refers to lgID = 'NBA'; Finals MVP refers to award = 'Finals MVP'; in 1990 refers to year = 1990,SELECT T1.college FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 1990 AND T2.award = 'Finals MVP'
professional_basketball,"Among the NBA All-star players in 1996 season , which have more than 70% free throw rate? Please give their player id.","NBA refers to lgID = 'NBA'; in 1996 season refers to season_id = 1996; more than 70% free throw rate refers to ft_made > = 0 AND ft_attempted > 0 AND divide(ft_made, ft_attempted) > 0.7",SELECT playerID FROM player_allstar WHERE season_id = 1996 AND CAST(ft_made AS REAL) * 100 / ft_attempted > 70
professional_basketball,"From 1980 to 1983, how many of the NBA All-Star players have more than 60% three point rate?","from 1980 to 1983 refers to year BETWEEN 1980 and 1983; NBA refers to lgID = 'NBA'; more than 60% three point rate refers to divide(threeMade, threeAttempted) > 0.6",SELECT DISTINCT T2.playerID FROM player_allstar AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.year BETWEEN 1980 AND 1983 AND T1.three_made / T1.three_attempted > 0.6
professional_basketball,"Among the NBA winning coaches, which are from STL team? Please list their coach id.",NBA refers to lgID = 'NBA'; STL team refers to tmID = 'STL',SELECT DISTINCT T2.coachID FROM coaches AS T1 INNER JOIN awards_coaches AS T2 ON T1.coachID = T2.coachID WHERE T1.tmID = 'STL' AND T1.lgID = 'NBA'
professional_basketball,How many times have coaches who were from CHI been awarded as NBA Coach of the Year?,CHI refers to tmID = 'CHI'; awarded Coach of the Year refers to award = 'Coach of the Year'; NBA refers to lgID = 'NBA',SELECT COUNT(DISTINCT T2.coachID) FROM coaches AS T1 INNER JOIN awards_coaches AS T2 ON T1.coachID = T2.coachID WHERE T1.tmID = 'CHI' AND T2.award = 'NBA Coach of the Year'
professional_basketball,"Of the players drafted in NBA between 1990 and 2000, who has the most points in all-star? List the player's first name and last name.",NBA refers to lgID = 'NBA'; between 1990 and 2000 refers to year between 1990 and 2000; the most points refers to max(points),"SELECT T3.firstname, T3.lastname FROM player_allstar AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID INNER JOIN draft AS T3 ON T1.playerID = T3.playerID WHERE T2.year BETWEEN 1990 AND 2000 ORDER BY T1.points DESC LIMIT 1"
professional_basketball,Which player from Wake Forest college did the most offensive rebounds than defensive rebounds in the all-star? Please mention the full name of the player including the middle name if have any.,"Wake Forest college refers to highSchool = 'Wake Forest college'; did the most offensive rebounds than defensive rebounds refers to max(subtract(sum(oRebounds), sum(dRebounds))); full name refers to first_name, middle_name, last_name","SELECT T1.firstName, T1.middleName, T1.lastName FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.college = 'Wake Forest' AND T2.o_rebounds > T2.d_rebounds"
professional_basketball,"Find the full name of the player born in Atlanta and have the highest number of blocks. Also, in which team did this player perform the most number of blocks?","full name refers to first_name, middle_name, last_name; born in Atlanta refers to birthCity = 'Atlanta'; the highest number of blocks refers to max(blocks); team refers to tmID","SELECT T1.firstName, T1.lastName, T2.tmID FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T1.birthCity = 'Atlanta' ORDER BY T2.blocks DESC LIMIT 1"
professional_basketball,State the name of teams ranked first five or more times and lost a league two or more times between 1980 and 2000?,name of team refers to teams.name; between 1980 and 2000 refers to year between 1980 and 2000; ranked first five or more times refers to count(rank = 1) > = 5; lost a league two or more times refers to lost > 2,SELECT T1.name FROM teams AS T1 INNER JOIN series_post AS T2 ON T1.tmID = T2.tmIDLoser AND T1.year = T2.year WHERE T1.rank < 5 AND T2.lgIDLoser > 2 AND T2.year BETWEEN 1980 AND 2000
professional_basketball,Player from which team has the highest point per minute in NBA from 1991 to 2000?,"team refers to tmID; the highest point per minute refers to max(divide(points, minutes)); NBA refers to lgID = 'NBA'; from 1991 to 2000 refers to year BETWEEN 1991 AND 2000",SELECT tmID FROM players_teams WHERE year BETWEEN 1991 AND 2000 ORDER BY CAST(points AS REAL) / minutes DESC LIMIT 1
professional_basketball,What is the difference in the average age of players when they are drafted in the ABA vs when they are drafted in the NBA between the years 1970 and 1970?,"ABA refers to lgID = 'ABA'; NBA refers to lgID = 'NBA'; between the years 1970 and 1970 refers to draftYear between 1970 and 1970; difference = subtract(avg(subtract(1970, year(birthDate)) where lgID = 'ABA'), avg(subtract(1970, year(birthDate)) where lgID = 'NBA'))","SELECT CAST(SUM(IIF(T2.lgID = 'ABA', 1970 - strftime('%Y', T3.birthDate), 0)) AS REAL) / COUNT(IIF(T2.lgID = 'ABA', 1, 0)) - CAST(SUM(IIF(T2.lgID = 'NBA', 1970 - strftime('%Y', T3.birthDate), 0)) AS REAL) / COUNT(IIF(T2.lgID = 'NBA', 1, 0)) FROM draft AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID INNER JOIN players AS T3 ON T2.playerID = T3.playerID WHERE T1.draftYear BETWEEN 1970 AND 1970"
professional_basketball,Which player had the most game presentatons in 2011 NBA season.,player refers to playerID; the most game presentations refers to max(GP); in 2020 refers to year = 2020; NBA season refers to lgID = 'NBA',SELECT playerID FROM players_teams WHERE year = 2011 ORDER BY GP DESC LIMIT 1
professional_basketball,How many first round draft player in 1996 NBA draft became an All-Star?,first round refers to round = 1; in 1996 refers to year = 1996; NBA refers to lgID = 'NBA',SELECT COUNT(T2.playerID) FROM draft AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.draftYear = 1996 AND T1.draftRound = 1
professional_basketball,Which team did the MVP of 1997 NBA season play in?,team refers to tmID; MVP refers to award like '%MVP'; 1997 refers to year = 1997; NBA refers to lgID = 'NBA',SELECT DISTINCT T3.tmID FROM players_teams AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID INNER JOIN teams AS T3 ON T1.tmID = T3.tmID AND T1.year = T3.year WHERE T2.year = 1997 AND T2.award = 'Finals MVP' LIMIT 1
professional_basketball,How many games did team of the scoring champion win in 2001 NBA season?,the scoring champion refers to max(won); 2001 refers to year = 2001; NBA refers to lgID = 'NBA',SELECT T2.W FROM teams AS T1 INNER JOIN series_post AS T2 ON T1.tmID = T2.tmIDLoser AND T1.year = T2.year WHERE T2.year = 2001 ORDER BY T1.o_fgm DESC LIMIT 1
professional_basketball,How many turnovers per game did the assist champion had in the 2003 NBA season?,turnovers per game = avg(turnovers); 2003 refers to year = 2003; NBA refers to lgID = 'NBA',"SELECT AVG(T2.turnovers) FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 2003 GROUP BY T1.playerID, T2.assists ORDER BY T2.assists DESC LIMIT 1"
professional_basketball,What is the number of NBA titles that Ray Allen has won throughout his NBA career?,NBA refers to lgID = 'NBA',SELECT COUNT(T1.playerID) FROM player_allstar AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE first_name = 'Ray' AND last_name = 'Allen'
professional_basketball,How much did the win rate increase for the team after getting the No.1 NBA draft pick in the 2003 season than previous season?,"No.1 draft pick refers to draftRound = 1; in the 2003 season refers to draftyear = 2003; increase = subtract(divide(sum(won), add(sum(won), sum(lost))) where draftyear = 2004, divide(sum(won), add(sum(won), sum(lost))) where draftyear = 2003)",SELECT (CAST(SUM(CASE WHEN T1.year = 2004 THEN T1.won ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.year = 2004 THEN T1.won + T1.lost ELSE 0 END)) - (CAST(SUM(CASE WHEN T1.year = 2003 THEN T1.won ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.year = 2003 THEN T1.won + T1.lost ELSE 0 END)) FROM teams AS T1 INNER JOIN draft AS T2 ON T1.tmID = T2.tmID WHERE T2.draftRound = 1 AND T2.draftYear = 2003
professional_basketball,"Among the coaches who won the 'NBA coach of the year' award from 1971 - 1975, how many of them were in 'POR' team?",the 'NBA coach of the year' award refers to award = 'NBA coach of the year'; from 1971 - 1975 refers to year between 1971 and 1975; 'POR' team refers to tmID = 'POR',SELECT COUNT(T1.id) FROM awards_coaches AS T1 INNER JOIN teams AS T2 ON T1.year = T2.year WHERE T1.year BETWEEN 1971 AND 1975 AND T1.award = 'NBA Coach of the Year' AND T2.tmID = 'POR'
professional_basketball,How many percent of points were scored by NBA players who belonged to 'LAL' team and had performed steals movement.,"NBA refers to lgID = 'NBA'; 'LAL' team refers to tmID = 'LAL'; performed steals movement refers to steals > 0; percent = divide(count(playerID where steals > 0), count(playerID)) where lgID = 'NBA' and tmID = 'LAL' * 100%","SELECT CAST(SUM(IIF(T2.steals IS NOT NULL AND T1.tmID = 'LAL', 1, 0)) AS REAL) * 100 / COUNT(T1.tmID) FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year"
professional_basketball,What's the name of the player in 1996 who had the most steals that didn't play in the playoffs?,"name of the player refers to first_name, middle_name, last_name; in 1996 refers to year = 1996; the most steals refers to max(steals); didn't play in the playoffs refers to playoff = null",SELECT T1.playerID FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 1996 AND T2.PostGP = 0 ORDER BY T2.steals DESC LIMIT 1
professional_basketball,Give the player id of the man who had the most turnovers whose team missed the playoffs in year 1988.,the most turnovers refers to max(turnovers); missed the playoffs refers to PostGP = 0; in year 1988 refers to year = 1988,SELECT T2.playerID FROM players_teams AS T1 INNER JOIN players AS T2 ON T1.playerID = T2.playerID WHERE T1.PostGP = 0 AND T1.year = 1988 ORDER BY T1.turnovers DESC LIMIT 1
professional_basketball,Which NBA team that didn't play in playoffs had the most winning rate in the 2000 NBA regular season?,"NBA refers to lgID = 'NBA'; didn't play in the playoffs refers to PostGP = 0; 2000 refers to year = 2000; the most winning rate refers to max(divide(won, add(won, lost)))",SELECT T2.tmID FROM players_teams AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.PostGP = 0 AND T1.year = 2000 ORDER BY CAST(T2.won AS REAL) / (T2.won + T2.lost) DESC LIMIT 1
professional_basketball,Which non-playoffs team had the most points in the regular season in the year 1998?,non-playoff refers to PostGP = 0; in the year 1998 refers to year = 1998; the most points refers to max(o_pts),SELECT T2.tmID FROM players_teams AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = 1998 AND T1.PostGP = 0 ORDER BY T1.points DESC LIMIT 1
professional_basketball,What's the full name of the team that won the most games in 2001 but didn't make the playoffs?,full name of the team refers to teams.name; in 2001 refers to year = 2001; didn't make the playoffs refers to PostGP = 0; won the most games refers to max(won),SELECT T2.tmID FROM players_teams AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.PostGP = 0 ORDER BY T2.won DESC LIMIT 1
professional_basketball,Which team that didn't play in playoffs had the most total rebounds in the year 1997?,didn't play in playoffs refers to PostGP = 0; in the year 1997 refers to year = 1997; the most total rebounds refers to max(o_tmRebound),SELECT T2.tmID FROM players_teams AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.PostGP = 0 AND T1.year = 1997 ORDER BY T1.rebounds DESC LIMIT 1
professional_basketball,"For the player who was drafted in the 1st round, 6th position in 1976, which team did he play in that year?",drafted in the 1st round refers to draftRound = 1; 6th position refers to draftSelection = 6; in 1976 refers to year = 1976; team refers to tmID,SELECT T2.tmID FROM draft AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.draftYear = T2.year WHERE T1.draftRound = 1 AND T1.draftSelection = 6 AND T1.draftYear = 1976
professional_basketball,"In the year 1998, how many home wins did the team which had the 1st round, 12th pick have that year?",in 1998 refers to year = 1998; 1st round refers to draftRound = 1; 12th pick refers to draftSelection = 12; home win refers to homeWon,SELECT T2.homeWon FROM draft AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.draftYear = T2.year WHERE T1.draftRound = 1 AND T1.draftSelection = 12 AND T1.draftYear = 1998
professional_basketball,"For the player who had the most rebounds throughout his allstar appearances, what was his weight and height?",the most rebounds refers to max(rebounds),"SELECT T1.weight, T1.height FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID ORDER BY T2.rebounds DESC LIMIT 1"
professional_basketball,Where was the high school of the player who had the most rebounds in the NBA allstar history?,the most rebounds refers to max(rebounds),SELECT T2.highSchool FROM player_allstar AS T1 INNER JOIN players AS T2 ON T1.playerID = T2.playerID ORDER BY T1.rebounds DESC LIMIT 1
professional_basketball,"In the year 1997 allstar game, which teams did the players had the most rebounds play in? List their team ids.",in 1997 refers to year = 1997; the most rebounds refers to max(rebounds); team id refers to tmID,SELECT T2.tmID FROM players_teams AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year INNER JOIN player_allstar AS T3 ON T3.playerID = T1.playerID WHERE T3.season_id = 1997 ORDER BY T1.rebounds DESC LIMIT 1
professional_basketball,"For the latest passing player who could play all the positions in the court, how many points did he have in his career?",the latest passing refers to max(season_id); play all the positions refers to pos like '%C%' or pos like '%F%' or pos like '%G%',"SELECT SUM(T2.points) FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T1.pos = 'C-F-G' GROUP BY T2.playerID, T2.year ORDER BY T2.year DESC LIMIT 1"
professional_basketball,Which team did the youngest player who could be in F-G position play in the NBA?,team refers to tmID; the youngest refers to max(year); F-G position refers to pos like '%F'; NBA refers to lgID = 'NBA',SELECT T1.tmID FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year INNER JOIN players AS T3 ON T2.playerID = T3.playerID WHERE T3.pos = 'F-G' AND T2.lgID = 'NBA' ORDER BY T3.birthDate DESC LIMIT 1
professional_basketball,"For the players who played the most PBLA games, who was graduated from Central Missouri State college?",the most PBLA games refers to max(games_played); Central Missouri State college refers to college = 'Central Missouri State',"SELECT T1.firstName, T1.middleName, T1.lastName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.lgID = 'PBLA' AND T2.GP = 10 AND T1.college = 'Central Missouri State' GROUP BY T1.firstName, T1.middleName, T1.lastName ORDER BY COUNT(T2.id) DESC LIMIT 1"
professional_basketball,"In 2000, which team did the player who played the least minutes without missing a single game play in? Give the full name of the team.",in 2000 refers to year = 2000; played the least minutes refers to min(minutes); without missing a single game refers to GP = 82; full name of the team refers to teams.name,SELECT T1.tmID FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T2.GP = 82 AND T2.year = 2000 GROUP BY T1.tmID ORDER BY SUM(T2.PostMinutes) ASC LIMIT 1
professional_basketball,"For all the full attendence players in 1995, which player had most turnovers? Give the full name of the player.","full attendance refers to GP = 82; in 1995 refers to year = 1995; the most turnovers refers to max(turnovers); full name refers to first_name, last_name","SELECT T1.firstName, T1.middleName, T1.lastName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.GP = 82 AND T2.year = 1995 ORDER BY T2.turnovers DESC LIMIT 1"
professional_basketball,"For the player in 2011 who started every game he played, which team had the player who had the most steals?",in 2011 refers to year = 2011; started every game refers to GP = GS; the most steals refers to max(steals); team refers to tmID,"SELECT T1.tmID FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = 2011 AND T2.GP = T2.GS GROUP BY T1.tmID, T2.steals ORDER BY T2.steals DESC LIMIT 1"
professional_basketball,Which team had the most same starting players througout the season? Give the full name of the team.,the same starting player refers to GP = GS; full name of the team refers to teams.name,SELECT DISTINCT T1.tmID FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T2.GP = T2.GS
professional_basketball,"For the 2001 rebounds leader in the league, when was his birthday?",2001 refers to year = 2001; rebounds leader refers to max(rebounds); birthday refers to birthDate,SELECT birthDate FROM players WHERE playerID = ( SELECT playerID FROM players_teams WHERE year = 2001 GROUP BY playerID ORDER BY SUM(rebounds + dRebounds) DESC LIMIT 1 )
professional_basketball,Which team did the all league rebound champion play in 1997? Give the full name of the team.,rebound champion refers to max(rebounds); 1997 refers to 1997; full name refers to teams.name,SELECT T1.name FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T2.year = 1997 GROUP BY T1.name ORDER BY SUM(rebounds + dRebounds) DESC LIMIT 1
professional_basketball,Which team had more than one player who grabbed more than 600 rebounds in 2011? Give the full name of the team.,more than one player refers to count(playerID) > 1; grabbed more than 600 rebounds refers to rebounds > 600; in 2011 refers to 2011; full name refers to teams.name,SELECT T1.tmID FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = 2011 AND T2.rebounds > 600
shakespeare,How many of Shakespeare's works were finished before the year 1602?,finished before the year 1602 refers to Date < 1602,SELECT COUNT(id) FROM works WHERE Date < 1602
shakespeare,How many scenes are there in Act 1 in Twelfth Night?,Twelfth Night refers to Title = 'Twelfth Night',SELECT COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Act = 1 AND T1.Title = 'Twelfth Night'
shakespeare,"What is the description of Act 1, Scene 2 in Twelfth Night?",Twelfth Night refers to Title = 'Twelfth Night',SELECT T2.Description FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Twelfth Night' AND T2.Act = 1 AND T2.Scene = 2
shakespeare,How many more scenes are there in Act 1 than in Act 5 in Twelfth Night?,"in Twelfth Night refers to Title = 'Twelfth Night'; How many more scenes = subtract(sum(Act = 1), sum(Act = 5))","SELECT SUM(IIF(T2.Act = 1, 1, 0)) - SUM(IIF(T2.Act = 5, 1, 0)) AS more FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Twelfth Night'"
shakespeare,Which work is the character Lord Abergavenny from? Please give its short or abbreviated title.,Lord Abergavenny refers to CharName = 'Lord Abergavenny'; short or abbreviated title refers to Title,SELECT DISTINCT T1.Title FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T4.CharName = 'Lord Abergavenny'
shakespeare,Please list the character names of all the characters from the work Twelfth Night.,character names refers to CharName; Twelfth Night refers to Title = 'Twelfth Night',SELECT DISTINCT T4.CharName FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T1.Title = 'Twelfth Night'
shakespeare,"How many paragraphs are there in Act 1, Scene 1 in Twelfth Night?",Twelfth Night refers to Title = 'Twelfth Night',SELECT SUM(T3.ParagraphNum) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id WHERE T2.Act = 1 AND T2.Scene = 1 AND T1.Title = 'Twelfth Night'
shakespeare,"Please list all the paragraphs in Act 1, Scene 1 in Twelfth Night.",Twelfth Night refers to Title = 'Twelfth Night'; list the paragraphs refers to PlainText,SELECT T3.PlainText FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id WHERE T2.Act = 1 AND T2.Scene = 1 AND T1.Title = 'Twelfth Night'
shakespeare,How many paragraphs contain the character Lord Abergavenny?,Lord Abergavenny refers to CharName = 'Lord Abergavenny',SELECT SUM(T1.ParagraphNum) FROM paragraphs AS T1 INNER JOIN characters AS T2 ON T1.character_id = T2.id WHERE T2.CharName = 'Lord Abergavenny'
shakespeare,"Please list the IDs of the paragraphs in which the character ""son to Tamora"" appears.","character ""son to Tamora""  refers to characters.Description = 'son to Tamora'",SELECT T1.id FROM paragraphs AS T1 INNER JOIN characters AS T2 ON T1.character_id = T2.id WHERE T2.Description = 'son to Tamora'
shakespeare,"For how many times has the scene ""OLIVIA’S house."" appeared in Twelfth Night?","""OLIVIA’S house.""  refers to chapters.Description = 'OLIVIA’S house.'; Twelfth Night refers to Title = 'Twelfth Night'",SELECT COUNT(T2.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Description = 'OLIVIA’S house.' AND T1.Title = 'Twelfth Night'
shakespeare,How many characters are there in Twelfth Night?,Twelfth Night refers to Title = 'Twelfth Night',SELECT COUNT(DISTINCT T4.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T1.Title = 'Twelfth Night'
shakespeare,Please give the title of the work of Shakespeare that has the most characters.,most characters refers to max(count(character_id)),"SELECT T.Title FROM ( SELECT T1.Title, COUNT(T3.character_id) AS num FROM works T1 INNER JOIN chapters T2 ON T1.id = T2.work_id INNER JOIN paragraphs T3 ON T2.id = T3.chapter_id INNER JOIN characters T4 ON T3.character_id = T4.id GROUP BY T3.character_id, T1.Title ) T ORDER BY T.num DESC LIMIT 1"
shakespeare,What is the average number of characters in all the works of Shakespeare?,"average number = divide(sum(character_id), count(work_id))",SELECT SUM(DISTINCT T4.id) / COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id
shakespeare,How many scenes are there on average in one act in Twelfth Night?,"Twelfth Night refers to Title = 'Twelfth Night'; average scene = divide(sum(Scene), count(Act))",SELECT SUM(T2.Scene) / COUNT(T2.Act) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Twelfth Night'
shakespeare,How many comedies did Shakespeare create?,comedies refers to GenreType = 'Comedy',SELECT COUNT(id) FROM works WHERE GenreType = 'Comedy'
shakespeare,When did Shakespeare write the first poem?,first poem refers to GenreType = 'Poem' and Date = 'min',SELECT MIN(Date) FROM works WHERE GenreType = 'Poem'
shakespeare,"Give the abbreviation name for the character ""Earl of Westmoreland"".","abbreviation name refers to Abbrev; character ""Earl of Westmoreland"" refers to CharName = 'Earl of Westmoreland'",SELECT DISTINCT Abbrev FROM characters WHERE CharName = 'Earl of Westmoreland'
shakespeare,Which chapter has the most paragraphs? Give the description of the chapter.,most paragraphs refers to max(count(chapter_id)),SELECT T1.Description FROM chapters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.chapter_id ORDER BY T2.ParagraphNum DESC LIMIT 1
shakespeare,"Which character was mentioned in the paragraph ""Would he do so, I'ld beg your precious mistress, Which he counts but a trifle.""? Give the character name.","paragraph ""Would he do so, I'ld beg your precious mistress, Which he counts but a trifle.""  refers to PlainText = 'Would he do so, I'ld beg your precious mistress, Which he counts but a trifle.'","SELECT T1.CharName FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T2.PlainText = 'Would he do so, I''ld beg your precious mistress,Which he counts but a trifle.'"
shakespeare,How many characters are there in Titus Andronicus?,Titus Andronicus refers to Title = 'Titus Andronicus',SELECT COUNT(DISTINCT T3.character_id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id WHERE T1.Title = 'Titus Andronicus'
shakespeare,List the number of acts in Two Gentlemen of Verona.,Two Gentlemen of Verona refers to LongTitle = 'Two Gentlemen of Verona',SELECT DISTINCT T1.Act FROM chapters AS T1 INNER JOIN works AS T2 ON T1.id = T1.work_id WHERE T2.LongTitle = 'Two Gentlemen of Verona'
shakespeare,What is the description for the character mentioned in paragraph No.640171?,paragraph No.640171 refers to paragraphs.id = '640171',SELECT T1.Description FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T2.id = '640171'
shakespeare,"Give the title of the work that contains the character ""Shylock"".","character ""Shylock"" refers to CharName = 'Shylock'",SELECT DISTINCT T1.Title FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T4.CharName = 'Shylock'
shakespeare,How many scenes are there in King John?,King John refers to Title = 'King John',SELECT COUNT(T2.Scene) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'King John'
shakespeare,How many chapters does the character Demetrius show in the story?,character Demetrius refers to CharName = 'Demetrius',SELECT COUNT(DISTINCT T2.chapter_id) FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T1.CharName = 'Demetrius'
shakespeare,Which Shakespeare story with character ID 324 has description of 'this friend of Caesar'?,,SELECT T1.Title FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T2.id = '324' AND T2.Description = 'friend to Caesar'
shakespeare,"Give the description for the Act No.2, Scene No.2 of Midsummer Night's Dream.",Act No.2 refers to Act = '2'; Scene No.2  refers to Scene = '2'; Midsummer Night's Dream refers to Title = 'Midsummer Night''s Dream',SELECT T2.Description FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Act = '2' AND T2.Scene = '2' AND T1.Title = 'Midsummer Night''s Dream'
shakespeare,Which Shakespeare tragedy has the most scenes? Give the long title.,tragedy refers to GenreType = 'Tragedy'; most scenes refers to max(count(Scene)),"SELECT T.LongTitle FROM ( SELECT T1.LongTitle, COUNT(T2.Scene) AS num FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.GenreType = 'Tragedy' GROUP BY T1.LongTitle, T2.Scene ) AS T ORDER BY T.num DESC LIMIT 1"
shakespeare,"How many paragraphs are there in the scene whose description is ""A Sea-port in Cyprus. An open place near the quay.""?",,SELECT SUM(T2.ParagraphNum) FROM chapters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.chapter_id WHERE T1.Description = 'A Sea-port in Cyprus. An open place near the quay.'
shakespeare,What percentage of all scenes are tragic scenes in Shakespeare's work in 1594?,"tragic scenes refers to GenreType = 'Tragedy'; work in 1594 refers to Date = '1594'; percentage = divide((sum(Scene) when GenreType = 'Tragedy'), count(Scene))as percentage","SELECT CAST(SUM(IIF(T2.GenreType = 'Tragedy', 1, 0)) AS REAL) * 100 / COUNT(T1.Scene) FROM chapters AS T1 INNER JOIN works AS T2 ON T1.work_id = T2.id WHERE T2.Date = '1594'"
shakespeare,Gives the average number of chapters in Shakespeare's 1599 work.,"1599 work refers to Date = '1599'; average number refers to divide(count(chapters.id), count(works.id))",SELECT CAST(COUNT(T1.id) AS REAL) / COUNT(DISTINCT T2.id) FROM chapters AS T1 INNER JOIN works AS T2 ON T1.work_id = T2.id WHERE T2.Date = '1599'
shakespeare,"How many ""servant to Timon"" characters are there?",servant to Timon refers to characters.Description = 'servant to Timon',SELECT COUNT(id) FROM characters WHERE Description = 'servant to Timon'
shakespeare,What is the title of the first ever work of William Shakespeare?,first ever work refers to min(Date),SELECT Title FROM works WHERE Date = ( SELECT MIN(Date) FROM works )
shakespeare,How many poems did Shakespeare write?,poems refers to GenreType = 'Poem',SELECT COUNT(id) FROM works WHERE GenreType = 'Poem'
shakespeare,"How many scenes are there in work id 7, act 1?",,SELECT COUNT(id) FROM chapters WHERE work_id = 7 AND Act = 1
shakespeare,"In the year 1500s, how many tragedies did Shakespeare write?",year 1500s refers to Date between 1500 and 1599; tragedies refers to GenreType = 'Tragedy',SELECT COUNT(id) FROM works WHERE GenreType = 'Tragedy' AND Date BETWEEN 1500 AND 1599
shakespeare,Who is the daughter of Capulet?,daughter of Capulet refers to characters.Description = 'Daughter to Capulet',SELECT CharName FROM characters WHERE Description = 'Daughter to Capulet'
shakespeare,"How many paragraphs are there in ""Ay, surely, mere the truth: I know his lady.""?","""Ay, surely, mere the truth: I know his lady."" refers to PlainText = 'Ay, surely, mere the truth: I know his lady.'","SELECT ParagraphNum FROM paragraphs WHERE PlainText = 'Ay, surely, mere the truth: I know his lady.'"
shakespeare,What is the long title of the work with the highest number of scenes in act 1?,highest number of scenes refers to max(count(Scene)),SELECT T2.LongTitle FROM chapters AS T1 INNER JOIN works AS T2 ON T1.work_id = T2.id WHERE T1.Act = 1 ORDER BY T1.Scene DESC LIMIT 1
shakespeare,What is the description of the chapter with the longest number of paragraphs?,chapter with the longest number of paragraphs refers to max(ParagraphNum),SELECT T2.Description FROM paragraphs AS T1 INNER JOIN chapters AS T2 ON T1.chapter_id = T2.id ORDER BY T1.ParagraphNum DESC LIMIT 1
shakespeare,"In ""Twelfth Night, Or What You Will"", what is the description of the chapter in 2nd scene, Act 2?","""Twelfth Night, Or What You Will""  refers to LongTitle = 'Twelfth Night, Or What You Will'; 2nd scene refers to Scene = 2","SELECT T2.Description FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.LongTitle = 'Twelfth Night, Or What You Will' AND T2.Scene = 2 AND T2.Act = 2"
shakespeare,What are the descriptions of the short chapters?,short chapters refers to ParagraphNum < 150,SELECT DISTINCT T2.Description FROM paragraphs AS T1 INNER JOIN chapters AS T2 ON T1.chapter_id = T2.id WHERE T1.ParagraphNum < 150
shakespeare,"Which of Shakespeare's work has chapter description of ""A field near Windsor""?",,SELECT T2.Title FROM chapters AS T1 INNER JOIN works AS T2 ON T1.work_id = T2.id WHERE T1.Description = 'A field near Windsor.'
shakespeare,How many paragraphs are there in the chapter with the highest amount of scenes in act 1?,How many paragraphs refers to ParagraphNum; highest amount of scenes refers to max(count(Scene)),SELECT T1.ParagraphNum FROM paragraphs AS T1 INNER JOIN chapters AS T2 ON T1.chapter_id = T2.id WHERE T2.Act = 1 ORDER BY T2.Scene DESC LIMIT 1
shakespeare,"Other than ""stage directions"", what is the name of the character that appeared 5 times in ""the sea-coast""?","Other than ""stage directions"" refers to CharName ! = '(stage directions)'; name of the character refers to CharName; appeared 5 times in ""the sea-coast"" refers to chapters.Description = 'The sea-coast.' and count(character_id) = 5","SELECT T.CharName FROM ( SELECT T3.CharName, COUNT(T3.id) AS num FROM paragraphs AS T1 INNER JOIN chapters AS T2 ON T1.chapter_id = T2.id INNER JOIN characters AS T3 ON T1.character_id = T3.id WHERE T2.Description = 'The sea-coast.' AND T3.CharName != '(stage directions)' AND T1.chapter_id = 18709 GROUP BY T3.id, T3.CharName ) AS T WHERE T.num = 5"
shakespeare,"Among the chapters in ""As You Like It"", how many chapters have a paragraph number of no more than 50?","""As You Like It"" refers to Title = 'As You Like It' ;paragraph number of no more than 50 refers to ParagraphNum < 50",SELECT COUNT(T3.chapter_id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id WHERE T1.Title = 'As You Like It' AND T3.ParagraphNum < 50
shakespeare,"In ""Florence. Without the walls. A tucket afar off"", what is the id of the character that was mentioned in ""His name, I pray you.""?","""Florence. Without the walls. A tucket afar off"" refers to chapters.Description = 'Florence. Without the walls. A tucket afar off.'; ""His name, I pray you."" refers to PlainText = 'His name, I pray you.'","SELECT T1.character_id FROM paragraphs AS T1 INNER JOIN chapters AS T2 ON T1.chapter_id = T2.id WHERE T1.PlainText = 'His name, I pray you.' AND T2.Description = 'Florence. Without the walls. A tucket afar off.'"
shakespeare,How many characters are there in Hamlet?,Hamlet refers to Title = 'Hamlet',SELECT COUNT(DISTINCT T3.character_id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id WHERE T1.Title = 'Hamlet'
shakespeare,"How many scenes are there in the 5th act of ""History of Henry VIII""?","5th act refers to Act = 5; ""History of Henry VIII"" refers to LongTitle = 'History of Henry VIII'",SELECT SUM(T2.Scene) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Act = 5 AND T1.LongTitle = 'History of Henry VIII'
shakespeare,"Among the history works written by Shakespeare, how many works whose 1st acts have no more than 2 scenes?",history refers to GenreType = 'History' ; 1st acts  refers to Act = 1; no more than 2 scenes refers to count(Scene) < 2,SELECT COUNT(DISTINCT T2.work_id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Act = 1 AND T2.Scene < 2 AND T1.GenreType = 'History'
shakespeare,How many acts are there in Sonnets?,Sonnets refers to Title = 'Sonnets',SELECT SUM(DISTINCT T2.Act) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Sonnets'
shakespeare,What is the description of the chapter where the character whose abrreviated name is 1Play appeared first?,abbreviated name is 1Play; appeared first refers to Abbrev = '1Play' and min(chapter_id),SELECT T2.Description FROM paragraphs AS T1 INNER JOIN chapters AS T2 ON T1.chapter_id = T2.id INNER JOIN characters AS T3 ON T1.character_id = T3.id WHERE T3.Abbrev = '1Play' ORDER BY T1.chapter_id LIMIT 1
shakespeare,What are the titles and genres of the one-act works of Shakespeare?,"one-act works refers to count(Act) = 1; genre refers to GenreType
","SELECT DISTINCT T1.Title, T1.GenreType FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Act = 1"
shakespeare,How many paragraphs are there in the longest chapter where Sir Richard Ratcliff appeared?,longest chapter refers to max(ParagraphNum); Sir Richard Ratcliff  refers to CharName = 'Sir Richard Ratcliff',SELECT MAX(T2.ParagraphNum) FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T1.CharName = 'Sir Richard Ratcliff'
shakespeare,"In ""A Lover's Complaint"", what is the description of Act 1, Scene 1?","""A Lover's Complaint"" refers to Title = 'A Lover''s Complaint'",SELECT T2.Description FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Act = 1 AND T2.Scene = 1 AND T1.Title = 'A Lover''s Complaint'
shakespeare,When did Shakespeare create his work that has 154 scenes?,When refers to Date; has 154 scenes refers to count(Scene) = 154,"SELECT T1.Date, T1.id FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Scene = 154"
shakespeare,"On average, how many scenes are there in each of the comedy works written by Shakespeare?","comedy refers to GenreType = 'Comedy'; average = divide(sum(count(Scene)), count(work.id))",SELECT CAST(SUM(T2.Scene) AS REAL) / COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.GenreType = 'Comedy'
shakespeare,"Between Rome and Juliet, which character was mentioned the most in the The Tragedy of Romeo and Juliet? Calculate for Romeo and Juliet's individual amount of appearance in percentage against the overall number of characters that appeared in the said work.","Rome and Juliet refers to CharName = 'Romeo' and CharName = 'Juliet'; The Tragedy of Romeo and Juliet refers to LongTitle = 'The Tragedy of Romeo and Juliet'; percentage = divide(sum(charater.id) when CharName = 'Romeo', sum(charater.id)) as percentage and percentage = divide(sum(charater.id) when CharName = 'Juliet', count(charater.id)) as percentage","SELECT SUM(IIF(T4.CharName = 'Romeo', 1, 0)), SUM(IIF(T4.CharName = 'Juliet', 1, 0)), CAST(SUM(IIF(T4.CharName = 'Romeo', 1, 0)) + SUM(IIF(T4.CharName = 'Juliet', 1, 0)) AS REAL) * 100 / COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id"
shakespeare,"What is the paragraph number with plain text ""This is Illyria, lady""?",paragraph number refers to ParagraphNum,"SELECT ParagraphNum FROM paragraphs WHERE PlainText = 'This is Illyria, lady.'"
shakespeare,How many number of paragraphs are there in chapter ID 18881?,number of paragraphs refers to ParagraphNum,SELECT COUNT(ParagraphNum) FROM paragraphs WHERE chapter_id = 18881
shakespeare,List down any 5 titles in the history genre.,in the history genre refers to GenreType = 'History',SELECT Title FROM works WHERE GenreType = 'History' LIMIT 5
shakespeare,How many scenes are there in Act 5 of work ID 9?,,SELECT COUNT(Scene) FROM chapters WHERE work_id = 9 AND Act = 5
shakespeare,List the character names and descriptions of chapter ID 18710.,character names refers to CharName,"SELECT DISTINCT T1.CharName, T1.Description FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T2.Chapter_id = 18710"
shakespeare,"How many chapters are there in ""Midsummer Night's Dream""?","in ""Midsummer Night's Dream"" refers to Title = 'Midsummer Night's Dream'",SELECT COUNT(T2.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Midsummer Night''s Dream'
shakespeare,"How many paragraphs are there in Act 5 Scene 1 of ""Comedy of Errors""?","""Comedy of Errors"" refers to Title = 'Comedy of Errors'",SELECT COUNT(T3.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id WHERE T2.Act = 5 AND T2.Scene = 1 AND T1.Title = 'Comedy of Errors'
shakespeare,"What are the character names and descriptions of characters in ""Venus and Adonis""?","character names refers to CharName; ""Venus and Adonis"" refers to Title = 'Venus and Adonis'","SELECT DISTINCT T4.CharName, T2.Description FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T1.Title = 'Venus and Adonis'"
shakespeare,"What is the title which has character named ""Froth""?","character named ""Froth"" refers to CharName = 'Froth'",SELECT DISTINCT T1.title FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T4.CharName = 'Froth'
shakespeare,"How many chapters include the character name ""First Witch""?","character name ""First Witch"" refers to CharName = 'First Witch'",SELECT COUNT(T2.chapter_id) FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T1.CharName = 'First Witch'
shakespeare,"List the scenes and descriptions in Act 1 of "" Pericles, Prince of Tyre"".",""" Pericles, Prince of Tyre"" refers to LongTitle = 'Pericles, Prince of Tyre'","SELECT T2.Scene, T2.Description FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.LongTitle = 'Pericles, Prince of Tyre' AND T2.Act = 1"
shakespeare,Describe the full title which had the character named Servant to Montague.,full title refers to LongTitle; character named Servant to Montague refers to characters.Description = 'Servant to Montague',SELECT DISTINCT T1.LongTitle FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T4.Description = 'Servant to Montague'
shakespeare,"Describe the scene number, act, and title of work which had the description of ""The house of ANTIPHOLUS of Ephesus"" in chapter.",,"SELECT T2.Act, T2.Scene, T1.Title FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Description = 'The house of ANTIPHOLUS of Ephesus.'"
shakespeare,"Provide the character name, paragraph number, and plain text of ""cousin to the king"" description.",character name refers to CharName; paragraph number refers to ParagraphNum,"SELECT T1.CharName, T2.ParagraphNum, T2.PlainText FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T1.Description = 'cousin to the king'"
shakespeare,Calculate average scene per act in Antony and Cleopatra.,"Antony and Cleopatra refers to Title = 'Antony and Cleopatra'; average scene per act = divide(sum(Scene), count(act))
",SELECT CAST(SUM(T2.Scene) AS REAL) / COUNT(T2.act) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Antony and Cleopatra'
shakespeare,"Calculate the percentage of paragraphs in all chapters of ""All's Well That Ends Well"".","""All's Well That Ends Well"" refers to Title = 'All's Well That Ends Well'; percentage = divide(sum(paragraphs.id) when Title = 'All's Well That Ends Well', count(paragraphs.id)) as percentage","SELECT CAST(SUM(IIF(T1.Title = 'All''s Well That Ends Well', 1, 0)) AS REAL) * 100 / COUNT(T3.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id"
shakespeare,"How many ""all"" character names have the ""all"" abbreviation?","character names refers to CharName；""all"" abbreviation refers to Abbrev = 'all'",SELECT COUNT(id) FROM characters WHERE Abbrev = 'All'
shakespeare,Please name any three comedic works.,comedic works refers to GenreType = 'comedy',SELECT Title FROM works WHERE GenreType = 'comedy' LIMIT 3
shakespeare,"From 1593 onwards, what is the difference between the number of comedy works and history works?",From 1593 onwards refers to Date > 1593; comedy works and history works refers to GenreType = 'comedy' and GenreType = 'History',"SELECT SUM(IIF(GenreType = 'Comedy', 1, 0)) - SUM(IIF(GenreType = 'History', 1, 0)) FROM works WHERE Date > 1593"
shakespeare,Please name the latest historical work.,name refers to LongTitle; latest historical work refers to GenreType = 'History' and max(Date),SELECT LongTitle FROM works WHERE GenreType = 'History' ORDER BY Date DESC LIMIT 1
shakespeare,What are the work numbers that are related to King Henry?,work numbers refers to works.id; related to King Henry refers to Title = '%Henry%',SELECT id FROM works WHERE Title LIKE '%Henry%'
shakespeare,What are the character names for a senator of Venice?,character names refers to CharName; a senator of Venice refers to characters.Description = 'a senator of Venice',SELECT CharName FROM characters WHERE Description = 'a senator of Venice'
shakespeare,What is the name of the character that can be found in paragraph 8 of chapter 18820?,name of the character refers to CharName; paragraph 8 refers to ParagraphNum = 8; chapter 18820 refers to chapter_id = 18820,SELECT T1.CharName FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T2.ParagraphNum = 8 AND T2.chapter_id = 18820
shakespeare,"What is the description of chapter 18704, where there is a character called Orsino?",chapter 18704 refers to chapters.id = 18704; character called Orsino refers to CharName = 'Orsino',SELECT DISTINCT T3.Description FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id INNER JOIN chapters AS T3 ON T2.chapter_id = T3.id WHERE T1.CharName = 'Orsino' AND T3.ID = 18704
shakespeare,"How many scenes can be found in ""Twelfth Night, Or What You Will""?","""Twelfth Night, Or What You Will"" refers to LongTitle","SELECT COUNT(T2.Scene) AS cnt FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.LongTitle = 'Cymbeline, King of Britain'"
shakespeare,Please list all of the character descriptions in paragraph 20.,paragraph 20 refers to ParagraphNum = 20,SELECT T1.Description FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T2.ParagraphNum = 20
shakespeare,"How many chapters have the name Gratiano as a character for ""friend to Antonio and Bassiano""?","name Gratiano as a character refers to CharName = 'Gratiano'; ""friend to Antonio and Bassiano"" refers to characters.Description = 'friend to Antonio and Bassiano'",SELECT COUNT(DISTINCT T2.chapter_id) FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T1.CharName = 'Gratiano' AND T1.Description = 'friend to Antonio and Bassiano'
shakespeare,"What is the description of chapter 18706 in ""All's Well That Ends Well""?","chapter 18706 refers to chapters.id; ""All's Well That Ends Well"" refers to Title = 'All's Well That Ends Well'",SELECT T2.Description FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.id = 18706 AND T1.Title = 'All''s Well That Ends Well'
shakespeare,What are the character names in paragraph 3?,character names refers to CharName; paragraph 3 refers to ParagraphNum = 3,SELECT DISTINCT T1.CharName FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T2.ParagraphNum = 3
shakespeare,Please list all of the paragraphs that have the character name Aedile.,paragraphs  refers to ParagraphNum; character name Aedile refers to CharName = 'Aedile',SELECT T2.ParagraphNum FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T1.CharName = 'Aedile'
shakespeare,Please list any two character names in chapter 18708.,character names refers to CharName; chapter 18708 refers to chapter_id = 18708,SELECT T1.CharName FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T2.chapter_id = 18708 LIMIT 2
shakespeare,"How many acts can be found in the comedy ""Two Gentlemen of Verona""?","comedy refers to GenreType = 'comedy'; ""Two Gentlemen of Verona"" refers to Title = 'Two Gentlemen of Verona'",SELECT COUNT(T1.ACT) FROM chapters AS T1 LEFT JOIN works AS T2 ON T1.work_id = T2.id WHERE T2.GenreType = 'Comedy' AND T2.Title = 'Two Gentlemen of Verona'
shakespeare,What is the percentage of historical works that have not fewer than five scenes in the 1500s?,"historical works refers to GenreType = 'history'; have not fewer than five scenes in the 1500s refers to count(Scene) > = 5 and DATE > = 1500 AND DATE < = 1599; percentage = divide(count(works.id) where GenreType = 'history' and count(Scene) > = 5, count(works.id) ) as percentage",SELECT CAST(( SELECT COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.GenreType = 'History' AND T1.DATE BETWEEN 1500 AND 1599 GROUP BY T1.id HAVING COUNT(T2.Scene) >= 5 ) AS REAL) * 100 / COUNT(id) FROM works WHERE GenreType = 'History' AND DATE BETWEEN 1500 AND 1599
shakespeare,What is the percentage of act number 5 in Titus Andronicus?,"act number 5 refers to Act = 5; Titus Andronicus refers to Title = 'Titus Andronicus'; percentage = divide(sum(Act = 5), count(Act)) as percentage","SELECT CAST(SUM(IIF(T2.act = 5, 1, 0)) AS REAL) * 100 / COUNT(T2.act) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Titus Andronicus'"
shakespeare,How many of the works of Shakespeare are Tragedy?,Tragedy refers to GenreType = 'Tragedy',SELECT COUNT(id) FROM works WHERE GenreType = 'Tragedy'
shakespeare,"Among the works of Shakespeare, how many of them have the word ""Henry"" on its title?","works refers to Title; have the word ""Henry"" on its title refers to Title = '%Henry%'",SELECT COUNT(id) FROM works WHERE Title LIKE '%Henry%'
shakespeare,"Give the character's ID of the character that said the paragraph ""O my poor brother! and so perchance may he be.""","""O my poor brother! and so perchance may he be."" refers to  PlainText = 'O my poor brother! and so perchance may he be.'",SELECT character_id FROM paragraphs WHERE PlainText = 'O my poor brother! and so perchance may he be.'
shakespeare,"List the paragraph number and paragraphs said by the character named ""Sir Andrew Aguecheek"".","paragraph number refers to ParagraphNum; character named ""Sir Andrew Aguecheek"" refers to CharName = 'Sir Andrew Aguecheek'","SELECT T2.ParagraphNum, T2.id FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T1.CharName = 'Sir Andrew Aguecheek'"
shakespeare,Give the title and the characters name of the most recent work of Shakespeare.,characters name refers to CharName; most recent work refers to max(Date),"SELECT T1.Title, T4.CharName FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id ORDER BY T1.Date DESC LIMIT 1"
shakespeare,"Among paragraphs with paragraph number between 1900 to 1950, list the texts said by a character described as a sea captain, friend to Sebatian.","paragraph number between 1900 to 1950 refers to ParagraphNum > = 1500 AND ParagraphNum < = 1950; texts refers to PlainText; a character described as a sea captain, friend to Sebatian refers to characters.Description = 'a sea captain, friend to Sebastian'","SELECT T1.description FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T2.PlainText = 'a sea captain, friend to Sebastian' AND T2.ParagraphNum BETWEEN 1500 AND 1950"
shakespeare,"What is the long title of the Shakespeare's work with Act 4 Scene 5 described as ""Mytilene. A street before the brothel.""?","described as ""Mytilene. A street before the brothel."" refers to chapters.Description = 'Mytilene. A street before the brothel.'",SELECT T1.LongTitle FROM works AS T1 RIGHT JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Description = 'Mytilene. A street before the brothel.'
shakespeare,"Who is the character that said ""This is Illyria, lady.""?","character refers to CharName; ""This is Illyria, lady."" refers to PlainText = 'This is Illyria, lady.'","SELECT T1.CharName FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T2.PlainText = 'This is Illyria, lady.'"
shakespeare,"In Shakespeare's works between 1600 to 1610, how many of these have a character as a ""Third Servingman""?","between 1600 to 1610 refers to DATE > = 1600 AND DATE < = 1610; ""Third Servingman"" refers to CharName = 'Third Servingman'",SELECT COUNT(DISTINCT T2.work_id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T1.DATE BETWEEN 1600 AND 1610 AND T4.CharName = 'Third Servingman'
shakespeare,"In the Venus and Adonis, what is the description of the last scene listed?",Venus and Adonis refers to Title = 'Venus and Adonis'; last scene refers to max(Scene),SELECT T2.Description FROM works AS T1 RIGHT JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Venus and Adonis' ORDER BY T2.Scene DESC LIMIT 1
shakespeare,"In Act 1 Scene 2 of the Twelfth Night, what is the total number of of lines said by Viola?",Twelfth Night refers to Title = 'Twelfth Night'; total number of lines said by Viola refers to count(character_id) where CharName = 'Viola',SELECT COUNT(T4.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T2.Act = 1 AND T2.Scene = 2 AND T4.id = 1238 AND T4.CharName = 'Viola' AND T1.Title = 'Twelfth Night'
shakespeare,"What is the character and work ID of the text ""Fear not thou, man, thou shalt lose nothing here.""?","character refers to chapter_id; text ""Fear not thou, man, thou shalt lose nothing here.""  refers to PlainText = 'Fear not thou, man, thou shalt lose nothing here.'","SELECT T2.character_id, T1.work_id FROM chapters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.chapter_id WHERE T2.PlainText = 'Fear not thou, man, thou shalt lose nothing here.'"
shakespeare,"What is the chapter description where the paragraph ""What, wilt thou hear some music, my sweet love?"" belongs?","paragraph ""What, wilt thou hear some music, my sweet love?"" refers to  PlainText = 'What, wilt thou hear some music, my sweet love?'","SELECT T1.id, T1.Description FROM chapters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.chapter_id WHERE T2.PlainText = 'What, wilt thou hear some music, my sweet love?'"
shakespeare,List the scene numbers involving the character named Sir Toby Belch in the Twelfth Night.,scene numbers refers to Scene; character named Sir Toby Belch refers to CharName = 'Sir Toby Belch'; in the Twelfth Night refers to Title = 'Twelfth Night',SELECT DISTINCT T2.Scene FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T1.Title = 'Twelfth Night' AND T4.CharName = 'Sir Toby Belch'
shakespeare,"In Shakespeare's works before 1600, list down the title of the tragic story he had written that involved a character named ""Tybalt"".","works before 1600 refers to DATE < 1600; tragic story refers to GenreType = 'Tragedy'; character named ""Tybalt"" refers to CharName = 'Tybalt'",SELECT DISTINCT T1.title FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T1.DATE < 1600 AND T1.GenreType = 'Tragedy' AND T4.CharName = 'Tybalt'
shakespeare,List the chapter ID of the works with a year greater than the 89% of average year of all listed works of Shakespeare.,"a year greater than the 89% of average year refers to DATE > multiply(divide(SUM(DATE) , COUNT(DATE)), 0.89)",SELECT T2.id FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.DATE > ( SELECT AVG(DATE) FROM works ) * 0.89
shakespeare,"Among the comedy works of Shakespeare, what is the percentage of his works with a character named ""antonio""?","comedy works refers to GenreType = 'Comedy'; a character named ""antonio"" refers to CharName = 'antonio'; percentage = divide(sum(CharName = 'Antonio'), count(CharName)) as percentage","SELECT CAST(SUM(IIF(T4.CharName = 'antonio', 1, 0)) AS REAL) * 100 / COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T1.GenreType = 'Comedy'"
cars,"Among the cars with 8 cylinders, what is the name of the one that's the most expensive?",with 8 cylinders refers to cylinders = 8; name of the car refers to car_name; the most expensive refers to max(price),SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.cylinders = 8 ORDER BY T2.price DESC LIMIT 1
cars,"Among the cars over 3000lbs, how many of them cost less than $30000?",over 3000lbs refers to weight > 3000; cost less than $30000 refers to price < 30000,SELECT COUNT(T1.car_name) FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.weight > 3000 AND T2.price < 30000
cars,What is the acceleration of the most expensive car?,the most expensive refers to max(price),SELECT T1.acceleration FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 1
cars,How much US dollars does a Ford Torino cost?,cost refers to price; Ford Torino refers to car_name = 'ford torino',SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'ford torino'
cars,What was the origin country of the car model ford torino produced in 1970?,origin country refers to country; Ford Torino refers to car_name = 'ford torino'; produced in 1970 refers to model_year = 1970,SELECT T3.country FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T1.car_name = 'ford torino' AND T2.model_year = 1970
cars,"Among the car models introduced in the market in 1970, how many of them have the USA as their origin country?",introduced in the market in 1970 refers to model_year = 1970; have the USA as origin country refers to country = 'USA',SELECT COUNT(*) FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin WHERE T1.model_year = 1970 AND T2.country = 'USA'
cars,Please list the names of all the car models whose origin country is the USA.,name of car model refers to car_name; origin country is the USA refers to country = 'USA',SELECT DISTINCT T1.car_name FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T2.country = T3.origin WHERE T3.country = 'USA'
cars,Please list the names of the top 3 most expensive cars.,name of the car refers to car_name; the most expensive refers to max(price),SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 3
cars,Please list all the years in which the car model Chevrolet Impala was introduced in the market.,year refers to model_year; Chevrolet Impala refers to car_name = 'chevrolet impala',SELECT DISTINCT T1.model_year FROM production AS T1 INNER JOIN data AS T2 ON T1.ID = T2.ID WHERE T2.car_name = 'chevrolet impala'
cars,"Among the cars with an acceleration of over 10 miles per squared hour, how many of them cost more than $20000 and less than $30000?",an acceleration of over 10 miles per squared hour refers to acceleration > 10; cost more than $20000 and less than $30000 refers to price < 30000 AND price > 20000,SELECT COUNT(*) FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.acceleration > 10 AND T2.price BETWEEN 20000 AND 30000
cars,Please list the weights of all the cars with the price over $40000.,price over $40000 refers to price > 40000,SELECT T1.weight FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T2.price > 40000
cars,What is the maximum acceleration of a car with price over $40000?,the maximum acceleration refers to max(acceleration); price over $40000 refers to price > 40000,SELECT MAX(T1.acceleration) FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T2.price > 40000
cars,What is the average price of cars with 8 cylinders?,with 8 cylinders refers to cylinders = 8; average price = avg(price) where cylinders = 8,SELECT AVG(T2.price) FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.cylinders = 8
cars,What is the maximum sweep volume of a car that costs less than $30000?,"cost less than $30000 refers to price < 30000; the maximum sweep volume = max(divide(displacement, cylinders)) where price < 30000",SELECT MAX(T1.displacement / T1.cylinders) FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T2.price < 30000
cars,How many cars in the database are originated from Europe?,originated from Europe refers to country = 'Europe',SELECT COUNT(*) FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin WHERE T2.country = 'Europe'
cars,Show the origin country of Chevrolet Malibu.,origin country refers to country; Chevrolet Malibu refers to car_name = 'chevrolet malibu',SELECT T3.country FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T1.car_name = 'chevrolet malibu'
cars,What are the miles per gallon of the most expensive car?,miles per gallon refers to mpg; the most expensive refers to max(price),SELECT T1.mpg FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 1
cars,Tell the origin country of car no.382.,origin country refers to country; car no.382 refers to ID = 382,SELECT DISTINCT T2.country FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin WHERE T1.ID = 382
cars,Which is the origin country of the $44274.40748 car?,origin country refers to country; the $44274.40748 car refers to price = 44274.40748,SELECT T3.country FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T1.price = 44274.40748
cars,How much is the Volkswagen Dasher with 14.1 mph acceleration?,cost refers to price; Volkswagen Dasher refers to car_name = 'volkswagen dasher'; 14.1 mph acceleration refers to acceleration = 14.1,SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'volkswagen dasher' AND T1.acceleration = '14.1'
cars,Provide the engine displacement status of the $37443.85589 car.,engine displacement status refers to displacement; the $37443.85589 car refers to price = 37443.85589,SELECT T1.displacement FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T2.price = '37443.85589'
cars,When was the $32650.65157 car introduced to the market? State the year.,the $32650.65157 car refers to price = 32650.65157; year refers to model,SELECT T1.model FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T2.price = '32650.65157'
cars,Provide the price of the only Toyota Corona hardtop in the database.,Toyota Corona hardtop refers to car_name = 'toyota corona hardtop',SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'toyota corona hardtop'
cars,How many cylinders does the cheapest car have?,the cheapest car refers to min(price),SELECT T1.cylinders FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY price ASC LIMIT 1
cars,Which car in the database provides the best crash protection based on its weight? How much is it?,the best crash protection refers to max(weight); cost refers to price,"SELECT T1.ID, T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T1.weight DESC LIMIT 1"
cars,State the origin country of the fastest car in the database.,origin country refers to country; the fastest refers to max(horsepower),SELECT T3.country FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country ORDER BY T1.horsepower DESC LIMIT 1
cars,What is the percentage of Japanese cars in the database?,"Japanese car refers to country = 'Japan'; percentage = divide(count(ID where country = 'Japan'), count(ID)) * 100%",SELECT CAST(SUM(CASE WHEN T2.country = 'Japan' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin
cars,Calculate the swept volume of the $34538.97449 car.,"sweep volume = divide(displacement, cylinders); the $34538.97449 car refers to price = 34538.97449",SELECT T1.displacement / T1.cylinders FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T2.price = 34538.97449
cars,What is the name of the most expensive car?,name of the car refers to car_name; the most expensive refers to max(price),SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 1
cars,How many cars were released in the USA in 1981?,in the USA refers to country = 'USA'; in 1981 refers to model_year = 1981,SELECT COUNT(*) FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin WHERE T2.country = 'USA' AND T1.model_year = 1981
cars,How much is the car with the highest sweep volume?,"cost refers to price; the highest sweep volume refers to max(divide(displacement, cylinders))",SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T1.displacement / T1.cylinders DESC LIMIT 1
cars,What is the fastest car made by Japan?,the fastest refers to max(horsepower); made by Japan refers to country = 'Japan'; name of the car refers to car_name,SELECT T1.car_name FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T3.country = 'Japan' ORDER BY T1.horsepower DESC LIMIT 1
cars,How many times was Ford Maverick introduced to the market?,Ford Maverick refers to car_name = 'ford maverick';,SELECT COUNT(T2.model_year) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'ford maverick'
cars,Which country produced the most fuel-efficient car?,the most fuel-efficient refers to max(mpg),SELECT T3.country FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country ORDER BY T1.mpg DESC LIMIT 1
cars,Which Dodge car is the cheapest?,Dodge car refers to car_name LIKE 'dodge%'; the cheapest refers to min(price); name of the car refers to car_name,SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.car_name LIKE 'dodge%' ORDER BY T2.price ASC LIMIT 1
cars,What is the name of the most expensive car that was produced by the USA?,name of the car refers to car_name; the most expensive refers to max(price); produced by the USA refers to country = 'USA',SELECT T4.car_name FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country INNER JOIN data AS T4 ON T4.ID = T1.ID WHERE T3.country = 'USA' ORDER BY T1.price DESC LIMIT 1
cars,"Among the cars with an engine displacement of no less than 400 cubic millimeter, how many cars cost at least 30,000?","engine displacement of no less than 400 cubic millimeter refers to displacement > 400; cost at least 30,000 refers to price > 30000",SELECT COUNT(*) FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.displacement > 400 AND T2.price > 30000
cars,Which year did Europe produce the most cars?,year refers to model_year; Europe refers to country = 'Europe'; the most cars refers to max(model_year),SELECT T1.model_year FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin WHERE T2.country = 'Europe' GROUP BY T1.model_year ORDER BY COUNT(T1.model_year) DESC LIMIT 1
cars,How much is the Peugeot 505s Turbo Diesel?,cost refers to price; Peugeot 505s Turbo Diesel refers to car_name = 'peugeot 505s turbo diesel',SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'peugeot 505s turbo diesel'
cars,What is the miles per square hour of the cheapest car produced by the USA?,miles per square hour refers to acceleration; the cheapest refers to min(price); produced by the USA refers to country = 'USA',SELECT T4.acceleration FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country INNER JOIN data AS T4 ON T4.ID = T1.ID WHERE T3.country = 'USA' ORDER BY T1.price ASC LIMIT 1
cars,Which country produced the highest number of cars? Calculate the annual average number of cars that the said country produced from the very start to the present.,"the highest number of cars refers to max(country); annual average number = divide(count(ID), count(model_year))","SELECT T2.country, CAST(COUNT(T1.ID) AS REAL) / COUNT(DISTINCT T1.model_year) FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin GROUP BY T2.country ORDER BY COUNT(T2.country) DESC LIMIT 1"
cars,What is the percentage of cars that was produced by Japan among those that have a sweep volume of no less than 30?,"produced by Japan refers to country = 'Japan'; a sweep volume of no less than 30 refers to divide(displacement, cylinders) > 30; percentage = divide(count(ID where country = 'Japan'), count(ID)) * 100% where divide(displacement, cylinders) > 30",SELECT CAST(SUM(CASE WHEN T3.country = 'Japan' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T1.displacement / T1.cylinders > 30
cars,List the name of the cars with model year 1975.,name of the car refers to car_name; model year 1975 refers to model_year = 1975,SELECT T1.car_name FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T2.model_year = 1975
cars,Calculate the average price of cars from Europe.,from Europe refers to country = 'Europe'; average price = avg(price) where country = 'Europe',SELECT AVG(T1.price) FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T3.country = 'Europe'
cars,What is the price of the car ID 15?,,SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.ID = 15
cars,How many of the cars from Japan weighed less than 3000?,from Japan refers to country = 'Japan'; weighed less than 3000 refers to weight < 3000,SELECT COUNT(*) FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country INNER JOIN data AS T4 ON T4.ID = T1.ID WHERE T3.country = 'Japan' AND T4.weight < 3000
cars,"Among the cars produced in year 1973, how many of the cars have horsepower less than 100?",produced in year 1973 refers to model_year = 1973; have horsepower less than 100 refers to horsepower < 100,SELECT COUNT(*) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T2.model_year = 1973 AND T1.horsepower < 100
cars,Provide the ID of cars from Japan worth greater than 35000 and have an acceleration of 14.,from Japan refers to country = 'Japan'; worth greater than 35000 refers to price > 35000; have an acceleration of 14 refers to acceleration = 14,SELECT T4.ID FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country INNER JOIN data AS T4 ON T4.ID = T1.ID WHERE T3.country = 'Japan' AND T1.price > 3500 AND T4.acceleration = 14
cars,Give the model year of the heaviest car.,the heaviest refers to max(weight),SELECT T2.model_year FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID ORDER BY T1.weight DESC LIMIT 1
cars,What is the horsepower and model year of the car named Subaru Dl?,the car named Subaru Dl refers to car_name = 'subaru dl',"SELECT T1.horsepower, T2.model_year FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'subaru dl'"
cars,"Among the cars originated from Japan, what is the name of the car with the highest price?",from Japan refers to country = 'Japan'; name of the car refers to car_name; the highest price refers to max(price),SELECT T4.car_name FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country INNER JOIN data AS T4 ON T4.ID = T1.ID WHERE T3.country = 'Japan' ORDER BY T1.price DESC LIMIT 1
cars,What are the names of the cars worth 20000?,name of the car refers to car_name; worth 20000 refers to price = 20000,SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T2.price = 20000
cars,How many cars worth greater than 40000 were from the USA?,worth greater than 40000 refers to price > 40000; from the USA refers to country = 'USA',SELECT COUNT(*) FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T3.country = 'USA' AND T1.price > 40000
cars,Provide the price and country origin of the car named Ford Maverick.,country origin refers to country; Ford Maverick refers to car_name = 'ford maverick',"SELECT DISTINCT T1.price, T3.country FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country INNER JOIN data AS T4 ON T4.ID = T1.ID WHERE T4.car_name = 'ford maverick'"
cars,List the car's name with a price worth greater than 85% of the average price of all cars.,"car's name refers to car_name; a price worth greater than 85% of the average price of all cars refers to price > multiply(avg(price), 0.85)",SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T2.price * 100 > ( SELECT AVG(price) * 85 FROM price )
cars,Calculate the difference between the number of cars that has a horsepower of 130 with the model year 1970 and model year 1976,"a horsepower of 130 refers to horsepower = 130; difference = subtract(count(ID where model_year = 1970), count(ID where model_year = 1976)) where horsepower = 130",SELECT SUM(CASE WHEN T2.model_year = 1970 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.model_year = 1976 THEN 1 ELSE 0 END) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T1.horsepower = 130
cars,"Among the cars from Asia, list the IDs of cars that were introduced in 1979.",from Asia refers to country = 'Japan'; introduced in 1979 refers to model_year = 1979,SELECT T1.ID FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin WHERE T2.country = 'Japan' AND T1.model_year = 1979
cars,Which country produced the car with the lowest mileage per gallon?,the lowest mileage per gallon refers to min(mpg),SELECT T3.country FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country ORDER BY T1.mpg ASC LIMIT 1
cars,"Provide the name, model, sweep volume, and introduced year of the car with the best crash protection.","car's name refers to car_name; sweep volume = divide(displacement, cylinders); introduced year refers to model_year; the best crash protection refers to max(weight)","SELECT T1.car_name, T1.model, T1.displacement / T1.cylinders, T2.model_year FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID ORDER BY T1.weight DESC LIMIT 1"
cars,"Among the cars introduced in 1977, provide the names and the horse powers of cars from Europe.",introduced in 1977 refers to model_year = 1977; car's name refers to car_name; from Europe refers to country = 'Europe',"SELECT T1.car_name, T1.horsepower FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T2.model_year = 1977 AND T3.country = 'Europe'"
cars,Provide the name and model of the car with the highest price.,car's name refers to car_name; the highest price refers to max(price),"SELECT T1.car_name, T1.model FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 1"
cars,What is the price of a Chevrolet Bel Air?,Chevrolet Bel Air refers to car_name = 'chevrolet bel air',SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'chevrolet bel air'
cars,What is the average price per car produced in Japan?,produced in Japan refers to country = 'Japan'; average price per car = avg(price) where country = 'Japan',SELECT AVG(T1.price) FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T3.country = 'Japan'
cars,Which country produced the car with the lowest price?,the lowest price refers to min(price),SELECT T3.country FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country ORDER BY T1.price ASC LIMIT 1
cars,"Among the cars produced in 1975, provide IDs, names, and producing countries of the cars with the maximum number of cylinders.",produced in 1975 refers to model_year = 1975; names refers to car_name; producing countries refers to country; the maximum number of cylinders refers to max(cylinders),"SELECT T1.ID, T1.car_name, T3.country FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T2.model_year = 1975 ORDER BY T1.cylinders DESC LIMIT 1"
cars,"Which car is the cheapest? Provide its acceleration, number of cylinders, and producing year.",the cheapest refers to min(price); number of cylinders refers to cylinders; producing year refers to model_year,"SELECT T1.acceleration, T1.cylinders, T2.model_year FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN price AS T3 ON T3.ID = T2.ID ORDER BY T3.price ASC LIMIT 1"
cars,List the names and prices of the cars with model 82 and mileage per gallon of greater than 30.,car's name refers to car_name; model 82 refers to model = 82; mileage per gallon of greater than 30 refers to mpg > 30,"SELECT T2.car_name, T1.price FROM price AS T1 INNER JOIN data AS T2 ON T1.ID = T2.ID WHERE T2.model = 82 AND T2.mpg > 30"
cars,How many models of Ford Maverick were produced?,Ford Maverick refers to car_name = 'ford maverick',SELECT COUNT(DISTINCT T2.model_year) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'ford maverick'
cars,Calculate the percentage of cars that belong to the USA.,"belong to the USA refers to country = 'USA'; percentage = divide(count(ID where country = 'USA'), count(ID)) * 100%",SELECT CAST(SUM(CASE WHEN T2.country = 'USA' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin
cars,"Calculate the average production rate per year from 1971 to 1980. Among them, name the cars with a weight of fewer than 1800 lbs.","from 1971 to 1980 refers to model_year between 1971 and 1980; average production rate per year = divide(count(ID where model_year between 1971 and 1980), 9); car's name refers to car_name; a weight of fewer than 1800 lbs refers to weight < 1800",SELECT CAST(COUNT(T1.ID) AS REAL) / 9 FROM production AS T1 INNER JOIN data AS T2 ON T2.ID = T1.ID WHERE T1.model_year BETWEEN 1971 AND 1980 UNION ALL SELECT DISTINCT T2.car_name FROM production AS T1 INNER JOIN data AS T2 ON T2.ID = T1.ID WHERE T1.model_year BETWEEN 1971 AND 1980 AND T2.weight < 1800
cars,What is the average price of model 70 cars?,model 70 refers to model = 70; average price = avg(price) where model = 70,SELECT AVG(T2.price) FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.model = 70
cars,What is the price of Chevrolet Vega 2300?,Chevrolet Vega 2300 refers to car_name = 'chevrolet vega 2300',SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'chevrolet vega 2300'
cars,Which country does Chevy C20 come from?,Chevy C20 refers to car_name = 'chevy c20',SELECT T3.country FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T1.car_name = 'chevy c20'
cars,List the price of Ford cars from model 1970 to 1980.,Ford cars refers to car_name LIKE 'ford%'; from model 1970 to 1980 refers to model_year BETWEEN 1970 AND 1980,SELECT DISTINCT T3.price FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN price AS T3 ON T3.ID = T2.ID WHERE T1.car_name LIKE 'ford%' AND T2.model_year BETWEEN 1970 AND 1980
cars,Which is the most fuel efficient car in 1975?,car's name refers to car_name; the most fuel efficient refers to max(mpg); in 1975 refers to model_year = 1975,SELECT T1.car_name FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T2.model_year = '1975' ORDER BY T1.mpg DESC LIMIT 1
cars,Which car consumes fuel the most and has the highest price?,consumes fuel the most refers to min(mpg); has the highest price refers to max(price),"SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T1.mpg DESC, T2.price DESC LIMIT 1"
cars,How many American cars have an acceleration time of less than 12 seconds?,American car refers to country = 'USA'; an acceleration time of less than 12 seconds refers to acceleration < 12,SELECT COUNT(*) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T3.country = 'USA' AND T1.acceleration < 12
cars,How many Japanese cars weigh more than 2000 lbs?,Japanese car refers to country = 'Japan'; weigh more than 2000 lbs refers to weight > 2000,SELECT COUNT(*) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T3.country = 'Japan' AND T1.weight > 2000
cars,List the name of the most expensive car.,car's name refers to car_name; the most expensive refers to max(price),SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 1
cars,What years did the Buick Skylark 320 get in production?,year refers to model_year; Buick Skylark 320 refers to car_name = 'buick skylark 320',SELECT T2.model_year FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'buick skylark 320'
cars,Which country produced the most expensive car in 1970?,the most expensive refers to max(price); in 1970 refers to model_year = 1970,SELECT T3.country FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country INNER JOIN price AS T4 ON T4.ID = T1.ID WHERE T2.model_year = 1970 ORDER BY T4.price DESC LIMIT 1
cars,How many cars with horsepower greater than 200 were produced in 1975?,horsepower greater than 200 refers to horsepower > 200; in 1975 refers to model_year = 1975,SELECT COUNT(T2.model_year) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T1.horsepower > 200 AND T2.model_year = 1975
cars,Calculate the percentage of American cars among all cars.,"American car refers to country = 'USA'; percentage = divide(count(ID where country = 'USA'), count(ID)) * 100%",SELECT CAST(SUM(CASE WHEN T3.country = 'USA' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country
cars,What is the average weight of Japanese cars with 4 cylinders that were produced from 1975 to 1980?,Japanese car refers to country = 'Japan'; with 4 cylinders refers to cylinders = 4; produced from 1975 to 1980 refers to model_year BETWEEN 1975 AND 1980; average weight = avg(weight),SELECT AVG(T1.weight) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T2.model_year BETWEEN 1975 AND 1980 AND T1.cylinders = 4 AND T3.country = 'Japan'
donor,What is the total amount of donations in 2012.,total amount of donations refers to sum(donation_total); 2012 refers to donation_timestamp LIKE'2012%',SELECT SUM(donation_total) FROM donations WHERE donation_timestamp LIKE '2012%'
donor,When was the highest amount of donated? How much was the amount?,when refers donation_timestamp; the highest amount refers to max(donation_total),"SELECT donation_timestamp, donation_total FROM donations WHERE donation_total = ( SELECT donation_total FROM donations ORDER BY donation_total DESC LIMIT 1 )"
donor,Calculate the total amount of donations made in 2011 for an honoree with payment via campaign page.,total amount refers to sum(donation_total); 2011 refers to donation_timestamp LIKE'2011%'; honoree refers to for_honoree = 't'; via campaign page refers to via_giving_page = 't',SELECT SUM(donation_total) FROM donations WHERE donation_timestamp LIKE '2011%' AND via_giving_page = 't' AND for_honoree = 't'
donor,"For each donation not from a teacher, state the donor account id and calculate the percentage of donation given for optional support.","not from a teacher refers to is_teacher_acct = 'f'; donor account id refers to donor_acctid; percentage of donation = divide(donation_optional_support, donation_total)*100%","SELECT donor_acctid, donation_optional_support / donation_total FROM donations WHERE is_teacher_acct = 'f'"
donor,Name all the project titles whereby project materials are intended mainly for literary.,intended mainly for literary refers to primary_focus_subject = 'Literacy',SELECT T1.title FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.primary_focus_subject = 'Literacy'
donor,Name the project titles meant for school whereby 65% of the students are on reduced lunch.,65% of the students are on reduced lunch refers to poverty_level = 'highest poverty',SELECT T1.title FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.poverty_level LIKE 'highest%'
donor,"For project titled 'Toot Your Flute!', what is the main subject of the project materials intended for? Name the other projects with the similar focus.",main subject refers to primary_focus_subject,SELECT T2.primary_focus_subject FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.title = 'Toot Your Flute!'
donor,Name the project titles created by teacher who acquired a doctor degree.,teacher who acquired a doctor degree refers to teacher_prefix = 'Dr.',SELECT T1.title FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donation_message LIKE 'Donation on behalf of Matt Carpenter because I''m a strong believer in education.'
donor,What is the project in which 320 students will be impacted if the project is funded? Name the project and state the project cost.,320 students will be impacted refers to students_reached = 320; name the project refers to title; project cost refers tp total_price_excluding_optional_support,"SELECT T1.title, T2.total_price_excluding_optional_support FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.students_reached = 320"
donor,"For all donors from Texas City, list their donation message and name of the project they donated to.",from Texas City refers to donor_city = 'Texas City'; name of the project refers title,"SELECT T2.donation_message, T1.title FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donor_city = 'Texas City'"
donor,"Name the vendors who provide resources for project 'Lights, Camera, Action!'. List all the item names and unit price for each.","project 'Lights, Camera, Action!' refers to title = 'Lights, Camera, Action!'","SELECT T1.vendor_name, T1.item_name, T1.item_unit_price FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN essays AS T3 ON T2.projectid = T3.projectid WHERE T3.title = 'Lights, Camera, Action!'"
donor,How much donations have been collected for project 'Whistle While We Work!'?,donations collected refers to sum(donation_to_project); project 'Whistle While We Work!' refers to title = 'Whistle While We Work!',SELECT SUM(T2.donation_to_project) FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.title = 'Whistle While We Work!'
donor,Name and describe all projects created by New York teachers.,project name refers to title; describe refers to short_description; New York teachers refers to teacher_ny_teaching_fellow = 't',"SELECT T1.title, T1.short_description FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.teacher_ny_teaching_fellow = 't'"
donor,"If funded, which are the projects that could impact at least 600 students for a school with moderate level of poverty? Name the projects and state the project cost.",impact at least 600 students refers to students_reached > = 600; moderate level of poverty refers to poverty_level = 'moderate poverty'; project name refers to title; project cost refers to total_price_excluding_optional_support,"SELECT DISTINCT T2.title, T1.total_price_excluding_optional_support FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T1.students_reached >= 600 AND T1.poverty_level LIKE 'moderate poverty'"
donor,"From the total amount of donation to projects, what is the percentage of the amount is for school projects located in the rural area?","located in the rural area refers to school_metro = 'rural'; percentage = divide(sum(donation_to_project), sum(donation_to_project where school_metro = 'rural'))*100%",SELECT CAST(SUM(CASE WHEN T2.school_metro = 'rural' THEN T1.donation_to_project ELSE 0 END) AS REAL) * 100 / SUM(donation_to_project) FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid
donor,Name the project that costs the most. How much has been collected from donation and what is the percentage amount still lacking?,"project name refers to title; costs the most refers to max(total_price_excluding_optional_support); amount collected from donation refers to sum(donation_to_project); percentage amount refers to divide(subtract(total_price_excluding_optional_support, sum(donation_to_project)), sum(donation_to_project))*100%","SELECT T1.title, SUM(T3.donation_to_project), CAST((T2.total_price_excluding_optional_support - SUM(T3.donation_to_project)) AS REAL) * 100 / SUM(T3.donation_to_project) FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN donations AS T3 ON T2.projectid = T3.projectid ORDER BY T2.total_price_excluding_optional_support DESC LIMIT 1"
donor,How many schools in the West New York School District have the highest poverty level?,the highest poverty level refers to poverty_level = 'highest poverty',SELECT COUNT(poverty_level) FROM projects WHERE school_district = 'West New York School District' AND poverty_level = 'highest poverty'
donor,How many donations from teachers were done in the state of Colorado?,from teachers refers to is_teacher_acct = 't'; the state of Colorado refers to donor_state = 'CO-Colorado',SELECT COUNT(donationid) FROM donations WHERE is_teacher_acct = 't' AND donor_state = 'CO'
donor,Which project have the highest total price including optional support? Indicate the project id.,highest total price including optional support refers to max(total_price_including_optional_support),SELECT projectid FROM projects ORDER BY total_price_including_optional_support DESC LIMIT 1
donor,Which state have the highest number of PayPal donations for an honoree whose portion of a donation included corporate sponsored giftcard?,which state refers to donor_state; highest number refers to max(count(donor_state)); PayPal donations refers to payment_method = 'paypal'; for an honoree refers to for_honoree = 't'; included corporate sponsored giftcard refers to payment_included_campaign_gift_card = 't',SELECT DISTINCT donor_state FROM donations WHERE for_honoree = 't' AND payment_included_campaign_gift_card = 't' AND payment_method = 'paypal' AND donor_state = ( SELECT donor_state FROM donations GROUP BY donor_state ORDER BY SUM(donation_total) DESC LIMIT 1 )
donor,Who is the largest donor by amount? Give the donation id and the total amount of the donation.,largest donor by amount refers to max(donation_total); total amount of the donation refers to donation_total,"SELECT donationid, donation_total FROM donations ORDER BY donation_total DESC LIMIT 1"
donor,What is the id of the project that has the highest optional tip? Indicate the names of the resources that were requested.,"highest optional tip refers to subtract(total_price_including_optional_support, total_price_excluding_optional_support); names of the resources refers to item_name","SELECT T1.projectid, T1.item_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid ORDER BY T2.total_price_including_optional_support - T2.total_price_excluding_optional_support DESC LIMIT 1"
donor,"What were the resources that were requested by the teacher for project ""d6ef27c07c30c81f0c16c32b6acfa2ff""? Indicate the quantities as well and whether or not the teacher acquired P.h.D or doctor degree.","resources that were requested refers to item_name; project ""d6ef27c07c30c81f0c16c32b6acfa2ff"" refers to projectid = 'd6ef27c07c30c81f0c16c32b6acfa2ff'; quantities refers to item_quantity; teacher_prefix = 'Dr. ' refers to teacher acquired P.h.D or doctor degree","SELECT DISTINCT T1.item_name, T1.item_quantity, T2.teacher_prefix FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.projectid = 'd6ef27c07c30c81f0c16c32b6acfa2ff'"
donor,"What is the total price including optional support received by the teacher who posted the essay titled ""Recording Rockin' Readers""?",,SELECT SUM(T1.total_price_including_optional_support) FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T2.title = 'Recording Rockin'' Readers'
donor,"What is the latitude and longitude of the school where the teacher who wrote ""Smile for the Camera!!!"" teaches?","wrote ""Smile for the Camera!!!"" refers to title = 'Smile for the Camera!!!'; latitude refers to school_latitude; longitude refers to school_longitude","SELECT T1.school_latitude, T1.school_longitude FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T2.title = 'Smile for the Camera!!!'"
donor,What is the total amount of all the donations made by the donor who made the highest donation in a single amount? Indicate the essay title to where he/she made his/her biggest donation.,total amount of all the donations refers to sum(donation_total); highest donation refers to max(donation_total),"SELECT T2.donation_total, T1.title FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donation_total = ( SELECT MAX(donation_total) FROM donations )"
donor,What are the favorite project types of each of the top 10 donors?,favorite project type refers to project_resource_type; top donors refers to max(donation_total),"SELECT project_resource_type FROM ( SELECT T1.donor_acctid, T3.project_resource_type FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN resources AS T3 ON T2.projectid = T3.projectid ORDER BY T1.donation_total DESC LIMIT 10 ) GROUP BY project_resource_type ORDER BY COUNT(project_resource_type) DESC LIMIT 1"
donor,"When was the first ever project went live on the site and what were the names of the resources being requested? If there are multiple projects that have the same date, indicate each of them and their items.",first ever project refers to min(date_posted); names of the resources refers to item_name,"SELECT T2.date_posted, T1.item_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.date_posted = ( SELECT date_posted FROM projects ORDER BY date_posted ASC LIMIT 1 )"
donor,"What is the name of the vendor that supplies resources to the project ""iMath""?","project ""iMath"" refers to title = 'iMath'",SELECT DISTINCT T1.vendor_name FROM resources AS T1 INNER JOIN essays AS T3 ON T1.projectid = T3.projectid WHERE T3.title = 'iMath'
donor,When was the project with the highest quantity went live on the site? Indicate the grade level for which the project materials are intended.,project with the highest quantity refers to max(item_quantity),"SELECT T2.date_posted, T2.grade_level FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid ORDER BY T1.item_quantity DESC LIMIT 1"
donor,"What is the average amount of donations by people who donated in the project ""Recording Rockin' Readers""","average amount of donations = divide(sum(donation_to_project), count(donor_acctid)); project ""Recording Rockin' Readers"" refers to title = 'Recording Rockin' Readers'",SELECT AVG(T3.donation_to_project) FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN donations AS T3 ON T2.projectid = T3.projectid WHERE T1.title = 'Recording Rockin'' Readers'
donor,What is the essay title of the project that have the highest total price excluding optional support and who is the biggest donor? Identify the donor and calculate how many percent did he/she donated in the project.,"highest total price excluding optional support refers to max(total_price_excluding_optional_support); who refers to donor_acctid; percent = divide(donation_to_project, total_price_excluding_optional_support)*100%","SELECT T1.title, T3.donor_acctid, CAST(T3.donation_to_project AS REAL) / T2.total_price_excluding_optional_support FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN donations AS T3 ON T2.projectid = T3.projectid ORDER BY T3.donation_to_project DESC LIMIT 1"
donor,"From which state do the 5 biggest donor, who gave the highest cost of optional support, come from? List their donor_acctid and calculate for their average cost of optional support for every donations they make and identtify the project's type of resource to which they gave the hightest optional support.",which state refers to school_state; highest cost of optional support refers to max(donation_optional_support); average cost of optional support = avg(donation_optional_support),"SELECT T1.school_state, T2.donor_acctid, AVG(T2.donation_optional_support), T1.resource_type FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid ORDER BY T2.donation_optional_support DESC LIMIT 5"
donor,Which project in Brooklyn that have the highest request of resources? State the the project ID including all of the name of item requested.,in Brooklyn refers to school_city = 'Brooklyn'; highest request of resources refers to max(count(T1.item_name)),"SELECT T1.projectid, T1.item_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_city LIKE 'Brooklyn' GROUP BY T1.item_name ORDER BY COUNT(T1.item_name) DESC LIMIT 1"
donor,How many schools in urban area requested for books resources?,urban area refers to school_metro = 'urban'; books resources refers to project_resource_type = 'Books',SELECT COUNT(T2.schoolid) FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.resource_type = 'Books' AND T2.school_metro = 'urban'
donor,Which school requested the highest amount of resources from Amazon? State the school's ID.,highest amount of resources refers to max(count(schoolid)); Amazon refers to vendor_name = 'Amazon',SELECT T2.schoolid FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.vendor_name LIKE 'Amazon' GROUP BY T2.schoolid ORDER BY COUNT(T1.vendor_name) DESC LIMIT 1
donor,How many donors in Los Angeles donated to school in another city?,in Los Angeles refers to donor_city = 'Los Angeles'; school in another city refers to school_city ! = 'Los Angeles',SELECT COUNT(T2.schoolid) FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.donor_city = 'Los Angeles' AND T2.school_city NOT LIKE 'Los Angeles'
donor,What is the prefix for the teacher who handled the 'Reading About Other Cultures' project?,Reading About Other Cultures' project refers to title = 'Reading About Other Cultures'; prefix for the teacher refers to teacher_prefix,SELECT T2.teacher_prefix FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Reading About Other Cultures'
donor,How many students will be impacted for the Fit Firsties! Project?,how many students refers to students_reached; Fit Firsties! project refers to title = 'Fit Firsties!',SELECT T2.students_reached FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Fit Firsties!'
donor,List the title of all projects located in Chicago along with the ID of the donor.,in Chicago refers to school_city = 'Chicago'; ID of the donor refers to donor_acctid,"SELECT T1.title, T3.donor_acctid FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN donations AS T3 ON T2.projectid = T3.projectid WHERE T2.school_city LIKE 'Chicago'"
donor,Which projects created by teachers with Doctor Degree where the project have more than 300 students involved. List down the title of the project.,eachers with Doctor Degree refers to teacher_prefix = 'Dr.'; more than 300 students involved refers to students_reached > 300,SELECT T1.title FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.teacher_prefix LIKE 'Dr.' AND T2.students_reached > 300
donor,State the name of vendor that supplies book resources to all school with literacy subject as their primary focus.,literacy subject as primary focus refers to primary_focus_subject = 'Literacy',SELECT DISTINCT T1.vendor_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.primary_focus_subject LIKE 'Literacy'
donor,What is the title of project that have the most expensive funds?,"the most expensive funds refers to max(multiply(item_unit_price, item_quantity))",SELECT T1.title FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.projectid = ( SELECT projectid FROM resources ORDER BY item_unit_price * item_quantity DESC LIMIT 1 )
donor,"Among all the donors from New York, how many of them are teachers?",from New York refers to donor_city = 'New York'; donor is a teacher refers to is_teacher_acct = 't';,SELECT COUNT(donationid) FROM donations WHERE is_teacher_acct = 't' AND donor_city = 'New York'
donor,How many donors from New Jersey have made a donation for an honoree?,from New Jersey refers to donor_state = 'NJ'; for an honoree refers to for_honoree = 't';,SELECT COUNT(donationid) FROM donations WHERE for_honoree = 't' AND donor_state = 'NJ'
donor,What is the donation message for donation ID a84dace1ff716f6f0c7af8ef9090a5d5?,,SELECT donation_message FROM donations WHERE donationid = 'a84dace1ff716f6f0c7af8ef9090a5d5'
donor,Please list the types of resources that the vendor Lakeshore Learning Materials has provided for the projects.,Lakeshore Learning Materials is vendor_name; type of resources refers to project_resource_type;,SELECT DISTINCT project_resource_type FROM resources WHERE vendor_name = 'Lakeshore Learning Materials'
donor,What is the name of the item that is provided in the biggest amount by the vendor Lakeshore Learning Materials?,lakeshore Learning Materials is vendor_name; biggest amount refers to Max(item_quantity);,SELECT item_name FROM resources WHERE vendor_name = 'Lakeshore Learning Materials' ORDER BY item_quantity DESC LIMIT 1
donor,"Among the projects created by a teacher from New York, how many of them have a donor from the same city?",New York is the donor city; donor from the same city refers to donor from New York in which teacher_ny_teaching_fellow = 't';,SELECT COUNT(T1.projectid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.teacher_ny_teaching_fellow = 't' AND T2.donor_city = 'New York'
donor,How many projects have their resources provided by the vendor Lakeshore Learning Materials and are created by a teacher with a doctor degree?,Lakeshore Learning Materials is vendor_name;  teacher with a doctor degree refers to teacher_prefix = 'Dr.';,SELECT COUNT(T1.projectid) FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.vendor_name = 'Lakeshore Learning Materials' AND T2.teacher_prefix = 'Dr.'
donor,Please list the vendor providing resources for the projects of a school with the highest poverty level.,highest poverty level refers to poverty_level = 'highest poverty';,SELECT T1.vendor_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.poverty_level = 'highest poverty'
donor,"Of the projects whose resources are provided by the vendor Lakeshore Learning Materials, the school of which project has the highest cost of labor fulfillment? Please give its school ID.",Lakeshore Learning Materials is vendor_name; highest cost of labor fulfillment refers to Max(fulfillment_labor_materials);,SELECT T2.schoolid FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.vendor_name = 'Lakeshore Learning Materials' ORDER BY T2.fulfillment_labor_materials DESC LIMIT 1
donor,Who is the vendor of the resources needed by the project that had the highest cost of optional tip?,Highest cost of the optional tip refers to Max(total_price_including_optional_support - total_price_excluding_optional_support);,SELECT T1.vendor_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid ORDER BY T2.total_price_including_optional_support - T2.total_price_including_optional_support DESC LIMIT 1
donor,What is the total donated amount for projects created by a teacher working in a school in Brooklyn?,school in Brooklyn refers to school_city = 'Brooklyn'; total donated amount refers to donation_total;,SELECT SUM(T2.donation_total) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.school_city = 'Brooklyn'
donor,Please list the donation messages of the donations for the projects created by a teacher working in a public magnet school in Brooklyn.,school in Brooklyn refers to school_city = 'Brooklyn'; public magnet refers to school_magnet = 't';,SELECT T2.donation_message FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.school_city = 'Brooklyn' AND T1.school_magnet = 't'
donor,"Among the donations with a portion using account credits redemption, how many of them are for projects created by teachers working in a public year-round school?",portion using account credits redemption refers to payment_included_acct_credit = 't'; year-round school refers to school_year_round = 't';,SELECT COUNT(T1.projectid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.payment_included_acct_credit = 't' AND T1.school_year_round = 't'
donor,What is the total donation amount made for projects whose main subject area are Literacy & Language?,main subject area refers to primary_focus_area = 'Literacy & Language'; total donation amount refers to Sum(dollar_amount);,SELECT SUM(T2.dollar_amount) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.primary_focus_area = 'Literacy & Language'
donor,Which donor has donated the most for a project whose main subject area is Literacy & Language? Please give his or her ID.,main subject area refers to primary_focus_area = 'Literacy & Language'; donated the most refers to Max(donation_total);,SELECT T2.donor_acctid FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.primary_focus_area = 'Literacy & Language' ORDER BY T2.donation_total DESC LIMIT 1
donor,"What is the most requested item under the resource type ""Supplies"" for projects whose main subject area is Literacy & Language?",main subject area refers to primary_focus_area = 'Literacy & Language'; resource type supplies refers to project_resource_type = 'Supplies'; most requested item refers to Max(item_quantity);,SELECT T1.item_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.primary_focus_area = 'Literacy & Language' AND T1.project_resource_type = 'Supplies' ORDER BY T1.item_quantity DESC LIMIT 1
donor,Which item provided to a project whose main subject area is Literacy & Language has the highest unit price?,main subject area refers to primary_focus_area = 'Literacy & Language'; highest unit price refers to Max(item_unit_price);,SELECT T1.item_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.primary_focus_area = 'Literacy & Language' ORDER BY T1.item_unit_price DESC LIMIT 1
donor,What is the average donation amount to a project created by a teacher working in a school in Brooklyn?,school in Brooklyn refers to school_city = 'Brooklyn'; Average = AVG(donation_total);,SELECT SUM(T2.donation_total) / COUNT(donationid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.school_city = 'Brooklyn'
donor,To which city did donor “22cbc920c9b5fa08dfb331422f5926b5” donate?,donor “22cbc920c9b5fa08dfb331422f5926b5” refers to donor_acctid = '22cbc920c9b5fa08dfb331422f5926b5'; city refers to donor_city,SELECT DISTINCT donor_city FROM donations WHERE donor_acctid = '22cbc920c9b5fa08dfb331422f5926b5'
donor,Is donor “22cbc920c9b5fa08dfb331422f5926b5” a teacher?,donor “22cbc920c9b5fa08dfb331422f5926b5” refers to donor_acctid = '22cbc920c9b5fa08dfb331422f5926b5'; is a teacher refers to is_teacher_acct;,SELECT DISTINCT is_teacher_acct FROM donations WHERE donor_acctid = '22cbc920c9b5fa08dfb331422f5926b5'
donor,"Have the teacher ""42d43fa6f37314365d08692e08680973"" acquired P.h.D or doctor degree?","teacher ""42d43fa6f37314365d08692e08680973"" refers to teacher_acctid = '42d43fa6f37314365d08692e08680973';",SELECT CASE WHEN teacher_prefix = 'Dr.' THEN 'Yes' ELSE 'NO' END FROM projects WHERE teacher_acctid = '42d43fa6f37314365d08692e08680973'
donor,"Is teacher ""42d43fa6f37314365d08692e08680973"" a New York teacher?","teacher ""42d43fa6f37314365d08692e08680973""refers to teacher_acctid = '42d43fa6f37314365d08692e08680973';",SELECT teacher_ny_teaching_fellow end FROM projects WHERE teacher_acctid = '42d43fa6f37314365d08692e08680973'
donor,Please list the titles of projects by which schools in Abington was donated.,Abington is school_city;,SELECT T2.title FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T1.school_city LIKE 'Abington'
donor,"Please list the resource names of project that teacher ""822b7b8768c17456fdce78b65abcc18e"" created.","teacher ""822b7b8768c17456fdce78b65abcc18e"" refers to teacher_acctid = '822b7b8768c17456fdce78b65abcc18e';",SELECT T1.item_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.teacher_acctid = '822b7b8768c17456fdce78b65abcc18e'
donor,"Among the schools' projects whose donation didn't use account credits redemption,how many schools are public magnet schools?",donation didn't use account credits redemption refers to payment_included_acct_credit = 'f'; magnet school refers to school_magnet = 't';,SELECT COUNT(T1.schoolid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.school_magnet = 't' AND T2.payment_included_acct_credit = 'f'
donor,"Please provide the type of resource that donation ""b39547f29dfc25fb13c6e9e8d940dc43"" contain.","donation ""b39547f29dfc25fb13c6e9e8d940dc43"" refers to donationid = 'b39547f29dfc25fb13c6e9e8d940dc43'; type of resource refers to project_resource_type;",SELECT DISTINCT T1.project_resource_type FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN donations AS T3 ON T2.projectid = T3.projectid WHERE T3.donationid LIKE 'b39547f29dfc25fb13c6e9e8d940dc43'
donor,"Among public magnet schools,what percentage of schools that receive the donated resources as books?","magnet school refers to school_magnet = 't'; donated resources as books refers to project_resource_type = 'Books'; percentage = Divide(Count(projectid) where project_resource_type = 'Books', Count(projectid))*100",SELECT CAST(SUM(CASE WHEN T1.project_resource_type = 'Books' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.projectid) FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_magnet = 't'
donor,"In the schools donated by the project of the resources provided by ABC School Supply, how many schools are public magnet schools?",ABC School Supply is vendor_name;  public magnet school refers to school_magnet = 't';,SELECT COUNT(T2.schoolid) FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_magnet = 't' AND T1.vendor_name = 'ABC School Supply'
donor,"Among the schools donated by donor ""000eebf28658900e63b538cf8a73afbd"",how many schools whose poverty level are highest?","donor ""000eebf28658900e63b538cf8a73afbd"" refers to donor_acctid = '000eebf28658900e63b538cf8a73afbd'; highest poverty level refers to poverty_level = 'highest poverty';",SELECT COUNT(T1.schoolid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.poverty_level = 'highest poverty' AND T2.donor_acctid = '000eebf28658900e63b538cf8a73afbd'
donor,What is the short description of the project that gives donation to school “301c9bf0a45d159d162b65a93fddd74e”?,"school “301c9bf0a45d159d162b65a93fddd74e"" refers to schoolid = '301c9bf0a45d159d162b65a93fddd74e';",SELECT T2.short_description FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T1.schoolid = '301c9bf0a45d159d162b65a93fddd74e'
donor,"Which city does the school that project ""iMath"" donated to in?",iMath is the title; city refers to school_city;,SELECT T1.school_city FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T2.title LIKE 'iMath'
donor,"How to pay the donation of the project that teacher ""822b7b8768c17456fdce78b65abcc18e"" created?","teacher ""822b7b8768c17456fdce78b65abcc18e"" refers to teacher_acctid = '822b7b8768c17456fdce78b65abcc18e'; how to pay the donation refers to payment_method;",SELECT T2.payment_method FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.teacher_acctid = '822b7b8768c17456fdce78b65abcc18e'
donor,"How much did the project that teacher ""822b7b8768c17456fdce78b65abcc18e"" created donate?","teacher ""822b7b8768c17456fdce78b65abcc18e"" refers to teacher_acctid = '822b7b8768c17456fdce78b65abcc18e'; donated refers to donation_total;",SELECT T2.donation_total FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.teacher_acctid = '822b7b8768c17456fdce78b65abcc18e'
donor,"Is the donor who donated to school ""d4af834b1d3fc8061e1ee1b3f1a77b85"" a teacher?","school ""d4af834b1d3fc8061e1ee1b3f1a77b85"" refers to schoolid = 'd4af834b1d3fc8061e1ee1b3f1a77b85'; donor is a teacher refers to is_teacher_acct = 't';",SELECT T2.is_teacher_acct FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.schoolid = 'd4af834b1d3fc8061e1ee1b3f1a77b85'
donor,"Among the schools whose donators are teachers, what is the percentage of schools that are in Brooklyn?","donors are teachers refers to is_teacher_acct = 't'; Brooklyn is school_city; percentage = Divide(Count(school_city-'Brooklyn'),Count(school_city))*100",SELECT CAST(SUM(CASE WHEN T1.school_city LIKE 'Brooklyn' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.teacher_acctid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.is_teacher_acct = 't'
donor,"Among the projects whose donators are teachers, what is the percentage of projects that affected more than 30 students?","donors are teachers refers to is_teacher_acct = 't'; affect more than 30 students refers to students_reached>30; Percentage = Divide(Count(students_reached>30), Count(students_reached))*100",SELECT CAST(SUM(CASE WHEN T1.students_reached > 30 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.projectid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.is_teacher_acct = 't'
donor,How many schools which have suburban metro are there in Bethlehem?,Bethlehem is school_city; suburban metro refers to school_metro = 'suburban';,SELECT COUNT(schoolid) FROM projects WHERE school_city = 'Bethlehem' AND school_metro = 'suburban'
donor,What is the number of the year round school in Los Angeles?,Los Angeles is school_city; year-round school refers to school_year_round = 't';,SELECT COUNT(school_year_round) FROM projects WHERE school_city = 'Los Angeles' AND school_year_round = 't'
donor,State the number of public magnet schools in New York Manhattan.,public magnet school refers to school_magnet = 't'; in New York Manhattan refers to school_country = 'New York(Manhattan)';,SELECT COUNT(schoolid) FROM projects WHERE school_county = 'New York (Manhattan)' AND school_magnet = 't'
donor,How many teachers in Twin Falls have Math & Science as their primary focus area?,Twin Falls is school_country; 'Math & Science' is primary_focus_area;,SELECT COUNT(teacher_acctid) FROM projects WHERE school_county = 'Twin Falls' AND primary_focus_area = 'Math & Science'
donor,How many teachers that have Literature & Writing as their primary focus subject use 'Mr' as their teacher prefix?,Literature & Writing' is primary_focus_subject; use 'Mr' as their teacher prefix refers to teacher_prefix = 'Mr';,SELECT COUNT(teacher_acctid) FROM projects WHERE teacher_prefix = 'Mr.' AND primary_focus_subject = 'Literature & Writing'
donor,What is the total number of projects that was created by the teachers that teach 3-5 grades in Boston Public School District?,teach 3-5 grades refers to grade_level = 'Grades 3-5'; 'Boston Public School District' is school_district;,SELECT COUNT(projectid) FROM projects WHERE school_district = 'Boston Public School District' AND grade_level = 'Grades 3-5'
donor,"For the teacher who wrote the project 'ABC Read', which city was he/she in?",ABC Read' is the title; city refers to school_city,SELECT T2.school_city FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.title = 'ABC Read'
donor,What is the teacher prefix for the teacher who wrote the project 'Creating Memories and Inspiring Dreams'?,Creating Memories and Inspiring Dreams is title;,SELECT T2.teacher_prefix FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Creating Memories and Inspiring Dreams%'
donor,"Is the donor of the project 'Calculate, Financial Security For Tomorrow Starts Today! ' a teacher?","Calculate, Financial Security For Tomorrow Starts Today! ' is title; donor is a teacher refers to is_teacher_acct = 't'","SELECT T2.is_teacher_acct FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Calculate, Financial Security For Tomorrow Starts Today! '"
donor,"What is the title for the project that got the donation message as ""Donation on behalf of Matt Carpenter because I'm a strong believer in education"".",,SELECT T1.title FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donation_message LIKE 'Donation on behalf of Matt Carpenter because I''m a strong believer in education.'
donor,How many number of donations did the project 'A Rug For Reaching Readers' get?,A Rug For Reaching Readers'is the title;,SELECT SUM(T2.donation_total) FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'A Rug For Reaching Readers'
donor,What is the total donation amount for the project 'Engaging Young Readers with a Leveled Classroom Library'?,"Engaging Young Readers with a Leveled Classroom Library' is the title; total donation amount = Add(donation_to_project, donation_optional_support)",SELECT SUM(T2.donation_to_project) + SUM(T2.donation_optional_support) FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Engaging Young Readers with a Leveled Classroom Library '
donor,What was the donation optional support amount for the project 'Armenian Genocide'?,Armenian Genocide' is the title;,SELECT T2.donation_optional_support FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Armenian Genocide'
donor,State the short description for the project which got the donation at 14:44:29 on 2012/9/6.,donation at 14:44:29 on 2012/9/6 refers to donation_timestamp = '2012/9/6 14:44:29';,SELECT T1.short_description FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donation_timestamp LIKE '2012-09-06 14:44:29'
donor,Did the project 'I Can't See It...Can You Help Me???' get the tip for the donation?,I Can't See It...Can You Help Me???' is the title;,SELECT T2.donation_included_optional_support FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'I Can''t See It...Can You Help Me???'
donor,What is the teacher's account ID for the project that got the donation at 11:38:43 on 2008/7/29 ?,donation at 11:38:43 on 2008/7/29 refers to donation_timestamp = '2008/7/29 11:38:43'; teacher's account ID refers to teacher_acctid;,SELECT T1.teacher_acctid FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donation_timestamp LIKE '2008-07-29 11:38:43.361'
donor,Show the school id for the project 'Virtual Aquarium Needs Help!'.,Virtual Aquarium Needs Help!' is the title;,SELECT T2.schoolid FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Virtual Aquarium Needs Help!'
donor,What was the title for the project which got the biggest donation?,biggest donation refers to donation_total = 'max';,SELECT T1.title FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donation_total = ( SELECT MAX(donation_total) FROM donations )
donor,"For the donation of the project 'Awesome Audiobooks Make Avid Readers', what was the percentage of the tip in the total amount?","Awesome Audiobooks Make Avid Readers' is the title; percentage = Divie(donation_optional_support, donation_total)*100;",SELECT CAST(SUM(T2.donation_optional_support) AS REAL) * 100 / SUM(T2.donation_total) FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Awesome Audiobooks Make Avid Readers'
donor,"For the all donations to the project 'Bringing Drama to Life', what is the percentage of the donation is paid by credit card?","Bringing Drama to Life' is the title; Percentage = Divide(Count(payment_method = 'creditcard'), Count(projectid))*100;",SELECT CAST(SUM(CASE WHEN T2.payment_method LIKE 'creditcard' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(donationid) FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Bringing Drama to Life'
donor,What is the short description for the title Future Einsteins Of America?,,SELECT short_description FROM essays WHERE title = 'Future Einsteins Of America'
donor,Write down the need statement of Family History Project.,"Family History Project refer to title, need statement refer to need_statement",SELECT need_statement FROM essays WHERE title = 'Family History Project'
donor,How many suburban metros are there in Livingston Parish School District?,suburban metros refer to metro = 'suburban'; Livingston Parish School District refer to school_district,SELECT COUNT(projectid) FROM projects WHERE school_district = 'Livingston Parish School Dist' AND school_metro = 'suburban'
donor,Name the vendors that sell the item Classroom Keepers Management Center.,vendor refer to vendor_name; Classroom Keepers Management Center refer to item_name,SELECT DISTINCT vendor_name FROM resources WHERE item_name = 'Classroom Keepers Management Center'
donor,List the resource types available at Sax Arts & Crafts.,"Sax Arts & Crafts refer to vendor_name; resource type available refer to project_resource_type
",SELECT DISTINCT project_resource_type FROM resources WHERE vendor_name = 'Sax Arts & Crafts'
donor,Which school county in the state of New York has a high number of low poverty levels?,New York refer to school_state = NY; highest number of low poverty level refer to MAX(poverty level = ’low poverty’),SELECT school_county FROM projects WHERE poverty_level = 'low poverty' AND school_state = 'NY' GROUP BY school_state ORDER BY COUNT(poverty_level) DESC LIMIT 1
donor,Which school district was Future Einsteins Of America project located at?,Future Einsteins of America refer to title,SELECT T1.school_district FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T2.title LIKE 'Future Einsteins Of America'
donor,What payment method was used for Needed Resource Materials For My Students?,Needed Resource Materials For My Students refer to title,SELECT T3.payment_method FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN donations AS T3 ON T2.projectid = T3.projectid WHERE T1.title = 'Needed Resource Materials For My Students'
donor,How many donations were paid via credit card to Memphis City School District?,paid via credit card refer to payment method = creditcard; Memphis City School District refer to school_district,SELECT COUNT(T1.projectid) FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.payment_method = 'creditcard' AND T2.school_district = 'Memphis City School District'
donor,List the school districts that have bought resources from Barnes and Noble.,Barnes and Noble refer to vendor_name,SELECT T2.school_district FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.vendor_name = 'Barnes and Noble'
donor,Give the coordinates of the buyer of R & A Plant Genetics from Benchmark Education.,"coordinates refer to (school_latitude, school_longitude); R & A Plant Genetics refer to item_name; Benchmark Education refer to vendor_name","SELECT T2.school_latitude, T2.school_longitude FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.item_name = 'R & A Plant Genetics' AND T1.vendor_name = 'Benchmark Education'"
donor,Which payment method is most comonly used by the schools in the state of Georgia for the payment of donations?,"Georgia refer to school_state = 'GA'
",SELECT T1.payment_method FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_state = 'GA' GROUP BY T2.school_state ORDER BY COUNT(T1.payment_method) DESC LIMIT 1
donor,"What are the coordinates of the school where project 'Look, Look, We Need a Nook!' Was donated to and what resource type is it?","Coordinates of the school refer to school_latitude, school_longitude); Look, Look, We Need a Nook! Refer to title;","SELECT T2.school_latitude, T2.school_longitude, T2.resource_type FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Look, Look, We Need a Nook!'"
donor,"Write the messages of those who donated to the Newark School District in the coordinates of 40.735332, -74.196014.","message refer to donation_message; Newark School District refer to school_district; 40.735332, -74.196014 refer to (school latitude, school_longitude)",SELECT T1.donation_message FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_latitude = 40.735332 AND T2.school_longitude = -74.196014 AND T2.school_district = 'Newark School District'
donor,What date did the project with he 'Lets Share Ideas essay' went live?,date refer to date_posted; Lets Share Ideas refer to title,SELECT T1.date_posted FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T2.title LIKE 'Lets Share Ideas'
donor,Write the message of the donor of the project with the title of Lets Share Ideas who paid with a credit card.,message of the donor refer to donation_message; Lets Share Ideas refer to title; paid with a credit card refer to payment_method,SELECT T3.donation_message FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN donations AS T3 ON T2.projectid = T3.projectid WHERE T1.title = 'Lets Share Ideas' AND T3.payment_method = 'creditcard'
donor,Which resource type is commonly bought by the Los Angeles Unified School District?,resource type refer to project_resource_type; most commonly bought refer to COUNT(project_resource_type where school_district = ’Los Angeles Unif Sch Dist’); Los Angeles Unified School District refer to school_district = ’Los Angeles Unif Sch Dist’,SELECT T1.project_resource_type FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_district = 'Los Angeles Unif Sch Dist' GROUP BY T2.school_district ORDER BY COUNT(T1.project_resource_type) DESC LIMIT 1
donor,Which cities in the Los Angeles Unified School District has bought supplies from Quill.com?,cities refer to school_city; Los Angeles Unified School District refer to school_district = 'Los Angeles Unified School District'; supplies refer to project_resource_type; Quill.com refer to vendor_name,SELECT T2.school_city FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_district = 'Los Angeles Unif Sch Dist' AND T1.vendor_name = 'Quill.com'
donor,What is the total price of items brought from ABC School Supply with a listed type of Other? Also include the list of the buyers' coordinates and school districts they belong to.,"ABC School Supply refer to vendor_name; listed type as Other refer to project_resource_type = 'Other'; coordinates refer to coordinates(school_latitude, school_longitude); total price of items refer to SUM(MULTIPLY(item_unit_price, item_quantity where vendor_name = ’ABC School Supply’))

","SELECT T2.item_unit_price * T2.item_quantity price, T1.school_latitude, T1.school_longitude FROM projects AS T1 INNER JOIN resources AS T2 ON T1.projectid = T2.projectid WHERE T2.vendor_name = 'ABC School Supply' AND T2.project_resource_type = 'Other' AND T1.school_district = 'Hillsborough Co Pub Sch Dist'"
donor,Calculate the sum of all the total amount donated to the essay project titled 'Lets Share Ideas' which were paid through paypal and indicate the city and poverty level.,paypal refer to payment method; Lets Share Ideas refer to title; city refer to school_city; total amount donated refer to SUM(donation_total of paypal where payment_method = ’paypal’),"SELECT SUM(T3.donation_total), school_city, poverty_level FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN donations AS T3 ON T2.projectid = T3.projectid WHERE T1.title = 'Lets Share Ideas' AND T3.payment_method = 'paypal'"
donor,How many donors who donated to the city of Pocatello are not teachers?,city of Pocatello refers to donor_city = 'Pocatello'; not teachers refers to is_teacher_acct = 'f',SELECT COUNT(donationid) FROM donations WHERE donor_city = 'Pocatello' AND is_teacher_acct = 'f'
donor,How many schools in Suffolk County have Ph.D. teachers?,Suffolk County refers to School_county = 'Suffolk'; Ph.D. teachers refers to Teacher_prefix = 'Dr.',SELECT COUNT(schoolid) FROM projects WHERE teacher_prefix = 'Dr.' AND school_county = 'Suffolk'
donor,What is the sum of the total donated amounts paid through Amazon?,"paid through Amazon refers to payment_method = 'Amazon'; sum of the total donated amounts refers to SUM(donation_to_project,donation_optional_support)",SELECT SUM(donation_to_project) + SUM(donation_optional_support) FROM donations WHERE payment_method = 'amazon'
donor,How many donations of more than $100 were made for an honoree?,an honoree refers to for_honoree = 't'; more than $100 refers to dollar_amount = '100_and_up',SELECT COUNT(donationid) FROM donations WHERE dollar_amount = '100_and_up' AND for_honoree = 't'
donor,How many resources with a unit price less than 15 are not technology type? List them by vendor id,unit price less than 15 refers to item_unit_price< = 15; are not technology type refers to project_resource_type = 'technology',SELECT vendorid FROM resources WHERE project_resource_type = 'Technology' AND item_unit_price <= 15
donor,On how many projects where the teacher has ordered between 5 to 10 items are from are from Quill.com?,ordered between 5 to 10 items refers to item_quantity between 5 and 10; are from Quill.com refers to vendor_name = 'Quill.com',SELECT COUNT(projectid) FROM resources WHERE vendor_name = 'Quill.com' AND item_quantity BETWEEN 5 AND 10
donor,List by school id projects from schools located in the Union Pub School District I-9 that have a New York teaching fellow,located in the Union Pub School District I-9 refers to school_district = 'Union Pub School District I-9'; New York teaching fellow refers to teacher_ny_teaching_fellow = 't',SELECT schoolid FROM projects WHERE school_district = 'Union Pub School District I-9' AND teacher_ny_teaching_fellow = 't'
donor,In which cities are Los Angeles County Suburban Metro Schools located?,Los Angeles County refers to school_county = 'Los Angeles',SELECT school_city FROM projects WHERE school_metro = 'suburban' AND school_county = 'Los Angeles'
donor,What are the vendors of the book-type projects? List them with the project ID.,book-type projects refers to project_resource_type = 'Books',"SELECT DISTINCT vendorid, projectid FROM resources WHERE project_resource_type = 'Books'"
donor,What percentage of projects that have not received a cash donation have received a portion of a donation included corporate sponsored giftcard?,"have not received a cash donation refers to payment_method = 'no_cash_received'; received a portion of a donation included corporate sponsored giftcard payment_included_campaign_gift_card = 't'; percentage refers to DIVIDE(payment_included_campaign_gift_card = 't',payment_included_campaign_gift_card)*100",SELECT CAST(SUM(CASE WHEN payment_included_campaign_gift_card = 't' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(donationid) FROM donations WHERE payment_method = 'no_cash_received'
donor,What percentage of projects in the City of Santa Barbara are in suburban metro?,City of Santa Barbara refers to school_city = 'Santa Barbara'; percentage refers to DIVIDE(school_metro = 'suburban'; school_metro)*100,SELECT CAST(SUM(CASE WHEN school_metro = 'suburban' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(projectid) FROM projects WHERE school_city = 'Santa Barbara'
donor,What is the percentage of payment methods of donations made in March 2013?,"made in March 2013 refers to substr(donation_timestamp,1,7) = '2013-03'; percentage refers to DIVIDE(SUM(payment_method made in March 2013), SUM(payment_method))*100","SELECT payment_method , CAST(COUNT(donationid) AS REAL) * 100 / 51090 FROM donations WHERE donation_timestamp LIKE '2013-03%' GROUP BY payment_method"
donor,What is the average unit price of AKJ Books items?,"AKJ Books items refers to vendor_name = 'AKJ Books'; average unit price refers to DIVIDE(sum(item_unit_price),count(resourceid))",SELECT SUM(item_unit_price) / SUM(item_quantity) FROM resources WHERE vendor_name = 'AKJ Books'
donor,How many schools in Brooklyn with urban metro and donations for an honoree have requested TT992 - Refill Pack for Safety Name Tags as a resource?,in Brooklyn refers to school_city = 'Brooklyn'; urban metro refers to school_metro = 'urban'; donations for an honoree refers to for_honoree = 't'; requested TT992 - Refill Pack for Safety Name Tags refers to item_name = 'TT992 - Refill Pack for Safety Name Tags',SELECT COUNT(T2.schoolid) FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN donations AS T3 ON T2.projectid = T3.projectid WHERE T2.school_city = 'Brooklyn' AND T2.school_metro = 'urban' AND T3.for_honoree = 't' AND T1.item_name = 'TT992 - Refill Pack for Safety Name Tags'
donor,How many schools with the highest level of poverty have received a portion of a donation included corporate sponsored gift card?,highest level of poverty refers to poverty_level = 'highest'; received a portion of a donation included corporate sponsored gift card refers to payment_included_campaign_gift_card = 't',SELECT COUNT(T1.schoolid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.payment_included_campaign_gift_card = 't' AND T1.poverty_level = 'highest poverty'
donor,In which city is there a greater number of schools that have received donations of less than 10 dollars?,"received donations of less than 10 dollars refers to dollar_amount = 'under_10'; city refers to school_city

",SELECT T2.school_city FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.dollar_amount = 'under_10' GROUP BY T2.school_city ORDER BY COUNT(T2.schoolid) DESC LIMIT 1
donor,What is the project title of the school located at latitude 42003718 and longitude -87668289?,latitude 42003718 refers to school_latitude = 42003718; longitude -87668289 refers to school_longitude = -87668289,SELECT T1.title FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_latitude = 42003718 AND T2.school_longitude = -87668289
donor,Find out if the project with the title Team More Books! has a New York teaching fellow.,title Team More Books! Refers to title = 'Team More Books!'; as a New York teaching fellow refers to teacher_ny_teaching_fellow = 't',SELECT T2.teacher_ny_teaching_fellow FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Team More Books!'
donor,What is the name of the vendors that serve resources to schools whose primary focus area is Literature?,primary focus area is Literature refers to primary_focus_area = 'Literature',SELECT T1.vendor_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.primary_focus_area LIKE 'Literacy%' GROUP BY T1.vendor_name ORDER BY COUNT(T2.primary_focus_area) DESC LIMIT 1
donor,What is the name of the vendors serving material for projects for grades 9-12?,for grades 9-12 refers to grade_level = 'Grades 9-12',SELECT DISTINCT T1.vendor_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.grade_level = 'Grades 9-12'
donor,How many teachers have made some type of donation for projects in Chicago?,in Chicago refers to school_city = 'Chicago'; teachers refers to is_teacher_acct = 't',SELECT COUNT(DISTINCT T2.teacher_acctid) FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.is_teacher_acct = 't' AND T2.school_city = 'Chicago'
donor,How many Rock Hill City School projects have teacher donors?,Rock Hill City School refers to school_city = 'Rock Hill'; teacher donors refers to is_teacher_acct = 't',SELECT COUNT(DISTINCT T1.teacher_acctid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.school_city = 'Rock Hill' AND is_teacher_acct = 't'
donor,What is the total sum of the donations paid with an optional support in projects that reach more than 300 students?,with an optional support refers to donation_included_optional_support = 't'; reach more than 300 students refers to students_reached>300,SELECT SUM(T2.dollar_amount) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.students_reached > 300 AND t2.donation_included_optional_support = 't'
donor,How many total items were requested for the Onslow Co School District urban metro school projects?,Onslow Co School District refers to school_district = 'Onslow Co School District';,SELECT SUM(T1.item_quantity) FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_metro = 'urban' AND T2.school_district = 'Onslow Co School District'
donor,What is the average total donations received by Fresno County colleges?,"Fresno County colleges refers to school_county = 'Fresno'; average refers to DIVIDE(sum(donation_optional_support,donation_to_project),sum(donation_total))",SELECT SUM(T2.donation_optional_support + T2.donation_to_project) / COUNT(donationid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.school_county = 'Fresno'
donor,In what percentage of counties has the ABC Read project been launched?,"ABC Read project been launched refers to title = 'ABC Read'; percentage refers to DIVIDE(count(case when title = 'ABC Read' then school_county else null end),count(school_county))*100",SELECT CAST(SUM(CASE WHEN T2.title LIKE 'ABC Read' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.school_county) FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid
donor,What is the average amount of resources from projects that have received donations per honoree?,"donations per honoree refers to for_honoree = 't'; average refers to DIVIDE(sum(item_quantity), count(donationid))",SELECT AVG(T1.item_quantity) FROM resources AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.for_honoree = 't'
donor,"When did the project ""Photojournalists Want to Exhibit Their Best Works"" go live?","project ""Photojournalists Want to Exhibit Their Best Works"" refers to title = 'Photojournalists Want to Exhibit Their Best Works'; when project go live refers to datePosted",SELECT T1.date_posted FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T2.title LIKE 'Photojournalists Want to Exhibit Their Best Works'
donor,Which item provided for projects with Mathematics as a primary subject is the most expensive?,Mathematics as a primary subject refers to primary_focus_subject = 'Mathematics'; most expensive refers to max(item_unit_price),SELECT T1.item_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.primary_focus_subject = 'Mathematics' ORDER BY T1.item_unit_price DESC LIMIT 1
donor,"Where is the school that needs a ""Viewscreen LCD from Texas Instruments, TI-84 Plus""? Provide the latitude and longitude of that school.","needs a ""Viewscreen LCD from Texas Instruments, TI-84 Plus"" refers to item_name = 'Viewscreen LCD from Texas Instruments, TI-84 Plus'; where is the school refers to school_city; latitude refers to school_latitude; longtitude refers to school_longitude","SELECT T2.school_city, T2.school_latitude, T2.school_longitude FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.item_name = 'Viewscreen LCD FROM Texas Instruments, TI-84 Plus'"
donor,"How many donations does the project ""Look, Look, We Need a Nook!"" have?","project ""Look, Look, We Need a Nook!"" refers to title = 'Look, Look, We Need a Nook!'","SELECT SUM(T3.donation_total) FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN donations AS T3 ON T2.projectid = T3.projectid WHERE T1.title = 'Look, Look, We Need a Nook!'"
donor,"List the poverty level of all the schools that received donations with the zip code ""7079"".","zip code ""7079"" refers to donor_zip = '7079'",SELECT DISTINCT T2.poverty_level FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.donor_zip = 7079
donor,"What is the name of the vendor that the project ""Bloody Times"" uses for their resources?","project ""Bloody Times"" refers to title = 'Bloody Times'",SELECT T3.vendor_name FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid INNER JOIN resources AS T3 ON T2.projectid = T3.projectid WHERE T1.title = 'Bloody Times'
donor,"List all the items from ""Sax Arts & Crafts"" and the zip code of the schools that received them.","from ""Sax Arts & Crafts"" refers to vendor_name = 'Sax Arts & Crafts'; zip code of the schools refers school_zip","SELECT T2.school_zip, T1.item_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.vendor_name = 'Sax Arts & Crafts'"
donor,"What are the coordinates of the school with the project ""Wiping Away Bad Grades""?","project ""Wiping Away Bad Grades"" title = 'Wiping Away Bad Grades'; coordinates refers to school_longitude, school_latitude","SELECT T1.school_longitude, T1.school_latitude FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T2.title LIKE 'Wiping Away Bad Grades'"
donor,List the primary subject of all the donations with a corporate sponsored giftcard.,corporate sponsored giftcard refers to payment_included_campaign_gift_card = 't'; primary subject refers to primary_focus_subject,SELECT DISTINCT T2.primary_focus_subject FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.payment_included_campaign_gift_card = 't'
donor,What is the most expensive book item? Please provide a short description of projects related to those.,book item refers to project_resource_type = 'Books'; most expensive refers to MAX(item_unit_price),"SELECT T1.item_name, T2.short_description FROM resources AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T1.project_resource_type = 'Books' ORDER BY T1.item_unit_price DESC LIMIT 1"
donor,"For what grade was the project ""Too Close for Comfort"" for?","project ""Too Close for Comfort"" refers to title = 'Too Close for Comfort'; grade refers to grade_level",SELECT T1.grade_level FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T2.title LIKE 'Too Close for Comfort'
donor,"What is the total number of students impacted by the projects with a donation from a donor with zip code ""22205""?","zip code ""22205"" refers to donor_zip = '22205'; students impacted refers to students_reached",SELECT SUM(T2.students_reached) FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.donor_zip = 22205
donor,What percentage of donations are given via a giving or campaign page? List the primary area of those donations.,"given via a giving or campaign page refers to via_giving_page = 't'; percentage refers to DIVIDE(count(case when via_giving_page = 't' then donationid else null end),count(donationid))*100; primary area of donation refers to primary_focus_area","SELECT CAST(SUM(CASE WHEN T1.via_giving_page = 't' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(donation_total), ( SELECT T2.primary_focus_area FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.via_giving_page = 't' GROUP BY T2.primary_focus_area ORDER BY SUM(T1.donation_total) DESC LIMIT 1 ) result FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid"
donor,"Among the technology items, what percentage of them are from Best Buy for Business? Provide the date of the project related to those items.","technology items refers to project_resource_type = 'Technology'; from Best Buy for Business refers to vendor_name = 'Best Buy for Business'; percentage refers to DIVIDE(count(case when vendor_name = 'Best Buy for Business'),count(projectid))",SELECT CAST(SUM(CASE WHEN T1.vendor_name = 'Best Buy for Business' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.projectid) FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.project_resource_type = 'Technology' UNION ALL SELECT DISTINCT T1.date_posted FROM projects AS T1 INNER JOIN resources AS T2 ON T1.projectid = T2.projectid WHERE T2.vendor_name = 'Best Buy for Business' AND T2.project_resource_type = 'Technology'
video_games,How many more games were sold on game platform ID 50 than on game platform ID 51 in region ID 1?,"result = subtract(sum(num_sales where game_platform_id = 50), sum(num_sales where game_platform_id = 51))",SELECT (SUM(CASE WHEN T.game_platform_id = 50 THEN T.num_sales ELSE 0 END) - SUM(CASE WHEN T.game_platform_id = 51 THEN T.num_sales ELSE 0 END)) * 100000 AS nums FROM region_sales AS T WHERE T.region_id = 1
video_games,Please list all the games that have the same game genre as 3D Lemmings.,game refers to game_name; 3D Lemmings refers to game_name = '3D Lemmings',SELECT T1.game_name FROM game AS T1 WHERE T1.genre_id = ( SELECT T.genre_id FROM game AS T WHERE T.game_name = '3D Lemmings' )
video_games,How many action games are there in total?,action game refers to genre_name = 'Action',SELECT COUNT(T1.id) FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T2.genre_name = 'Action'
video_games,What is the genre of 3D Lemmings?,genre refers to genre_name; 3D Lemmings refers to game_name = '3D Lemmings',SELECT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T1.game_name = '3D Lemmings'
video_games,Who is the publisher of 3D Lemmings?,publisher refers to publisher_name; 3D Lemmings refers to game_name = '3D Lemmings',SELECT T3.publisher_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T1.game_name = '3D Lemmings'
video_games,Please list the names of all the games published by 10TACLE Studios.,name refers to game_name; published by 10TACLE Studios refers to publisher_name = '10TACLE Studios',SELECT T1.game_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T3.publisher_name = '10TACLE Studios'
video_games,"Among the games published by 10TACLE Studios, how many of them are puzzles?",published by 10TACLE Studios refers to publisher_name = '10TACLE Studios'; puzzle refers to genre_name = 'Puzzle',SELECT COUNT(T1.id) FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id INNER JOIN genre AS T4 ON T1.genre_id = T4.id WHERE T4.genre_name = 'Puzzle' AND T3.publisher_name = '10TACLE Studios'
video_games,Please list the names of all the games published by 10TACLE Studios and are puzzles.,name refers to game_name; published by 10TACLE Studios refers to publisher_name = '10TACLE Studios'; puzzle refers to genre_name = 'Puzzle',SELECT T1.game_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id INNER JOIN genre AS T4 ON T1.genre_id = T4.id WHERE T3.publisher_name = '10TACLE Studios' AND T4.genre_name = 'Puzzle'
video_games,Which publisher has published the most games?,publisher refers to publisher_name; the most games refers to max(count(game_id)),"SELECT T.publisher_name FROM ( SELECT T2.publisher_name, COUNT(DISTINCT T2.id) FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id GROUP BY T1.publisher_id ORDER BY COUNT(T2.id) DESC LIMIT 1 ) t"
video_games,On which platform was Panzer Tactics released in 2007?,platform refers to platform_name; Panzer Tactics refers to game_name = 'Panzer Tactics'; released in 2007 refers to release_year = 2007,SELECT T5.platform_name FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN game AS T3 ON T1.game_id = T3.id INNER JOIN game_platform AS T4 ON T1.id = T4.game_publisher_id INNER JOIN platform AS T5 ON T4.platform_id = T5.id WHERE T3.game_name = 'Panzer Tactics' AND T4.release_year = 2007
video_games,In which year was Panzer Tactics released on DS?,year refers to release_year; Panzer Tactics refers to game_name = 'Panzer Tactics'; on DS refers to platform_name = 'DS',SELECT T4.release_year FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN game AS T3 ON T1.game_id = T3.id INNER JOIN game_platform AS T4 ON T1.id = T4.game_publisher_id INNER JOIN platform AS T5 ON T4.platform_id = T5.id WHERE T3.game_name = 'Panzer Tactics' AND T5.platform_name = 'DS'
video_games,Please list the names of the publishers of all the puzzle games.,name of publisher refers to publisher_name; puzzle refers to genre_name = 'Puzzle',SELECT DISTINCT T3.publisher_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id INNER JOIN genre AS T4 ON T1.genre_id = T4.id WHERE T4.genre_name = 'Puzzle'
video_games,What is the name of the publisher that has published the most puzzle games?,name of publisher refers to publisher_name; puzzle refers to genre_name = 'Puzzle'; the most puzzle games refers to max(count(game_id where genre_name = 'Puzzle')),"SELECT T.publisher_name FROM ( SELECT T3.publisher_name, COUNT(DISTINCT T1.id) FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id INNER JOIN genre AS T4 ON T1.genre_id = T4.id WHERE T4.genre_name = 'Puzzle' GROUP BY T3.publisher_name ORDER BY COUNT(DISTINCT T1.id) DESC LIMIT 1 ) t"
video_games,How many publishers have published more than 3 puzzle games?,puzzle refers to genre_name = 'Puzzle'; more than 3 puzzle games refers to count(game_id where genre_name = 'Puzzle') > 3,"SELECT COUNT(T.publisher_name) FROM ( SELECT T3.publisher_name, COUNT(DISTINCT T1.id) FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id INNER JOIN genre AS T4 ON T1.genre_id = T4.id WHERE T4.genre_name = 'Puzzle' GROUP BY T3.publisher_name HAVING COUNT(DISTINCT T1.id) > 3 ) t"
video_games,"Among the games published by Nintendo, what is the percentage of those in the genre of sports?","published by Nintendo refers to publisher_name = 'Nintendo'; in the genre of sports refers to genre_name = 'Sports'; percentage = divide(count(game_id where genre_name = 'Sports'), count(game_id)) * 100% where publisher_name = 'Nintendo'",SELECT CAST(COUNT(CASE WHEN T4.genre_name = 'Sports' THEN T1.id ELSE NULL END) AS REAL) * 100/ COUNT(T1.id) FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id INNER JOIN genre AS T4 ON T1.genre_id = T4.id WHERE T3.publisher_name = 'Nintendo'
video_games,How many games were sold on the DS platform on average in the 4 different regions?,"on the DS platform refers to platform_name = 'DS'; number of games sold on average = divide(sum(multiply(num_sales, 100000)), 4) where platform_name = 'DS'",SELECT SUM(T1.num_sales) * 100000 / 4 FROM region_sales AS T1 INNER JOIN game_platform AS T2 ON T1.game_platform_id = T2.id INNER JOIN platform AS T3 ON T2.platform_id = T3.id WHERE T3.platform_name = 'DS'
video_games,Tell the number of games whose publisher id is 352.,number of games refers to count(game_id),SELECT DISTINCT T.game_id FROM game_publisher AS T WHERE T.publisher_id = 352
video_games,List the genre id of the game Pro Evolution Soccer 2012.,Pro Evolution Soccer 2012 refers to game_name = 'Pro Evolution Soccer 2012',SELECT T.genre_id FROM game AS T WHERE T.game_name = 'Pro Evolution Soccer 2012'
video_games,State the region id of Japan.,region id refers to region.id; Japan refers to region_name = 'Japan',SELECT T.id FROM region AS T WHERE T.region_name = 'Japan'
video_games,Show the id of the game platform with the most sales in region 2.,id of the game platform refers to game_platform_id; the most sales refers to max(num_sales); region 2 refers to region_id = '2',"SELECT T1.game_platform_id FROM ( SELECT T.game_platform_id, SUM(T.num_sales) FROM region_sales AS T WHERE T.region_id = 2 GROUP BY T.game_platform_id ORDER BY SUM(T.num_sales) DESC LIMIT 1 ) T1"
video_games,Which genre has the most games? Show its id.,the most games refers to max(game_id); genre id refers to genre_id,"SELECT genre_id FROM ( SELECT T.genre_id, COUNT(T.id) FROM game AS T GROUP BY T.genre_id ORDER BY COUNT(T.id) DESC LIMIT 1 )"
video_games,"What is the id of the game ""Resident Evil Archives: Resident Evil""?","id of game refers to game.id; ""Resident Evil Archives: Resident Evil"" refers to game_name = 'Resident Evil Archives: Resident Evil'",SELECT T.genre_id FROM game AS T WHERE T.game_name = 'Resident Evil Archives: Resident Evil'
video_games,Show the number of games which were released on X360 in 2010.,on X360 refers to platform_name = 'X360'; in 2010 refers to release_year = '2010',SELECT COUNT(DISTINCT T3.game_id) FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T2.game_publisher_id = T3.id WHERE T1.platform_name = 'X360' AND T2.release_year = 2010
video_games,"State the publisher name of the game ""ModNation Racers"".","game ""ModNation Racers"" refers to game_name = 'ModNation Racers'",SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T3.game_name = 'ModNation Racers'
video_games,Show the id of game platform which makes the most sales in Japan.,id of game platform refers to game_platform_id; the most sales refers to max(num_sales); in Japan refers to region_name = 'Japan',"SELECT T.game_platform_id FROM ( SELECT T2.game_platform_id, MAX(T2.num_sales) FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id WHERE T1.region_name = 'Japan' ) t"
video_games,How many platforms are available for the game Pro Evolution Soccer 2016?,game Pro Evolution Soccer 2016 refers to game_name = 'Pro Evolution Soccer 2016',SELECT COUNT(T2.id) FROM game_platform AS T1 INNER JOIN platform AS T2 ON T1.platform_id = T2.id INNER JOIN game_publisher AS T3 ON T1.game_publisher_id = T3.id INNER JOIN game AS T4 ON T3.game_id = T4.id WHERE T4.game_name = 'Pro Evolution Soccer 2016'
video_games,How many games in the database belong to the genre of sports?,the genre of sports refers to genre_name = 'Sports',SELECT COUNT(T1.id) FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T2.genre_name = 'Sports'
video_games,Name of the publisher of the game id 10031.,name of publisher refers to publisher_name; the game id 10031 refers to game_id = '10031',SELECT T2.publisher_name FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.game_id = 10031
video_games,State the name of the publisher with the most games.,name of publisher refers to publisher_name; the most games refers to max(game_id),"SELECT T.publisher_name FROM ( SELECT T2.publisher_name, COUNT(DISTINCT T1.game_id) FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id GROUP BY T2.publisher_name ORDER BY COUNT(DISTINCT T1.game_id) DESC LIMIT 1 ) t"
video_games,How many more sports games than simulation games?,"sports game refers to genre_name = 'Sports'; simulation game refers to genre_name = 'Simulation'; how many more = subtract(sum(game_id where genre_name = 'Sports'), sum(game_id where genre_name = 'Simulation'))",SELECT COUNT(CASE WHEN T1.genre_name = 'Sports' THEN T2.id ELSE NULL END) - COUNT(CASE WHEN T1.genre_name = 'Simulation' THEN T2.id ELSE NULL END) FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id
video_games,"Tell the genre of the game ""Resident Evil: Revelations"".","genre refers to genre_name; game ""Resident Evil: Revelations"" refers to game_name = 'Resident Evil: Revelations'",SELECT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T1.game_name = 'Resident Evil: Revelations'
video_games,How many sales does game platform id 3871 make in Europe?,"number of sales = multiply(num_sales, 100000); in Europe refers to region_name = 'Europe'",SELECT T2.num_sales * 100000 FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id WHERE T1.region_name = 'Europe' AND T2.game_platform_id = 3871
video_games,Give the number of games which were published by Ascaron Entertainment GmbH.,published by Ascaron Entertainment GmbH refers to publisher_name = 'Ascaron Entertainment GmbH',SELECT COUNT(T2.game_id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name = 'Ascaron Entertainment GmbH'
video_games,Show the name of the earliest platform in the database.,the earliest refers to min(release_year); name of platform refers to platform_name,SELECT T2.platform_name FROM game_platform AS T1 INNER JOIN platform AS T2 ON T1.platform_id = T2.id ORDER BY T1.release_year ASC LIMIT 1
video_games,"For all the games which were published by Namco Bandai Games, what percentage of them were adventure games?","published by Namco Bandai Games refers to publisher_name = 'Namco Bandai Games'; adventure game refers to genre_name = 'Adventure'; percentage = divide(sum(game_id where genre_name = 'Adventure'), count(game_id)) * 100% where publisher_name = 'Namco Bandai Games'",SELECT CAST(COUNT(CASE WHEN T4.genre_name = 'Adventure' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id INNER JOIN genre AS T4 ON T1.genre_id = T4.id WHERE T3.publisher_name = 'Namco Bandai Games'
video_games,How many times more is the number of games which were published by Atari than Athena?,"published by Atari refers to publisher_name = 'Atari'; published by  Athena refers to publisher_name = 'Athena'; times = divide(sum(publisher_id where publisher_name = 'Atari'), sum(publisher_id where publisher_name = 'Athena'))",SELECT CAST(COUNT(CASE WHEN T1.publisher_name = 'Atari' THEN T2.game_id ELSE NULL END) AS REAL) / COUNT(CASE WHEN T1.publisher_name = 'Athena' THEN T2.game_id ELSE NULL END) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id
video_games,How many games did Electronic Arts publish?,Electronic Arts refers to publisher_name = 'Electronic Arts',SELECT COUNT(DISTINCT T2.game_id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name = 'Electronic Arts'
video_games,What is the genre of the Advent Rising game?,genre refers to genre_name; Advent Rising game refers to game_name = 'Advent Rising',SELECT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T1.game_name = 'Advent Rising'
video_games,How many role-playing games did Microsoft Game Studios publish?,role-playing game refers to genre_name = 'Role-Playing'; Microsoft Game Studios refers to publisher_name = 'Microsoft Game Studios',SELECT COUNT(T3.id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id INNER JOIN genre AS T4 ON T3.genre_id = T4.id WHERE T4.genre_name = 'Role-Playing' AND T1.publisher_name = 'Microsoft Game Studios'
video_games,Which publisher published the most games?,publisher refers to publisher_name; the most games refers to max(count(publisher_id)),"SELECT T.publisher_name FROM ( SELECT T2.publisher_name, COUNT(DISTINCT T1.game_id) FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id GROUP BY T2.publisher_name ORDER BY COUNT(DISTINCT T1.game_id) DESC LIMIT 1 ) t"
video_games,"In 2004, what are the names of the platforms where Codemasters publish its games?",name of platform refers to platform_name; Codemasters refers to publisher_name = 'Codemasters'; in 2004 refers to release_year = 2004,SELECT T4.platform_name FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game_platform AS T3 ON T2.id = T3.game_publisher_id INNER JOIN platform AS T4 ON T3.platform_id = T4.id WHERE T3.release_year = 2004 AND T1.publisher_name = 'Codemasters'
video_games,How many games were released on PS4 in 2014?,on PS4 refers to platform_name = 'PS4'; in 2014 refers to release_year = 2014,SELECT COUNT(DISTINCT T3.game_id) FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T2.game_publisher_id = T3.id WHERE T1.platform_name = 'PS4' AND T2.release_year = 2014
video_games,What are the names of the publishers who published the oldest games?,name of publisher refers to publisher_name; the oldest game refers to min(release_year),SELECT DISTINCT T3.publisher_name FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id ORDER BY T1.release_year LIMIT 1
video_games,How many publishers in Japan released a game on X360 in 2011?,in Japan refers to region_name = 'Japan'; on X360 refers to platform_name = 'X360'; in 2011 refers to release_year = 2011,SELECT COUNT(T3.game_publisher_id) FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id INNER JOIN platform AS T4 ON T3.platform_id = T4.id WHERE T4.platform_name = 'X360' AND T3.release_year = 2011 AND T1.region_name = 'Japan'
video_games,Which game platform is the most popular in Europe?,game platform refers to game_platform_id; the most popular refers to max(num_sales); in Europe refers to region_name = 'Europe',"SELECT T.platform_name FROM ( SELECT T4.platform_name, SUM(T2.num_sales) FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id INNER JOIN platform AS T4 ON T3.platform_id = T4.id WHERE T1.region_name = 'Europe' ORDER BY T2.num_sales DESC LIMIT 1 ) t"
video_games,Which year has the most number of PC games releases?,year refers to release_year; the most number of releases refers to max(count(game_id)),"SELECT T.release_year FROM ( SELECT T2.release_year, COUNT(DISTINCT T3.game_id) FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T2.game_publisher_id = T3.id WHERE T1.platform_name = 'PC' GROUP BY T2.release_year ORDER BY COUNT(DISTINCT T3.game_id) DESC LIMIT 1 ) t"
video_games,List the names of all the publishers who published one game only.,name of publisher refers to publisher_name; published one game only refers to count(publisher_id) = 1,"SELECT T.publisher_name FROM ( SELECT T2.publisher_name, COUNT(DISTINCT T1.game_id) FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id GROUP BY T2.publisher_name HAVING COUNT(DISTINCT T1.game_id) = 1 ) t"
video_games,What are the names of the games that were published by 505 Games?,name of game refers to game_name; published by 505 Games refers to publisher_name = '505 Games',SELECT T3.game_name FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.publisher_name = '505 Games'
video_games,What is the genre ID of the game named 25 to Life?,the game named 25 to Life refers to game_name = '25 to Life',SELECT T.genre_id FROM game AS T WHERE T.game_name = '25 to Life'
video_games,List down the game ID of games with genre ID 2.,game ID refers to game.id; genre ID 2 refers to genre_id = 2,SELECT T.id FROM game AS T WHERE T.genre_id = 2
video_games,Provide the release year of record ID 1 to 10.,record ID 1 to 10 refers to game.id BETWEEN 1 AND 10,SELECT T.release_year FROM game_platform AS T WHERE T.id BETWEEN 1 AND 10
video_games,Give the game publisher ID of records with platform ID 15.,platform ID 15 refers to platform_id = 15,SELECT T.game_publisher_id FROM game_platform AS T WHERE T.platform_id = 15
video_games,List down the record ID of records released between 2000 to 2003.,record ID refers to game.id; released between 2000 to 2003 refers to release_year BETWEEN 2000 AND 2003,SELECT T.id FROM game_platform AS T WHERE T.release_year BETWEEN 2000 AND 2003
video_games,What is the number of sales in region ID 2 with game platform ID 9615?,"number of sales refers to multiply(num_sales, 100000)",SELECT T.num_sales * 100000 FROM region_sales AS T WHERE T.region_id = 2 AND T.game_platform_id = 9615
video_games,List down the names of platform where the games released in 2016 can be played on.,name of platform refers to platform_name; released in 2016 refers to release_year = 2016,SELECT DISTINCT T1.platform_name FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id WHERE T2.release_year = 2016
video_games,When was the game titled 3DS Classic Collection released?,when refers to release_year; the game titled 3DS Classic Collection refers to game_name = '3DS Classic Collection',SELECT T1.release_year FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T3.game_name = '3DS Classic Collection'
video_games,What is the average number of sales in Japan?,"in Japan refers to region_name = 'Japan'; average number of sales = multiply(avg(num_sales), 100000) where region_name = 'Japan'",SELECT AVG(T2.num_sales) * 100000 AS avg_japan FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id WHERE T1.region_name = 'Japan'
video_games,Give the genre of the games released from 2000 to 2002.,genre refers to genre_name; released from 2000 to 2002 refers to release_year BETWEEN 2000 AND 2002,SELECT DISTINCT T4.genre_name FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id INNER JOIN genre AS T4 ON T3.genre_id = T4.id WHERE T1.release_year BETWEEN 2000 AND 2002
video_games,List down the name of games published by 3DO.,name of game refers to game_name; published by 3DO refers to publisher_name = '3DO',SELECT T1.game_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T3.publisher_name = '3DO'
video_games,How many role-playing games are there?,role-playing game refers to genre_name = 'Role-Playing',SELECT COUNT(T1.id) FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T2.genre_name = 'Role-Playing'
video_games,List the region name where games reached 300000 sales and above.,reached 300000 sales and above refers to num_sales > 3,SELECT DISTINCT T1.region_name FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id WHERE T2.num_sales * 100000 > 300000
video_games,Which company published the game with the most sales in North America?,company refers to publisher_name; the most sales refers to max(num_sales); in North America refers to region_name = 'North America',"SELECT T.publisher_name FROM ( SELECT T5.publisher_name, SUM(T2.num_sales) * 100000 FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id INNER JOIN game_publisher AS T4 ON T3.game_publisher_id = T4.id INNER JOIN publisher AS T5 ON T4.publisher_id = T5.id WHERE T1.region_name = 'North America' GROUP BY T5.publisher_name ORDER BY SUM(T2.num_sales) * 100000 DESC LIMIT 1 ) t"
video_games,What is the release year of the game that gained 350000 sales in North America?,gained 350000 sales refers to num_sales = 3.5; in North America refers to region_name = 'North America',SELECT T3.release_year FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id WHERE T2.num_sales * 100000 = 350000 AND T1.region_name = 'North America'
video_games,In which platform does the game titled 15 Days available?,platform refers to platform_name; the game titled 15 Days refers to game_name = '15 Days',SELECT T1.platform_name FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T2.game_publisher_id = T3.id INNER JOIN game AS T4 ON T3.game_id = T4.id WHERE T4.game_name = 'Counter Force'
video_games,Give the name of the publisher of the game ID 75.,name of publisher refers to publisher_name; the game ID 75 refers to game_id = 75,SELECT T2.publisher_name FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.game_id = 75
video_games,What is the title of the game that gained the most sales in Japan?,title of the game refers to game_name; gained the most sales refers to max(num_sales); in Japan refers to region_name = 'Japan',SELECT T.game_name FROM ( SELECT T5.game_name FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id INNER JOIN game_publisher AS T4 ON T3.game_publisher_id = T4.id INNER JOIN game AS T5 ON T4.game_id = T5.id WHERE T1.region_name = 'Japan' ORDER BY T2.num_sales DESC LIMIT 1 ) t
video_games,Provide the game publisher's name of the game with sales greater than 90% of the average sales in Japan.,"game publisher's name refers to publisher_name; sales greater than 90% of the average sales refers to num_sales > multiply(0.9, avg(num_sales)); in Japan refers to region_name = 'Japan'",SELECT DISTINCT T5.publisher_name FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id INNER JOIN game_publisher AS T4 ON T3.game_publisher_id = T4.id INNER JOIN publisher AS T5 ON T4.publisher_id = T5.id WHERE T2.num_sales * 10000000 > ( SELECT AVG(T2.num_sales) * 100000 * 90 FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id WHERE T1.region_name = 'Japan' )
video_games,"Among the games released in 2004, what is the percentage of games on PSP?","in 2004 refers to release_year = 2004; on PSP refers to platform_name = 'PSP'; percentage = divide(sum(platform_id where platform_name = 'PSP'), count(platform_id)) * 100% where release_year = 2004",SELECT CAST(COUNT(CASE WHEN T1.platform_name = 'PSP' THEN T3.game_id ELSE NULL END) AS REAL) * 100 / COUNT(T3.game_id) FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T2.game_publisher_id = T3.id WHERE T2.release_year = 2004
video_games,How many games were released in 1981?,released in 1981 refers to release_year = 1981,SELECT COUNT(T.id) FROM game_platform AS T WHERE T.release_year = 1981
video_games,What is the genre ID of the '2Xtreme' game?,the '2Xtreme' game refers to game_name = '2Xtreme',SELECT T.genre_id FROM game AS T WHERE T.game_name = '2Xtreme'
video_games,Sum the total game sales in every region for platform ID 9658.,"total game sales refers to multiply(sum(num_sales), 100000); platform ID 9658 refers to game_platform_id = 9658",SELECT SUM(T.num_sales) * 100000 FROM region_sales AS T WHERE T.game_platform_id = 9658
video_games,Provide the ID of 1C Company.,ID refers to publisher.id; 1C Company refers to publisher_name = '1C Company',SELECT T.id FROM publisher AS T WHERE T.publisher_name = '1C Company'
video_games,Provide the genre name of the genre ID 3.,genre ID 3 refers to genre.id = 3,SELECT T.genre_name FROM genre AS T WHERE T.id = 3
video_games,List the game IDs that were released in 2017.,game ID refers to game.id; released in 2017 refers to release_year = 2017,SELECT T.id FROM game_platform AS T WHERE T.release_year = 2017
video_games,"When was the ""Adventure Island"" game released?","when refers to release_year; the ""Adventure Island"" game refers to game_name = 'Adventure Island'",SELECT T3.release_year FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN game_platform AS T3 ON T2.id = T3.game_publisher_id WHERE T1.game_name = 'Adventure Island'
video_games,How many games are puzzle genre?,puzzle genre refers to genre_name = 'Puzzle',SELECT COUNT(T1.id) FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T2.genre_name = 'Puzzle'
video_games,Provide the games that can be played on the SCD platform.,game refers to game_name; on the SCD platform refers to platform_name = 'SCD',SELECT T4.game_name FROM game_platform AS T1 INNER JOIN platform AS T2 ON T1.platform_id = T2.id INNER JOIN game_publisher AS T3 ON T1.game_publisher_id = T3.id INNER JOIN game AS T4 ON T3.game_id = T4.id WHERE T2.platform_name = 'SCD'
video_games,How many games were published by Acclaim Entertainment?,published by Acclaim Entertainment refers to publisher_name = 'Acclaim Entertainment',SELECT COUNT(DISTINCT T1.game_id) FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Acclaim Entertainment'
video_games,Name the publisher of the Chronicles of the Sword game.,publisher refers to publisher_name; the Chronicles of the Sword game refers to game_name = 'Chronicles of the Sword',SELECT T3.publisher_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T1.game_name = 'Chronicles of the Sword'
video_games,Provide the number of games sold in North America on the PS4 platform.,"number of games sold refers to sum(multiply(num_sales, 100000)); in North America refers to region_name = 'North America'; on the PS4 platform refers to platform_name = 'PS4'",SELECT SUM(T1.num_sales * 100000) FROM region_sales AS T1 INNER JOIN region AS T2 ON T1.region_id = T2.id INNER JOIN game_platform AS T3 ON T1.game_platform_id = T3.id INNER JOIN platform AS T4 ON T3.platform_id = T4.id WHERE T2.region_name = 'North America' AND T4.platform_name = 'PS4'
video_games,Provide the ID of the most popular platform in Europe.,ID refers to game_platform_id; the most popular refers to max(num_sales); in Europe refers to region_name = 'Europe',"SELECT T.game_platform_id FROM ( SELECT T1.game_platform_id, SUM(T1.num_sales) FROM region_sales AS T1 INNER JOIN region AS T2 ON T1.region_id = T2.id WHERE T2.region_name = 'Europe' GROUP BY T1.game_platform_id ORDER BY SUM(T1.num_sales) DESC LIMIT 1 ) t"
video_games,Name the game released in 2011.,game refers to game_name; released in 2011 refers to release_year = 2011,SELECT T3.game_name FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.release_year = 2011
video_games,How many games can be played on the Wii platform?,on the Wii platform refers to platform_name = 'Wii',SELECT COUNT(T1.id) FROM game_platform AS T1 INNER JOIN platform AS T2 ON T1.platform_id = T2.id WHERE T2.platform_name = 'Wii'
video_games,Provide any five games and release year under the sports genre.,game refers to game_name; under the sports genre refers to genre_name = 'Sports',"SELECT T3.game_name, T1.release_year FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id INNER JOIN genre AS T4 ON T3.genre_id = T4.id WHERE T4.genre_name = 'Sports' LIMIT 5"
video_games,Mention the genre of the 2Xtreme.,genre refers to genre_name; the 2Xtreme game refers to game_name = '2Xtreme',SELECT T2.id FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T1.game_name = '2Xtreme'
video_games,Provide the platform where the Panzer Tactics can be played.,platform refers to platform_name; the Panzer Tactics is a game name.,SELECT T4.platform_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN game_platform AS T3 ON T2.id = T3.game_publisher_id INNER JOIN platform AS T4 ON T3.platform_id = T4.id WHERE T1.game_name = 'Panzer Tactics'
video_games,Calculate how many percent of sales in North America is higher than the average sale per region for platform ID 9577.,"in North America refers to region_name = 'North America'; platform ID 9577 refers to game_platform_id = 9577; percent = divide(subtract(num_sales where region_name = 'North America' and game_platform_id = 9577, avg(num_sales)), avg(num_sales)) * 100%",SELECT (SUM(CASE WHEN T2.region_name = 'North America' THEN T1.num_sales ELSE 0 END) - AVG(T1.num_sales)) * 100.0 / AVG(T1.num_sales) FROM region_sales AS T1 INNER JOIN region AS T2 ON T1.region_id = T2.id WHERE T1.game_platform_id = 9577
video_games,Which game has the longest name?,game refers to game_name; the longest name refers to max(length(game_name)),SELECT T.game_name FROM game AS T ORDER BY LENGTH(T.game_name) DESC LIMIT 1
video_games,How many games were released in 2001?,released in 2001 refers to release_year = 2001,SELECT COUNT(T.id) FROM game_platform AS T WHERE T.release_year = 2001
video_games,What is the total number of sales across all regions?,total number of sales = sum(num_sales),SELECT SUM(T.num_sales) * 100000 FROM region_sales t
video_games,What is the average number of games published by a publisher?,"average number = divide(count(game_id), count(publisher_id))",SELECT CAST(COUNT(T.game_id) AS REAL) / COUNT(DISTINCT T.publisher_id) FROM game_publisher AS T
video_games,What is the first year a game is released?,the first year refers to min(release_year),SELECT MIN(T.release_year) FROM game_platform t
video_games,What is the least common game genre?,the least common game genre refers to min(count(genre_id)); genre refers to genre_name,"SELECT T.game_name FROM ( SELECT T2.game_name, COUNT(T2.id) FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id GROUP BY T2.game_name ORDER BY COUNT(T2.id) ASC LIMIT 1 ) t"
video_games,"Which is the publisher for the game ""Prism: Light the Way""?","publisher refers to publisher_name; game ""Prism: Light the Way"" refers to game_name = 'Prism: Light the Way'",SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T3.game_name = 'Prism: Light the Way'
video_games,List the platforms that release the most games each year.,platform refers to platform_id; the most games refers to max(count(game_publisher_id)),"SELECT T1.platform_name FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T2.game_publisher_id = T3.id GROUP BY T2.release_year, T1.platform_name ORDER BY COUNT(DISTINCT T3.game_id) DESC"
video_games,How many games do not have any sales in Europe?,do not have any sales refers to num_sales = 0; in Europe refers to region_name = 'Europe',SELECT COUNT(*) FROM region_sales AS T1 INNER JOIN region AS T2 ON T1.region_id = T2.id WHERE T2.region_name = 'Europe' AND T1.num_sales = 0
video_games,What are the games that were released in 2006?,game refers to game_name; released in 2006 refers to release_year = 2006,SELECT T3.game_name FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.release_year = 2006
video_games,"What is the genre of the game ""Mario vs. Donkey Kong""?","genre refers to genre_name; game ""Mario vs. Donkey Kong"" refers to game_name = 'Mario vs. Donkey Kong'",SELECT T1.genre_name FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id WHERE T2.game_name = 'Mario vs. Donkey Kong'
video_games,Which publisher published the most games?,publisher refers to publisher_name; the most games refers to max(count(game_id)),"SELECT T.publisher_name FROM ( SELECT T1.publisher_name, COUNT(DISTINCT T2.game_id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id GROUP BY T1.publisher_name ORDER BY COUNT(DISTINCT T2.game_id) DESC LIMIT 1 ) t"
video_games,List all the platform games.,platform game refers to genre_name = 'Platform'; game refers to game_name,SELECT T2.game_name FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id WHERE T1.genre_name = 'Platform'
video_games,"What are the years that ""WiiU"" got a new game?","year refers to release_year; ""WiiU"" refers to platform_name = 'WiiU'",SELECT T2.release_year FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id WHERE T1.platform_name = 'WiiU' ORDER BY T2.release_year DESC LIMIT 1
video_games,Which game has the most sales in Japan?,"
which game refers to game_name; most sales refers to MAX(num_sales); Japan refers to region_name = 'Japan';",SELECT T5.game_name FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id INNER JOIN game_publisher AS T4 ON T3.game_publisher_id = T4.id INNER JOIN game AS T5 ON T4.game_id = T5.id WHERE T1.region_name = 'Japan' ORDER BY T2.num_sales DESC LIMIT 1
video_games,"List the games from the publisher ""Activision"".","games refers to game_name; ""Activision"" refers to publisher_name = 'Activision';",SELECT T3.game_name FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.publisher_name = 'Activision'
video_games,"How many different publishers have published a game that starts with ""Marvel""?","game that starts with ""Marvel"" refers to game_name LIKE 'Marvel%';",SELECT COUNT(DISTINCT T1.publisher_id) FROM game_publisher AS T1 INNER JOIN game AS T2 ON T1.game_id = T2.id WHERE T2.game_name LIKE 'Marvel%'
video_games,What percentage of games are sports?,"percentage = MULTIPLY(DIVIDE(SUM(genre_name = 'sport'), COUNT(game_name)), 100.0); sports refers to genre_name = 'sport';",SELECT CAST(COUNT(CASE WHEN T1.genre_name = 'Sports' THEN T2.id ELSE NULL END) AS REAL) * 100 / COUNT(T2.id) FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id
video_games,What is the ratio of game sales between North America and Japan?,"ratio = DIVIDE(SUM(num_sales WHERE region_name = 'North America'), SUM(num_sales WHERE region_name = 'Japan')); North America refers to region_name = 'North America'; Japan refers to region_name = 'Japan';",SELECT SUM(CASE WHEN T2.region_name = 'North America' THEN T1.num_sales ELSE 0 END) / SUM(CASE WHEN T2.region_name = 'Japan' THEN T1.num_sales ELSE 0 END) FROM region_sales AS T1 INNER JOIN region AS T2 ON T1.region_id = T2.id
video_games,Which year has the most number of video game releases?,year that has the most number of video game releases refers to MAX(COUNT(release_year));,"SELECT T1.release_year FROM ( SELECT T.release_year, COUNT(id) FROM game_platform AS T GROUP BY T.release_year ORDER BY COUNT(T.id) DESC LIMIT 1 ) T1"
video_games,How many video game publishers have Interactive in their names?,publishers that have Interactive in their names refers to publisher_name LIKE '%Interactive%';,SELECT COUNT(T.id) FROM publisher AS T WHERE T.publisher_name LIKE '%Interactive%'
video_games,What are the top 2 platforms with the most sales in North America?,platforms refers to platform_name; most sales refers to MAX(num_sales); North America refers to region_name = 'North America';,SELECT T4.platform_name FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id INNER JOIN platform AS T4 ON T3.platform_id = T4.id WHERE T1.region_name = 'North America' ORDER BY T2.num_sales DESC LIMIT 2
video_games,How many games did BMG Interactive Entertainment release in 2012?,BMG Interactive Entertainment refers to publisher_name = 'BMG Interactive Entertainment'; release in 2012 refers to release_year = 2012;,SELECT COUNT(DISTINCT T2.game_id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game_platform AS T3 ON T2.id = T3.game_publisher_id WHERE T3.release_year = 2012
video_games,What is the name of the publisher that released the most video games in 2007?,name of the publisher refers to publisher_name; publisher that released the most video games in 2007 refers to MAX(COUNT(publisher_name)) WHERE release_year = 2007;,SELECT T3.publisher_name FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T1.release_year = 2007 GROUP BY T3.publisher_name ORDER BY COUNT(DISTINCT T2.game_id) DESC LIMIT 1
video_games,How many publishers published the Minecraft game?,Minecraft refers to game_name = 'Minecraft';,SELECT COUNT(T2.publisher_id) FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id WHERE T1.game_name = 'Minecraft'
video_games,Which publisher has published the most number of Action games?,which publisher refers to publisher_name; publisher that has published the most number of Action games refers to MAX(COUNT(publisher_name)) WHERE genre_name = 'Action'; Action games refers to game_name WHERE genre_name = 'Action';,"SELECT T.publisher_name FROM ( SELECT T4.publisher_name, COUNT(DISTINCT T2.id) FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id INNER JOIN game_publisher AS T3 ON T2.id = T3.game_id INNER JOIN publisher AS T4 ON T3.publisher_id = T4.id WHERE T1.genre_name = 'Action' GROUP BY T4.publisher_name ORDER BY COUNT(DISTINCT T2.id) DESC LIMIT 1 ) t"
video_games,How many Sports games did Nintendo publish?,Sports games refers to game_name WHERE genre_name = 'Sports'; Nintendo refers to publisher_name = 'Nintendo';,SELECT COUNT(T3.id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id INNER JOIN genre AS T4 ON T3.genre_id = T4.id WHERE T4.genre_name = 'Sports' AND T1.publisher_name = 'Nintendo'
video_games,What is the genre of the game '2 Games in 1: Sonic Advance & ChuChu Rocket!'?,genre refers to genre_name; '2 Games in 1: Sonic Advance & ChuChu Rocket!' is a game name;,SELECT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T1.game_name = '2 Games in 1: Sonic Advance & ChuChu Rocket!'
video_games,How many times did other regions make positive sales in DS platform?,other regions refers to region_name = 'Other'; positive sales refers to num_sales > 0; DS platform refers to platform_name = 'DS';,SELECT COUNT(DISTINCT T2.id) FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN region_sales AS T3 ON T1.id = T3.game_platform_id INNER JOIN region AS T4 ON T3.region_id = T4.id WHERE T1.platform_name = 'DS' AND T4.region_name = 'Other' AND T3.num_sales > 0
video_games,What are the names of the games published by American Softworks?,names of the games refers to game_name; American Softworks refers to publisher_name = 'American Softworks';,SELECT T3.game_name FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.publisher_name = 'American Softworks'
video_games,How many strategy games are there?,strategy games refers game_name WHERE genre_name = 'Strategy';,SELECT COUNT(CASE WHEN T1.genre_name = 'Strategy' THEN T2.id ELSE NULL END) FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id
video_games,Which publisher published Overwatch?,which publisher refers to publisher_name; Overwatch refers to game_name = 'Overwatch';,SELECT T3.publisher_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T1.game_name = 'Overwatch'
video_games,What is the name of the genre with the most number of video games?,name of the genre refers to genre_name; genre with the most number of video games refers to MAX(COUNT(genre_name));,SELECT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T2.id = T1.genre_id GROUP BY T2.genre_name ORDER BY COUNT(T1.genre_id) DESC LIMIT 1
video_games,What is the number of games sold in Europe for game platform ID 26?,"total number of games sold = MULTIPLY(num_sales, 100000); Europe refers to region_name = 'Europe';",SELECT T2.num_sales * 100000 AS nums_eur FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id WHERE T2.game_platform_id = 26 AND T1.region_name = 'Europe'
video_games,How many games were released in the year 2001?,released in the year 2001 refers to release_year = 2001;,SELECT COUNT(id) FROM game_platform AS T WHERE T.release_year = 2001
video_games,How many games include the word 'Box' in their name?,games include the word 'Box' in their name refers to game_name = '%Box%';,SELECT COUNT(*) FROM ( SELECT T.game_name FROM game AS T WHERE T.game_name LIKE '%Box%' )
video_games,What are the three largest numbers of games sold?,3 largest numbers of games sold refers to game_name where MAX(num_sales) LIMIT 3;,"SELECT T.game_platform_id, SUM(T.num_sales) * 100000 FROM region_sales AS T GROUP BY game_platform_id ORDER BY SUM(T.num_sales) * 100000 DESC LIMIT 3"
video_games,What year were the first game released?,year the first game was released refers to MIN(release_year);,SELECT T.release_year FROM game_platform AS T ORDER BY T.release_year ASC LIMIT 1
video_games,What publishers have the word 'Entertainment' in their name?,publishers that have the word 'Entertainment' in their name refers to publisher_name LIKE '%Entertainment%';,SELECT T.publisher_name FROM publisher AS T WHERE T.publisher_name LIKE '%Entertainment%'
video_games,Indicate the name of all adventure games.,name of games refers to game_name; adventure games refers to game_name WHERE genre_name = 'Adventure';,SELECT T2.game_name FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id WHERE T1.genre_name = 'Adventure'
video_games,List the name of all games published by 'Pioneer LDC'.,name of games refers to game_name; 'Pioneer LDC' refers to publisher_name = 'Pioneer LDC';,SELECT T3.game_name FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.publisher_name = 'Pioneer LDC'
video_games,Indicate the name of all the games published for the 'SCD' platform.,name of games refers to game_name;  'SCD' platform refers to platform_name = 'SCD';,SELECT T1.game_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN game_platform AS T3 ON T2.id = T3.game_publisher_id INNER JOIN platform AS T4 ON T3.platform_id = T4.id WHERE T4.platform_name = 'SCD'
video_games,List the name of all games published in Japan.,name of games refers to game_name; Japan refers to region_name = 'Japan';,SELECT T1.game_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN game_platform AS T3 ON T2.id = T3.game_publisher_id INNER JOIN region_sales AS T4 ON T3.id = T4.game_platform_id INNER JOIN region AS T5 ON T4.region_id = T5.id WHERE T5.region_name = 'Japan'
video_games,What genres are the games published by 'Agatsuma Entertainment'?,genres refers to genre_name; 'Agatsuma Entertainment' refers to publisher_name = 'Agatsuma Entertainment';,SELECT T4.genre_name FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id INNER JOIN genre AS T4 ON T3.genre_id = T4.id WHERE T1.publisher_name = 'Agatsuma Entertainment'
video_games,"How many games are not of the genres 'Role-Playing', 'Shooter' and 'Simulation'?","not of the genres 'Role-Playing', 'Shooter' and 'Simulation' refers to genre_name NOT IN ('Role-Playing', 'Shooter', 'Simulation');","SELECT COUNT(T2.id) FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id WHERE T1.genre_name NOT IN ('Role-Playing', 'Shooter', 'Simulation')"
video_games,"Indicate, by region, which platform has sold the most games.",region refers to region_name; platform refers to game_platform; sold the most games refers to MAX(SUM(num_sales));,"SELECT T.region_name FROM ( SELECT T1.platform_name, T4.region_name, SUM(T3.num_sales) FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN region_sales AS T3 ON T1.id = T3.game_platform_id INNER JOIN region AS T4 ON T3.region_id = T4.id GROUP BY T1.platform_name, T4.region_name ORDER BY SUM(T3.num_sales) DESC LIMIT 1 ) t"
video_games,Which publisher has published the most games in the 'Puzzle' genre?,which publisher refers to publisher_name; publisher that has published the most games refers to MAX(COUNT(publisher_name)); puzzle genre refers to genre_name = 'Puzzle';,"SELECT T.publisher_name FROM ( SELECT T1.publisher_name, COUNT(T3.id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id INNER JOIN genre AS T4 ON T3.genre_id = T4.id WHERE T4.genre_name = 'Puzzle' GROUP BY T1.publisher_name ORDER BY COUNT(T3.id) DESC LIMIT 1 ) t"
video_games,Which game has sold the fewest units?,which game refers to game_name; sold the fewest units refers to MIN(num_sales);,SELECT T.game_name FROM ( SELECT T1.game_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN game_platform AS T3 ON T2.id = T3.game_publisher_id INNER JOIN region_sales AS T4 ON T3.id = T4.game_platform_id ORDER BY T4.num_sales LIMIT 1 ) t
video_games,Which publisher has published the game 'Pachi-Slot Kanzen Kouryaku 3: Universal Koushiki Gaido Volume 3'?,which publisher refers to publisher_name; 'Pachi-Slot Kanzen Kouryaku 3: Universal Koushiki Gaido Volume 3' refers to game_name = 'Pachi-Slot Kanzen Kouryaku 3: Universal Koushiki Gaido Volume 3';,SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T3.game_name = 'Pachi-Slot Kanzen Kouryaku 3: Universal Koushiki Gaido Volume 3'
video_games,In which regions has the game 'Pengo' been sold?,which regions refers to region_name; 'Pengo' refers to game_name = 'Pengo';,SELECT T5.region_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN game_platform AS T3 ON T2.id = T3.game_publisher_id INNER JOIN region_sales AS T4 ON T3.id = T4.game_platform_id INNER JOIN region AS T5 ON T4.region_id = T5.id WHERE T1.game_name = 'Pengo'
video_games,List by name all the games released in the year 2010.,name of the games refers to game_name; released in the year 2010 refers to release_year = 2010;,SELECT T1.game_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN game_platform AS T3 ON T2.id = T3.game_publisher_id WHERE T3.release_year = '2010'
video_games,Calculate the average game sales for the PS2 platform.,"average = AVG(MULTIPLY(num_sales), 100000); PS2 refers to platform_name = 'PS2';",SELECT SUM(T3.num_sales * 100000) / COUNT(T1.id) FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN region_sales AS T3 ON T2.id = T3.game_platform_id WHERE T1.platform_name = 'PS2'
video_games,Calculate the percentage of games published by 'Brash Entertainment'?,"percentage = MULTIPLY(DIVIDE(SUM(publisher_name = 'Brash Entertainment'), COUNT(game_id)), 100.0); 'Brash Entertainment' refers to publisher_name = 'Brash Entertainment';",SELECT CAST(COUNT(CASE WHEN T1.publisher_name = 'Brash Entertainment' THEN T2.game_id ELSE NULL END) AS REAL) * 100 / COUNT(T2.game_id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id
video_games,What is the total number of games sold in region ID 1?,"total number of games sold = MULTIPLY(SUM(num_sales), 100000);",SELECT SUM(T.num_sales * 100000) FROM region_sales AS T WHERE T.region_id = 1
video_games,How many FIFA games are there across all platforms?,FIFA games refers to game_name LIKE '%FIFA%';,SELECT COUNT(*) FROM ( SELECT T.game_name FROM game AS T WHERE T.game_name LIKE '%FIFA%' )
video_games,Which platform is the most popular in Europe?,platform that is the most popular refers to platform_name WHERE MAX(num_sales); in Europe refers to region_name = 'Europe' ;,SELECT T.platform_name FROM ( SELECT T4.platform_name FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id INNER JOIN platform AS T4 ON T3.platform_id = T4.id WHERE T1.region_name = 'Europe' ORDER BY T2.num_sales DESC LIMIT 1 ) t
video_games,Who is the publisher of the game 2002 FIFA World Cup?,who is the publisher refers to publisher_name; 2002 FIFA World Cup refers to game_name = '2002 FIFA World Cup';,SELECT T2.publisher_name FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN game AS T3 ON T1.game_id = T3.id WHERE T3.game_name = '2002 FIFA World Cup'
video_games,What platform is the game 3Xtreme available on?,what platform refers to platform_name; 3Xtreme refers to game_name = '3Xtreme';,SELECT T2.platform_name FROM game_platform AS T1 INNER JOIN platform AS T2 ON T1.platform_id = T2.id INNER JOIN game_publisher AS T3 ON T1.game_publisher_id = T3.id INNER JOIN game AS T4 ON T3.game_id = T4.id WHERE T4.game_name = '3Xtreme'
video_games,What genre is the game 2010 FIFA World Cup South Africa?,genre refers to genre_name; 2010 FIFA World Cup South Africa refers to game_name = '2010 FIFA World Cup South Africa';,SELECT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T1.game_name = '2010 FIFA World Cup South Africa'
video_games,Which region has the highest number of games sold on all platforms?,which region refers to region_name; highest number of games sold on all platforms refers to MAX(SUM(num_sales));,"SELECT T.region_name FROM ( SELECT T2.region_name, SUM(T1.num_sales) FROM region_sales AS T1 INNER JOIN region AS T2 ON T1.region_id = T2.id INNER JOIN game_platform AS T3 ON T1.game_platform_id = T3.id INNER JOIN platform AS T4 ON T3.platform_id = T4.id GROUP BY T4.platform_name ORDER BY SUM(T1.num_sales) DESC LIMIT 1 ) t"
video_games,How many games were sold on PS3 platform in Japan?,"how many games = MULTIPLY(SUM(num_sales), 100000); PS3 refers to platform_name = 'PS3'; Japan refers to region_name = 'Japan';",SELECT SUM(T1.num_sales * 100000) FROM region_sales AS T1 INNER JOIN region AS T2 ON T1.region_id = T2.id INNER JOIN game_platform AS T3 ON T1.game_platform_id = T3.id INNER JOIN platform AS T4 ON T3.platform_id = T4.id WHERE T2.region_name = 'Japan' AND T4.platform_name = 'PS3'
video_games,What are the names of games that were released in 2007?,names of games refers to game_name; released in 2007 refers to release_year = 2007;,SELECT T3.game_name FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.release_year = 2007
video_games,How many games were published by Activision?,Activision refers to publisher_name = 'Activision';,SELECT COUNT(DISTINCT T3.id) FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN game AS T3 ON T1.game_id = T3.id WHERE T2.publisher_name = 'Activision'
video_games,Indicate the release year of the game with more than 200000 sales in Japan.,more than 200000 sales refers to SUM(num_sales) > 2; Japan refers to region_name = 'Japan';,SELECT DISTINCT T3.release_year FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id WHERE T2.num_sales * 100000 > 200000 AND T1.region_name = 'Japan'
video_games,"In 2010, how many PS3 games were released?",in 2010 refers to release_year = 2010; PS3 refers to platform_name = 'PS3';,SELECT COUNT(T3.game_id) FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T2.game_publisher_id = T3.id WHERE T1.platform_name = 'PS3' AND T2.release_year = 2010
video_games,Indicate the publisher who has published the most games of all time.,publisher refers to publisher_name; publisher who has published the most games of all time refers to MAX(COUNT(publisher_name));,"SELECT T.publisher_name FROM ( SELECT T2.publisher_name, COUNT(DISTINCT T1.game_id) FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id GROUP BY T2.publisher_name ORDER BY COUNT(DISTINCT T1.game_id) DESC LIMIT 1 ) t"
video_games,How many shooter games are there?,shooter games refers to game_name WHERE genre_name = 'shooter';,SELECT COUNT(T1.id) FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T2.genre_name = 'Shooter'
video_games,What is the percentage of games that were released on PS4 in 2014 among all platforms?,"percentage - MULTIPLY(DIVIDE(SUM(platform_name = 'PS4'), COUNT(game_id)), 100); in 2014 refers to release_year = 2014;",SELECT CAST(COUNT(CASE WHEN T2.platform_name = 'PS4' THEN T3.game_id ELSE NULL END) AS REAL) * 100 / COUNT(T3.game_id) FROM game_platform AS T1 INNER JOIN platform AS T2 ON T1.platform_id = T2.id INNER JOIN game_publisher AS T3 ON T1.game_publisher_id = T3.id WHERE T1.release_year = 2014
video_games,How much are the sales of the games in region ID 4?,how much are the sales = SUM(num_sales);,SELECT SUM(T.num_sales) * 100000 FROM region_sales AS T WHERE T.region_id = 4
video_games,List down the game platform IDs of games with a region ID of 1.,,SELECT T.game_platform_id FROM region_sales AS T WHERE T.region_id = 1
video_games,Calculate the difference between sales of games from region ID 2 and region ID 3.,"difference = SUBTRACT(SUM(num_sales WHERE region_id = 2), SUM(num_sales WHERE region_id = 3));",SELECT SUM(CASE WHEN T.region_id = 2 THEN T.num_sales ELSE 0 END) - SUM(CASE WHEN T.region_id = 3 THEN T.num_sales ELSE 0 END) FROM region_sales t
video_games,List down the platform IDs of the games released in 2007.,released in 2007 refers to release_year = 2007;,SELECT DISTINCT T.platform_id FROM game_platform AS T WHERE T.release_year = 2007
video_games,State the game publisher IDs of the games with a platform ID of 16.,,SELECT T.game_publisher_id FROM game_platform AS T WHERE T.platform_id = 16
video_games,Calculate the number of game publisher IDs for games released in 1984.,released in 1984 refers to release_year = 1984;,SELECT COUNT(T.game_publisher_id) FROM game_platform AS T WHERE T.release_year = 1984
video_games,List down the platform IDs of the games with a region ID of 3.,,SELECT T2.id FROM region_sales AS T1 INNER JOIN game_platform AS T2 ON T1.game_platform_id = T2.id WHERE T1.region_id = 3
video_games,What are the sales made by the games in Japan region?,sales = SUM(num_sales); Japan region refers to region_name = 'Japan';,SELECT SUM(CASE WHEN T2.region_name = 'Japan' THEN T1.num_sales ELSE 0 END) AS nums FROM region_sales AS T1 INNER JOIN region AS T2 ON T1.region_id = T2.id
video_games,How many game publisher IDs have published games on the X360 platform?,X360 refers to platform_name = 'X360';,SELECT COUNT(T1.game_publisher_id) FROM game_platform AS T1 INNER JOIN platform AS T2 ON T1.platform_id = T2.id WHERE T2.platform_name = 'X360'
video_games,State the name of the platforms for games released in 2000.,name of the platforms refers to platform_name; released in 2000 refers to release_year = 2000;,SELECT DISTINCT T2.platform_name FROM game_platform AS T1 INNER JOIN platform AS T2 ON T1.platform_id = T2.id WHERE T1.release_year = 2000
video_games,Find out the difference between the number of publishers who released the games on the PS3 and X360.,"difference = SUBTRACT(SUM(platform_name = 'PS3'), SUM(platform_name = 'X360')); PS3 refers to platform_name = 'PS3'; X360 refers to platform_name = 'X360';",SELECT COUNT(CASE WHEN T2.platform_name = 'PS3' THEN T1.game_publisher_id ELSE NULL END) - COUNT(CASE WHEN T2.platform_name = 'X360' THEN T1.game_publisher_id ELSE NULL END) FROM game_platform AS T1 INNER JOIN platform AS T2 ON T1.platform_id = T2.id
video_games,What are the game IDs of the games published by Bethesda Softworks?,Bethesda Softworks refers to publisher_name = 'Bethesda Softworks';,SELECT T1.game_id FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Bethesda Softworks'
video_games,Calculate the total number of IDs for the game published by Capcom and Sony Computer Entertainment.,Capcom refers to publisher_name = 'Capcom';  Sony Computer Entertainment refers to publisher_name = 'Sony Computer Entertainment';,"SELECT COUNT(DISTINCT T1.game_id) FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name IN ('Capcom', 'Sony Computer Entertainment')"
video_games,"What is the genre of the game ""Grand Theft Auto V""?","genre refers to genre_name; ""Grand Theft Auto V"" refers to game_name = 'Grand Theft Auto V';",SELECT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T1.game_name = 'Grand Theft Auto V'
video_games,List down the names of the games in the racing genre.,name of games refers to game_name; racing genre refers to genre_name = 'Racing';,SELECT T1.game_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T2.genre_name = 'Racing'
video_games,Calculate the number of games in the fighting genre.,fighting genre refers to genre_name = 'Fighting';,SELECT COUNT(T1.id) FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T2.genre_name = 'Fighting'
video_games,What are the genres of games published by the publisher with an ID of 464?,genres of games refers to genre_name; publisher with an ID of 464 refers to publisher_id = 464;,SELECT DISTINCT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id INNER JOIN game_publisher AS T3 ON T1.id = T3.game_id WHERE T3.publisher_id = 464
video_games,"Find out the platform of the game ""Final Fantasy XIII-2"".","platform of the game refers to platform_name; ""Final Fantasy XIII-2"" refers to game_name = 'Final Fantasy XIII-2';",SELECT T4.platform_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN game_platform AS T3 ON T2.id = T3.game_publisher_id INNER JOIN platform AS T4 ON T3.platform_id = T4.id WHERE T1.game_name = 'Final Fantasy XIII-2'
video_games,Calculate the total sales made by the games released in 2000.,total sales = SUM(num_sales); released in 2000 refers to release_year = 2000;,SELECT SUM(T1.num_sales) FROM region_sales AS T1 INNER JOIN game_platform AS T2 ON T1.game_platform_id = T2.id WHERE T2.release_year = 2000
video_games,Calculate the difference in sales between the games released in 1990 and 2000.,"difference = SUBTRACT(SUM(num_sales WHERE release_year = 2000), SUM(num_sales WHERE release_year = 1990));",SELECT SUM(CASE WHEN T2.release_year = 2000 THEN T1.num_sales ELSE 0 END) - SUM(CASE WHEN T2.release_year = 1990 THEN T1.num_sales ELSE 0 END) FROM region_sales AS T1 INNER JOIN game_platform AS T2 ON T1.game_platform_id = T2.id
video_games,What are the platform IDs of records released in 2006?,released in 1990 refers to release_year = 1990; 2000 refers to release_year = 2000;,SELECT DISTINCT T.platform_id FROM game_platform AS T WHERE T.release_year = 2006
video_games,Compute the average number of sales in region ID 3.,"average = AVG(MULTIPLY(num_sales, 100000));",SELECT AVG(T.num_sales * 100000) FROM region_sales AS T WHERE T.region_id = 3
video_games,In which year did the record ID 19 with game publisher ID 6657 released?,which year refers to release_year; record ID 19 refers to game platform.id; id = 19,SELECT T.release_year FROM game_platform AS T WHERE T.game_publisher_id = 6657 AND T.id = 19
video_games,Calculate the total sales in all regions with game platform ID 66.,"total sales in all regions = MULTIPLY(SUM(num_sales), 100000);",SELECT SUM(T.num_sales) * 100000 FROM region_sales AS T WHERE T.game_platform_id = 66
video_games,Give the game name of the game ID 44.,,SELECT T.game_name FROM game AS T WHERE T.id = 44
video_games,List the games available on Wii.,games available refers to game_name; Wii refers to platform_name = 'Wii';,SELECT T4.game_name FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T2.game_publisher_id = T3.id INNER JOIN game AS T4 ON T3.game_id = T4.id WHERE T1.platform_name = 'Wii'
video_games,Provide the name of games released in 2015.,names of games refers to game_name; released in 2015 refers to release_year = 2015;,SELECT T3.game_name FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.release_year = 2015
video_games,What is the total number of adventure games released in 2005?,adventure games refers to game_name WHERE genre_name = 'Adventure'; released in 2005 refers to release_year = 2005;,SELECT COUNT(DISTINCT T3.id) FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id INNER JOIN genre AS T4 ON T3.genre_id = T4.id WHERE T4.genre_name = 'Adventure' AND T1.release_year = 2005
video_games,What is the name of the company that produced the game titled Adventure Time: Explore the Dungeon Because I Don't Know!?,name of the company that produced the game refers to publisher_name; Adventure Time: Explore the Dungeon Because I Don't Know! Refers to game_name = 'Adventure Time: Explore the Dungeon Because I Don''t Know!';,SELECT T3.publisher_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T1.game_name = 'Adventure Time: Explore the Dungeon Because I Don''t Know!'
video_games,List down the game platform ID and region name where the games achieved 20000 sales and below.,20000 sales and below refers to num_sales < 0.2;,"SELECT T2.game_platform_id, T1.region_name FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id WHERE T2.num_sales * 100000 <= 20000"
video_games,Provide the name of game produced by 505 Games in 2006.,name of game refers to game_name; 505 Games refers to publisher_name = '505 Games'; in 2006 refers to release_year = 2006;,SELECT T3.game_name FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id INNER JOIN publisher AS T4 ON T2.publisher_id = T4.id WHERE T4.publisher_name = '505 Games' AND T1.release_year = 2006
video_games,What is the genre of the game ID 119?,genre of the game refers to genre_name; game ID 119 refers to game.id = 119;,SELECT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T1.id = 119
video_games,List the game IDs of the games produced by Abylight.,Abylight refers to publisher_name = 'Abylight';,SELECT T1.game_id FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Abylight'
video_games,In which region where a game had the lowest number of sales?,which region refers to region_name; lowest number of sales refers to MIN(num_sales);,SELECT DISTINCT T1.region_name FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id ORDER BY T2.num_sales LIMIT 1
video_games,List down the name of strategy games.,strategy games refers to game_name WHERE genre_name = 'Strategy';,SELECT T1.game_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T2.genre_name = 'Strategy'
video_games,In what platform does the game ID 178 available?,platform refers to platform_name;,SELECT T3.platform_name FROM game_publisher AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.game_publisher_id INNER JOIN platform AS T3 ON T2.platform_id = T3.id WHERE T1.game_id = 178
video_games,"Give the genre of the following game titled 'Airlock' , 'Airline Tycoon' , and 'Airblade', respectively.","genre refers to genre_name; 'Airlock', 'Airline Tycoon' , and 'Airblade' refers to game_name IN ('Airlock', 'Airline Tycoon', 'Airblade');","SELECT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T1.game_name IN ('Airlock', 'Airline Tycoon', 'Airblade')"
video_games,Calculate the total number of sales in North America.,"total number of sales = MULTIPLY(SUM(num_sales), 100000); North America refers to region_name = 'North America';",SELECT SUM(T2.num_sales) * 100000 AS nums FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id WHERE T1.region_name = 'North America'
video_games,List down at least five publishers of the games with number of sales less than 10000.,publishers refers to publisher_name; number of sales less than 10000 refers to num_sales < 0.1;,SELECT T.publisher_name FROM ( SELECT DISTINCT T5.publisher_name FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id INNER JOIN game_publisher AS T4 ON T3.game_publisher_id = T4.id INNER JOIN publisher AS T5 ON T4.publisher_id = T5.id WHERE T1.region_name = 'North America' AND T2.num_sales * 100000 < 10000 LIMIT 5 ) t
video_games,List the platform ID of the game titled Airborne Troops: Countdown to D-Day.,Airborne Troops: Countdown to D-Day refers to game_name = 'Airborne Troops: Countdown to D-Day';,SELECT T1.platform_id FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T3.game_name = 'Airborne Troops: Countdown to D-Day'
video_games,How many games available on PSP were released in 2004?,PSP refers to platform_name = 'PSP'; released in 2004 refers to release_year = 2004;,SELECT COUNT(T3.game_id) FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T2.game_publisher_id = T3.id WHERE T1.platform_name = 'PSP' AND T2.release_year = 2004
video_games,"What is the genre of the game titled '999: Nine Hours, Nine Persons, Nine Doors' ?","genre of the game refers to genre_name; '999: Nine Hours, Nine Persons, Nine Doors' refers to game_name = '999: Nine Hours, Nine Persons, Nine Doors';","SELECT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T1.game_name = '999: Nine Hours, Nine Persons, Nine Doors'"
video_games,When was the game ID 156 released?,when the game was released refers to release_year;,SELECT T1.release_year FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id WHERE T2.game_id = 156
video_games,What is the diffrence between the number of games produced by Culture Brain that can be played on SNES and DS?,"difference = SUBTRACT(SUM(platform_name = 'SNES'), SUM(platform_name = 'DS')); SNES refers to platform_name = SNES ; DS refers to platform_name = 'DS' ;",SELECT COUNT(CASE WHEN T1.platform_name = 'SNES' THEN T3.game_id ELSE NULL END) - COUNT(CASE WHEN T1.platform_name = 'DS' THEN T3.game_id ELSE NULL END) FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T2.game_publisher_id = T3.id INNER JOIN publisher AS T4 ON T3.publisher_id = T4.id WHERE T4.publisher_name = 'Culture Brain'
video_games,"In games that can be played on Wii, what is the percentage of games released in 2007?","Wii refers to platform_name = 'Wii'; percentage = MULTIPLY(DIVIDE(SUM(release_year = 2007), COUNT(release_year)), 100.0); released in 2007 refers to release_year = 2007;",SELECT CAST(COUNT(CASE WHEN T2.release_year = 2007 THEN T3.game_id ELSE NULL END) AS REAL) * 100 / COUNT(T3.game_id) FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T2.game_publisher_id = T3.id WHERE T1.platform_name = 'Wii'
video_games,"Among games sold in Europe, list the platform ID of games with sales lesser than 30% of the average number of sales.","Europe refers to region_name = 'Europe'; sales lesser than 30% of the average number of sales refers to SUM(num_sales) < MULTIPLY(AVG(num_sales), 0.3);",SELECT DISTINCT T3.platform_id FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id WHERE T1.region_name = 'Europe' AND T2.num_sales * 100 * 100000 < ( SELECT AVG(T2.num_sales * 100000) * 30 FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id WHERE T1.region_name = 'Europe' )
authors,How many authors are affiliated with University of California Berkeley?,affiliated refers to Affiliation; 'University of California Berkeley' is the Affiliation,SELECT COUNT(Id) FROM Author WHERE Affiliation = 'University of California Berkeley'
authors,"What is the paper ""Stitching videos streamed by mobile phones in real-time"" about?","""Stitching videos streamed by mobile phones in real-time"" is the Title of paper; what the paper is about refers to Keywords",SELECT Keyword FROM Paper WHERE Title = 'Stitching videos streamed by mobile phones in real-time'
authors,"Please list the titles of the papers published in the journal ""Concepts in Magnetic Resonance Part A"" in 2008.","journal ""Concepts in Magnetic Resonance Part A"" refers to FullName = 'Concepts in Magnetic Resonance Part A'; in 2018 refers to Year = 2018",SELECT T2.Title FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'Concepts in Magnetic Resonance Part A' AND T2.Year = 2008
authors,"How many papers were published in the journal ""Concepts in Magnetic Resonance Part A""?","journal ""Concepts in Magnetic Resonance Part A"" refers to FullName = 'Concepts in Magnetic Resonance Part A'",SELECT COUNT(T2.Id) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'Concepts in Magnetic Resonance Part A'
authors,"What is the url of the journal in which the paper ""Area Effects in Cepaea"" was published?",url refers to HomePage; 'Area Effects in Cepaea' is the Title of paper,SELECT T1.HomePage FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T2.Title = 'Area Effects in Cepaea'
authors,"Among the papers published in the journal ""Molecular Brain"", how many of them were published in the year 2011?","""Molecular Brain"" is the FullName of journal",SELECT COUNT(T2.Id) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T2.Year = 2011 AND T1.FullName = 'Molecular Brain'
authors,"How many papers were published in 2011 in the journal whose short name is ""Mol Brain""?",in 2011 refers to Year = 2011; 'Mol Brain' is the ShortName of journal,SELECT COUNT(T2.Id) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T2.Year = 2011 AND T1.ShortName = 'Mol Brain'
authors,"How many authors does the paper ""Equation Solving in Geometrical Theories"" have?","""Equation Solving in Geometrical Theories"" is the title of paper",SELECT COUNT(T1.AuthorId) FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T2.Title = 'Equation Solving in Geometrical Theories'
authors,"Please list the names of the authors of the paper ""Area Effects in Cepaea"".","""Area Effects in Cepaea"" is the title of paper",SELECT T1.Name FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T2.Title = 'Area Effects in Cepaea'
authors,"Among the authors of the paper ""Stitching videos streamed by mobile phones in real-time"", how many of them are affiliated with Cairo Microsoft Innovation Lab?","""FIBER: A Generalized Framework for Auto-tuning Software"" is the Title of paper; affiliated refers to Affiliation;  University of Tokyo is the affiliation organization",SELECT COUNT(T1.AuthorId) FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T1.Affiliation = 'University of Tokyo' AND T2.Title = 'FIBER: A Generalized Framework for Auto-tuning Software'
authors,Please list the titles of the paper whose authors include Klaus Zimmermann.,"""Klaus Zimmermann"" is the name of author",SELECT T2.Title FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T1.Name = 'Klaus Zimmermann'
authors,"Which author of the paper ""Incremental Extraction of Keyterms for Classifying Multilingual Documents in the Web"" is affiliated with National Taiwan University Department of Computer Science and Information Engineering Taiwan?","""Incremental Extraction of Keyterms for Classifying Multilingual Documents in the Web"" is the title of paper; affiliated with refers to Affiliation; ""National Taiwan University Department of Computer Science and Information Engineering Taiwan"" is the Affiliation organization",SELECT T1.Name FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T2.Title = 'Incremental Extraction of Keyterms for Classifying Multilingual Documents in the Web' AND T1.Affiliation = 'National Taiwan University Department of Computer Science and Information Engineering Taiwan'
authors,What is the title of the paper published in 1995 and whose author included Thomas Wiegand?,published in 1995 refers to Year = 1995; 'Thomas Wiegand' is the name of author,SELECT T2.Title FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T1.Name = 'Thomas Wiegand' AND T2.Year = 1995
authors,How many papers whose authors include Thomas Wiegand were published in 1995?,published in 1995 refers to Year = 1995; 'Thomas Wiegand' is the name of author,SELECT COUNT(T2.Title) FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T1.Name = 'Thomas Wiegand' AND T2.Year = 1995
authors,"What is the average number of papers published in the journal ""Molecular Brain"" every year from 2008 to 2011?","""Molecular Brain"" is the FullName of journal; year from 2008 to 2011 refers to Year BETWEEN 2008 AND 2011; average = Divide (Count(Id),4)",SELECT CAST(COUNT(T2.Id) AS REAL) / COUNT(DISTINCT T2.Year) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'Molecular Brain' AND T2.Year BETWEEN 2008 AND 2011
authors,"How many more papers in total were published in the journal ""Cases Journal"" than in the journal ""Molecular Brain"" in percentage?","""Cases Journal"" and ""Molecular Brain"" are FullName of journal; more paper in percentage = Subtract(Count(Id(FullName = 'Cases Journal')), Count(Id(FullName = 'Molecular Brain')))/ Count(Id(FullNmae = 'Molecular Brain')) * 100",SELECT SUM(CASE WHEN T1.FullName = 'Cases Journal' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.FullName = 'Molecular Brain' THEN 1 ELSE 0 END) AS DIFF FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId
authors,"How many journals have a word ""computing"" in its full name?",word computing refers to FullName LIKE '%computing%',SELECT COUNT(Id) FROM Journal WHERE FullName LIKE '%computing%'
authors,Enumerate the paper and author ID of authors with affiliation with Cairo Microsoft Innovation Lab.,"""Cairo Microsoft Innovation Lab"" is the Affiliation organization","SELECT PaperId, AuthorId FROM PaperAuthor WHERE Affiliation LIKE 'Cairo Microsoft Innovation Lab%'"
authors,"What is the short name and full name of conference uses the homepage ""http://www.informatik.uni-trier.de/~ley/db/conf/ices/index.html""?",,"SELECT ShortName, FullName FROM Conference WHERE HomePage = 'http://www.informatik.uni-trier.de/~ley/db/conf/ices/index.html'"
authors,"List down the author ID of authors with a name of ""Peter"".","""Peter"" is the name of author",SELECT AuthorId FROM PaperAuthor WHERE Name = 'Peter'
authors,"List the title of papers with a conference ID from 160 to 170, include their conference short name.",conference ID from 160 to 170 refers to ConferenceId BETWEEN 160 AND 170,"SELECT DISTINCT T1.Title, T2.ShortName FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.ConferenceId BETWEEN 160 AND 170"
authors,What is the title and journal homepage of the latest published paper?,latest published paper refers to Max(Year),"SELECT T1.Title, T2.HomePage FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id ORDER BY T1.Year DESC LIMIT 1"
authors,"In year 1999, list the titles and conference's short name of paper authored by someone named ""Philip"".","in year 1999 refers to Year = 1999;  someone named ""Philip"" refers to Name LIKE 'Philip%'","SELECT T1.Title, T3.ShortName FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Conference AS T3 ON T1.ConferenceId = T3.Id WHERE T1.Year = 1999 AND T2.Name LIKE 'Philip%'"
authors,What is the total number and conference's homepage of papers held in a conference with an ID of 187 during 1990 to 2000?,Id of 187 refers to ConferenceId = 187; during 1990 to 2000 refers to Year BETWEEN 1990 and 2000; total number of conference refers to Count(ConferenceId = 187),"SELECT COUNT(T2.ConferenceId), T1.HomePage FROM Conference AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.ConferenceId WHERE T2.Year BETWEEN 1990 AND 2000 AND T2.ConferenceId = 187"
authors,"What is the title of the paper published in 2003 by an author with affiliation with Department of Network Science, Graduate School of Information Systems, The University of Electro-Communications?","published in 2003 refers to Year = 2003; 'Department of Network Science, Graduate School of Information Systems, The University of Electro-Communications' is the Affiliation organization","SELECT DISTINCT T2.Title FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T1.Affiliation = 'Department of Network Science, Graduate School of Information Systems, The University of Electro-Communications' AND T2.Year = 2003"
authors,"List the authors and journal short name of the papers with ""chemiluminescence"" in its title and has a journal ID from 245 to 250.","with ""chemiluminescence"" in its title refers to Title LIKE 'chemiluminescence%'; journal ID from 245 to 250 refers to JournalId BETWEEN 245 AND 250","SELECT T2.Name, T3.ShortName FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Journal AS T3 ON T1.JournalId = T3.Id WHERE T1.JournalId BETWEEN 245 AND 250 AND T1.Title LIKE '%chemiluminescence%'"
authors,"Among the papers with conference ID of 0, list down the authors of papers with a journal ID less than 100.",Conference ID of 0 refers to ConferenceId = 0; journal ID of less than 100 refers to JournalId < 100,SELECT DISTINCT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.ConferenceId = 0 AND T1.JournalId < 100
authors,What is the title and author ID of paper with conference ID less than 100 in year 2006?,conference ID less than 100 refers to ConferenceId < 100; in year 2006 refers to Year = 2006,"SELECT DISTINCT T1.Title, T2.AuthorId FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Year = 2006 AND T1.ConferenceId < 100"
authors,"What are the paper IDs of papers presented in conferences has a homepage starts with ""http://www.informatik.uni-trier.de/~ley/db/conf/""?","homepage starts with ""http://www.informatik.uni-trier.de/~ley/db/conf/"" refers to HomePage LIKE 'http://www.informatik.uni-trier.de/~ley/db/conf/%'",SELECT T1.Id FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T2.HomePage LIKE 'http://www.informatik.uni-trier.de/~ley/db/conf/%'
authors,"What are the journal homepages and author ID of the papers published in 2000 to 2005 with a word ""social"" in its title?","in 2000 to 2005 refers to Year BETWEEN 2000 AND 2005; a word ""social"" in its title refers to Title = '%SOCIAL%'","SELECT T3.HomePage, T2.AuthorId FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Journal AS T3 ON T1.JournalId = T3.Id WHERE T1.Year BETWEEN 2000 AND 2005 AND T1.Title LIKE '%SOCIAL%'"
authors,What is the author ID and their affiliations of authors of the papers with a journal ID of 0 and published in 2009.,published in 2009 refers to Year = 2009; journal ID of 0 refers to JournalId = 0,"SELECT DISTINCT T2.AuthorId, T2.Affiliation FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.JournalId = 0 AND T1.Year = 2009 AND T2.Affiliation IS NOT NULL"
authors,"In papers with journal IDs from 200 to 300 and with its short name starts with A, what is the percentage of papers with conference ID of 0?","journal ID of 200 to 300 refers to JournalId BETWEEN 200 AND 300; short name starts with A refers to ShortName LIKE 'A%'; Percentage = Divide (Count(ConferenceId = 0), Count(ConferenceId)) * 100",SELECT CAST(SUM(CASE WHEN T1.ConferenceId = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ConferenceId) FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.JournalId BETWEEN 200 AND 300 AND T2.ShortName LIKE 'A%'
authors,"Within the year of 2001 to 2010, find the paper published rate of 2001.","year of 2001 to 2010 refers to Year BETWEEN 2001 AND 2010; Percentage = Divide(Count (PaperId(Year = 2001)), Count (PaperID(Year BETWEEN 2001 AND 2010))) * 100",SELECT CAST(SUM(CASE WHEN Year = 2001 THEN 1 ELSE 0 END) AS REAL) / COUNT(Id) FROM Paper WHERE Year >= 2001 AND Year < 2011
authors,"Write down the conference full name of ""ICWE"" and it's homepage address.","""ICWE"" is the ShortName of conference","SELECT FullName, Homepage FROM Conference WHERE ShortName = 'ICWE'"
authors,"Between ""Standford University"" and ""Massachusetts Institute of Technolgy"", which organization had affiliated with more author.?","""Standford University"" and ""Massachusetts Institute of Technolgy"" are affiliation organization; affiliated with more author refers to Max(Count(Id))","SELECT Affiliation FROM Author WHERE Affiliation IN ('Stanford University', 'Massachusetts Institute of Technology') GROUP BY Affiliation ORDER BY COUNT(Id) DESC LIMIT 1"
authors,What is the ratio of author with affiliation and without affiliation?,with affiliation refers to Affiliation is not Null; without affiliation refers to Affiliation IS NULL; Ration = Count(Id(Affiliation is NOT NULL)) : Count (Id (Affiliation IS NULL)),SELECT CAST(SUM(CASE WHEN Affiliation IS NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(*) FROM Author
authors,Write down the author's name and IDs who are affiliated with Univeristiy of Oulu.,"""University of Oulu"" is the Affiliation Organization","SELECT Name, id FROM Author WHERE Affiliation = 'University of Oulu'"
authors,"Write down the title and affiliation of the preprinted paper written by ""Roger J.Marshal"".","""Roger J. Marshall"" is the name of author; preprinted paper refers to ConferenceId = 0 AND JournalId = 0","SELECT T1.Title, T2.Affiliation FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Name = 'Roger J. Marshall' AND T1.ConferenceID = 0 AND T1.JournalID = 0"
authors,"Find the paper ID, title, published year and journal's full name of the paper which included the most number in author.",most number in author refers to Max (Count(PaperId)),"SELECT T1.Id, T1.Title, T1.Year, T3.FullName FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Journal AS T3 ON T1.JournalId = T3.Id GROUP BY T2.AuthorId ORDER BY COUNT(T2.AuthorId) DESC LIMIT 1"
authors,"Describe the paper title, published year, conference's short name and included author names in the paper ID of 15.",paper ID of 15 refers to PaperId = 15,"SELECT DISTINCT T1.Title, T1.Year, T3.ShortName, T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Conference AS T3 ON T1.ConferenceId = T3.Id WHERE T1.Id = 15"
authors,"Among author ID of under 1000, who published the paper in affiliation with Zurich, ETH, provide paper ID, year and keyword if any.","author ID of under 100 refers to AuthorId < 100; 'Zurich, ETH' is the Affiliation","SELECT T2.Id, T2.Year, T2.Keyword FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T1.AuthorId < 1000 AND T1.Affiliation = 'Zurich, ETH'"
authors,"Among the author included in the paper of ""Inspection resistant memory: Architectural support for security from physical examination"", write down the author name and ID who were affiliated with Microsoft Research, USA.","""Inspection resistant memory: Architectural support for security from physical examination"" is the title of paper;  'Microsoft Research, USA' is the Affiliation","SELECT T2.Name, T1.Id FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'Inspection resistant memory: Architectural support for security FROM physical examination' AND T2.Affiliation = 'Microsoft Research, USA'"
authors,"Write down the author name, affiliation, jounal short name and full name of the paper ""Decreased Saliva Secretion and Down-Regulation of AQP5 in Submandibular Gland in Irradiated Rats"".","""Decreased Saliva Secretion and Down-Regulation of AQP5 in Submandibular Gland in Irradiated Rats"" is the Title of paper","SELECT T2.Name, T2.Affiliation, T3.ShortName, T3.FullName FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Journal AS T3 ON T1.JournalId = T3.Id WHERE T1.Title = 'Decreased Saliva Secretion and Down-Regulation of AQP5 in Submandibular Gland in Irradiated Rats'"
authors,"List the paper title and journal ID which were published under the conference name of ""International Symposium of Robotics Research"".","""International Symposium of Robotics Research"" is the FullName of conference;","SELECT DISTINCT T2.Title, T2.JournalId FROM Conference AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.ConferenceId WHERE T1.FullName = 'International Symposium of Robotics Research' AND T2.Year = 2003"
authors,"Name the title, year and keyword of the paper which were written by the author ID of 661002 with the affiliation of ""Scientific Computing and Imaging Institute, University of Utah, UT 84112, USA"" organization.","""661002"" is the AuthorId;  ""Scientific Computing and Imaging Institute, University of Utah, UT 84112, USA"" is the Affiliation organization","SELECT T2.Title, T2.Year, T2.Keyword FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T1.AuthorId = 661002 AND T1.Affiliation = 'Scientific Computing and Imaging Institute, University of Utah, UT 84112, USA'"
authors,Calculate the differences of the paper number with the journal name of IWC in 2000 and 2010.,"""IWC"" is the ShortName of journal;  '2000' and '2010' are Year;  Difference = Subtract(Count(Paper.Id(Year = 2000)), Count(Paper.Id(Year = 2010)))",SELECT SUM(CASE WHEN T2.Year = 2000 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.Year = 2010 THEN 1 ELSE 0 END) AS DIFF FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.ShortName = 'IWC'
authors,Provide any four valid Journal ID along with short name and full name of the papers which were made in 2013.,valid journal ID refers to JournalId! = 0 and JournalId! = -1; made in 2013 refers to Year = 2013,"SELECT DISTINCT T2.JournalId, T1.ShortName, T1.FullName FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T2.Year = 2013 AND T2.JournalId != 0 AND T2.JournalId != -1 LIMIT 4"
authors,"Under the conference name of MICRO, calculate how many more paper is needed to published in 1971 to 1980 in average by yearly to get equivalent to the number of paper from 1991 to 2000. Write down the title and author name of the paper that were actually published during 1971 to 1980 with the conference name with MICRO.","""MICRO"" is the ShortName of conference; in 1971 to 1980 refers to Year BETWEEN '1971' AND '1980'; in 1991 to 2000 refers to Year BETWEEN '1991' AND '2000': Average needed paper = Subtract (Count(PaperId(Year BETWEEN '1991' AND '2000')), Count(PaperId(Year BETWEEN '1971' AND '1980')))/10","SELECT T2.title, T3.name, T1.FullName FROM Conference AS T1 INNER JOIN Paper AS T2 ON T1.id = T2.ConferenceId INNER JOIN PaperAuthor AS T3 ON T1.id = T3.PaperId WHERE T1.ShortName = 'MICRO' AND T2.Year BETWEEN '1971' AND '1980'"
authors,How many of the papers are preprinted or not published?,preprinted or not published refers to Year = 0,SELECT COUNT(Id) FROM Paper WHERE Year = 0
authors,"State the full name of conference for paper ""The Dissimilarity Representation as a Tool for Three-Way Data Classification: A 2D Measure"".","""The Dissimilarity Representation as a Tool for Three-Way Data Classification: A 2D Measure"" is the Title of paper",SELECT T2.FullName FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Title = 'The Dissimilarity Representation as a Tool for Three-Way Data Classification: A 2D Measure'
authors,"What is the homepage address for paper ""Energy-efficiency bounds for noise-tolerant dynamic circuits""?","""Energy-efficiency bounds for noise-tolerant dynamic circuits"" is the Title of paper",SELECT T2.HomePage FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Title = 'Energy-efficiency bounds for noise-tolerant dynamic circuits'
authors,Write down the name of authors for paper with id from 101 to 105.,paper with ID from 101 to 105 refers to Id BETWEEN 100 AND 106,SELECT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Id > 100 AND T1.Id < 106
authors,"Among the papers published in 2009, pick 10 and list down the conference's short name of these papers.",published in 2009 refers to Year = 2009,"SELECT T2.PaperId, T4.ShortName FROM Author AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.AuthorId INNER JOIN Paper AS T3 ON T2.PaperId = T3.Id INNER JOIN Conference AS T4 ON T3.ConferenceId = T4.Id WHERE T3.Year = 2009 LIMIT 10"
authors,"Write down homepage URL of journal for paper ""364: Induction of Mixed Chimerism and Transplantation Tolerance in a Non-Human Primate Lung Allograft Model: Early Results"".","paper ""364: Induction of Mixed Chimerism and Transplantation Tolerance in a Non-Human Primate Lung Allograft Model: Early Results"" refers to Title = '364: Induction of Mixed Chimerism and Transplantation Tolerance in a Non-Human Primate Lung Allograft Model: Early Results'",SELECT T2.HomePage FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.Title = '364: Induction of Mixed Chimerism and Transplantation Tolerance in a Non-Human Primate Lung Allograft Model: Early Results'
authors,"List down all paper name that were published in conference ""International Conference on Internet Computing"".","conference ""International Conference on Internet Computing"" refers to FullName = 'International Conference on Internet Computing'; paper name refers to Title",SELECT T1.Title FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T2.FullName = 'International Conference on Internet Computing' AND T1.Title <> ''
authors,"Among papers that were published in 2005, provide the author name of paper with key words of ""LOAD; IDE; SNP; haplotype; asso- ciation studies"".","in 2005 refers to Year = '2005'; key words of ""LOAD; IDE; SNP; haplotype; asso- ciation studies"" refers to Keyword = 'LOAD; IDE; SNP; haplotype; asso- ciation studies'",SELECT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Year = 2005 AND T1.Keyword = 'KEY WORDS: LOAD IDE SNP haplotype asso- ciation studies'
authors,"How many authors have written paper ""145 GROWTH HORMONE RECEPTORS AND THE ONSET OF HYPERINSULINEMIA IN THE OBESE ZUCKER RAT: ""?","paper ""145 GROWTH HORMONE RECEPTORS AND THE ONSET OF HYPERINSULINEMIA IN THE OBESE ZUCKER RAT: "" refers to Title like'%145 GROWTH HORMONE RECEPTORS AND THE ONSET OF HYPERINSULINEMIA IN THE OBESE ZUCKER RAT:%'",SELECT COUNT(DISTINCT T2.Name) FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = '145 GROWTH HORMONE RECEPTORS AND THE ONSET OF HYPERINSULINEMIA IN THE OBESE ZUCKER RAT: '
authors,Who are the co-authors for Jei Keon Chae and what is the title of paper written by them?,'Jei Keon Chee' is the name of author;,"SELECT T2.AuthorId, T1.Title FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Name = 'Jei Keon Chae'"
authors,What are the conference name and journal name of paper written by Shueh-Lin Yau? List down the name of co-authors and provide the title of that paper.,Shueh-Lin Yau is the name of author;,"SELECT T1.ConferenceId, T1.JournalId, T2.Name, T1.Title FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Conference AS T3 ON T1.ConferenceId = T3.Id INNER JOIN Journal AS T4 ON T1.JournalId = T4.Id WHERE T2.Name = 'Shueh-Lin Yau'"
authors,How many papers were preprinted between the years 1990 and 2000?,years 1990 and 2000 refers to Year BETWEEN '1990' AND '2000'; papers refers to COUNT(id),SELECT COUNT(id) FROM Paper WHERE Year BETWEEN '1990' AND '2000' AND ConferenceId = 0 AND JournalId = 0
authors,List the names of all authors affiliated with Birkbeck University of London.,affiliated with Birkbeck University of London refers to Affiliation = 'Birkbeck University of London',SELECT Name FROM Author WHERE Affiliation = 'Birkbeck University of London'
authors,List the short name of all conferences whose full name begins with International Symposium.,full name refers to FullName LIKE 'International Symposium%',SELECT ShortName FROM Conference WHERE FullName LIKE 'International Symposium%'
authors,How many journals do not have a website?,do not have a website refers to HomePage = '',SELECT COUNT(HomePage) FROM Journal WHERE HomePage = ''
authors,List author name for articles that are preprinted but not published.,articles that are preprinted but not published refers to Year = 0,SELECT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Year = 0
authors,List author affiliation for papers whose topic is Quantum Physics.,topic is Quantum Physics refers to Keyword = 'Quantum Physics',SELECT T2.Affiliation FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Keyword = 'Quantum Physics'
authors,Identify by conference full name all papers in which a journal was not published but a conference.,journal was not published but a conference refers to ConferenceId ! = 0 And JournalId = 0 Year ! = 0,SELECT T2.FullName FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.ConferenceId != 0 AND T1.JournalId = 0 AND T1.Year != 0
authors,Identify by papers title those in which conferences have been published that do not have a website..,do not have a website refers to HomePage IS NULL OR HomePage = '',SELECT T2.Title FROM Conference AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.ConferenceId WHERE T1.HomePage = '' AND T2.Title <> ''
authors,Identify by publication year in the paper database all journals that don't have short name.,don't have short name refers to ShortName is NULL OR ShortName = '',"SELECT DISTINCT T2.Year, FullName FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.ShortName = ''"
authors,What is the affiliation of the author writing in the journal 'A combined search for the standard model Higgs boson at s = 1.96 Â TeV'?,journal 'A combined search for the standard model Higgs boson at s = 1.96 Â TeV' refers to Title = 'A combined search for the standard model Higgs boson at s = 1.96 Â TeV',SELECT T1.Affiliation FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T2.Title = 'A combined search for the standard model Higgs boson at s = 1.96 Â TeV'
authors,Indicate the name of all the journals published in the paper database in the year 2001.,name of all the journals refers to FullName,SELECT T2.FullName FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.Year = 2001 AND T1.ConferenceId > 0 AND T1.JournalId > 0
authors,What is the name of the co-authors of the paper titled 'Particle identification using the time-over-threshold method in the ATLAS Transition Radiation Tracker'?,paper titled 'Particle identification using the time-over-threshold method in the ATLAS Transition Radiation Tracker' refers to Title = 'Particle identification using the time-over-threshold method in the ATLAS Transition Radiation Tracker',SELECT T1.Name FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T2.Title = 'Particle identification using the time-over-threshold method in the ATLAS Transition Radiation Tracker'
authors,In how many papers and in what years was the International Conference on Database Theory published?,the International Conference on Database Theory refers to FullName = 'International Conference on Database Theory'; published refers to year ! = 0,"SELECT COUNT(T1.Id) AS PAPER, COUNT(DISTINCT T1.Year) AS YEARS FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE year != 0 AND T2.FullName = 'International Conference on Database Theory'"
authors,What is the full name of the journals that are published in the database papers whose topic is Sustainability?,topic is Sustainability refers to Keyword = 'Sustainability',SELECT T2.FullName FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.Keyword = 'Sustainability'
authors,What is the name of the authors of papers in which conferences have been published whose full name includes the word Workshop?,full name includes the word Workshop refers to FullName LIKE '%Workshop%',SELECT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Conference AS T3 ON T1.ConferenceId = T3.Id WHERE T3.FullName LIKE '%Workshop%'
authors,What percentage of authors of the paper about Charged particle multiplicity are affiliated with INFN?,"about Charged particle multiplicity refers to Title which contains 'Charged particle multiplicity'; affiliated with INFN refers to Affiliation LIKE '%INFN%' ; percentage refers to DIVIDE(COUNT(Affiliation LIKE '%INFN%' ), COUNT(AuthorId)) * 100%",SELECT CAST((SUM(CASE WHEN T1.Affiliation LIKE '%INFN%' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T2.Id) FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T2.Title LIKE '%Charged particle multiplicity%'
authors,What percentage of journals whose short name begins with ANN were published in the paper database in 1989?,"short name begins with ANN refers to ShortName like 'ANN%' ; percentage refers to DIVIDE(COUNT(ShortName like 'ANN%' ), COUNT(id)) * 100%;  in 1989 refers to Year = 1989",SELECT CAST((SUM(CASE WHEN T1.ShortName LIKE 'ANN%' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.ShortName) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T2.Year = 1989
authors,How many authors were associated with the Microsoft Research when paper number 1 was written?,associated with the Microsoft Research refers to Affiliation contains 'Microsoft Research'; paper number 1 refers to PaperId = 1,SELECT COUNT(PaperId) FROM PaperAuthor WHERE Affiliation LIKE '%Microsoft Research%'
authors,"What was the topic of the article ""A Formal Approach to Service Component Architecture"" and when was it published?","article ""A Formal Approach to Service Component Architecture"" refers to Title = 'A Formal Approach to Service Component Architecture'; topic of the article refers to Keyword","SELECT Keyword, Year FROM Paper WHERE Title = 'A Formal Approach to Service Component Architecture'"
authors,What percentage of papers were preprinted after the year 2000?,"after the year 2000 refers to Year > 2000; preprinted refers to ConferenceId = 0 AND JournalId = 0; percentage refers to DIVIDE(COUNT(ConferenceId = 0 AND JournalId = 0 AND Year > 2000), COUNT(Id))",SELECT CAST(SUM(CASE WHEN Year > 2000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Id) FROM Paper
authors,"Please list the names of the authors of the paper ""Hypermethylation of the <I>TPEF/HPP1</I> Gene in Primary and Metastatic Colorectal Cancers"".","paper ""Hypermethylation of the <I>TPEF/HPP1</I> Gene in Primary and Metastatic Colorectal Cancers"" refers to Title = 'Hypermethylation of the <I>TPEF/HPP1</I> Gene in Primary and Metastatic Colorectal Cancers'",SELECT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'Hypermethylation of the <I>TPEF/HPP1</I> Gene in Primary and Metastatic Colorectal Cancers'
authors,"What is the full name of the journal that published the paper ""Multiple paternity in a natural population of a salamander with long-term sperm storage""?","paper ""Multiple paternity in a natural population of a salamander with long-term sperm storage"" refers to Title = 'Multiple paternity in a natural population of a salamander with long-term sperm storage'",SELECT T2.FullName FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.Title = 'Multiple paternity in a natural population of a salamander with long-term sperm storage'
authors,"How many papers were in the journal ""Iet Software/iee Proceedings - Software""?","journal ""Iet Software/iee Proceedings - Software"" refers to FullName = 'Iet Software/iee Proceedings - Software'; papers refers to COUNT(JournalId)",SELECT COUNT(T1.JournalId) FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T2.FullName = 'Iet Software/iee Proceedings - Software'
authors,What is the full name of the conference where paper number 5 was published?,paper number 5 refers to Id = 5,SELECT T2.FullName FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Id = 5
authors,Please list the titles of any two papers that Jundu has written.,papers that Jundu has written refers to Name LIKE '%Jun du%',SELECT T1.Title FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Name LIKE 'Jun du%' LIMIT 2
authors,What is the title of the paper that was written by Cheng Huang and affiliated with Microsoft?,paper that was written by Cheng Huang refers to Name = 'Cheng Huang'; affiliated with Microsoft refers to Affiliation LIKE 'Microsoft %',SELECT T1.Title FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Name = 'Cheng Huang' AND T2.Affiliation = 'Microsoft'
authors,Please provide the full name of the conference where one of the papers of Jean-luc Hainaut were published.,papers of Jean-luc Hainaut refers to Name = 'Jean-luc Hainaut',SELECT DISTINCT T3.FullName FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Conference AS T3 ON T1.ConferenceId = T3.Id WHERE T2.Name = 'Jean-luc Hainaut' LIMIT 1
authors,What are the three journals that the papers written by Andrew Cain were published in? Please provide your answer with the full name of each journal.,written by Andrew Cain refers to Name = 'Andrew Cain',SELECT T3.FullName FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Journal AS T3 ON T1.JournalId = T3.Id WHERE T2.Name = 'Andrew Cain'
authors,"Please list all of the associations that the authors of the paper ""FIBER: A Generalized Framework for Auto-tuning Software"" are affiliated with.","paper ""FIBER: A Generalized Framework for Auto-tuning Software"" refers to Title = 'FIBER: A Generalized Framework for Auto-tuning Software'; are affiliated with refers to Affiliation",SELECT DISTINCT T2.Affiliation FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'FIBER: A Generalized Framework for Auto-tuning Software'
authors,Please provide the titles of any two papers that are either preprinted or unpublished along with the full name of the journal to which those papers belong.,papers that are either preprinted or unpublished along refers to Year = 0,"SELECT T1.Title, T2.FullName FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.Year < 1 LIMIT 2"
authors,"What is the journal's short and full names that feature papers on the ""Materials"" topic?","papers on the ""Materials"" topic refers to Keyword = 'Materials'","SELECT T2.ShortName, T2.FullName FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.Keyword LIKE '%Materials%'"
authors,List the names of authors affiliated with the University of Oxford in alphabetical order.,affiliated with the University of Oxford refers to Affiliation = 'University of Oxford',SELECT Name FROM Author WHERE Affiliation = 'University of Oxford' ORDER BY Name ASC
authors,List the short name and home page URL of all the international conferences on artificial intelligence.,all the international conferences on artificial intelligence refers to FullName LIKE 'International Conference on Artificial Intelligence%',"SELECT ShortName, HomePage FROM Conference WHERE FullName LIKE 'International Conference on Artificial Intelligence%'"
authors,Find the names of papers which are published in the year 1996.,,SELECT Title FROM Paper WHERE year = 1996
authors,List the title and author's name of papers published in the 2007 Neoplasia journal.,published in the 2007 refers to Year = 2007; Neoplasia journal refers to FullName = 'Neoplasia',"SELECT T1.Title, T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Journal AS T3 ON T1.JournalId = T3.Id WHERE T3.FullName = 'Neoplasia' AND T1.Year = 2007"
authors,"Among the authors affiliated with Soongsil University, list the authors' names and papers published during the year 2000.",authors affiliated with Soongsil University refers to Affiliation = 'Soongsil University',"SELECT T2.Title, T1.Name FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T1.Affiliation = 'Soongsil University' AND T2.Year = 2000"
authors,Give the title and author's name of the papers published between 2000 and 2005 that include the topic optical properties.,published between 2000 and 2005 refers to Year BETWEEN 2000 AND 2005; include the topic optical properties refers to Keyword LIKE '%optical properties%',"SELECT T1.Title, T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Keyword LIKE '%optical properties%' AND T1.Year BETWEEN 2000 AND 2005 AND T1.Title <> ''"
authors,What is the average number of papers published in the World Computer Congress each year?,"published in the World Computer Congress refers to FullName = 'World Computer Congress'; average refers to DIVIDE(COUNT(FullName = 'World Computer Congress'), COUNT(Id))","SELECT CAST(SUM(CASE WHEN T2.FullName = 'International Congress Series' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.Id) AS Div1, T1.Year FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id GROUP BY T1.YEAR HAVING Div1 != 0"
authors,Give the Title and author's name of the books that were preprint in 1997.,in 1997 refers to Year = 1997; books that were preprint refers to ConferenceId = 0 AND JournalId = 0,"SELECT DISTINCT T2.Name, T1.Title FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.ConferenceId = 0 AND T1.JournalId = 0 AND T1.Year = 1997 AND T1.Title <> ''"
authors,Write the titles of papers published by Adam Jones and the journal name in which it was published from 2005 to 2010.,published from 2005 to 2010 refers to Year BETWEEN 2005 AND 2010; published by Adam Jones refers to Name = 'Adam Jones',SELECT T1.Title FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Journal AS T3 ON T1.JournalId = T3.Id WHERE T2.Name = 'Adam Jones' AND T1.Year BETWEEN 2005 AND 2010
authors,"How many authors is affiliated to the organization ""Otterbein University""?",Otterbein University is an Affiliation,SELECT COUNT(Name) FROM Author WHERE Affiliation = 'Otterbein University'
authors,"How many authors drafted the paper ""Subcellular localization of nuclease in barley aleurone""?",'Subcellular localization of nuclease in barley aleurone' is the title of paper,SELECT COUNT(DISTINCT T2.Name) FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'Subcellular localization of nuclease in barley aleurone'
authors,"What is the full name of the conference in which the paper titled ""Extended Fuzzy Regression Models"" was published?",'Extended Fuzzy Regression Models' is the title of paper; full name of the conference refers to FullName,SELECT T2.FullName FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Title = 'Extended Fuzzy Regression Models'
authors,"How many papers are published under the conference ""Mathematics of Program Construction
""?",'Mathematics of Program Construction' is the FullName of conference,SELECT COUNT(T1.Id) FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T2.FullName = 'Mathematics of Program Construction'
authors,"Who is the author of the paper titled ""Open Sourcing Social Solutions (Building Communities of Change)""?",'Open Sourcing Social Solutions (Building Communities of Change)' is a title of the paper; author refers to PaperAuthor.Name,SELECT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'Open Sourcing Social Solutions (Building Communities of Change)'
authors,List all the title of the paper that Jianli Hua published.,Jianli Hua is the author of a paper,SELECT T1.Title FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Name = 'Jianli Hua'
authors,"Who authored the paper titled ""Testing timed automata
""?",'Testing timed automata' is a title of a paper; Who authored refers to PaperAuthor.Name,SELECT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'Testing timed automata'
authors,"How many papers are published in year 2000 under the conference ""SSPR""?",SSPR is a ShortName; papers refers to Paper.Id,SELECT COUNT(T1.Id) FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Year = 2000 AND T2.ShortName = 'SSPR'
authors,"List all the paper that the journal ""Theoretical Computer Science
"" published in 2003.",'Theoretical Computer Science' is the FullName; paper refers to Title; published in 2003 refers to Year = 2003,SELECT DISTINCT T1.Title FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T2.FullName = 'Theoretical Computer Science' AND T1.Year = 2003 AND T1.Title <> ''
authors,"What is the conference homepage URL of the paper titled ""Quality evaluation of long duration audiovisual content""?",homepage URL refers to HomePage; 'Quality evaluation of long duration audiovisual content' is the Title,SELECT T2.HomePage FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Title = 'Quality evaluation of long duration audiovisual content'
authors,"Among the author who drafted the paper ""A Randomized Comparison of Sirolimus- Versus Paclitaxel-Eluting Stent Implantation in Patients With Diabetes Mellitus"", which of them is/are affiliated with the Asan Medical Center, University of Ulsan College of Medicine, Seoul, Korea
?","author refers to PaperAuthor.Name; 'A Randomized Comparison of Sirolimus- Versus Paclitaxel-Eluting Stent Implantation in Patients With Diabetes Mellitus' is the title; 'Asan Medical Center, University of Ulsan College of Medicine, Seoul, Korea' is an Affiliation","SELECT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Affiliation = 'Asan Medical Center, University of Ulsan College of Medicine, Seoul, Korea' AND T1.Title = 'A Randomized Comparison of Sirolimus- Versus Paclitaxel-Eluting Stent Implantation in Patients With Diabetes Mellitus'"
authors,"How many papers are published under the journal ""Software - Practice and Experience""?",papers refers to Paper.Id; 'Software - Practice and Experience' is the FullName of a journal;,SELECT COUNT(T1.Id) FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T2.FullName = 'Software - Practice and Experience'
authors,"List all the paper that were under the conference homepage URL ""http://www.irma-international.org/"".",paper refers to Paper.Title; http://www.irma-international.org/ is the HomePage,SELECT T1.Title FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T2.HomePage = 'http://www.irma-international.org/'
authors,"Calculate the total average number of papers published from 2002 to 2010 under the conference ""Information and Knowledge Engineering"".","average number of papers refers to DIVIDE(count(id), 9); published from 2002 to 2010 refers to Year BETWEEN 2002 AND 2010; 'Information and Knowledge Engineering' is the FullName of conference;",SELECT CAST(COUNT(T1.Id) AS REAL) / COUNT(DISTINCT T1.Year) FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T2.FullName = 'Information and Knowledge Engineering' AND T1.Year >= 2002 AND T1.Year <= 2010
authors,"From year 1991 to 2000, calculate the difference betweeen the total number of papers published under the conference ""International Conference on Supercomputing "" and ""Informatik & Schule""?","From year 1991 to 2000 refers to Year BETWEEN 1991 AND 2000; papers refers to Paper.Id; 'International Conference on Supercomputing' AND 'Informatik & Schule' are the FullName of conference; calculate the difference between the total number of papers of these two conferences refers to SUBTRACT(SUM(Paper.Id where FullName = 'International Conference on Supercomputing'), SUM(Paper.Id where FullName = 'Informatik & Schule'))",SELECT SUM(CASE WHEN T2.FullName = 'Informatik & Schule' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.FullName = 'International Conference on Supercomputing' THEN 1 ELSE 0 END) AS DIFF FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Year > 1990 AND T1.Year < 2001
authors,"What is the short name for ""Software - Concepts and Tools / Structured Programming""?",'Software - Concepts and Tools / Structured Programming' is the FullName;,SELECT ShortName FROM Journal WHERE FullName = 'Software - Concepts and Tools / Structured Programming'
authors,"Which journal was the paper ""Education, democracy and growth"" published on? Give the full name of the journal.","'Education, democracy and growth' is the title of a paper","SELECT T1.FullName FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T2.Title = 'Education, democracy and growth'"
authors,"Give the number of papers that were published on ""IEEE Transactions on Nuclear Science"" in 1999.",'IEEE Transactions on Nuclear Science' is the FullName of journal; 1999 refers to Year = '1999'; papers refers to Paper.Id,SELECT COUNT(T2.Id) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'IEEE Transactions on Nuclear Science' AND T2.Year = 1999
authors,"What was the name of the paper that was published on ""IEEE Transactions on Pattern Analysis and Machine Intelligence"" in 2011?",'IEEE Transactions on Pattern Analysis and Machine Intelligence' is the FullName of journal; 2011 refers to Year = '2011'; name of the paper refers to Title of paper,SELECT T2.Title FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'IEEE Transactions on Pattern Analysis and Machine Intelligence' AND T2.Year = 2011 AND T2.Title <> ''
authors,"What are the keywords for the paper which was published on ""Modeling Identification and Control"" in 1994?","'Modeling Identification and Control' is the FullName of the journal; 1994 refers to Year = '1994'; if the year is ""0"", it means this paper is preprint, or not published",SELECT T2.Keyword FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'Modeling Identification and Control' AND T2.Year = 1994
authors,"For the paper which was presented by ""Zvezdan Protić"", was it preprinted?","Year = 0 means this paper is preprint, or not published",SELECT CASE WHEN T1.Year = 0 THEN 'TRUE' ELSE 'FALSE' END FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Name = 'Zvezdan Protić' AND T1.ConferenceId = 0 AND T1.JournalId = 0
authors,"At which conference was the paper ""Skew-Circulant Preconditioners for Systems of LMF-Based ODE Codes"" presented?",'Skew-Circulant Preconditioners for Systems of LMF-Based ODE Codes' is the Title of the paper; conference refers to Conference.FullName,SELECT T2.FullName FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Title = 'Skew-Circulant Preconditioners for Systems of LMF-Based ODE Codes'
authors,"Tell the number of papers that were presented at ""International Symposium on Software Testing and Analysis"" conference.",'International Symposium on Software Testing and Analysis' is the FullName of the conference; papers refers to Paper.Id,SELECT COUNT(T1.Id) FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T2.FullName = 'International Symposium on Software Testing and Analysis'
authors,"Gives the home page of the conference where the paper ""Increasing the Concurrency in Estelle"" is presented.",'Increasing the Concurrency in Estelle' is the Title of the paper; home page of the conference refers to HomePage;,SELECT DISTINCT T2.HomePage FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Title = 'Increasing the Concurrency in Estelle'
authors,"How many authors finished the paper ""An Improved Active Suspension Model for Attitude Control of Electric Vehicles"" together?","authors refers to AuthorId; 'An Improved Active Suspension Model for Attitude Control of Electric Vehicles' is the Title of a paper; A paper can have more than one author. Co-authorship can be derived from (paper ID, author ID) pair.",SELECT COUNT(T2.AuthorId) FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'An Improved Active Suspension Model for Attitude Control of Electric Vehicles'
authors,"In the year 2012, which conference had the most papers presented? Give the short name of the conference.",Papers refers to Paper.Id; short name of the conference refers to Conference.ShortName,SELECT T2.ShortName FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Year = '2012' GROUP BY T1.ConferenceId ORDER BY COUNT(T1.Id) DESC LIMIT 1
authors,How many papers were presented at 'ECSQARU' in 2003?,Papers refers to Paper.Id; ECSQARU is the ShortName of the conference; 2003 refers to Year = '2003',SELECT COUNT(T1.Id) FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T2.ShortName = 'ECSQARU' AND T1.Year = '2003'
authors,"Show the keywords of the paper that was presented at ""International Radar Symposium"" in 2012.",'International Radar Symposium' is the FullName of the conference; 2012 refers to Year = '2012',SELECT T1.Keyword FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T2.FullName = 'International Radar Symposium' AND T1.Year = 2012
authors,"How many times more for the papers that were presented at the ""International Conference on Thermoelectrics"" conference than ""International Conference on Wireless Networks, Communications and Mobile Computing“ conference?","'International Conference on Thermoelectrics' AND 'International Conference on Wireless Networks, Communications and Mobile Computing' are the FullName of the conference; Papers refers to Paper.Id; Calculation = SUBTRACT(SUM(Paper.Id where FullName = 'International Conference on Thermoelectrics'), SUM(Paper.Id where FullName = 'International Conference on Wireless Networks, Communications and Mobile Computing'))","SELECT CAST(SUM(CASE WHEN T2.FullName = 'International Conference on Thermoelectrics' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.FullName = 'International Conference on Wireless Networks, Communications and Mobile Computing' THEN 1 ELSE 0 END) FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id"
authors,What is the percentage of preprints of John Van Reenen's papers?,"year = 0 means this paper is preprint; John Van Reenen is the author's name; papers refers to paper.Id; calculation = DIVIDE(SUM(paper.Id where Name = 'John Van Reenen' AND ConferenceID = 0 AND  JournalId = 0), SUM(paper.Id where Name = 'John Van Reenen'))",SELECT CAST(SUM(CASE WHEN T1.ConferenceId = 0 AND T1.JournalId = 0 THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.Id) FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Name = 'John Van Reenen'
authors,What is the oldest published book?,published book refers to Title; the oldest book refers to MIN(Year),SELECT Title FROM Paper WHERE Year > 0 ORDER BY Year ASC LIMIT 1
authors,Which conference has the longest name?,the longest name refers to MAX(length(FullName)),SELECT FullName FROM Conference ORDER BY LENGTH(FullName) DESC LIMIT 1
authors,How many authors are affiliated with NASA Langley Research Center?,NASA Langley Research Center is the Affiliation,SELECT COUNT(Name) FROM Author WHERE Affiliation = 'NASA Langley Research Center'
authors,How many journals don’t have a short name?,don’t have a short name means ShortName is null,SELECT COUNT(ShortName) FROM Journal WHERE ShortName = ''
authors,How many of the papers are preprinted?,year = 0 means this paper is preprint; papers refers to Paper.Id,SELECT COUNT(Id) FROM Paper WHERE ConferenceId = 0 AND JournalId = 0
authors,What is the title of the paper with the most authors?,paper refers to paper.Id; paper with the most authors refers to MAX(PaperAuthor.PaperId),SELECT T2.Title FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id GROUP BY T1.PaperId ORDER BY COUNT(T1.PaperId) DESC LIMIT 1
authors,"Which paper published by the ""TUBERCLE LUNG DIS"" journal is the oldest?",paper refers to Title; TUBERCLE LUNG DIS is the ShortName of journal; the oldest refers to MIN(Year),SELECT T2.Title FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.ShortName = 'TUBERCLE LUNG DIS' ORDER BY T2.Year ASC LIMIT 1
authors,"List all of the papers written by the author ""Karin Rengefors.""",all the papers refers to Title; Karin Rengefors is the Name of the author,SELECT T2.Title FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T1.Name = 'Karin Rengefors'
authors,"How many papers were published by the ""Virtual Reality, IEEE Annual International Symposium"" conference in 2012?","'Virtual Reality, IEEE Annual International Symposium' is the FullName of conference; in 2012 refers to Year = 2012;","SELECT COUNT(T2.Id) FROM Conference AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.ConferenceId WHERE T1.FullName = 'Virtual Reality, IEEE Annual International Symposium' AND T2.Year = 2012"
authors,"What is the short name for the journal that published the paper ""A Case of Unilateral Ashy Dermatosis""?",A Case of Unilateral Ashy Dermatosis refer to Title,SELECT T2.ShortName FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.Title = 'A Case of Unilateral Ashy Dermatosis'
authors,"What are the affiliations of the author ""Mark A. Musen"" written on and off paper?",Mark A. Musen refer to Author.Name;,SELECT T1.Affiliation FROM PaperAuthor AS T1 INNER JOIN Author AS T2 ON T1.AuthorId = T2.Id WHERE T2.Name = 'Mark A. Musen'
authors,"Who are the authors of the paper ""Determination of Planetary Meteorology from Aerobot Flight Sensors""?",'Determination of Planetary Meteorology from Aerobot Flight Sensors' refer to title of the paper,SELECT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'Determination of Planetary Meteorology FROM Aerobot Flight Sensors'
authors,List all the titles and their publishing journals from the 60's.,"from the 60’s refer to Year 1960 BETWEEN 1970

","SELECT T1.Title, T1.JournalId FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.Year >= 1960 AND T1.Year <= 1970"
authors,"Which year did the ""Internet, Multimedia Systems and Applications"" conference publish the most papers?","'Internet, Multimedia Systems and Applications' is the FullName of paper; published the most papers refers to MAX(COUNT(year))","SELECT T2.Year FROM Conference AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.ConferenceId WHERE T1.FullName = 'Internet, Multimedia Systems and Applications' GROUP BY T2.Year ORDER BY COUNT(T2.Id) DESC LIMIT 1"
authors,"What are the different ways the name of the author, Randall Davis, is written on their papers?",Randall Davis refer to Author.Name,SELECT DISTINCT T1.Name FROM PaperAuthor AS T1 INNER JOIN Author AS T2 ON T1.AuthorId = T2.Id WHERE T2.Name = 'Randall Davis' AND T1.Name != 'Randall Davis'
authors,List all of the conferences where a paper was published in 2008.,"Published in 2008 refer to Year = 2008

",SELECT DISTINCT T2.FullName FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Year = 2008
authors,What is the homepage URL for the journal that published the most papers?,published the most papers refer to MAX(JournalId); homepage URL refers to HomePage,SELECT T2.HomePage FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id GROUP BY T1.JournalId ORDER BY COUNT(T1.JournalId) DESC LIMIT 1
authors,"What is the proportion of the papers that have the keyword ""cancer""? Please provide a list of authors and their affiliations.","Proportion refer to DIVIDE(COUNT(Keyword = ’cancer’), COUNT(PaperID))","SELECT CAST(SUM(CASE WHEN T1.Keyword = 'cancer' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.Id), T2.Name, T2.Affiliation FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId"
authors,What is the name of author with the ID of 1722?,,SELECT Name FROM Author WHERE Id = 1722
authors,How many papers are preprint or not published?,preprint or not published refer to Year = 0;,SELECT COUNT(Id) FROM Paper WHERE Year = 0 OR (ConferenceId = 0 AND JournalId = 0)
authors,List the name of the author that affiliated with University of Illinois Chicago?,'University of Illinois Chicago' is an affiliation,SELECT Name FROM Author WHERE Affiliation = 'University of Illinois Chicago'
authors,How many papers were published in 2005. Calculate the difference between the number of paper published in 2005 and the number of paper published in the previous year.,published in 2005 refer to Year = 2005; Difference refer to SUBTRACT(SUM(Year = 2005). SUM(Year = 2004)),"SELECT SUM(CASE WHEN Year = 2005 THEN 1 ELSE 0 END) , SUM(CASE WHEN year = 2005 THEN 1 ELSE 0 END) - SUM(CASE WHEN year = 2004 THEN 1 ELSE 0 END) AS diff FROM Paper"
authors,State the title of papers published in the Ibm Journal of Research and Development.,"Ibm Journal of Research and Development refer to FullName

'Ibm Journal of Research and Development' is the full name of paper",SELECT T2.Title FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'Ibm Journal of Research and Development'
authors,"State the name and affiliation of author for the 'Education, democracy and growth' paper?","Education, democracy and growth' refer to title of paper
","SELECT T2.Name, T2.Affiliation FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'Education, democracy and growth'"
authors,How many author published papers in the 'IEEE Computer' journal?,IEEE Computer refer to FullName; How many author published papers refer to COUNT(PaperAuthor.Name) where FullName = ’IEEE Computer’,SELECT COUNT(T2.Name) FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Journal AS T3 ON T1.JournalId = T3.Id WHERE T3.FullName = 'IEEE Computer'
authors,Where was the 'A context-based navigation paradigm for accessing Web data' paper published? State the name of the conference.,"A context-based navigation paradigm for accessing Web data' is the title of paper; name of conference refer to FullName
",SELECT T2.FullName FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Title = 'A context-based navigation paradigm for accessing Web data'
authors,How many papers were published in International Workshop on Inductive Logic Programming from 2001 to 2009?,"From 2001 to 2009 refer to Year 2001 BETWEEN 2009; 'International Workshop on Inductive Logic Programming' refer to Conference.FullName
",SELECT COUNT(T1.Id) FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T2.FullName = 'International Workshop on Inductive Logic Programming' AND T1.Year BETWEEN 2001 AND 2009
authors,Calculate the average of authors for each paper from the year of 1990 to 2000.,"Average refer to DIVIDE(COUNT(AuthorID where Year = 1990 BETWEEN 2000), COUNT(Title where Year = 1990 BETWEEN 2000))",SELECT CAST(COUNT(DISTINCT T2.AuthorId) AS REAL) / COUNT(DISTINCT T1.Title) FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Year BETWEEN 1990 AND 2000
authors,Indicate the year and a full name of the journal in which the publication named 'Area Effects in Cepaea' was published.,'Area Effects in Cepaea' is the title of paper,"SELECT T1.Year, T2.FullName FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.Title = 'Area Effects in Cepaea'"
authors,Who is the author of the publication named 'Real-Time Automata'?,'Real-Time Automata' is the title of paper; publication refers to title;,SELECT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'Real-Time Automata'
authors,Provide the name of the author who is affiliated with the organization named 'ABB Electrical Machines'.,'ABB Electrical Machines' is an affiliation,SELECT Name FROM Author WHERE Affiliation = 'ABB Electrical Machines'
authors,Provide the number of publications published in the journal named 'Academic Medicine' between 2005 and 2010.,'Academic Medicine' is the FullName of journal; between 2005 and 2010 refer to Year 2005 BETWEEN 2010,SELECT COUNT(T2.JournalId) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'Academic Medicine' AND T2.Year BETWEEN 2005 AND 2010
authors,Provide the title of the latest publication published by it's author 'Zuliang Du'.,'Zuliang Du' is the name of paper author; latest publication refers to MAX(Year),SELECT T2.Title FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T1.Name = 'Zuliang Du' ORDER BY T2.Year DESC LIMIT 1
authors,How many publications were published in relation to the conference 'Adaptive Multimedia Retrieval' in 2007?,'Adaptive Multimedia Retrieval is the FullName of paper; in 2007 refer to Year = 2007,SELECT COUNT(T2.ConferenceId) FROM Conference AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.ConferenceId WHERE T1.FullName = 'Adaptive Multimedia Retrieval' AND T2.Year = 2007
authors,Provide the average number of papers that are published in the journal named 'Information Sciences' annually.,"'Information Sciences' is the FullName of journal; average = DIVIDE(COUNT(JournalId = 48), COUNT(Years))",SELECT CAST(COUNT(T2.JournalId) AS REAL) / COUNT(DISTINCT T2.Year) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'Information Sciences'
authors,How many publications were published by author named 'Howard F. Lipson'?,'Howard F. Lipson' is the name of author,SELECT COUNT(PaperId) FROM PaperAuthor WHERE Name = 'Howard F. Lipson'
authors,"Among all publications containing keywords 'Turbulent Fluids', what percentage of them was published in the journal named 'Physics of Fluids'?","'Physics of Fluids' is the FullName of journal; percentage = DIVIDE(SUM(Keyword = 'Turbulent Fluids'), SUM(FullName = 'Physics of Fluids')) as percentage",SELECT CAST(SUM(CASE WHEN T1.Keyword = 'Turbulent Fluids' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.FullName = 'Physics of Fluids' THEN 1 ELSE 0 END) FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id
authors,Indicate the number of authors affiliated with the organization named 'Arizona State University'.,'Arizona State University' is an affiliation,SELECT COUNT(Name) FROM Author WHERE Affiliation = 'Arizona State University'
authors,List out the full name and URL link of ICCI?,'ICCI' is the ShortName of conference; URL refer to HomePage,"SELECT FullName, HomePage FROM Conference WHERE ShortName = 'ICCI'"
authors,Mention the titile of paper writen by Joe Lograsso.,'Joe Lograsso' is name of paper author,SELECT T1.Title FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Name = 'Joe Lograsso'
authors,How many papers were written by authors who cooperated with University of Hong Kong?,University of Hong Kong' is an affiliation,SELECT COUNT(T2.PaperId) FROM Author AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.AuthorId WHERE T1.Affiliation = 'University of Hong Kong'
authors,State the year and title of papers written by Barrasa.,'Barassa' is name of paper author,"SELECT T1.Year, T1.Title FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Name = 'Barrasa'"
authors,Sate the author name and published year for paper id 2?,published year refers to year,"SELECT T1.Name, T3.Year FROM Author AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.AuthorId INNER JOIN Paper AS T3 ON T2.PaperId = T3.Id WHERE T2.PaperId = 2"
authors,Mention the name of author for paper id 5 and state the keyword of this page.,,"SELECT T1.Name, T3.Keyword FROM Author AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.AuthorId INNER JOIN Paper AS T3 ON T2.PaperId = T3.Id WHERE T2.PaperId = 5"
authors,"What is the full name of the conference in which the paper ""2004 YD5"" was published?",'2004 YD5' is the title of paper,SELECT T1.FullName FROM Conference AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.ConferenceId WHERE T2.Title = '2004 YD5'
college_completion,List the all the institutes from the state with the most number of American Indian in 2007.,institutes refers to chronname; American Indian refers to race = 'Ai'; most number of American Indian refers to MAX(COUNT(race = 'Ai')); in 2007 refers to year = '2007';,SELECT T1.chronname FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.year = 2007 AND T2.race = 'Ai' GROUP BY T1.chronname ORDER BY COUNT(T1.chronname) DESC LIMIT 1
college_completion,State the name and website of the institutes from the state with 209 graduate cohort in 2011.,name of the institutes refers to chronname; website refers to site; graduate cohort refers to grad_cohort; in 2011 refers to year = '2011';,"SELECT T1.chronname, T1.site FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.year = 2011 AND T2.grad_cohort = 209"
college_completion,What is the number of female graduates between 2011 to 2013 from the state where 'Gateway Community College' is located?,female refers to gender = 'F'; graduates refers to grad_cohort; between 2011 to 2013 refers to year BETWEEN 2011 AND 2013; Gateway Community College refers to chronname = 'Gateway Community College';,SELECT COUNT(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.year BETWEEN 2011 AND 2013 AND T1.chronname = 'Gateway Community College' AND T2.gender = 'F'
college_completion,What is the total male graduates in 2012 in the state whereby the institute with the highest average amount of student aid going to undergraduate recipients is located?,male refers to gender = 'M'; graduates refers to grad_cohort; in 2012 refers to year = 2012; highest average amount of student aid going to undergraduate recipients refers to MAX(aid_value);,SELECT COUNT(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.year = 2012 AND T2.gender = 'M' ORDER BY T1.aid_value DESC LIMIT 1
college_completion,State the average median SAT value for institutes in the state with the most male graduate cohort in 2013.,median SAT value refers to med_sat_value; average = AVG(med_sat_value); male refers to gender = 'M'; graduate cohort refers to grad_cohort; most male graduate cohort refers to MAX(COUNT(grad_cohort WHERE gender = 'M')); in 2013 refers to year = 2013;,SELECT AVG(T1.med_sat_value) FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.year = 2013 AND T2.gender = 'M' GROUP BY T2.grad_cohort ORDER BY COUNT(T2.grad_cohort) DESC LIMIT 1
college_completion,Name the state with the most number of graduate cohort in 2012 from private institute for profit? List all such institutes in the mentioned state.,most number of graduate cohort refers to MAX(SUM(grad_cohort)); in 2012 refers to year = 2012; private institute for profit refers to control = 'Private for-profit'; institutes refers to chronname;,"SELECT T1.state, T1.chronname FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.year = 2012 AND T1.control = 'Private for-profit' GROUP BY T2.grad_cohort ORDER BY COUNT(T2.grad_cohort) DESC LIMIT 1"
college_completion,List all the public institutes from the state with the least number of graduate cohort in 2013.,public refers to control = 'Public'; institutes refers to chronname; least number of graduate cohort refers to MIN(grad_cohort); in 2013 refers to year = 2013;,SELECT T1.chronname FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.year = 2013 AND T1.control = 'Public' ORDER BY T2.grad_cohort LIMIT 1
college_completion,"Provide the institute name with less than 200 graduate cohort of all races and genders in 2013. Also, please state the total number of full-time equivalent undergraduates for the institute.",institute name refers to chronname; less than 200 graduate cohort refers to grad_cohort < 200; all races refers to race = 'X'; all genders refers to gender = 'B'; in 2013 refers to year = 2013; total number of full-time equivalent undergraduates refers to fte_value;,"SELECT T1.chronname, T2.grad_cohort FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T2.year = 2013 AND T2.gender = 'B' AND T2.race = 'X' AND T2.grad_cohort < 200"
college_completion,What is the number of female graduate for all students cohort from Oakwood University in 2013?,female refers to gender = 'F'; graduates refers to grad_cohort; Oakwood University refers to chronname = 'Oakwood University'; in 2013 refers to year = 2013; all sutdents refer to rae = 'X';,SELECT COUNT(*) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T2.year = 2013 AND T2.gender = 'F' AND T2.race = 'X' AND T1.chronname = 'Oakwood University'
college_completion,"In 2012, how many Asian female graduates were seeking another type of degree or certificate at the 4-year institution at University of Alaska at Anchorage?",In 2012 refers to year = 2012; Asian refers to race = 'A'; female refers to gender = 'F'; graduates refers to grad_cohort; seeking another type of degree or certificate at a 4-year institution refers to cohort = '4y other'; University of Alaska at Anchorage refers to chronname = 'University of Alaska at Anchorage';,SELECT COUNT(*) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T2.gender = 'F' AND T2.race = 'A' AND T1.chronname = 'University of Alaska at Anchorage' AND T2.cohort = '4y other'
college_completion,Compare the graduate cohort for Auburn University from 2011 to 2013?,"graduate cohort for Auburn University refers to grad_cohort is not null WHERE chronname = 'Auburn University', gender = 'B', race = 'X' and cohort = '4y other', '4y bach'; from 2011 to 2013 refers to year in (2011, 2012, 2013);","SELECT SUM(CASE WHEN T2.year = 2011 THEN T2.grad_cohort ELSE 0 END), SUM(CASE WHEN T2.year = 2012 THEN T2.grad_cohort ELSE 0 END), SUM(CASE WHEN T2.year = 2013 THEN T2.grad_cohort ELSE 0 END) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T2.gender = 'B' AND T2.race = 'X' AND T1.chronname = 'Auburn University'"
college_completion,Calculate the percentage of Black students in all private for profit institutions.,"Black students refers to race = 'B'; private for profit refers to control = 'Private for-profit'; percentage = MULTIPLY(DIVIDE(SUM(race = 'B'), SUM(grad_cohort)), 100.0);",SELECT CAST(SUM(CASE WHEN T2.race = 'B' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T2.race = 'B' AND T1.control = 'Private for-profit'
college_completion,Calculate the percentage of Asian students among students of other races who graduated from institution in Alabama in year 2013 within 100 percent of normal / expected time.,"Asian refers to race = 'A'; Alabama refers to state = 'Alabama'; graduated within 100 percent of normal/expected time refers to grad_100; percentage = MULTIPLY(DIVIDE(SUM(race = 'A'), SUM(grad_cohort)), 100);",SELECT CAST(SUM(CASE WHEN T2.race = 'A' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T2.year = 2013 AND T1.state = 'Alabama'
college_completion,What is the ratio of Asian male graduates to Asian female graduates from Harvard University in 2013?,"ratio = MULTIPLY(DIVIDE(SUM(grad_cohort WHERE Gender = 'M'), SUM( grad_cohort WHERE Gender = 'F')), 1.0); Asian refers to race = 'A'; female refers to gender = 'F'; graduates refers to grad_cohort; male refers to gender = 'M'; Harvard University refers to chronname = 'Harvard University'; in 2013 refers to year = 2013;",SELECT CAST(SUM(CASE WHEN T2.Gender = 'M' THEN T2.grad_cohort ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.Gender = 'F' THEN T2.grad_cohort ELSE 0 END) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T1.chronname = 'Harvard University' AND T2.year = 2013 AND T2.race = 'A'
college_completion,"From which institute is harder to graduate for a bachelor, Amridge University or Auburn University?",institute refers to chronname; harder to graduate for a bachelor refers to MIN(grad_100_value); Amridge University refers to chronname = 'Amridge University'; Auburn University refers to chronname = 'Auburn University';,"SELECT chronname FROM institution_details WHERE chronname IN ('Amridge University', 'Auburn University') ORDER BY grad_100_value LIMIT 1"
college_completion,How many institutes are private and not-for profit?,private and not for profit refers to control = 'Private not-for-profit';,SELECT COUNT(*) FROM institution_details WHERE control = 'Private not-for-profit'
college_completion,"In total, how many Hispanic male students graduated from Amridge University?",Hispanic refers to race = 'H'; male refers to gender = 'M'; Amridge University refers to chronname = 'Amridge University';,SELECT SUM(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T1.chronname = 'Amridge University' AND T2.gender = 'M' AND T2.race = 'H'
college_completion,How many students that graduated from Lincoln College in 2011 belong to the cohort type of Bachelor's/equivalent seeking cohort at 4-year institutions?,Lincoln College refers to chronname = 'Lincoln College'; in 2011 refers to year = 2011; Bachelor's/equivalent seeking cohort at 4-year institutions refers to cohort = '4y bach';,SELECT COUNT(T1.unitid) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T1.chronname = 'Lincoln College' AND T2.year = 2011 AND T2.cohort = '4y bach'
college_completion,What's the number of male Hispanic students who graduated from Central Alabama Community College in 2011 within 100 percent of normal/expected time?,male refers to gender = 'M'; Hispanic students refers to race = 'H'; Central Alabama Community College refers to chronname = 'Central Alabama Community College'; in 2011 refers to year = 2011; number of students who graduated within 100 percent of normal/expected time refers to grad_100;,SELECT SUM(T2.grad_100) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T1.chronname = 'Central Alabama Community College' AND T2.year = 2011 AND T2.gender = 'M' AND T2.race = 'H'
college_completion,How many students graduated from Central Alabama Community College in 2011 in total?,Central Alabama Community College refers to chronname = 'Central Alabama Community College'; in 2011 refers to year = 2011;,SELECT T2.grad_cohort FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T1.chronname = 'Central Alabama Community College' AND T2.year = 2011
college_completion,"Which cohort had the higher percentage of students who graduated from Central Alabama Community College in 2011 within 150 percent of normal/expected time, female White students or male White students?",amount of percentage = SUM(grad_150 WHERE gender = 'F') as female; percentage = SUM(grad_150 WHERE gender = 'M') as male; Central Alabama Community College refers to chronname = 'Central Alabama Community College'; in 2011 refers to year = 2011; graduated within 150 percent of normal/expected time refers to grad_150; female refers to gender = 'F'; White refers to race = 'w'; male refers to gender = 'M';,"SELECT IIF(SUM(CASE WHEN T2.gender = 'F' THEN T2.grad_150 ELSE 0 END) > SUM(CASE WHEN T2.gender = 'M' THEN T2.grad_150 ELSE 0 END), 'female White students', 'male White students') FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.chronname = 'Central Alabama Community College' AND T2.year = 2011 AND T2.race = 'W'"
college_completion,Which institute has the highest percentage of male White students graduating in 2011 within 150 percent of normal/expected time?,male refers to gender = 'M'; white refers to race = 'w'; in 2011 refers to year = 2011; graduating within 150 percent of normal/expected time refers to grad_150;,SELECT T1.chronname FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T2.year = 2011 AND T2.gender = 'M' AND T2.race = 'W' AND T2.grad_150 = ( SELECT MAX(T2.grad_150) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T2.year = 2011 AND T2.gender = 'M' AND T2.race = 'W' )
college_completion,Please list the names of the institutes with the percentage of male White students graduating in 2011 within 150 percent of normal/expected time over 20.,names of the institutes refers to chronname; male refers to gender = 'M'; white refers to race = 'w'; in 2011 refers to year = 2011; percentage of students graduating within 150 percent of normal/expected time over 20 refers to grad_150>20;,SELECT T FROM ( SELECT DISTINCT CASE WHEN T2.grad_150 > 20 THEN T1.chronname ELSE NULL END AS T FROM institution_details T1 INNER JOIN institution_grads T2 ON T2.unitid = T1.unitid WHERE T2.year = 2011 AND T2.gender = 'M' AND T2.race = 'W' ) WHERE T IS NOT NULL
college_completion,How many students for both genders graduated from a 2-year institute in Alabama in 2011?,2-year institute refers to cohort = '2y all'; Alabama refers to state = 'Alabama'; in 2011 refers to year = 2011; T2.gender = 'B' means both genders;,SELECT SUM(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE  T2.cohort = '2y all' AND T2.year = 2011 AND T1.state = 'Alabama'
college_completion,How many more students in total graduated from Central Alabama Community College in 2012 than in 2011?,"how many more = SUBTRACT(SUM(grad_cohort WHERE year = 2012)), (sum(grad_cohort WHERE year = 2011)); Central Alabama Community College refers to chronname = 'Central Alabama Community College'; in 2012 refers to year = 2012; in 2011 refers to year = 2011;",SELECT SUM(CASE WHEN T2.year = 2012 THEN T2.grad_cohort ELSE 0 END) - SUM(CASE WHEN T2.year = 2011 THEN T2.grad_cohort ELSE 0 END) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.chronname = 'Central Alabama Community College'
college_completion,"Among the institutes in the state of Alabama whose percent rank for median SAT value within sector is 77, how many of them have over 500 graduates in total in 2011?",percent rank for median SAT value within sector refers to med_sat_percentile; over 500 graduates refers to grad_cohort > 500; in 2011 refers to year = 2011;,SELECT COUNT(DISTINCT T1.chronname) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.state = 'Alabama' AND T1.med_sat_percentile = '100' AND T2.year = 2011 AND T2.grad_cohort > 500
college_completion,"Among the public institutes in the state of Alabama, how many of them have over 30 students who graduated within 100 percent of normal/expected time in 2011?",public refers to control = 'Public'; over 30 students who graduated within 100 percent of normal/expected time refers to grad_100 > 30; in 2011 refers to year = 2011;,SELECT COUNT(T1.chronname) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.state = 'Alabama' AND T1.control = 'Public' AND T2.year = 2011 AND T2.grad_100 > 30
college_completion,Please list the names of the institutes in the state of Alabama whose all graduates in total exceeded 500 in 2011?,names of the institutes refers to chronname; graduates refers to grad_cohort; grad_cohort > 500; in 2011 refers to year = 2011; all students refer to race = 'X'.,SELECT DISTINCT T1.chronname FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.state = 'Alabama' AND T2.year = 2011 AND T2.race = 'X' AND T2.grad_cohort > 500
college_completion,What's the average number of graduates for Central Alabama Community College in the 3 consecutive years from 2011 to 2013?,"graduates refers to grad_cohort; Central Alabama Community College refers to chronname = 'Central Alabama Community College'; average number of graduates for 3 consecutive years = DIVIDE(SUM(SUM(grad_cohort WHERE year = 2011), SUM(grad_cohort WHERE year = 2012), SUM(grad_cohort WHERE year = 2013)), 3);","SELECT AVG(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.chronname = 'Central Alabama Community College' AND T2.year IN (2011, 2012, 2013) AND T2.gender = 'B' AND T2.race = 'X'"
college_completion,What is the average percentage of students graduating within 100 percent of normal/expected time for Central Alabama Community College?,"average = DIVIDE(SUM(grad_100_rate), (SUM(grad_100), SUM(grad_150))); percentage of students graduating within 100 percent of normal/expected time refers to grade_100_rate; Central Alabama Community College refers to chronname = 'Central Alabama Community College';",SELECT AVG(T2.grad_100_rate) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.chronname = 'Central Alabama Community College'
college_completion,"Give the web site address for ""Swarthmore College"".",website address refers to site; Swarthmore College refers to chronname = 'Swarthmore College';,SELECT T FROM ( SELECT DISTINCT CASE WHEN chronname = 'Swarthmore College' THEN site ELSE NULL END AS T FROM institution_details ) WHERE T IS NOT NULL
college_completion,"Which state is ""Mercer University"" located in?",Mercer University refers to chronname = 'Mercer University';,SELECT T FROM ( SELECT DISTINCT CASE WHEN chronname = 'Mercer University' THEN state ELSE NULL END AS T FROM institution_details ) WHERE T IS NOT NULL
college_completion,"Which city is ""Rensselaer Polytechnic Institute"" located in?",Rensselaer Polytechnic Institute refers to chronname = 'Rensselaer Polytechnic Institute';,SELECT T FROM ( SELECT DISTINCT CASE WHEN chronname = 'Rensselaer Polytechnic Institute' THEN city ELSE NULL END AS T FROM institution_details ) WHERE T IS NOT NULL
college_completion,"Tell the abbreviation for ""Delaware"" state.",abbreviation for state refers to state_abbr;,SELECT T FROM ( SELECT DISTINCT CASE WHEN state = 'Delaware' THEN state_abbr ELSE NULL END AS T FROM state_sector_grads ) WHERE T IS NOT NULL
college_completion,"How many 2-year public schools are there in ""California""?",2-year refers to level = '2-year'; public refers to control = 'public'; California refers to state = 'California';,SELECT COUNT(stateid) FROM state_sector_details WHERE state = 'California' AND level = '2-year' AND control = 'Public'
college_completion,"Give the post name of ""Idaho"" state.",post name refers to state_post;,SELECT T FROM ( SELECT DISTINCT CASE WHEN state = 'Idaho' THEN state_post ELSE NULL END AS T FROM state_sector_details ) WHERE T IS NOT NULL
college_completion,"Tell the name of school in ""NJ"" that could get the bachelor's degree with highest students number.",name of school refers to chronname; NJ refers to state_abbr = 'NJ'; bachelor's degree refers to level = '4-year'; highest students number refers to MAX(student_count);,SELECT DISTINCT T1.chronname FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'NJ' AND T1.level = '4-year' AND T1.student_count = ( SELECT MAX(T1.student_count) FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'NJ' AND T1.level = '4-year' )
college_completion,"Give the web site address for the school in ""PA"" state with the highest latitude.",web site address refers to site; PA refers to state_abbr = 'PA'; highest latitude refers to MAX(lat_y);,SELECT DISTINCT T1.site FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'PA' AND T1.lat_y = ( SELECT MAX(T1.lat_y) FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'PA' )
college_completion,Tell the number of 4-year public schools in UT whose graduation rate exceeds the average for the state.,4-year refers to level = '4-year'; public refers to control = 'Public'; UT refers to state_abbr = 'UT'; graduation rate exceeds the average for the state refers to awards_per_value > awards_per_state_value;,SELECT COUNT(DISTINCT T1.chronname) FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'UT' AND T1.level = '4-year' AND T1.control = 'Public' AND T1.awards_per_value > T1.awards_per_state_value
college_completion,"How many 2-year private nonprofit schools in ""CT"" whose graduation rate falls below the average for the state?",2-year refers to level = '2-year'; private nonprofit refers to control = 'Private not-for-profit'; CT refers to state_abbr = 'CT'; graduation rate falls below the average for the state refers to awards_per_value < awards_per_natl_value;,SELECT COUNT(DISTINCT T1.chronname) FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'CT' AND T2.level = '2-year' AND T1.control = 'Private not-for-profit' AND T1.awards_per_value < T1.awards_per_natl_value
college_completion,"Give the name of the 4-year public school in ""ID"" with the lowest graduation 100 value.",name of the school refers to chronname; 4-year refers to level = '4-year'; public refers to control = 'Public'; ID refers to state_abbr = 'ID'; lowest graduation 100 value refers to MIN(grad_100_value);,SELECT T1.chronname FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'ID' AND T1.level = '4-year' AND T1.control = 'Public' GROUP BY T1.chronname ORDER BY SUM(T1.grad_100_value) ASC LIMIT 1
college_completion,"Which 4-year private for-profit school in ""KY"" has the highest graudation 150 value? Give the ID for the school.",4-year refers to level = '4-year'; private for profit refers to control = 'Private for-profit'; KY refers to state_abbr = 'KY'; highest graduation 150 value refers to MAX(grad_150_value); ID of the school refers to unitid;,"SELECT T1.chronname, T1.unitid FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'KY' AND T1.level = '4-year' AND T1.control = 'Private for-profit' GROUP BY T1.chronname ORDER BY SUM(T1.grad_150_value) DESC LIMIT 1"
college_completion,"What was the number of female Hispanic students who graduated within 100 percent of expected time for ""Pennsylvania State University-Altoona""?",female refers to gender = 'F'; Hispanic refers to race = 'H'; graduated within 100 percent of expected time refers to grad_100; Pennsylvania State University-Altoona refers to chronname = 'Pennsylvania State University-Altoona';,SELECT SUM(T2.grad_100) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.chronname = 'Pennsylvania State University-Altoona' AND T2.gender = 'F' AND T2.race = 'H'
college_completion,Give the cohort name for the school with biggest cohort size.,biggest cohort size refers to MAX(cohort_size); cohort = '4y bach' means bachelor's or equivalent-seeking cohort at 4-year institutions; cohort = '4y other' means students seeking another type of degree or certificate at a 4-year institution; cohort = '2y all' means degree-seeking students at 2-year institutions;,SELECT DISTINCT T1.chronname FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.cohort_size = ( SELECT MAX(T1.cohort_size) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid )
college_completion,"Tell the number of 4-year private not-for-profit schools in the home state of ""Brevard Community College"".",4-year refers to level = '4-year'; private not-for-profit refers to control = 'Private not-for-profit'; Brevard Community College refers to chronname = 'Brevard Community College';,SELECT COUNT(T1.chronname) FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON T2.state = T1.state WHERE T2.level = '4-year' AND T2.control = 'Private not-for-profit' AND T1.chronname = 'Brevard Community College'
college_completion,Give the total number of all graduated students from a 2-year public schools in Alabama in 2011.,number of graduated students refers to grad_cohort; 2-year refers to level = '2-year'; public refers to control = 'Public'; Alabama refers to state = 'Alabama'; in 2011 refers to year = '2011'; reace = 'X' means all students.,SELECT SUM(T2.grad_cohort) FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T1.state = 'Alabama' AND T2.year = 2011 AND T1.level = '2-year' AND T1.control = 'Public' AND T2.race = 'X'
college_completion,"For the state which has the 113 2-year public schools, tell the number of graduated Asian students who seeks another type of degree or certificate at a 2-year institution in 2013.",schools_count = 113; 2-year refers to level = '2-year'; public refers to control = 'public'; Asian refers to race = 'A'; seeks another type of degree or certificate at a 2-year institution refers to cohort = '2y all'; in 2013 refers to year = 2013;,SELECT COUNT(T2.grad_cohort) FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T2.level = '2-year' AND T2.control = 'Public' AND T2.gender = 'B' AND T2.race = 'A' AND T2.cohort = '2y all' AND T1.schools_count = 113
college_completion,What is the percentage of the number of 4-year public schools from Madison Area Technical College's home state in the Alabama?,"percentage = MULTIPLY(DIVIDE(SUM(chronname = 'Madison Area Technical College'), SUM(state = 'Alabama')), 100); 4-year refers to level = '4-year'; public refers to control = 'Public'; Madison Area Technical College refers to chronname = 'Madison Area Technical College'; home state in the United States refers to state;",SELECT CAST(COUNT(DISTINCT CASE WHEN T1.state = ( SELECT T1.state FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON T2.state = T1.state WHERE T1.chronname = 'Madison Area Technical College' ) AND T1.level = '4-year' AND T1.control = 'Public' THEN T1.chronname ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT CASE WHEN T2.state = 'Alabama' THEN T1.chronname ELSE NULL END) FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON T2.state = T1.state
college_completion,Give the state and name of institutions in year of data release from 2010 to 2012 with black students.,name of institutions refers to chronname; year of data release refers to year; from '2010' to '2012' refers to year BETWEEN 2010 AND 2012; Black refers to race = 'B';,"SELECT DISTINCT T1.state, T1.chronname FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T2.race = 'B' AND T2.year BETWEEN 2010 AND 2012"
college_completion,List down the states in 2011 with a national sector average of 20 and below.,in 2011 refers to year = '2011'; national sector average of 20 and below refers to awards_per_natl_value < 20;,SELECT DISTINCT T1.state FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T2.year = 2011 AND T1.awards_per_natl_value <= 20
college_completion,"Among the race of all students, what is the control of institution and level of institution with highest number of students?",highest number of students refers to student_count; all students refer to race = 'X'.,"SELECT DISTINCT T1.control, T1.level FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T2.race = 'X' AND T1.student_count = ( SELECT MAX(T1.student_count) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T2.race = 'X' )"
college_completion,"Among the states with a public school count of 20 and below, list their race.",public refers to control = 'Public'; school_count < 20;,SELECT DISTINCT T2.race FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T1.schools_count <= 20 AND T1.control = 'Public'
college_completion,List the basic of the institution in 2012 with race of all male students.,in 2012 refers to year = '2012'; male refers to gender = 'M'; all students refer to race = 'X'.,"SELECT DISTINCT T1.basic, T2.race FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T2.year = 2012 AND T2.gender = 'M' AND t2.race = 'X'"
college_completion,"In Alaska with school count of 1 from year 2011 to 2013, how many of the students are white?",Alaska refers to state = 'Alaska'; from year 2011 to 2013 refers to year BETWEEN '2011' AND '2013'; white refers to race = 'W';,SELECT COUNT(T2.race) FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T1.schools_count = 1 AND T2.year BETWEEN 2011 AND 2013 AND T2.race = 'W' AND T1.state = 'Alaska'
college_completion,What is the institution's name of american students within the number of degree-seeking students in the cohort that ranges from 1 to 3?,institution's name refers to chronname; american refers to race = 'Ai'; number of degree-seeking students in the cohort refers to grad_cohort; grad_cohort < = 3;,SELECT DISTINCT T1.chronname FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T2.grad_cohort BETWEEN 1 AND 3 AND T2.race = 'Ai'
college_completion,"Among the states that start with letter A and attained a national sector average of 16.5, give the number of degree-seeking students in the cohort of those students in 2012 .",state that starts with letter A refers to state LIKE 'A%'; national sector average of 16.5 refers to awards_per_natl_value = 16.5; number of degree-seeking students in the cohort refers to grad_cohort; in 2012 refers to year = '2012';,SELECT SUM(T2.grad_cohort) FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T2.state LIKE 'A%' AND T1.awards_per_natl_value = 16.5 AND T2.year = 2012
college_completion,List the site of institution within the student count of 500 to 1000 that has the recent year of data release.,recent year of data release refers to newest year;,SELECT DISTINCT T1.site FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.student_count BETWEEN 500 AND 1000 AND T2.year = ( SELECT MAX(T2.year) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid )
college_completion,What is the state name of male graduate in 2011 from a private for profit institution with black students?,male refers to gender = 'M'; in 2011 refers to year = '2011'; private for profit refers to control = 'Private for-profit'; black refers to race = 'B';,SELECT DISTINCT T1.state FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T2.gender = 'M' AND T2.race = 'B' AND T1.control = 'Private for-profit' AND T2.year = 2011
college_completion,"Among the black students in 2011, list the institution site and name of those who has 20 t0 30 degree-seeking students in the cohort.",black refers to race = 'B'; in 2011 refers to year = '2011'; institution name refers to chronname; 20 to 30 degree-seeking students in the cohort refers to grad_cohort BWEEN 20 AND 30;,"SELECT DISTINCT T1.site, T1.chronname FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T2.year = 2011 AND T2.race = 'B' AND T2.grad_cohort BETWEEN 20 AND 30"
college_completion,"In female students in year 2012, how many of them from a state with number of schools ranges from 10 to 20?",female refers to gender = 'F'; number of schools refers to schools_count; schools_count BETWEEN 10 AND 20;,SELECT COUNT(T2.race) FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T2.gender = 'F' AND schools_count BETWEEN 10 AND 20 AND T2.year = 2012
college_completion,List the race of institutions in Alabama with number of students greater than the 90% of average number of students of all institutions?,"Alabama refers to state = 'Alabama'; number of students greater than the 90% of average = MULTIPLY(AVG(student_count), 90%) < student_count;",SELECT DISTINCT T2.race FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.student_count > ( SELECT AVG(T1.student_count) * 0.9 FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.state = 'Alabama' ) AND T1.state = 'Alabama'
college_completion,"In year 2010 at schools located in Hawaii, what is the percentage of schools offers an associate's degree?","Hawaii refers to state = 'Hawaii'; associate's degree refers to level = '2-year'; percentage = MULTIPLY(DIVIDE(SUM(level = '2-year' ), count(level)), 1.0);",SELECT CAST(SUM(CASE WHEN T2.level = '2-year' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.level) FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T2.state = 'Hawaii' AND T2.year = 2010
college_completion,"In the state of Connecticut, what is the name of the instution with the highest percent rank for freshman retention percentage within the sector?",name of the institution refers to chronname;  highest percent rank for freshman retention percentage within the sector refers to MAX(retain_percentile);,SELECT chronname FROM institution_details WHERE state = 'Connecticut' AND retain_percentile = ( SELECT MAX(retain_percentile) FROM institution_details WHERE state = 'Connecticut' )
college_completion,What is the website address of the institution with the highest number of White degree-seeking students at 2-year institutions in 2008?,website address refers to site; White refers to race = 'W'; degree-seeking students at 2-year institutions refers to cohort = '2y all'; in 2008 refers to year = '2008';,SELECT T1.site FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T2.race = 'W' AND T2.cohort = '2y all' AND T2.year = 2008 ORDER BY T2.grad_cohort DESC LIMIT 1
college_completion,"In Harvard University, which year recorded the highest number of first-time, full-time, degree-seeking students in the cohort being tracked, minus any exclusions?","Harvard University refers to chronname = 'Harvard University'; highest number of first-time, full-time, degree-seeking students in the cohort being tracked, minus any exclusions refers to MAX(grad_cohort);",SELECT T2.year FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.chronname = 'Harvard University' GROUP BY T2.year ORDER BY SUM(T2.grad_cohort) DESC LIMIT 1
college_completion,"In the state with the highest state appropriations to higher education in fiscal year 2011 per resident, which institution has the lowest number of undergraduates in 2010?",highest state appropriations to higher education in fiscal year 2011 per resident refers to MAX(state_appr_value); lowest number of undergraduates refers to MIN(student_count); in 2010 refers to year = 2010;,SELECT T1.chronname FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON T2.state = T1.state INNER JOIN institution_grads AS T3 ON T3.unitid = T1.unitid WHERE T1.student_count = ( SELECT MIN(T1.student_count) FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON T2.state = T1.state INNER JOIN institution_grads AS T3 ON T3.unitid = T1.unitid WHERE T3.year = 2010 ) AND T3.year = 2010 GROUP BY T1.state ORDER BY SUM(T2.state_appr_value) DESC LIMIT 1
college_completion,"In Yale University, what is the average number of Black students per year who were bachelor's/equivalent-seeking cohort at 4-year institutions between 2002 to 2005?","Yale University refers to chronname = 'Yale University'; average = DIVIDE(COUNT(race = 'B' WHERE cohort = '4y bach AND year BETWEEN 2002 AND 2005), 3); Black refers to race = 'B'; bachelor's/equivalent-seeking cohort at 4-year institutions refers to cohort = '4y bach'; between 2002 to 2005 refers to year BETWEEN '2002' AND '2005';",SELECT AVG(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.chronname = 'Yale University' AND T2.year BETWEEN 2002 AND 2005 AND T2.race = 'B' AND T2.cohort = '4y bach'
college_completion,"Among the Ivy League Schools, which school have the highest number of Hispanic graduates of all time?",Ivy League Schools refers to chronname = 'Brown University' or chronname = 'Columbia University' or chronname = 'Cornell University' or chronname = 'Dartmouth College' or chronname = 'Harvard University' or chronname = 'Princeton University' or chronname = 'University of Pennsylvania' or chronname = 'Yale University'; highest number of hispanic graduates refers to MAX(grad_cohort WHERE race = 'H');,"SELECT T1.chronname FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.chronname IN ( 'Brown University', 'Columbia University', 'Cornell University', 'Dartmouth College', 'Harvard University', 'Princeton University', 'University of Pennsylvania', 'Yale University' ) AND T2.race = 'H' GROUP BY T1.chronname ORDER BY SUM(T2.grad_cohort) DESC LIMIT 1"
college_completion,How many 4-year public institutions are there in the state of Florida? Give all of their names.,4-year refers to level = '4-year'; public refers to control = 'Public'; names refers to chronname;,SELECT T1.chronname FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 WHERE T2.level = '4-year' AND T2.control = 'Public' AND T2.state = 'Florida'
college_completion,"Between the Ivy League Schools, which school's state have the lowest sate appropriations to higher education in fiscal year 2011 per resident?",Ivy League Schools refers to chronname = 'Brown University' or chronname = 'Columbia University' or chronname = 'Cornell University' or chronname = 'Dartmouth College' or chronname = 'Harvard University' or chronname = 'Princeton University' or chronname = 'University of Pennsylvania' or chronname = 'Yale University'; lowest state appropriations to higher education in fiscal year 2011 per resident refers to MIN(state_appr_value);,"SELECT T1.state FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON T2.state = T1.state WHERE T1.chronname IN ( 'Brown University', 'Columbia University', 'Cornell University', 'Dartmouth College', 'Harvard University', 'Princeton University', 'University of Pennsylvania', 'Yale University' ) GROUP BY T1.state ORDER BY SUM(T2.state_appr_value) ASC LIMIT 1"
college_completion,"In the state with the highest number of schools, how many institutions have a percentage of no less than 90 of undergraduates who attend full-time? List all of the institutions' names.",highest number of schools refers to MAX(schools_count); percentage of no less than 90 of undergraduates who attend full-time refers to ft_pct > 90; institutions' names refers to chronname;,"SELECT COUNT(t1.unitid), t1.chronname FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON t1.state = t2.state WHERE t1.ft_pct > 90 ORDER BY t2.schools_count DESC LIMIT 1"
college_completion,What is the average SAT value for incoming students in all of the schools located in the state with the lowest state appropriations to higher education in fiscal year 2011 per resident?,"average = DIVIDE(SUM(med_sat_value), SUM(chronname)); SAT value for incoming students refers to med_sat_value; lowest state appropriations to higher education in fiscal year 2011 per resident refers to MIN(state_appr_value);",SELECT AVG(t1.med_sat_value) FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON t1.state = t2.state ORDER BY t2.state_appr_value LIMIT 1
college_completion,"What is the name of the school with the highest number of first-time, full-time, degree-seeking female students in the cohort being tracked, minus any exclusions who were seeking another type of degree or certificate at a 4-year institution?","name of the school refers to chronname; highest number of first-time, full-time, degree-seeking female students in the cohort being tracked, minus any exclusions refers to MAX(grad_cohort WHERE gender = 'F'); seeking another type of degree or certificate at a 4-year institution refers to cohort = '4y other';",SELECT T1.chronname FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T2.gender = 'F' AND T2.cohort = '4y other' ORDER BY T2.grad_cohort DESC LIMIT 1
college_completion,"Among the Ivy League Schools in 2013, which schools have the highest number of Black students who graduated within 150 percent of normal/expected time who were seeking a bachelor's/equivalent cohort at 4-year institutions?",Ivy League Schools refers to chronname = 'Brown University' or chronname = 'Columbia University' or chronname = 'Cornell University' or chronname = 'Dartmouth College' or chronname = 'Harvard University' or chronname = 'Princeton University' or chronname = 'University of Pennsylvania' or chronname = 'Yale University'; in 2013 refers to year = '2013'; highest number of Black students who graduated within 150 percent of normal/expected time refers to MAX(grad_150 WHERE race = 'B'); seeking a bachelor's/equivalent cohort at 4-year institutions refers to cohort = '4y bach';,"SELECT T1.chronname FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.chronname IN ( 'Brown University', 'Columbia University', 'Cornell University', 'Dartmouth College', 'Harvard University', 'Princeton University', 'University of Pennsylvania', 'Yale University' ) AND T2.year = 2013 AND T2.race = 'B' AND T2.cohort = '4y bach' ORDER BY T2.grad_cohort DESC LIMIT 1"
college_completion,"Between 2011 to 2013, what is the average number of male Hispanic degree-seeking students at 2-year institutions who graduated within 150 percent of normal/expected time in United Education Institute-Huntington Park Campus?",between 2011 to 2013 refers to year BETWEEN '2011' AND '2013'; male refers to gender = 'M'; Hispanic refers to race = 'H'; number of degree-seeking students at 2-year institutions who graduated within 150 percent of normal/expected time refers to grad_150; United Education Institute-Huntington Park Campus refers to chronname = 'United Education Institute-Huntington Park Campus';,SELECT AVG(T2.grad_150) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.chronname = 'United Education Institute-Huntington Park Campus' AND T2.year BETWEEN 2011 AND 2013 AND T2.gender = 'M' AND T2.race = 'H'
college_completion,What is the name of the school with the highest difference in the average completion rate for the national in which it belongs? Indicate the state appropriations to higher education in fiscal year 2011 per resident to which the school belongs.,"name of the school refers to chronname; highest difference in the average completion rate for the national in which it belongs = MAX(SUBTRACT(awards_per_value, awards_per_natl_value)); state appropriations to higher education in fiscal year 2011 per resident to which the school belongs refers to state_appr_value;","SELECT T1.chronname, T2.state_appr_value FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON T2.state = T1.state ORDER BY T1.awards_per_value - T2.awards_per_natl_value DESC LIMIT 1"
public_review_platform,"How many Yelp businesses are there in 'AZ' with less than ""3"" stars?",AZ refers to state = 'AZ'; stars < 3;,SELECT COUNT(business_id) FROM Business WHERE state LIKE 'AZ' AND stars < 3
public_review_platform,What is the quantity of the closed or not running Yelp Businesses in 'AZ'?,closed or not running refers to active = 'False'; AZ refers to state = 'AZ';,SELECT COUNT(business_id) FROM Business WHERE state LIKE 'AZ' AND active LIKE 'False'
public_review_platform,How many long reviews does user No. 36139 give for the Yelp businesses?,long reviews refers to review_length = 'long'; user No. refers to user_id;,SELECT COUNT(review_length) FROM Reviews WHERE user_id = 36139 AND review_length LIKE 'long'
public_review_platform,"How many users have ""uber"" number of fans?",uber number of fans refers to user_fans = 'uber';,SELECT COUNT(user_id) FROM Users WHERE user_fans LIKE 'Uber'
public_review_platform,How many Yelp businesses are opened 24 hours?,open 24 hours refers to attribute_name = 'Open 24 Hours' AND attribute_value = 'true';,SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.attribute_name LIKE 'Open 24 Hours' AND T2.attribute_value LIKE 'TRUE'
public_review_platform,"What kind of ""wi-fi"" does Yelp business No.""10172"" have?",kind of wi-fi refers to attribute_value where attribute_name = 'Wi-Fi'; business No. refers to business_id;,SELECT T2.attribute_value FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.business_id = 10172 AND T1.attribute_name LIKE 'wi-fi'
public_review_platform,"How many ""bars"" are there in the Yelp business?",bars refers to category_name = 'Bars';,SELECT COUNT(T1.category_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id WHERE T1.category_name LIKE 'Bars'
public_review_platform,"How many more ""buffets"" than ""gyms"" in Yelp business?","buffets refers to category_name = 'Buffets'; gyms refers to category_name = 'Gyms'; difference = SUBTRACT(SUM(category_name = 'Buffets'), SUM(category_name = 'Gyms'));",SELECT SUM(CASE WHEN T1.category_name LIKE 'Buffets' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.category_name LIKE 'Gyms' THEN 1 ELSE 0 END) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id
public_review_platform,What business category is the Yelp business which got the most 5 star reviews in?,business category refers to category_name; most 5 star reviews refers to MAX(COUNT(category_name WHERE star_reviews = 5));,SELECT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Reviews AS T4 ON T3.business_id = T4.business_id WHERE T4.review_stars = 5 GROUP BY T1.category_name ORDER BY COUNT(T1.category_name) DESC LIMIT 1
public_review_platform,"In which year did the user who gave the most number of ""5"" star reviews join the Yelp?",year the user join the Yelp refers to user_yelping_since_year; star reviews refers to review_stars;,SELECT T2.user_yelping_since_year FROM Reviews AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T1.review_stars = 5 GROUP BY T2.user_yelping_since_year ORDER BY COUNT(T1.review_stars) DESC LIMIT 1
public_review_platform,"For the user who gave the most number of long reviews, what is his/her averge ratings of all review?",long reviews refers to review_length = 'long'; most number of long reviews refers to MAX(COUNT(review_length = 'long')); average ratings = AVG(review_stars);,SELECT CAST(SUM(T1.review_stars) AS REAL) / COUNT(T1.review_stars) FROM Reviews AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T1.review_length LIKE 'Long' GROUP BY T1.user_id ORDER BY COUNT(T1.review_length) DESC LIMIT 1
public_review_platform,"For the Yelp business which had the most number of ""long"" reviews, which category does it belong to?",long reviews refers to review_length = 'long'; most number of long reviews refers to MAX(COUNT(review_length = 'long')); category refers to category_name;,SELECT T4.category_name FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id INNER JOIN Business_Categories AS T3 ON T2.business_id = T3.business_id INNER JOIN Categories AS T4 ON T3.category_id = T4.category_id WHERE T1.review_length LIKE 'Long' GROUP BY T2.business_id ORDER BY COUNT(T1.review_length) DESC LIMIT 1
public_review_platform,"For the Yelp business which had the most number of ""short"" tips, which category does it belong to?",short tips refers to tip_length = 'short'; most number of short tips refers to MAX(COUNT(tip_length = 'short')); category refers to category_name;,SELECT DISTINCT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Tips AS T4 ON T3.business_id = T4.business_id WHERE T4.tip_length LIKE 'short'
public_review_platform,"In which year did the user who has given the most number of ""short"" tips join the Yelp?",year the user join the Yelp refers to user_yelping_since_year; most number of short tips refers to MAX(COUNT(tip_length = 'Short'));,SELECT T2.user_yelping_since_year FROM Tips AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T1.tip_length LIKE 'short' GROUP BY T2.user_yelping_since_year ORDER BY COUNT(T1.tip_length) DESC LIMIT 1
public_review_platform,"User No. 70271 only has given one tip to the Yelp business, which category was that business belonged to?",user No. refers to user_id; short tip refers to tip_length = 'short'; category refers to category_name;,SELECT T4.category_name FROM Tips AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id INNER JOIN Business_Categories AS T3 ON T2.business_id = T3.business_id INNER JOIN Categories AS T4 ON T3.category_id = T4.category_id WHERE T1.user_id = 70271
public_review_platform,"There was only one tip that user No. 69722 gave to the Yelp business, what was the ratings of that business?","short tip refers to tip_lenghth = 'short'; user No. refers to user_id; ratings refers to stars; stars = 5 means great experience; stars = 4 means good experience; stars = 3 means average experience; stars = 2 means bad experience; stars = 1 means terrible experience;
",SELECT T2.stars FROM Tips AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T1.user_id = 69722
public_review_platform,"Give the percentage of ""Automotive"" businesses among all the Yelp businesses.","automotive businesses refers to category_name = 'Automotive'; percentage = MULTIPLY(DIVIDE(SUM(category_name = 'Automotive'), COUNT(business_id)), 1.0);","SELECT CAST(SUM(CASE WHEN T2.category_name LIKE 'Automotive' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.business_id) AS ""percentage"" FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id"
public_review_platform,"What percentage more for the ""Women's Clothing"" Yelp businesses to ""Men's Clothing""?","Women's clothing refers to category_name = 'Women''s Clothing'; Men's clothing refers to category_name = 'Men''s Clothing'; percentage more = MULTIPLY(DIVIDE(SUBTRACT(SUM(category_name = 'Women''s Clothing'), SUM(category_name = 'Men''s Clothing')), COUNT(business_id)), 1.0);","SELECT CAST(SUM(CASE WHEN T2.category_name LIKE 'Women''s Clothing' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.business_id) - CAST(SUM(CASE WHEN T2.category_name LIKE 'Men''s Clothing' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.business_id) AS ""more percentage"" FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id"
public_review_platform,"Give the number of users who joined Yelp since ""2004"".",joined yelp since 2004 refers to user_yelping_since_year = 2004;,SELECT COUNT(user_id) FROM Users WHERE user_yelping_since_year = 2004
public_review_platform,"How many users who have joined Yelp since ""2005"" but have no fans?",joined Yelp since 2005 refers to user_yelping_since_year = 2005; no fans refers to user_fans = 'None';,SELECT COUNT(user_id) FROM Users WHERE user_yelping_since_year = 2005 AND user_fans LIKE 'None'
public_review_platform,"State the number of actively running Yelp businesses in ""Tolleson"".",actively running refers to active = 'TRUE'; Tolleson refers to city = 'Tolleson';,SELECT COUNT(business_id) FROM Business WHERE city LIKE 'Tolleson' AND active LIKE 'TRUE'
public_review_platform,"What is the number of reviews from user No. ""21679""?",user No. refers to user_id;,SELECT COUNT(review_length) FROM Reviews WHERE user_id = 21679
public_review_platform,"How many ""5"" star reviews does the Yelp business No. ""10682"" get?",5 star reviews refers to review_stars = 5; business No. refers to business_id;,SELECT COUNT(review_length) FROM Reviews WHERE business_id = 10682 AND review_stars = 5
public_review_platform,"Which closed/not running Yelp business in ""Sun City"" has got the most reviews? Give the business id.",closed/not running refers to active = 'False'; most reviews refers to MAX(COUNT(user_id));,SELECT T1.business_id FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city LIKE 'Sun City' AND T1.active LIKE 'FALSE' GROUP BY T1.business_id ORDER BY COUNT(T2.review_length) DESC LIMIT 1
public_review_platform,"For the only Yelp business in ""Yuma"" city, how many ""medium"" reviews did it get?",medium reviews refers to review_length = 'Medium';,SELECT COUNT(T2.review_length) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city LIKE 'Yuma' AND T2.review_length LIKE 'Medium'
public_review_platform,"Does Yelp business No.""4960"" have TV?",business No. refers to business_id; have TV refers to attribute_name = 'Has TV';,SELECT DISTINCT CASE WHEN T1.attribute_name LIKE 'Has TV' THEN 'yes' ELSE 'no' END FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.business_id = 4960
public_review_platform,"Give the number of ""dogs allowed"" Yelp businesses.",number of Yelp businesses refers to business_id; dogs allowed refers to attribute_name = 'Dogs Allowed' AND attribute_value = 'true';,SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.attribute_name LIKE 'Dogs Allowed' AND T2.attribute_value LIKE 'TRUE'
public_review_platform,"How many hours does the Yelp business No. ""5734"" open on Saturday?","how many hours = SUBTRACT(closing_time, opening_time); business No. refers to business_id; open on Saturday refers to day_of_week = 'Saturday';","SELECT T1.closing_time - T1.opening_time AS ""hour"" FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id WHERE T2.day_of_week LIKE 'Saturday' AND T1.business_id = 5734"
public_review_platform,"Tell the number of ""hair removal"" Yelp businesses.",hair removal refers to category_name = 'Hair Removal';,SELECT COUNT(T1.category_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id WHERE T1.category_name LIKE 'Hair Removal'
public_review_platform,"How many more ""Chinese"" than ""Filipino"" Yelp businesses?","Chinese refers to category_name = 'Chinese'; Filipino refers to category_name = 'Filipino'; how many more = SUBTRACT(SUM(category_name = 'Chinese'), SUM(category_name = 'Filipino'));",SELECT SUM(CASE WHEN T1.category_name LIKE 'Chinese' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.category_name LIKE 'Filipino' THEN 1 ELSE 0 END) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id
public_review_platform,"User No.""63469"" has got ""1"" like for a tip to the Yelp business, which city is that business located in?",user No. refers to user_id;,SELECT T1.city FROM Business AS T1 INNER JOIN Tips AS T2 ON T1.business_id = T2.business_id WHERE T2.likes = 1 AND T2.user_id = 63469
public_review_platform,"How many types of music does Yelp business No.""1141"" have?","types of music refers to attribute_name LIKE '%music%' WHERE attribute_value = 'true'; business No. refers to business_id;
",SELECT COUNT(T1.attribute_name) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.attribute_value LIKE 'TRUE' AND T2.business_id = 1141
public_review_platform,"How many ""cute"" type of compliments does user No. 57400 get?",type of compliments refers to compliment_type; user No. refers to user_id;,SELECT COUNT(T1.compliment_type) FROM Compliments AS T1 INNER JOIN Users_Compliments AS T2 ON T1.compliment_id = T2.compliment_id WHERE T1.compliment_type LIKE 'cute' AND T2.user_id = 57400
public_review_platform,"Who has got the most number of ""funny"" type of compliments? Give the user ID.",type of compliments refers to compliment_type; most number of funny type of compliments refers to MAX(COUNT(number of compliments = 'high' WHERE compliment_type = 'funny'));,SELECT user_id FROM Users_Compliments WHERE compliment_id IN ( SELECT compliment_id FROM Compliments WHERE compliment_type LIKE 'funny' )
public_review_platform,"Give the number of ""drive-thru"" businesses in ""Scottsdale"" with business ID number less than ""1000"".",drive-thru refers to attribute_name = 'Drive-Thru' AND attribute_value = 'true'; Scottsdale refers to city = 'Scottsdale'; business_id < 1000;,SELECT T2.business_id FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T3.business_id < 1000 AND T3.city LIKE 'Scottsdale' AND T1.attribute_name LIKE 'Drive-Thru' AND T2.attribute_value LIKE 'TRUE'
public_review_platform,What is the average rating for the all Yelp businesses that open 24 hours?,open 24 hours refers to attribute_name = 'Open 24 Hours' AND attribute_value = 'true'; rating refers to stars; average rating = AVG(stars);,"SELECT CAST(SUM(T3.stars) AS REAL) / COUNT(T2.business_id) AS ""avg"" FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.attribute_name LIKE 'Open 24 Hours' AND T2.attribute_value LIKE 'TRUE'"
public_review_platform,"For all the Yelp businesses that allow customers bring their own beer, what percentage of them are in ""Phoenix""?","bring their own beer refers to attribute_name = 'BYOB' AND attribute_value = 'TRUE'; Phoenix refers to city = 'Phoenix'; percentage = MULTIPLY(DIVIDE(SUM(city = 'Phoenix'), COUNT(business_id)), 1.0)","SELECT CAST(SUM(CASE WHEN T3.city LIKE 'Phoenix' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.business_id) AS ""percentage"" FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.attribute_name LIKE 'BYOB' AND T2.attribute_value LIKE 'TRUE'"
public_review_platform,List the names of business in AZ with a rating of 5.,AZ refers to state = 'AZ'; rating refers to stars;,SELECT business_id FROM Business WHERE state LIKE 'AZ' AND stars = 5
public_review_platform,How many active businesses of city are underrated?,active businesses refers to active = 'true'; underrated refers to review_count = 'Low';,SELECT COUNT(business_id) FROM Business WHERE review_count LIKE 'Low' AND active LIKE 'TRUE'
public_review_platform,How many user ids from 1 to 20 have no fan users and have low ratings?,user_id BETWEEN 1 AND 20; no fan users refers to user_fans = 'None'; low ratings refers to user_review_count = 'Low';,SELECT COUNT(user_id) FROM Users WHERE user_id BETWEEN 1 AND 20 AND user_fans LIKE 'None' AND user_review_count LIKE 'Low'
public_review_platform,Indicate the opening hours of businesses are with category in fashion.,opening hours refers to opening_time; category refers to category_name;,SELECT T4.opening_time FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Business_Hours AS T4 ON T3.business_id = T4.business_id WHERE T1.category_name LIKE 'Fashion'
public_review_platform,How many businesses operating in the shopping business have opening times before 8AM?,shopping business refers to category_name = 'Shopping'; opening time before 8AM refers to opening_time < '8AM';,SELECT COUNT(T3.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Business_Hours AS T4 ON T3.business_id = T4.business_id WHERE T4.opening_time < '8AM' AND T1.category_name LIKE 'Shopping'
public_review_platform,Provide name of businesses whose category is pets and are still opened after 9PM.,category refers to category_name; open after 9pm refers to closing_time > '9PM';,SELECT T3.business_id FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Business_Hours AS T4 ON T3.business_id = T4.business_id WHERE T4.closing_time > '9PM' AND T1.category_name LIKE 'Pets'
public_review_platform,How many businesses with the category are open from Monday to Thursday?,open from Monday to Thursday refers to day_of_week BETWEEN Monday AND Thursday and day_id BETWEEN 2 AND 5;,SELECT COUNT(T2.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Business_Hours AS T4 ON T3.business_id = T4.business_id INNER JOIN Days AS T5 ON T4.day_id = T5.day_id WHERE T5.day_of_week LIKE 'Monday' OR T5.day_of_week LIKE 'Tuesday' OR T5.day_of_week LIKE 'Wednesday' OR T5.day_of_week LIKE 'Thursday'
public_review_platform,"Please indicate the review count of the ""active life"" businesses in Phoenix.",active life refers to category_name = 'Active Life'; Phoenix refers to city = 'Phoenix';,SELECT COUNT(*) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.category_name = 'Active Life' AND T3.city = 'Phoenix'
public_review_platform,Please list the businesses name with a rating less than 5 whose category name is men's clothing.,businesses name refers to business_id; rating refers to stars; stars < 5;,SELECT T2.business_id FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.category_name LIKE 'Men''s Clothing' AND T3.stars < 5
public_review_platform,Which businesses are no longer in business but have a low number of votes useful?,no longer in business refers to active = 'False'; low number of votes useful refers to review_votes_useful = 'Low';,SELECT DISTINCT T1.business_id FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id INNER JOIN Business_Categories AS T3 ON T2.business_id = T3.business_id INNER JOIN Categories AS T4 ON T3.category_id = T4.category_id WHERE T2.active LIKE 'FALSE' AND T1.review_votes_useful LIKE 'Low'
public_review_platform,Please list the businesses names whose length of user review is long with business id from 1 to 20.,businesses names refers to business_id; length of user review is long refers to review_length = 'Long'; business_id BETWEEN 1 AND 20;,SELECT T4.category_name FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id INNER JOIN Business_Categories AS T3 ON T2.business_id = T3.business_id INNER JOIN Categories AS T4 ON T3.category_id = T4.category_id WHERE T1.review_length LIKE 'Long' AND T3.category_id BETWEEN 1 AND 20 GROUP BY T4.category_name
public_review_platform,Please provide the attribute values ​​of the bussinesses with fashion in Scottsdale.,fashion refers to category_name = 'Fashion'; Scottsdale refers to city = 'Scottsdale';,SELECT T2.attribute_value FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Business_Categories AS T3 ON T1.business_id = T3.business_id INNER JOIN Categories AS T4 ON T3.category_id = T4.category_id WHERE T4.category_name LIKE 'Fashion' AND T1.city LIKE 'Scottsdale'
public_review_platform,How many compliments received from medium users that Phoenix city achieved?,medium refers to number_of_compliments = 'Medium';,SELECT COUNT(T1.number_of_compliments) FROM Users_Compliments AS T1 INNER JOIN Reviews AS T2 ON T1.user_id = T2.user_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T3.city LIKE 'Phoenix' AND T1.number_of_compliments LIKE 'Medium'
public_review_platform,Provide the businesses name in Tempe city whose opening hours are earlier than 8AM.,opening hours refers to opening_time; earlier than 8AM refers to opening_time < '8AM';,SELECT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Business_Hours AS T4 ON T3.business_id = T4.business_id WHERE T3.city LIKE 'Tempe' AND T4.opening_time < '8AM'
public_review_platform,How many businesses in Glendale city that are still running is opened from 8AM to 6PM?,still running refers to active = 'true'; opened from 8AM to 6PM refers to opening_time = '8AM' AND closing_time = '6PM';,SELECT COUNT(T1.category_name) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Business_Hours AS T4 ON T3.business_id = T4.business_id WHERE T3.city LIKE 'Glendale' AND T4.opening_time LIKE '8AM' AND T4.closing_time LIKE '6PM'
public_review_platform,How many businesses are there in Phoenix city? Find the percentage of businesses in Phoenix city in the total city.,"percentage = MULTIPLY(DIVIDE(SUM(city = 'Phoenix' END), COUNT(category_id)), 1.0);","SELECT SUM(CASE WHEN T3.city LIKE 'Phoenix' THEN 1 ELSE 0 END) AS ""num"" , CAST(SUM(CASE WHEN T3.city LIKE 'Phoenix' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.city) FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T1.business_id = T3.business_id"
public_review_platform,How many cities have businesses with active life category? Find the percentage of the city where the review count that is low in total review count.,"category refers to category_name; percentage = MULTIPLY(DIVIDE(SUM(category_name = 'Active Life'), SUM(review_count = 'LOW')), 1.0);","SELECT SUM(CASE WHEN T2.category_name LIKE 'Active Life' THEN 1 ELSE 0 END) AS ""num"" , CAST(SUM(CASE WHEN T3.city LIKE 'Phoenix' THEN 1 ELSE 0 END) AS REAL) * 100 / ( SELECT COUNT(T3.review_count) FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T1.business_id = T3.business_id WHERE T3.review_count LIKE 'Low' ) FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T1.business_id = T3.business_id"
public_review_platform,How many active businesses are there in Phoenix?,active businesses refers to active = 'true'; Phoenix refers to city = 'Phoenix';,SELECT COUNT(business_id) FROM Business WHERE city LIKE 'Phoenix' AND active LIKE 'TRUE'
public_review_platform,"How many businesses in Scottsdale are rated as ""wonderful experience""?",Scottsdale refers to city = 'Scottsdale'; rated refers to stars; rated as wonderful experience refers to stars > 3;,SELECT COUNT(business_id) FROM Business WHERE city LIKE 'Scottsdale' AND stars > 3
public_review_platform,What is the average rating of inactive businesses?,"rating refers to stars; inactive refers to active = 'False'; average rating of inactive businesses = DIVIDE(SUM(stars), COUNT(business_id));","SELECT CAST(SUM(stars) AS REAL) / COUNT(business_id) AS ""average"" FROM Business WHERE active LIKE 'FALSE'"
public_review_platform,How many businesses in AZ state have the beer_and_wine attribute?,beer_and_wine refers to attribute_value = 'beer_and_wine';,SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id WHERE T2.attribute_value LIKE 'beer_and_wine' AND T1.state LIKE 'AZ'
public_review_platform,Which city has the most businesses whose attribute is full_bar?,most business refers to MAX(business_id); full_bar refers to attribute_value = 'full_bar';,SELECT T1.city FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id WHERE T2.attribute_value LIKE 'full_bar' GROUP BY T1.city
public_review_platform,How many businesses in the fashion industry are rated 5 stars?,fashion industry refers to category_name = 'Fashion';,SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T1.stars = 5 AND T3.category_name LIKE 'Fashion'
public_review_platform,Which city has the highest number of businesses in the food industry whose number of reviews is high?,highest number of businesses refers to MAX(business_id); food industry refers to category_name = 'Food'; number of reviews is high refers to review_count = 'High';,SELECT T1.city FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T1.review_count LIKE 'High' AND T3.category_name LIKE 'Food' GROUP BY T1.city
public_review_platform,Please list all business IDs in Mesa city that review stars of over 3.,stars > 3;,SELECT T1.business_id FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city LIKE 'Mesa' AND T2.review_stars > 3 GROUP BY T1.business_id
public_review_platform,Which city has the least number of businesses whose amount of funny votes is low?,least number of businesses refers to MIN(business_id); funny votes is low refers to review_votes_funny = 'Low';,SELECT T1.city FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T2.review_votes_funny LIKE 'low' GROUP BY T1.city
public_review_platform,What percentage of businesses are in the Real Estate sector and have the rating of 5 out of all businesses in Chandler?,"Real Estate sector refers to category_name = 'Real Estate'; rating of 5 refers to stars = 5; Chandler refers to city = 'Chandler'; percentage = MULTIPLY(DIVIDE(SUM(category_name = 'Real Estate' and stars = 5), COUNT(business_id)), 100);","SELECT CAST(SUM(CASE WHEN T1.stars = 5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.business_id) AS ""percentage"" FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T1.city LIKE 'Chandler' AND T3.category_name LIKE 'Real Estate'"
public_review_platform,How many users who started yelping since 2012 have sent a high number of funny votes?,users who started yelping in 2012 refers to user_yelping_since_year = '2012'; high number of funny votes refers to user_votes_funny = 'High';,SELECT COUNT(user_id) FROM Users WHERE user_yelping_since_year = 2012 AND user_votes_funny LIKE 'High'
public_review_platform,What is the number of useful votes that the user 52592 received when reviewed for business number 2?,number of useful votes refers to review_votes_useful; business number refers to business_id;,SELECT review_votes_useful FROM Reviews WHERE user_id = 52592 AND business_id = 2
public_review_platform,What are the attribute numbers that are related to payment?,attribute numbers refers to attribute_id; related to payment refers to attribute_name like '%payment%';,SELECT attribute_id FROM Attributes WHERE attribute_name LIKE '%payment%'
public_review_platform,How long was the review for business number 2 that user number 612 wrote?,how long was the review refers to review_length; business number refers to business_id; user number refers to user_id;,SELECT review_length FROM Reviews WHERE user_id = 612 AND review_stars = 5 AND business_id = 2
public_review_platform,How many businesses are actively running in Gilbert City?,actively running refers to active = 'true';,SELECT COUNT(business_id) FROM Business WHERE city LIKE 'Gilbert' AND active LIKE 'True'
public_review_platform,How many businesses in the AZ state got low quality of reviews?,low quality of reviews refers to review_count = 'low';,SELECT COUNT(business_id) FROM Business WHERE state LIKE 'AZ' AND review_count LIKE 'Low'
public_review_platform,"Please state any three business numbers in AZ state that have received the ""Great experience"" review stars.",business numbers refers to business_id; great experience review stars refers to review_stars = 5;,SELECT DISTINCT T2.business_id FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T2.state LIKE 'AZ' AND T1.review_stars = 5 LIMIT 3
public_review_platform,Please name one attribute that business number 2 does not have.,business number refers to business_id; business_id = 2; does not have refers to attribute_value = 'none';,SELECT T1.attribute_name FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.attribute_value LIKE 'none' LIMIT 1
public_review_platform,"How many ""cool"" compliments did user number 33 receive?",cool compliments refers to compliment_type = 'cool'; user number refers to user_id;,SELECT COUNT(T2.compliment_type) FROM Users_Compliments AS T1 INNER JOIN Compliments AS T2 ON T1.compliment_id = T2.compliment_id WHERE T1.user_id = 33 AND T2.compliment_type LIKE 'cool'
public_review_platform,What are the opening hours of business number 53 on Friday?,opening hours refers to opening_time; business number refers to business_id; Friday refers to day_of_week = 'Friday';,"SELECT T1.closing_time - T1.opening_time AS ""opening hours"" FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id WHERE T2.day_of_week LIKE 'Friday' AND T1.business_id = 53"
public_review_platform,What are the attributes that business number 56 have?,business number refers to business_id; attributes that business have refers to attribute_value = 'true';,SELECT T1.attribute_name FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.attribute_value LIKE 'TRUE' AND T2.business_id = 56
public_review_platform,What are the categories that business number 15 belongs to?,business number refers to business_id;,SELECT T2.category_name FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id WHERE T1.business_id = 15
public_review_platform,"How many businesses are there in Scottsdale city under the category of ""Beauty & Spas""?",category refers to category_name;,SELECT COUNT(T2.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T3.city LIKE 'Scottsdale' AND T1.category_name LIKE 'Beauty & Spas'
public_review_platform,"Please list any two user numbers that have an ""Uber"" number of cute compliments.",user numbers refers to user_id; Uber number refers to number_of_compliments = 'Uber'; cute compliments refers to compliment_type = 'cute';,SELECT T1.user_id FROM Users_Compliments AS T1 INNER JOIN Compliments AS T2 ON T1.compliment_id = T2.compliment_id WHERE T1.number_of_compliments LIKE 'Uber' AND T2.compliment_type LIKE 'cute' LIMIT 2
public_review_platform,"How many businesses operating in the ""Accessories"" category have received a ""wonderful experience"" review from users?",Accessories category refers to category_name = 'Accessories'; wonderful experience review refers to stars > 3;,SELECT COUNT(T2.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T3.stars > 3 AND T1.category_name LIKE 'Accessories'
public_review_platform,How long does business number 12 in Scottsdale stay open on day number 3?,business number refers to business_id; Scottsdale refers to city = 'Scottsdale'; day number refers to day_id;,"SELECT T2.closing_time - T2.opening_time AS ""hour"" FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id WHERE T1.business_id = 12 AND T1.city LIKE 'Scottsdale' AND T2.day_id = 3"
public_review_platform,How many businesses in AZ state do not open on Thursday?,do not open on Thursday refers to day_of_week = 'Thursday' AND label_time_4 = 'None';,SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Checkins AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T2.label_time_4 LIKE 'None' AND T1.state LIKE 'AZ' AND T3.day_of_week LIKE 'Thursday'
public_review_platform,How many businesses of Yelp are in Scottsdale?,Scottsdale refers to city = 'Scottsdale';,SELECT COUNT(business_id) FROM Business WHERE city LIKE 'Scottsdale'
public_review_platform,"Among the Yelp_Businesses in Arizona, how many of them are still running?",Arizona refers to state = 'AZ'; still running refers to active = 'true';,SELECT COUNT(business_id) FROM Business WHERE state LIKE 'AZ' AND active LIKE 'True'
public_review_platform,How many Yelp_Businesses in Scottsdale have received positive comments in the Elitestar rating?,Scottsdale refers to city = 'Scottsdale'; positive comments refers to stars > 3; Elitestar rating refers to stars;,SELECT COUNT(business_id) FROM Business WHERE city LIKE 'Scottsdale' AND stars > 3
public_review_platform,"Which city has more Yelp_Business that's more appealing to users, Scottsdale or Anthem?",more appealing to users refers to MAX(review_count);,SELECT city FROM Business ORDER BY review_count DESC LIMIT 1
public_review_platform,How many Yelp_Businesses in Arizona have a Elitestar rating of over 4?,Arizona refers to state = 'AZ'; Elitestar rating of over 4 refers to stars > 4;,SELECT COUNT(business_id) FROM Business WHERE state LIKE 'AZ' AND stars > 4
public_review_platform,How many Yelp_Businesses are there in Arizona in total?,Arizona refers to state = 'AZ';,SELECT COUNT(business_id) FROM Business WHERE state LIKE 'AZ'
public_review_platform,Please list the cities of the Yelp_Businesses that have gotten a 5 in the Elitestar rating.,5 in the Elitestar rating refers to stars = 5;,SELECT city FROM Business WHERE stars = 5 GROUP BY city
public_review_platform,How many reviews have the user whose ID is 3 posted?,,SELECT COUNT(review_length) FROM Reviews WHERE user_id = 3
public_review_platform,How many reviews made by user whose ID is 3 are long?,long refers to review_length = 'Long';,SELECT COUNT(review_length) FROM Reviews WHERE user_id = 3 AND review_length LIKE 'Long'
public_review_platform,"Among the long reviews made by user ID 3, how many of them have received a medium number of useful votes?",long reviews refers to review_length = 'Long'; medium number of useful votes refers to review_votes_useful = 'medium';,SELECT COUNT(review_length) FROM Reviews WHERE user_id = 3 AND review_length LIKE 'Long' AND review_votes_useful LIKE 'Medium'
public_review_platform,How many users have joined Yelp since the year 2012?,since year 2012 refers to user_yelping_since_year = '2012',SELECT COUNT(user_id) FROM Users WHERE user_yelping_since_year = 2012
public_review_platform,Please list the IDs of the users who have a high number of followers.,high number of followers refers to user_fans = 'High',SELECT user_id FROM Users WHERE user_fans LIKE 'High' GROUP BY user_id
public_review_platform,How many Yelp_Businesses do not provide alcohol?,"do not provide alcohol refers to attribute_name = 'Alcohol'and attribute_value = 'none'
",SELECT COUNT(T1.attribute_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.attribute_name LIKE 'Alcohol' AND T2.attribute_value LIKE 'none'
public_review_platform,"Among the Yelp_Businesses in Arizona, how many of them do not provide alcohol?",Arizona refers to state = 'AZ'; do not provide alcohol refers to attribute_name = 'Alcohol' and attribute_value = 'none',SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.attribute_name LIKE 'Alcohol' AND T2.attribute_value LIKE 'none' AND T3.state LIKE 'AZ'
public_review_platform,Please list the business IDs of all the Yelp_Businesses that are good for kids.,"good for kids refers to attribute_name = 'Good for Kids' and attribute_value = 'true'
",SELECT T2.business_id FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.attribute_name LIKE 'Good for Kids' AND T2.attribute_value LIKE 'TRUE'
public_review_platform,"How many Yelp_Business falls under the category of ""Shopping""?","category of ""Shopping"" refers to category_name = 'Shopping'",SELECT COUNT(T1.category_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id WHERE T1.category_name LIKE 'Shopping'
public_review_platform,Under which categories is Yelp_Business no. 1?,categories refers to category_name; Yelp_Business no.1 refers to business_id = 1,SELECT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id WHERE T2.business_id = 1
public_review_platform,"Among the Yelp_Businesses which are still running, how many of them fall under the category of ""Food""?","are still running refers to active = 'true'; the category of ""Food"" refers to category_name = 'Food'",SELECT COUNT(T3.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Tips AS T4 ON T3.business_id = T4.business_id WHERE T1.category_name LIKE 'Food' AND T3.active LIKE 'TRUE'
public_review_platform,"How many Yelp_Business in Anthem are under the category of ""Food""?","in Anthem refers to city = 'Anthem'; the category of ""Food"" refers to category_name = 'Food'",SELECT COUNT(T3.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.category_name LIKE 'Food' AND T3.city LIKE 'Anthem'
public_review_platform,"Please list the business ID of the Yelp_Business with the highest Elitestar rating under the category ""Food"".","under the category ""Food"" refers to category_name = 'Food'",SELECT T2.business_id FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.category_name LIKE 'Food' ORDER BY T3.stars DESC LIMIT 1
public_review_platform,"How many Yelp_Business under the category of ""Food"" are good for kids?","under the category of ""Food"" refers to category_name = 'Food'; are good for kids refers to attribute_name = 'Good for Kids' and attribute_value = 'true'",SELECT COUNT(T3.stars) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Business_Attributes AS T4 ON T3.business_id = T4.business_id INNER JOIN Attributes AS T5 ON T4.attribute_id = T5.attribute_id WHERE T1.category_name LIKE 'Food' AND T5.attribute_name LIKE 'Good for Kids' AND T4.attribute_value LIKE 'TRUE'
public_review_platform,How many Yelp_Business in Arizona has user no. 3 reviewed?,in Arizona refers to state = 'AZ'; user no. 3 refers to user_id = 3,SELECT COUNT(T2.business_id) FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T2.state LIKE 'AZ' AND T1.user_id = 3
public_review_platform,Please list all the categories of the Yelp_Business in Arizona.,categories refers to category_name; in Arizona refers to state = 'AZ',SELECT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T3.state LIKE 'AZ' GROUP BY T1.category_name
public_review_platform,How long does Yelp_Business no.1 open on Tuesdays?,"""How long"" and ""how much time"" are synonyms; how much time does this business open refers to subtract(closing_time, opening_time); Yelp_Business no.1 refers to business_id = 1; Tuesdays refers to day_of_week = 'Tuesday'","SELECT T1.closing_time - T1.opening_time AS ""opening hours"" FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id WHERE T2.day_of_week LIKE 'Tuesday' AND T1.business_id = 1"
public_review_platform,When does Yelp_Business no.1 open on Tuesdays?,Yelp_Business no.1 refers to business_id = 1; open on refers to opening_time; Tuesdays refers to day_of_week = 'Tuesday',SELECT T1.opening_time FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id WHERE T2.day_of_week LIKE 'Tuesday' AND T1.business_id = 1
public_review_platform,How many Yelp_Business close after 8PM on Mondays?,close after 8PM refers to closing_time = '9PM' or closing_time = '10PM' closing_time = '11PM' closing_time = '12PM'; Mondays refers to day_of_week = 'Monday',SELECT COUNT(T1.business_id) FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id WHERE T2.day_of_week LIKE 'Monday' AND T1.closing_time > '8PM'
public_review_platform,Please list the opening time on Mondays of all the Yelp_Businesses in Anthem that are still running.,Mondays refers to day_of_week = 'Monday'; in Anthem refers to city = 'Anthem'; are still running refers to active = 'true',SELECT T1.opening_time FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id INNER JOIN Business AS T3 ON T1.business_id = T3.business_id WHERE T2.day_of_week LIKE 'Monday' AND T3.city LIKE 'Anthem' AND T3.active LIKE 'True' GROUP BY T1.opening_time
public_review_platform,"Among the Yelp_Business in Arizona, how many of them closes at 12PM on Sundays?",in Arizona refers to state = 'AZ'; closes at 12PM refers to closing_time = '12PM'; on Sundays refers to day_of_week = 'Sunday',SELECT COUNT(T1.business_id) FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id INNER JOIN Business AS T3 ON T1.business_id = T3.business_id WHERE T2.day_of_week LIKE 'Sunday' AND T1.closing_time LIKE '12PM' AND T3.state LIKE 'AZ'
public_review_platform,Please list the categories of the Yelp_Business that closes at 12PM on Sundays.,categories refers to category_name; closes at 12PM refers to closing_time = '12PM'; on Sundays refers to day_of_week = 'Sunday',SELECT T4.category_name FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id INNER JOIN Business_Categories AS T3 ON T1.business_id = T3.business_id INNER JOIN Categories AS T4 ON T4.category_id = T4.category_id WHERE T1.closing_time = '12PM' AND T2.day_of_week = 'Sunday' GROUP BY T4.category_name
public_review_platform,"How many ""Good for Kids"" Yelp_Businesses are open everyday of the week?",Good for Kids refers to attribute_name = 'Good for Kids'and attribute_value = 'true'; open everyday refers to day_id between 1 and 7,"SELECT COUNT(T1.business_id) FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id INNER JOIN Business_Attributes AS T3 ON T1.business_id = T3.business_id INNER JOIN Attributes AS T4 ON T4.attribute_id = T4.attribute_id WHERE T2.day_id IN (1, 2, 3, 4, 5, 6, 7) AND T4.attribute_name = 'Good for Kids' AND T3.attribute_value = 'true'"
public_review_platform,How many users became an elite user the same year they joined Yelp?,became an elite user the same year they joined Yelp refers to user_yelping_since_year = year_id,SELECT COUNT(T1.user_id) FROM Users AS T1 INNER JOIN Elite AS T2 ON T1.user_id = T2.user_id WHERE T1.user_yelping_since_year = T2.year_id
public_review_platform,"What is the longest business time on Mondays for a Yelp_Business under the category ""Shopping""?","longest business time refers to max(subtract(closing_time, opening_time)); on Mondays refers to day_of_week = 'Monday';  category ""Shopping"" refers to category_name = 'Shopping'","SELECT T1.closing_time + 12 - T1.opening_time AS ""hour"" FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id INNER JOIN Business AS T3 ON T1.business_id = T3.business_id INNER JOIN Business_Categories AS T4 ON T3.business_id = T4.business_id INNER JOIN Categories AS T5 ON T4.category_id = T5.category_id WHERE T2.day_of_week LIKE 'Monday' AND T5.category_name LIKE 'Shopping' ORDER BY T1.closing_time + 12 - T1.opening_time DESC LIMIT 1"
public_review_platform,Please list the business IDs of the Yelp_Business that have a business time of longer than 12 hours on Sundays.,"business time of longer than 12 hours refers to subtract(closing_time, opening_time) > 12; on Sundays refers to day_of_week = 'Sunday'",SELECT T1.business_id FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id INNER JOIN Business AS T3 ON T1.business_id = T3.business_id WHERE T1.closing_time + 12 - T1.opening_time > 12 AND T2.day_of_week LIKE 'Sunday' GROUP BY T1.business_id
public_review_platform,How many elite users have reviewed Yelp_Business no.1?,Yelp_Business no.1 refers to business_id = 1,SELECT COUNT(T1.user_id) FROM Users AS T1 INNER JOIN Elite AS T2 ON T1.user_id = T2.user_id INNER JOIN Reviews AS T3 ON T1.user_id = T3.user_id WHERE T3.business_id = 1
public_review_platform,"Among the users who have posted more than 10 reviews, how many users are elite users?",posted more than 10 reviews refers to count(Reviews.user_id) > 10,SELECT COUNT(T4.user_id) FROM ( SELECT T1.user_id FROM Users AS T1 INNER JOIN Elite AS T2 ON T1.user_id = T2.user_id INNER JOIN Reviews AS T3 ON T1.user_id = T3.user_id WHERE T3.user_id IS NOT NULL GROUP BY T3.user_id HAVING COUNT(T3.user_id) > 10 ) T4
public_review_platform,Which Yelp_Business in Arizona gets the most number of reviews?,Arizona refers to state = 'AZ'; gets the most number of reviews refers to max(count(Reviews.business_id)),SELECT T1.user_id FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T2.state LIKE 'AZ' GROUP BY T1.user_id ORDER BY COUNT(T1.user_id) DESC LIMIT 1
public_review_platform,How many stars on average does a Yelp_Business in Anthem get from a user review?,in Anthem refers to city = 'Anthem'; stars on average = avg(review_stars),SELECT AVG(T2.review_stars) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city LIKE 'Anthem'
public_review_platform,How many stars on average does user no.3 give to Yelp_Business in Arizona?,user no.3 refers to user_id = 3; in Arizona refers to state = 'AZ'; stars on average = avg(review_stars(user_id = 3)),SELECT AVG(T2.review_stars) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.state LIKE 'AZ' AND T2.user_id = 3
public_review_platform,What is the average business time for Yelp_Business no.1 on weekends?,"Yelp_Business no.1 refers to business_id = 1; on weekends refers to day_of_week = 'Saturday' or day_of_week = 'Sunday'; average business time refers to DIVIDE(SUBTRACT(closing_time, opening_time), 2)","SELECT T1.closing_time + 12 - T1.opening_time AS ""avg opening hours"" FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id WHERE T1.business_id = 1 AND (T2.day_of_week = 'Sunday' OR T2.day_of_week = 'Sunday')"
public_review_platform,What is the average Elitestar rating for a Yelp_Business that closes at 12PM on Sundays?,"average Elitestar rating refers to DIVIDE(SUM(stars), COUNT(business_id)); closes at 12PM refers to closing_time = '12PM'; on Sundays refers to day_of_week = 'Sunday'","SELECT CAST(SUM(T3.stars) AS REAL) / COUNT(T1.business_id) AS ""average stars"" FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id INNER JOIN Business AS T3 ON T1.business_id = T3.business_id WHERE T2.day_of_week LIKE 'Sunday' AND T1.closing_time LIKE '12PM'"
public_review_platform,How many of the busineses are in Casa Grande?,in Casa Grande refers to city = 'Casa Grande',SELECT COUNT(city) FROM Business WHERE city LIKE 'Casa Grande'
public_review_platform,What is the total number of active businesses in AZ with a low review count?,"active businesses refers to active = 'true'; in AZ refers to state = 'AZ'
",SELECT COUNT(business_id) FROM Business WHERE state LIKE 'AZ' AND active LIKE 'True' AND review_count LIKE 'low'
public_review_platform,"List down the business ID with a star range from 2 to 3, located at Mesa.",star range from 2 to 3 refers to stars > = 2 AND stars < 4;  located at Mesa refers to city = 'Mesa',SELECT business_id FROM Business WHERE city LIKE 'Mesa' AND stars BETWEEN 2 AND 3
public_review_platform,"In users yelping since 2011 to 2013, how many of them have high count of fans?",In users yelping since 2011 to 2013 refers to user_yelping_since_year > = 2011 AND user_yelping_since_year < 2014,SELECT COUNT(user_id) FROM Users WHERE user_yelping_since_year BETWEEN 2011 AND 2013 AND user_fans LIKE 'High'
public_review_platform,What is the review length of user 35026 to business with business ID 2?,user 35026 refers to user_id = 35026,SELECT review_length FROM Reviews WHERE user_id = 35026 AND business_id = 2
public_review_platform,"Among the businesses in Chandler, list the attribute of the business with a low review count.",in Chandler refers to city = 'Chandler'; attribute refers to attribute_name,"SELECT DISTINCT T3.attribute_id, T3.attribute_name FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.attribute_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.review_count = 'Low' AND T1.city = 'Chandler'"
public_review_platform,"In businesses with a category of mexican, how many of them has a star rating below 4?",category of mexican refers to category_name = 'Mexican'; star rating below 4 refers to stars < 4,SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T1.stars < 4 AND T3.category_name LIKE 'Mexican'
public_review_platform,List the active business ID and its stars of the businesses fall under the category of Fashion.,active business refers to active = 'true'; category of Fashion refers to category = 'Fashion',"SELECT T1.business_id, T1.stars FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T1.active LIKE 'TRUE' AND T3.category_name LIKE 'Fashion'"
public_review_platform,What is the category of businesses with highest star rating?,category refers to category_name; highest star rating refers to max(stars),SELECT T3.category_name FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id ORDER BY T1.stars DESC LIMIT 1
public_review_platform,What is the category of the business with medium review length and highest review stars within business ID from 6 t0 9?,category refers to category_name; highest review stars refers to max(review_stars); business ID from 6 to 9 refers to business_id between 6 and 9,SELECT T4.category_name FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id INNER JOIN Business_Categories AS T3 ON T2.business_id = T3.business_id INNER JOIN Categories AS T4 ON T3.category_id = T4.category_id WHERE T1.review_length LIKE 'Medium' AND T2.business_id BETWEEN 6 AND 9 ORDER BY T1.review_stars DESC LIMIT 1
public_review_platform,Count the active businesses that has an attribute of caters with low review count.,active businesses refers to active = 'true'; attribute of caters refers to attribute_name = 'Caters',SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T3.attribute_name LIKE 'Caters' AND T1.review_count LIKE 'Low' AND T1.active LIKE 'TRUE'
public_review_platform,What is the closing and opening time of businesses located at Tempe with highest star rating?,located at Tempe refers to city = 'Tempe'; highest star rating refers to max(stars),"SELECT T2.closing_time, T2.opening_time FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id WHERE T1.city LIKE 'Tempe' ORDER BY T1.stars DESC LIMIT 1"
public_review_platform,"Among the active businesses located at Chandler, AZ, list the category and atrributes of business with a medium review count.","active businesses refers to active = 'true'; located at Chandler, AZ refers to city = 'Chandler', state = 'AZ'; category refers to category_name; atrributes refers to attribute_name","SELECT T3.category_name, T5.attribute_name FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id INNER JOIN Business_Attributes AS T4 ON T1.business_id = T4.business_id INNER JOIN Attributes AS T5 ON T4.attribute_id = T5.attribute_id WHERE T1.active LIKE 'TRUE' AND T1.state LIKE 'AZ' AND T1.city LIKE 'Chandler' AND T1.review_count LIKE 'Medium'"
public_review_platform,"List the categories of active businesses in Surprise, AZ.","categories refers to category_name; active businesses refers to active = 'true'; in Surprise, AZ refers to city = 'Surprise' and state = 'AZ'",SELECT T3.category_name FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T1.active LIKE 'TRUE' AND T1.state LIKE 'AZ' AND T1.city LIKE 'Surprise' GROUP BY T3.category_name
public_review_platform,Find the location of businesses that have business hours from 8 am to 9 pm every Friday.,"location of businesses refers to city and state; business hours from 8 am to 9 pm refers to opening_time = '8AM', closing_time = '9PM'; every Friday refers to day_of_week = 'Friday'",SELECT T1.city FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T2.closing_time LIKE '9PM' AND T2.opening_time LIKE '8AM' AND T3.day_of_week LIKE 'Friday' GROUP BY T1.city
public_review_platform,"What is the attribute value of an active business with a high review count and 3 stars which is located at Mesa, AZ?","active business refers to active = 'true'; located at Mesa, AZ refers to city = 'Mesa', state = 'AZ'",SELECT T2.attribute_value FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.state LIKE 'AZ' AND T1.review_count LIKE 'High' AND T1.active LIKE 'TRUE' AND T1.city LIKE 'Mesa' AND T1.stars = 3
public_review_platform,What is the opening time of the active businesses in Chandler that has a medium review count.,active businesses refers to active = 'true'; in Chandler refers to city = 'Chandler',SELECT DISTINCT T2.opening_time FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city LIKE 'Chandler' AND T1.active LIKE 'TRUE' AND T1.review_count LIKE 'Medium'
public_review_platform,"Among the businesses with a category of Accessories, what is the percentage of the business with less than 4 stars?","category of Accessories refers to category_name = 'Accessories'; percentage of the business with less than 4 stars = divide(count(Business.business_id(stars < 4)), count(Business.business_id)) * 100%","SELECT CAST(SUM(CASE WHEN T1.stars < 4 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.stars) AS ""percentage"" FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T3.category_name LIKE 'Accessories'"
public_review_platform,List the closing time and day of week of active businesses in Tempe with stars greater than the 70% of average age of star rating.,"active businesses refers to active = 'true'; in Tempe refers to city = 'Tempe'; with stars greater than the 70% of average age of star rating refers to stars > DIVIDE(sum(stars), COUNT(business_id)) * 70%","SELECT T2.closing_time, T3.day_of_week FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city LIKE 'Tempe' AND T1.active LIKE 'TRUE' AND T1.stars > 0.7 * ( SELECT AVG(T1.stars) FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city LIKE 'Tempe' AND T1.active LIKE 'TRUE' )"
public_review_platform,"How many active businesses are located at Phoenix, Arizona?",active business refers to active = 'true'; 'Phoenix' is the city,SELECT COUNT(business_id) FROM Business WHERE city LIKE 'Phoenix' AND active LIKE 'True'
public_review_platform,How many businesses are with high review count?,high review count refers to review_count = 'High',SELECT COUNT(business_id) FROM Business WHERE review_count LIKE 'High'
public_review_platform,How many businesses ID sell beer and wine?,attribute_value = 'beer_and_wine',SELECT COUNT(business_id) FROM Business_Attributes WHERE attribute_id = 1 AND attribute_value = 'beer_and_wine'
public_review_platform,How many attributes ID owned by business ID 2?,,SELECT COUNT(attribute_id) FROM Business_Attributes WHERE business_id = 2
public_review_platform,How many users received high compliment type in photo?,high compliments refers to number_of_compliments = 'High'; type in photo refers to compliment_ID = 1,SELECT COUNT(T1.user_id) FROM Users_Compliments AS T1 INNER JOIN Compliments AS T2 ON T1.compliment_id = T2.compliment_id WHERE T1.number_of_compliments LIKE 'High' AND T2.compliment_id = 1
public_review_platform,"How many businesses in Phoenix, Arizona is attributed to waiter service?",'Phoenix' is the city; waiter service refers to attribute_name = 'waiter_services',SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Business_attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.city LIKE 'Phoenix' AND T3.attribute_name LIKE 'waiter_service' AND T2.attribute_id = 2
public_review_platform,Find out which business is opened for 24/7 and list out what is the business attribute.,opened for 24/7 refers to Business_Hours WHERE opening_time = closing_time and business_id COUNT(day_id) = 7; business attribute refers to attribute_name,SELECT T5.attribute_name FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id INNER JOIN Business AS T3 ON T1.business_id = T3.business_id INNER JOIN Business_Attributes AS T4 ON T3.business_id = T4.business_id INNER JOIN Attributes AS T5 ON T4.attribute_id = T5.attribute_id WHERE T2.day_id LIKE '1' AND '2' AND '3' AND '4' AND '5' AND '6' AND '7' AND T1.opening_time = T1.closing_time GROUP BY T5.attribute_name
public_review_platform,Which business in fashion category has the most review?,'Fashion' is the category_name; most review refers to Max(Count(user_id)),SELECT T3.business_id FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Reviews AS T4 ON T3.business_id = T4.business_id WHERE T1.category_name LIKE 'Fashion' AND T1.category_id = 7 GROUP BY T3.business_id ORDER BY COUNT(T4.user_id) DESC LIMIT 1
public_review_platform,List out which business category that are most likely to have average good review in Arizona?,average good review refers to review_count > = 3; Arizona refers to state = 'AZ'; business category refers to category_name,SELECT DISTINCT T4.category_name FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id INNER JOIN Business_Categories AS T3 ON T2.business_id = T3.business_id INNER JOIN Categories AS T4 ON T3.category_id = T4.category_id WHERE T2.state LIKE 'AZ' AND T1.review_stars >= 3
public_review_platform,What is the ratio of having the best to worse elite user in 2013?,"best elite refers to user_average_stars = 5; worse eliter refers to user_average_stars = 1: in 2013 refers to year_id = 2013; ratio = Divide(Count(user_id(user_average_stars = 5)),  Count(user_id(user_average_stars = 1)))","SELECT CAST(SUM(CASE WHEN T1.user_average_stars = 1 THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.user_id) , SUM(CASE WHEN T1.user_average_stars = 5 THEN 1 ELSE 0 END) * 1.0 / COUNT(T2.user_id) FROM Users AS T1 INNER JOIN Elite AS T2 ON T1.user_id = T2.user_id WHERE T2.year_id = 2013"
public_review_platform,Calculate the increment percentage of elite user for each year since year 2005.,"since year 2005 refers to year_id Between 2005 and 2014; increment percentage = Divide(Count(user_id(year_id < 2014)), Count (user_id(year_id = 2015))) * 100",SELECT CAST(COUNT(CASE WHEN year_id < 2014 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN year_id = 2005 THEN 1.0 ELSE NULL END) AS increment FROM Elite
public_review_platform,How many business have been reviewed by user ID 3 and how long have this user been with Yelp?,"year with yelp = Subtract ('%Y'(CURRENT TIME), user_yelping_since_year)","SELECT COUNT(T1.business_id) , strftime('%Y', 'now') - T2.user_yelping_since_year FROM Reviews AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T1.user_id = 3"
public_review_platform,What is the yearly average review done by user ID 3?,"yearly average review = Divide( Count(business_id), Subtract('%Y'(CURRENT_TIME), user_yelping_since_year))","SELECT COUNT(review_stars) / (strftime('%Y', 'now') - T1.user_yelping_since_year) FROM Users AS T1 INNER JOIN Reviews AS T2 ON T1.user_id = T2.user_id WHERE T1.user_id = 3"
public_review_platform,What is the average number of review received by each business given that the user is an elite?,"average review = Divide(Count(user_id), Count(business_id))",SELECT CAST(COUNT(T1.user_id) AS REAL) / COUNT(DISTINCT T1.business_id) FROM Reviews AS T1 INNER JOIN Elite AS T2 ON T1.user_id = T2.user_id
public_review_platform,List out the user who is an elite user for consecutively 5 years or more and what is the user average star? How many likes does this user gets?,elite user for consecutively 5 years or more refers to user_id COUNT(year_id) > 5; Average star = AVG(likes),"SELECT T2.user_average_stars, COUNT(T3.likes) FROM Elite AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id INNER JOIN Tips AS T3 ON T3.user_id = T2.user_id GROUP BY T1.user_id HAVING COUNT(T1.user_id) > 5"
public_review_platform,Find out which hotel and travel business having the most review? Calculate the standard deviation of the review star for this business.,"""Hotel & Travel"" is the category_name; most review refers to Max(Count(category_id)); Average star per user = Divide (Sum (review_stars), Count(user_id))",SELECT T2.category_id FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Reviews AS T3 ON T3.business_id = T1.business_id WHERE T2.category_name = 'Hotels & Travel' GROUP BY T2.category_id ORDER BY COUNT(T2.category_id) DESC LIMIT 1
public_review_platform,What is the correlation between the review starts and business stars?,"highest review count refers to review_count = 'Uber'; average business review stars = Divide (Sum(review_stars), Count(user_id))",SELECT CAST(SUM(T2.review_stars) AS REAL) / COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id
public_review_platform,How many of the businesses are active?,active refers to active = 'true',SELECT COUNT(business_id) FROM Business WHERE active LIKE 'True'
public_review_platform,List down the business ID with a low review count in Phoenix.,"""Phoenix"" is the city; low review count refers to review_count = 'Low'",SELECT business_id FROM Business WHERE city LIKE 'Phoenix' AND review_count LIKE 'Low'
public_review_platform,What is the total number of active business in AZ with a high review count?,active business refers to active = 'true'; 'AZ' is the state; high review count refers to review_count = 'High',SELECT COUNT(business_id) FROM Business WHERE state LIKE 'AZ' AND review_count LIKE 'High' AND active LIKE 'True'
public_review_platform,"List down the business ID with a star range from 3 to 4, located at Tempe.",star range from 3 to 4 refers to stars > = 3 AND stars < 5; 'Tempe' is the name of city,SELECT business_id FROM Business WHERE city LIKE 'Tempe' AND stars BETWEEN 3 AND 4
public_review_platform,"In users yelping since 2010 to 2012, how many of them has an low fans?",user yelping since 2010 to 2012 refers to user_yelping_since_year > = '2010' AND user_yelping_since_year < '2013'; low fans refers to user_fans = 'Low',SELECT COUNT(user_id) FROM Users WHERE user_yelping_since_year BETWEEN 2010 AND 2012 AND user_fans LIKE 'Low'
public_review_platform,What is the review length of user 60776 to business with business ID 1?,"""60776"" is the user_id",SELECT review_length FROM Reviews WHERE user_id = 60776 AND business_id = 1
public_review_platform,"Among the businesses in Scottsdale, list the attribute of the business with a high review count.","""Scottsdale"" is the name of city; high review count refers to review_count = 'High'; attribute of the business refers to attribute_name",SELECT T3.attribute_name FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.review_count LIKE 'High' AND T1.city LIKE 'Scottsdale' GROUP BY T3.attribute_name
public_review_platform,"In businesses with a category of automotive, how many of them has an star rating below 3?","""Automotive"" is the category of business; star rating below 3 refers to stars < 3",SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T3.category_name LIKE 'Automotive' AND T1.stars < 3
public_review_platform,List the active business ID and its stars of the businesses fall under the category of Pets.,active business refers to active = 'true'; 'Pets' is the category_name,"SELECT T1.business_id, T1.stars FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T1.active LIKE 'TRUE' AND T3.category_name LIKE 'Pets'"
public_review_platform,What is the attribute of the business with highest star rating?,highest star rating Max(stars); attribute of business refers to attribute_name,SELECT T3.attribute_name FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id ORDER BY T1.stars DESC LIMIT 1
public_review_platform,What is the category of the business with short review length and highest review stars within business ID from 5 t0 10?,short review length refers to review_length = 'Short'; highest review stars refers to Max(review_stars); business ID from 5 to 10 refers to business_id BETWEEN 5 AND 10; category of business refers to category_name,SELECT T4.category_name FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id INNER JOIN Business_Categories AS T3 ON T2.business_id = T3.business_id INNER JOIN Categories AS T4 ON T3.category_id = T4.category_id WHERE T1.review_length LIKE 'Short' AND T2.business_id BETWEEN 5 AND 10 ORDER BY T1.review_stars DESC LIMIT 1
public_review_platform,Count the active businesses that has an attribute of Wi-Fi with medium review count.,active business refers to active = 'true'; 'Wi-Fi' is the attribute_name; medium review count refers to review_count = 'Medium',SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T3.attribute_name LIKE 'Wi-Fi' AND T1.active LIKE 'TRUE' AND T1.review_count LIKE 'Medium'
public_review_platform,What is the closing and opening time of businesses located at Gilbert with highest star rating?,"""Gilbert"" is the name of city; highest star rating refers to Max(stars)","SELECT T2.closing_time, T2.opening_time FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id WHERE T1.city LIKE 'Gilbert' ORDER BY T1.stars DESC LIMIT 1"
public_review_platform,"Among the active businesses located at Mesa, AZ, list the category and attributes of business with a low review count.",active business refers to active = 'true': 'Mesa' is the name of city; 'AZ' is the state; low review count refers to review_count = 'Low'; category refers to category_name,SELECT T3.category_name FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T1.review_count = 'Low' AND T1.city = 'Mesa' AND T1.active = 'true' AND T1.state = 'AZ'
public_review_platform,List the categories of inactive businesses in AZ.,inactive business refers to active = 'FALSE'; 'AZ' is the state; category refers to category_name,SELECT T3.category_name FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T1.active LIKE 'FALSE' AND T1.state LIKE 'AZ'
public_review_platform,Find the location of businesses that has business hours from 9 am to 9 pm every Saturday.,9 am refers to opening_time = '9AM'; 9 pm refers to closing_time = '9PM'; every Saturday refers to day_of_week = 'Saturday'; location refers to city,SELECT T1.city FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T2.closing_time LIKE '9PM' AND T2.opening_time LIKE '9AM' AND T3.day_of_week LIKE 'Saturday' GROUP BY T1.city
public_review_platform,"What is the attribute value of an inactive business with a medium review count and 3.5 stars which is located at Phoenix, AZ?",inactive business refers to active = 'FALSE'; 'AZ' is the state; 'Phoenix' is the name of city; medium review count refers to review_count = 'Medium'; 3.5 stars refers to stars = 3.5,SELECT T2.attribute_value FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.state LIKE 'AZ' AND T1.review_count LIKE 'Medium' AND T1.active LIKE 'FALSE' AND T1.city LIKE 'Phoenix' AND T1.stars = 3.5
public_review_platform,What is the opening time of the active businesses in Surprise that has a low review count.,active business refers to active = 'true'; 'Surprise' is the name of city;  low review count refers to review_count = 'Low',SELECT T2.opening_time FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city LIKE 'Surprise' AND T1.active LIKE 'TRUE' AND T1.review_count LIKE 'Low' GROUP BY T2.opening_time
public_review_platform,"Among the businesses with a category of Local Services, what is the percentage of the business with less than 3 stars?","""Local Services"" is the category_name; less than 3 stars refers to stars < 3; percentage = Divide(Count(business_id(stars < 3)), Count(business_id)) * 100","SELECT CAST(SUM(CASE WHEN T1.stars < 3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.stars) AS ""percentage"" FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T3.category_name LIKE 'Local Services'"
public_review_platform,List the closing time and day of week of active businesses in Scottsdale with stars greater than the 60% of average age of star rating.,active business refers to active = 'true';  'Scottsdale' is the name of city; stars greater than the 60% of average age of star rating refers to stars  > avg(stars) * 60%,"SELECT T2.closing_time, T3.day_of_week FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city LIKE 'Scottsdale' AND T1.active LIKE 'TRUE' AND T1.stars > 0.6 * ( SELECT AVG(T1.stars) FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city LIKE 'Scottsdale' AND T1.active LIKE 'TRUE' )"
public_review_platform,How many users have no followers in 2014?,in 2004 refers to user_yelping_since_year = 2004; no follower refers to user_fans = 'None',SELECT COUNT(user_id) FROM Users WHERE user_yelping_since_year = 2004 AND user_fans LIKE 'None'
public_review_platform,"List at least 5 users that has received less than 5 low compliments from
other users.",less than 5 low compliment refers to number_of_compliments < 5,SELECT user_id FROM Users_Compliments WHERE number_of_compliments LIKE 'Low' GROUP BY user_id ORDER BY COUNT(number_of_compliments) > 5 LIMIT 5
public_review_platform,List at least 10 users ID that has 4 as an average ratings of all reviews sent.,4 as an average rating refers to user_average_stars = 4,SELECT COUNT(user_id) FROM Users WHERE user_average_stars = 4 LIMIT 10
public_review_platform,What city does the business have a business hour from 10 am to 12 pm on Sunday?,10 am refers to opening_time = '10AM'; 12 pm refers to closing_time = '12PM'; on Sunday refers to day_of_week = 'Sunday',SELECT T1.city FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T2.opening_time LIKE '10AM' AND T2.closing_time LIKE '12PM' AND T3.day_of_week LIKE 'Sunday'
public_review_platform,How many businesses are opened for 24 hours?,opened for 24 hours refers to attribute_name = 'Open 24 Hours' AND attribute_value = 'true',SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.attribute_value LIKE 'TRUE' AND T1.attribute_name LIKE 'Open 24 Hours'
public_review_platform,List at least 5 active business ID that are good for groups and dancing.,"""Good for Groups"" and ""Good for Dancing"" are attribute_name; active business refers to active = true'",SELECT T2.business_id FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T2.attribute_value LIKE 'TRUE' AND T1.attribute_name LIKE 'Good for Dancing' AND T1.attribute_name LIKE 'Good for Groups' LIMIT 5
public_review_platform,"Among the active businesses in Ahwatukee, which of them are still open in Sunday?",active business refers to active = 'true'; 'Ahwatukee' is the name of city; open in Sunday refers to day_of_week = 'Sunday',SELECT T1.business_id FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city LIKE 'Ahwatukee' AND T1.active LIKE 'TRUE' AND T3.day_of_week LIKE 'Sunday'
public_review_platform,List the categories of all active businesses that were not in Arizona.,active business refers to active = 'true'; not in Arizona refers to state ! = 'AZ'; category refers to category_name,SELECT T3.category_name FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T1.active LIKE 'TRUE' AND T1.state NOT LIKE 'AZ'
public_review_platform,List the category of the business with high review count but received 2 stars.,high review count refers to review_count = 'High'; received 2 stars refers to stars = 2; category refers to category_name,SELECT T3.category_name FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T1.stars = 2 AND T1.review_count LIKE 'High'
public_review_platform,How many businesses have a romantic ambiance?,romantic ambiance refers to attribute_name = 'ambience_romantic' AND attribute_value = 'true',SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.attribute_value = 'true' AND T1.attribute_name = 'ambience_romantic'
public_review_platform,List the city of the business where they open from 1 pm to 6 pm on Saturday.,1 pm refers to opening_time = '1PM'; 6 pm refers to closing_time = '6PM'; on Saturday refers to day_of_week = 'Saturday',SELECT T1.city FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T2.closing_time LIKE '6PM' AND T2.opening_time LIKE '1PM' AND T3.day_of_week LIKE 'Saturday'
public_review_platform,What is the total number of fans or followers who received most likes of their comments in the business?,fans and followers refers to user_fans; most likes of their comments refer to Max(likes),SELECT COUNT(T1.user_fans) FROM Users AS T1 INNER JOIN Tips AS T2 ON T1.user_id = T2.user_id ORDER BY COUNT(T2.likes) DESC LIMIT 1
public_review_platform,What city does the business came from where they received a high volume of check-ins from 12 am to 1 am on Saturday.,12 am refers to opening_time = '12AM'; 1 am refers to closing_time = '1AM'; on Saturday refers to day_of_week = 'Saturday',SELECT T1.city FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T2.closing_time = '1AM' AND T2.opening_time = '12AM' AND T3.day_of_week = 'Saturday'
public_review_platform,How many businesses have shopping centers and received high review count?,"""Shopping Centers"" is the category_name; high review count refers to review_count = 'High'",SELECT COUNT(T2.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.category_name = 'Shopping Centers' AND T3.review_count = 'High'
public_review_platform,How many businesses accept insurance?,business that accept insurance refers to attribute_name = 'Accepts Insurance' AND attribute_value = 'true',SELECT COUNT(T1.business_id) FROM Business_Attributes AS T1 INNER JOIN Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.attribute_name = 'Accepts Insurance' AND T1.attribute_value = 'true'
public_review_platform,Calculate the average review star from users in businesses located in South Carolina and California state.,"""South Carolina"" and ""California"" are both state; average review stars from users = Divide((Sum(review_stars(state = 'SC')) + Sum(review_stars(state = 'CA'))), Sum(stars))",SELECT 1.0 * (( SELECT SUM(T1.stars) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.state = 'SC' ) + ( SELECT SUM(T1.stars) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.state = 'CA' )) / ( SELECT SUM(T1.stars) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id ) AS reslut
public_review_platform,Compare and get the difference of the number of businesses that are open in Monday and Tuesday from 10 am to 9 pm.,"10 am refers to opening_time = '10AM'; 9 pm refers to closing_time = '9PM'; 'Monday' and 'Tuesday' are both day_of_week; difference number of business = Subtract(Count(business_id(day_of_week = 'Monday')), Count(business_id(day_of_week = 'Tuesday')))",SELECT SUM(CASE WHEN T3.day_of_week = 'Monday' THEN 1 ELSE 0 END) - SUM(CASE WHEN T3.day_of_week = 'Tuesday' THEN 1 ELSE 0 END) AS DIFF FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T2.opening_time = '10AM' AND T2.closing_time = '9PM'
public_review_platform,"State the ID number for the attribute named ""Accepts Insurance""?",ID number refers to attribute_id,SELECT attribute_id FROM Attributes WHERE attribute_name = 'Accepts Insurance'
public_review_platform,"How many actively running Yelp businesses are there located in ""Phoenix"" city?",actively running business refers to active = 'true'; 'Phoenix' is the name of city,SELECT COUNT(business_id) FROM Business WHERE active = 'true' AND city = 'Phoenix'
public_review_platform,"Give the number of ""4"" stars Yelp businesses in ""Mesa"" city.","""4"" stars refers to stars = '4'; 'Mesa' is the name of city",SELECT COUNT(business_id) FROM Business WHERE stars = 4 AND city = 'Mesa'
public_review_platform,"Provide the number of Yelp businesses in ""Gilbert"" which got a"" high"" review count.","""Gilbert"" is the name of city; high review count refers to review_count = 'High'",SELECT COUNT(business_id) FROM Business WHERE review_count = 'High' AND city = 'Gilbert'
public_review_platform,"Which actively running Yelp business in ""Gilbert"" has got the most reviews? Give the business id.",actively running business refers to active = 'true'; 'Gilbert' is the name of city; most review refers to review_count = 'Uber',SELECT DISTINCT T1.business_id FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.active = 'true' AND T1.city = 'Gilbert' AND T1.review_count = 'Uber'
public_review_platform,"For the Yelp business in ""Tempe"" city which got ""3.5"" stars and review count as ""Uber"", how many ""long"" reviews did it get?","""Tempe"" is the name of city; long review refers to review_length = 'Long'",SELECT COUNT(T2.review_length) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'Tempe' AND T1.stars = '3.5' AND T1.review_count = 'Uber' AND T2.review_length = 'Long'
public_review_platform,"How is the ""noise level"" for the only Yelp business in “Mesa” which got a ""Uber"" review count?","""Noise Level"" is the attribute_name; 'Mesa' is the name of city",SELECT T3.attribute_name FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.city = 'Mesa' AND T1.review_count = 'Uber' AND T3.attribute_name = 'Noise Level'
public_review_platform,Is the Yelp business No. 14033 good for supper?,business no. 14033 refers to business_id = 14033; good for supper refers to attribute_name = 'good_for_dinner',SELECT T1.attribute_value FROM Business_Attributes AS T1 INNER JOIN Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.attribute_name = 'good_for_dinner' AND T1.business_id = 14033
public_review_platform,How long is the Yelp business No. 15098 opened on Monday?,Yelp business No. 15098 refers to business_id = '15098'; Monday refers to day_of_week = 'Monday',"SELECT SUBSTR(T1.closing_time, 1, 2) + 12 - SUBSTR(T1.opening_time, 1, 2) AS YYSJ FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id WHERE T2.day_of_week = 'Monday' AND T1.business_id = 15098"
public_review_platform,"For the Yelp businesses which received a ""5"" star review with ""uber"" number of votes for funny, which one is located in ""Phoenix""? Give the business ID.","located in ""Phoenix"" refers to city = 'Phoenix'; received a ""5"" star review refers to review_stars = '5'; ""uber"" number of votes for funny refers to review_votes_funny = 'Uber'",SELECT T1.business_id FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'Phoenix' AND T2.review_stars = 5 AND T2.review_votes_funny = 'Uber'
public_review_platform,"Which city is the business that got a ""medium"" length tip with ""3"" likes located in?",medium length tip refers to tip_length = 'Medium';,SELECT T1.city FROM Business AS T1 INNER JOIN Tips AS T2 ON T1.business_id = T2.business_id WHERE T2.tip_length = 'Medium' AND T2.likes = 3
public_review_platform,"For the user who joined Yelp in ""2010"", with an average of ""4.5"" stars review and has got uber number of fans, how many ""funny"" compliments has he/she received from other users?","in ""2010"" refers to user_yelping_since_year = '2010'; average of ""4.5"" stars review refers to user_average_stars = '4.5'; uber number of fans refers to user_average_stars = '4.5'; ""funny"" compliments refers to compliment_type = 'funny'",SELECT COUNT(T2.user_id) FROM Users AS T1 INNER JOIN Users_Compliments AS T2 ON T1.user_id = T2.user_id INNER JOIN Compliments AS T3 ON T2.compliment_id = T3.compliment_id WHERE T1.user_yelping_since_year = 2010 AND T1.user_average_stars = 4.5 AND T1.user_fans = 'Uber' AND T3.compliment_type = 'funny'
public_review_platform,"How many ""cool"" type compliments does user No. 41717 get?","""cool"" type compliments refers to compliment_type = 'cool'; user No. 41717 refers to user_id = 41717",SELECT COUNT(T2.number_of_compliments) FROM Compliments AS T1 INNER JOIN Users_Compliments AS T2 ON T1.compliment_id = T2.compliment_id WHERE T1.compliment_type = 'cool' AND T2.user_id = 41717
public_review_platform,"Does Yelp business No.""11825"" have a ""parking lot""?","business No.""11825"" refers to business_id = '12476'; have a ""parking lot"" refers to attribute_value = 'parking_lot'",SELECT T1.attribute_value FROM Business_Attributes AS T1 INNER JOIN Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.business_id = 11825 AND T2.attribute_name = 'parking_lot'
public_review_platform,"Is the payment in mastercard possible for the Yelp business No.""12476""?","Yelp business No.""12476"" refers to business_id = '12476'; payment in mastercard refers to attribute_value = 'payment_types_mastercard'",SELECT T1.attribute_value FROM Business_Attributes AS T1 INNER JOIN Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.business_id = 12476 AND T2.attribute_name = 'payment_types_mastercard'
public_review_platform,"What is the percentage for the Yelp businesses in ""Pets"" category of all businesses?","businesses in ""Pets"" category refers to category_name = 'Pets'; percentage refers to DIVIDE(COUNT(category_name = 'Pets'), COUNT(business_id)) * 100%",SELECT CAST(SUM(CASE WHEN T2.category_name = 'Pets' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.category_name) FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id
public_review_platform,"How many times is the number of ""Women's Clothing"" Yelp businesses to ""Men's Clothing""?","""Women's Clothing"" Yelp businesses refers to  category_name = 'Women''s Clothing'; ""Men's Clothing"" refers to category_name = 'Men''s Clothing'; times refers to DIVIDE(COUNT(category_name = 'Women''s Clothing'), COUNT(category_name = 'Men''s Clothing'))",SELECT CAST(SUM(CASE WHEN T2.category_name = 'Women''s Clothing' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.category_name = 'Men''s Clothing' THEN 1 ELSE 0 END) AS TIMES FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id
public_review_platform,"Write down the ID, active status and city of the business which are in CA state.",the ID refers to business_id; active status refers to active; active = 'true' means the business is still running; active = 'false' means the business is closed or not running now,"SELECT business_id, active, city FROM Business WHERE state = 'CA' AND active = 'true'"
public_review_platform,Calculate the percentage of running business among all business.,"running business refers to active = 'true'; percentage refers to DIVIDE(COUNT(active = 'true'), COUNT(business_id)) * 100%",SELECT CAST(SUM(CASE WHEN active = 'true' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(business_id) FROM Business
public_review_platform,"Among all attribute names, list down the ID and attribute name which start with ""music"".","attribute name which start with ""music"" refers to attribute_name LIKE 'music%'","SELECT attribute_id, attribute_name FROM Attributes WHERE attribute_name LIKE 'music%'"
public_review_platform,"Between 2006 and 2007, which year ID had the greater number in elite user?",2006 and 2007 refers to BETWEEN 2006 AND 2007; greater number in elite user refers to count(user_id),"SELECT year_id FROM Elite WHERE year_id IN (2006, 2007) GROUP BY year_id ORDER BY COUNT(user_id) DESC LIMIT 1"
public_review_platform,"Based on all user compliments, find the percentage of low number of compliments on all compliments ID.","low number of compliments refers to number_of_compliments = 'Low'; percentage refers to DIVIDE(COUNT(number_of_compliments = 'Low'), COUNT(user_id)) * 100",SELECT CAST(SUM(CASE WHEN number_of_compliments = 'Low' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(user_id) FROM Users_compliments
public_review_platform,List down the business ID and user ID who got uber for cool votes.,got uber for cool votes refers to review_votes_cool = 'Uber',"SELECT business_id, user_id FROM Reviews WHERE review_votes_cool = 'Uber'"
public_review_platform,"Write the user ID, business ID and tips length of who started using Yelp since 2004 and had high followers.",started using Yelp since 2004 refers to user_yelping_since_year = '2004'; had high followers refers to user_fans = 'High',"SELECT T1.user_id, T2.business_id, T2.tip_length FROM Users AS T1 INNER JOIN Tips AS T2 ON T1.user_id = T2.user_id WHERE T1.user_yelping_since_year = 2004 AND T1.user_fans = 'High'"
public_review_platform,"Among the review votes of funny and cool hit uber with long review length, describe the business ID, active status, user ID and user year of joining Yelp.",review votes of funny refers to review_votes_funny = 'Uber'; cool hit uber refers to review_votes_cool = 'Uber'; user year of joining Yelp refers to user_yelping_since_year,"SELECT T1.business_id, T1.active, T3.user_id, T3.user_yelping_since_year FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id INNER JOIN Users AS T3 ON T2.user_id = T3.user_id WHERE T2.review_votes_cool = 'Uber' AND T2.review_votes_funny = 'Uber' AND T2.review_length = 'Long'"
public_review_platform,"Under the attribute name of ""music_playlist"", describe the attribute ID, business ID, city and inactive status.",active status refers to active; active = 'true' means the business is still running; active = 'false' means the business is inactive or not running now,"SELECT T1.attribute_id, T2.business_id, T3.city FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.attribute_name = 'music_playlist' AND T3.active = 'false'"
public_review_platform,"Calculate the percentage of business with attribute name of ""Accepts Credit Cards"".","percentage refers to DIVIDE(COUNT(attribute_name = 'Accepts Credit Cards'), COUNT(business_id))*100%",SELECT CAST(SUM(CASE WHEN T1.attribute_name = 'Accepts Credit Cards' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.attribute_name) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id
public_review_platform,"Among the stopped businesses in San Tan Valley city, list down the user ID and review length of who had great experience.","stop businesses refers to active = 'false'; great experience refers to review_stars = 5

","SELECT T2.user_id, T2.review_length FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'San Tan Valley' AND T1.active = 'false' AND T2.review_stars = 5"
public_review_platform,"Mention the user average star, elite year and the compliment type of user ID 6027 whereby number of compliments reach uber.",number of compliments reach uber refers to number_of_compliments = 'Uber'; elite year refers to year_id; user average star refers to user_average_stars,"SELECT T2.user_average_stars, T1.year_id, T4.compliment_type, T3.number_of_compliments FROM Elite AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id INNER JOIN Users_Compliments AS T3 ON T2.user_id = T3.user_id INNER JOIN Compliments AS T4 ON T3.compliment_id = T4.compliment_id INNER JOIN Years AS T5 ON T1.year_id = T5.year_id WHERE T3.number_of_compliments = 'Uber' AND T3.user_id = 6027"
public_review_platform,"Under the category name of ""Coffee & Tea"", mention any 5 business ID , their state and city.",,"SELECT T2.business_id, T3.state, T3.city FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.category_name = 'Coffee & Tea' LIMIT 5"
public_review_platform,Describe category name which had above 10% in comparing with all business and categories.,"above 10% refers to DIVIDE(COUNT(Business_Categories.business_id = category_id), COUNT(category_id)) * 100% > 10%",SELECT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id GROUP BY T2.category_id HAVING COUNT(T2.business_id) > ( SELECT COUNT(T3.business_id) FROM Business_Categories AS T3 ) * 0.1
public_review_platform,"For the business with great experience existed in Sun Lakes city, provide the user ID who gave review on it and user followers.",with great experience refers to stars = 5,"SELECT T3.user_id, T3.user_fans FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id INNER JOIN Users AS T3 ON T2.user_id = T3.user_id WHERE T1.city = 'Sun Lakes' AND T1.stars = 5"
public_review_platform,"Compare the number of business between the category of ""Men's Clothing"" and ""Women's Clothing"".","category of ""Men's Clothing"" refers to category_name = 'Men''s Clothing'; ""Women's Clothing"" refers to category_name = 'Women''s Clothing'",SELECT SUM(CASE WHEN T1.category_name = 'Men''s Clothing' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.category_name = 'Women''s Clothing' THEN 1 ELSE 0 END) AS diff FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id
public_review_platform,"Among highest quality user of under ID 100, mention compliment type which got highest compliment number and user's followers.",highest quality user refers to number_of_compliments = 'Uber'; user of under ID 100 refers to user_id < 100 ;,"SELECT T1.compliment_type, T3.user_fans FROM Compliments AS T1 INNER JOIN Users_Compliments AS T2 ON T1.compliment_id = T2.compliment_id INNER JOIN Users AS T3 ON T2.user_id = T3.user_id WHERE T2.number_of_compliments = 'Uber' AND T2.user_id < 100"
public_review_platform,List all the businesses that closed at 8PM.,closed at 8PM refers to closing_time = '8PM';,SELECT DISTINCT business_id FROM Business_Hours WHERE closing_time = '8PM'
public_review_platform,"How many 2 stars rated business located in Phoenix, Arizona?",located in Phoenix refers to city = 'Phoenix'; Arizona refers to state = 'AZ',SELECT COUNT(business_id) FROM Business WHERE city = 'Phoenix' AND state = 'AZ' AND stars = 2
public_review_platform,How many businesses in Tempe are rated as 'Wonderful experience?,in Tempe refers to city = 'Tempe'; rated as 'Wonderful experience refers to stars > 3,SELECT COUNT(business_id) FROM Business WHERE city = 'Phoenix' AND stars > 3
public_review_platform,List all the users with average star less than 3 stars in 2012,average star less than 3 stars refers to user_average_stars < 3; in 2012 refers to user_yelping_since_year = 2012,SELECT user_id FROM Users WHERE user_yelping_since_year = 2012 AND user_average_stars < 3
public_review_platform,Find the percentage of 5 stars rated business.,"percentage refers to DIVIDE(COUNT(stars = 5), COUNT(business_id)) * 100%",SELECT CAST(SUM(CASE WHEN stars = 5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(stars) FROM Business
public_review_platform,Calculate difference between business that have the highest number of reviews and business that have the lowest number of reviews.,"highest number of reviews refers to SUBTRACT(MAX(COUNT(business_id), MIN(COUNT(business_id))))",SELECT ( SELECT COUNT(business_id) FROM Reviews GROUP BY business_id ORDER BY COUNT(business_id) DESC LIMIT 1 ) - ( SELECT COUNT(business_id) FROM Reviews GROUP BY business_id ORDER BY COUNT(business_id) ASC LIMIT 1 ) AS DIFF
public_review_platform,List all the tires businesses that are opened everyday.,tires businesses refers to category_name = 'Tires'; opened everyday refers to COUNT(distinct opening_time) = 7;,SELECT DISTINCT T2.business_id FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Business_Hours AS T4 ON T3.business_id = T4.business_id WHERE T1.category_name = 'Tires' GROUP BY T2.business_id HAVING COUNT(day_id) = 7
public_review_platform,Which users become an elite in 2012?,in 2012 refers to actual_year = 2012;,SELECT DISTINCT T1.user_id FROM Elite AS T1 INNER JOIN Years AS T2 ON T1.year_id = T2.year_id WHERE T2.actual_year = 2012
public_review_platform,List the business ID of shopping business that have 4 stars ratings.,shopping business refers to category_name = 'Shopping'; 4 stars ratings refers to stars = 4,SELECT T1.business_id FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T3.category_name = 'Shopping' AND T1.stars = 4
public_review_platform,How many business have low check-in on Sunday at 10AM?,on Sunday refers to day_of_week = 'Sunday'; low check-in at 10AM refers to label_time_10 = 'Low',SELECT COUNT(T2.business_id) FROM Days AS T1 INNER JOIN Checkins AS T2 ON T1.day_id = T2.day_id WHERE T1.day_of_week = 'Sunday' AND T2.label_time_10 = 'Low'
public_review_platform,How many businesses in Glendale are reviewed by user with the ID of 20241?,in Glendale refers to city = 'Glendale',SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'Glendale' AND T2.user_id = 20241
public_review_platform,State the locations of all Pet Services business.,location refers to city; Pet Services business refers to category_name = 'Pet Services',SELECT T1.city FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T3.category_name = 'Pet Services'
public_review_platform,How many photos type compliment given from users with high cool votes?,photos type compliment refers to compliment_type = 'photos'; high cool votes refers to review_votes_cool = 'High',SELECT COUNT(T1.user_id) FROM Users AS T1 INNER JOIN Users_Compliments AS T2 ON T1.user_id = T2.user_id INNER JOIN Compliments AS T3 ON T2.compliment_id = T3.compliment_id INNER JOIN Reviews AS T4 ON T1.user_id = T4.user_id WHERE T3.compliment_type = 'photos' AND T4.review_votes_cool = 'High'
public_review_platform,How many closed businesses that have more than 10 attributes?,closed refers to active = 'false'; more than 10 attributes refers to count(attribute_id) > 10,SELECT COUNT(*) FROM Business WHERE business_id IN ( SELECT T1.business_id FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id WHERE T1.active = 'false' GROUP BY T1.business_id HAVING COUNT(DISTINCT T2.attribute_id) > 10 )
public_review_platform,List the business located in Mesa that have alcohol attribute.,in Mesa refers to city = 'Mesa'; alcohol attribute refers to attribute_name = 'Alcohol',SELECT T1.business_id FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.city = 'Mesa' AND T3.attribute_name = 'Alcohol'
public_review_platform,"Based on business in Phoenix, calculate the percentage of business with low funny votes.","in Chandelier refers to city = 'Chandelier'; percentage = divide(count(business_id where review_votes_funny = 'Low'), count(business_id)); business with low funny votes refers to review_votes_funny = 'Low'",SELECT CAST(SUM(CASE WHEN T2.review_votes_funny = 'Low' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'Phoenix'
public_review_platform,What is the ratio between business in shopping category and business in pets category?,"ratio = divide(count(business_id where category_name = 'Shopping'), count(business_id where category_name = 'Pets'))",SELECT CAST(SUM(CASE WHEN T2.category_name = 'Shopping' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.category_name = 'Pets' THEN 1 ELSE 0 END) AS radio FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id
public_review_platform,How many businesses are registered in the database under 'Banks & Credit Unions' category?,category refers to category_name,SELECT COUNT(T2.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id WHERE T1.category_name = 'Banks & Credit Unions'
public_review_platform,How many active businesses from Casa Grande are registered in the database?,active business refers to active = 'true'; Casa Grande refers to city = 'Casa Grande',SELECT COUNT(business_id) FROM Business WHERE active = 'true' AND city = 'Casa Grande'
public_review_platform,What time does the business with ID no.12 open on Monday?,"open time refers to opening_time; on Monday refers to day_of_week = 'Monday'; business with ID no. refers to business_id 

",SELECT T1.opening_time FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id WHERE T1.business_id = 12 AND T2.day_of_week = 'Monday'
public_review_platform,How many businesses that are registered in the database can be attributed to 'Good for Kids'?,can be attributed to 'Good for Kids' refers to attribute_name = 'Good for Kids' and attribute_value = 'true',SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.attribute_name = 'Good for Kids' AND T2.attribute_value = 'true'
public_review_platform,Identify the most popular and appealing active business in Gilbert based on users' reviews.,most popular and appealing refers to review_count = 'High' and max(stars); active business refers to active = 'true'; in Gilbert refers to city = 'Gilbert',SELECT business_id FROM Business WHERE city = 'Gilbert' AND active = 'true' AND review_count = 'High' ORDER BY stars DESC LIMIT 1
public_review_platform,"Find the 5-star business in Ahwatukee, AZ and identify it's business category.",5-star refers to stars = 5; in Ahwatukee refers to city = 'Ahwatukee'; business category refers to category_name,"SELECT T1.business_id, T3.category_name FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T1.city = 'Ahwatukee' AND T1.stars = 5"
public_review_platform,"Among all closed businesses in Avondale, AZ what percent have obtained a 'wonderful experience' rating of the business.","closed business refers to active = 'false'; in Avondale refers to city = 'Avondale'; 'wonderful experience' rating refers to stars > 3; percentage = divide(count(business_id where stars > 3), count(business_id))*100%",SELECT CAST(SUM(CASE WHEN stars > 3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(stars) FROM Business WHERE city = 'Avondale' AND active = 'false'
public_review_platform,Identify the user who has been yelping since 2004. Is he or she an Yelp Elite member?,has been yelping since 2004 refers to user_yelping_since_year = 2004,SELECT DISTINCT T2.user_id FROM Users AS T1 INNER JOIN Elite AS T2 ON T1.user_id = T2.user_id WHERE T1.user_yelping_since_year = 2004
public_review_platform,Identify the percent of long reviews among all 5-star reviews given to businesses by the Yelp users.,"percentage = divide(count(business_id where review_length = 'Long' and review_stars = 5), count(business_id)) * 100%; long reviews refers to review_length = 'Long'; 5-star review refers to review_stars = 5",SELECT CAST(SUM(CASE WHEN review_length = 'Long' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(review_length) FROM Reviews WHERE review_stars = 5
public_review_platform,"Among all the users with the average ratings of at least 4 and above of all reviews, calculate the percent that have no fans or followers.","average ratings of at least 4 refers to user_average_stars > = 4; no fans or followers refers to user_fans = 'None'; percentage = divide(count(user_id where user_average_stars > = 4 and user_fans = 'None'), sum(user_id where user_average_stars > = 4))*100%",SELECT CAST(SUM(CASE WHEN user_fans = 'None' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(user_id) FROM Users WHERE user_average_stars >= 4
public_review_platform,How many short tips were left for the business with ID no.2?,short tip refers to tip_length = 'Short'; business category refers to category_name,SELECT COUNT(business_id) FROM Tips WHERE business_id = 2 AND tip_length = 'Short'
public_review_platform,Find the Yelp user with the average 5-star rating of all reviews who has been yelping the longest.,Yelp user refers to user_id; average 5-star rating refers to user_average_stars = 5; yelping the longest refers to min(user_yelping_since_year),SELECT user_id FROM Users WHERE user_average_stars = 5 ORDER BY user_yelping_since_year ASC LIMIT 1
public_review_platform,Identify the operating hours of businesses in Black Canyon City with review count greater than average.,operating hours refers to opening_time closing_time on day_id; in Black Canyon City refers to city = 'Black Canyon City'; greater than average refers to review_count > AVG(T1.review_count),"SELECT T2.opening_time, T2.closing_time FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city = 'Black Canyon City' GROUP BY t2.business_id HAVING T1.review_count > AVG(T1.review_count)"
public_review_platform,"Among all the users who received the high number of compliments, what percent received the 'cute' type of compliment.","high number of compliments refers to number_of_compliments = 'High'; percentage = divide(count(user_id where compliment_type = 'cute'), count(user_id))*100%",SELECT CAST(SUM(CASE WHEN T1.compliment_type = 'cute' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.user_id) FROM Compliments AS T1 INNER JOIN Users_Compliments AS T2 ON T1.compliment_id = T2.compliment_id WHERE T2.number_of_compliments = 'High'
public_review_platform,Mention the number of businesses that have no any attribute.,"have no attribute refers to attribute_value in( 'none', 'no', 'false')","SELECT COUNT(business_id) FROM Business_Attributes WHERE attribute_value IN ('none', 'no', 'false')"
public_review_platform,What are the opening and closing time of business id 1 for day id 2?,false,"SELECT opening_time, closing_time FROM Business_Hours WHERE business_id = 1 AND day_id = 2"
public_review_platform,List out city name of businesses which have medium length of review.,medium length of review refers to review_length = 'Medium',SELECT DISTINCT T1.city FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T2.review_length = 'Medium'
public_review_platform,What is the closing time of business id 4 on Sunday?,on Sunday refers to day_of_week = 'Sunday',SELECT T2.closing_time FROM Days AS T1 INNER JOIN Business_Hours AS T2 ON T1.day_id = T2.day_id WHERE T1.day_of_week = 'Sunday' AND T2.business_id = 4
public_review_platform,"Among the businesses which have short length of review, which one located in Phoenix?",short length of review refers to review_length = 'Short'; in Phoenix refers to city = 'Phoenix',SELECT DISTINCT T1.business_id FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'Phoenix' AND T2.review_length = 'Short'
public_review_platform,"Among the users whose fan is medium, how many users received high compliments from other users.",is medium refers to user_fans = 'Medium'; high compliments refers to number_of_compliments = 'High',SELECT COUNT(T1.user_id) FROM Users AS T1 INNER JOIN Users_Compliments AS T2 ON T1.user_id = T2.user_id WHERE T2.number_of_compliments = 'High' AND T1.user_fans = 'Medium'
public_review_platform,"Among the users who received low compliments from other users, which users joined Yelp in 2012?",low compliments refers to number_of_compliments = 'Low'; joined Yelp in 2012 refers to user_yelping_since_year = 2012,SELECT DISTINCT T2.user_id FROM Users AS T1 INNER JOIN Users_Compliments AS T2 ON T1.user_id = T2.user_id WHERE T1.user_yelping_since_year = 2012 AND T2.number_of_compliments = 'Low'
public_review_platform,"Among the businesses without attribute, how many businesses located in Gilbert?",without attribute refers to attribute_value = 'None'; in Gilbert refers to city = 'Gilbert',"SELECT COUNT(T2.business_id) FROM Business_Attributes AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T2.city = 'Gilbert' AND T1.attribute_value IN ('None', 'no', 'false')"
public_review_platform,"Among the businesses with average rating, how many business has attribute of full_bar.",average rating refers to avg(stars); attribute of full_bar refers to attribute_value = 'full_bar',SELECT COUNT(T1.business_id) FROM Business_Attributes AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T1.attribute_value = 'full_bar'
public_review_platform,List out the state of businesses which have opening time at 1AM.,state refers to city,SELECT DISTINCT T1.state FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id WHERE T2.opening_time = '1AM'
public_review_platform,List out the category name of business id 5.,,SELECT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id WHERE T2.business_id = 5
public_review_platform,List out the user id that has compliment type of photos.,compliment type of photos refers to compliment_type = 'photos',SELECT T2.user_id FROM Compliments AS T1 INNER JOIN Users_Compliments AS T2 ON T1.compliment_id = T2.compliment_id WHERE T1.compliment_type = 'photos'
public_review_platform,Calculate the percentage of medium tip length in the list. List out the time when users of medium tip length join Yelp.,"medium tip length refers to tip_length = 'Medium'; percentage = divide(count(tips where tip_length = 'Medium'), count(tips))*100%; the time when users join Yelp refers to user_yelping_since_year","SELECT CAST(SUM(CASE WHEN T1.tip_length = 'Medium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.tip_length), T2.user_yelping_since_year FROM Tips AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id"
public_review_platform,Calculate the percentage of businesses who located in Mesa. What is attribute value of these businesses.,"percentage = divide(count(business where city = 'Mesa'), count(business)) * 100%","SELECT CAST(COUNT(T1.city) AS REAL) * 100 / ( SELECT COUNT(business_id) FROM Business ), T2.attribute_value FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'Mesa'"
public_review_platform,State the state of businesses which have closing time at 12AM.,state refers to city,SELECT DISTINCT T1.state FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id WHERE T2.closing_time = '12AM'
public_review_platform,"Among the businesses which have attribute of beer_and_wine, how many business located in Peoria?",attribute of beer_and_wine refers to attribute_value = 'beer_and_wine'; in Peoria refers to city = 'Peoria',SELECT COUNT(T1.business_id) FROM Business_Attributes AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T2.city = 'Peoria' AND T1.attribute_value = 'beer_and_wine'
public_review_platform,"Among the users who received high compliments from other users, which users joined Yelp earliest?",high compliments refers to number_of_compliments = ' High'; joined Yelp earliest refers to min(user_yelping_since_year),SELECT T2.user_id FROM Users AS T1 INNER JOIN Users_Compliments AS T2 ON T1.user_id = T2.user_id WHERE T2.number_of_compliments = 'High' AND T1.user_yelping_since_year = ( SELECT MIN(user_yelping_since_year) FROM Users )
public_review_platform,Which business ID has the most reviews?,the most reviews refer to MAX(user_id);,SELECT business_id FROM Reviews GROUP BY business_id ORDER BY COUNT(user_id) DESC LIMIT 1
public_review_platform,Which year has the most elite users?,year has the most elite users refers to year_id with MAX(user_id);,SELECT year_id FROM Elite GROUP BY year_id ORDER BY COUNT(user_id) DESC LIMIT 1
public_review_platform,How many 5 star businesses have uber review votes for funny?,businesses refer to business_id; review_stars = 5.0; review_votes_funny = 'uber';,SELECT COUNT(business_id) FROM Reviews WHERE review_stars = 5 AND review_votes_funny = 'Uber'
public_review_platform,How many users have uber review votes for funny from the fans?,users refer to user_id; review_votes_funny = 'uber';,SELECT COUNT(DISTINCT user_id) FROM Reviews WHERE review_votes_funny = 'Uber'
public_review_platform,Which business ID have the shortest business operating hours?,"the shortest business operating hours refer to MIN(SUBTRACT(closing_time, opening_time));",SELECT business_id FROM Business_Hours ORDER BY closing_time - opening_time LIMIT 1
public_review_platform,Find out which business ID are opened all the time.,opened all the time refers to Business_Hours where day_id BETWEEN 1 and 7 and opening_time = closing_time;,SELECT DISTINCT business_id FROM Business_Hours WHERE day_id >= 1 AND day_id < 8 AND opening_time = closing_time
public_review_platform,Does the length of the tip influence the number of likes for hotel and travel business category?,"the longer the tip_length, the lesser the likes OR the longer the tip length the higher the likes; hotel and travel business category refers to category_name = 'Hotels & Travel';","SELECT T3.tip_length, SUM(T3.likes) AS likes FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Tips AS T3 ON T2.business_id = T3.business_id WHERE T1.category_name = 'Hotels & Travel' GROUP BY T3.tip_length"
public_review_platform,How many users manage to get uber votes for all of the review category? Find out what are the user average star.,users refer to user_id; uber votes for all of the review category refer to review_votes_funny = 'uber' AND review_votes_useful = 'uber' AND review_votes_cool = 'uber';,"SELECT COUNT(T2.user_id) AS USER_IDS, T2.user_average_stars FROM Reviews AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T1.review_votes_funny = 'Uber' AND T1.review_votes_useful = 'Uber' AND T1.review_votes_cool = 'Uber'"
public_review_platform,What is the ratio of good to bad business star for a businesses that are opened all the time?,"opened all the time refers to Business_Hours where day_id BETWEEN 1 and 7 and opening_time = closing_time; ratio can be computed as DIVIDE(COUNT(stars BETWEEN 3.5 and 5), COUNT(stars BETWEEN 1 and 2.5));",SELECT CAST(SUM(CASE WHEN T1.stars BETWEEN 3.5 AND 5 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.stars BETWEEN 1 AND 2.5 THEN 1 ELSE 0 END) AS ratio FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id
public_review_platform,List out 10 business ID that are being reviewed the most by users and list out what are top 3 business categories.,being reviewed the most refers to MAX(user_id); business categories refer to category_name;,"SELECT T2.business_id, T3.category_name FROM Reviews AS T1 INNER JOIN Business_categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id GROUP BY T2.business_id ORDER BY COUNT(T1.user_id) DESC LIMIT 10"
public_review_platform,How many businesses in Arizona having an average review less than 3 stars?,businesses in Arizona refer to business_id where state = 'Arizona'; average review less than 3 stars refers to AVG(review_stars) < 3.0;,SELECT COUNT(business_id) FROM Business WHERE business_id IN ( SELECT DISTINCT T1.business_id FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.state = 'AZ' GROUP BY T1.business_id HAVING SUM(T2.review_stars) / COUNT(T2.user_id) < 3 )
public_review_platform,What is the percentage of user not becoming an elite user?,"DIVIDE(SUBTRACT(COUNT(user_id), COUNT(Elite.user_id)), COUNT(user_id)) as percentage;",SELECT CAST((( SELECT COUNT(user_id) FROM Users ) - ( SELECT COUNT(DISTINCT user_id) FROM Elite )) AS REAL) * 100 / ( SELECT COUNT(user_id) FROM Users )
public_review_platform,What are the most common compliments types received by user with uber number of fans?,the most common compliments types refer to MAX(COUNT(compliment_id)); user_fans = 'uber';,SELECT DISTINCT T3.compliment_type FROM Users AS T1 INNER JOIN Users_Compliments AS T2 ON T1.user_id = T2.user_id INNER JOIN Compliments AS T3 ON T2.compliment_id = T3.compliment_id WHERE T1.user_fans = 'Uber'
public_review_platform,What is the average year needed by a user with uber fans to become an elite user?,AVG(user_yelping_since_year) where user_fans = 'uber';,SELECT CAST(SUM(T2.year_id - T1.user_yelping_since_year) AS REAL) / COUNT(T1.user_id) FROM Users AS T1 INNER JOIN Elite AS T2 ON T1.user_id = T2.user_id WHERE T1.user_fans = 'Uber'
public_review_platform,What is the average year for a user to be upgraded to elite user?,AVG(user_yelping_since_year) where user_id from Elite;,SELECT CAST(SUM(T2.year_id - T1.user_yelping_since_year) AS REAL) / COUNT(T1.user_id) FROM Users AS T1 INNER JOIN Elite AS T2 ON T1.user_id = T2.user_id
public_review_platform,How many business are opened for more than 8 hour in Mesa and what is the percentage of the active businesses?,"business are opened for more than 8 hours refer to business_id where SUBTRACT(closing_time, opening_time) > 8; DIVIDE(COUNT(business_id where active = 'true' and city = 'Mesa' and SUBTRACT(closing_time, opening_time) > 8), COUNT(business_id where city = 'Mesa' and SUBTRACT(closing_time, opening_time) > 8)) as percentage;",SELECT CAST(SUM(CASE WHEN T1.active = 'true' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.business_id) AS ACT FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'Mesa'
public_review_platform,How many active businesses are opened during late afternoon in the Phoenix city? List out the top 3 categories name for these businesses.,opened during late afternoon refers to Business_Hours where opening_time ≥ '5PM'; active businesses refer to business_id where active = 'true';,SELECT DISTINCT T4.category_name FROM Business_Hours AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id INNER JOIN Business_Categories AS T3 ON T2.business_id = T3.business_id INNER JOIN Categories AS T4 ON T3.category_id = T4.category_id WHERE T2.active = 'true' AND T2.city = 'Phoenix' AND T1.opening_time >= '5PM' LIMIT 3
public_review_platform,Which user has done the most review on a business attributed to delivery?,the most reviews refer to MAX(business_id) where attribute_name = 'Delivery';,SELECT T3.user_id FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id INNER JOIN Reviews AS T3 ON T2.business_id = T3.business_id WHERE T1.attribute_name = 'Delivery' GROUP BY T3.user_id ORDER BY COUNT(T2.business_id) DESC LIMIT 1
public_review_platform,What is the average number of reviews written for active businesses that operate not more than 30 hours a week?,"avg(user_id) where active = 'true' and SUM(SUBTRACT(closing_time, opening_time)) < 30;",SELECT AVG(T3.user_id) FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Reviews AS T3 ON T1.business_id = T3.business_id WHERE T1.active = 'true' GROUP BY T2.closing_time - T2.opening_time HAVING SUM(T2.closing_time - T2.opening_time) < 30
public_review_platform,How many business ids have opening hours from 8AM to 6PM?,opening hours from 8AM to 6PM refer to Business_Hours where opening_time = '8AM' and closing_time = '6PM';,SELECT DISTINCT business_id FROM Business_Hours WHERE opening_time = '8AM' AND closing_time = '6PM'
public_review_platform,Provide business ids with opening hours 10AM on Saturday.,opening hours 10AM on Saturday refer to Business_Hours where opening_time = '10AM' and day_id = 6;,SELECT DISTINCT business_id FROM Business_Hours WHERE day_id = 6 AND opening_time = '10AM'
public_review_platform,Indicate the business id and days which are opened from 8AM to 6PM.,opened from 8AM to 6PM refers to Business_Hours where opening_time = '8AM' and closing_time = '6PM'; days refer to day_id;,SELECT DISTINCT day_id FROM Business_Hours WHERE opening_time = '8AM' AND closing_time = '6PM'
public_review_platform,How many businesses id are rated more than 4?,rated more than 4 refers to stars > 4;,SELECT COUNT(business_id) FROM Business WHERE stars > 4
public_review_platform,What are the categories of businesses that have opening time on Sunday?,categories of businesses refer to category_name; Sunday refers to day_of_week where day_id = 1;,SELECT DISTINCT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business_Hours AS T3 ON T2.business_id = T3.business_id INNER JOIN Days AS T4 ON T3.day_id = T4.day_id WHERE T4.day_of_week = 'Sunday' AND T3.opening_time <> ''
public_review_platform,Please indicate the opening day of businesses whose category is pets.,category is pets refers to category_name = 'Pets'; opening day refers to day_id from Business_Hours and opening_time;,SELECT DISTINCT T4.day_of_week FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business_Hours AS T3 ON T1.business_id = T3.business_id INNER JOIN Days AS T4 ON T3.day_id = T4.day_id WHERE T2.category_name = 'Pets'
public_review_platform,Please indicate the closing hours and business days of the businesses with the category named Doctors.,closing hours refer to closing_time; business days refer to day_id from Business_Hours;,"SELECT DISTINCT T3.opening_time, T3.day_id FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business_Hours AS T3 ON T1.business_id = T3.business_id INNER JOIN Days AS T4 ON T3.day_id = T4.day_id WHERE T2.category_name = 'Doctors'"
public_review_platform,"Among the working days from Monday to Saturday, which businesses with the category names work the most days?",days from Monday to Saturday refer to day_id between 2 and 7; work the most days can be computed as MAX(COUNT(category_name where day_id between 2 and 7));,SELECT T2.category_name FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business_Hours AS T3 ON T1.business_id = T3.business_id INNER JOIN Days AS T4 ON T3.day_id = T4.day_id GROUP BY T2.category_name ORDER BY COUNT(T3.day_id) DESC LIMIT 1
public_review_platform,Please indicate the business id have the closing time with the category of Arts & Entertainment on Sunday.,Sunday refers to day_of_week = 'Sunday' where day_id = 1; category of Arts & Entertainment refers to category_name = 'Arts & Entertainment';,"SELECT T1.business_id, T3.closing_time FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business_Hours AS T3 ON T1.business_id = T3.business_id INNER JOIN Days AS T4 ON T3.day_id = T4.day_id WHERE T2.category_name = 'Arts & Entertainment' AND T4.day_of_week = 'Sunday'"
public_review_platform,"In businesses with a category of ""DJs"", how many businesses are rated less than 5?","category of ""DJs"" refers to category_name = 'DJs'; rated less than 5 refers to stars < 5; businesses refer to business_id;",SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T3.category_name = 'DJs' AND T1.stars < 5
public_review_platform,List active business ids with opening times of 7AM and closing times of 8PM.,opening times of 7AM and closing times of 8PM refer to Business_Hours where opening_time = '7AM' and closing_time = '8PM'; active business refers to business_id where active = 'true';,SELECT DISTINCT T4.business_id FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business_Hours AS T3 ON T2.business_id = T3.business_id INNER JOIN Business AS T4 ON T3.business_id = T4.business_id WHERE T4.active = 'true' AND T3.opening_time = '7AM' AND T3.closing_time = '8PM'
public_review_platform,How many businesses with the category named Stadiums & Arenas are rated highest?,rated highest refers to MAX(stars); category_name = 'Stadiums & Arenas';,SELECT COUNT(T1.business_id) FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T1.business_id = T3.business_id WHERE T2.category_name = 'Stadiums & Arenas' AND T3.stars = ( SELECT MAX(stars) FROM Business )
public_review_platform,How many category id have low review count and rating more than 2?,rating more than 2 refers to stars > 2;,SELECT COUNT(DISTINCT T1.category_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T3.review_count = 'Low' AND T3.stars > 2
public_review_platform,Which businesses with the category name Accessories have opening hours before 7AM?,opening hours before 7AM refer to opening_time < '7AM'; businesses refer to business_id;,"SELECT T1.business_id FROM Business_Hours AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T3.category_name = 'Accessories' AND SUBSTR(T1.opening_time, -4, 2) * 1 < 7 AND T1.opening_time LIKE '%AM'"
public_review_platform,"Among the active businesses in Arizona, how many businesses work after 12PM?",active businesses in Arizona refer to business_id where state = 'Arizona' and active = 'true'; work after 12PM refer to opening_time > '12PM';,SELECT COUNT(DISTINCT T2.business_id) FROM Business_Hours AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id INNER JOIN Business_Categories AS T3 ON T2.business_id = T3.business_id INNER JOIN Categories AS T4 ON T3.category_id = T4.category_id WHERE T2.active = 'true' AND T2.state = 'AZ' AND T1.opening_time > '12PM'
public_review_platform,"Please provide the name of businesses with user id ""16328"".",name of business refers to category_name;,SELECT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Tips AS T3 ON T2.business_id = T3.business_id WHERE T3.user_id = 16328
public_review_platform,How many businesses have the category named food? List those businesses and find the percentage of businesses with less than 2 stars.,"businesses have the category named food refer to business_id where category_name = 'Food'; DIVIDE(COUNT(business_id where category_name = 'Food' and stars < 2), COUNT(business_id where category_name = 'Food')) as percentage;","SELECT T3.business_id, CAST((( SELECT COUNT(business_id) FROM Business WHERE stars < 2 ) - ( SELECT COUNT(business_id) FROM Business WHERE stars > 2 )) AS REAL) * 100 / ( SELECT COUNT(stars) FROM Business ) FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T1.business_id = T3.business_id WHERE T2.category_name = 'Food'"
public_review_platform,Calculate the percentage of businesses with the category name food that are open from 7AM to 8PM in the businesses with the same time.,"DIVIDE(COUNT(business_id where category_name = 'Food' and opening_time = '7AM' and closing_time = '8PM'), COUNT(business_id where opening_time = '7AM' and closing_time = '8PM')) as percentage;",SELECT CAST(SUM(CASE WHEN T3.category_name = 'Food' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.category_name) FROM Business_Categories AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T1.category_id = T3.category_id
public_review_platform,Write down the number of running business with each review count in Cave Creek city.,"number of running business refers to COUNT(business_id) where active = 'true'; each review count includes review_count = 'High', review_count = 'Medium', review_count = 'Low';","SELECT SUM(CASE WHEN review_count = 'High' THEN 1 ELSE 0 END) AS high , SUM(CASE WHEN review_count = 'Medium' THEN 1 ELSE 0 END) AS Medium , SUM(CASE WHEN review_count = 'Low' THEN 1 ELSE 0 END) AS low FROM Business WHERE city = 'Cave Creek' AND active = 'true'"
public_review_platform,Calculate the yearly average user who started using Yelp from the year of 2005 to 2014.,avg(user_id) where user_yelping_since_year BETWEEN '2005' AND '2014';,SELECT AVG(user_id) FROM Users WHERE user_yelping_since_year >= 2005 AND user_yelping_since_year <= 2015
public_review_platform,What is the active and inactive ratio of the business with the review count of low.,"DIVIDE(COUNT(business_id where review_count = 'Low' and active = 'true'), COUNT(business_id where review_count = 'Low' and active = 'false'));",SELECT CAST(SUM(CASE WHEN active = 'true' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN active = 'false' THEN 1 ELSE 0 END) AS radio FROM Business WHERE review_count = 'Low'
public_review_platform,List any five of user ID who became elite user in 2006.,year_id = '2006';,SELECT user_id FROM Elite WHERE year_id = 2006 LIMIT 5
public_review_platform,"Write down the any five of ID and name of category that starts with alphabet ""P"".","category that starts with alphabet ""P"" refers to category_name like 'P%';","SELECT category_id, category_name FROM Categories WHERE category_name LIKE 'P%' LIMIT 5"
public_review_platform,Provide the list of user ID along with review star of which has the review length of medium with business ID of 35.,;,"SELECT user_id, review_stars FROM Reviews WHERE business_id = 15 AND review_length = 'Medium'"
public_review_platform,"List down the business ID and attribute value of the attribute name of ""payment_types_visa"".",,"SELECT T2.business_id, T2.attribute_value FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.attribute_name = 'payment_types_visa'"
public_review_platform,"Describe ID and active status of the business under category of ""Diagnostic Imaging"".","ID refers to business_id; category of ""Diagnostic Imaging"" refers to category_name = 'Diagnostic Imaging';","SELECT T2.business_id, T3.active FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.category_name = 'Diagnostic Imaging'"
public_review_platform,Mention the user ID and their year of joining Yelp who had great experience on business ID 143.,year of joining Yelp refers to user_yelping_since_year; great experience refers to Reviews where review_stars = 5;,"SELECT T2.user_id, T2.user_yelping_since_year FROM Reviews AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T1.business_id = 143 AND T1.review_stars = 5"
public_review_platform,"Among the user ID with number in compliment of uber on profile, list any 5 user ID and the year when they join Yelp.",when join Yelp refers to user_yelping_since_year; compliment_type = 'profile'; number_of_compliments = 'Uber';,"SELECT T3.user_id, T3.user_yelping_since_year FROM Compliments AS T1 INNER JOIN Users_Compliments AS T2 ON T1.compliment_id = T2.compliment_id INNER JOIN Users AS T3 ON T2.user_id = T3.user_id WHERE T1.compliment_type = 'profile' AND T2.number_of_compliments = 'Uber' LIMIT 5"
public_review_platform,"List the user ID, business ID with review length of the business which received the most likes in tips.",business which received the most likes refers to business_id where MAX(likes);,"SELECT T1.user_id, T1.business_id, T2.review_length FROM Tips AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id ORDER BY T1.likes DESC LIMIT 1"
public_review_platform,"Among the elite users of 10 consecutive year from 2005 to 2014, list down the user ID and their number of compliment on photos.",from 2005 to 2014 refers to year_id BETWEEN 2005 AND 2014; compliment_type = 'photos';,"SELECT T2.user_id, T2.number_of_compliments FROM Compliments AS T1 INNER JOIN Users_Compliments AS T2 ON T1.compliment_id = T2.compliment_id INNER JOIN Elite AS T3 ON T2.user_id = T3.user_id WHERE T3.year_id BETWEEN 2005 AND 2014 AND T1.compliment_type = 'photos'"
public_review_platform,Calculate the percentage of business which opened on Sunday from 9AM to 9PM based on the number of business opened on Sunday.,"Sunday refers to day_of_week = 'Sunday' where day_id = 1; opened from 9AM to 9PM refers to Business_Hours where opening_time = '9AM' and closing_time = '9PM'; DIVIDE(COUNT(opening_time = '9AM' and closing_time = '9PM' and day_of_week = 'Sunday'), COUNT(opening_time = NOT NULL and closing_time = NOT NULL and day_of_week = 'Sunday')) as percentage;",SELECT CAST(SUM(CASE WHEN T2.opening_time = '9AM' AND T2.closing_time = '9PM' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.day_id) FROM Days AS T1 INNER JOIN Business_Hours AS T2 ON T1.day_id = T2.day_id WHERE T1.day_of_week = 'Sunday'
public_review_platform,Write down the ID and opening day of a week for the business which are running in Black Canyon City.,running refers to active = 'true'; opening day of a week means days of the week when business is open;,"SELECT T2.business_id, T3.day_of_week FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city = 'Black Canyon City' AND T1.active = 'true'"
public_review_platform,"Within the user who joined Yelp in 2004, explore the user ID with average star of 5 and it's review length on the business.",user who joined Yelp in 2004 refers to user_id where user_yelping_since_year = 2014; user_average_stars = 5;,"SELECT T2.user_id, T2.review_length FROM Users AS T1 INNER JOIN Reviews AS T2 ON T1.user_id = T2.user_id WHERE T1.user_yelping_since_year = 2004 AND T1.user_average_stars = 5"
public_review_platform,Which business ID received the review of 4 star and above by 65% of user? Describe their active status and city.,"review of 4 star and above refers to stars > 4; DIVIDE(SUM(stars > 4), COUNT(business_id)) = 0.65;","SELECT DISTINCT T2.business_id, T2.city FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T1.review_stars >= 4 AND ( SELECT CAST(( SELECT COUNT(DISTINCT T1.user_id) FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T1.review_stars >= 4 ) AS REAL) * 100 / ( SELECT COUNT(user_id) FROM Users ) > 65 )"
public_review_platform,Calculate the difference between running business in Glendale City and Mesa City.,running business refers to business where active = 'true';,SELECT SUM(CASE WHEN city = 'Glendale' THEN 1 ELSE 0 END) - SUM(CASE WHEN city = 'Mesa' THEN 1 ELSE 0 END) AS diff FROM Business WHERE active = 'true'
public_review_platform,How many likes did short comment left by users who joined in 2010 get?,short comment refers to tip_length = 'Short'; users who joined in 2010 refer to user_id where user_yelping_since_year = 2010;,SELECT SUM(T2.likes) FROM Users AS T1 INNER JOIN Tips AS T2 ON T1.user_id = T2.user_id WHERE T1.user_yelping_since_year = 2010
public_review_platform,"For users with average ratings of 3, what kind of tip length they mostly left?",average ratings of 3 refer to user_average_stars = 3; kind of tip length they mostly left refers to tip_length where MAX(COUNT(user_id));,SELECT T2.tip_length FROM Users AS T1 INNER JOIN Tips AS T2 ON T1.user_id = T2.user_id WHERE T1.user_average_stars = 3 GROUP BY T2.tip_length ORDER BY COUNT(T2.tip_length) DESC LIMIT 1
public_review_platform,Sum up the likes get by short reviews on businesses located in City Goodyear.,short reviews refer to tip_length = 'Short';,SELECT SUM(T2.likes) AS likes FROM Business AS T1 INNER JOIN Tips AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'Goodyear'
public_review_platform,"For businesses with long length reviews, which state are they located?",businesses with long length tips refer to business_id where tip_length = 'Long';,SELECT DISTINCT T1.state FROM Business AS T1 INNER JOIN Tips AS T2 ON T1.business_id = T2.business_id WHERE T2.tip_length = 'Long'
public_review_platform,"How much time do businesses in El Mirage City, AZ State operate in average daily?","how much time does this business open refers to SUBTRACT(closing_time, opening_time); DIVIDE(SUM(SUBTRACT(closing_time, opening_time)), SUM(Business.business_id))",SELECT SUM(T2.closing_time - T2.opening_time) FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'El Mirage' AND T1.state = 'AZ'
public_review_platform,List down the closing day of businesses located at SC State.,"closing day refers to SUBTRACT(days.day_id, business_Hours.day_id)",SELECT T3.day_id - T2.day_id FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.state = 'SC'
public_review_platform,List down the category of businesses whose stars ratings are 5.,category of businesses refers to category_name; stars ratings are 5 refers to stars = 5,SELECT DISTINCT T3.category_name FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T1.stars = 5
public_review_platform,What are the states of businesses with attribute of beer and wine located?,with attribute of beer and wine refers to attribute_value = 'beer_and_wine';,SELECT DISTINCT T2.state FROM Business_Attributes AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T1.attribute_value = 'beer_and_wine'
public_review_platform,How many user's compliment in photo has medium in number?,user's compliment in photo refers to compliment_type = 'photo'; photo has medium in number refers to number_of_compliments = 'Medium',SELECT COUNT(T2.user_id) FROM Compliments AS T1 INNER JOIN Users_Compliments AS T2 ON T1.compliment_id = T2.compliment_id WHERE T1.compliment_type = 'photos' AND T2.number_of_compliments = 'Medium'
public_review_platform,"Among businesses with ""Wi-Fi"" attribute, which businesses id are located at SC State?","""Wi-Fi"" attribute refers to attribute_name = 'Wi-Fi' AND attribute_value = 'true'",SELECT T3.business_id FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.attribute_name = 'Wi-Fi' AND T2.attribute_value = 'true' AND T3.state = 'SC'
public_review_platform,"Sum up the number of business with ""ambience_romantic"" attribute.","""ambience_romantic"" attribute refers to attribute_name = 'ambience_romantic' AND attribute_value = 'true'",SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.attribute_name = 'ambience_romantic' AND T2.attribute_value = 'true'
public_review_platform,"What is the percentage of businesses with ""Good for Kids"" attribute over the other attributes?","""Good for Kids"" attribute refers to attribute_name = 'Good for Kids' AND attribute_value = 'true'; Calculation = DIVIDE(SUM(attribute_name = 'Good for Kids' AND attribute_value = 'true')), SUM(business_id) * 100",SELECT CAST(SUM(CASE WHEN attribute_name = 'Good for Kids' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.attribute_value = 'true'
public_review_platform,How many businesses are not closed in the city of Mesa?,businesses are not closed refers to active = 'true',SELECT COUNT(business_id) FROM Business WHERE city = 'Mesa' AND active = 'true'
public_review_platform,In how many businesses have customers had a bad or terrible experience?,stars = 2 means bad experience; stars = 1 means terrible experience; customers had a bad or terrible experience refers to stars = 2 OR stars = 1,"SELECT COUNT(business_id) FROM Business WHERE stars IN (1, 2)"
public_review_platform,List by ID the businesses with the reviews with the lowest veracity of Paradise Valley.,ID of businesses refers to business_id; reviews with the lowest veracity refers to review_count = 'Low' AND stars > 3; Paradise Valley is a city,SELECT business_id FROM Business WHERE stars > 3 AND city = 'Paradise Valley' AND review_count = 'Low'
public_review_platform,How many businesses have more than 1 attribute?,businesses have more than 1 attribute refers to COUNT(attribute_value) > 1,SELECT COUNT(business_id) FROM Business_Attributes WHERE attribute_value > 1
public_review_platform,How many businesses are opened the same number of hours every day of the week?,"how much time does this business open refers to SUBTRACT(closing_time, opening_time); every day of the week refers to day_id BETWEEN 1 AND 7",SELECT COUNT(business_id) FROM Business_Hours WHERE opening_time = '8AM' AND closing_time = '6PM'
public_review_platform,How many reviews of businesses that are still open received an uber rating on the funny vote?,businesses that still open refers to active = 'true'; business received an uber rating on the funny vote refers to review_votes_funny = 'Uber',SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T2.review_votes_funny = 'Uber' AND T1.active = 'true'
public_review_platform,How many of the users who use a high number of compliments do not have any fans?,do not have fans refers to user_fans = 'None'; high number of compliment refers to number_of_compliments = 'High',SELECT COUNT(T2.user_id) FROM Users_Compliments AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T1.number_of_compliments = 'High' AND T2.user_fans = 'None'
public_review_platform,What is the most common type of compliments that a user has received from other users?,the most common type of compliments refers to MAX(COUNT(compliment_type)),SELECT T2.compliment_type FROM Users_Compliments AS T1 INNER JOIN Compliments AS T2 ON T1.compliment_id = T2.compliment_id GROUP BY T2.compliment_type ORDER BY COUNT(T2.compliment_type) DESC LIMIT 1
public_review_platform,How many stars does each of the 3 top users with the most likes in their reviews have?,more likes mean this tip is more valuable; the most likes refers to MAX(likes); stars refers to users_average_stars,SELECT T2.user_average_stars FROM Tips AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id GROUP BY T2.user_id ORDER BY SUM(T1.likes) DESC LIMIT 3
public_review_platform,In which categories does the only business located in the city of Arcadia appear?,categories refers to category_name,SELECT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T3.city = 'Arcadia'
public_review_platform,List by their id all businesses that are open on Sunday.,day_of_week = 'Sunday'; open on Sunday refers to day_id = 1,SELECT T1.business_id FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id WHERE T1.day_id = 1
public_review_platform,How many businesses with music_karaoke attribute are closed?,music_karaoke attribute refers to attribute_name = 'music_karaoke' AND attribute_value = 'true'; businesses are closed refers to active = 'false',"SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.attribute_name = 'music_karaoke' AND T3.active = 'false' AND T2.attribute_value IN ('none', 'no', 'false')"
public_review_platform,How many open businesses in the City of Phoenix have users left a long review?,open businesses refers to active = 'true'; long review refers to review_length = 'Long',SELECT COUNT(DISTINCT T2.business_id) FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T1.review_length = 'Long' AND T2.active = 'true' AND T2.city = 'Phoenix'
public_review_platform,How many users who have received a low cool vote have also received at least 1 low cool vote for some of their reviews?,low cool vote for user refers to user_votes_cool = 'Low';  low cool vote for review refers to review_votes_cool = 'Low',SELECT COUNT(DISTINCT T1.user_id) FROM Users AS T1 INNER JOIN Reviews AS T2 ON T1.user_id = T2.user_id WHERE T1.user_votes_cool = 'Low' AND T2.review_votes_cool = 'Low'
public_review_platform,How many users with a long tip and 2 likes for their tip have a high number of fans?,long tip refers to tip_length = 'Long'; 2 likes refers to likes = 2; high number of fans refers to user_fans = 'High',SELECT COUNT(DISTINCT T1.user_id) FROM Users AS T1 INNER JOIN Tips AS T2 ON T1.user_id = T2.user_id WHERE T2.tip_length = 'Long' AND T2.likes = 2 AND T1.user_fans = 'High'
public_review_platform,In how many businesses with the ambience_trendy attribute?,ambience_trendy attribute refers to attribute_name = 'ambience_trendy' AND attribute_value = 'false',"SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.attribute_name = 'ambience_trendy' AND T2.attribute_value IN ('none', 'no', 'false')"
public_review_platform,How many businesses in the city of Scottsdale open on Sunday at 12PM?,businesses that opened on Sunday refers to day_of_week = 'Sunday'; businesses that opened at 12PM refers to opening_time = '12PM',SELECT COUNT(DISTINCT T2.business_id) FROM Business AS T1 INNER JOIN Business_hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city = 'Scottsdale' AND T3.day_of_week = 'Sunday' AND T2.opening_time = '12PM'
public_review_platform,What is the average number of stars for businesses in the Obstetricians & Gynecologists category?,Obstetricians & Gynecologists category refers to category_name = 'Obstetricians & Gynecologists'; calculation = AVG(stars),SELECT CAST(SUM(T1.stars) AS REAL) / COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T3.category_name = 'Obstetricians & Gynecologists'
public_review_platform,Calculate the percentage of users with a high number of fans who were elite in 2011.,"users with a high number of fans refers to user_fans = 'High'; 2011 refers to actual_year = 2011; Calculation = DIVIDE(Elite.user_id where user_fans = 'High' AND actual_year = 2011, Elite.user_id where actual_year = 2011) * 100",SELECT CAST(SUM(CASE WHEN T3.user_fans = 'High' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.user_fans) FROM Years AS T1 INNER JOIN Elite AS T2 ON T1.year_id = T2.year_id INNER JOIN Users AS T3 ON T2.user_id = T3.user_id WHERE T1.actual_year = 2011
public_review_platform,How many of the businesses are in Surprise?,Surprise is a city,SELECT COUNT(business_id) FROM Business WHERE city = 'Surprise'
public_review_platform,List down the business ID with a high review count in Tempe.,Tempe is a city; high review count refers to review_count = 'High',SELECT business_id FROM Business WHERE review_count = 'High' AND city = 'Tempe'
public_review_platform,What is the total number of active businesses in AZ with a medium review count?,active businesses refers to active = 'true'; AZ is a state; medium review count refers to review_count = 'Medium',SELECT COUNT(business_id) FROM Business WHERE review_count = 'Medium' AND state = 'AZ' AND active = 'true'
public_review_platform,"List down the business ID with a star range from 3 to 5, located at Chandler.",businesses with a star range from 3 to 5 refers to stars BETWEEN 3 AND 5; Chandler is a city,SELECT business_id FROM Business WHERE stars >= 3 AND stars < 6 AND city = 'Chandler'
public_review_platform,"In users yelping since 2009 to 2011, how many of them have low count of fans?",users in yelping since 2009 to 2011 refers to user_yelping_since_year BETWEEN 2009 AND 2011; low count of fans refers to user_fans = 'Low',SELECT COUNT(user_id) FROM Users WHERE user_yelping_since_year >= 2009 AND user_yelping_since_year < 2012 AND user_fans = 'Low'
public_review_platform,What is the review length of user 11021 to business with business ID 3?,review length refers to review_length; user 11021 refers to user_id = 11021; business ID 3 refers to business_id = 3,SELECT review_length FROM Reviews WHERE user_id = 11021 AND business_id = 3
public_review_platform,"Among the businesses in Tempe, list the attribute of the business with a medium review count.",Tempe is a city; high review count refers to review_count = 'High',SELECT DISTINCT T3.attribute_name FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.city = 'Tempe' AND T1.review_count = 'Medium'
public_review_platform,"In businesses with a category of food, how many of them have a star rating below 3?",category of food refers to category_name = 'Food'; star rating below 3 refers to stars < 3,SELECT COUNT(DISTINCT T1.business_id) FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T3.category_name = 'Food' AND T1.stars < 3
public_review_platform,List the active business ID and its stars of the businesses fall under the category of Food.,active business ID refers to active = 'true'; category of Food refers to category_name = 'Food',"SELECT DISTINCT T1.business_id, T1.stars FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T3.category_name = 'Food' AND T1.active = 'true'"
public_review_platform,What is the category and attributes of businesses with highest star rating?,category of the business refers to category_name; attributes of the business refers to attribute_name; the highest star rating refers to MAX(stars),"SELECT DISTINCT T3.category_name, T5.attribute_name FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id INNER JOIN Business_Attributes AS T4 ON T2.business_id = T4.business_id INNER JOIN Attributes AS T5 ON T4.attribute_id = T5.attribute_id WHERE T1.stars = ( SELECT MAX(stars) FROM Business )"
public_review_platform,What is the category of the business with short review length and highest review stars within business ID from 7 to 14?,category of the business refers to category_name; short review length refers to review_length = 'Short'; the highest star rating refers to MAX(stars); business ID from 7 to 14 refers to business_id BETWEEN 7 AND 14,SELECT DISTINCT T3.category_name FROM Reviews AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T2.business_id >= 7 AND T2.business_id < 15 AND T1.review_length = 'Short' AND T1.review_stars = ( SELECT MAX(review_stars) FROM Reviews )
public_review_platform,Count the active businesses that has an attribute of BYOB with high review count.,active business ID refers to active = 'true'; category of Food refers to category_name = 'Food'; attribute of BYOB refers to attribute_name = 'BYOB'; high review count refers to review_count = 'High',SELECT COUNT(DISTINCT T1.business_id) FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T3.attribute_name = 'BYOB' AND T1.review_count = 'High' AND T1.active = 'true'
public_review_platform,What is the closing and opening time of businesses located at Glendale with highest star rating?,Glendale is a city; the highest star rating refers to MAX(stars),"SELECT T2.opening_time, T2.closing_time FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'Glendale' ORDER BY T1.stars DESC LIMIT 1"
public_review_platform,"Among the active businesses located at Goodyear, AZ, list the category and atrributes of business with a high review count.",active business ID refers to active = 'true'; Goodyear is a city; AZ is a state; high review count refers to review_count = 'High',"SELECT T3.category_name, T5.attribute_name FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id INNER JOIN Business_Attributes AS T4 ON T1.business_id = T4.business_id INNER JOIN Attributes AS T5 ON T4.attribute_id = T5.attribute_id WHERE T1.review_count = 'High' AND T1.city = 'Goodyear' AND T1.state = 'AZ' AND T1.active = 'true'"
public_review_platform,"List the categories of active businesses in Glendale, AZ.",active business ID refers to active = 'true'; categories refers to category_name; Glendale is a city; AZ is a state,SELECT DISTINCT T3.category_name FROM Business_Categories AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T1.category_id = T3.category_id WHERE T2.active = 'true' AND T2.state = 'AZ' AND T2.city = 'Glendale'
public_review_platform,Find the location of businesses that has business hours from 7 am to 7 pm every Wednesday.,location of business refers to city; business hours from 7am to 7pm refers to opening_time = '7AM' AND closing_time = '7PM'; Wednesday refers to day_of_week = 'Wednesday',SELECT DISTINCT T1.city FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T2.opening_time = '7AM' AND T2.closing_time = '7PM' AND T3.day_of_week = 'Wednesday'
public_review_platform,"What is the attribute value of an active business with a low review count and 3 stars which is located at Goodyear, AZ?",active business ID refers to active = 'true'; low review count refers to review_count = 'Low'; 3 stars refers to stars = 3; Goodyear is a city; AZ is a state,SELECT DISTINCT T2.attribute_value FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.state = 'AZ' AND T1.city = 'Goodyear' AND T1.active = 'true' AND T1.stars = 3 AND T1.review_count = 'Low'
public_review_platform,What is the opening time of the active businesses in Glendale that have a medium review count.,active business ID refers to active = 'true'; Glendale is a city; medium review count refers to review_count = 'Medium',SELECT DISTINCT T2.opening_time FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city = 'Glendale' AND T1.review_count = 'Medium' AND T1.active = 'true'
public_review_platform,"Among the businesses with a category of Food, what is the percentage of the business with greater than 3 stars?","category of food refers to category_name = 'Food'; calculation = DIVIDE(COUNT(stars > 3), SUM(stars))",SELECT CAST(SUM(CASE WHEN T1.stars > 3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.stars) FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T3.category_name = 'Food'
public_review_platform,List the closing time and day of week of active businesses in Goodyear with stars greater than the 80% of average age of star rating.,active business ID refers to active = 'true'; Goodyear is a city; Calculation = AVG(stars) * 0.8; businesses with stars greater than 80% of average star rating refers to stars > AVG(stars) * 0.8,"SELECT DISTINCT T2.closing_time, T3.day_of_week FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.active = 'true' AND T1.city = 'Goodyear' AND T1.stars > ( SELECT AVG(stars) * 0.8 FROM Business WHERE active = 'true' AND city = 'Goodyear' )"
citeseer,"Among all the citation, what is the percentage of paper ID under the Agents classification?","classification refers to class_label; class_label = 'Agents'; percentage = (divide(count(paper_id where class_label = 'Agents')), (count(paper_id)))*100;",SELECT CAST(COUNT(CASE WHEN class_label = 'Agents' THEN paper_id ELSE NULL END) AS REAL) * 100 / COUNT(paper_id) FROM paper
citeseer,What is the most cited word? How many papers was that word cited in?,most cited word refers to max(count(word_cited_id);,"SELECT word_cited_id, COUNT(paper_id) FROM content GROUP BY word_cited_id ORDER BY COUNT(word_cited_id) DESC LIMIT 1"
citeseer,What is the total number of word cited under that class labelled 'AI'?,,SELECT COUNT(DISTINCT T2.word_cited_id) FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id WHERE T1.class_label = 'AI'
citeseer,"For all words cited in paper ID 315017, state the other paper ID and class label which also cited those words.",,"SELECT T1.class_label, T2.word_cited_id FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id WHERE T1.paper_id = 315017"
citeseer,"Among all the DB class type citation, which word is the most frequently cited?",class type refers to class_label; class_label = 'DB'; word that is most frequently cited refers to max(count(word_cited_id);,SELECT T2.word_cited_id FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id WHERE T1.class_label = 'DB' GROUP BY T2.word_cited_id ORDER BY COUNT(T2.word_cited_id) DESC LIMIT 1
citeseer,Calculate the percentage of words used in Agents class label.,"percentage = (divide(count(word_cited_id where class_label = 'Agents')), (count(word_cited_id)))*100;",SELECT CAST(COUNT(DISTINCT CASE WHEN T1.class_label = 'Agents' THEN T2.word_cited_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.word_cited_id) FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id
citeseer,Which paper ID cited the most word? In which class label does it belongs to?,most cited word refers to max(word_cited_id);,"SELECT T1.paper_id, T1.class_label FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id GROUP BY T1.paper_id, T1.class_label ORDER BY COUNT(T2.word_cited_id) DESC LIMIT 1"
citeseer,List all the paper ID and its class type that cited the word 'word1002'.,class type refers to class_label;,"SELECT T1.paper_id, T1.class_label FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id WHERE T2.word_cited_id = 'word1002'"
citeseer,List all words cited in the AI class label.,,SELECT DISTINCT T2.word_cited_id FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id WHERE T1.class_label = 'AI'
citeseer,What is the class label of paper ID 'chakrabarti01integrating'. How many words were cited by this paper ID?,,"SELECT DISTINCT T1.class_label, COUNT(T2.word_cited_id) FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id WHERE T1.paper_id = 'chakrabarti01integrating' GROUP BY T1.class_label"
citeseer,List all paper ID and its class type with more than 20 cited words.,class type refers to class_label; count(word_cited_id)>20,"SELECT DISTINCT T1.paper_id, T1.class_label FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id GROUP BY T2.paper_id, T1.class_label HAVING COUNT(T2.word_cited_id) > 20"
citeseer,List the words that are cited in both AI and IR class label.,,SELECT DISTINCT T2.word_cited_id FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id WHERE T1.class_label = 'AI' OR T1.class_label = 'IR'
citeseer,"Name the paper which is cited most times and the paper which is cited least times? Also, find the number of times each one is cited.",,"SELECT cited_paper_id, COUNT(cited_paper_id), ( SELECT cited_paper_id FROM cites GROUP BY cited_paper_id ORDER BY COUNT(cited_paper_id) ASC LIMIT 1 ), ( SELECT COUNT(cited_paper_id) FROM cites GROUP BY cited_paper_id ORDER BY COUNT(cited_paper_id) ASC LIMIT 1 ) FROM cites GROUP BY cited_paper_id ORDER BY COUNT(cited_paper_id) DESC LIMIT 1"
citeseer,"On average, how many papers are under the ML class?","class refers to class_label; average = divide(count(paper_id where class_label = 'M')), (count(paper_id)));",SELECT CAST(COUNT(CASE WHEN class_label = 'ML' THEN paper_id ELSE NULL END) AS REAL) / COUNT(paper_id) FROM paper
citeseer,Find the words cited in papers that are cited by sima01computational?,paper cited by refers to citing_paper_id; citing_paper_id = 'sima01computational';,SELECT DISTINCT T2.word_cited_id FROM cites AS T1 INNER JOIN content AS T2 ON T1.cited_paper_id = T2.paper_id WHERE T1.citing_paper_id = 'sima01computational'
citeseer,How many papers were cited by schmidt99advanced cited word3555?,paper cited by refers to citing_paper_id; citing_paper_id = 'schmidt99advanced';,SELECT COUNT(T2.paper_id) FROM cites AS T1 INNER JOIN content AS T2 ON T1.cited_paper_id = T2.paper_id WHERE T1.citing_paper_id = 'schmidt99advanced' AND T2.word_cited_id = 'word3555'
citeseer,Under what classification do the papers that cited word1163 belong?,,SELECT DISTINCT T1.class_label FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id WHERE T2.word_cited_id = 'word1163'
citeseer,"Among the papers under DB classification, which paper has the highest number of words cited?",classification refers to class_label; class_label = 'DB';,SELECT T1.paper_id FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id WHERE T1.class_label = 'DB' GROUP BY T1.paper_id ORDER BY COUNT(T2.word_cited_id) DESC LIMIT 1
citeseer,"In the papers classified as ML, how many cited butz01algorithmic?",classification refers to class_label; paper cited by refers to citing_paper_id; citing_paper_id = 'butz01algorithmic';,SELECT COUNT(T1.paper_id) FROM paper AS T1 INNER JOIN cites AS T2 ON T1.paper_id = T2.citing_paper_id WHERE T1.class_label = 'ML' AND T2.cited_paper_id = 'butz01algorithmic'
simpson_episodes,Which crew member of the simpson 20s is the oldest?,oldest refers to Min(birthdate),SELECT name FROM Person WHERE birthdate IS NOT NULL ORDER BY birthdate ASC LIMIT 1;
simpson_episodes,What's the nickname for Dan Castellaneta?,"""Dan Castellaneta"" is the name of Person",SELECT nickname FROM Person WHERE name = 'Dan Castellaneta';
simpson_episodes,"Among the crew members of the simpson 20s born in the New York city, how many of them were born after the year 1970?","born in New York city refers to birth_region = 'New York'; born after year 1970 refers to ('%Y', birthdate) > 1970","SELECT COUNT(name) FROM Person WHERE birth_region = 'New York' AND SUBSTR(birthdate, 1, 4) > '1970';"
simpson_episodes,In which country was the winner of the Outstanding Voice-Over Performance award of 2009 born?,"""Outstanding Voice-Over Performance"" is the award; 2009 refers to year = 2009; 'Winner' is the result; country refers to birth_country",SELECT T1.birth_country FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.award = 'Outstanding Voice-Over Performance' AND T2.year = 2009 AND T2.result = 'Winner';
simpson_episodes,Please list the names of all the awards won by the crew member whose nickname is Doofus.,award won refers to result = 'Winner',SELECT T2.award FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T1.nickname = 'Doofus' AND T2.result = 'Winner';
simpson_episodes,How many crew members who were born in the USA were nominated for the Outstanding Animated Program (For Programming Less Than One Hour) award in 2009?,born in USA refers to birth_country = 'USA'; were nominated refers to result = 'Nominee'; 'Outstanding Animated Program (For Programming Less Than One Hour)' is the award; in 2009 refers to year = 2009,SELECT COUNT(*) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T1.birth_country = 'USA' AND T2.result = 'Nominee' AND T2.award = 'Outstanding Animated Program (For Programming Less Than One Hour)' AND T2.year = 2009;
simpson_episodes,Which character won the Outstanding Voice-Over Performance award in 2009?,won refers to result = 'Winner',SELECT DISTINCT T1.character FROM Character_Award AS T1 INNER JOIN Award AS T2 ON T1.award_id = T2.award_id WHERE T2.award = 'Outstanding Voice-Over Performance' AND T2.year = 2009 AND T2.result = 'Winner';
simpson_episodes,Please list all the keywords of the episode Lost Verizon.,"""Lost Verizon"" is the title of episode",SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Lost Verizon';
simpson_episodes,How many keywords does the episode that was aired on 2008/10/19 have?,aired on 2008/10/19 refers to air_date = '2008-10-19',SELECT COUNT(T2.keyword) FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.air_date = '2008-10-19';
simpson_episodes,What's the rating of the episode in which Dan Castellaneta won the Outstanding Voice-Over Performance award in 2009?,"""Dan Castellaneta"" is the person;  2009 is year;  won refers result = 'Winner'","SELECT T2.rating FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award = 'Outstanding Voice-Over Performance' AND SUBSTR(T1.year, 1, 4) = '2009' AND T1.person = 'Dan Castellaneta';"
simpson_episodes,How many 7-star votes in star score did the episode Lost Verizon have?,7-stars vote refers to stars = 7; 'Lost Verizon' is the title of episode,SELECT COUNT(*) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'Lost Verizon' AND T2.stars = 7;
simpson_episodes,How many stars did most of the voters give in star score for the episode Lost Verizon?,"""Lost Verizon"" is the title of episode; most voters refers to Max(votes)",SELECT T2.stars FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'Lost Verizon' ORDER BY T2.votes DESC LIMIT 1;
simpson_episodes,Please list the titles of the episodes that have over 200 voters voting a 10 in star score.,over 200 votes refers to votes > 200; 10 in star score refers to stars = 10,SELECT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.votes > 200 AND T2.stars = 10;
simpson_episodes,How many episodes aired in the year 2009 have over 15% of voters giving 10 stars in star score?,aired in the year 2009 refers to air_date like '2009%'; 10 stars in star score refers to stars = 10; over 15% of voters refers to Votes.percent > 15,"SELECT COUNT(*) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTR(T1.air_date, 1, 4) = '2009' AND T2.stars = 10 AND T2.percent > 15;"
simpson_episodes,What's the title of the episode that got the most 7-star votes in star score?,7-stars vote refers to stars = 7;  most refers to Max(votes),SELECT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars = 7 ORDER BY T2.votes DESC LIMIT 1;
simpson_episodes,How many stars on average does the episode Lost Verizon have?,"""Lost Verizon"" is the title of episode; stars on average = Divide( Sum (Multiply (votes, stars)), Sum(votes))",SELECT CAST(SUM(T2.votes * T2.stars) AS REAL) / SUM(T2.votes) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'Lost Verizon';
simpson_episodes,What is the percentage of Primetime Emmy nominated episodes with a rating over 7 to all the episodes that have a rating over 7?,"""Primetime Emmy' is the award_category;  rating over 7 refers to rating > 7; nominated refers to result = 'Nominee'; percentage = Divide(Count(episode_id(award_category = 'Primetime Emmy')), Count (episode_id)) * 100",SELECT CAST(SUM(CASE WHEN T1.award_category = 'Primetime Emmy' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T2.rating > 7 AND T1.result = 'Nominee';
simpson_episodes,Name the title of the episode where Pamela Hayden voiced the character 'Ruthie.',"""Pamela Hayden"" is the person; voice the character 'Ruthie' refers to role = 'Ruthie'",SELECT T1.title FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.person = 'Pamela Hayden' AND T2.role = 'Ruthie';
simpson_episodes,List down all the roles of Matt Groening on the episode titled 'In the Name of the Grandfather' along with the episode number and series number.,"""Matt Groening"" is the person; 'In the Name of the Grandfather' is the title of episode; episode number refers to episode; series number refers to number_in_series","SELECT T2.role, T1.episode, T1.number_in_series FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.person = 'Matt Groening' AND T1.title = 'In the Name of the Grandfather';"
simpson_episodes,Write down the title and summary of the episode with the keyword 'eviction.',,"SELECT T1.title, T1.summary FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T2.keyword = 'eviction';"
simpson_episodes,What is the average number of stars received by the episode titled 'Wedding for Disaster.',"""Wedding for Disaster"" is the title of episode; average number of stars = Divide(Sum(stars), Count(stars))",SELECT AVG(T2.stars) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'Wedding for Disaster';
simpson_episodes,Write the title and all the keywords of the episode that was aired on 3/22/2009.,aired on 3/22/2009 refers to air_date = '2009-03-22',"SELECT T1.title, T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.air_date = '2009-03-22';"
simpson_episodes,What is the birth name of the person who voiced 'Helen Lovejoy?',"voiced refers to role; role = 'Helen Lovejoy""",SELECT DISTINCT T1.birth_name FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T2.role = 'Helen Lovejoy';
simpson_episodes,What is the percentage ratio between uncredited and credited roles on the episode that won the 2017 Jupiter Award for Best International TV Series? Please include the title of the episode and the names of the persons who were uncredited alongside their role in that episode.,"uncredited refers to credited = ''; credited refers to credited = 'true'; won refers to result = 'Winner'; 2017 is the year; 'Jupiter Award' is the award_category; 'Best International TV Series' is the award; percentage ratio = Divide (SUM(credited = ''), SUM(credited = 'true')) * 100","SELECT CAST(SUM(CASE WHEN T2.credited = 'false' THEN 1 END) AS REAL) * 100 / SUM(CASE WHEN T2.credited = 'true' THEN 1 END), T3.title, T2.person FROM Award AS T1 INNER JOIN Credit AS T2 ON T2.episode_id = T1.episode_id INNER JOIN Episode AS T3 ON T1.episode_id = T3.episode_id WHERE SUBSTR(T1.year, 1, 4) = '2017' AND T1.award_category = 'Jupiter Award' AND T1.award = 'Best International TV Series' AND T1.result = 'Winner';"
simpson_episodes,How many episodes have more than 1000 votes?,more than 1000 votes refers to votes > 1000,SELECT COUNT(episode_id) FROM Episode WHERE votes > 1000;
simpson_episodes,"How many persons were born in New York, USA?","""New York"" is the birth_place; 'USA' is the birth_region",SELECT COUNT(name) FROM Person WHERE birth_place = 'New York City' AND birth_country = 'USA';
simpson_episodes,"List the name of all awards along with the award category, nominated by Marc Wilmore.","""Marc Wilmore"" is the name of person","SELECT award_id, award_category FROM Award WHERE person = 'Marc Wilmore';"
simpson_episodes,How many crew have their own nickname? List their full name along with the nickname.,crew refers to Person; full name refers to name; have nickname refers to nickname IS NOT NULL,SELECT COUNT(name) FROM Person WHERE nickname IS NOT NULL;
simpson_episodes,Find the average height for each person.,"average high = Divide(Sum(height_meters), Count(name))",SELECT AVG(height_meters) FROM Person;
simpson_episodes,Calculate the difference between the highest votes for episode and the lowest votes for episode.,"highest vote refers to Max(votes); lowest vote refers to Min(votes); difference = Subtract(Max(votes), Min(votes))",SELECT MAX(votes) - MIN(votes) FROM Vote;
simpson_episodes,List the name character awarded for the Outstanding Voice-Over Performance award in 2009.,in 2009 refers to year = 2009,SELECT T2.character FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T1.year = 2009 AND T1.award = 'Outstanding Voice-Over Performance';
simpson_episodes,"Among the person nominated for the Comedy Series Award in 2009, how many of them were born in California?",nominated refers to result = 'Nominee'; born in California refers to birth_place = 'California'; in 2009 refers to year = 2009,SELECT COUNT(*) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.year = 2009 AND T2.award = 'Comedy Series' AND T1.birth_region = 'California';
simpson_episodes,What is the title of episode that won the Best International TV Series Award in 2017?,won refers to result = 'Winner'; in 2017 refers to year = 2017,"SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTR(T1.year, 1, 4) = '2017' AND T1.award = 'Best International TV Series' AND T1.result = 'Winner';"
simpson_episodes,List the name of persons who were not included in the credit for the 'How the Test Was Won' episode.,"""How the Test Was Won"" is the title of episode; not included in the credit refers to credited = ' '; name of person refers to person",SELECT T2.person FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'How the Test Was Won' AND T2.credited = 'false';
simpson_episodes,What is the title of episode that has a keyword of 'riot' and 'cake'?,"""riot"" and ""cake"" are both keyword","SELECT DISTINCT T1.title FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T2.keyword IN ('riot', 'cake');"
simpson_episodes,Which episode has the most vote for 10 stars rating?,10 stars rating refers to stars = 10; most vote refers to Max(votes),SELECT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars = 10 ORDER BY T1.votes DESC LIMIT 1;
simpson_episodes,Name all the person who involved in the making of simpson 20s episode that aired between October to November.,"aired between October to November refers to strftime('%m', air_date) between '10' and '11';","SELECT DISTINCT T2.person FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTR(T1.air_date, 6, 2) BETWEEN '10' AND '11';"
simpson_episodes,State the name of director for the 'Treehouse of Horror XIX' episode.,"""Treehouse of Horror XIX"" is the title of episode; 'director' is the role of person; name refers to person",SELECT T2.person FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Treehouse of Horror XIX' AND T2.role = 'director';
simpson_episodes,"Based on the credits, state how many roles were played in the 5th episode of simpson 20.",5th episode refers to episode = 5,SELECT COUNT(DISTINCT T2.role) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.episode = 5;
simpson_episodes,"List all the keyword for 'Take My Life, Please' episode.","""Take My Life,Please"" is the title of episode","SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Take My Life, Please';"
simpson_episodes,"Among the episode that get more than 950 votes, how many of the episodes were nominated for the 'Outstanding Voice-Over Performance Award in 2009'? Find the percentage of the episodes.","more than 950 votes refers to votes > 950; in 2009 refers to year = 2009; number of episode = Count(episode_id); nominated refers to result = 'Nominee'; percentage = Divide(Count(award = 'Outstanding Voice-Over Performance'), Count(episode_id)) * 100",SELECT CAST(SUM(CASE WHEN T1.award = 'Outstanding Voice-Over Performance' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.episode_id) FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T2.votes > 950 AND T1.year = 2009;
simpson_episodes,"What is the ratio between the 5 stars votes for 'No Loan Again, Naturally' episode and 'Coming to Homerica' episode?","5 stars votes refers to stars = 5 ; 'No Loan Again, Naturally' and 'Coming to Homerica' are both the title of episode;  ratio = Divide (votes where title = 'No Loan Again, Naturally', votes where title = 'Coming to Homerica')","SELECT CAST(SUM(CASE WHEN T1.title = 'No Loan Again, Naturally' THEN T1.votes ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.title = 'Coming to Homerica' THEN T1.votes ELSE 0 END) AS ratio FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars = 5;"
simpson_episodes,"How many times was Ian Maxtone-Graham nominated for an award in Writers Guild of America, USA?","""Ian Maxtone-Graham"" is the person; nominated refers to result = 'Nominee'; 'Writers Guild of America, USA' is the organization","SELECT COUNT(award_id) FROM Award WHERE person = 'Ian Maxtone-Graham' AND organization = 'Writers Guild of America, USA' AND result = 'Nominee';"
simpson_episodes,What is the name of the person that has the highest number of nominated award but didn't win?,nominated refers to result = 'Nominee'; highest number of nominated award refers to Max(Count(person)),SELECT person FROM Award WHERE result = 'Nominee' GROUP BY person ORDER BY COUNT(person) DESC LIMIT 1;
simpson_episodes,What is the title of the episode that received the lowest rating?,lowest rating refers to Min(rating),SELECT title FROM Episode ORDER BY rating LIMIT 1;
simpson_episodes,What year did the Simpsons receive its first ever award for Favorite Animated Comedy in People's Choice Award?,"""Favorite Animated Comedy"" is the award; 'People's Choice Award' is the award_category; received award refers to result = 'Winner'; first ever award refers to Min(year)",SELECT year FROM Award WHERE result = 'Winner' AND award = 'Favorite Animated Comedy' ORDER BY year DESC LIMIT 1;
simpson_episodes,How many episodes was Dell Hake not included in the credit list?,"""Dell Hake"" is the person; not included in the credit list refers to credited = ''",SELECT COUNT(*) FROM Credit WHERE person = 'Dell Hake' AND credited = 'false';
simpson_episodes,How old was the awardee when he/she won the first-ever award for Outstanding Voice-Over Performance in Primetime Emmy Awards?,"""Outstanding Voice-Over Performance"" is the award; 'Primetime Emmy Awards' is the organization; awardee refers to result = 'Winner'; first ever award refers to Min(year); age at the time of awarded refers to Subtract(year, SUBSTR(birthdate, 0, 5))","SELECT T2.year - CAST(SUBSTR(T1.birthdate, 1, 4) AS int) AS age FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.award = 'Outstanding Voice-Over Performance' AND T2.organization = 'Primetime Emmy Awards' AND T2.result = 'Winner';"
simpson_episodes,What character did Dan Castellaneta play that won him an award for Outstanding Voice-Over Performance in 2009 in the Primetime Emmy Awards?,"""Dan Castellaneta"" is the person; won refers to result = 'Winner'; 'Outstanding Voice-Over Performance' is the award; 'Primetime Emmy Awards' is the organization; in 2009 refers to year = 2009",SELECT DISTINCT T2.character FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T1.person = 'Dan Castellaneta' AND T1.award = 'Outstanding Voice-Over Performance' AND T1.organization = 'Primetime Emmy Awards' AND T1.year = 2009;
simpson_episodes,"Among the episodes aired on April of 2009, how many episodes won an award?","aired on refers to air_date, April refers to SUBSTR(air_date, 6, 2) = '04'; 2009 refers to SUBSTR (air_date, 0, 5) = '2009'","SELECT COUNT(T1.episode_id) FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTR(T1.year, 1, 4) = '2009' AND T2.air_date LIKE '2009-04%';"
simpson_episodes,What is the birth place of the cast or crew member who won the Best Voice-Over Performance in Online Film & Television Association in 2009?,won refers to result = 'Winner'; 'Best Voice-Over Performance' is the award; ' Online Film & Television Association' is the organization; in 2009 refers to year = 2009,SELECT T1.birth_place FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.award = 'Best Voice-Over Performance' AND T2.organization = 'Online Film & Television Association' AND T2.year = 2009;
simpson_episodes,How many 10 star votes did the top 4 episodes with the highest rating received?,10 stars votes refers to stars = 10; highest rating refers to Max(rating); number of votes refers to SUM(votes),SELECT SUM(T1.votes) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars = 10 ORDER BY T1.rating DESC LIMIT 4;
simpson_episodes,"In ""No Loan Again, Naturally"", how many stars received votes of no more than 50?","""No Loan Again, Naturally"" is the title of episode; votes of no more than 50 refers to votes < 50; number of stars refers to SUM(stars)","SELECT COUNT(*) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'No Loan Again, Naturally' AND T2.votes < 50;"
simpson_episodes,How many award winners are from the USA?,award winner refers to result = 'Winner'; 'USA' is the birth_country,SELECT COUNT(*) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T1.birth_country = 'USA' AND T2.result = 'Winner';
simpson_episodes,"In Season 20 Episode 11, how many times was Doofus included in the credit list?",in Season 20 Episode 11 refers to episode_id = 'S20-E11'; 'Doofus' is the nickname of person; include in credit list refers to credited = 'true',SELECT COUNT(*) FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T1.nickname = 'Doofus' AND T2.credited = 'true' AND T2.episode_id = 'S20-E11';
simpson_episodes,What was the first award won by the cast or crew member of the show? Give the name of the person who won the said award.,won refers to result = 'Winner'; first award refers to Min(year),"SELECT T2.award, T1.name FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.result = 'Winner' ORDER BY T2.year LIMIT 1;"
simpson_episodes,"In ""Sex, Pies and Idiot Scrapes"", how many percentage of votes did the 9 star score has?","""Sex, Pies and Idiot Scrapes"" is the title of episode; 9 star score refers to stars = 9; percentage refers to percent","SELECT T2.percent FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'Sex, Pies and Idiot Scrapes' AND T2.stars = 9;"
simpson_episodes,List the award name and persons who won the award in 2009.,won the award refers to result = 'Winner'; in 2009 refers to year = 2009,"SELECT award, person FROM Award WHERE result = 'Winner' AND SUBSTR(year, 1, 4) = '2009';"
simpson_episodes,"Among the casts who were born in Los Angeles, describe the name and birth date of who have 1.8 m and above in height.","""Los Angeles"" is the birth_place; 1.8 m and above in height refers to height_meters > = 1.8","SELECT name, birthdate FROM Person WHERE birth_place = 'Los Angeles' AND height_meters >= 1.8;"
simpson_episodes,"Provide the episode number, title and rating of which were aired in October, 2008.","episode number refers to episode; aired in refers to air_date; October refers to Substr(air_date, 6, 2) = '10': 2008 refers to Substr(air_date, 0, 5) = '2008'","SELECT episode, title, rating FROM Episode WHERE SUBSTR(air_date, 1, 7) LIKE '2008-10%';"
simpson_episodes,"Write down the award ID, award name and winner for character named ""Homer simpson 20"".","""Homer simpson 20"" is the character; ""Winner"" is the result; award name refers to award","SELECT T1.award_id, T1.award, T1.person FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T2.character = 'Homer Simpson' AND T1.result = 'Winner';"
simpson_episodes,"List down the award name, result, credit category and credited status of the ""Billy Kimball"".","""Billy Kimball"" is the person; award name refers to award; credited category refers to category; credited status refers to credited; credited = 'true' means the person is included in the credit list and vice versa","SELECT DISTINCT T1.award, T1.result, T2.category, T2.credited FROM Award AS T1 INNER JOIN Credit AS T2 ON T2.episode_id = T1.episode_id WHERE T2.person = 'Billy Kimball';"
simpson_episodes,"Name the person, award, organization, result and credited status of the assistant director in S20-E13.","""assistant director"" is the role of person; 'S20-E13' is the episode_id; credited status refers to credited; credited = 'true' means the person is included in the credit list and vice versa","SELECT T1.person, T1.award, T1.organization, T1.result, T2.credited FROM Award AS T1 INNER JOIN Credit AS T2 ON T2.episode_id = T1.episode_id WHERE T2.episode_id = 'S20-E13' AND T2.role = 'assistant director';"
simpson_episodes,"Describe the birth country, height and person name who were not included in credit list with category of casting.",height refers to height_meters; not in credit list refers to credited = ''; category of casting refers to category = 'Casting Department',"SELECT T1.birth_country, T1.height_meters, T1.name FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T2.category = 'Cast' AND T2.credited = 'false';"
simpson_episodes,"List the nominee, keywords and episode ID of the title ""The Good, the Sad and the Drugly"".",nominee refers to result = 'Nominee',"SELECT T3.person, T1.keyword, T1.episode_id FROM Keyword AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Award AS T3 ON T2.episode_id = T3.episode_id WHERE T2.title = 'The Good, the Sad and the Drugly' AND T3.result = 'Nominee';"
simpson_episodes,"What is the voting numbers and percentage of the best rating scale of the episode which had keyword of ""arab stereotype""?",best rating scale refers to stars = 10,"SELECT T2.votes, T2.percent FROM Keyword AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T1.keyword = 'arab stereotype' AND T2.stars = 10;"
simpson_episodes,"For the episode who won the award held by Jupiter Award, describe award name, aired date and rating of that episode.",held by Jupiter Award refers to organization = 'Jupiter Award'; won the award refers to result = 'Winner',"SELECT T1.award, T2.air_date, T2.rating FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.organization = 'Jupiter Award' AND T1.result = 'Winner';"
simpson_episodes,"Mention the episode ID, title and any three keywords of the episode which get the most number of votes in star classification of worst.",star classification of worst refers to stars = 1; most number of votes refers to MAX(votes),"SELECT DISTINCT T3.episode_id, T2.title, T1.keyword FROM Keyword AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Vote AS T3 ON T2.episode_id = T3.episode_id WHERE T3.stars = 1 ORDER BY T3.votes DESC LIMIT 3;"
simpson_episodes,"Among the episodes with excellent rating which were aired in 2008, describe the title, episode's image, award name and person who were nominated.","excellent rating refers to 7 < = rating < = 10; aired in 2008 refers to SUBSTRACT(air_date, 0, 5) = '2008'; who were nominated refers to result = 'Nominee'","SELECT T2.title, T2.episode_image, T1.award, T1.person FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T2.rating BETWEEN 7 AND 10 AND SUBSTR(T2.air_date, 1, 4) = '2008' AND T1.result = 'Nominee';"
simpson_episodes,"Describe the award title, person and character name of the award ID 326.",,"SELECT DISTINCT T1.award, T1.person, T2.character FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T2.award_id = 326;"
simpson_episodes,"Describe name, birth country, role in episode and age in 2022 of the oldest crew member..","age in 2022 refers to SUBTRACT(2022, substr(birthdate, 0, 5)); oldest refers to MIN(birthdate)","SELECT T1.name, T1.birth_place, T2.role, 2022 - CAST(SUBSTR(T1.birthdate, 1, 4) AS int) AS age FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T1.birthdate IS NOT NULL ORDER BY T1.birthdate LIMIT 1;"
simpson_episodes,"Provide the number of credits, category, role and birthplace of the crew member who was born in North Korea.",number of credits refers to credited; born in North Korea refers to birth_country = 'North Korea',"SELECT DISTINCT T2.credited, T2.category, T2.role, T1.birth_place FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T1.birth_country = 'North Korea';"
simpson_episodes,"Find the winning rate of award in 2010. Describe the winner name, award name, episode title and role of the winner in that episode.","in 2010 refers to year = 2010; winning rate refers to DIVIDE(COUNT(result = 'winner'), COUNT(*));","SELECT T3.rate, T4.person, T4.award, T5.title, T4.role FROM ( SELECT CAST(SUM(CASE WHEN T1.result = 'Winner' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.result IN ('Winner', 'Nominee') THEN 1 ELSE 0 END) AS rate , T1.person, T1.award, T2.title, T1.role FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTR(T1.year, 1, 4) = '2010' ) AS T3 INNER JOIN Award AS T4 INNER JOIN Episode AS T5 ON T4.episode_id = T5.episode_id WHERE T4.year = 2010 AND T4.result = 'Winner';"
simpson_episodes,Name the title of the episode that received the highest star score and the highest number of votes.,received the highest star score refers to MAX(stars); the highest number of votes refers to MAX(votes),"SELECT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id ORDER BY T2.stars DESC, T2.votes DESC LIMIT 1;"
simpson_episodes,What is the total number of awards won by The simpson 20s: Season 20?,total number of awards refers to COUNT(award); awards won refers to result = 'Winner';,SELECT COUNT(award_id) FROM Award WHERE result = 'Winner';
simpson_episodes,Name the title of the episode that was nominated for Emmy's Outstanding Animated Program 21 times.,nominated for refers to result = 'Nominee'; Outstanding Animated Program refers to award = 'Outstanding Animated Program (For Programming Less Than One Hour)'; Emmy's refers to organization = 'Primetime Emmy Awards'; 21 times refers to COUNT(episode_id) = 21;,SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.organization = 'Primetime Emmy Awards' AND T1.award = 'Outstanding Animated Program (For Programming Less Than One Hour)' AND T1.result = 'Nominee' GROUP BY T1.episode_id HAVING COUNT(T1.episode_id) = 21;
simpson_episodes,What is the average number of stars assigned to The simpson 20s: S20-E12? What is the said episode all about?,average number of stars refers to AVG(stars); simpson 20s: S20-E12 refers to episode_id = 'S20-E12'; episode all about refers to summary,"SELECT AVG(T2.stars), T1.summary FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.episode_id = 'S20-E12';"
simpson_episodes,Name the performer who won Emmy Award for Outstanding Voice-Over Performance by playing Homer simpson 20.,Outstanding Voice-Over Performance refers to award = 'Outstanding Voice-Over Performance'; who won refers to result = 'Winner'; Emmy refers to organization = 'Primetime Emmy Awards'; playing Homer simpson 20 refers to character = 'Homer simpson 20',SELECT T1.person FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T2.character = 'Homer simpson 20' AND T1.organization = 'Primetime Emmy Awards' AND T1.award = 'Outstanding Voice-Over Performance' AND T1.result = 'Winner';
simpson_episodes,What is the birth name of Al Jean and his role in creating The simpson 20s: Season 20?,,"SELECT DISTINCT T1.birth_name, T2.role FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T1.name = 'Al Jean';"
simpson_episodes,How many nominations have Billy Kimball received in 2010 for The simpson 20s: Season 20?,in 2010 refers to year = 2010; nominations refers to result = 'Nominee',"SELECT COUNT(award_id) FROM Award WHERE person = 'Billy Kimball' AND SUBSTR(year, 1, 4) = '2010' AND result = 'Nominee';"
simpson_episodes,"List all keywords associated with the episode 'Take My Life, Please'.","episode 'Take My Life, Please' refers to title =   'Take My Life, Please'","SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Take My Life, Please';"
simpson_episodes,Indicate the name and category of the most recent award received by the show.,most recent refers to MAX(year); received refers to result = 'Winner'; name of award refers to award; category refers to award_category,"SELECT award, award_category FROM Award WHERE result = 'Winner' ORDER BY year DESC LIMIT 1;"
simpson_episodes,What is The simpson 20s: Season 20 average awards winning rate?,"average awards winning rate refers to DIVIDE(SUM(result = 'winner'), COUNT(award));",SELECT CAST(SUM(CASE WHEN result = 'Winner' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(award) AS rate FROM Award;
simpson_episodes,How many episodes were aired between October and November 2008?,between October and November 2008 refers to air_date BETWEEN '2008-10-01' and '2008-11-30',SELECT COUNT(episode_id) FROM Episode WHERE air_date LIKE '2008-10%' OR air_date LIKE '2008-11%';
simpson_episodes,"Among episodes aired in 2009, which episode has received the worst response based on the rating.",aired in 2009 refers to year(air_date) = 2009; received the worst response based on the rating refers to MIN(rating),SELECT episode_id FROM Episode WHERE air_date LIKE '2009%' ORDER BY rating LIMIT 1;
simpson_episodes,List the categories for which Bonita Pietila was given credit and her role in creating the episodes.,,"SELECT DISTINCT category, role FROM Credit WHERE person = 'Bonita Pietila';"
simpson_episodes,"Who from The simpson 20s: Season 20 cast and crew was born in October 29, 1957 in Chicago, Illinois?","born in October 29, 1957 refers to birthdate = '1957-10-29'; in Chicago refers to birth_place = 'Chicago'; Illinois refers to birth_region = 'Illinois'",SELECT name FROM Person WHERE birthdate = '1957-10-29' AND birth_place = 'Chicago' AND birth_region = 'Illinois';
simpson_episodes,Who produced The simpson 20s: Season 20?,produced refers to role = 'producer',SELECT DISTINCT person FROM Credit WHERE role = 'producer';
simpson_episodes,How old was composer of the show when he was nominated for Emmy's Outstanding Music Composition for a Series in 2009. Indicate his full name as well.,"in 2009 refers to year = 2009; old refers to SUBTRACT(2009, birthdate); composer of the show refers to role = 'composer'; Emmy's refers to organization = 'Primetime Emmy Awards'; nominated refers to result = 'Nominee'; Outstanding Music Composition refers to award = 'Outstanding Music Composition for a Series (Original Dramatic Score)'","SELECT T1.year - T2.birthdate AS ageIn2009, T2.name FROM Award AS T1 INNER JOIN Person AS T2 ON T1.person = T2.name WHERE T1.role = 'composer' AND T1.organization = 'Primetime Emmy Awards' AND T1.award = 'Outstanding Music Composition for a Series (Original Dramatic Score)' AND T1.result = 'Nominee' AND T1.year = 2009;"
simpson_episodes,Which episode of The simpson 20s: Season 20 has received the most nominations? Indicate the title.,received the most nomination refers to MAX(COUNT(episode_id)),SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id GROUP BY T1.episode_id ORDER BY COUNT(*) DESC LIMIT 1;
simpson_episodes,Please indicate the birthplace of the crew which name is Dan Castellaneta.,,SELECT birth_place FROM Person WHERE name = 'Dan Castellaneta';
simpson_episodes,How many crews were born in the USA?,born in the USA refers to birth_country = 'USA',SELECT COUNT(name) FROM Person WHERE birth_country = 'USA';
simpson_episodes,Please list the name of crew that were born before 1970.,born before 1970 refers to birthdate < '1970-01-01',"SELECT name FROM Person WHERE SUBSTR(birthdate, 1, 4) < '1970';"
simpson_episodes,"Name of the crew that were born in California, USA between 1958 and 1969.",born in California refers to birth_place = 'California'; USA refers to birth_country = 'USA'; between 1958 and 1969 refers to birthdate BETWEEN '1958-01-01' and '1958-12-31',"SELECT name FROM Person WHERE SUBSTR(birthdate, 1, 4) = '1958' AND birth_place = 'California' AND birth_country = 'USA';"
simpson_episodes,Which episode ids are rated 5 stars and have more than 100 votes?,more than 100 votes refers to votes > 100,SELECT episode_id FROM Vote WHERE stars = 5 AND votes > 100;
simpson_episodes,"Please indicate the keywords of the title ""Double, Double, Boy in Trouble"".",,"SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Double, Double, Boy in Trouble';"
simpson_episodes,"Among episodes from 10 to 20, which episode has more than 200 votes?",episodes from 10 to 20 refers to episode BETWEEN 10 and 20; more than 200 votes refers to COUNT(votes) > 200,SELECT DISTINCT T1.episode FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.episode BETWEEN 10 AND 20 AND T2.votes > 200;
simpson_episodes,Please indicate the keywords of the episode that won the Primetime Emmy Award category.,Primetime Emmy Award refers to award_category = 'Primetime Emmy',SELECT T2.keyword FROM Award AS T1 INNER JOIN Keyword AS T2 ON T2.episode_id = T1.episode_id WHERE T1.award_category = 'Primetime Emmy';
simpson_episodes,Who is the recipient of the Primetime Emmy Award with the most votes?,Primetime Emmy Award refers to award_category = 'Primetime Emmy'; the most votes refers to MAX(votes),SELECT T1.person FROM Award AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.award_category = 'Primetime Emmy' ORDER BY T2.votes DESC LIMIT 1;
simpson_episodes,Which episode id did award Outstanding Animated Program (For Programming Less Than One Hour) with an episode star score of 10?,star score of 10 refers to stars = 10,SELECT DISTINCT T1.episode_id FROM Award AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.award = 'Outstanding Animated Program (For Programming Less Than One Hour)' AND T2.stars = 10;
simpson_episodes,"Please give the name of the director who achieved the Outstanding Animated Program (For Programming Less Than One Hour) award whose episode title is ""No Loan Again, Naturally"".",the director refers to role = 'director',"SELECT T1.person FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.role = 'director' AND T1.award = 'Outstanding Animated Program (For Programming Less Than One Hour)' AND T2.title = 'No Loan Again, Naturally';"
simpson_episodes,Please indicate which writer has an episode star score greater than 5 in 2009.,writer refers to role = 'writer'; star score greater than 5 refers to stars > 5; in 2009 refers to year = 2009,"SELECT T1.person FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTR(T1.year, 1, 4) = '2009' AND T1.role = 'writer' AND T2.votes > 5;"
simpson_episodes,How many WGA Award (TV) award recipients were born in the USA from 2009 to 2010?,WGA Award (TV) award refers to award_category = 'WGA Award (TV)'; born in the USA refers to birth_country = 'USA'; from 2009 to 2010 refers to birthdate BETWEEN '2019-01-01' and '2019-12-31',SELECT COUNT(*) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.award_category = 'WGA Award (TV)' AND T1.birth_country = 'USA' AND T2.year BETWEEN 2009 AND 2010;
simpson_episodes,Which episode did the composer win for Outstanding Music Composition for a Series (Original Dramatic Score) with more than 200 votes?,more than 200 votes refer to votes > 200; composer refers to role = 'composer'; Outstanding Music Composition for a Series (Original Dramatic Score) refers to award = 'Outstanding Music Composition for a Series (Original Dramatic Score)',SELECT DISTINCT T1.episode_id FROM Award AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.role = 'composer' AND T1.award = 'Outstanding Music Composition for a Series (Original Dramatic Score)' AND T2.votes > 200;
simpson_episodes,"The person named Al Jean achieved the Primetime Emmy Award category in 2009, which episode did AI Jean achieve?",in 2009 refers to year = 2009,"SELECT T2.episode_id FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTR(T1.year, 1, 4) = '2009' AND T1.person = 'Al Jean' AND T1.award_category = 'Primetime Emmy';"
simpson_episodes,How much more votes for episode 1 than for episode 5?,"more votes refers to SUBTRACT(SUM(votes when episode = 1), SUM(votes when episode = 5))",SELECT SUM(CASE WHEN T1.episode = 1 THEN T2.votes ELSE 0 END) - SUM(CASE WHEN T1.episode = 5 THEN T2.votes ELSE 0 END) AS diff FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id;
simpson_episodes,What award did the character Homer simpson 20 achieve in 2009?,in 2009 refers to year = 2009,SELECT DISTINCT T1.award FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T1.year = 2009 AND T2.character = 'Homer Simpson';
simpson_episodes,How many episodes have won the award for Outstanding Animated Program (Programming Under One Hour) with less than 100 votes? Calculate the percentage of episodes with less than 100 votes out of total episodes.,"less than 100 votes refers to votes < 100; percentage refers to DIVIDE(COUNT(episode_id when votes < 100), COUNT(episode_id)) * 100%","SELECT SUM(CASE WHEN T2.votes < 100 THEN 1 ELSE 0 END) AS num , CAST(SUM(CASE WHEN T2.votes < 100 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Award AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Episode AS T3 ON T1.episode_id = T3.episode_id WHERE T1.award = 'Outstanding Animated Program (For Programming Less Than One Hour)';"
simpson_episodes,How many recipients of the Primetime Emmy Award category that were born in the USA? Find the percentage of Americans in the total number of the country.,"born in the USA refers to birth_country = 'USA'; recipients refers to person = 'recipients'; percentage refers to DIVIDE(COUNT(birth_country = 'USA'), count(award_id))","SELECT SUM(CASE WHEN T1.birth_country = 'USA' THEN 1 ELSE 0 END) AS num , CAST(SUM(CASE WHEN T1.birth_country = 'USA' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.award_category = 'Primetime Emmy' AND T2.person = 'Dan Castellaneta';"
simpson_episodes,"Please list two people who are the nominees for the ""Outstanding Voice-Over Performance"" award for season 20.",season 20 refers to episode_id LIKE 'S20%',SELECT person FROM Award WHERE result = 'Nominee' AND award = 'Outstanding Voice-Over Performance' AND episode_id LIKE 'S20%' LIMIT 2;
simpson_episodes,"How many executive producers are the nominees for the award of ""Outstanding Animated Program (For Programming Less Than One Hour)""?",the nominees refers to result = 'Nominee'; executive producers refers to role = 'executive producer',SELECT COUNT(*) FROM Award WHERE role = 'executive producer' AND result = 'Nominee' AND award = 'Outstanding Animated Program (For Programming Less Than One Hour)';
simpson_episodes,"In the crew, who was born in 1962 in California?",born in 1962 refers to year(birthdate) = 1962; in California refers to birth_region = 'California',"SELECT name FROM Person WHERE SUBSTR(birthdate, 1, 4) = '1962' AND birth_region = 'California';"
simpson_episodes,How many of the crew members who are taller than 1.70m were born in Canada?,taller than 1.70m refers to height_meters > 1.70; born in Canada refers to birth_country = 'Canada',SELECT COUNT(name) FROM Person WHERE height_meters > 1.70 AND birth_country = 'Canada';
simpson_episodes,"How many people were considered as prospective recipients of the ""Animation"" award?",prospective recipients refers to result = 'Nominee',SELECT COUNT(*) FROM Award WHERE award = 'Animation' AND result = 'Nominee';
simpson_episodes,Please list any three episodes that have an excellent rating.,an excellent rating refers to 7 < rating < = 10,SELECT title FROM Episode WHERE rating BETWEEN 7 AND 10 LIMIT 3;
simpson_episodes,What are the top five most popular episodes?,most popular episodes refers to MAX(votes),SELECT episode_id FROM Episode ORDER BY votes DESC LIMIT 5;
simpson_episodes,Please list the three episodes with the highest number of votes for the worst star rating.,highest number of votes refers to MAX(COUNT(votes)); worst star rating refers to stars = 1,SELECT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars = ( SELECT MIN(stars) FROM Vote ) ORDER BY T2.votes DESC LIMIT 3;
simpson_episodes,What was the character that Dan Castellaneta did the voice over for and was awarded?,voice over for and was awarded refers to award like '%Voice-Over%';,SELECT DISTINCT T2.character FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T1.award LIKE '%Voice-Over%' AND T1.person = 'Dan Castellaneta';
simpson_episodes,Please list all of the episodes that aired in 2008 that have the highest number of votes for the maximum star rating.,aired in 2008 refers to air_date like '2008%'; highest number of votes refers to MAX(votes); maximum star rating refers to stars = 10,"SELECT T1.episode_id FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTR(T1.air_date, 1, 4) = '2008' ORDER BY T2.votes DESC LIMIT 1;"
simpson_episodes,"What are the keywords of the episode ""Take My Life, Please""?","episode ""Take My Life, Please"" refers to title = 'Take My Life, Please'","SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Take My Life, Please';"
simpson_episodes,"Please provide any two episodes' names that have the same keyword of ""1930s to 2020s"".",,SELECT T1.title FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T2.keyword = '1930s to 2020s' LIMIT 2;
simpson_episodes,"In 2010, which episode did Joel H. Cohen win an award for?",In 2010 refers to year = 2010,"SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTR(T1.year, 1, 4) = '2010' AND T1.person = 'Joel H. Cohen';"
simpson_episodes,"How many votes of 5-star did the episode ""Lisa the Drama Queen"" receive?","episode ""Lisa the Drama Queen"" refers to title = 'Lisa the Drama Queen';",SELECT SUM(T2.votes) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'Lisa the Drama Queen' AND T2.stars = 5;
simpson_episodes,"What is the number of votes for 10-star for the episode that has the keyword ""reference to the fantastic four""?",10-star refers to stars = 10,SELECT T2.votes FROM Keyword AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T2.stars = 10 AND T1.keyword = 'reference to the fantastic four';
simpson_episodes,"What is the difference between the number of votes for 1-star vs. 10-star for the episode ""The Burns and the Bees""?","1-star refers to stars = 1; 10-star refers to stars = 10; episode ""The Burns and the Bees"" refers to title = 'The Burns and the Bees'; difference refers to SUBTRACT(votes when stars = 1, votes when stars = 10)",SELECT SUM(CASE WHEN T2.stars = 10 THEN T2.votes ELSE 0 END) - SUM(CASE WHEN T2.stars = 1 THEN T2.votes ELSE 0 END) AS Difference FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'The Burns and the Bees';
simpson_episodes,What are the keywords of the least popular episode?,least popular episode refers to MIN(votes),SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id ORDER BY T1.votes LIMIT 1;
simpson_episodes,What are the episodes that have the average rating with more than 20 of 2-star votes?,2-star refers to stars = 2; average rating refers to 5 < rating < = 7; more than 20 of 2-star votes refers to votes > 20,SELECT DISTINCT T1.episode_id FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars = 2 AND T2.votes > 20 AND T1.rating > 5.0 AND T1.rating <= 7.0;
simpson_episodes,Which episode has the largest number of votes?,largest number of votes refers to MAX(votes),SELECT episode FROM Episode WHERE votes = ( SELECT MAX(votes) FROM Episode );
simpson_episodes,Who is the oldest among all the casts and crews?,oldest refers to MIN(birthdate),SELECT name FROM Person ORDER BY birthdate ASC LIMIT 1;
simpson_episodes,What are the episodes Oscar Cervantes is credited with?,is credited refers to credited = 'true';,SELECT episode_id FROM Credit WHERE person = 'Oscar Cervantes' AND credited = 'true';
simpson_episodes,What are the roles of the cast and crew from countries other than the USA?,from countries other than the USA refers to birth_country ! = 'USA',SELECT T2.role FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T1.birth_country != 'USA';
simpson_episodes,How many 1 star ratings are there in the worst rated episode of the season?,worst rated episode refers to MIN(rating),SELECT COUNT(*) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars = 1 ORDER BY T1.rating LIMIT 1;
simpson_episodes,"Which character did the ""Outstanding Voice-Over Performance"" winner voice?","the ""Outstanding Voice-Over Performance"" refers to award = 'Outstanding Voice-Over Performance'; winner refers to result = 'Winner';",SELECT DISTINCT T2.character FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T1.award = 'Outstanding Voice-Over Performance' AND T1.result = 'Winner';
simpson_episodes,What is the summary of the episode in which Emily Blunt is featured in?,,SELECT T1.summary FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.person = 'Emily Blunt';
simpson_episodes,"Who did ""The Tiny Canadian"" play as in the show?","""The Tiny Canadian"" refers to nickname = 'The Tiny Canadian'; play as in the show refers to role
",SELECT T2.role FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T1.nickname = 'The Tiny Canadian';
simpson_episodes,"Among the episodes with an award nominee or winner, which has the highest percent of 5 star votes?",highest percent of 5 star votes refers to max(percent) where star = 5,SELECT T1.episode_id FROM Award AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars = 5 ORDER BY T2.percent DESC LIMIT 1;
simpson_episodes,"What is the credited cast for the episode ""In the Name of the Grandfather""?","credited cast refers to category = 'Cast' and  credited = 'true'; episode ""In the Name of the Grandfather"" refers to title = 'In the Name of the Grandfather'",SELECT DISTINCT T2.person FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'In the Name of the Grandfather' AND T2.category = 'Cast' AND T2.credited = 'true';
simpson_episodes,List all of the award winners' birth dates.,award winner refers to result = 'Winner',SELECT T1.birthdate FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.result = 'Winner';
simpson_episodes,Who is the writer for the episode with the most 10 star votes?,writer refers to role = 'Writer'; most 10 star votes refers to max(votes) where stars = 10,SELECT T1.person FROM Credit AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T1.role = 'Writer' AND T2.stars = 10 GROUP BY T1.person ORDER BY COUNT(*) DESC LIMIT 1;
simpson_episodes,What award did the episode that aired on 11/30/2008 win?,aired on 11/30/2008 refers to air_date = '11/30/2008'; win refers to result = 'Winner',SELECT T1.award FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.result = 'Winner' AND T2.air_date = '2008-11-30';
simpson_episodes,List all of the information about the music department's casts and crews.,information about the music department refers to category = 'Music Department',"SELECT DISTINCT person, name, birthdate, birth_name, birth_place , birth_region, birth_country, height_meters, nickname FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T2.category = 'Music Department';"
simpson_episodes,What are the keywords for episode 426 of the series?,episode 426 refers to number_in_series = 426,SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.number_in_series = 426;
simpson_episodes,What are the titles of the episodes that have received more 7-star votes than the season average?,"episodes that have received more 7-star votes than the season average refers to votes > DIVIDE(SUM(votes), COUNT(stars = 7))",SELECT DISTINCT T1.episode_id FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars = 7 AND T2.votes > 0.7 * ( SELECT CAST(COUNT(votes) AS REAL) / COUNT(CASE WHEN stars = 7 THEN 1 ELSE 0 END) FROM Vote );
simpson_episodes,What percentage of votes are from the nominated episodes?,"nominated episodes refers to result = 'Nominee'; percentage of votes = DIVIDE(SUM(result = 'Nominee), SUM(Votes)) as percentage",SELECT CAST(SUM(CASE WHEN T1.result = 'Nominee' THEN T2.votes ELSE 0 END) AS REAL) * 100 / SUM(T2.votes) FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id;
simpson_episodes,List down person's name who has nickname.,has nickname refers to nickname is NOT NULL,SELECT name FROM Person WHERE nickname IS NOT NULL;
simpson_episodes,Which country has the tallest person in the crew?,country refers to birth_country; tallest person refers to max(height_meters),SELECT birth_country FROM Person ORDER BY height_meters DESC LIMIT 1;
simpson_episodes,What is the average height of people from USA?,people from USA refers to birth_country = 'USA'; average height = AVG(height_meters),SELECT AVG(height_meters) FROM Person WHERE birth_country = 'USA';
simpson_episodes,Calculate the percentage of people who were born after 1970 and from California.,"born after 1970 refers to birthdate > 1970; from California refers to birth_region = 'California'; percentage = divide(count(birthdate > 1970 and birth_region = 'California'), total(birthdate)) * 100%","SELECT CAST(SUM(CASE WHEN birth_region = 'California' AND SUBSTR(birthdate, 1, 4) > '1970' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(birthdate) FROM Person;"
simpson_episodes,"How many people were not born in Connecticut, USA?","not born in Connecticut, USA refers to birth_region ! = 'Connecticut' and birth_country ! = 'USA'",SELECT COUNT(name) FROM Person WHERE birth_region != 'Connecticut' AND birth_country != 'USA';
simpson_episodes,"List down the title of episode S20-E1, S20-E2 & S20-E3.","episode S20-E1, S20-E2 & S20-E3 refers to episode_id = 'S20-E1' and episode_id = 'S20-E2' and episode_id = 'S20-E3'","SELECT title FROM Episode WHERE episode_id IN ('S20-E1', 'S20-E2', 'S20-E3');"
simpson_episodes,Write down the website address which stores the episode image of episode 5.,website address refers to episode_image,SELECT episode_image FROM Episode WHERE episode = 5;
simpson_episodes,State the number of votes for episode with rating of 7 and above.,rating of 7 and above refers to rating > 7.0,SELECT votes FROM Episode WHERE rating > 7;
simpson_episodes,How many title's crew members are working from Casting Department?,working from Casting Department refers to category = 'Casting Department',SELECT COUNT(*) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.category = 'Casting Department';
simpson_episodes,How many additional timers were born in USA?,additional timers refers to role = 'additional timer'; born in USA refers to birth_country = 'USA',SELECT COUNT(*) FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T2.role = 'additional timer' AND T1.birth_country = 'USA';
simpson_episodes,How many people who were born after 1970 are animation executive producer?,born after 1980 refers to birthdate > 1970; assistant to the producers refers to role = 'animation executive producer',SELECT COUNT(*) FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE STRFTIME(T1.birthdate) > '1970' AND T2.role = 'animation executive producer';
simpson_episodes,Write down the summary of episode whereby it has crew members that are not included in the credit list.,are not included in the credit list refers to credited = '',SELECT T1.summary FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.credited = 'false';
simpson_episodes,List down the rating of episodes that were produced by Jason Bikowski.,produced by Jason Bikowski refers to person = 'Jason Bikowski',SELECT T1.rating FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.person = 'Jason Bikowski';
simpson_episodes,What is the average heights of crew members from Animation Department?,from Animation Department refers to category = 'Animation Department'; AVG(height_meters) where category = 'Animation Department',SELECT AVG(T1.height_meters) FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T2.category = 'Animation Department';
simpson_episodes,What is the character that won the award in Primetime Emmy 2009?,won the award in Primetime Emmy 2009 refers to award_category = 'Primetime Emmy' and year = 2009,SELECT DISTINCT T2.character FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T1.award_category = 'Primetime Emmy' AND T1.year = 2009 AND T1.result = 'Winner';
simpson_episodes,What are the characters that were nominated for Primetime Emmy Award from 2009 to 2010 but did not win?,nominated for Primetime Emmy Award but did not win refers to award_category = 'Primetime Emmy' and result = 'Nominee';  from 2009 to 2010 refers to year > = '2009' and  year < = '2010',SELECT T2.character FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T1.award_category = 'Primetime Emmy' AND T1.year BETWEEN 2009 AND 2010 AND T1.result != 'Winner';
simpson_episodes,Calculate the total votes of episodes that Adam Kuhlman had involved.,Adam Kuhlman had involved refers to person = 'Adam Kuhlman',SELECT SUM(T1.votes) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.person = 'Adam Kuhlman';
simpson_episodes,List down the keyword and crew member's name for episode id S20-E1.,,"SELECT T1.keyword, T2.person FROM Keyword AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.episode_id = 'S20-E1';"
simpson_episodes,What is the keyword for episodes with stars score of 10 at 30% and above?,stars score of 10 at 30% and above refers to stars = 10 and percent > 29,SELECT T1.keyword FROM Keyword AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T2.stars = 10 AND T2.percent > 29;
simpson_episodes,"What is the percentage of star score 5 that was collected by title ""Sex, Pies and Idiot Scrapes""?","percentage = DIVIDE(SUM(stars = 5), COUNT(stars)) as percentage","SELECT CAST(SUM(CASE WHEN T2.stars = 5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'Sex, Pies and Idiot Scrapes';"
simpson_episodes,"Please check is ""limbo dancing"" the keyword for title ""Dangerous Curves""?",,SELECT CASE WHEN T2.Keyword = 'limbo dancing' THEN 'Yes' ELSE 'No' END AS result FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Dangerous Curves';
simpson_episodes,Which title is the winner of Best International TV Series in 2017?,"winner refers to result = 'Winner'; Best International TV Series in 2017 refers to award = 'Best International TV Series' and year = '2017'

","SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award = 'Best International TV Series' AND SUBSTR(T1.year, 1, 4) = '2017';"
simpson_episodes,"Write down all the keywords for winner of ""WGA Award (TV)"" award.","winner of ""WGA Award (TV)"" award refers to award_category = 'WGA Award (TV)' and result = 'Winner'",SELECT T2.keyword FROM Award AS T1 INNER JOIN Keyword AS T2 ON T2.episode_id = T1.episode_id WHERE T1.award_category = 'WGA Award (TV)';
simpson_episodes,"State the birth place of co-executive producer for nominee of ""Outstanding Animated Program (For Programming Less Than One Hour)"" award.","co-executive producer refers to role = 'co-executive producer'; nominee of ""Outstanding Animated Program (For Programming Less Than One Hour)"" award refers to award = 'Outstanding Animated Program (For Programming Less Than One Hour)' and result = 'Nominee'",SELECT T1.birth_place FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.award = 'Outstanding Animated Program (For Programming Less Than One Hour)' AND T2.role = 'co-executive producer';
simpson_episodes,Sum up the votes from star 1 to 5 for all of the contestants in Blimp Award.,contestants refers to result = 'Winner' and result = 'Nominee'; in Blimp Award refers to award = 'Blimp Award'; star 1 to 5 refers to 1 < stars < 5,"SELECT T2.stars, SUM(T2.stars) FROM Award AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.award_category = 'Blimp Award' AND T2.stars BETWEEN 1 AND 5 GROUP BY T2.stars;"
simpson_episodes,Calculate the total rating of winners in OFTA Television Award and WGA Award (TV).,winners refers to result = 'Winner'; in OFTA Television Award and WGA Award (TV) refers to award = 'OFTA Television Award' and award = 'WGA Award (TV)',"SELECT SUM(T2.rating) FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award_category IN ('Jupiter Award ', 'WGA Award (TV)');"
simpson_episodes,"Out of the rating of 6.8 scored by title ""No Loan Again, Naturally"", how many percent of it consists of scores 5 to 10?",scores 5 to 10 refers to TOTAL(percent) where 1 < = stars < 5,"SELECT SUM(T2.percent) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'No Loan Again, Naturally' AND T1.rating = 6.8 AND T2.stars BETWEEN 5 AND 10;"
simpson_episodes,How many episodes have the star score greater than 8?,star score greater than 8 refers to stars > 8,SELECT COUNT(DISTINCT episode_id) FROM Vote WHERE stars > 8;
simpson_episodes,Which episode has the highest number of vote of the star score?,highest number of vote of the star score refers to max(votes),SELECT episode_id FROM Vote ORDER BY votes DESC LIMIT 1;
simpson_episodes,"How many episodes have the keyword ""2d animation""?",,SELECT COUNT(episode_id) FROM Keyword WHERE keyword = '2d animation';
simpson_episodes,Name the organization which hold the award id 328.,,SELECT organization FROM Award WHERE award_id = 328;
simpson_episodes,How many awards had been held in 2009?,had been held in 2009 refers to year = 2009,"SELECT COUNT(award_id) FROM Award WHERE SUBSTR(year, 1, 4) = '2009';"
simpson_episodes,"How many awards classified as ""Primetime Emmy"" category?",category refers to award_category,SELECT COUNT(award_id) FROM Award WHERE award_category = 'Primetime Emmy';
simpson_episodes,List out the birth name of crews who are co-executive producer and higher than 1.60 meters.,co-executive producer refers to role = 'co-executive producer'; higher than 1.60 meters refers to height_meters > 1.60,SELECT T1.birth_name FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.role = 'co-executive producer' AND T1.height_meters > 1.60;
simpson_episodes,Calculate the percentage of the nominees who were born in USA.,"nominees refers to result = 'Nominee'; born in USA refers to birth_country = 'USA'; percentage = divide(sum(result = 'Nominee' and birth_country = 'USA'), count(Person.name)) * 100%",SELECT CAST(SUM(CASE WHEN T1.birth_country = 'USA' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.result = 'Nominee';
simpson_episodes,Calculate the percentage of the winners who are higher than 1.75 meters.,"winners refers to result = 'Winner'; higher than 1.75 meters refers to height_meters > 1.75; percentage = divide(sum(result = 'Winner' and height_meters > 1.75), count(result = 'Winner' )) * 100%
",SELECT CAST(SUM(CASE WHEN T1.height_meters > 1.75 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.result = 'Winner';
simpson_episodes,List out the title of episodes which have star score of 2.,star score of 2 refers to stars = 2,SELECT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars = 2;
simpson_episodes,"List out the star scores of episode which has title of ""How the Test Was Won"".",star scores refers to stars,SELECT T2.stars FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'How the Test Was Won';
simpson_episodes,"Among the episodes which have star score greater than 5, how many episodes have air date in 2008?",star score greater than 5 refers to stars > 5; have air date in 2008 refers to air_date LIKE '2008%',"SELECT COUNT(DISTINCT T2.episode_id) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE strftime('%Y', T1.air_date) = '2008' AND T2.stars > 5;"
simpson_episodes,List out the names of the awarded character in the awards held in 2009.,"in 2009 refers to year = 2009; name of awarded character refers to character

",SELECT T2.character FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T1.year = 2009;
simpson_episodes,Which are the years that character Mr. Burns won an award?,,SELECT DISTINCT T1.year FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T2.character = 'Mr. Burns';
simpson_episodes,What is the awarded category that the awarded character Lenny won?,"

awarded category refers to award_category",SELECT DISTINCT T1.award_category FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T2.character = 'Lenny';
simpson_episodes,What is the name of actor who took the role Smithers?,name refers to person; the role Smithers refers to character = 'Smithers',SELECT DISTINCT T1.person FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T2.character = 'Smithers';
simpson_episodes,What are the keywords of the episode which has title as Dangerous Curves?,,SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Dangerous Curves';
simpson_episodes,What are the keywords of the episodes which have the air date in 2008?,have air date in 2008 refers to air_date LIKE '2008%',"SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTR(T1.air_date, 1, 4) = '2008';"
simpson_episodes,"Among the episodes which have star score less than 8, how many episodes were aired in 2009?",star score less than 8 refers to stars < 8; aired in 2009 refers to air_date LIKE '2009%',"SELECT COUNT(DISTINCT T2.episode_id) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE strftime('%Y', T1.air_date) = '2009' AND T2.stars < 8;"
simpson_episodes,State the birth name of crews who are director and have birth country in South Korea.,director refers to role = 'director',SELECT T1.birth_name FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.role = 'director' AND T1.birth_country = 'South Korea';
simpson_episodes,How many awards did simpson 20 won in 2009?,won refers to result = 'Winner'; in 2009 refers to year = 2009,"SELECT COUNT(award_id) FROM Award WHERE SUBSTR(year, 1, 4) = '2009' AND result = 'Winner';"
simpson_episodes,What is the total number of episode with a rating below 7?,rating below 7 refers to rating < 7,SELECT COUNT(episode_id) FROM Episode WHERE rating < 7;
simpson_episodes,"List down the names of person born in California, USA.",California refers to birth_region = 'California'; USA refers to birth_country = 'USA',SELECT name FROM Person WHERE birth_region = 'California' AND birth_country = 'USA';
simpson_episodes,"In between the episode 5 and10 of season 2, how many of them are credited for casting?","between the episode 5 and 10 of season 20 refers to episode_id IN('S20-E5', 'S20-E6', 'S20-E7', 'S20-E8', 'S20-E9', 'S20-E10'); credited refers to credited = 'true'; for casting refers to role = 'casting'","SELECT COUNT(credited) FROM Credit WHERE episode_id IN ( 'S20-E5',  'S20-E6',  'S20-E7',  'S20-E8',  'S20-E9',  'S20-E10' ) AND credited = 'true' AND role = 'casting';"
simpson_episodes,What is the episode ID that received 2 stars and 9 votes?,2 stars refers to stars = 2; 9 votes refers to votes = 9,SELECT episode_id FROM Vote WHERE stars = 2 AND votes = 9;
simpson_episodes,Give the title of the episode won in Primetime Emmy Awards 2009.,won refers to result = 'Winner'; in Primetime Emmy Awards refers to organization = 'Primetime Emmy Awards'; 2009 refers to year = 2009,SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.organization = 'Primetime Emmy Awards' AND T1.year = 2009 AND T1.result = 'Winner';
simpson_episodes,List down the episode ID of episodes aired in 2008 with 5 stars and below.,aired in 2008 refers to air_date LIKE '2008%'; 5 stars and below refers to stars < 5,"SELECT DISTINCT T1.episode_id FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTR(T1.air_date, 1, 4) = '2008' AND T2.stars < 5;"
simpson_episodes,"Among the episode with highest votes, what is the category credited to Carlton Batten?",highest votes refers to max(votes); to Carlton Batten refers to person = 'Carlton Batten',SELECT T2.category FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.person = 'Carlton Batten' AND T2.credited = 'true' ORDER BY T1.votes DESC LIMIT 1;
simpson_episodes,"Among the episodes aired in 2008 with votes ranges from 920 to 950, list their percent.",aired in 2008 refers to air_date LIKE '2008%'; votes ranges from 920 to 950 refers to votes BETWEEN 920 AND 950,"SELECT T2.percent FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTR(T1.air_date, 1, 4) = '2008' AND T1.votes BETWEEN 950 AND 960;"
simpson_episodes,List the episode ID and title of episode where casting was credited to Bonita Pietila.,was credited refers to credited = 'true'; to Bonita Pietila refers to person = 'Bonita Pietila',"SELECT T1.episode_id, T1.title FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.credited = 'true' AND T2.person = 'Bonita Pietila' AND T2.role = 'casting';"
simpson_episodes,"In episode nominated in Annie Awards, how many of the episodes have a percent greater than 6?",nominated refers to result = 'Nominee'; Annie Awards refers to organization = 'Annie Awards'; percent greater than 6 refers to percent > 6,SELECT COUNT(*) FROM Award AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.organization = 'Annie Awards' AND T1.result = 'Nominee' AND T2.percent > 6;
simpson_episodes,What is the title of episode nominated for WGA Award (TV) with votes greater than 1000?,nominated refers to result = 'Nominee'; WGA Award (TV) refers to award_category = 'WGA Award (TV)'; votes greater than 1000 refers to votes > 1000,SELECT DISTINCT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T2.votes > 1000 AND T1.award_category = 'WGA Award (TV)' AND T1.result = 'Nominee';
simpson_episodes,"Among the people in Animation Department, who are credited for additional time in the episode titled by ""How the Test Was Won""?",Animation Department refers to category = 'Animation Department'; credited refers to credited = 'true'; for additional timer refers to role = 'additional timer',SELECT T2.person FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'How the Test Was Won' AND T2.role = 'additional timer' AND T2.credited = 'true' AND T2.category = 'Animation Department';
simpson_episodes,List the stars of episodes aired in November 2008.,in November 2008 refers to air_date LIKE '2008-11%',"SELECT T2.stars FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTR(T1.air_date, 1, 7) = '2008-11';"
simpson_episodes,"What is the title of episode with 5 stars and nominated for Prism Award which is aired on April 19, 2009?",5 stars refers to stars = 5; nominated refers to result = 'Nominee'; Prism Award refers to award_category = 'Prism Award'; on April 19 2009 refers to air_date = '2009-04-19',SELECT T3.title FROM Award AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Episode AS T3 ON T1.episode_id = T3.episode_id WHERE T3.air_date = '2009-04-19' AND T1.award_category = 'Prism Award' AND T2.stars = 5 AND T1.result = 'Nominee';
simpson_episodes,"In episode with the highest votes, list the category of awards it is nominated for.",highest votes refers to max(votes); nominated refers to result = 'Nominee',SELECT T1.award_category FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.result = 'Nominee' ORDER BY T2.votes DESC LIMIT 1;
simpson_episodes,"In episodes aired in 2009, how many of them are credited to Sam Im for additional timer?",in 2009 refers to air_date LIKE '2009%'; credited refers to credited = 'true'; Sam Im refers to person = 'Sam Im'; for additional timer refers to role = 'additional timer',"SELECT COUNT(*) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.credited = 'true' AND T2.person = 'Sam Im' AND SUBSTR(T1.air_date, 1, 4) = '2009' AND T2.role = 'additional timer';"
simpson_episodes,List the title of the episode with stars greater than the 70% of average stars of all episodes.,"stars greater than the 70% of average stars refers to stars > multiply(avg(stars), 0.7)",SELECT DISTINCT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars > 0.7 * ( SELECT AVG(stars) FROM Vote );
simpson_episodes,"In year 2009, what is the percentage of the episode titled by ""Gone Maggie Gone"" being nominated?","being nominated refers to result = 'Nominee'; percentage = divide(count(result = 'Nominee'), count(result)) * 100%",SELECT CAST((SUM(CASE WHEN T1.result = 'Nominee' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.result = 'Winner' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.result) FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T2.title = 'Gone Maggie Gone' AND T1.year = 2009;
student_loan,How many students have never been absent from school?,have never been absent refers to `month` = 0;,SELECT COUNT(name) FROM longest_absense_from_school WHERE `month` = 0
student_loan,"For the students who have been absent from school for the longest time, how many months have they been absent?",absent from school for the longest time refers to MAX(month),SELECT MAX(month) FROM longest_absense_from_school
student_loan,How many students belong to the navy department?,belong to the navy department refers to organ = 'navy';,SELECT COUNT(name) FROM enlist WHERE organ = 'navy'
student_loan,"Among the students that have been absent from school for more than 5 months, how many of them are male?",absent from school for more than 5 months refers to `month`  > = 5;,SELECT COUNT(T1.name) FROM longest_absense_from_school AS T1 INNER JOIN male AS T2 ON T1.`name` = T2.`name` WHERE T1.`month` >= 5
student_loan,Please list the names of the male students that belong to the navy department.,belong to the navy department refers to organ = 'navy';,SELECT T1.name FROM enlist AS T1 INNER JOIN male AS T2 ON T1.`name` = T2.`name` WHERE T1.organ = 'navy'
student_loan,"Among the students that have filed for bankruptcy, how many of them have been absent from school for over 5 months?",absent from school for over 5 months refers to `month` > 5;,SELECT COUNT(T1.name) FROM filed_for_bankrupcy AS T1 INNER JOIN longest_absense_from_school AS T2 ON T1.`name` = T2.`name` WHERE T2.`month` > 5
student_loan,"Among the students from the navy department, how many of them have payment due?",from the navy department refers to organ = 'navy'; have payment due refers to bool = 'pos';,SELECT COUNT(T1.name) FROM enlist AS T1 INNER JOIN no_payment_due AS T2 ON T1.`name` = T2.`name` WHERE T1.organ = 'navy' AND T2.bool = 'pos'
student_loan,Please list the male students that are disabled and have filed for bankruptcy.,"male students that are disabled and have filed for bankruptcy refers to name that appeared in all three male, disabled and filed_for_bankrupcy tables.","SELECT T1.name, T2.name, T3.name FROM disabled AS T1 INNER JOIN male AS T2 ON T1.`name` = T2.`name` INNER JOIN filed_for_bankrupcy AS T3 ON T1.`name` = T3.`name`"
student_loan,How many female students are disabled?,females students are disabled refers to name that appeared in both disabled and male tables,SELECT COUNT(name) FROM disabled WHERE name NOT IN ( SELECT name FROM male )
student_loan,How many students are unemployed and have payment due?,are unemployed and have payment due refers to,SELECT COUNT(T1.name) FROM unemployed AS T1 INNER JOIN no_payment_due AS T2 ON T1.`name` = T2.`name`
student_loan,What is the longest time for a student from the navy department to be absent from school?,navy department refers to organ = 'navy'; longest time to be absent from school refers to MAX(month),SELECT T1.month FROM longest_absense_from_school AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` WHERE T2.organ = 'navy' ORDER BY T1.`month` DESC LIMIT 1
student_loan,How many disabled students have never been absent from school?,never been absent from school refers to month = 0,SELECT COUNT(T1.name) FROM longest_absense_from_school AS T1 INNER JOIN disabled AS T2 ON T1.`name` = T2.`name` WHERE T1.`month` = 0
student_loan,Please list the departments the students are absent from school for 9 months are in.,absent from school for 9 months refers to month = 9,SELECT T2.organ FROM longest_absense_from_school AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` WHERE T1.`month` = 9
student_loan,Which department has the most disabled students?,department refers to organ; most disabled students refers to MAX(disabled.name),"SELECT T2.organ, COUNT(T1.name) FROM disabled AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` GROUP BY T2.organ ORDER BY COUNT(T1.name) DESC LIMIT 1"
student_loan,Please list all the female students that have filed for bankruptcy.,females students have filed for bankruptcy refers to name that appeared in both filed_for_bankrupcy and male tables,SELECT name FROM filed_for_bankrupcy WHERE name NOT IN ( SELECT name FROM male )
student_loan,What is the percentage of male students in the navy department?,"in the navy department refers to organ = 'navy'; percentage refers to DIVIDE(COUNT(name where organ = 'navy'), COUNT(name))",SELECT CAST(COUNT(T2.name) AS REAL) * 100 / COUNT(T1.name) FROM enlist AS T1 LEFT JOIN male AS T2 ON T1.`name` = T2.`name` WHERE T1.organ = 'navy'
student_loan,What is the average time for a disabled student to be absent from school?,"average time refers to DIVIDE(SUM(`month`), COUNT(name))",SELECT AVG(T1.month) FROM longest_absense_from_school AS T1 INNER JOIN disabled AS T2 ON T1.`name` = T2.`name`
student_loan,Name all students enlisted in the foreign legion.,in the foreign legion organ = 'foreign_legion';,SELECT name FROM enlist WHERE organ = 'foreign_legion'
student_loan,Does student348 have a due payment?,"payment due refers to bool = 'pos' means the student has payment due , bool = 'neg' means the student does not have payment due;",SELECT bool FROM no_payment_due WHERE name = 'student348'
student_loan,Which school is student829 enrolled in?,,SELECT school FROM enrolled WHERE name = 'student829'
student_loan,How many months has student217 been absent?,,SELECT month FROM longest_absense_from_school WHERE name = 'student217'
student_loan,List all students that have been absent for 6 months.,absent for 6 months `month` = 6;,SELECT name FROM longest_absense_from_school WHERE `month` = 6
student_loan,Which organization did student285 enlist?,,SELECT organ FROM enlist WHERE name = 'student285'
student_loan,Is student281 disabled and which school is the student enrolled in?,,"SELECT T2.name, T1.school FROM enrolled AS T1 INNER JOIN disabled AS T2 ON T1.`name` = T2.`name` WHERE T1.name = 'student281'"
student_loan,List all students in the air force and which school they were enrolled at.,in the air force refers to organ = 'air_force';,"SELECT T1.name, T1.school FROM enrolled AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` WHERE T2.organ = 'air_force'"
student_loan,List 10 students that have no due payments and are not males.,no due payments refers to bool = 'neg'; not males refers to not in male table,SELECT T1.name FROM no_payment_due AS T1 INNER JOIN person AS T2 ON T1.`name` = T2.`name` WHERE T2.`name` NOT IN ( SELECT name FROM male ) AND T1.bool = 'neg'
student_loan,Name 5 students with due payments that are enlisted alongside which organization they were enlisted.,with due payments refers to bool = 'pos'; organization refers to organ,"SELECT T2.organ, T1.name FROM no_payment_due AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` WHERE T1.bool = 'pos' LIMIT 5"
student_loan,Name all disabled students that are enrolled in SMC.,enrolled in SMC refers to school = 'smc';,SELECT T2.name FROM enrolled AS T1 INNER JOIN disabled AS T2 ON T1.`name` = T2.`name` WHERE T1.school = 'smc'
student_loan,Which students that filed for bankruptcy are also in the foreign legion?,in the foreign legion refers to organ = 'foreign_legion';,SELECT T2.name FROM enlist AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.`name` = T2.`name` WHERE T1.organ = 'foreign_legion'
student_loan,How many male students have no due payments?,have no due payments refers to bool = 'neg';,SELECT COUNT(T1.name) FROM no_payment_due AS T1 INNER JOIN male AS T2 ON T1.name = T2.name WHERE T1.bool = 'neg'
student_loan,Which students that are in the marines have been absent for 6 months?,in the marines refers to organ = 'marines'; absent for 6 months refers to month = 6,SELECT T1.name FROM longest_absense_from_school AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` WHERE T2.organ = 'marines' AND T1.`month` = 6
student_loan,How many students from SMC are unemployed?,from SMC refers to school = 'smc';,SELECT T2.name FROM enrolled AS T1 INNER JOIN unemployed AS T2 ON T1.`name` = T2.`name` WHERE T1.school = 'smc'
student_loan,How many unemployed students are there that have been absent for 6 months?,absent for 6 months refers to month = 6;,SELECT T1.name FROM longest_absense_from_school AS T1 INNER JOIN unemployed AS T2 ON T1.`name` = T2.name WHERE T1.`month` = 6
student_loan,Count the number of students from UCSD enlisted in the peace corps.,in the peace corps refers to organ = 'peace_corps'; from UCSD refers to school = 'ucsd';,SELECT COUNT(T1.name) FROM enlist AS T1 INNER JOIN enrolled AS T2 ON T1.`name` = T2.`name` WHERE T2.school = 'ucsd' AND T1.organ = 'peace_corps'
student_loan,Student21 is enlisted in which organization and has the student been absent?,organization refers to organ,"SELECT T2.month, T1.organ FROM enlist AS T1 INNER JOIN longest_absense_from_school AS T2 ON T1.`name` = T2.`name` WHERE T1.name = 'student21'"
student_loan,What is the percentage ratio of students who are enlisted in foreign legions that have a due payment?,"have a due payment refers to bool = 'pos'; in foreign legions refers to organ = 'foreign_legion'; ratio refers to DIVIDE(COUNT(bool = 'pos'), COUNT(bool = 'neg'))","SELECT CAST(SUM(IIF(T1.bool = 'pos', 1, 0)) AS REAL) * 100 / SUM(IIF(T1.bool = 'neg', 1, 0)) FROM no_payment_due AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` WHERE T2.organ = 'foreign_legion'"
student_loan,What percentage of students who enlisted in the navy make up the number of students enrolled in OCC?,in the navy refers to organ = 'navy'; enrolled in OCC refers to school = 'occ',"SELECT CAST(SUM(IIF(T1.school = 'occ', 1.0, 0)) AS REAL) * 100 / COUNT(T1.name) FROM enrolled AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` WHERE T2.organ = 'navy'"
student_loan,List out student IDs that have the longest absence duration from school.,longest absence duration refers to MAX(month),SELECT name FROM longest_absense_from_school WHERE `month` = ( SELECT MAX(month) FROM longest_absense_from_school )
student_loan,What is the total number of students in the school?,,SELECT COUNT(name) FROM person
student_loan,What is the longest students absence duration from school?,longest students absence duration MAX(month),"SELECT name, month FROM longest_absense_from_school WHERE `month` = ( SELECT MAX(month) FROM longest_absense_from_school )"
student_loan,How many students were absence for 4 month?,absence for 4 month refers to month = 4;,SELECT COUNT(name) FROM longest_absense_from_school WHERE month = 4
student_loan,What is the number of unemployed and bankrupt students?,,SELECT COUNT(T1.name) FROM unemployed AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name
student_loan,"Does disable students join organization. If yes, please indicate the organization joined by the students.",organization refers to organ,SELECT DISTINCT T2.organ FROM disabled AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name`
student_loan,How many unemployed and bankrupt students that have payment dues?,have payment dues refers to bool = 'pos',SELECT COUNT(T1.name) FROM unemployed AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name INNER JOIN no_payment_due AS T3 ON T2.name = T3.name WHERE T3.bool = 'pos'
student_loan,Please check if student 124 is disabled male.,if student name appear in disabled then student is disabled and vice versa; if student name appear in male then student is male and vice versa,"SELECT IIF(T2.name IS NULL, 'female', 'male') FROM male AS T1 LEFT JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.name = 'student124'"
student_loan,"What is the employment, disability, gender and school debt status for student180 and student117?",school debt status refers to bool; bool = 'pos' means has payment due; bool = 'neg' means doesn't has payment due; student appear in male.name means he is a male; student does not appear in male.name means she is a female;,"SELECT ( SELECT COUNT(name) FROM disabled WHERE name IN ('student180', 'student117') ), ( SELECT COUNT(name) FROM unemployed WHERE name IN ('student180', 'student117') ), ( SELECT COUNT(name) FROM male WHERE name IN ('student180', 'student117') ), ( SELECT COUNT(name) FROM no_payment_due WHERE name IN ('student180', 'student117'))"
student_loan,How many female students joined a marines and air force organization?,joined a marines refers to organ = 'marines'; air force organization refers to organ = 'air_force';,"SELECT COUNT(name) FROM enlist WHERE organ IN ('marines', 'air_force') AND name NOT IN ( SELECT name FROM male )"
student_loan,"List out the organization joined and school enrolled by student27, student17 and student101?",organization joined refers to organ,"SELECT T1.school, T2.organ FROM enrolled AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` WHERE T1.`name` IN ('student27,student17,studetn101')"
student_loan,What is the ratio of disable female to male students?,"ratio refers to DIVIDE(COUNT(name not from male), COUNT(name from male))","SELECT CAST(SUM(IIF(T2.name IS NULL, 1, 0)) AS REAL) * 100 / COUNT(T2.name) FROM disabled AS T1 LEFT JOIN male AS T2 ON T1.`name` = T2.`name`"
student_loan,How many female students are not joining any of the organization?,female students refers to enlist.name who are NOT in male.name,SELECT COUNT(name) FROM person WHERE name NOT IN ( SELECT name FROM male ) AND name NOT IN ( SELECT name FROM enrolled )
student_loan,List out all bankrupt students that are able to make payment before due?,make payment before due refers to bool = 'neg';,SELECT T1.name FROM filed_for_bankrupcy AS T1 INNER JOIN no_payment_due AS T2 ON T1.name = T2.name WHERE T2.bool = 'neg'
student_loan,What is the average absence period of a student?,"average refers to DIVIDE(SUM(month), COUNT(name))",SELECT AVG(month) FROM longest_absense_from_school
student_loan,What is the average of absence for an employed students?,"average refers to DIVIDE(SUM(month), COUNT(name))",SELECT AVG(month) FROM longest_absense_from_school WHERE name NOT IN ( SELECT name FROM unemployed )
student_loan,What is the average absence period of a disabled student?,"average refers to DIVIDE(SUM(month), COUNT(name))",SELECT AVG(T1.month) FROM longest_absense_from_school AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name
student_loan,Which organization does student 313 belong to?,organization refers to organ,SELECT organ FROM enlist WHERE name = 'studenT113'
student_loan,How many students enlisted in the fire-department?,enlisted in the fire-department refers to organ = 'fire_department';,SELECT COUNT(name) FROM enlist WHERE organ = 'fire_department'
student_loan,How many students who have never been absent from school?,have never been absent refers to `month` = 0;,SELECT COUNT(name) FROM longest_absense_from_school WHERE month = 0
student_loan,How many students have been absent above 2 months?,absent above 2 months refers to month > 2;,SELECT COUNT(name) FROM longest_absense_from_school WHERE month > 2
student_loan,State the number of students do not have payment due.,do not have payment due refers to bool = 'neg';,SELECT COUNT(name) FROM no_payment_due WHERE bool = 'neg'
student_loan,Give the number of students who have payment due.,who have payment due refers to bool = 'pos';,SELECT COUNT(name) FROM no_payment_due WHERE bool = 'pos'
student_loan,Mention the name of disabled students who have never been absent from school.,never been absent from school refers to month = 0,SELECT T1.name FROM disabled AS T1 INNER JOIN longest_absense_from_school AS T2 ON T1.name = T2.name WHERE T2.month = 0
student_loan,How many unemployed students are enlisted in the navy organization?,enlisted in the navy organization refers to organ = 'navy';,SELECT COUNT(T1.name) FROM unemployed AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T2.organ = 'navy'
student_loan,Count the number of male students who belong to foreign legion.,belong to foreign legion refers to organ = 'foreign_legion';,SELECT COUNT(T1.name) FROM male AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T2.organ = 'foreign_legion'
student_loan,List out the number of female students who enlisted in the air force.,enlisted in the air force refers to organ = 'air_force';,SELECT COUNT(name) FROM enlist WHERE organ = 'air_force' AND name NOT IN ( SELECT name FROM male )
student_loan,State name of disabled students who have the longest duration of absense from school.,longest duration of absense refers to MAX(month),SELECT T1.name FROM disabled AS T1 INNER JOIN longest_absense_from_school AS T2 ON T1.name = T2.name ORDER BY T2.month DESC LIMIT 1
student_loan,State the unemployed students who enlisted in marines.,enlisted in marines refers to organ = 'marines';,SELECT T1.name FROM unemployed AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T2.organ = 'marines'
student_loan,Calculate the average duration of absense of disabled students.,"average refers to DIVIDE(SUM(month), COUNT(name))",SELECT AVG(T1.month) FROM longest_absense_from_school AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name
student_loan,What is the percentage of unemployed students who have been absent for 5 months from school?,"percentage refers to DIVIDE(COUNT(month > 5), COUNT(month))","SELECT CAST(SUM(IIF(T1.month > 5, 1, 0)) AS REAL) * 100 / COUNT(T1.month) FROM longest_absense_from_school AS T1 INNER JOIN unemployed AS T2 ON T1.name = T2.name"
student_loan,How many unemployed disabled students have been absent for 8 months from school?,absent for 8 months refers to month = 8;,SELECT COUNT(T1.name) FROM longest_absense_from_school AS T1 INNER JOIN unemployed AS T2 ON T1.name = T2.name INNER JOIN disabled AS T3 ON T2.name = T3.name WHERE T1.month = 8
student_loan,State name of unemployed students who have the longest duration of absense from school.,longest duration of absense refers to MAX(month),SELECT T1.name FROM longest_absense_from_school AS T1 INNER JOIN unemployed AS T2 ON T1.name = T2.name ORDER BY T1.month DESC LIMIT 1
student_loan,Mention the name of unemployed students who have never been absent from school.,have never been absent from school refers to month = 0,SELECT T1.name FROM longest_absense_from_school AS T1 INNER JOIN unemployed AS T2 ON T1.name = T2.name WHERE T1.month = 0
student_loan,How many disabled students have been absent for 3 months from school?,have been absent for 3 months from school refers to month = 3,SELECT COUNT(T1.name) FROM longest_absense_from_school AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.month = 3
student_loan,Mention the name of students who filed for bankruptcy and have never been absent from school.,have never been absent refers to month = 0;,SELECT T1.name FROM longest_absense_from_school AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name WHERE T1.month = 0
student_loan,State name of students who filed for bankruptcy and have the longest duration of absense from school.,longest duration of absense refers to MAX(month),SELECT T1.name FROM longest_absense_from_school AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name ORDER BY T1.month DESC LIMIT 1
student_loan,What is the gender of student1000?,"student name appear in Male table means student is a male, student does not appear in Male table means student is a female","SELECT IIF(T.result = 0, 'female', 'male') AS re FROM ( SELECT COUNT(name) AS result FROM male WHERE name = 'studenT1000' ) T"
student_loan,How many students are disabled?,,SELECT COUNT(name) FROM disabled
student_loan,How many students have been absents for more than 6 months?,absents for more than 6 months refers to month > 6,SELECT COUNT(name) FROM longest_absense_from_school WHERE month > 6
student_loan,Which students have absents the most?,absents the most refers to MAX(month),SELECT name FROM longest_absense_from_school WHERE month = ( SELECT MAX(month) FROM longest_absense_from_school )
student_loan,How many students are enlisted in the army?,enlisted in the army refers to organ = 'army';,SELECT COUNT(name) FROM enlist WHERE organ = 'army'
student_loan,Find the average number of absences for each student.,"average refers to DIVIDE(SUM(month), COUNT(name))",SELECT AVG(month) FROM longest_absense_from_school
student_loan,"Sum up the number of students enlisted in foreign legion, peace corps and army.",enlisted in foreign legion refers to organ = 'foreign_legion'; peace corps refers to organ = 'peace_corps'; army refers to organ = 'army',"SELECT COUNT(name) FROM enlist WHERE organ IN ('army', 'peace_corps', 'foreign_legion')"
student_loan,"Among the students enlisted in marines, how many of them are disabled?",enlisted in marines refers to organ = 'marines';,SELECT COUNT(T1.name) FROM enlist AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.organ = 'marines'
student_loan,How many unemployed students still have payment due?,still have payment due refers to bool = 'pos',SELECT COUNT(T1.name) FROM unemployed AS T1 INNER JOIN no_payment_due AS T2 ON T1.name = T2.name WHERE T2.bool = 'pos'
student_loan,Which female students had never been absent?,had never been absent refers to month = 0,SELECT T2.name FROM male AS T1 INNER JOIN longest_absense_from_school AS T2 ON T1.name <> T2.name WHERE T2.month = 0
student_loan,Which school has the highest number of disabled students?,highest number of disabled students refers to MAX(COUNT(disabled.name)),"SELECT T.school FROM ( SELECT T2.school, COUNT(T2.name) AS num FROM disabled AS T1 INNER JOIN enrolled AS T2 ON T1.name = T2.name GROUP BY T2.school ) T ORDER BY T.num DESC LIMIT 1"
student_loan,List all the organisations of students who filed for bankcrupcy.,organization refers to organ; students who filed for bankrupcy refers to file_for_bankrupcy.name,SELECT T2.organ FROM filed_for_bankrupcy AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name
student_loan,How many male students join more than one organization?,more than one organization refers to COUNT(organ) > 1,"SELECT COUNT(T.a) FROM ( SELECT COUNT(DISTINCT T1.name) AS a, COUNT(T2.organ) AS num FROM male AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name GROUP BY T1.name ) T WHERE T.num > 1"
student_loan,List all the navy students who are disabled.,navy students refers to organ = 'navy'; disabled student refers to disabled.name,SELECT T1.name FROM disabled AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T2.organ = 'navy'
student_loan,How many SMC's students that absent for 7 months?,SMC's students refers to school = 'smc'; absent for 7 months refers to month = 7,SELECT COUNT(T1.name) FROM enrolled AS T1 INNER JOIN longest_absense_from_school AS T2 ON T1.name = T2.name WHERE T1.school = 'smc' AND T2.month = 7
student_loan,List all the disabled female students.,,SELECT T1.name FROM disabled AS T1 INNER JOIN male AS T2 ON T1.name <> T2.name
student_loan,Calculate the ratio between unemployed students and disabled students.,"ratio refers to DIVIDE(COUNT(name from unemployed), COUNT(name from disabled))",SELECT CAST(( SELECT COUNT(name) FROM unemployed ) AS REAL ) / ( SELECT COUNT(name) FROM disabled )
student_loan,Find the percentage of male students enlisted in the fire department.,"percentage refers to DIVIDE(COUNT(organ = 'fire_department'), COUNT(name))",SELECT CAST(COUNT(T2.name) AS REAL) * 100 / COUNT(T1.name) FROM enlist AS T1 LEFT JOIN male AS T2 ON T1.name = T2.name WHERE T1.organ = 'fire_department'
student_loan,How many students has the longest absense from school for 5 months?,absense from school for 5 month refers to month = 5,SELECT COUNT(name) FROM longest_absense_from_school WHERE month = 5
student_loan,How many students are enlisted in the Army organization?,enlisted in the army refers to organ = 'army';,SELECT COUNT(name) FROM enlist WHERE organ = 'army'
student_loan,How many students are enrolled in UCLA school?,enrolled in UCLA refers to school = 'ucla';,SELECT COUNT(name) FROM enrolled WHERE school = 'ucla'
student_loan,List at least 5 students who has the longest absense from schoool?,longest absense refers to MAX(month),SELECT name FROM longest_absense_from_school ORDER BY month DESC LIMIT 5
student_loan,How many of the students joined two organization?,joined two organization refers to COUNT(organ) > = 2,SELECT COUNT(name) FROM enlist WHERE organ >= 2
student_loan,How many students are enlisted in the Navy organization?,enlisted in the navy organization refers to organ = 'navy';,SELECT COUNT(name) FROM enlist WHERE organ = 'navy'
student_loan,How many male stuents do not have payment due?,do not have payment due refers to bool = 'neg';,SELECT COUNT(T1.name) FROM male AS T1 INNER JOIN no_payment_due AS T2 ON T1.name = T2.name WHERE T2.bool = 'neg'
student_loan,How many students are enlisted in the Peace Corps organization are enrolled in UCSD school?,enlisted in the Peace Corps refers to organ = 'peace_corps'; enrolled in UCSD school refers to school = 'ucsd';,SELECT COUNT(T1.name) FROM enlist AS T1 INNER JOIN enrolled AS T2 ON T1.name = T2.name WHERE T1.organ = 'peace_corps' AND T2.school = 'ucsd'
student_loan,"Among the unemployed students, how many of them have no payment due?","have no payment due refers to bool = 'neg';

",SELECT COUNT(T1.name) FROM unemployed AS T1 INNER JOIN no_payment_due AS T2 ON T1.name = T2.name WHERE T2.bool = 'neg'
student_loan,How many female students have no payment due?,have no payment due refers to bool = 'neg'; female students refers to name NOT in male table,SELECT COUNT(name) FROM no_payment_due WHERE name NOT IN ( SELECT name FROM male )
student_loan,How many unemployed students have never been absent?,never been absent refers to month = 0;,SELECT COUNT(T2.name) FROM longest_absense_from_school AS T1 INNER JOIN unemployed AS T2 ON T2.name = T1.name WHERE T1.month = 0
student_loan,List at least 10 students who have no payment due and are enlisted in Fire Department organization.,no payment due refers to bool = 'neg'; organization refers to organ; organ = 'fire_department';,SELECT T1.name FROM no_payment_due AS T1 INNER JOIN enlist AS T2 ON T2.name = T1.name WHERE T1.bool = 'neg' AND T2.organ = 'fire_department' LIMIT 10
student_loan,How many female students are enlisted in the Navy organization?,female students refers to enlist.name who are NOT in male.name; organization refers to organ; organ = 'navy';,SELECT COUNT(name) FROM enlist WHERE organ = 'navy' AND name NOT IN ( SELECT name FROM male )
student_loan,How many unemployed students are enlisted in the Army organization?,organization refers to organ; organ = 'army';,SELECT COUNT(T1.name) FROM enlist AS T1 INNER JOIN unemployed AS T2 ON T2.name = T1.name WHERE T1.organ = 'army'
student_loan,How many unemployed students have payment due?,have payment due refers to bool = 'pos';,SELECT COUNT(T1.name) FROM no_payment_due AS T1 INNER JOIN unemployed AS T2 ON T2.name = T1.name WHERE T1.bool = 'pos'
student_loan,List at least 5 students who have payment due and are enlisted in Peace Corps organization?,have payment due refers to bool = 'pos'; organization refers to organ; organ = 'Peace Corps';,SELECT T1.name FROM no_payment_due AS T1 INNER JOIN enlist AS T2 ON T2.name = T1.name WHERE T2.organ = 'peace_corps' AND T1.bool = 'pos' LIMIT 5
student_loan,How many disabled students are female?,female refers to disabled.name who are NOT in male.name;,SELECT COUNT(name) FROM disabled WHERE name NOT IN ( SELECT name FROM male )
student_loan,How many disabled students have payment due?,have payment due refers to bool = 'pos';,SELECT COUNT(T1.name) FROM disabled AS T1 INNER JOIN no_payment_due AS T2 ON T2.name = T1.name WHERE T2.bool = 'pos'
student_loan,Calculate the average number of female students who are disabled and who joined Foreign Legion organization.,"average = DIVIDE(COUNT(disabled.name who are not in male.name WHERE organ = 'foreign_legion'), COUNT(disabled.name)); female students who are disabled refers to disabled.name who are NOT in male.name; organization refers to organ; organ = 'Foreign Legion';","SELECT CAST(SUM(IIF(T3.name IS NULL, 1, 0)) AS REAL) / COUNT(T1.name) FROM disabled AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T2.name = T3.name WHERE T2.organ = 'foreign_legion'"
student_loan,Calculate the ratio in percentage between the average number of female and male students who joined Fire Department organization.,"ratio = CONCAT(MULTIPLY(DIVIDE(COUNT(enlist.name WHERE organ = 'fire_department' which is NOT in male.name), COUNT(enlist.name WHERE organ = 'fire_department),'%'))) AS FEMALE; ratio = CONCAT(MULTIPLY(DIVIDE(COUNT(enlist.name WHERE organ = 'fire_department' which is IN male.name), COUNT(enlist.name WHERE organ = 'fire_department), 100))) AS MALE; female students refers to enlist.name who are NOT in male.name; male students refers to enlist.name who are IN male.name; organization refers to organ; organ = 'fire_department';","SELECT CAST(SUM(IIF(T2.name IS NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.name), CAST(SUM(IIF(T2.name IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.name) FROM enlist AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name WHERE T1.organ = 'fire_department'"
student_loan,How many students enlisted in the navy?,navy refers to organ = 'navy';,SELECT COUNT(name) FROM enlist WHERE organ = 'navy'
student_loan,Calculate the percentage of students who have never been absent.,"percentage = CONCAT(DIVIDE(MULTIPLY(COUNT(name WHERE month = 0), 100), COUNT(name)),'%'); never been absent refers to month = 0;","SELECT CAST(SUM(IIF(month = 0, 1, 0)) AS REAL) * 100 / COUNT(name) FROM longest_absense_from_school"
student_loan,What is the ratio of students who have payment due and those who do not have payment due?,"ratio =  DIVIDE(COUNT(name WHERE `bool` = 'pos'), COUNT(name WHERE `bool` = 'neg')); have payment due refers to `bool` = 'pos'; no payment due refers to `bool` = 'neg';","SELECT CAST(SUM(IIF(`bool` = 'pos', 1, 0)) AS REAL) / SUM(IIF(`bool` = 'neg', 1, 0)) FROM no_payment_due"
student_loan,Provide the students' names and schools who enrolled for 15 months.,enrolled for 15 months refers to month = 15;,"SELECT name, school FROM enrolled WHERE month = 15"
student_loan,Calculate the average enlisted students per organization.,"average = DIVIDE(FLOOR(COUNT(NAME), COUNT(DISTINCT organ)));",SELECT CAST(COUNT(NAME) AS REAL) * 100 / COUNT(DISTINCT organ) FROM enlist
student_loan,List down the enrolled schools and duration of student214.,enrolled schools refers to school; duration refers to month; student214 is a name of student;,"SELECT school, month FROM enrolled WHERE name = 'student214'"
student_loan,"Among all students, calculate the percentage of disabled students.","percentage = CONCAT(DIVIDE(MULTIPLY(COUNT(disabled.name), 100), (COUNT(person.name that is not in disabled.name))),'%');",SELECT CAST(COUNT(T2.name) AS REAL) * 100 / COUNT(T1.name) FROM person AS T1 LEFT JOIN disabled AS T2 ON T2.name = T1.name
student_loan,"Among students who have been absent for nine months, how many of them are disabled?",absent for 9 months refers to month = 9;,SELECT COUNT(T1.name) FROM disabled AS T1 LEFT JOIN longest_absense_from_school AS T2 ON T2.name = T1.name WHERE T2.month = 9
student_loan,List down the student names who did not file for bankruptcy.,students name who did not file a bankruptcy refers to person.name who are NOT in filed_for_bankrupcy.name;,SELECT name FROM person WHERE name NOT IN ( SELECT name FROM filed_for_bankrupcy )
student_loan,List any five female students' names who enlisted for the air force.,female students refers to enlist.name who are NOT in male.name; air force refers to organ = 'air_force';,SELECT T1.name FROM enlist AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name WHERE T2.name IS NULL AND T1.organ = 'air_force' LIMIT 5
student_loan,Calculate the number of students who are not disabled.,students who are not disabled refers to person.name who are NOT in disabled.name;,"SELECT COUNT(CASE  WHEN T2.name IS NULL THEN T1.name END) AS ""number"" FROM person AS T1 LEFT JOIN disabled AS T2 ON T2.name = T1.name"
student_loan,"Define the gender of ""student995"" and his/her enrolled schools.","male.name = 'student995' means student995's gender is male; if 'student995' can not be found in 'male.name', it means student995 is female;","SELECT IIF(T2.name IS NULL, 'female', 'male') AS gen , T1.school FROM enrolled AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name WHERE T1.name = 'student995'"
student_loan,"Among the students with disabilities, list any five students' names who are unemployed.",students with disabilities who are unemployed refers to disabled.name who are IN unemployed.name;,SELECT T1.name FROM disabled AS T1 INNER JOIN unemployed AS T2 ON T2.name = T1.name LIMIT 5
student_loan,How many unemployed students filed for bankruptcy?,unemployed students who filed for bankruptcy refers to unemployed.name who are IN filed_for_bankrupcy.name;,SELECT COUNT(T1.name) FROM unemployed AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T2.name = T1.name
student_loan,"Among the students who have been absent for four months, provide any five students' names and enlisted organizations.",absent for four months refers to month = 4; enlisted organizations refers to organ;,"SELECT T2.name, T2.organ FROM longest_absense_from_school AS T1 INNER JOIN enlist AS T2 ON T2.name = T1.name WHERE T1.month = 4 LIMIT 5"
student_loan,"Among the students with payment due, how many of them are unemployed?",with payment due refers to bool = 'pos';,SELECT COUNT(T1.name) FROM no_payment_due AS T1 INNER JOIN unemployed AS T2 ON T2.name = T1.name WHERE T1.bool = 'pos'
student_loan,Provide the enlisted organizations of student160 and status of his/her payment due.,enlisted organizations refers to organ; student160 is a name of student; status of his or her payment due is mentioned in no_payment_due; bool = 'pos' means the student has payment due; bool = 'neg' means the student has no payment due;,"SELECT T1.organ, T2.bool FROM enlist AS T1 INNER JOIN no_payment_due AS T2 ON T2.name = T1.name WHERE T1.name = 'student160'"
student_loan,List any ten male students who enlisted for foreign legion.,male students are mentioned in male.name; foreign legion refers to organ = 'foreign_legion';,SELECT T1.name FROM enlist AS T1 INNER JOIN male AS T2 ON T2.name = T1.name WHERE T1.organ = 'foreign_legion' LIMIT 10
student_loan,Calculate the percentage of female students.,"percentage = CONCAT(DIVIDE(MULTIPLY(COUNT(person.name which is not in male.name)), 100), COUNT(person.name that is IN male.name),'%'); female students refers to person.name who are NOT in male.name;","SELECT CAST(SUM(IIF(T2.name IS NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.name) FROM person AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name"
student_loan,How many students are filed for bankruptcy?,,SELECT COUNT(name) FROM filed_for_bankrupcy
student_loan,How many students are enrolled in smc during month 1?,smc refers to school = 'smc';,SELECT COUNT(name) FROM enrolled WHERE school = 'smc' AND month = 1
student_loan,How many students enlist in the air force organization?,organization refers to organ; organ = 'air_force';,SELECT COUNT(name) FROM enlist WHERE organ = 'air_force'
student_loan,What is the organization enlisted by student168?,organization refers to organ; student168 is a name of student;,SELECT organ FROM enlist WHERE name = 'student168'
student_loan,How many disabled male students joined an organization?,organization refers to organ; disabled male students refers to disabled.name who are IN male.name;,SELECT COUNT(T1.name) FROM disabled AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name INNER JOIN enlist AS T3 ON T3.name = T2.name
student_loan,Please provide a disability breakdown for each school.,disability breakdown refers to the number of disabled students;,SELECT COUNT(T1.name) FROM enrolled AS T1 INNER JOIN disabled AS T2 ON T2.name = T1.name GROUP BY T1.school
student_loan,Please provide a gender breakdown for each organization.,gender breakdown refers to the number of male and female; male are mentioned in male.name; female refers to enlist.name who are NOT in male.name; organization refers to organ;,"SELECT IIF(T2.name IS NULL, 'female', 'male') AS gender FROM enlist AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name GROUP BY T1.organ"
student_loan,List out student names that enrolled in two schools and two organizations?,enrolled in two schools refers to COUNT(school) = 2; two organizations refers to COUNT(organ) = 2;,"SELECT T.name FROM ( SELECT T1.name, COUNT(T1.organ) AS num FROM enlist AS T1 INNER JOIN enrolled AS T2 ON T1.name = T2.name GROUP BY T1.name ) T WHERE T.num = 2"
student_loan,What is the percentage difference between month 0 absence and month 9 absence?,"percentage difference = CONCAT(DIVIDE(MULTIPLY(SUBTRACT(COUNT(name WHERE month = 0), COUNT(name WHERE month = 9)), 100), COUNT(name WHERE month = 0)),'%');","SELECT CAST(((SUM(IIF(month = 0, 1, 0)) - SUM(IIF(month = 9, 1, 0)))) AS REAL) * 100 / SUM(IIF(month = 0, 1, 0)) FROM longest_absense_from_school"
student_loan,Which school have the highest student enrollment? How many of those students are filed for bankruptcy?,highest student enrollment refers to MAX(COUNT(school));,"SELECT T.school, num FROM ( SELECT T1.school, COUNT(T2.name) AS num FROM enrolled AS T1 LEFT JOIN filed_for_bankrupcy AS T2 ON T2.name = T1.name GROUP BY T1.school ) T ORDER BY T.num DESC LIMIT 1"
student_loan,How many students is disabled and unemployed at the same time?,students who are disabled and unemployed at the same time refers to disabled.name = unemployed.name;,SELECT COUNT(T1.name) FROM disabled AS T1 INNER JOIN unemployed AS T2 ON T2.name = T1.name
student_loan,List out students that enrolled in occ school and enlisted in a fire department.,occ school refers to school = 'occ'; department refers to organ; organ = 'fire_department';,SELECT T1.name FROM enlist AS T1 INNER JOIN enrolled AS T2 ON T2.name = T1.name WHERE T2.school = 'occ' AND T1.organ = 'fire_department'
student_loan,"Which male students are unemployed, disable and were absent for 5 month?",male students are mentioned in male.name; unemployed and disabled refers to unemployed.name = disabled.name; absent for 5 month refers to month = 5;,SELECT T1.name FROM unemployed AS T1 INNER JOIN disabled AS T2 ON T2.name = T1.name INNER JOIN longest_absense_from_school AS T3 ON T3.name = T2.name WHERE T3.month = 5
student_loan,List out female students that enrolled in occ school and ulca?,"female students refers to enrolled.name who are NOT in male.name; occ school and ulca refers to school IN('occ', 'ulca');","SELECT name FROM enrolled WHERE school IN ('occ', 'ulca') AND name NOT IN ( SELECT name FROM male )"
student_loan,What is the school and organization enrolled by student211?,organization refers to organ; student211 is a name of student;,"SELECT T2.school, T1.organ FROM enlist AS T1 INNER JOIN enrolled AS T2 ON T2.name = T1.name WHERE T1.name = 'student211'"
student_loan,How many male students filed for bankruptcy as compare to female students?,"difference = SUBTRACT(COUNT(filed_for_bankrupcy.name who are In male.name), COUNT(filed_for_bankrupcy.name who are NOT in male.name)); male students are mentioned in male.name; female students refers to filed_for_bankrupy.name who are NOT in male.name;","SELECT COUNT(T2.name) - SUM(IIF(T2.name IS NULL, 1, 0)) AS num FROM filed_for_bankrupcy AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name"
student_loan,What is the average absent month for a unemployed male students?,"average = DIVIDE(SUM(month), COUNT(unemployed.name who are in male.name)); unemployed male students refers to unemployed.name who are IN male.name;",SELECT AVG(T2.month) AS avg FROM unemployed AS T1 INNER JOIN longest_absense_from_school AS T2 ON T2.name = T1.name INNER JOIN male AS T3 ON T3.name = T2.name
student_loan,What is the percentage difference between the attendence of disabled and non-disable students? Do the disable students show better attendance than non-disable students?,"difference = MULTIPLY(DIVIDE(SUBTRACT(COUNT(longest_absense_from_school.name that is in disabled.name), COUNT(longest _absense_from_school.name that is NOT in disabled.name), longest _absense_from_school.name), 100)); IF COUNT(longest_absense_from_school.name that is in disabled.name) < COUNT(longest _absense_from_school.name that is NOT in disabled.name), it means, the disabled students have better attendance than non-disabled students; IF COUNT(longest_absense_from_school.name that is in disabled.name) > COUNT(longest _absense_from_school.name that is NOT in disabled.name), it means the disabled students do not have a better attendance than non-disabled students;","SELECT CAST((SUM(IIF(T2.name IS NOT NULL AND T1.month = 0, 1, 0)) - SUM(IIF(T2.name IS NULL AND T1.month = 0, 1, 0))) AS REAL) * 100 / COUNT(T1.name), IIF(SUM(IIF(T2.name IS NOT NULL AND T1.month = 0, 1, 0)) - SUM(IIF(T2.name IS NULL AND T1.month = 0, 1, 0)) > 0, 'YES', 'NO') AS isHigh FROM longest_absense_from_school AS T1 LEFT JOIN disabled AS T2 ON T2.name = T1.name"
student_loan,Calculate the average duration of absense of disabled male students.,"average duration = DIVIDE(SUM(month), COUNT(month)); duration of absence refers to month; disabled male students refers to disabled.name who are IN male.name;",SELECT AVG(T1.month) FROM longest_absense_from_school AS T1 INNER JOIN disabled AS T2 ON T2.name = T1.name INNER JOIN male AS T3 ON T3.name = T2.name
student_loan,Calculate the ratio of unemployed students who have never been absent from school.,"ratio = CONCAT(DIVIDE(MULTIPLY(COUNT(unemployed.name WHERE month = 0), 100), COUNT(month)),'%'); unemployed students who have never been absent from school refers to (unemployed.name WHERE month = 0);","SELECT CAST(SUM(IIF(T2.month = 0, 1, 0)) AS REAL) * 100 / COUNT(T1.name) FROM unemployed AS T1 INNER JOIN longest_absense_from_school AS T2 ON T2.name = T1.name"
student_loan,State the number of male students who do not have payment due.,do not have payment due refers to bool = 'neg';,SELECT COUNT(T1.name) FROM no_payment_due AS T1 INNER JOIN male AS T2 ON T2.name = T1.name WHERE T1.bool = 'pos'
student_loan,State the number of students who filed for bankruptcy and have payment due.,have payment due refers to bool = 'pos';,SELECT COUNT(T1.name) FROM filed_for_bankrupcy AS T1 INNER JOIN no_payment_due AS T2 ON T2.name = T1.name WHERE T2.bool = 'pos'
student_loan,What is the status of payment of student 124?,status of payment is mentioned in no_payment_due; bool = 'pos' means the student has payment due; bool = 'neg' means the student has no payment due; student124 is a name of student;,SELECT `bool` FROM no_payment_due WHERE name = 'student124'
student_loan,State the number of disabled students who have payment due.,have payment due refers to bool = 'pos';,SELECT COUNT(T1.name) FROM no_payment_due AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.bool = 'neg'
student_loan,State name of students who have the longest duration of absense from school and do not have payment due.,longest duration of absence from school refers to MAX(month); do not have payment due refers to bool = 'neg';,SELECT T1.name FROM longest_absense_from_school AS T1 INNER JOIN no_payment_due AS T2 ON T1.name = T2.name WHERE T2.bool = 'neg' ORDER BY T1.month DESC LIMIT 1
student_loan,State name of students who have been absent for 5 months from school and do not have payment due.,absent for 5 months refers to month = 5; do not have payment due refers to bool = 'neg';,SELECT T1.name FROM longest_absense_from_school AS T1 INNER JOIN no_payment_due AS T2 ON T1.name = T2.name WHERE T1.month = 5 AND T2.bool = 'neg'
student_loan,List out the number of disabled students who enlisted in marines.,marines refers to organ = 'marines';,SELECT COUNT(T1.name) FROM disabled AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T2.organ = 'marines'
student_loan,List out the number of students who have the longest duration of absense from school and enlisted in the peace corps.,longest duration of absence refers to MAX(month); peace corps refers to organ = 'peace_corps';,SELECT COUNT(T1.NAME) FROM longest_absense_from_school AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T2.organ = 'peace_corps' ORDER BY T1.month DESC LIMIT 1
student_loan,List out the number of students who filed for bankruptcy and enlisted in navy.,navy refers to organ = 'navy';,SELECT COUNT(T1.name) FROM enlist AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name WHERE T1.organ = 'navy'
student_loan,Give the number of students who enlisted in marines and have payment due.,marines refers to organ = 'marines'; have payment due refers to bool = 'pos';,SELECT COUNT(T1.name) FROM no_payment_due AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T1.bool = 'pos' AND T2.organ = 'marines'
student_loan,Calculate the ratio of disabled students who have never been absent from school.,"ratio = MULTIPLY(DIVIDE(SUM(month = 0), COUNT(disabled.name)), 100); never been absent from school refers to month = 0;","SELECT 100 * SUM(IIF(T2.month = 0, 1, 0)) AS num FROM disabled AS T1 INNER JOIN longest_absense_from_school AS T2 ON T1.name = T2.name"
student_loan,How many students in the Air Force?,Air Force refers to organ = 'air_force';,SELECT COUNT(name) FROM enlist WHERE organ = 'air_force'
student_loan,How many students have been absent less than 4 months?,absent less than 4 months refers to month < 4;,SELECT COUNT(name) FROM longest_absense_from_school WHERE month < 4
student_loan,Count the number of female students who belong to marines organization.,female students refers to enlist.name who are NOT in male.name; organization refers to organ; organ = 'marines';,SELECT COUNT(*) FROM person AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T1.name = T3.name WHERE T2.organ = 'marines' AND T3.name IS NULL
student_loan,Calculate the average duration of absense of female students.,"average duration = DIVIDE(SUM(month), COUNT(longest_absence_from_school.name which are NOT in male.name)); female students refers to longest_absence_from_school.name who are NOT in male.name;",SELECT AVG(T2.month) FROM person AS T1 INNER JOIN longest_absense_from_school AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T1.name = T3.name WHERE T3.name IS NULL
student_loan,State name of female students who filed for bankruptcy.,female students refers to filed_for_bankrupcy.name who are NOT in male.name;,SELECT T1.name FROM person AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T1.name = T3.name WHERE T3.name IS NULL
student_loan,Mention the status of payment of student 299.,status of payment is mentioned in no_payment_due; bool = 'pos' means the student has payment due; bool = 'neg' means the student has no payment due; student299 is a name of student;,SELECT bool FROM no_payment_due WHERE name = 'student299'
student_loan,How many students are enlisted to the air force?,Air Force refers to organ = 'air_force';,SELECT COUNT(name) FROM enlist WHERE organ = 'air_force'
student_loan,How many students have absent from school?,have absent from school refers to month > 1;,SELECT COUNT(name) FROM longest_absense_from_school WHERE month > 1
student_loan,Provide the names of the students enlisted in the fire department.,department refers to organ; organ = 'fire_department';,SELECT name FROM enlist WHERE organ = 'fire_department'
student_loan,How many disabled students have payment due?,payment due refers to bool = 'pos';,SELECT COUNT(T1.name) FROM no_payment_due AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.bool = 'pos'
student_loan,"Among the students that filed for bankruptcy, how many of them have been enrolled in OCC?",OCC refers to school = 'occ';,SELECT COUNT(T1.name) FROM filed_for_bankrupcy AS T1 INNER JOIN enrolled AS T2 ON T1.name = T2.name WHERE T2.school = 'occ'
student_loan,How many disabled students are male?,male students are mentioned in male.name;,SELECT COUNT(T1.name) FROM male AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name
student_loan,List the names of disabled students enlisted in the navy.,navy refers to organ = 'navy';,SELECT T1.name FROM enlist AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.organ = 'navy'
student_loan,"Among the male students, list down the names of students with payment due.",male students are mentioned in male.name; with payment due refers to bool = 'pos';,SELECT T1.name FROM male AS T1 INNER JOIN no_payment_due AS T2 ON T1.name = T2.name WHERE T2.bool = 'pos'
student_loan,What is the employment and payment status of student110?,"employment status is mentioned in unemployment; unemployed.name = 'student110' means the student is unemployed; if 'student110' can not be found in unemployed.name, it means the student is employed; payment status is mentioned in no_payment_due; bool = 'pos' means the student has payment due; bool = 'neg' means the student has no payment due; student110 is a name of student;",SELECT T1.bool FROM no_payment_due AS T1 INNER JOIN unemployed AS T2 ON T1.name = T2.name WHERE T1.name = 'student110'
student_loan,"Among all students, calculate the percentage of male students.","percentage = MULTIPLY(DIVIDE(COUNT(male.name), COUNT(person.name)), 100); male students are mentioned in male.name;",SELECT CAST(COUNT(T2.name) AS REAL) * 100 / COUNT(T1.name) FROM person AS T1 LEFT JOIN male AS T2 ON T1.name = T2.name
student_loan,What is the school and gender of student34?,"male.name = 'student34' means student34's gender is male; if 'student34' can't be found in 'male.name', it means student34 is female; student34 is a name of student;","SELECT T1.school , IIF(T3.name IS NULL, 'female', 'male') AS gender FROM enrolled AS T1 INNER JOIN person AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T2.name = T3.name WHERE T2.name = 'student34'"
student_loan,List the longest duration of absense for a student enlisted in the fire department.,longest duration of absence refers to MAX(month); department refers to organ; organ = 'fire_department';,SELECT T1.month FROM longest_absense_from_school AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T2.organ = 'fire_department' ORDER BY T1.month DESC LIMIT 1
student_loan,"Among students with 1 month of absenses, how many of them are enlisted in the air force department?",1 month of absences refers to month = 1; department refers to organ; organ = 'air_force';,SELECT COUNT(T1.name) FROM longest_absense_from_school AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T1.month = 1 AND T2.organ = 'air_force'
student_loan,Provide the name of disabled male students that are unemployed.,disabled male students that are unemployed refers to unemployed.name = male.name = disabled.name;,SELECT T2.NAME FROM unemployed AS T1 INNER JOIN male AS T2 ON T1.name = T2.name INNER JOIN disabled AS T3 ON T3.name = T2.name
student_loan,How many male students are enrolled at OCC?,male students are mentioned in male.name; OCC refers to school = 'occ';,SELECT COUNT(T1.name) FROM enrolled AS T1 INNER JOIN male AS T2 ON T1.name = T2.name WHERE T1.school = 'occ'
student_loan,"Among the students enrolled in UCLA, what is the percentage of male students in the air force department?","UCLA refers to school = 'ucla'; percentage = MULTIPLY(DIVIDE(COUNT(male.name), COUNT(person.name)), 100); male students are mentioned in male.name; department refers to organ; organ = 'air_force';",SELECT CAST(COUNT(T4.name) AS REAL) * 100 / COUNT(T2.name) FROM enlist AS T1 INNER JOIN person AS T2 ON T1.name = T2.name INNER JOIN enrolled AS T3 ON T3.name = T2.name LEFT JOIN male AS T4 ON T2.name = T4.name WHERE T3.school = 'ucla' AND T1.organ = 'air_force'
student_loan,Calculate the average number of disabled female students enrolled in UCI.,"average = DIVIDE(SUM(disabled.name who are not in male.name WHERE school = 'uci'), COUNT(enrolled.name)); female students refers to disabled.name who are NOT in male.name; UCI refers to school = 'uci';","SELECT CAST(SUM(IIF(T1.school = 'uci' AND T4.name IS NULL, 1, 0)) AS REAL) / COUNT(T1.name) FROM enrolled AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name INNER JOIN person AS T3 ON T1.name = T3.name LEFT JOIN male AS T4 ON T3.name = T4.name"
student_loan,How many students have never been absent in school?,never been absent in school refers to month = 0;,SELECT COUNT(name) FROM longest_absense_from_school WHERE month = 0
student_loan,What are the names of the students who joined the Marines?,Marines refers to organ = 'marines';,SELECT name FROM enlist WHERE organ = 'marines'
student_loan,How many students enlisted in the Navy?,Navy refers to organ = 'navy';,SELECT COUNT(name) FROM enlist WHERE organ = 'navy'
student_loan,What is the name of the student with the longest duration of absence?,longest duration of absence refers to MAX(month);,SELECT name FROM longest_absense_from_school WHERE month = ( SELECT MAX(month) FROM longest_absense_from_school )
student_loan,What is the name of the organization which most of the students are enlisted in?,name of the organization refers to organ; organization which most of the students are enlisted in refers to MAX(COUNT(organ));,"SELECT organ FROM ( SELECT organ, COUNT(organ) AS num FROM enlist GROUP BY organ ) T ORDER BY T.num DESC LIMIT 1"
student_loan,How many students have absences of no more than 3 months?,absences of no more than 3 months refers to month < 3;,SELECT COUNT(name) FROM longest_absense_from_school WHERE month < 3
student_loan,"Among the students that have a payment due, how many students are unemployed?",students that have a payment due refers to bool = 'pos';,SELECT COUNT(T1.name) FROM no_payment_due AS T1 INNER JOIN unemployed AS T2 ON T1.name = T2.name WHERE T1.bool = 'pos'
student_loan,How many female students have enlisted for the Army?,female students refers to enlist.name who are NOT in male.name; Army refers to organ = 'army';,"SELECT SUM(IIF(T3.name IS NULL, 1, 0)) AS ""result"" FROM enlist AS T1 INNER JOIN person AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T2.name = T3.name WHERE T1.organ = 'army'"
student_loan,Which organization has the least number of male students?,organization refers to organ; male students are mentioned in male.name; least number of male students refers to MIN(male.name);,"SELECT T.organ FROM ( SELECT T2.organ, COUNT(T1.name) AS num FROM male AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name GROUP BY T2.organ ) T ORDER BY T.num LIMIT 1"
student_loan,How many disabled students have zero absences?,zero absences refers to month = 0;,SELECT COUNT(T1.name) FROM disabled AS T1 INNER JOIN longest_absense_from_school AS T2 ON T1.name = T2.name WHERE T2.month = 0
student_loan,How many of the unemployed students are disabled?,,SELECT COUNT(T1.name) FROM unemployed AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name
student_loan,List the names of the disabled students who were absent from school for more than 5 months.,absent for more than 5 months refers to month > 5;,SELECT T1.name FROM longest_absense_from_school AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.month > 5
student_loan,How many bankrupt students are there in the Marines?,Marines refers to organ = 'marines';,SELECT COUNT(T1.name) FROM filed_for_bankrupcy AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T2.organ = 'marines'
student_loan,"Among the students who filed for bankruptcy, how many students are disabled?",,SELECT COUNT(T1.name) FROM disabled AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name
student_loan,How many months did a student in the Air Force miss school the most?,Air Force refers to organ = 'air_force'; number of months a student miss school the most refers to MAX(COUNT(month));,SELECT T1.month FROM longest_absense_from_school AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name ORDER BY T1.month DESC LIMIT 1
student_loan,"Among the students who filed for bankruptcy with an absence in school of no more than 6 months, how many students enlisted for the fire department?",absence of no more than 6 months refers to month < 6; department refers to organ; organ = 'fire_department';,SELECT COUNT(T1.name) FROM longest_absense_from_school AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name INNER JOIN enlist AS T3 ON T3.name = T2.name WHERE T3.organ = 'fire_department'
student_loan,How many employed disabled students have zero absences?,employed students refers to disabled.name who are NOT in unemployed.name; zero absences refers to month = 0;,SELECT COUNT(T1.name) FROM longest_absense_from_school AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name INNER JOIN unemployed AS T3 ON T3.name = T2.name WHERE T1.month = 0
student_loan,Which organization has the highest number of male students? Calculate for the percentage of the male students in the said organization.,"organization refers to organ; highest number of male students refers to MAX(COUNT(male.name)); percentage = DIVIDE(COUNT(male.name), COUNT(person.name)), 1.0;","SELECT T.organ, T.per FROM ( SELECT T1.organ, CAST(COUNT(T3.name) AS REAL) / COUNT(T2.name) AS per , COUNT(T3.name) AS num FROM enlist AS T1 INNER JOIN person AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T2.name = T3.name GROUP BY T1.organ ) T ORDER BY T.num DESC LIMIT 1"
mental_health_survey,"How many users answered ""No"" to question 19?","Question 19 refer to QuestionID = 19; No refer to AnswerText = 'No'
",SELECT COUNT(QuestionID) FROM Answer WHERE QuestionID = 19 AND AnswerText LIKE 'No'
mental_health_survey,"From 2016 to 2019, how many users each year were asked the question 13?",From 2016 to 2019 refer to SurveyID 2016 BETWEEN 2019; Question 13 refer to QuestionID,"SELECT SurveyID, COUNT(UserID) FROM Answer WHERE QuestionID = 13 AND SurveyID BETWEEN 2016 AND 2019 GROUP BY SurveyID"
mental_health_survey,"How many users, between the age 27 to 35, were surveyed in 2018?","Age 27 to 35 refer to AnswerText 27 BETWEEN 35 where questionid = 1; 2018 refer to SurveyID

",SELECT T1.UserID FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T1.SurveyID = 2018 AND T2.questionid = 1 AND T1.AnswerText BETWEEN '27' AND '35'
mental_health_survey,"In 2019, how many users in the United States have a family history of mental illness?",2019 refer to SurveyID; Users in the United States refers to AnswerText = 'United States' where questionid = 3; have a family history of mental illness refers to AnswerText = 'Yes' where questionid = 6,SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN ( SELECT T2.questionid FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T1.SurveyID = 2019 AND T2.questionid = 6 AND T1.AnswerText LIKE 'Yes' ) AS T2 ON T1.QuestionID = T2.questionid WHERE T1.SurveyID = 2019 AND T2.questionid = 3 AND T1.AnswerText LIKE 'United States'
mental_health_survey,"Betweeen 2016 to 2019, which year recorded the highest number of people with mental illness?",Between 2016 to 2019 refer to SurveyID 2016 BETWEEN 2019; People with mental illness refers to AnswerText = 'Yes' where questionid = 34,SELECT T1.SurveyID FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T1.SurveyID BETWEEN 2016 AND 2019 AND T2.questionid = 34 AND T1.AnswerText LIKE 'Yes' GROUP BY T1.SurveyID ORDER BY COUNT(T1.UserID) DESC LIMIT 1
mental_health_survey,How many female users were surveyed in the mental health survey for 2017 in the state of Nebraska?,AnswerText = 'Yes' where questiontext = 'Do you have a family history of mental illness?'; AnswerText = 'Female' where questionid = 2; AnswerText = 'Nebraska' where questionid = 4,SELECT COUNT(*) FROM ( SELECT T2.UserID FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID INNER JOIN Survey AS T3 ON T2.SurveyID = T3.SurveyID WHERE T3.Description = 'mental health survey for 2017' AND T1.questionid = 2 AND T2.AnswerText = 'Female' UNION SELECT T2.UserID FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID INNER JOIN Survey AS T3 ON T2.SurveyID = T3.SurveyID WHERE T1.questionid = 4 AND T2.AnswerText = 'Nebraska' AND T3.Description = 'mental health survey for 2017' )
mental_health_survey,How many users believed that their productivity is ever affected by a mental health issue overall?,Users who believed that their productivity is affected by a mental health issues overall refers to AnswerText = 'Yes' where questionid = 54,SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 54 AND T1.AnswerText LIKE 'Yes'
mental_health_survey,What are the ages of the oldest and youngest user that were surveyed? Indicate their user id.,"Oldest user refer to MAX(AnswerText) where questionid = 1; Youngest user refer to MIN(AnswerText) where questionid = 1
","SELECT MAX(T1.AnswerText), MIN(T1.AnswerText) , ( SELECT T1.UserID FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 1 ORDER BY T1.AnswerText LIMIT 1 ) AS ""youngest id"" FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 1"
mental_health_survey,"Which country have the least number of users being surveyed? Indicate the name of the country. If there are multiple countries having the same number of users, indicate all of their names.",Country with least number of users being surveyed refers to MIN(COUNT(AnswerText)) where questionid = 3,SELECT T1.AnswerText FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 3 GROUP BY T1.AnswerText ORDER BY COUNT(T1.UserID) DESC LIMIT 1
mental_health_survey,What is the average age of the survey respondents in the United States?,Average age refer to AVG(AnswerText) where questionid = 1; respondents in the United States refers to AnswerText = 'United States' where questionid = 3,SELECT CAST(SUM(T1.AnswerText) AS REAL) / COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN ( SELECT T1.UserID FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 3 AND T1.AnswerText = 'United States' ) AS T2 ON T1.UserID = T2.UserID INNER JOIN Question AS T3 ON T1.QuestionID = T3.questionid WHERE T3.questionid = 1
mental_health_survey,What is the percentage of the the users who would bring up a mental health issue with a potential employer in an interview?,"Percentage = DIVIDE(SUM(AnswerText = 'Yes' Or AnswerText = 'Maybe'), COUNT(QuestionID = 12))* 100",SELECT CAST(SUM(CASE  WHEN T1.AnswerText LIKE 'Yes' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 12
mental_health_survey,How many questions in 2014's survey had more than 200 answers?,2014 refer to SurveyID; COUNT(QuestionID) where COUNT(AnswerText) > 200,SELECT COUNT(QuestionID) FROM Answer WHERE SurveyID LIKE 2014 GROUP BY QuestionID ORDER BY COUNT(QuestionID) > 200 LIMIT 1
mental_health_survey,What is the oldest age of the users in 2014's survey?,"what is your age? refer to QuestionText; 2014 refer to SurveyID; oldest age refers to MAX(AnswerText)

",SELECT T2.AnswerText FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T1.questiontext = 'What is your age?' AND T2.SurveyID = 2014 ORDER BY T2.AnswerText DESC LIMIT 1
mental_health_survey,"How many users answered ""No"" to the question ""Would you bring up a mental health issue with a potential employer in an interview?"" in 2014's survey?","2014 refer to SurveyID; Answered No refer to AnswerText = 'No'; Question refer to questiontext

",SELECT COUNT(T2.UserID) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T1.questiontext = 'Would you bring up a mental health issue with a potential employer in an interview?' AND T2.SurveyID = 2014 AND T2.AnswerText LIKE 'NO'
mental_health_survey,"Please list the IDs of the users who answered ""Yes"" to the question ""Do you think that discussing a physical health issue with your employer would have negative consequences?"" in 2014's survey.","2014 refer to SurveyID; Question refer to questiontext; yes refer to AnswerText = 'Yes'

",SELECT T2.UserID FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T1.questiontext = 'Do you think that discussing a physical health issue with your employer would have negative consequences?' AND T2.AnswerText LIKE 'Yes' AND T2.SurveyID = 2014
mental_health_survey,How many users participated in the mental health survey for 2014?,mental health survey for 2014 refers to SurveyID = 2014,SELECT COUNT(DISTINCT T1.UserID) FROM Answer AS T1 INNER JOIN Survey AS T2 ON T1.SurveyID = T2.SurveyID WHERE T2.Description = 'mental health survey for 2014'
mental_health_survey,"Please list all the answers to the question ""Any additional notes or comments"" that are not null in 2014's survey.","question refers to questiontext; the answers that are not null refers to AnswerText ! = -1
",SELECT T2.AnswerText FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T1.questiontext = 'Any additional notes or comments' AND T2.SurveyID = 2014 AND T2.AnswerText <> -1
mental_health_survey,Please list all the common questions in 2014's survey and 2016's survey.,"question refers to questiontext; all the common questions in 2014's survey and 2016's survey refers to QuestionID(SurveyID(2014)) = QuestionID(SurveyID(2016))
","SELECT T1.questiontext FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID IN (2014, 2016) GROUP BY T1.questiontext"
mental_health_survey,How many users lived in Canada according to 2018's survey?,lived in Canada refers to AnswerText(QuestionID(3)) = 'Canada',SELECT COUNT(T2.UserID) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID = 2018 AND T1.questiontext = 'What country do you live in?' AND T2.AnswerText = 'Canada'
mental_health_survey,Please list all the questions in the mental health survey for 2014.,mental health survey for 2014 refers to SurveyID = 2014,SELECT T2.questiontext FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid INNER JOIN Survey AS T3 ON T1.SurveyID = T3.SurveyID WHERE T3.Description LIKE 'mental health survey for 2014' GROUP BY T2.questiontext
mental_health_survey,"According to 2016's survey, what is the number of users with a mental health disorder in the past?",users with a mental health disorder in the past refers to AnswerText(QuestionID(32)) = 'Yes',SELECT COUNT(T2.UserID) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID = 2016 AND T1.questiontext LIKE 'Have you had a mental health disorder in the past?' AND T2.AnswerText = 'Yes'
mental_health_survey,"How many users answered ""Yes"" to the question ""Have you had a mental health disorder in the past?"" in 3 consecutive years starting from 2016?",question refers to questiontext; answered 'Yes' to question refers to AnswerText = 'Yes'; 3 consecutive years starting from 2016 refers to SurveyID = 2016 and SurveyID = 2017 and SurveyID = 2018,"SELECT COUNT(T2.UserID) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID IN (2016, 2017, 2018) AND T1.questiontext LIKE 'Have you had a mental health disorder in the past?' AND T2.AnswerText = 'Yes'"
mental_health_survey,"What is the average result of the question ""What is your age?"" in 2014's survey?",average result refers to avg(AnswerText(SurveyID = 2014& QuestionID = 1)),"SELECT CAST(SUM(T2.AnswerText) AS REAL) / COUNT(T2.UserID) AS ""avg"" FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID = 2014 AND T1.questiontext LIKE 'What is your age?'"
mental_health_survey,What is the rate of increase of users with a current mental disorder from 2019's survey to 2016's survey?,"rate of increase = subtract(divide(count(SurveyID = 2019& QuestionID = 33& AnswerText = 'Yes'), count(SurveyID = 2019& QuestionID = 33)), divide(count(SurveyID = 2016& QuestionID = 33& AnswerText = 'Yes'), count(SurveyID = 2016& QuestionID = 33)))",SELECT CAST(( SELECT COUNT(T2.UserID) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID = 2019 AND T1.questiontext LIKE 'Do you currently have a mental health disorder?' AND T2.AnswerText = 'Yes' ) - ( SELECT COUNT(T2.UserID) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID = 2016 AND T1.questiontext LIKE 'Do you currently have a mental health disorder?' AND T2.AnswerText = 'Yes' ) AS REAL) * 100 / ( SELECT COUNT(T2.UserID) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID = 2016 AND T1.questiontext LIKE 'Do you currently have a mental health disorder?' AND T2.AnswerText = 'Yes' )
mental_health_survey,"Tell the question ID for ""Would you bring up a physical health issue with a potential employer in an interview?"".",,SELECT questionid FROM Question WHERE questiontext LIKE 'Would you bring up a physical health issue with a potential employer in an interview?'
mental_health_survey,How many users answered the question No.20?,question No.20 refers to QuestionID = 20,SELECT MAX(UserID) - MIN(UserID) + 1 FROM Answer WHERE QuestionID = 20
mental_health_survey,How many questions did user No.5 answer?,user No.5 refers to userID = 5,SELECT COUNT(QuestionID) FROM Answer WHERE UserID = 5
mental_health_survey,How many users participated in the Survey No.2016?,Survey No.2016 refers to SurveyID = 2016,SELECT COUNT(DISTINCT UserID) FROM Answer WHERE SurveyID LIKE 2016
mental_health_survey,"State the number of questions that were asked in the ""mental health survey for 2018"".",mental health survey for 2018 refers to SurveyID = 2018,SELECT COUNT(T1.QuestionID) FROM Answer AS T1 INNER JOIN Survey AS T2 ON T1.SurveyID = T2.SurveyID WHERE T2.Description = 'mental health survey for 2018'
mental_health_survey,Tell the number of surveys that contained the question “What country do you work in?”.,question refers to questiontext,SELECT COUNT(DISTINCT T1.QuestionID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid INNER JOIN Survey AS T3 ON T1.SurveyID = T3.SurveyID WHERE T2.questiontext = 'What country do you work in?'
mental_health_survey,"What answer did user No. 2681 give to the question ""Do you currently have a mental health disorder?""?","question refers to questiontext; user No. 2681 refers to UserID = 2681

",SELECT T1.AnswerText FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questiontext = 'Do you currently have a mental health disorder?' AND T1.UserID = 2681
mental_health_survey,"Provide the number of users who took part in the ""mental health survey for 2016"".",mental health survey for 2016 refers to SurveyID = 2016,SELECT COUNT(DISTINCT T1.UserID) FROM Answer AS T1 INNER JOIN Survey AS T2 ON T1.SurveyID = T2.SurveyID WHERE T2.Description = 'mental health survey for 2016'
mental_health_survey,"What was the most common answer for the question ""What country do you work in?""?",most common answer refers to AnswerText where MAX(COUNT(AnswerText(QuestionID = 3))),SELECT T1.AnswerText FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questiontext = 'What country do you work in?' GROUP BY T1.AnswerText ORDER BY COUNT(T1.AnswerText) DESC LIMIT 1
mental_health_survey,"How many different answers did the question ""Describe the conversation you had with your previous employer about your mental health, including their reactions and actions taken to address your mental health issue/questions."" get?",,"SELECT COUNT(DISTINCT T1.AnswerText) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questiontext LIKE 'Describe the conversation you had with your previous employer about your mental health, including their reactions and actions taken to address your mental health issue/questions.'"
mental_health_survey,"For the question “What US state or territory do you work in?”, how many people gave ""Kansas"" as the answer?",question refers to questiontext; AnswerText = 'Kansas',SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questiontext LIKE 'What US state or territory do you work in?' AND T1.AnswerText = 'Kansas'
mental_health_survey,"How many people wrote comments for the question ""Any additional notes or comments.""?",question refers to questiontext; wrote comments refers to AnswerText(QuestionID = 103) ! = -1,SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questiontext LIKE 'Any additional notes or comments' AND T1.AnswerText IS NOT NULL
mental_health_survey,"For all the users who have been asked ""Have you ever been diagnosed with a mental health disorder?"", how many of them said ""Yes""?",have asked refers to questiontext; said 'Yes' refers to AnswerText = 'Yes',SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questiontext LIKE 'Have you ever been diagnosed with a mental health disorder?' AND T1.AnswerText = 'Yes'
mental_health_survey,"Give the number of users who took the ""mental health survey for 2018"".",mental health survey for 2018 refers to SurveyID = 2018,SELECT COUNT(DISTINCT T1.UserID) FROM Answer AS T1 INNER JOIN Survey AS T2 ON T1.SurveyID = T2.SurveyID WHERE T2.Description = 'mental health survey for 2018'
mental_health_survey,"How many users answered the question ""Overall, how much importance does your employer place on physical health?""?",question refers to questiontext,"SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questiontext LIKE 'Overall, how much importance does your employer place on physical health?'"
mental_health_survey,"For which question did the user No.2183 gave the answer ""Mood Disorder (Depression, Bipolar Disorder, etc)""?",question refers to questiontext; user No.2183 refers to userID = 2183,"SELECT T1.AnswerText FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 2183 AND T1.AnswerText = 'Mood Disorder (Depression, Bipolar Disorder, etc)'"
mental_health_survey,"What was the percentage for the answer of ""Yes"" was given to the question ""Has your employer ever formally discussed mental health (for example, as part of a wellness campaign or other official communication)?""?","percentage = divide(count(QuestionID = 15& AnswerText = 'Yes'), count(QuestionID = 15))*100%","SELECT CAST(SUM(CASE  WHEN T1.AnswerText LIKE 'Yes' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questiontext LIKE 'Has your employer ever formally discussed mental health (for example, as part of a wellness campaign or other official communication)?'"
mental_health_survey,"How many times more for the number of users who took the ""mental health survey for 2017"" than ""mental health survey for 2018""?","How many times more = subtract(count(UserID(SurveyID = 2017)), count(UserID(SurveyID = 2018)))",SELECT CAST(COUNT(T1.UserID) AS REAL) / ( SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Survey AS T2 ON T1.SurveyID = T2.SurveyID WHERE T2.Description = 'mental health survey for 2018' ) FROM Answer AS T1 INNER JOIN Survey AS T2 ON T1.SurveyID = T2.SurveyID WHERE T2.Description = 'mental health survey for 2017'
mental_health_survey,"Among respondents who participated in the survey in 2016, what percentage had a mental health disorder in the past?","respondents and 'users' are synonyms; percentage = divide(count(SurveyID = 2016& QuestionID = 32 & AnswerText = 'Yes'), count(SurveyID = 2016& QuestionID = 32))*100%",SELECT CAST(SUM(CASE  WHEN T1.AnswerText LIKE 'Yes' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.SurveyID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T1.QuestionID = 32 AND T1.SurveyID = 2016
mental_health_survey,How many respondents younger than 25 years old did participate in the survey in 2016?,respondents' and 'users' are synonyms; younger than 25 years old refers to AnswerText(SurveyID = 2016& QuestionID = 1)< 25,SELECT COUNT(DISTINCT T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T1.QuestionID = 1 AND T1.SurveyID = 2016 AND T1.AnswerText <= 25
mental_health_survey,What is the average number of respondents per survey between 2014 and 2019?,"respondents and 'users' are synonyms; average number = avg(count(userID(SurveyID = 2014)), count(userID(SurveyID = 2019)))",SELECT CAST(COUNT(SurveyID) AS REAL) / 5 FROM Answer WHERE SurveyID BETWEEN 2014 AND 2019
mental_health_survey,How many respondents who participated in the survey in 2019 have ever sought treatment for a mental health disorder from a mental health professional?,"respondents' and 'users' are synonyms, have ever sought treatment for a mental health disorder from a mental health professional refers to AnswerText(SurveyID = 2019& QuestionID = 7) = 1",SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T1.QuestionID = 7 AND T1.SurveyID = 2019 AND T1.AnswerText = 1
mental_health_survey,How many respondents who participated in the survey in 2014 work remotely at least 50% of the time?,respondents' and 'users' are synonyms; work remotely at least 50% of the time refers to AnswerText(SurveyID = 2014& QuestionID = 93) = 'Yes',SELECT COUNT(T1.AnswerText) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T1.QuestionID = 93 AND T1.SurveyID = 2014 AND T1.AnswerText = 'Yes'
mental_health_survey,How many questions were asked in the questionary for the mental health survey?,,SELECT COUNT(questiontext) FROM Question
mental_health_survey,How many respondents of the mental health survey were diagnosed with 'Substance Use Disorder'?,respondents' and 'users' are synonyms,SELECT COUNT(AnswerText) FROM Answer WHERE AnswerText LIKE 'Substance Use Disorder'
mental_health_survey,List the top three popular responses to the question of the survey in 2017 with the question ID no.85.,"

survey in 2017 refers to SurveyID = 2017; questionID = 85; MAX(COUNT(AnswerText))",SELECT AnswerText FROM Answer WHERE QuestionID = 85 AND SurveyID = 2017 GROUP BY AnswerText ORDER BY COUNT(AnswerText) DESC LIMIT 3
disney,How much more total box office gross did the Walt Disney Company have in revenue in 1998 than in 1997?,"SUBTRACT(SUM(Year = 1998), SUM(Year = 1997))",SELECT SUM(CASE WHEN `Year` = 1998 THEN Total ELSE 0 END) - SUM(CASE WHEN `Year` = 1997 THEN Total ELSE 0 END) FROM revenue
disney,"In which segment did the Walt Disney Company earned a bigger revenue in 1998, Studio Entertainment or Disney Media Networks?",Studio Entertainment[NI 1]' > 'Disney Media Networks' where Year = 1998;,SELECT CASE WHEN 'Studio Entertainment[NI 1]' > 'Disney Media Networks' THEN 'Studio Entertainment[NI 1]' ELSE 'Disney Media Networks' END FROM revenue WHERE `Year` = 1998
disney,Who is the director of the movie Pinocchio?,Pinocchio is the name of the movie;,SELECT director FROM director WHERE name = 'Pinocchio'
disney,Please list the villains of all the movies directed by Wolfgang Reitherman.,Wolfgang Reitherman refers to director = 'Wolfgang Reitherman';,SELECT T2.villian FROM director AS T1 INNER JOIN characters AS T2 ON T1.name = T2.movie_title WHERE T1.director = 'Wolfgang Reitherman' AND T2.villian IS NOT NULL
disney,"Among the movies directed by Wolfgang Reitherman, how many of them were released in December?","Wolfgang Reitherman refers to director = 'Wolfgang Reitherman'; released in December refers to (release_date, instr(release_date, '-') + 1, 3) = 'Dec';","SELECT COUNT(movie_title) FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE SUBSTR(release_date, INSTR(release_date, '-') + 1, 3) = 'Dec' AND T2.director = 'Wolfgang Reitherman'"
disney,"The song ""Once Upon a Dream"" is associated with the movie directed by whom?",directed by whom refers to director; movie refers to movie_title;,SELECT T2.director FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T1.song = 'Once Upon a Dream'
disney,"Who is the voice actor for the villain of the movie ""Alice in Wonderland""?",Alice in Wonderland refers to movie_title = 'Alice in Wonderland'; villain refers to character like '%'||T1.villian||'%';,SELECT T1.`voice-actor` FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T1.movie = T2.movie_title WHERE T1.character LIKE '%' OR T2.villian OR '%' AND T2.movie_title = 'Alice in Wonderland'
disney,Please list the release dates of all the movies in which Alan Tudyk is a voice actor.,FALSE;,SELECT T2.release_date FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T1.movie = T2.movie_title WHERE T1.`voice-actor` = 'Alan Tudyk'
disney,"Among the movies in which Alan Tudyk is a voice actor, how many of them were released after 2012?","released after 2012 refers to (release_date, instr(release_date, '-') + 5) > 12;","SELECT COUNT(T2.movie) FROM characters AS T1 INNER JOIN `voice-actors` AS T2 ON T1.movie_title = T2.movie WHERE T2.`voice-actor` = 'Alan Tudyk' AND SUBSTR(release_date, INSTR(release_date, '-') + 5) > 12"
disney,"Among the movies directed by Wolfgang Reitherman, how many of them are Comedies?",directed by Wolfgang Reitherman refers to director = 'Wolfgang Reitherman'; comedies refers to genre = 'Comedy'; movies refer to movie_title;,SELECT COUNT(T3.name) FROM ( SELECT T2.name FROM `movies_total_gross` AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Wolfgang Reitherman' AND T1.genre = 'Comedy' GROUP BY T2.name ) T3
disney,"Among the movies directed by Wolfgang Reitherman, which one of them was the most popular?",directed by Wolfgang Reitherman refers to director = 'Wolfgang Reitherman'; the most popular movie refers to MAX(total_gross);,SELECT T2.movie_title FROM director AS T1 INNER JOIN movies_total_gross AS T2 ON T1.name = T2.movie_title WHERE T1.director = 'Wolfgang Reitherman' ORDER BY T2.total_gross DESC LIMIT 1
disney,Please list the movies directed by Wolfgang Reitherman that can be watched by the general audience.,directed by Wolfgang Reitherman refers to director = 'Wolfgang Reitherman'; movies refer to movie_title; general audience refers to MPAA_rating = 'G';,SELECT T1.movie_title FROM `movies_total_gross` AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T1.MPAA_rating = 'G' AND T2.director = 'Wolfgang Reitherman'
disney,Which character is the villain of the most popular movie?,the most popular movie refers to movie_title where MAX(total_gross);,SELECT T2.villian FROM `movies_total_gross` AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title ORDER BY T1.total_gross DESC LIMIT 1
disney,What is the genre of the movie whose villain is Commander Rourke?,FALSE;,SELECT T2.genre FROM characters AS T1 INNER JOIN movies_total_gross AS T2 ON T2.movie_title = T1.movie_title WHERE T1.villian = 'Commander Rourke'
disney,"Who is the villain of the movie ""Beauty and the Beast""?",Beauty and the Beast refers to movie_title = 'Beauty and the Beast';,SELECT villian FROM characters WHERE movie_title = 'Beauty and the Beast'
disney,Which movie is the character Robin Hood in?,Robin Hood is the main character of the movie which refers to hero = 'Robin Hood'; movie refers to movie_title;,SELECT movie_title FROM characters WHERE hero = 'Robin Hood'
disney,"Give the name of the movie which the song ""I Thought I Lost You"" is associated with.",name of the movie refers to movie_title;,SELECT movie_title FROM characters WHERE song = 'I Thought I Lost You'
disney,"Who is the voice actor of the character ""Binkie Muddlefoot""?",FALSE;,SELECT `voice-actor` FROM `voice-actors` WHERE character = 'Binkie Muddlefoot'
disney,"Who is the hero character of the movie whose total gross was $222,527,828?",FALSE;,"SELECT T1.hero FROM characters AS T1 INNER JOIN movies_total_gross AS T2 ON T2.movie_title = T1.movie_title WHERE T2.total_gross = '$222,527,828'"
disney,Which song is associated with the most popular Disney movie in 1970s?,"the most popular movie refers to movie_title where MAX(total_gross); in 1970s refers to (cast(SUBSTR(release_date, instr(release_date, ', ') + 1) as int) between 1970 and 1979);","SELECT T2.song FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title WHERE CAST(SUBSTR(T1.release_date, INSTR(T1.release_date, ', ') + 1) AS int) BETWEEN 1970 AND 1979 ORDER BY CAST(REPLACE(SUBSTR(T1.total_gross, 2), ',', '') AS float) DESC LIMIT 1"
disney,Who is the hero character of the Disney movie directed by Will Finn?,Will Finn refers to director = 'Will Finn';,SELECT T1.hero FROM characters AS T1 INNER JOIN director AS T2 ON T2.name = T1.movie_title WHERE T2.director = 'Will Finn'
disney,Who is the voice actor of the hero character from the movie The Little Mermaid?,The Little Mermaid refers to movie_title = 'The Little Mermaid';,SELECT T2.`voice-actor` FROM characters AS T1 INNER JOIN `voice-actors` AS T2 ON T2.movie = T1.movie_title WHERE T1.movie_title = 'The Little Mermaid' AND T2.character = T1.hero
disney,"Give the name of the director of the movie in which Verna Felton was the voice actor for its character ""Aunt Sarah"".",FALSE;,SELECT T1.director FROM director AS T1 INNER JOIN `voice-actors` AS T2 ON T2.movie = T1.name WHERE T2.character = 'Aunt Sarah' AND T2.`voice-actor` = 'Verna Felton'
disney,"For the movie in which Tress MacNeille was the voice actor for its character ""Hyacinth Hippo"", what was the release date of that movie?",FALSE;,SELECT T1.release_date FROM characters AS T1 INNER JOIN `voice-actors` AS T2 ON T2.movie = T1.movie_title WHERE T2.character = 'Hyacinth Hippo' AND T2.`voice-actor` = 'Tress MacNeille'
disney,Who is the director of the adventure movie which was released on 2007/3/30?,"released on 2007/3/30 refers to release_date = 'Mar 30, 2007'; adventure movie refers to genre = 'Adventure' ;","SELECT T1.director FROM director AS T1 INNER JOIN movies_total_gross AS T2 ON T2.movie_title = T1.name WHERE T2.genre = 'Adventure' AND T2.release_date = 'Mar 30, 2007'"
disney,"Wolfgang Reitherman has directed several Disney movies, which one has the highest grossing after accounting for inflation?",Wolfgang Reitherman refers to director = 'Wolfgang Reitherman'; the highest grossing after accounting for inflation refers to MAX(inflation_adjusted_gross);,"SELECT T1.movie_title FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Wolfgang Reitherman' ORDER BY CAST(REPLACE(SUBSTR(inflation_adjusted_gross, 2), ',', '') AS REAL) DESC LIMIT 1"
disney,Who is the hero character of the adventure movie which was released on 2016/3/4?,released on 2016/3/4 refers to release_date = '4-Mar-16'; adventure movie refers to genre = 'Adventure' ;,SELECT T1.hero FROM characters AS T1 INNER JOIN movies_total_gross AS T2 ON T2.movie_title = T1.movie_title WHERE T2.genre = 'Adventure' AND T1.release_date = '4-Mar-16'
disney,"The character Donald Duck has appeared in two Disney movies, which one has more grossing?",Donald Duck is the main character of the movie which refers to hero = 'Donald Duck'; which one has more grossing refers to movie_title where MAX(total_gross);,"SELECT T1.movie_title FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title WHERE T2.hero = 'Donald Duck' ORDER BY CAST(REPLACE(SUBSTR(total_gross, 2), ',', '') AS REAL) DESC LIMIT 1"
disney,How many movies did Wolfgang Reitherman direct?,Wolfgang Reitherman refers director = 'Wolfgang Reitherman';,SELECT COUNT(name) FROM director WHERE director = 'Wolfgang Reitherman'
disney,Who is the most productive director?,Most productive director refers to director where MAX(COUNT(name));,SELECT director FROM director GROUP BY director ORDER BY COUNT(name) DESC LIMIT 1
disney,How many restricted horror movies were released between 1/1/1990 to 12/31/2015?,"Restricted refers to MPAA_rating = 'R'; horror refers to genre = 'Horror'; released between 1/1/1990 to 12/31/2015 refers to (cast(SUBSTR(release_date, instr(release_date, ', ') + 1) as int) between 1990 and 2015);","SELECT COUNT(movie_title) FROM movies_total_gross WHERE MPAA_rating = 'R' AND genre = 'Horror' AND CAST(SUBSTR(release_date, INSTR(release_date, ', ') + 1) AS int) BETWEEN 1990 AND 2015"
disney,What are the names of the characters voiced by Frank Welker?,Frank Welker refers to voice-actor = 'Frank Welker';,SELECT character FROM `voice-actors` WHERE 'voice-actor' = 'Frank Welker'
disney,"How much is the total gross of the movie with a song titled ""Little Wonders""?",song = 'Little Wonders',SELECT T1.total_gross FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T2.movie_title = T1.movie_title WHERE T2.song = 'Little Wonders'
disney,What is the Motion Picture Association of America rating for the movie featuring a villain named Turbo?,The Motion Picture Association of America rating refers to MPAA_rating; villian = 'Turbo';,SELECT T1.MPAA_rating FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T2.movie_title = T1.movie_title WHERE T2.villian = 'Turbo'
disney,How many movies for mature audiences or parental guidance suggested did Bill Thompson work as a voice actor?,movies for mature audiences or parental guidance refer to movie_title where MPAA_rating = 'PG';,SELECT COUNT(T.movie) FROM ( SELECT T1.movie FROM `voice-actors` AS T1 INNER JOIN movies_total_gross AS T2 ON T1.movie = T2.movie_title WHERE MPAA_rating = 'PG' AND `voice-actor` = 'Bill Thompson' GROUP BY T1.movie ) AS T
disney,How many of Gary Trousdale's movies are adventure movies?,Gary Trousdale refers director = 'Gary Trousdale'; the adventure movie refers to genre = 'Adventure';,SELECT COUNT(T.name) FROM ( SELECT T1.name FROM director AS T1 INNER JOIN movies_total_gross AS T2 ON T1.name = T2.movie_title WHERE T1.director = 'Gary Trousdale' AND T2.genre = 'Adventure' GROUP BY T1.name ) T
disney,Which director did Bill Thompson work the most with?,Bill Thompson refers to voice-actor = 'Bill Thompson'; worked the most refers to MAX(COUNT(name));,SELECT director FROM director AS T1 INNER JOIN `voice-actors` AS T2 ON T1.name = T2.movie WHERE T2.`voice-actor` = 'Bill Thompson' GROUP BY director ORDER BY COUNT(director) DESC LIMIT 1
disney,What is the most popular movie directed by Ron Clements?,Ron Clements refers to director = 'Ron Clements'; the most popular movie refers to movie_title where MAX(total_gross);,"SELECT T2.name FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T2.name = T1.movie_title WHERE T2.director = 'Ron Clements' ORDER BY CAST(REPLACE(SUBSTR(total_gross, 2), ',', '') AS int) DESC LIMIT 1"
disney,"List all the voice actors in the movie directed by Ben Sharpsteen which was released on February 9, 1940.","Ben Sharpsteen refers to director = 'Ben Sharpsteen'; released on February 9, 1940 refers to release_date = 'Feb 9, 1940';","SELECT T2.`voice-actor` FROM director AS T1 INNER JOIN `voice-actors` AS T2 INNER JOIN movies_total_gross AS T3 ON T1.name = T2.movie AND T2.movie = T3.movie_title WHERE T1.director = 'Ben Sharpsteen' AND T3.release_date = 'Feb 9, 1940' AND T2.`voice-actor` != 'None' GROUP BY T2.`voice-actor`"
disney,How many PG adventure movies did Ron Clements direct?,Ron Clements refers to director = 'Ron Clements'; PG is an abbreviation for parental guidance and refers to MPAA_rating = 'PG'; adventure movie refers to genre = 'Adventure';,SELECT COUNT(*) FROM director AS T1 INNER JOIN movies_total_gross AS T2 ON T1.name = T2.movie_title WHERE T1.director = 'Ron Clements' AND T2.MPAA_rating = 'PG' AND T2.genre = 'Adventure'
disney,How many horror movies are there?,Horror refers to genre = 'Horror';,SELECT COUNT(movie_title) FROM `movies_total_gross` WHERE genre = 'Horror'
disney,"Who is the villain in the movie ""The Great Mouse Detective""?",The Great Mouse Detective refers to movie_title = 'The Great Mouse Detective';,SELECT villian FROM characters WHERE movie_title = 'The Great Mouse Detective'
disney,"List the voice actors from the movie ""Meet the Robinsons"".",Meet the Robinsons refers to movie_title = 'Meet the Robinsons';,SELECT 'voice-actor' FROM `voice-actors` WHERE movie = 'Meet the Robinsons'
disney,Which director has made the most movies?,the most movies refers to MAX(COUNT(name));,"SELECT director, COUNT(name) FROM director GROUP BY director ORDER BY COUNT(name) DESC LIMIT 1"
disney,"From 2000 to 2010, in which year did the studio entertainment segment make the most revenue?","From 2000 to 2010 refers to Year between 2000 and 2010; the most revenue refers to MAX(""Studio Entertainment[NI 1]"");",SELECT `Year` FROM revenue WHERE `Year` BETWEEN 2000 AND 2010 ORDER BY `Studio Entertainment[NI 1]` DESC LIMIT 1
disney,List all the songs associated with drama movies.,drama refers to genre = 'Drama';,SELECT song FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title WHERE T1.genre = 'Drama' GROUP BY song
disney,Who are the voice actors for all the heroes?,FALSE;,SELECT T2.`voice-actor` FROM characters AS T1 INNER JOIN `voice-actors` AS T2 ON T2.character = T1.hero WHERE T2.movie = T1.movie_title
disney,Provide a list of directors from the 1990s.,"the 1990s refers to (cast(SUBSTR(release_date, instr(release_date, ', ') + 1) as int) between 1990 and 2000);","SELECT T2.director FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name AND CAST(SUBSTR(release_date, INSTR(release_date, ', ') + 1) AS int) BETWEEN 1990 AND 2000 GROUP BY T2.director"
disney,"Who voiced the villain in ""The Rescuers""?",The Rescuers refers to movie_title = 'The Rescuers'; who voiced refers to voice-actor;,SELECT T1.`voice-actor` FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T2.movie_title = T1.movie WHERE T2.movie_title = 'The Rescuers' AND T1.character = T2.villian
disney,List all of Wolfgang Reitherman's movies and their voice actors.,Wolfgang Reitherman refers to director = 'Wolfgang Reitherman';,"SELECT T1.name, T2.`voice-actor` FROM director AS T1 INNER JOIN `voice-actors` AS T2 ON T1.name = T2.movie WHERE T1.director = 'Wolfgang Reitherman'"
disney,What are the characters in the PG movies?,PG is an abbreviation for parental guidance and refers to MPAA_rating = 'PG';,SELECT DISTINCT T2.character FROM movies_total_gross AS T1 INNER JOIN `voice-actors` AS T2 ON T1.movie_title = T2.movie WHERE T1.MPAA_rating = 'PG'
disney,What is the highest grossing movie without a song?,the highest grossing movie without song refers to movie_title where MAX(total_gross) and song = 'null';,"SELECT T1.movie_title FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T2.movie_title = T1.movie_title WHERE T2.song IS NULL ORDER BY CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1"
disney,Who directed the movie with the most voice actors?,who directed refers director;,"SELECT T2.director, COUNT(DISTINCT T1.`voice-actor`) FROM `voice-actors` AS T1 INNER JOIN director AS T2 ON T1.movie = T2.name GROUP BY T2.director ORDER BY COUNT(DISTINCT T1.`voice-actor`) DESC LIMIT 1"
disney,Who are the voice actors in the movie that came out on 11/24/2010?,"Came out on 11/24/2010 refers to release_date = 'Nov 24, 2010';","SELECT T2.`voice-actor` FROM movies_total_gross AS T1 INNER JOIN `voice-actors` AS T2 ON T1.movie_title = T2.movie WHERE T1.release_date = 'Nov 24, 2010'"
disney,List the directors of movies that feature a song.,movies that feature a song refer to movie_title where song is not NULL;,SELECT T2.director FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T1.song IS NOT NULL GROUP BY T2.director
disney,What are the total grosses for the movies with Jim Cummings as the voice actor?,FALSE;,"SELECT T2.movie_title FROM `voice-actors` AS T1 INNER JOIN movies_total_gross AS T2 ON T2.movie_title = T1.movie WHERE T1.`voice-actor` = 'Jim Cummings' ORDER BY CAST(REPLACE(trim(T2.total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1"
disney,Which of the movies directed by Ron Clements has the highest total gross?,Ron Clements refer to director = 'Ron Clements'; the highest total gross refers to MAX(total_gross);,"SELECT T2.movie_title FROM director AS T1 INNER JOIN movies_total_gross AS T2 ON T1.name = T2.movie_title WHERE T1.director = 'Ron Clements' ORDER BY CAST(REPLACE(trim(T2.total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1"
disney,What is the average total gross for the movies featuring Sterling Holloway?,DIVIDE(SUM(total_gross where voice-actor = 'Sterling Holloway'); COUNT(movie_title where voice-actor = 'Sterling Holloway'));,"SELECT SUM(CAST(REPLACE(trim(T2.total_gross, '$'), ',', '') AS REAL)) / COUNT(T2.movie_title) FROM `voice-actors` AS T1 INNER JOIN movies_total_gross AS T2 ON T1.movie = T2.movie_title WHERE T1.`voice-actor` = 'Sterling Holloway'"
disney,What proportion of the total gross of all movies is from movies with songs?,"Movies with songs refer song = 'not null'; DIVIDE(SUM(total_gross where song = 'not null'), sum(total_gross)) as percentage;",SELECT CAST(COUNT(CASE WHEN T1.song IS NOT NULL THEN T2.movie_title ELSE NULL END) AS REAL) * 100 / COUNT(T2.movie_title) FROM characters AS T1 INNER JOIN movies_total_gross AS T2 ON T1.movie_title = T2.movie_title
disney,List the movies and genres released in 2016.,"released in 2016 refers to substr(release_date, length(release_date) - 3, length(release_date)) = '2016'; movies refer to the movie_title;","SELECT movie_title, genre FROM movies_total_gross WHERE SUBSTR(release_date, LENGTH(release_date) - 3, LENGTH(release_date)) = '2016'"
disney,Who is the villain in Little Mermaid?,Little Mermaid refers to movie_title = 'Little Mermaid';,SELECT villian FROM characters WHERE movie_title = 'Little Mermaid'
disney,List the movie titles directed by Jack Kinney.,Jack Kinney refers to director = 'Jack Kinney';,SELECT name FROM director WHERE director = 'Jack Kinney'
disney,Provide the movie titles and the estimated inflation rate of the highest total grossed movie.,"The highest grossed movie refers to MAX(total_gross); DIVIDE(inflation_adjusted_gross, total_gross) as percentage;","SELECT movie_title, CAST(REPLACE(trim(inflation_adjusted_gross, '$'), ',', '') AS REAL) / CAST(REPLACE(trim(total_gross, '$'), ',', '') AS REAL) FROM movies_total_gross ORDER BY CAST(REPLACE(trim(total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1"
disney,List the PG-13 romantic comedy movie titles and their release dates.,PG-13 refers to MPAA_rating = 'PG-13'; romantic comedy refers to genre = 'Romantic Comedy';,"SELECT movie_title, release_date FROM movies_total_gross WHERE MPAA_rating = 'PG-13' AND genre = 'Romantic Comedy'"
disney,List the movie titles and character names by Bill Thompson.,Bill Thompson refers to voice-actor = 'Bill Thompson';,"SELECT movie, character FROM `voice-actors` WHERE 'voice-actor' = 'Bill Thompson'"
disney,List the movie titles and associated songs directed by Ron Clements.,Ron Clements refers director = 'Ron Clements';,"SELECT T1.movie_title, T1.song FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Ron Clements'"
disney,"Provide the titles, main characters, and associated songs of the movies directed by Wolfgang Reitherman in 1977.","Wolfgang Reitherman refers to director = 'Wolfgang Reitherman'; 1997 refers to substr(release_date, length(release_date) - 3, length(release_date)) = '1977'; the titles refer to movie_title; main characters refer to hero;","SELECT T1.movie_title, T2.hero, T2.song FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title INNER JOIN director AS T3 ON T1.movie_title = T3.name WHERE T3.director = 'Wolfgang Reitherman' AND SUBSTR(T1.release_date, LENGTH(T1.release_date) - 3, LENGTH(T1.release_date)) = '1977'"
disney,Which movies had the main character named Donald Duck and who directed them?,Donald Duck is the main character of the movie which refers to hero = 'Donald Duck'; movies refer to movie_title; who directed refers director;,"SELECT T1.movie_title, T2.director FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T1.hero = 'Donald Duck'"
disney,"Describe the hero, director, and the release date of Mulan.",Mulan refers to movie_title = 'Mulan';,"SELECT T1.hero, T2.director, T1.release_date FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T1.movie_title = 'Mulan'"
disney,"Provide the title, total gross, and MPAA rating of the movie which has a hero named Elsa.",Elsa is the main character of the movie which refers to hero = 'Elsa'; title refers to movie_title;,"SELECT T1.movie_title, T1.total_gross, T1.MPAA_rating FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title INNER JOIN director AS T3 ON T3.name = T1.movie_title WHERE T2.hero = 'Elsa'"
disney,"Provide the title, director, and release date of the movie voice-acted by Freddie Jones.",Freddie Jones refers to voice-actor = 'Freddie Jones'; title refers to movie_title;,"SELECT T1.movie, T3.director, T2.release_date FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T1.movie = T2.movie_title INNER JOIN director AS T3 ON T3.name = T2.movie_title WHERE T1.`voice-actor` = 'Freddie Jones'"
disney,"Among Frank Welker's voice-acted movies, list the movie titles and the total gross when the estimated inflation rate was less than 2.","Frank Welker refers to voice-actor = 'Frank Welker'; estimated inflation rate was less than 2 can be computed as follows DIVIDE(inflation_adjusted_gross, total_gross) as percentage < 2;","SELECT T1.movie_title, T1.total_gross FROM movies_total_gross AS T1 INNER JOIN `voice-actors` AS T2 ON T1.movie_title = T2.movie WHERE T2.`voice-actor` = 'Frank Welker' AND CAST(REPLACE(trim(T1.inflation_adjusted_gross, '$'), ',', '') AS REAL) * 1.0 / CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS REAL) * 1.0 < 2"
disney,Who directed the most popular movie?,The most popular movie refers MAX(total_gross); who directed refers to director;,"SELECT T2.director FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name ORDER BY CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1"
disney,Describe the voice actors and villains in Cinderella.,Cinderella refers to movie_title = ' Cinderella';,"SELECT T1.`voice-actor`, T2.villian FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T1.movie = T2.movie_title WHERE T2.movie_title = 'Cinderella'"
disney,Who is the voice actor of the hero in Lion King?,Lion King refers to movie_title = 'Lion King';,SELECT T1.`voice-actor` FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T1.movie = T2.movie_title WHERE T2.movie_title = 'Lion King' AND T1.character = 'Lion King'
disney,Provide the directors and MPAA ratings of the musical movies released in 1993.,"Musical movies refer to genre = 'Musical'; released in 1993 refers to substr(release_date, length(release_date) - 3, length(release_date)) = '1993';","SELECT T2.director, T1.MPAA_rating FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T1.genre = 'Musical' AND SUBSTR(T1.release_date, LENGTH(T1.release_date) - 3, LENGTH(T1.release_date)) = '1993'"
disney,"Among the movies released from 1991 to 2000, calculate the percentage of comedy movies. Provide any five movie titles and directors.","DIVIDE(COUNT(movie_title where genre = 'Comedy'), COUNT(movie_title)) as percentage where substr(release_date, length(release_date) - 3, length(release_date)) between '1991' and '2000';","SELECT CAST(COUNT(CASE WHEN T1.genre = 'Comedy' THEN T1.movie_title ELSE NULL END) AS REAL) * 100 / COUNT(T1.movie_title), group_concat(T1.movie_title), group_concat(T2.director) FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE SUBSTR(T1.release_date, LENGTH(T1.release_date) - 3, LENGTH(T1.release_date)) BETWEEN '1991' AND '2000'"
disney,"Among the movies released from 2001 to 2005, list down the titles and directors of the movies which had a total gross of more than 100% above the average.","Released from 2001 to 2005 refers to substr(release_date, length(release_date) - 3, length(release_date)) between '2001' and '2005'; DIVIDE(SUM(total_gross), COUNT(movie_title));","SELECT T2.name, T2.director FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE SUBSTR(T1.release_date, LENGTH(T1.release_date) - 3, LENGTH(T1.release_date)) BETWEEN '2001' AND '2005' AND CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS REAL) / ( SELECT SUM(CAST(REPLACE(trim(T3.total_gross, '$'), ',', '') AS REAL)) / COUNT(T3.movie_title) AS avg_gross FROM movies_total_gross AS T3 INNER JOIN director AS T4 ON T3.movie_title = T4.name WHERE SUBSTR(T3.release_date, LENGTH(T3.release_date) - 3, LENGTH(T3.release_date)) BETWEEN '2001' AND '2005' ) - 1 > 1"
disney,Name the voice actor of the character Calliope in the movie Hercules.,Hercules refers to movie = 'Hercules';,SELECT `voice-actor` FROM `voice-actors` WHERE movie = 'Hercules' AND character = 'Calliope'
disney,How many voice actors for the movie Aladdin?,Aladdin is the name of the movie which refers to movie = 'Aladdin';,SELECT COUNT('voice-actor') FROM `voice-actors` WHERE movie = 'Aladdin'
disney,List the movie titles with the voice actor Jeff Bennet,Jeff Bennett refers to voice-actor = 'Jeff Bennett';,SELECT movie FROM `voice-actors` WHERE 'voice-actor' = 'Jeff Bennett'
disney,Provide the director's name of Wreck-It Ralph movie.,Wreck-It Ralph is the name of the movies which refers to name = 'Wreck-It Ralph';,SELECT director FROM director WHERE name = 'Wreck-It Ralph'
disney,What movies did director Jack Kinney direct?,FALSE;,SELECT name FROM director WHERE director = 'Jack Kinney'
disney,How many movies were released between 1937 and 1950?,"released between 1937 and 1950 refers to substr(release_date, length(release_date) - 1,length(release_date)) between '37' and '50';","SELECT COUNT(movie_title) FROM characters WHERE SUBSTR(release_date, LENGTH(release_date) - 1, LENGTH(release_date)) BETWEEN '37' AND '50'"
disney,Provide the name of the song from the movie directed by Ben Sharpsteen.,Ben Sharpsteen refers to director = 'Ben Sharpsteen';,SELECT T1.song FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Ben Sharpsteen'
disney,Indicate the release date of the film The Lion King directed by Roger Allers.,The Lion King refers to movie_title = 'The Lion King'; Roger Allers refers to director = 'Roger Allers';,SELECT T1.release_date FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Roger Allers' AND T1.movie_title = 'The Lion King'
disney,Name the villain of the movie with Scott Weinger and Brad Kane as voice actors.,FALSE;,SELECT T1.villian FROM characters AS T1 INNER JOIN `voice-actors` AS T2 ON T1.movie_title = T2.movie WHERE T2.`voice-actor` = 'Scott Weinger Brad Kane'
disney,Which movies of director Wolfgang Reitherman do not have villain?,which movies do not have villain refer to movie_title where villian is null;,SELECT T1.movie_title FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Wolfgang Reitherman' AND T1.villian IS NULL
disney,List the titles of movies directed by Jack Kinney that were released before 1947.,"Jack Kinney refers to director = 'Jack Kinney'; released before 1947 refers to substr(release_date, length(release_date) - 1, length(release_date)) < '47';","SELECT T1.movie_title FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Jack Kinney' AND SUBSTR(T1.release_date, LENGTH(T1.release_date) - 1, LENGTH(T1.release_date)) < '47'"
disney,List the names of the directors whose films grossed over $100 million.,films grossed over $100 million refer to movie_title where total_gross > 100000000;,"SELECT DISTINCT T2.director FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name INNER JOIN movies_total_gross AS T3 ON T1.movie_title = T3.movie_title WHERE CAST(REPLACE(trim(T3.total_gross, '$'), ',', '') AS REAL) > 100000000"
disney,Which movie's song title has the highest total gross?,The highest total gross refers to MAX(total_gross);,"SELECT T2.song FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title ORDER BY CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1"
disney,Which director had the most popular film from 1937 to 1990?,"from 1937 to 1990 refers to substr(release_date, length(release_date) - 3, length(release_date)) between '1937' and '1990'; the most popular film refers to movie_title where MAX(total_gross);","SELECT T2.director FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name INNER JOIN movies_total_gross AS T3 ON T3.movie_title = T1.movie_title WHERE SUBSTR(T3.release_date, LENGTH(T3.release_date) - 3, LENGTH(T3.release_date)) BETWEEN '1937' AND '1990' ORDER BY CAST(REPLACE(trim(T3.total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1"
disney,List all the main characters of the movie that are comedy genre.,Comedy refers to genre = 'Comedy'; the main character of the movie refers to hero;,SELECT T2.hero FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title WHERE T1.genre = 'Comedy'
disney,Provide the names of voice actors for the characters of films directed by Wolfgang Reitherman.,Wolfgang Reitherman refers to director = 'Wolfgang Reitherman';,"SELECT T2.hero, T1.`voice-actor` FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T1.movie = T2.movie_title INNER JOIN director AS T3 ON T3.name = T2.movie_title WHERE T3.director = 'Wolfgang Reitherman'"
disney,What genre of movie has Taran as the main character?,Taran is the main character of the movie which refers to hero = 'Taran';,SELECT T1.genre FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title WHERE T2.hero = 'Taran'
disney,The main character Elsa is voiced by which actor and who is the director of the movie?,Elsa is the main character of the movie which refers to hero = 'Elsa'; voiced by which actor refers to voice-actor;,"SELECT T1.`voice-actor`, T3.director FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T1.movie = T2.movie_title INNER JOIN director AS T3 ON T2.movie_title = T3.name WHERE T2.hero = 'Elsa'"
disney,Calculate the percentage of directors whose films grossed over $100 million.,"DIVIDE(COUNT(director where total_gross > 100000000), COUNT(director)) as percentage;","SELECT CAST(COUNT(DISTINCT CASE WHEN CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS REAL) > 100000000 THEN T3.director ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T3.director) FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title INNER JOIN director AS T3 ON T1.movie_title = T3.name"
disney,Calculate the percentage of voice actors whose main character in the movie is in the Drama genre.,"DIVIDE(COUNT(voice-actor where genre = 'Drama'), COUNT(voice-actor)) as percentage;",SELECT CAST(COUNT(CASE WHEN T1.genre = 'Drama' THEN T3.`voice-actor` ELSE NULL END) AS REAL) * 100 / COUNT(T3.`voice-actor`) FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title INNER JOIN `voice-actors` AS T3 ON T3.movie = T1.movie_title
disney,Name the first movie released by Disney.,"The first movie released refers to movie_title where substr(release_date, length(release_date) - 1, length(release_date)) asc limit 1;","SELECT movie_title FROM characters ORDER BY SUBSTR(release_date, LENGTH(release_date) - 1, LENGTH(release_date)) ASC LIMIT 1"
disney,How many movies were released by Disney between 2010 and 2016?,"Movies refer to movie_title; released between 2010 and 2016 refers to substr(release_date, length(release_date) - 1, length(release_date)) between '10' and '16';","SELECT COUNT(movie_title) FROM characters WHERE SUBSTR(release_date, LENGTH(release_date) - 1, LENGTH(release_date)) BETWEEN '10' AND '16'"
disney,Who was the first ever Disney villain?,"the first ever villian is villian that was released before all others in time which refers to substr(release_date, length(release_date) - 1, length(release_date)) desc limit 1;","SELECT villian FROM characters ORDER BY SUBSTR(release_date, LENGTH(release_date) - 1, LENGTH(release_date)) DESC LIMIT 1"
disney,What is Disney's highest grossing action movie?,action movie refers to movie_title where genre = 'Action'; highest grossing movie refers to MAX(total_gross),"SELECT movie_title FROM movies_total_gross WHERE genre = 'Action' ORDER BY CAST(REPLACE(trim(total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1"
disney,Which actor voices Akela from The Jungle Book?,Akela refers character = 'Akela'; which actor voices refers to voice-actor;,SELECT `voice-actor` FROM `voice-actors` WHERE character = 'Akela'
disney,Determine Disney's total box office gross between 2010 and 2016.,between 2010 and 2016 refers to Year between 2010 and 2016;,SELECT SUM(Total) FROM revenue WHERE `Year` BETWEEN 2010 AND 2016
disney,Name the main character of Disney's most popular adventure movie based on its inflation-adjusted gross.,adventure movie refers to genre = 'Adventure'; the main character of the movie refers to hero; most popular movie based on its inflation-adjusted gross refers to where MAX(inflation_adjusted_gross);,"SELECT T2.hero FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title WHERE T1.genre = 'Adventure' ORDER BY CAST(REPLACE(trim(T1.inflation_adjusted_gross, '$'), ',', '') AS REAL) DESC LIMIT 1"
disney,Name the director of Disney's lowest grossing movie.,lowest grossing movie refers to movie_title where MIN(total_gross);,"SELECT T2.director FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name ORDER BY CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS REAL) ASC LIMIT 1"
disney,Find out what proportion of total revenue Walt Disney Parks and Resorts received in 2010.,"DIVIDE(Walt Disney Parks and Resorts where year = 2010), SUM(year = 2010) as percentage;",SELECT SUM(`Walt Disney Parks and Resorts`) / SUM(Total) * 100 FROM revenue WHERE year = 2010
disney,Determine the average gross for Disney's PG-13-rated action movies.,"DIVIDE(SUM(total_gross where genre = 'Action' and MPAA_rating = 'PG-13'), COUNT(movie_title where genre = 'Action' and MPAA_rating = 'PG-13'));","SELECT SUM(CAST(REPLACE(trim(total_gross, '$'), ',', '') AS REAL)) / COUNT(movie_title) FROM movies_total_gross WHERE MPAA_rating = 'PG-13'"
disney,How many voice-actors were involved in the Bambi movie?,Bambi is the name of the movie which refers to movie = 'Bambi';,SELECT COUNT(DISTINCT 'voice-actor') FROM `voice-actors` WHERE movie = 'Bambi'
disney,Find the estimated inflation rate that was used to adjust the 1995 box office revenue for Disney's films.,"DIVIDE(inflation_adjusted_gross, total_gross) as percentage where substr(release_date, length(release_date) - 3, length(release_date)) = '1995';","SELECT SUM(CAST(REPLACE(trim(inflation_adjusted_gross, '$'), ',', '') AS REAL)) / SUM(CAST(REPLACE(trim(total_gross, '$'), ',', '') AS REAL)) FROM movies_total_gross WHERE SUBSTR(release_date, LENGTH(release_date) - 3, LENGTH(release_date)) = '1995' GROUP BY SUBSTR(release_date, LENGTH(release_date) - 3, LENGTH(release_date)) = '1995'"
disney,"What is the difference in the current gross of Cars and its sequel, Cars 2? Which movie is more popular?","SUBTRACT(inflation_adjusted_gross where movie_title = 'Cars', inflation_adjusted_gross where movie_title = 'Cars 2'); more popular movie refers to movie_title where MAX(inflation_adjusted_gross);","SELECT SUM(CASE WHEN movie_title = 'Cars' THEN CAST(REPLACE(trim(inflation_adjusted_gross, '$'), ',', '') AS REAL) ELSE 0 END), SUM(CASE WHEN movie_title = 'Cars 2' THEN CAST(REPLACE(trim(inflation_adjusted_gross, '$'), ',', '') AS REAL) ELSE 0 END) FROM movies_total_gross"
disney,Name the most recent movie directed by Chris Buck. Which of his movies was more successful in terms of grossing? Use the current gross for comparison.,Chris Buck refers to director = 'Chris Buck'; the most recent movie refers to movie_title where MAX(release_date); current gross refers to inflation_adjusted_gross; more successful movie refers to MAX(inflation_adjusted_gross);,"SELECT T1.movie_title, MAX(T1.release_date), MAX(T1.inflation_adjusted_gross) FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Chris Buck'"
disney,Name actors who voiced more than five Disney characters.,Actors who voiced refer to voice-actor;,SELECT 'voice-actor' FROM `voice-actors` GROUP BY 'voice-actor' HAVING COUNT(movie) > 5
disney,Name the top 5 highest-grossing Disney movies adjusted for inflation. Identify the percentage they contributed to the total of Disney's current gross.,"The top 5 highest-grossing movies adjusted for inflation refer to MAX(inflation_adjusted_gross)LIMIT 5; DIVIDE(SUM(MAX(inflation_adjusted_gross LIMIT 5)), SUM(inflation_adjusted_gross)) as percentage;","SELECT SUM(CASE WHEN CAST(REPLACE(trim(inflation_adjusted_gross, '$'), ',', '') AS REAL) > 1236035515 THEN CAST(REPLACE(trim(inflation_adjusted_gross, '$'), ',', '') AS REAL) ELSE 0 END) * 100 / SUM(CAST(REPLACE(trim(inflation_adjusted_gross, '$'), ',', '') AS REAL)) FROM movies_total_gross"
disney,"Among all Disney movies directed by Gary Trousdale, determine the percentage that earned over USD100m based on actual grossing.","DIVIDE(COUNT(movie_title where director = 'Gary Trousdale' and total_gross > 100000000), COUNT(movie_title where director = 'Gary Trousdale')) as percentage;","SELECT CAST(COUNT(CASE WHEN CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS REAL) > 100000000 THEN T1.movie_title ELSE NULL END) AS REAL) * 100 / COUNT(T1.movie_title) FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Gary Trousdale'"
legislator,How many current legislators do not have an account on ballotpedia.org ?,do not have an account on ballotpedia.org refers to ballotpedia_id IS NULL OR ballotpedia_id = '',SELECT COUNT(*) FROM current WHERE ballotpedia_id = '' OR ballotpedia_id IS NULL
legislator,Please list the official full names of all the current legislators who do not have an account on C-SPAN's video website.,legislators who do not have an account refers to cspan_id IS NULL OR cspan_id = '',SELECT official_full_name FROM current WHERE cspan_id IS NULL OR cspan_id = ''
legislator,How many current legislators were born after the year 1960?,born after the year 1960 refers to birthday_bio > '1960-01-01',SELECT COUNT(bioguide_id) FROM current WHERE birthday_bio >= '1961-01-01'
legislator,"Among all the current female legislators, how many of them have not been registered in Federal Election Commission data?",have not been registered refers to fec_id IS NULL; female refers to gender_bio = 'F',SELECT COUNT(*) FROM current WHERE (fec_id IS NULL OR fec_id = '') AND gender_bio = 'F'
legislator,What is the google entity ID of current legislator Sherrod Brown?,Sherrod Brown is an official_full_name,SELECT google_entity_id_id FROM current WHERE official_full_name = 'Sherrod Brown'
legislator,"Which current legislator is older, Sherrod Brown or Maria Cantwell?",older refers to MAX(birthday_bio); 'Sherrod Brown' and 'Maria Cantwell' are official_full_name,SELECT official_full_name FROM current WHERE official_full_name = 'Sherrod Brown' OR official_full_name = 'Maria Cantwell' ORDER BY birthday_bio LIMIT 1
legislator,What is the username of the current official Facebook presence of current legislator Todd Young?,Todd Young is an official_full_name; username of current official Facebook presences refers to facebook;,SELECT T1.facebook FROM `social-media` AS T1 INNER JOIN current AS T2 ON T2.bioguide_id = T1.bioguide WHERE T2.official_full_name = 'Todd Young'
legislator,How many current legislators do not have an account on instagram?,do not have an account on instagram refers to instagram is null,SELECT COUNT(*) FROM `social-media` AS T1 INNER JOIN current AS T2 ON T1.bioguide = T2.bioguide_id WHERE T1.instagram IS NULL
legislator,To which current legislator does twitter ID234128524 belong? Please give his or her full official name.,full official name refers to official_full_name,SELECT T1.official_full_name FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T2.twitter_id = 234128524
legislator,Please list the current official YouTube usernames of all the current female legislators.,official YouTube usernames refers to youtube; female refers to gender_bio = 'F',SELECT T2.youtube FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T1.gender_bio = 'F'
legislator,What is the username of the current official Facebook presence of the oldest current legislator?,username of the official Facebook refers to facebook; the oldest refers to MAX(birthday_bio),SELECT T2.facebook FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id ORDER BY T1.birthday_bio LIMIT 1
legislator,"Among the current legislators who do not have accounts on OpenSecrets.org., how many of them do not have instagram accounts either?",do not have accounts on OpenSecrets.org refers to opensecrets_ID is NULL OR opensecrets_id = ''; do not have instagram accounts refers to instagram is null,SELECT SUM(CASE WHEN T1.instagram IS NULL THEN 1 ELSE 0 END) AS count FROM `social-media` AS T1 INNER JOIN current AS T2 ON T1.bioguide = T2.bioguide_id WHERE T2.opensecrets_id IS NULL OR T2.opensecrets_id = ''
legislator,Current legislator Roger F. Wicker has not been a representative for how many terms?,Roger F. Wicker is an official_full_name; not a representative refers to district IS NULL OR district = '',SELECT SUM(CASE WHEN T1.official_full_name = 'Roger F. Wicker' THEN 1 ELSE 0 END) AS count FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.district IS NULL OR T2.district = ''
legislator,For how many terms has current legislator Sherrod Brown served?,Sherrod Brown is an official_full_name,SELECT COUNT(*) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Sherrod Brown'
legislator,Please list the official full names of all the current legislators who were once a senator during his or her terms.,once a senator during term refers to state_rank IS NOT NULL,SELECT T2.official_full_name FROM `current-terms` AS T1 INNER JOIN current AS T2 ON T2.bioguide_id = T1.bioguide WHERE T1.state_rank IS NOT NULL
legislator,For which state did current legislator Sherrod Brown serve during his term that started on 1993/1/5?,Sherrod Brown is an full official name; started on 1993/1/5 refers to start = '1993-01-05';,SELECT T1.state FROM `current-terms` AS T1 INNER JOIN current AS T2 ON T2.bioguide_id = T1.bioguide WHERE T1.start = '1993-01-05' AND T2.official_full_name = 'Sherrod Brown'
legislator,"Among all the female current legislators, how many of them have served for more than 4 terms?",female refers to gender_bio = 'F'; served for more than 4 terms refers to COUNT(bioguide > 4),SELECT COUNT(CID) FROM ( SELECT T1.bioguide_id AS CID FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'F' GROUP BY T2.bioguide HAVING COUNT(T2.bioguide) > 4 )
legislator,"Among the current legislators who have served for more than 6 terms, how many of them were born after 1960?",served for more than 6 terms refers to COUNT(bioguide > 6); born after 1960 refers to birthday_bio > = '1960-01-01',SELECT COUNT(CID) FROM ( SELECT T1.bioguide_id AS CID FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.birthday_bio >= '1960-01-01' GROUP BY T2.bioguide HAVING COUNT(T2.bioguide) > 6 )
legislator,What is the average number of terms for a current female legislator?,"female refers to gender_bio = 'F'; calculation refers to DIVIDE(COUNT(bioguide WHERE gender_bio = 'F'), COUNT(bioguide_id))",SELECT CAST(COUNT(T2.bioguide) AS REAL) / COUNT(DISTINCT T1.bioguide_id) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'F'
legislator,"Among all the current legislators whose religion is Roman Catholic, what is the percentage of the ones without an instagram account?","religion is Roman Catholic refers to religion_bio = 'Roman Catholic'; calculation = MULTIPLY(DIVIDE(COUNT(instagram is null), COUNT(bioguide_id)), 1.0)",SELECT CAST(SUM(CASE WHEN T1.instagram IS NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `social-media` AS T1 INNER JOIN current AS T2 ON T1.bioguide = T2.bioguide_id WHERE T2.religion_bio = 'Roman Catholic'
legislator,How many males were members of the current legislators?,male refers to gender_bio = 'M',SELECT COUNT(*) FROM current WHERE gender_bio = 'M'
legislator,How many current legislators chose Republican as their political party?,chose Republican as their political party refers to party = 'Republican',SELECT COUNT(*) FROM `current-terms` WHERE party = 'Republican'
legislator,How many legislators have an Instagram account?,have an Instagram account refers to instagram is NOT null and instagram <>'',SELECT COUNT(*) FROM `social-media` WHERE instagram IS NOT NULL AND instagram <> ''
legislator,How many females were members of the past legislators?,female refers to gender_bio = 'F',SELECT COUNT(*) FROM historical WHERE gender_bio = 'F'
legislator,How many male legislators are Roman Catholic?,male refers to gender_bio = 'M'; Roman Catholic is a religion_bio,SELECT COUNT(*) FROM current WHERE religion_bio = 'Roman Catholic' AND gender_bio = 'M'
legislator,What type of political party Sherrod Brown has in 2005?,"political party refers to party; Sherrod Brown is an official_full_name; official_full_name refers to first_name, last_name; 2005 refers to start = 2005",SELECT T1.party FROM `current-terms` AS T1 INNER JOIN current AS T2 ON T2.bioguide_id = T1.bioguide WHERE T2.first_name = 'Sherrod' AND T2.last_name = 'Brown' AND T1.start LIKE '%2005%'
legislator,List the full name of all the senior senators in year 2013.,full name refers to official_full_name; senior refers to state_rank = 'senior'; senators refers to type = 'sen'; 2013 refers to start LIKE '2013%',SELECT T2.official_full_name FROM `current-terms` AS T1 INNER JOIN current AS T2 ON T2.bioguide_id = T1.bioguide WHERE T1.state_rank = 'senior' AND T1.type = 'sen' AND T1.start LIKE '2013%'
legislator,What is the current official Youtube username of Chris Van Hollen?,Youtube username refers to youtube; Chris Van Hollen is an official_full_name,SELECT T2.youtube FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T1.official_full_name = 'Chris Van Hollen'
legislator,How many official social media does Mark Warner have?,"official social media refers to facebook is not null, instagram is not null, twitter is not null, youtube is not null; Mark Warner is an official_full_name; official_full_name refers to first_name, last_name",SELECT CASE WHEN T1.facebook IS NOT NULL THEN 1 END + CASE WHEN T1.instagram IS NOT NULL THEN 1 END + CASE WHEN T1.twitter IS NOT NULL THEN 1 END + CASE WHEN T1.youtube IS NOT NULL THEN 1 END AS COUNTSOCIAL FROM `social-media` AS T1 INNER JOIN current AS T2 ON T1.bioguide = T2.bioguide_id WHERE T2.first_name = 'Mark' AND T2.last_name = 'Warner'
legislator,List the last name of all current legislators who live in California.,California refers to state = 'CA',SELECT T1.last_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.state = 'CA' GROUP BY T1.last_name
legislator,List the full name of all current female senators.,full name refers to official_full_name; female refers to gender_bio = 'F'; senators refers to type = 'sen',"SELECT T2.first_name, T2.last_name FROM `current-terms` AS T1 INNER JOIN current AS T2 ON T2.bioguide_id = T1.bioguide WHERE T1.type = 'sen' AND T2.gender_bio = 'F' GROUP BY T2.ballotpedia_id"
legislator,What is the numeric ID of Chris Van Hollen on GovTrack.us?,Chris Van Hollen is an official_full_name; numeric ID on GovTrack.us refers to govtrack,SELECT T2.govtrack FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T1.official_full_name = 'Chris Van Hollen'
legislator,What is the current official Twitter handle of Roger F. Wicker?,Twitter handle refers to twitter; Roger F. Wicker is an official_full_name,SELECT T2.twitter FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T1.official_full_name = 'Roger F. Wicker'
legislator,List the full name of all past legislators that chose Pro-Administration as their political party in year 1791.,full name refers to official_full_name; chose Pro-Administration as their political party refers to party = 'Pro-Administration'; 1791 refers to start < = 1791 AND END > = 1791,"SELECT T1.first_name, T1.last_name FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.party = 'Pro-Administration' AND CAST(T2.start AS DATE) <= 1791 AND CAST(T2.END AS DATE) >= 1791"
legislator,Provide the full name of all current female legislators that chose Republican as their political party.,"full name refers to official_full_name; official_full_name refers to first_name, last_name; female refers to gender_bio = 'F'; chose Republican as their political party refers to party = 'Republican'; current legislators refers to END > Date()","SELECT T1.first_name, T1.last_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.party = 'Republican' AND T1.gender_bio = 'F' AND T2.END > DATE() GROUP BY T1.bioguide_id"
legislator,What is the district number that Chris Van Hollen serving?,Chris Van Hollen is an official_full_name,SELECT T2.district FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Chris Van Hollen' AND T2.district IS NOT NULL GROUP BY T2.district
legislator,How many times did Richard Durbin become a legislator in district 20?,"Richard Durbin is an official_full_name;  official_full_name refers to first_name, last_name; district 20 refers to district = 20",SELECT SUM(CASE WHEN T2.district = 20 THEN 1 ELSE 0 END) AS count FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.first_name = 'Richard' AND T1.last_name = 'Durbin'
legislator,Calculate the average number of current male legislators who chose Democrat from 2000 until 2021.,"male refers to gender_bio = 'M'; legislators who chose Democrat refers to party = 'Democrat'; from 2000 until 2021 refers to start > = 2000 AND END < = 2021; calculation = DIVIDE(COUNT(bioguide_id), 22)",SELECT CAST(COUNT(T1.bioguide_id) AS REAL) / 22 FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'M' AND CAST(T2.start AS DATE) >= 2000 AND CAST(T2.END AS DATE) <= 2021 AND T2.party = 'Democrat'
legislator,Calculate the percentage of the total number of current female legislators and past female legislators. State which one has the highest value.,"female refers to gender_bio = 'F'; calculation = MULTIPLY(DIVIDE(COUNT(current.gender_bio = 'F' THEN current.bioguide_id)), (COUNT(historical.gender_bio = 'F' then historical.bioguide_id)), 1.0); the highest value refers to MAX(calculation)",SELECT CAST(COUNT(CASE WHEN current.gender_bio = 'F' THEN current.bioguide_id ELSE NULL END) AS REAL) * 100 / ( SELECT COUNT(CASE WHEN historical.gender_bio = 'F' THEN historical.bioguide_id ELSE NULL END) FROM historical ) FROM current
legislator,Give the YouTube ID of the channel 'RepWassermanSchultz.',RepWassermanSchultz refers to youtube,SELECT youtube_id FROM `social-media` WHERE youtube = 'RepWassermanSchultz'
legislator,"What are the Facebook, Twitter and YouTube usernames of Adam Kinzinger?","Facebook, Twitter and YouTube usernames refers to facebook, twitter, youtube; Adam Kinzinger is an official_full_name",SELECT T2.facebook FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T1.official_full_name = 'Adam Kinzinger'
legislator,Which party does Christopher Henderson Clark belong to?,"Christopher Henderson Clark is full name; full name refers to first_name, middle_name, last_name",SELECT T1.party FROM `historical-terms` AS T1 INNER JOIN historical AS T2 ON T2.bioguide_id = T1.bioguide WHERE T2.first_name OR T2.middle_name OR T2.last_name = 'ChristopherHendersonClark'
legislator,List the official full names of 10 legislators who have a YouTube account but no Instagram account.,have a YouTube account but no Instagram account refers to facebook is not null and (instagram is null or instagram = ''),SELECT T2.official_full_name FROM `social-media` AS T1 INNER JOIN current AS T2 ON T1.bioguide = T2.bioguide_id WHERE T1.facebook IS NOT NULL AND (T1.instagram IS NULL OR T1.instagram = '') LIMIT 10
legislator,Give the official full names of legislators representing Virginia.,Virginia refers to state = 'VA',SELECT T1.official_full_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.state = 'VA' GROUP BY T1.official_full_name
legislator,Which historical legislators are members of the National Greenbacker party? Write their first and last names.,"members of the National Greenbacker party refers to party = 'National Greenbacker'; first and last names refers to first_name, last_name","SELECT T2.first_name, T2.last_name FROM `historical-terms` AS T1 INNER JOIN historical AS T2 ON T2.bioguide_id = T1.bioguide WHERE T1.party = 'National Greenbacker'"
legislator,Which legislator has the YouTube channel 'RoskamIL06?' Write the official full name.,YouTube channel 'RoskamIL06' refers to youtube = 'RoskamIL06';,SELECT T1.official_full_name FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T2.youtube = 'RoskamIL06'
legislator,List the full names of 10 legislators who only have a Facebook account.,"full names refers to official_full_name; only have a Facebook account refers to youtube is NULL or youtube = '', instagram is NULL or instagram = '', twitter is NULL or twitter = '', facebook is not NULL and facebook = ''",SELECT T2.official_full_name FROM `social-media` AS T1 INNER JOIN current AS T2 ON T1.bioguide = T2.bioguide_id WHERE (T1.youtube IS NULL OR T1.youtube = '') AND (T1.instagram IS NULL OR T1.instagram = '') AND (T1.twitter IS NULL OR T1.twitter = '') AND T1.facebook IS NOT NULL AND T1.facebook != ''
legislator,Write the full names of junior ranked Republicans.,full name refers to official_full_name; junior refers to state_rank = 'junior'; Republicans refers to party = 'Republican',SELECT T1.official_full_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.party = 'Republican' AND T2.state_rank = 'junior' GROUP BY T1.official_full_name
legislator,What is the contact URL of Claire McCaskill?,contact URL refers to contact_form; Claire McCaskill is an official_full_name,SELECT T2.contact_form FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Claire McCaskill' GROUP BY T2.contact_form
legislator,Give the Wikipedia IDs of historical legislators who are Readjuster Democrats.,Readjuster Democrats refers to party = 'Readjuster Democrat',SELECT T2.wikipedia_id FROM `historical-terms` AS T1 INNER JOIN historical AS T2 ON T2.bioguide_id = T1.bioguide WHERE T1.party = 'Readjuster Democrat'
legislator,List the full names of Republican legislators who have a nickname.,full names refers to official_full_name; Republican refers to party = 'Republican'; nickname refers to nickname_name,SELECT T1.official_full_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.party = 'Republican' AND T1.nickname_name IS NOT NULL GROUP BY T1.official_full_name
legislator,Which state did Veronica Grace Boland represent and which party is she affiliated?,"Veronica Grace Boland is a full name; full name refers to first_name, middle_name, last_name; party affiliated refers to party","SELECT T2.state, T2.party FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.first_name OR T1.middle_name OR T1.last_name = 'VeronicaGraceBoland'"
legislator,How many historical legislators were born in 1973?,born in 1973 refers to birthday_bio = 1973,SELECT COUNT(*) FROM historical WHERE CAST(birthday_bio AS date) = 1973
legislator,What is the ratio of males and females among historical legislators?,"male refers to gender_bio = 'M'; female refers to gender_bio = 'F'; calculation = DIVIDE(COUNT(gender_bio = 'M' THEN bioguide_id), COUNT(gender_bio = 'F' THEN bioguide_id))",SELECT CAST(SUM(CASE WHEN gender_bio = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN gender_bio = 'F' THEN 1 ELSE 0 END) FROM historical
legislator,"Among the legislators who will end in 2009, how many are from the Republican party?",the legislators who will end in 2009 refers to END 2009; from the Republican party refers to party = 'Republican',"SELECT `END`, party FROM `current-terms` WHERE STRFTIME('%Y', `END`) = '2009' AND party = 'Republican'"
legislator,List the official full names and genders of legislators who have Collins as their last name.,genders refers to gender_bio; Collins is a last_name,"SELECT official_full_name, gender_bio FROM current WHERE last_name = 'Collins'"
legislator,How many percent of senators were from class 1?,"senator refers to type = 'sen'; class 1 refers to class = 1; calculation = MULTIPLY(DIVIDE(COUNT(class = 1 then bioguide), COUNT(bioguide)), 1.0)",SELECT CAST(SUM(CASE WHEN class = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `historical-terms` WHERE type = 'sen'
legislator,Provide the current legislators' official full names who are from the Independent party.,Independent party refers to party = 'Independent',SELECT T1.official_full_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.party = 'Independent' GROUP BY T1.official_full_name
legislator,How many years had Jr. John Conyers served in total?,"Jr. John Conyers is an official_full_name; years served refers to SUM(SUBTRACT(END, start))","SELECT SUM(CAST(T2.END - T2.start AS DATE)) AS sum FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'John Conyers, Jr.'"
legislator,How old was Jr. F. James Sensenbrenner when he first started as a legislator?,"Jr. F. James Sensenbrenner is an official_full_name; How old refers to SUBTRACT(MIN(start), birthday_bio)","SELECT CAST(MIN(T2.start) - T1.birthday_bio AS DATE) AS AGE FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'F. James Sensenbrenner, Jr.'"
legislator,"List the full names, religions, and parties of legislators who have served in Maine.","full names refers to official_full_name; religion refers to religion_bio; Maine refers to state = ""ME""","SELECT T1.official_full_name, T2.relation, T2.party FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.state = 'ME' GROUP BY T1.official_full_name, T2.relation, T2.party"
legislator,"Among legislators who have an Instagram account, list down their full names and nicknames who have a Thomas ID of less than 1000.",have an Instagram account refers to instagram is not null; full names refers to official_full_name; nicknames refers to nickname_name; Thomas ID of less than 1000 refers to thomas_id < 1000;,"SELECT T1.official_full_name, T1.nickname_name FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T2.instagram IS NOT NULL AND T1.thomas_id < 1000"
legislator,When was the last serving date of Matt Salmon?,Matt Salmon is an official_full_name,SELECT T1.END FROM `historical-terms` AS T1 INNER JOIN historical AS T2 ON T2.bioguide_id = T1.bioguide WHERE T2.official_full_name = 'Matt Salmon'
legislator,"Among the legislators who have served in the U.S. House, provide the party and the state of the legislators who were born in 1738.",have served in the U.S. House refers to house_history_id IS NOT NULL; born in 1738 refers to birthday_bio = 1738,"SELECT T1.party, T1.state FROM `historical-terms` AS T1 INNER JOIN historical AS T2 ON T2.bioguide_id = T1.bioguide WHERE T2.house_history_id IS NOT NULL AND T2.birthday_bio LIKE '%1738%'"
legislator,List the IDs and full names of legislators from the Liberal Republican party.,"full_name refers to first_name, last_name; from the Liberal Republican party refers to party = 'Liberal Republican'","SELECT T2.bioguide_id, T2.first_name, T2.last_name FROM `historical-terms` AS T1 INNER JOIN historical AS T2 ON T2.bioguide_id = T1.bioguide WHERE T1.party = 'Liberal Republican'"
legislator,"Among the legislators who started a term on 2nd December 1793, how many of them were males?",started a term on 2nd December 1793 refers to start = '1793-12-02'; male refers to gender_bio = 'M',SELECT COUNT(T1.bioguide_id) FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'M' AND T2.start = '1793-12-02'
legislator,Compare the number of legislators who started the term in 1875 and 2005.,started the term in 1875 refers to start LIKE '1875%'; started the term in 2005 refers to start LIKE '2005%',SELECT SUM(CASE WHEN `current-terms`.start LIKE '2005%' THEN 1 ELSE 0 END) - ( SELECT SUM(CASE WHEN start LIKE '1875%' THEN 1 ELSE 0 END) FROM `historical-terms` ) FROM `current-terms`
legislator,"List the full names, Twitter IDs, and YouTube IDs of legislators who have Richard as their first name.",full names refers to official_full_name; Richard as their first name refers to first_name = 'Richard',"SELECT T2.official_full_name, T1.twitter_id, T1.youtube_id FROM `social-media` AS T1 INNER JOIN current AS T2 ON T1.bioguide = T2.bioguide_id WHERE T2.first_name = 'Richard'"
legislator,"Provide the start date, end date, and party of Pearl Peden Oldfield.","start date refers to start; end date refers to end date; Pearl Peden Oldfield refers to official_full_name; official_full_name refers to first_name, middle_name, last_name","SELECT T2.start, T2.`end`, T2.party FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.first_name = 'Pearl' AND T1.middle_name = 'Peden' AND T1.last_name = 'Oldfield'"
legislator,What is the birthday of Amy Klobuchar?,"birthday refers to birthday_bio; Amy Klobuchar refers to full name; full name refers to first_name, last_name",SELECT birthday_bio FROM current WHERE first_name = 'Amy' AND last_name = 'Klobuchar'
legislator,How many legislators have not been registered in Federal Election Commission data?,have not been registered in Federal Election Commission data refers to fec_id is null OR fec_id = '',SELECT COUNT(*) FROM current WHERE fec_id IS NULL OR fec_id = ''
legislator,State the number of female legislators in the list.,female refers to gender_bio = 'F',SELECT COUNT(*) FROM current WHERE gender_bio = 'F'
legislator,Give the full name of legislators who have accounts on OpenSecrets.org.,"full name refers to first_name, last_name; have accounts on OpenSecrets.org refers to opensecrets_id IS NOT NULL AND opensecrets_id <> ''",SELECT COUNT(*) FROM current WHERE opensecrets_id IS NOT NULL AND opensecrets_id <> ''
legislator,What is the middle name of the legislator whose birthday was on 8/24/1956?,birthday was on 8/24/1956 refers to birthday_bio = '1956-08-24',SELECT middle_name FROM current WHERE birthday_bio = '1956-08-24'
legislator,"How many legislators hold the title ""Majority Leader""?",,SELECT COUNT(bioguide) FROM `current-terms` WHERE title = 'Majority Leader'
legislator,What is the title of legislator whose birthday on 2/20/1942?,birthday on 2/20/1942 refers to birthday_bio = '1942-02-20',SELECT T2.title FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.birthday_bio = '1942-02-20' GROUP BY T2.title
legislator,What is the gender of the legislator whose address at 317 Russell Senate Office Building Washington DC 20510?,gender refers to gender_bio,SELECT T1.gender_bio FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.address = '317 Russell Senate Office Building Washington DC 20510'
legislator,List out the first name of legislators who are senior Senator.,senior refers to state_rank = 'senior'; only senator has this value 'senior',SELECT T1.first_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.state_rank = 'senior' GROUP BY T1.first_name
legislator,"Among male legislators, state number of the legislators who are not the senator.",male refers to gender_bio = M; not the senator refers to class IS NULL OR class = '',SELECT COUNT(T3.state) FROM ( SELECT T2.state FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'M' AND (T2.class IS NULL OR T2.class = '') GROUP BY T2.state ) T3
legislator,Calculate the percentage of legislators who are Senator and were born in 1964.,"are senator refers to class IS NOT NULL; born in 1964 refers to birthday_bio = 1964; calculation = MULTIPLY(DIVIDE(COUNT(class IS NOT NULL THEN bioguide_id), COUNT(bioguide_id)), 1.0)",SELECT CAST(SUM(CASE WHEN T2.class IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.birthday_bio LIKE '%1964%'
legislator,Calculate the percentage of legislators who are not Senator and were born before 1975.,"not Senator refers to class is NULL; born before 1975 refers to birthday_bio < = 1975; calculation = MULTIPLY(DIVIDE(COUNT(class IS NULL THEN bioguide_id), COUNT(bioguide_id)), 1.0)",SELECT CAST(COUNT(CASE WHEN T2.class IS NULL THEN T1.bioguide_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.bioguide_id) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE CAST(T1.birthday_bio AS DATE) <= 1975
legislator,What is the twitter name of the legislator whose birthday was on 5/27/1946?,birthday on 5/27/1946 refers to birthday_bio = '1946-05-27',SELECT T2.twitter FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T1.birthday_bio = '1946-05-27'
legislator,State the opensecrets_id of the legislator whose YouTube name is Bluetkemeyer.,Bluetkemeyer refers to youtube,SELECT T1.opensecrets_id FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T2.youtube = 'BLuetkemeyer'
legislator,Mention the username of Facebook of Ralph Abraham.,"username of Facebook refers to facebook; Ralph Abraham is an official_full_name; official_full_name refers to first_name, last_name",SELECT T2.facebook FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T1.first_name = 'Ralph' AND T1.last_name = 'Abraham'
legislator,What is the first name of the legislator whose address at 1005 Longworth HOB; Washington DC 20515-1408?,,SELECT T1.first_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.address = '1005 Longworth HOB Washington DC 20515-1408' GROUP BY T1.first_name
legislator,What is the Instagram name of the legislator whose birthday was on 8/24/1952?,Instagram name refers to instagram; birthday on 8/24/1952 refers to birthday_bio = '1952-08-24',SELECT T1.instagram FROM `social-media` AS T1 INNER JOIN current AS T2 ON T1.bioguide = T2.bioguide_id WHERE T2.birthday_bio = '1952-08-24'
legislator,State number of legislators who are not the senator among female legislators.,not the senator refers to class IS NULL OR class = ''; female refers to gender_bio = 'F';,SELECT COUNT(*) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'F' AND (T2.class IS NULL OR T2.class = '')
legislator,Give the religion of the legislator whose YouTube name is MaxineWaters.,MaxineWaters relates to youtube,SELECT T2.religion_bio FROM `social-media` AS T1 INNER JOIN current AS T2 ON T1.bioguide = T2.bioguide_id WHERE T1.youtube = 'MaxineWaters'
legislator,How many minority leaders have not been registered in Federal Election Commission data?,minority leaders is a title; have not been registered in Federal Election Commission data refers to fec_id IS NULL OR fec_id = '',SELECT COUNT(*) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.title = 'Minority Leader' AND (T1.fec_id IS NULL OR T1.fec_id = '')
legislator,How many of the legislators are male?,male refers to gender_bio = 'M';,SELECT COUNT(*) FROM current WHERE gender_bio = 'M'
legislator,"Provide the facebook ID of the facebook account named ""RepWilson"".",,SELECT facebook_id FROM `social-media` WHERE facebook = 'RepWilson'
legislator,"What is the total number of legislators with ""John"" as their first name?",,SELECT COUNT(*) FROM current WHERE first_name = 'John'
legislator,Give the district numbers with an Anti-Administration party.,,SELECT district FROM `historical-terms` WHERE party = 'Anti-Administration' GROUP BY district
legislator,List the full name of legislators whose born in 1960.,full name refers to official_full_name; born in 1960 refers to birthday_bio like '1960%';,SELECT official_full_name FROM current WHERE birthday_bio LIKE '1960%'
legislator,What is the google entity ID of Benjamin Hawkins?,,SELECT google_entity_id_id FROM historical WHERE first_name = 'Benjamin' AND last_name = 'Hawkins'
legislator,"Who is the Pro-Administration senator that runs from March 4, 1789 to December 31, 1791?","Pro-Administration refers to party = 'Pro-Administration'; senator refers to type = 'sen'; runs from March 4, 1789 refers to start = '1789-03-04'; runs to refers to end = '1791-12-31';","SELECT T1.first_name, T1.last_name FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.party = 'Pro-Administration' AND T2.start = '1789-03-04' AND T2.end = '1791-12-31'"
legislator,What are the first and last name of the representatives of the house in district 9?,representatives refers to type = 'rep';,"SELECT T2.first_name, T2.last_name FROM `historical-terms` AS T1 INNER JOIN historical AS T2 ON T2.bioguide_id = T1.bioguide WHERE T1.district = 9"
legislator,Give the full name of the legislators with an independent party.,full name refers to official_full_name;,SELECT T1.official_full_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.party = 'Independent' GROUP BY T1.official_full_name
legislator,List down the open secrets and thomas ID of the democrat senators of New Jersey.,open secrets refers to opensecrets_id; democrat refers to party = democrat; senators refers to type = 'sen'; New Jersey refers to state = 'NJ';,"SELECT T1.opensecrets_id, T1.thomas_id FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.type = 'sen' AND T2.state = 'NJ' GROUP BY T1.opensecrets_id, T1.thomas_id"
legislator,Provide the google entity ID of the senators in New York.,google entity ID refers to google_entity_id_id; senators refers to type = 'sen'; New York refers to state = 'NY';,SELECT T1.google_entity_id_id FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.type = 'sen' AND T2.state = 'NY'
legislator,Give the religion of the legislator with RSS url of http://www.corker.senate.gov/public/index.cfm/rss/feed.,religion refers to religion_bio;,SELECT T1.religion_bio FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.rss_url = 'http://www.corker.senate.gov/public/index.cfm/rss/feed' GROUP BY T1.religion_bio
legislator,What is the party of the legislator named Susan M. Collins?,legislator's name refers to offical_full_name;,SELECT T2.party FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Susan M. Collins' GROUP BY T2.party
legislator,List down the district number of the representative of the house named Jonathan Grout.,district number refers to district; representative of the house refers to type = 'rep';,SELECT T2.district FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.last_name = 'Grout' AND T1.first_name = 'Jonathan' AND T2.type = 'rep'
legislator,What is the party and state of the legislator that has an open secrets ID of N00003689 and thomas ID of 186?,,"SELECT T2.party, T2.state FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.opensecrets_id = 'N00003689' AND T1.thomas_id = 186 GROUP BY T2.party, T2.state"
legislator,Provide the full name and birth date of the legislator with a contact form of http://www.brown.senate.gov/contact/.,full name refers to official_full_name; birth date refers to birthday_bio;,"SELECT T1.official_full_name, T1.birthday_bio FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.contact_form = 'http://www.brown.senate.gov/contact/'"
legislator,Give the state and type of term of the legislator with the google entity ID of kg:/m/02pyzk.,type of term refers to type; google entity ID refers to google_entity_id_id; google_entity_id_id = 'kg:/m/02pyzk';,"SELECT T2.state, T2.type FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.google_entity_id_id = 'kg:/m/02pyzk'"
legislator,Provide the type and end date of the term of the legislator named John Vining.,end date of the term refers to end;,"SELECT T2.type, T2.end FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.first_name = 'John' AND T1.last_name = 'Vining'"
legislator,Find the difference between the number of female senators and representatives born between 1930 to 1970.,"difference = SUBTRACT(SUM(type = 'sen' WHERE gender_bio = 'F' AND strftime('%Y', birthday_bio) between '1930' and '1970'), SUM(type = 'rep' WHERE gender_bio = 'F' AND strftime('%Y', birthday_bio) between '1930' and '1970')); female refers to gender_bio = 'F'; senators refers to type = 'sen'; representatives refers to type = 'rep'; born between 1930 to 1970 strftime('%Y', birthday_bio) between '1930' and '1970';","SELECT SUM(CASE WHEN T2.type = 'sen' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.type = 'rep' THEN 1 ELSE 0 END) FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'F' AND strftime('%Y', T1.birthday_bio) BETWEEN '1930' AND '1970'"
legislator,"Among the male legislators born between 1955 to 1965, what is the percentage of the legislators with an independent party?","male refers to gender_bio = 'M'; born between 1955 to 1965 refers to strftime('%Y', birthday_bio) between '1955' and '1965'; percentage = MULTIPLY(DIVIDE(SUM(party = 'Independent' WHERE gender_bio = 'M' AND strftime('%Y', birthday_bio) between '1955' and '1965'), COUNT(party WHERE gender_bio = 'M' AND strftime('%Y', birthday_bio) between '1955' and '1965')), 100.0);","SELECT CAST(SUM(CASE WHEN T2.party = 'Independent' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.party) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'M' AND strftime('%Y', T1.birthday_bio) BETWEEN '1955' AND '1965'"
legislator,What is the name of the legislator with the ID of W000059?,"name of the legislator = first_name, last_name; ID of W000059 refers to bioguide_id = 'W000059';","SELECT first_name, last_name FROM historical WHERE bioguide_id = 'W000059'"
legislator,Does Thomas Carnes have an account on ballotpedia.org?,if first_name = 'Thomas' and last_name = 'Carnes' AND ballotpedia_id is null then Thomas Carnes doesn't have an account on ballotpedia.org; if first_name = 'Thomas' and last_name = 'Carnes' AND ballotpedia_id is NOT null then Thomas Carnes have an account on ballotpedia.org;,SELECT CASE WHEN ballotpedia_id IS NULL THEN 'doesn''t have' ELSE 'have' END AS HaveorNot FROM historical WHERE first_name = 'Thomas' AND last_name = 'Carnes'
legislator,How many legislators were born in 1736?,born in 1736 refers to birthday_bio like '1736%';,SELECT COUNT(bioguide_id) FROM historical WHERE birthday_bio LIKE '1736%'
legislator,Which legislators are woman?,woman refers to gender_bio = 'F';,"SELECT first_name, last_name FROM historical WHERE gender_bio = 'F'"
legislator,How many districts are in Idaho?,Idaho refers to state = 'ID';,SELECT COUNT(district) FROM `current-terms` WHERE state = 'ID'
legislator,How many legislators are not senator?,not senator refers to class is null;,SELECT COUNT(bioguide) FROM `current-terms` WHERE class IS NULL
legislator,What is the ratio between male and female legislators?,"ratio = DIVIDE(SUM(gender_bio = 'M'),  SUM(gender_bio = 'F')); male refers to gender_bio = 'M'; female refers to gender_bio = 'F'",SELECT CAST(SUM(CASE WHEN gender_bio = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN gender_bio = 'F' THEN 1 ELSE 0 END) FROM historical
legislator,Calculate the percentage of famous_legislatorss.,"percentage = MULTIPLY(DIVIDE(SUM(wikipedia_id is not null), (bioguide_id)), 100.0); famous legislators refers to wikipedia_id is not null;",SELECT CAST(SUM(CASE WHEN wikipedia_id IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bioguide_id) FROM historical
legislator,Which legislators do not have instagram account?,do not have instagram account refers to instagram is null;,"SELECT T1.first_name, T1.last_name FROM current AS T1 INNER JOIN `social-media` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.instagram IS NULL"
legislator,List all the representatives in 1789 along with the districts and state.,representatives refers to type = 'rep'; in 1789 refers to start like '1789%';,"SELECT T2.district, T2.state FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.start LIKE '1789%'"
legislator,State all the district that Benjamin Contee has served before.,,SELECT T2.district FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.first_name = 'Benjamin' AND T1.last_name = 'Contee'
legislator,State the address of Amy Klobuchar at the term of 4th of January 2001.,at the term of 4th of January 2001 refers to start = '2001-04-01';,SELECT T2.address FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.first_name = 'Amy' AND T1.last_name = 'Klobuchar' AND T2.start = '2001-04-01'
legislator,List all the junior senators in 1997.,junior senators refers to state_rank = 'junior'; in 1997 refers to start like '1997%';,"SELECT T1.first_name, T1.last_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.start LIKE '1997%' AND T2.state_rank = 'junior'"
legislator,How many female legislators become representatives for California in 2015?,female legislators refers to gender_bio = 'F'; representatives refers to type = 'rep'; for California refers to state = 'CA'; in 2015 refers to the year of start date is '2015';,"SELECT COUNT(*) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE STRFTIME('%Y', T2.start) = '2015' AND T2.state = 'CA' AND T1.gender_bio = 'F'"
legislator,What is the Twitter ID of Emanuel Cleaver?,,SELECT T1.twitter_id FROM `social-media` AS T1 INNER JOIN current AS T2 ON T2.bioguide_id = T1.bioguide WHERE T2.first_name = 'Emanuel' AND T2.last_name = 'Cleaver'
legislator,State all the Facebook ID for current legislators under the democrat party.,,SELECT T2.facebook_id FROM `current-terms` AS T1 INNER JOIN `social-media` AS T2 ON T1.bioguide = T2.bioguide WHERE T1.party = 'Democrat' GROUP BY T2.facebook_id
legislator,Which historical female legislator that have their term ended on the 3rd of March 1791?,female legislator refers to gender_bio = 'F'; term ended on the 3rd of March 1791 refers to end = '1791-03-03';,"SELECT T1.first_name, T1.last_name FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.end = '1791-03-03' AND T1.gender_bio = 'F'"
legislator,List all the Jewish current legislators that had served in Florida.,Jewish refers to religion_bio = 'Jewish'; in Florida refers to state = 'FL';,"SELECT T1.first_name, T1.last_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.religion_bio = 'Jewish' AND T2.state = 'FL' GROUP BY T1.first_name, T1.last_name"
legislator,What is the ratio between famous current legislators and famous historical legislators?,"ratio = DIVIDE(COUNT(current.bioguide_id WHERE current.wikipedia_id is not null), COUNT(historical.bioguide_id WHERE historical.wikipedia_id is not null)); famous current legislators refers to current.wikipedia_id is not null; famous historical legislators refers to historical.wikipedia_id is not null;",SELECT CAST(COUNT(CASE WHEN wikipedia_id IS NOT NULL THEN bioguide_id ELSE 0 END) AS REAL) * 100 / ( SELECT COUNT(CASE WHEN wikipedia_id IS NOT NULL THEN bioguide_id ELSE 0 END) FROM historical ) FROM current
legislator,"Based on the number of current legislators, calculate the percentage of legislators that served in 21st-Century.","percentage = MULTIPLY(DIVIDE(SUM(strftime('%Y', start) between '2000' and '2017'), COUNT(bioguide_id)), 100.0); 1st-Century refers to strftime('%Y', T2.start) between '2000' and '2017';","SELECT CAST(SUM(CASE WHEN strftime('%Y', T2.start) BETWEEN '2000' AND '2017' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bioguide_id) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide"
legislator,How many Catholic legislators do not have an account on ballotpedia.org?,Catholic refers to religion_bio = 'Catholic'; do not have an account on ballotpedia.org refers to ballotpedia_id is null;,SELECT COUNT(bioguide_id) FROM historical WHERE religion_bio = 'Catholic' AND ballotpedia_id IS NULL
legislator,How many class 1 senators belong to the Republican party?,senators refers to type = 'sen';,SELECT COUNT(bioguide) FROM `current-terms` WHERE class = 1 AND party = 'Republican'
legislator,What are the full names of the non-google female entity legislators that have not been registered in Federal Election Commission data?,"full names = first_name, last_name; non-google entity refers to google_entity_id_id is null; female refers to gender_bio = 'F'; have not been registered in Federal Election Commission data refers to fec_id is null;","SELECT first_name, last_name FROM historical WHERE gender_bio = 'F' AND google_entity_id_id IS NULL AND fec_id IS NULL"
legislator,"In California, how many representatives ended their term in 1995?",California refers to state = 'CA'; representatives refers to type = 'rep'; ended the term in 1995 refers to end like '1995%';,SELECT COUNT(*) FROM `current-terms` WHERE state = 'CA' AND type = 'rep' AND end LIKE '1995%'
legislator,What is the full name of the oldest legislator?,"full name = first_name, last_name; oldest legislator refers to MIN(birthday_bio);","SELECT first_name, last_name FROM historical ORDER BY birthday_bio LIMIT 1"
legislator,List all of the ids of the representatives belonging to the Democrat party in district 13 that ended their term on 1/3/2019?,ids refers to bioguide; representatives refers to type = 'rep'; ended the term on 1/3/2019 refers to end = '2019-01-03';,SELECT bioguide FROM `current-terms` WHERE type = 'rep' AND party = 'Democrat' AND end = '2019-01-03' AND district = 13
legislator,What is the official Twitter handle of Jason Lewis?,official Twitter handle refers to twitter;,SELECT T2.twitter FROM current AS T1 INNER JOIN `social-media` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Jason Lewis'
legislator,"Among the Independent senators that started their term in 2011 and onwards, what are the official full names of the senators that caucused with the Democrat?","Independent refers to party = 'Independent'; senators refers to type = 'sen'; started the term in 2011 and onwards refers to strftime('%Y', start) > = '2011'; caucused with the Democrat refers to caucus = 'Democrat';","SELECT T1.official_full_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.party = 'Independent' AND strftime('%Y', T2.start) >= '2011' AND T2.type = 'sen' AND T2.caucus = 'Democrat'"
legislator,How many Jewish legislators do not have facebook?,Jewish legislators refers to religion_bio = 'Jewish'; do not have facebook refers to facebook is null;,SELECT COUNT(T3.bioguide_id) FROM ( SELECT T1.bioguide_id FROM current AS T1 INNER JOIN `social-media` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.facebook IS NULL GROUP BY T1.bioguide_id ) T3
legislator,Which party has the highest number of legislators who are Baptist?,party that has the highest number of legislators refers to MAX(COUNT(party)); Baptist refers to religion_bio = 'Baptist';,SELECT T2.party FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.religion_bio = 'Baptist' GROUP BY T2.party ORDER BY COUNT(T2.party) DESC LIMIT 1
legislator,"List the official full names of all the legislators who have facebook, instagram, twitter and youtube accounts.","have facebook, instagram, twitter and youtube accounts refers to 'facebook' is not null AND 'instagram' is not null AND 'twitter' is not null AND 'youtube' is not null;",SELECT T1.official_full_name FROM current AS T1 INNER JOIN `social-media` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.facebook IS NOT NULL AND T2.instagram IS NOT NULL AND T2.twitter IS NOT NULL AND T2.youtube IS NOT NULL
legislator,"How many districts did John Conyers, Jr. serve in total?",,"SELECT COUNT(T3.district) FROM ( SELECT T2.district FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'John Conyers, Jr.' GROUP BY T2.district ) T3"
legislator,What are the Wikipedia page names of all the anti-administration senators?,Wikipedia page names refers to wikipedia_id; anti-administration refers to party = 'Anti-Administration'; senators refers to type = 'sen';,SELECT T1.wikipedia_id FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.type = 'sen' AND T2.party = 'Anti-Administration'
legislator,List the official full names of all the legislators that served 13 district for 26 consecutive years.,"served only one district for 26 consecutive years refers to SUBTRACT(SUM(cast(strftime('%Y', end)), CAST(strftime('%Y', start)))) = 26","SELECT DISTINCT CASE WHEN SUM(CAST(strftime('%Y', T2.end) AS int) - CAST(strftime('%Y', T2.start) AS int)) = 26 THEN T1.official_full_name END FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide GROUP BY T1.official_full_name, T2.district HAVING COUNT(T1.official_full_name) = 13"
legislator,How many Federalist representatives are there whose first names are Benjamin?,Federalist refers to party = 'Federalist'; representatives refers to type = 'rep';,SELECT COUNT(T.bioguide_id) FROM ( SELECT T1.bioguide_id FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.first_name = 'Benjamin' AND T2.party = 'Federalist' AND T2.type = 'rep' GROUP BY T1.bioguide_id ) AS T
legislator,How many female representatives served in the state of California for at least 10 years?,"female refers to gender_bio = 'F'; representatives refers to type = 'rep'; served for at least 10 years refers to SUBTRACT(SUM(CAST(strftime('%Y', end)), CAST(strftime('%Y', start)))) > 10;","SELECT SUM(T3.result) FROM ( SELECT CASE WHEN SUM(CAST(strftime('%Y', T2.`end`) AS int) - CAST(strftime('%Y', T2.start) AS int)) > 10 THEN 1 ELSE 0 END AS result FROM current AS T1 INNER JOIN ""current-terms"" AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'F' AND T2.state = 'CA' AND T2.type = 'rep' ) AS T3"
legislator,What is the party of the oldest legislator?,oldest legislator refers to MIN(birthday_bio);,SELECT T1.party FROM `historical-terms` AS T1 INNER JOIN historical AS T2 ON T2.bioguide_id = T1.bioguide ORDER BY T2.birthday_bio LIMIT 1
legislator,Who is the Lutheran representative that served in the state of Ohio for 14 years before becoming a senator?,"Lutheran refers to religion_bio = 'Lutheran'; representative refers to type = 'rep'; served for 14 years refers to SUBTRACT(SUM(CAST(strftime('%Y', end)), CAST(strftime('%Y', start)))) = 14;","SELECT CASE WHEN SUM(CAST(strftime('%Y', T2.end) AS int) - CAST(strftime('%Y', T2.start) AS int)) = 14 THEN official_full_name END FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.religion_bio = 'Lutheran' AND T2.state = 'OH' AND T2.type = 'rep'"
legislator,"Among all the current legislators born after the year 1960, how many of them are not google entities?","born after the year 1960 refers to strftime('%Y', birthday_bio) > '1960'; not google entities refers to google_entity_id_id is null;","SELECT COUNT(*) FROM current WHERE strftime('%Y', birthday_bio) > '1960' AND google_entity_id_id IS NULL"
legislator,Please list the official full names of all the current legislators who have served in the U.S. House.,have served in the U.S. House refers to house_history_id is not null;,SELECT official_full_name FROM current WHERE house_history_id IS NOT NULL
legislator,How many current legislators have both accounts on both VoteView.com and maplight.org?,have both accounts on both VoteView.com and maplight.org refers to icpsr_id is not null AND maplight_id is not null;,SELECT COUNT(*) FROM current WHERE icpsr_id IS NOT NULL AND maplight_id IS NOT NULL
legislator,"Among all the current female legislators, how many of them have attended in Senate roll call votes?",female refers to gender_bio = 'F'; have attended in Senate roll call votes refers to lis_id is not null;,SELECT COUNT(lis_id) FROM current WHERE gender_bio = 'F' AND lis_id IS NOT NULL
legislator,What is the religion of current legislator Sherrod Brown?,religion refers to religion_bio;,SELECT religion_bio FROM current WHERE official_full_name = 'Sherrod Brown'
legislator,What is the religion with the most occurrrence of the current legislators?,religion with the most occurrrence of the current legislators refers to MAX(count(religion_bio));,SELECT religion_bio FROM current GROUP BY religion_bio ORDER BY COUNT(religion_bio) DESC LIMIT 1
legislator,What is the current official Instagram handle of current legislator Bob Corker?,official Instagram handle refers to instagram;,SELECT T2.instagram FROM current AS T1 INNER JOIN `social-media` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Bob Corker'
legislator,"Among the current legislators who have accounts on both http://thomas.gov, how many of them have accounts on instagram?",have accounts on both http://thomas.gov refers to thomas_id is NOT null; have accounts on instagram refers to instagram is not null;,SELECT COUNT(DISTINCT T1.bioguide_id) FROM current AS T1 INNER JOIN `social-media` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.thomas_id IS NOT NULL AND T2.instagram IS NOT NULL
legislator,Please list the username of the current official Facebook presence of all the current legislators that are famous or impact.,username of the current official Facebook presence of the legislators refers to facebook; legislators that are famous or impact refers to wikipedia_id is not null;,SELECT T2.facebook FROM current AS T1 INNER JOIN `social-media` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.wikipedia_id IS NOT NULL GROUP BY T2.facebook
legislator,For how many terms have the oldest current legislator served?,oldest legislator refers to MIN(birthday_bio);,SELECT COUNT(T2.bioguide) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.birthday_bio = ( SELECT MIN(birthday_bio) FROM current )
legislator,"What was current legislator Sherrod Brown's Washington, D.C. office phone number during his term starting on 2013/1/3?","Washington, DC office phone number refers to phone; terms starting on 2013/1/3 refers to start = '2013-01-03';",SELECT T1.phone FROM `current-terms` AS T1 INNER JOIN current AS T2 ON T2.bioguide_id = T1.bioguide WHERE T2.official_full_name = 'Sherrod Brown' AND T1.start = '2013-01-03'
legislator,Current legislator Sherrod Brown has been in the Democrat party during how many terms that he has served?,,SELECT COUNT(*) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Sherrod Brown' AND T2.party = 'Democrat'
legislator,Please list the full official names of all the current legislators who served the term that started on 2013/1/3.,term that started on 2013/1/3 refers to start = '2013-01-03';,SELECT T1.official_full_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.start = '2013-01-03'
legislator,"Among the current legislators who served the term starting on 2013/1/3, how many of them are female?",term starting on 2013/1/3 refers to start = '2013-01-03; female refers to gender_bio = 'F';,SELECT COUNT(*) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.start = '2013-01-03' AND T1.gender_bio = 'F'
legislator,What is the full official name of the current legislator that has served for the most number of terms?,served for the most number of terms refers to MAX(COUNT(bioguide));,"SELECT T1.official_full_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide GROUP BY T1.official_full_name, T2.bioguide ORDER BY COUNT(T2.bioguide) DESC LIMIT 1"
legislator,For how many terms has current legislator Sherrod Brown served as a representative for district no.13?,district no. 13 refers to district = 13;,SELECT COUNT(*) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Sherrod Brown' AND T2.district = 13
legislator,"What is the official full name of the current legislator whose current official Facebook presence is ""senjoniernst""?","current official Facebook presence is ""senjoniernst"" refers to facebook = 'senjoniernst';",SELECT T1.official_full_name FROM current AS T1 INNER JOIN `social-media` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.facebook = 'senjoniernst'
legislator,"Which current legislator has served for more terms, Sherrod Brown or Maria Cantwell?","if sum(official_full_name = 'Maria Cantwell') > sum(official_full_name = 'Sherrod Brown') then Maria Cantwell has served for more term than Sherrod Brown; if sum(official_full_name = 'Sherrod Brown') > sum(official_full_name = 'Maria Cantwell'), then Sherrod Brown has served for more terms than Maria Cantwell;",SELECT CASE WHEN SUM(CASE WHEN T1.official_full_name = 'Maria Cantwell' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.official_full_name = 'Sherrod Brown' THEN 1 ELSE 0 END) THEN 'Maria Cantwell' ELSE 'Sherrod Brown' END FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide
legislator,"Among all the current legislators who have served for more than 4 terms, what is the percentage of them being female?","have served for more than 4 years refers to count(bioguide) > 4; percentage = MULTIPLY(DIVIDE(SUM(gender_bio = 'F'), count(bioguide)), 100.0); female refers to gender_bio = 'F'","SELECT CAST(SUM(CASE WHEN gender_bio = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.bioguide) FROM ( SELECT T2.bioguide, T1.gender_bio FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide GROUP BY T2.bioguide HAVING COUNT(T2.bioguide) > 4 ) T3"
legislator,What is the average number of terms served for a current legislator that's famous or impact?,"average = DIVIDE(COUNT(bioguide), COUNT(bioguide_id)); legislator that's famous or impact refers to wikipedia_id is not null;",SELECT CAST(COUNT(T2.bioguide) AS REAL) / COUNT(DISTINCT T1.bioguide_id) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.wikipedia_id IS NOT NULL
legislator,How many of the legislators are female?,female refers to gender_bio = 'F';,SELECT COUNT(gender_bio) FROM current WHERE gender_bio = 'F'
legislator,What is the total number of senators New Jersey have?,senators refers to type = 'rep'; New Jersey refers to state = 'NJ';,SELECT COUNT(type) FROM `historical-terms` WHERE state = 'NJ' AND type = 'rep'
legislator,Provide the address of the legislator with the contact form of http://www.carper.senate.gov/contact/.,,SELECT address FROM `current-terms` WHERE contact_form = 'http://www.carper.senate.gov/contact/'
legislator,Provide the Instagram username of the legislator named Benjamin Hawkins.,Instagram username refers to instagram;,SELECT T1.instagram FROM `social-media` AS T1 INNER JOIN current AS T2 ON T2.bioguide_id = T1.bioguide WHERE T2.first_name = 'Benjamin' AND T2.last_name = 'Hawkins'
legislator,Give the alphanumeric ID of the Catholic legislators in Nebraska.,alphanumeric ID refers to bioguide; Catholic legislators refers to religion_bio = 'Catholic'; Nebraska refers to state = 'NE';,SELECT T1.bioguide FROM `current-terms` AS T1 INNER JOIN current AS T2 ON T2.bioguide_id = T1.bioguide WHERE T2.religion_bio = 'Catholic' AND T1.state = 'NE'
legislator,List down the MapLight ID of the representatives in Maine.,representatives refers to type = 'rep'; Maine refers to state = 'ME';,SELECT T1.maplight_id FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.type = 'rep' AND T2.state = 'ME' GROUP BY T1.maplight_id
legislator,"Give the type and start date of the term of the legislator born on November 26, 1727.","start date of the term refers to start; born on November 26, 1727 refers to birthday_bio = '1727-11-26';","SELECT T2.type, T2.start FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.birthday_bio = '1727-11-26'"
legislator,What is the contact form of the legislator named Rick Crawford?,,SELECT T2.contact_form FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Rick Crawford'
legislator,How many female representatives are there in Michigan?,female refers to gender_bio = 'F'; representatives refers to type = 'rep'; Michigan refers to state = 'MI';,SELECT COUNT(T.bioguide_id) FROM ( SELECT T1.bioguide_id FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.type = 'rep' AND T2.state = 'MI' AND T1.gender_bio = 'F' GROUP BY T1.bioguide_id ) T
legislator,"Among the female legislators, what is the percentage of the senators in Maine?","female refers to gender_bio = 'F'; percentage = MULTIPLY(DIVIDE(SUM(type = 'sen'), COUNT(type)), 100.0); senators refers to type = 'sen'; Maine refers to state = 'ME';",SELECT CAST(SUM(CASE WHEN T2.type = 'sen' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.type) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.state = 'ME' AND T1.gender_bio = 'F'
olympics,Please list the names of all the Olympic games that John Aalberg has taken part in.,name of the Olympic games refers to games_name;,SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'John Aalberg'
olympics,What was the name of the Olympic game that John Aalberg took part in when he was 31?,when he was 31 refers to age = 31; name of the Olympic games refers to games_name;,SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'John Aalberg' AND T2.age = 31
olympics,"When John Aalberg took part in the 1994 Winter Olympic Game, how old was he?",how old was he refers to age; 1994 Winter refers to games_name = '1994 Winter';,SELECT T2.age FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'John Aalberg' AND T1.games_name = '1994 Winter'
olympics,How many Olympic competitors are from Finland?,competitors refer to person_id; from Finland refers to region_name = 'Finland';,SELECT COUNT(T1.person_id) FROM person_region AS T1 INNER JOIN noc_region AS T2 ON T1.region_id = T2.id WHERE T2.region_name = 'Finland'
olympics,Please list the names of all the Olympic competitors from Finland.,names of competitors refer to full_name; from Finland refers to region_name = 'Finland';,SELECT T3.full_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Finland'
olympics,The Olympic competitor John Aalberg is from which region?,from which region refers to region_name;,SELECT T1.region_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'John Aalberg'
olympics,What is the NOC code of the region where the tallest male Olympic competitor is from?,NOC code of the region refers to noc; male refers to gender = 'M'; the tallest refers to MAX(height);,SELECT T1.noc FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.gender = 'M' ORDER BY T3.height DESC LIMIT 1
olympics,"Among all the Olympic competitors from Finland, how many of them are female?",competitors from Finland refer to id where region_name = 'Finland'; female refers to gender = 'F';,SELECT COUNT(T3.id) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Finland' AND T3.gender = 'F'
olympics,In which city was the 1992 Summer Olympic Games held?,In which city refers to city_name; 1992 Summer Olympic Games refer to games_name = '1992 Summer';,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T3.games_name = '1992 Summer'
olympics,Please list the names of the Olympic games that were held in London.,held in London refers to city_name = 'London';,SELECT T3.games_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'London'
olympics,In which year did London hold its earliest Olympic game?,In which year refers to games_year; London refers to city_name = 'London'; earliest Olympic game refers to MIN(games_year);,SELECT T3.games_year FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'London' ORDER BY T3.games_year LIMIT 1
olympics,For how many times has London held the Olympic games?,London refers to city_name = 'London'; how many times refer to COUNT(games_id);,SELECT COUNT(T1.games_id) FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id WHERE T2.city_name = 'London'
olympics,What is the average height of the male Olympic competitors from Finland?,"DIVIDE(SUM(height), COUNT(id)) where region_name = 'Finland' and gender = 'M';",SELECT AVG(T3.height) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Finland' AND T3.gender = 'M'
olympics,"Among the competitors of the 1994 Winter Olympic Game, what is the percentage of those from Finland?","DIVIDE(COUNT(id where region_name = 'Finland'), COUNT(id)) as percentage where games_name = '1994 Winter';",SELECT CAST(COUNT(CASE WHEN T5.region_name = 'Finland' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T3.id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id INNER JOIN person_region AS T4 ON T3.id = T4.person_id INNER JOIN noc_region AS T5 ON T4.region_id = T5.id WHERE T1.games_name = '1994 Winter'
olympics,"Which sport does the event ""Shooting Women's Trap"" belong to?","sport refers to sport_name; event ""Shooting Women's Trap"" refers to event_name = 'Shooting Women''s Trap';",SELECT T1.sport_name FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id WHERE T2.event_name LIKE 'Shooting Women%s Trap'
olympics,Which city was the host of 1936 Winter Olympic Games?,Which city refers to city_name; 1936 Winter Olympic refers to games_name = '1936 Winter';,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T3.games_name = '1936 Winter'
olympics,How many Olympic Games has London hosted?,London refers to city_name = 'London';,SELECT COUNT(T3.id) FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'London'
olympics,Tell the number of swimming related events.,swimming refers to sport_name = 'Swimming';,SELECT COUNT(T2.event_name) FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id WHERE T1.sport_name = 'Swimming'
olympics,"For Peter Kohnke, show the name of his/her region.",name of his/her region refers to region_name;,SELECT T1.region_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'Peter Kohnke'
olympics,Which game has Jessica Carolina Aguilera Aguilera participated in? Give the id of the game.,id of the game refers to games_id;,SELECT T2.games_id FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id WHERE T1.full_name = 'Jessica Carolina Aguilera Aguilera'
olympics,Show the name of the sport with the most events.,name of the sport with the most events refers to sport_name where MAX(COUNT(id));,SELECT T1.sport_name FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id GROUP BY T1.sport_name ORDER BY COUNT(T2.event_name) DESC LIMIT 1
olympics,Give the name of the tallest athlete from Sweden.,the tallest athlete refers to id where MAX(height); from Sweden refers to region_name = 'Sweden'; name refers to full_name;,SELECT T3.full_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Sweden' ORDER BY T3.height DESC LIMIT 1
olympics,How many athletes in the database are from Guatemala?,from Guatemala refers to region_name = 'Guatemala';,SELECT COUNT(T1.person_id) FROM person_region AS T1 INNER JOIN noc_region AS T2 ON T1.region_id = T2.id WHERE T2.region_name = 'Guatemala'
olympics,Who has participated in the most Olympic Games in the database?,Who refers to full_name; participated in the most Olympic Games refers to MAX(COUNT(games_id));,SELECT T1.full_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id GROUP BY T2.person_id ORDER BY COUNT(T2.person_id) DESC LIMIT 1
olympics,Show the name of the competitor id 90991.,name of the competitor refers to full_name;,SELECT T1.full_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id WHERE T2.id = 90991
olympics,How many competitor ids does Martina Kohlov have?,,SELECT COUNT(T2.id) FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id WHERE T1.full_name = 'Martina Kohlov'
olympics,Calculate the bmi of the competitor id 147420.,"DIVIDE(weight), MULTIPLY(height, height) where id = 147420;",SELECT CAST(T1.weight AS REAL) / (T1.height * T1.height) FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id WHERE T2.id = 147420
olympics,What is the percentage of male athletes from Estonia?,"DIVIDE(COUNT(id where gender = 'M'), COUNT(id)) as percentage where region_name = 'Estonia';",SELECT CAST(COUNT(CASE WHEN T3.gender = 'M' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.person_id) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Estonia'
olympics,Who is the youngest person who participated in the Olympics?,Who is the youngest person refers to full_name where MIN(age);,SELECT T1.full_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id ORDER BY T2.age LIMIT 1
olympics,How many 24 years old competitors competed in Men's Basketball?,24 years old competitors refer to id where age = 24; Men's Basketball refers to event_name = 'Basketball Men''s Basketball';,SELECT COUNT(T2.person_id) FROM competitor_event AS T1 INNER JOIN games_competitor AS T2 ON T1.competitor_id = T2.id INNER JOIN event AS T3 ON T1.event_id = T3.id WHERE T3.event_name LIKE 'Basketball Men%s Basketball' AND T2.age = 24
olympics,What are the names of the events under Art Competitions?,Art Competitions refer to sport_name = 'Art Competitions'; names of events refers to event_name;,SELECT T2.event_name FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id WHERE T1.sport_name = 'Art Competitions'
olympics,How many gold medals does Henk Jan Zwolle have?,gold medals refer to medal_name = 'Gold';,SELECT COUNT(T1.id) FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id INNER JOIN competitor_event AS T3 ON T2.id = T3.competitor_id INNER JOIN medal AS T4 ON T3.medal_id = T4.id WHERE T1.full_name = 'Henk Jan Zwolle' AND T4.medal_name = 'Gold'
olympics,What is the name of the event where competitors received the most gold medals?,received the most gold medals refers to MAX(COUNT(medal_name = 'Gold'));,SELECT T2.event_name FROM competitor_event AS T1 INNER JOIN event AS T2 ON T1.event_id = T2.id INNER JOIN medal AS T3 ON T1.medal_id = T3.id WHERE T3.medal_name = 'Gold' GROUP BY T2.id ORDER BY COUNT(T1.event_id) DESC LIMIT 1
olympics,How many athletes are from Australia?,from Australia refer region_name = 'Australia';,SELECT COUNT(T2.person_id) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id WHERE T1.region_name = 'Australia'
olympics,Which cities hosted at least 3 Olympic games?,cities refer to city_name; hosted at least 3 Olympic games refers to COUNT(games_id) > = 3;,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id GROUP BY T2.id HAVING COUNT(T1.games_id) >= 3
olympics,How many Summer games were held in Stockholm?,Summer games refer to id where season = 'Summer'; in Stockholm refers to city_name = 'Stockholm';,SELECT COUNT(T3.id) FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'Stockholm' AND T3.season = 'Summer'
olympics,Which region do most of the athletes are from?,region refers to region_name; most of the athletes refer to MAX(COUNT(person_id));,SELECT T2.region_name FROM person_region AS T1 INNER JOIN noc_region AS T2 ON T1.region_id = T2.id GROUP BY T2.region_name ORDER BY COUNT(T1.person_id) DESC LIMIT 1
olympics,Where was the first Olympic game held?,Where it was held refers to city_name; the first Olympic game refers to id where MIN(games_year);,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id ORDER BY T3.games_year LIMIT 1
olympics,What is the name of the game in which the oldest Olympian has ever participated?,the oldest Olympian refers to id where MAX(age); name of the game refers to games_name;,SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id ORDER BY T2.age LIMIT 1
olympics,How many athletes competed in the 1992 Summer Olympics?,1992 Summer Olympics refer to games_name = '1928 Summer';,SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '1928 Summer'
olympics,How many Olympic events did Michael Phelps II join in total? Find the percentage of the events where he won a gold medal.,"DIVIDE(COUNT(event_id where medal_name = 'Gold'), COUNT(event_id)) as percentage where full_name = 'Michael Fred Phelps, II';","SELECT COUNT(T3.event_id) , CAST(COUNT(CASE WHEN T4.id = '1' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T4.id) FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id INNER JOIN competitor_event AS T3 ON T2.id = T3.competitor_id INNER JOIN medal AS T4 ON T3.medal_id = T4.id WHERE T1.full_name = 'Michael Fred Phelps, II'"
olympics,"In the Winter and Summer Olympics of 1988, which game has the most number of competitors? Find the difference of the number of competitors between the two games.","the most number of competitors refer to MAX(COUNT(person_id)); SUBTRACT(COUNT(person_id where games_name = '1988 Summer'), COUNT(person_id where games_name = '1988 Winter'));","SELECT P1 , ( SELECT MAX(P2) - MIN(P2) FROM ( SELECT COUNT(T2.person_id) AS P2 FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name IN ('1988 Winter', '1988 Summer') GROUP BY T1.season ) ORDER BY P2 DESC LIMIT 1 ) FROM ( SELECT T1.season AS P1, COUNT(T2.person_id) AS P2 FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name IN ('1988 Winter', '1988 Summer') GROUP BY T1.season ) ORDER BY P2 DESC LIMIT 1"
olympics,What age of the competitors is the most numerous?,age is the most numerous refers to age where MAX(COUNT(person_id));,SELECT age FROM games_competitor GROUP BY age ORDER BY COUNT(person_id) DESC LIMIT 1
olympics,In which cities beginning with the letter M have the Olympic Games been held?,cities beginning with the letter M refer to city_name LIKE 'M%';,SELECT city_name FROM city WHERE city_name LIKE 'M%'
olympics,In which cities were the 1976 winter and summer games held?,"cities refer to city_name; 1976 winter and summer games refer to games_name IN ('1976 Winter', '1976 Summer');","SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T3.games_name IN ('1976 Summer', '1976 Winter')"
olympics,What was the medal that Coleen Dufresne got?,What medal refers to medal_name;,SELECT T4.medal_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id INNER JOIN competitor_event AS T3 ON T2.id = T3.competitor_id INNER JOIN medal AS T4 ON T3.medal_id = T4.id WHERE T1.full_name = 'Coleen Dufresne (-Stewner)'
olympics,What is the name of the competitor who has won the most medals?,name of the competitor refers to full_name; won the most medals refer to MAX(COUNT(medal_id));,SELECT T1.full_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id INNER JOIN competitor_event AS T3 ON T2.id = T3.competitor_id INNER JOIN medal AS T4 ON T3.medal_id = T4.id WHERE T4.id != 4 GROUP BY T1.full_name ORDER BY COUNT(T4.id) DESC LIMIT 1
olympics,Where is competitor Estelle Nze Minko from?,Where competitor is from refers to region_name;,SELECT T1.region_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'Estelle Nze Minko'
olympics,What is the name of all the sports Chin Eei Hui has competed in?,name of the sport refers to sport_name;,SELECT DISTINCT T1.sport_name FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id INNER JOIN competitor_event AS T3 ON T2.id = T3.event_id INNER JOIN games_competitor AS T4 ON T3.competitor_id = T4.id INNER JOIN person AS T5 ON T4.person_id = T5.id WHERE T5.full_name = 'Chin Eei Hui'
olympics,What is the name of the oldest person who participated in the Olympic Games?,the oldest person refers to person_id where MAX(age); name refers to full_name;,SELECT T1.full_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id ORDER BY T2.age DESC LIMIT 1
olympics,In which Olympic Games have the largest number of women participation?,the largest number of women participation refers to MAX(COUNT(gender = 'F')); In which Olympic Games refer to games_year;,SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.gender = 'F' GROUP BY T1.games_name ORDER BY COUNT(T2.person_id) DESC LIMIT 1
olympics,How many males from Belgium have participated in an Olympic Games?,males refer to gender = 'M'; Belgium refers to region_name = 'Belgium';,SELECT COUNT(T2.person_id) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Belgium' AND T3.gender = 'M'
olympics,How many persons participated in the Sapporo Olympics?,the Sapporo Olympics refer to games_id where city_name = 'Sapporo';,SELECT COUNT(T1.person_id) FROM games_competitor AS T1 INNER JOIN games_city AS T2 ON T1.games_id = T2.games_id INNER JOIN city AS T3 ON T2.city_id = T3.id WHERE T3.city_name = 'Sapporo'
olympics,In which Olympic Games has Morten Aleksander Djupvik participated?,In which Olympic Games refer to games_year;,SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'Morten Aleksander Djupvik'
olympics,How many persons in total have participated in 12 meter Mixed Sailing competitions?,12 meter Mixed Sailing competitions refer to event_name = 'Sailing Mixed 12 metres';,SELECT COUNT(T1.competitor_id) FROM competitor_event AS T1 INNER JOIN event AS T2 ON T1.event_id = T2.id INNER JOIN sport AS T3 ON T2.sport_id = T3.id WHERE T2.event_name = 'Sailing Mixed 12 metres'
olympics,How many different events are there of Modern Pentathlon?,Modern Pentathlon refers to sport_name = 'Modern Pentathlon';,SELECT COUNT(DISTINCT T2.event_name) FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id WHERE T1.sport_name = 'Modern Pentathlon'
olympics,"Calculate the percentage of women who have participated in Equestrianism Mixed Three-Day Event, Individual.","DIVIDE(COUNT(person_id where gender = 'F), COUNT(person_id)) as percentage where event_name = 'Equestrianism Mixed Three-Day Event, Individual';","SELECT CAST(COUNT(CASE WHEN T1.gender = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id INNER JOIN competitor_event AS T3 ON T2.id = T3.competitor_id INNER JOIN event AS T4 ON T3.event_id = T4.id WHERE T4.event_name = 'Equestrianism Mixed Three-Day Event, Individual'"
olympics,Calculate the average age of the persons who participated in the 1992 Summer Games.,"DIVIDE(SUM(age), COUNT(person_id)) where games_name = '1992 Summer';",SELECT AVG(T2.age) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.games_name = '1992 Summer'
olympics,List out years that only have summer games.,years refer to games_year; only have summer games refer to games_year where COUNT(games_name) = 1 and season = 'Summer';,SELECT games_year FROM games WHERE season != 'Winter' GROUP BY games_year HAVING COUNT(season) = 1
olympics,How many Olympics games were held during the 90s?,games refer to id; during the 90s refers to games_year BETWEEN 1990 AND 1999;,SELECT COUNT(games_year) FROM games WHERE games_year BETWEEN '1990' AND '1999'
olympics,How many athletes participated in the 2014 Winter Olympics?,athletes refer to person_id; 2014 Winter Olympics refer to games_name = '2014 Winter';,SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '2014 Winter'
olympics,How many athletes from region 151 have won a medal?,athletes refer to person_id; region 151 refers to region_id = 151; won a medal refers to medal_id <> 4;,SELECT COUNT(T3.person_id) FROM competitor_event AS T1 INNER JOIN games_competitor AS T2 ON T1.competitor_id = T2.id INNER JOIN person_region AS T3 ON T2.person_id = T3.person_id WHERE T3.region_id = 151 AND T1.medal_id != 4
olympics,How many athlete from China participate in the 2016 Summer Olympics?,athletes from China refer to person_id where region_name = 'China'; the 2016 Summer Olympics refer to games_name = '2016 Summer';,SELECT COUNT(T3.id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id INNER JOIN person_region AS T4 ON T3.id = T4.person_id INNER JOIN noc_region AS T5 ON T4.region_id = T5.id WHERE T1.games_name = '2016 Summer' AND T5.region_name = 'China'
olympics,How many gold medals were given to the winners in the Ice Hockey Men's Ice Hockey event?,gold medals given to the winners refer to competitor_id where medal_name = 'Gold'; Ice Hockey Men's Ice Hockey refers to event_name = 'Ice Hockey Men''s Ice Hockey';,SELECT COUNT(T2.competitor_id) FROM event AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.event_id WHERE T1.event_name LIKE 'Ice Hockey Men%s Ice Hockey' AND T2.medal_id = 1
olympics,Which region has the highest medal number?,region refers to region_name; the highest medal number refers to MAX(COUNT(medal_id <> 4));,SELECT T5.region_name FROM medal AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.medal_id INNER JOIN games_competitor AS T3 ON T2.competitor_id = T3.id INNER JOIN person_region AS T4 ON T3.person_id = T4.person_id INNER JOIN noc_region AS T5 ON T4.region_id = T5.id WHERE T1.id != 4 GROUP BY T5.region_name ORDER BY COUNT(T2.competitor_id) DESC LIMIT 1
olympics,List out all the gold medalist winners in cycling sport.,gold medalist winners refer to full_name where medal_name = 'Gold'; cycling sport refers to sport_name = 'Cycling';,SELECT DISTINCT T5.full_name FROM event AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.event_id INNER JOIN games_competitor AS T3 ON T2.competitor_id = T3.id INNER JOIN sport AS T4 ON T1.sport_id = T4.id INNER JOIN person AS T5 ON T3.person_id = T5.id WHERE T4.sport_name = 'Cycling' AND T2.medal_id = 1
olympics,List out all the medals won by Lee Chong Wei.,medals refer to medal_id where medal_id <> 4;,SELECT DISTINCT T1.medal_name FROM medal AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.medal_id INNER JOIN games_competitor AS T3 ON T2.competitor_id = T3.id INNER JOIN person AS T4 ON T3.person_id = T4.id WHERE T4.full_name = 'Lee Chong Wei' AND T2.medal_id <> 4
olympics,What is the percentage of female athletes below 20s who participated in the 2002 Winter Olympic?,"DIVIDE(COUNT(person_id where gender = 'F' and age < 20), COUNT(person_id)) as percentage where games_name = '2002 Winter';",SELECT CAST(COUNT(CASE WHEN T3.gender = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.games_name = '2002 Winter' AND T2.age < 20
olympics,What is the ratio male to female athletes in the 2012 Summer Olympic?,"DIVIDE(COUNT(gender = 'M'), COUNT(gender = 'F')) where games_name = '2012 Summer';",SELECT CAST(COUNT(CASE WHEN T3.gender = 'M' THEN 1 ELSE NULL END) AS REAL) / COUNT(CASE WHEN T3.gender = 'F' THEN 1 ELSE NULL END) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.games_name = '2012 Summer'
olympics,Which summer Olympic have the highest and lowest number of participants?,the highest number of participants refers to MAX(COUNT(person_id)); the lowest number of participants refers to MIN(COUNT(person_id)); Which summer Olympic refers to games_name where season = 'Summer';,"SELECT ( SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.season = 'Summer' GROUP BY T1.games_year ORDER BY COUNT(T2.person_id) DESC LIMIT 1 ) AS HIGHEST , ( SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.season = 'Summer' GROUP BY T1.games_year ORDER BY COUNT(T2.person_id) LIMIT 1 ) AS LOWEST"
olympics,How many athletes from Malaysia have won a medal?,Malaysia refers to region_name = 'Malaysia'; athletes won a medal refer to competitor_id where medal_id <> 4;,SELECT COUNT(T3.person_id) FROM medal AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.medal_id INNER JOIN games_competitor AS T3 ON T2.competitor_id = T3.id INNER JOIN person_region AS T4 ON T3.person_id = T4.person_id INNER JOIN noc_region AS T5 ON T4.region_id = T5.id WHERE T5.region_name = 'Malaysia' AND T1.id != 4
olympics,How many athletes playing in Canoeing fall into overweight BMI category in the 2008 Summer games?,"fall into overweight BMI category refers to DIVIDE(weight), MULTIPLY(height, height) < 30; Canoeing refers to a sport name; the 2008 Summer games refer to games_name = '2008 Summer';",SELECT COUNT(T5.id) FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id INNER JOIN competitor_event AS T3 ON T2.id = T3.event_id INNER JOIN games_competitor AS T4 ON T3.competitor_id = T4.id INNER JOIN person AS T5 ON T4.person_id = T5.id INNER JOIN games AS T6 ON T4.games_id = T6.id WHERE T1.sport_name = 'Canoeing' AND T6.games_name = '2008 Summer' AND T5.weight * 10000.0 / (T5.height * T5.height) BETWEEN 25.0 AND 30
olympics,What is the average height of male athletes playing basketball sport?,AVG(height) where sport_name = 'Basketball' and event_name = 'Basketball Men''s';,SELECT AVG(T5.height) FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id INNER JOIN competitor_event AS T3 ON T2.id = T3.event_id INNER JOIN games_competitor AS T4 ON T3.competitor_id = T4.id INNER JOIN person AS T5 ON T4.person_id = T5.id WHERE T1.sport_name = 'Basketball' AND T5.gender = 'M'
olympics,How many female athletes are from the Philippines?,female athletes refer to id where gender = 'F'; from the Philippines region_name = 'Philippines';,SELECT COUNT(T2.person_id) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Philippines' AND T3.gender = 'F'
olympics,Which region is Yao Ming from?,region refers to region_name;,SELECT T1.region_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'Yao Ming'
olympics,"At what age did Michael Fred Phelps, II join the Olympics?",At what age join the Olympics refers to MIN(age);,"SELECT T2.age FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id WHERE T1.full_name = 'Michael Fred Phelps, II' ORDER BY T2.age LIMIT 1"
olympics,How many athletes are there in the region where Clara Hughes is from?,,SELECT COUNT(person_id) FROM person_region WHERE region_id = ( SELECT T1.region_id FROM person_region AS T1 INNER JOIN person AS T2 ON T1.person_id = T2.id WHERE T2.full_name = 'Clara Hughes' )
olympics,How many Men's 200 Metres Freestyle events did Ian James Thorpe compete in?,Men's 200 Metres Freestyle events refer to event_name = 'Swimming Men''s 200 metres Freestyle'; events compete in refers to event_id;,SELECT COUNT(T1.id) FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id INNER JOIN competitor_event AS T3 ON T2.id = T3.competitor_id INNER JOIN event AS T4 ON T3.event_id = T4.id WHERE T1.full_name = 'Ian James Thorpe' AND T4.event_name LIKE 'Swimming Men%s 200 metres Freestyle'
olympics,How many times was Larysa Semenivna Latynina (Diriy-) declared as champion in Gymnastics Women's Individual All-Around?,Gymnastics Women's Individual All-Around refers to event_name = 'Gymnastics Women''s Individual All-Around'; declared as champion refers to medal_name = 'Gold' or medal_id = 1;,SELECT COUNT(T1.id) FROM event AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.event_id INNER JOIN games_competitor AS T3 ON T2.competitor_id = T3.id INNER JOIN person AS T4 ON T3.person_id = T4.id WHERE T4.full_name = 'Larysa Semenivna Latynina (Diriy-)' AND T1.event_name LIKE 'Gymnastics Women%s Individual All-Around' AND T2.medal_id = 1
olympics,What are the names of the cities where Carl Lewis Borack competed?,name of the cities refers to city_name,SELECT T4.city_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id INNER JOIN games_city AS T3 ON T2.games_id = T3.games_id INNER JOIN city AS T4 ON T3.city_id = T4.id WHERE T1.full_name = 'Carl Lewis Borack'
olympics,How many Olympic games were held in London?,London refers to city_name = 'London';,SELECT COUNT(T1.games_id) FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id WHERE T2.city_name = 'London'
olympics,Which city was the 1992 Summer Olympic held?,city refers to city_name; 1992 Summer Olympic refers to games_name = '1992 Summer';,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T3.games_name = '1992 Summer'
olympics,How many athletes over the age of 59 competed in the 2016 Summer Olympics?,over the age of 59 refers to age > 59; the 2016 Summer Olympics refer to games_name = '2016 Summer';,SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '2016 Summer' AND T2.age > 59
olympics,"Among the Olympic games held in Los Angeles, what is the name of the Olympic game that has the most number of competitors?",Los Angeles refers to city_name = 'Lost Angeles'; the Olympic game refers to games_name; the most number of competitors refers to MAX(COUNT(games_name));,SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN games_city AS T3 ON T2.games_id = T3.games_id INNER JOIN city AS T4 ON T3.city_id = T4.id WHERE T4.city_name = 'Los Angeles' GROUP BY T1.id ORDER BY COUNT(T2.person_id) DESC LIMIT 1
olympics,"How many 10-year old athletes participated in the Gymnastics Men's Parallel Bars, Teams event?","10-year old athletes refer to competitor_id where age = 10; Gymnastics Men's Parallel Bars, Teams refer to event_name = 'Gymnastics Men''s Parallel Bars, Teams';","SELECT COUNT(T2.person_id) FROM competitor_event AS T1 INNER JOIN games_competitor AS T2 ON T1.competitor_id = T2.id INNER JOIN event AS T3 ON T1.event_id = T3.id WHERE T3.event_name LIKE 'Gymnastics Men%s Parallel Bars, Teams' AND T2.age = 10"
olympics,What is the average age of the athletes from the United States of America who competed in the 2016 Summer Olympics?,AVG(age) where games_name = '2016 Summer' and region_name = 'USA';,SELECT AVG(T2.age) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person_region AS T3 ON T2.person_id = T3.person_id INNER JOIN noc_region AS T4 ON T3.region_id = T4.id WHERE T1.games_name = '2016 Summer' AND T4.region_name = 'USA'
olympics,"Which region does the NOC code ""COL"" stand for?","region refers to region_name; NOC code ""COL"" refers to noc = 'COL';",SELECT region_name FROM noc_region WHERE noc = 'COL'
olympics,State the name of sport id 19.,name of sport refers to sport_name,SELECT sport_name FROM sport WHERE id = 19
olympics,"Give the id of the event ""Shooting Mixed Skeet"".","""Shooting Mixed Skeet"" refers to event_name = 'Shooting Mixed Skeet';",SELECT id FROM event WHERE event_name = 'Shooting Mixed Skeet'
olympics,Provide hockey's sport id.,hockey's sport refers to sport_name = 'hockey';,SELECT id FROM sport WHERE sport_name = 'Hockey'
olympics,Tell the weight of Dagfinn Sverre Aarskog.,,SELECT weight FROM person WHERE full_name = 'Dagfinn Sverre Aarskog'
olympics,What is the id of Rio de Janeiro?,Rio de Janeiro refers to city_name = 'Rio de Janeiro';,SELECT id FROM city WHERE city_name = 'Rio de Janeiro'
olympics,"How many people have won the gold medal of the event ""Rowing Women's Coxed Eights""?","won the gold medal refers to medal_name = 'Gold'; event ""Rowing Women's Coxed Eights"" refers to event_name = 'Rowing Women''s Coxed Eights';",SELECT COUNT(T1.competitor_id) FROM competitor_event AS T1 INNER JOIN event AS T2 ON T1.event_id = T2.id INNER JOIN medal AS T3 ON T1.medal_id = T3.id WHERE T2.event_name LIKE 'Rowing Women%s Coxed Eights' AND T3.medal_name = 'Gold'
olympics,How many kinds of events belong to the sport of cycling?,kinds of events refer to event_name; sport of cycling refers to sport_name = 'Cycling';,SELECT COUNT(T2.event_name) FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id WHERE T1.sport_name = 'Cycling'
olympics,What is Vijay Singh Chauhan's region name?,,SELECT T1.region_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'Vijay Singh Chauhan'
olympics,When did Roma host the Olympic Games?,Roma refers to city_name = 'Roma'; When host refers to games_year;,SELECT T3.games_year FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'Roma'
olympics,How many 20 years old athletes were there in the 1984 Summer Olympic Games?,20 years old athletes refer to person_id where age = 20; 1984 Summer Olympic Games refer to games_name = '1984 Summer';,SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '1984 Summer' AND T2.age = 20
olympics,How many games has Prithipal Singh participated in?,games refer to games_id;,SELECT COUNT(T2.games_id) FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id WHERE T1.full_name = 'Prithipal Singh'
olympics,State the number of athletes in the 1984 Summer Olympic Games who were more than 50 years old.,the 1984 Summer Olympic Games refer to games_name = '1984 Summer'; athletes more than 50 years old refer to person_id where age > 50;,SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '1984 Summer' AND T2.age > 50
olympics,How many kinds of events does athletics have?,kinds of events refer to event_name; athletics refer to sport_name = 'Athletics';,SELECT COUNT(T2.event_name) FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id WHERE T1.sport_name = 'Athletics'
olympics,Who is the heaviest athlete from Russia?,the heaviest athlete refers to full_name where MAX(weight); from Russia refers to region_name = 'Russia';,SELECT T3.full_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Russia' ORDER BY T3.weight DESC LIMIT 1
olympics,Give the height of the tallest athlete from Portugal.,the tallest athlete refers to id where MAX(height); from Portugal refers to region_name = 'Portugal';,SELECT T3.height FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Portugal' ORDER BY T3.height DESC LIMIT 1
olympics,Tell the host city of the 1968 Winter Olympic Games.,host city refers to city_name; the 1968 Winter Olympic Games refer to games_name = '1968 Winter';,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T3.games_name = '1968 Winter'
olympics,Which region has the most athletes?,region refers to region_name; the most athletes refer to MAX(COUNT(region_name));,SELECT T2.region_name FROM person_region AS T1 INNER JOIN noc_region AS T2 ON T1.region_id = T2.id GROUP BY T2.region_name ORDER BY COUNT(T1.person_id) DESC LIMIT 1
olympics,What is the percentage of athletes from Vanuatu who are taller than 175?,"DIVIDE(COUNT(id where height > 175), COUNT(id)) as percentage where region_name = 'Vanuatu';",SELECT CAST(COUNT(CASE WHEN T3.height > 175 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.person_id) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Vanuatu'
olympics,Calculate the average weight of male athletes from Tonga.,AVG(weight) where region_name = 'Tonga' and gender = 'M';,SELECT AVG(T3.weight) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Tonga' AND T3.gender = 'M'
olympics,Where was the 1920 Summer held?,where it was held refers to city_name; the 1920 Summer refers to games_name = '1920 Summer';,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T3.games_name = '1920 Summer'
olympics,"From 1900 to 1992, how many games did London host?",From 1900 to 1992 refers to games_year BETWEEN 1900 AND 1992; London refers to city_name = 'London'; games refer to games_name;,SELECT COUNT(T3.id) FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'London' AND T3.games_year BETWEEN 1900 AND 1992
olympics,How many Summer games are there that were held in Paris?,Summer games refer to games_id where season = 'Summer'; Paris refers to city_name = 'Paris';,SELECT COUNT(T3.id) FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'Paris' AND T3.season = 'Summer'
olympics,Please list all game names that were held in Los Angeles.,Los Angeles refers to city_name = 'Los Angeles';,SELECT T3.games_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'Los Angeles'
olympics,Which city hosted the most games?,Which city refers to city_name; the most games refer to MAX(COUNT(city_name));,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id GROUP BY T2.city_name ORDER BY COUNT(T2.city_name) DESC LIMIT 1
olympics,What is the game name that was held in Beijing in 2008?,Beijing refers to city_name = 'Beijing'; in 2008 refers to games_year = '2008';,SELECT T3.games_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'Beijing' AND T3.games_year = 2008
olympics,What is the percentage of champions at the age of over 30?,"DIVIDE(COUNT(competitor_id where age > 30), COUNT(competitor_id))as percentage where medal_id = 1;",SELECT CAST(COUNT(CASE WHEN T2.age > 30 THEN 1 END) AS REAL) * 100 / COUNT(T2.person_id) FROM competitor_event AS T1 INNER JOIN games_competitor AS T2 ON T1.competitor_id = T2.id WHERE T1.medal_id = 1
olympics,At which age did A Lamusi participate in 2012 Summer?,2012 Summer refers to games_name = '2012 Summer';,SELECT T2.age FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.games_name = '2012 Summer' AND T3.full_name = 'A Lamusi'
olympics,How many competitors were there who participated in 2000 Summer with age 31?,in 2000 Summer refers to games_name = '2000 Summer'; age = 31,SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '2000 Summer' AND T2.age = 31
olympics,How many male competitors were there who participated in 1948 Summer?,male competitors refers to id where gender = 'M'; in 1948 Summer refers to games_name = '1948 Summer';,SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.games_name = '1948 Summer' AND T3.gender = 'M'
olympics,Please list all competitors' names who participated in 1936 Summer.,competitors' names refer to full_name; in 1936 Summer refers to games_name = '1936 Summer';,SELECT T3.full_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.games_name = '1936 Summer'
olympics,Who is the youngest competitor that participated in 2014 Winter?,the youngest competitor refers to full_name where MIN(age); in 2014 Winter refers to games_name = '2014 Winter';,SELECT T3.full_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.games_name = '2014 Winter' ORDER BY T2.age LIMIT 1
olympics,What is the average age of competitors who participated in 1988 Winter?,AVG(age) where games_name = '1988 Winter';,SELECT AVG(T2.age) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.games_name = '1988 Winter'
olympics,What is the percentage of female competitors whose heights are over 170 that participated in the game in 1988?,"DIVIDE(COUNT(person_id where gender = 'F' and height > 170), COUNT(person_id)) as percentage where games_year = 1988;",SELECT CAST(COUNT(CASE WHEN T3.gender = 'F' AND T3.height > 170 THEN 1 END) AS REAL) * 100 / COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.games_year = 1988
olympics,"What is the sport name of ""Cross Country Skiing Men's 10/15 kilometres Pursuit"" event?","""Cross Country Skiing Men's 10/15 kilometres Pursuit"" refers to event_name = 'Cross Country Skiing Men''s 10/15 kilometres Pursuit';",SELECT T1.sport_name FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id WHERE T2.event_name LIKE 'Cross Country Skiing Men%s 10/15 kilometres Pursuit'
olympics,What is the percentage of people whose age greater than 24 and participate in winter season?,"DIVIDE(COUNT(season = 'Winter' and age > 24), COUNT(person_id)) as percentage;",SELECT CAST(COUNT(CASE WHEN T2.age > 24 AND T1.season = 'Winter' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.games_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id
olympics,What is the region id of Christine Jacoba Aaftink?,,SELECT T1.region_id FROM person_region AS T1 INNER JOIN person AS T2 ON T1.person_id = T2.id WHERE T2.full_name = 'Christine Jacoba Aaftink'
olympics,Mention the height of people who belong to region id 7.,,SELECT T2.height FROM person_region AS T1 INNER JOIN person AS T2 ON T1.person_id = T2.id WHERE T1.region_id = 7
olympics,State the name of the city that held game id 3.,name of city refers to city_name,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id WHERE T1.games_id = 3
olympics,What are the id of the games held in London?,London refers to city_name = 'London';,SELECT T1.games_id FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id WHERE T2.city_name = 'London'
olympics,How many people who are below 30 and participated in the summer season?,people who are below 30 refer to person_id where age < 30; the summer season refers to season = 'Summer';,SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.season = 'Summer' AND T2.age < 30
olympics,List out the name of the game that the people participated in games id 13.,name of games refers to games_name;,SELECT DISTINCT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T2.games_id = 13
olympics,What is the average age of the people who participated in the winter season?,AVG(age) where season = 'Winter';,SELECT AVG(T2.age) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.season = 'Winter'
olympics,What is the percentage of the people who are under 35 and participated in the summer season?,DIVIDE(COUNT(age < 35) / COUNT(person_id)) as percentage where season = 'Summer';,SELECT CAST(COUNT(CASE WHEN T2.age < 35 THEN 1 END) AS REAL) * 100 / COUNT(T2.games_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.season = 'Summer'
olympics,State the event name of Basketball.,basketball refers to sport_name = 'Basketball';,SELECT T2.event_name FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id WHERE T1.sport_name = 'Basketball'
olympics,What is the name of medal that competitor id 9 obtained?,name of medal refers to medal_name;,SELECT DISTINCT T1.medal_name FROM medal AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.medal_id WHERE T2.competitor_id = 9
olympics,List out the id of event that achieve the gold medal.,the gold medal refers to medal_name = 'Gold';,SELECT T2.event_id FROM medal AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.medal_id WHERE T1.medal_name = 'Gold'
olympics,Who is the heaviest athlete?,Who refers to full_name; the heaviest refers to MAX(weight);,SELECT full_name FROM person ORDER BY weight DESC LIMIT 1
olympics,Which city were the Olympic games held in 1992?,city refers to city_name; in 1992 refers to games_year = 1992;,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T3.games_year = 1992
olympics,Which region is the majority of the athletes from?,region refers to region_name; the majority of the athletes from refer to MAX(COUNT(region_name));,SELECT T2.region_name FROM person_region AS T1 INNER JOIN noc_region AS T2 ON T1.region_id = T2.id GROUP BY T2.region_name ORDER BY COUNT(T1.person_id) DESC LIMIT 1
olympics,What is the name of the oldest competitor?,name refers to full_name; the oldest refers to MAX(age);,SELECT T1.full_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id ORDER BY T2.age DESC LIMIT 1
olympics,Which sport did John Aalberg participate in?,sport refers to sport_name;,SELECT DISTINCT T1.sport_name FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id INNER JOIN competitor_event AS T3 ON T2.id = T3.event_id INNER JOIN games_competitor AS T4 ON T3.competitor_id = T4.id INNER JOIN person AS T5 ON T4.person_id = T5.id WHERE T5.full_name = 'John Aalberg'
olympics,How many Belgian men have competed in an Olympic Games?,Belgian men refer to gender = 'M' where region_name = 'Belgium';,SELECT COUNT(T2.person_id) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Belgium' AND T3.gender = 'M'
olympics,How many athletes took part in the Olympic games held in Barcelona?,Barcelona refers to city_name = 'Barcelona';,SELECT COUNT(T1.person_id) FROM games_competitor AS T1 INNER JOIN games_city AS T2 ON T1.games_id = T2.games_id INNER JOIN city AS T3 ON T2.city_id = T3.id WHERE T3.city_name = 'Barcelona'
olympics,How many different football events are there?,events refer to event_name; football refers to sport_name = 'Football';,SELECT COUNT(T2.event_name) FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id WHERE T1.sport_name = 'Football'
olympics,What were the cities in which John Aalberg competed?,cities refer to city_name;,SELECT T4.city_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id INNER JOIN games_city AS T3 ON T2.games_id = T3.games_id INNER JOIN city AS T4 ON T3.city_id = T4.id WHERE T1.full_name = 'John Aalberg'
olympics,"In Barcelona, how many Olympic games were held?",Barcelona refers to city_name = 'Barcelona';,SELECT COUNT(T1.games_id) FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id WHERE T2.city_name = 'Barcelona'
olympics,How many competitors over the age of 30 participated in the 1992 Winter Olympics?,competitors over the age of 30 refer to person_id where age > 30; the 1992 Winter Olympics refers to games_name = '1992 Winter';,SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '1992 Winter' AND T2.age > 30
olympics,What is the name of the Olympic game with the most competitors held in Barcelona?,Barcelona refers to city_name = 'Barcelona'; the most competitors refer to MAX(COUNT(games_name)); name of game refers to games_name;,SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN games_city AS T3 ON T2.games_id = T3.games_id INNER JOIN city AS T4 ON T3.city_id = T4.id WHERE T4.city_name = 'Barcelona' GROUP BY T1.id ORDER BY COUNT(T2.person_id) DESC LIMIT 1
olympics,List the name of competitors from Argentina.,name refers to full_name; Argentina refers to region_name = 'Argentina';,SELECT T3.full_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Argentina'
olympics,What is the average age of Argentina's athletes who participated in the Summer Olympics in 2012?,AVG(age) where games_name = '2012 Summer' and region_name = 'Argentina';,SELECT AVG(T2.age) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person_region AS T3 ON T2.person_id = T3.person_id INNER JOIN noc_region AS T4 ON T3.region_id = T4.id WHERE T1.games_name = '2012 Summer' AND T4.region_name = 'Argentina'
olympics,Calculate the percentage of bronze medals won by men's basketball players.,"DIVIDE(COUNT(competitor_id where medal_name = 'Bronze'), COUNT(competitor_id)) as percentage where event_name = 'Basketball Men''s Basketball';",SELECT CAST(COUNT(CASE WHEN T4.medal_name = 'Bronze' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.person_id) FROM competitor_event AS T1 INNER JOIN games_competitor AS T2 ON T1.competitor_id = T2.id INNER JOIN event AS T3 ON T1.event_id = T3.id INNER JOIN medal AS T4 ON T1.medal_id = T4.id WHERE T3.event_name LIKE 'Basketball Men%s Basketball'
olympics,List the name of the games that Georgios Abaris participated.,name of games refers to games_name;,SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'Georgios Abaris'
olympics,Provide the name of competitors from Greece.,name refers to full_name; Greece refers to region_name = 'Greece';,SELECT T3.full_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Greece'
olympics,Calculate the average age of the competitors who participated in the 1924 Winter.,AVG(age) where games_name = '1924 Winter';,SELECT AVG(T2.age) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '1924 Winter'
olympics,What is the NOC code of the region of the competitors weighted 77 kg?,NOC code refers to noc; competitors weighted 77 kg refer to person_id where weight = 77;,SELECT T1.noc FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.weight = 77
olympics,List the names of the games held in Paris.,Paris refers to city_name = 'Paris'; names of games refers to games_name;,SELECT T3.games_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'Paris'
olympics,Provide the competitors' names who joined the 2000 Summer.,the competitors' names refer to full_name; the 2000 Summer refers to games_name = '2000 Summer';,SELECT T3.full_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.games_name = '2000 Summer'
olympics,In which city was the game held where the oldest competitor participated?,in which city refers to city_name; the oldest refers to MAX(age);,SELECT T4.city_name FROM games_competitor AS T1 INNER JOIN games AS T2 ON T1.games_id = T2.id INNER JOIN games_city AS T3 ON T1.games_id = T3.games_id INNER JOIN city AS T4 ON T3.city_id = T4.id ORDER BY T1.age DESC LIMIT 1
olympics,What is the name of the youngest competitor?,name refers to full_name; the youngest refers to MIN(age);,SELECT T1.full_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id ORDER BY T2.age LIMIT 1
olympics,List down the games ID of games held in Tokyo.,Tokyo refers to city_name = 'Tokyo';,SELECT T1.games_id FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id WHERE T2.city_name = 'Tokyo'
olympics,Give the NOC code and region name of the heaviest competitor.,NOC code refers to noc; the heaviest refers to MAX(weight);,"SELECT T1.noc, T1.region_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id ORDER BY T3.weight DESC LIMIT 1"
olympics,In what year and season did Sohail Abbas compete?,year refers to games_year;,"SELECT T1.games_year, T1.season FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'Sohail Abbas'"
olympics,What is the average weight of the competitors who won a silver medal?,AVG(weight) where medal_name = 'Silver';,SELECT AVG(T1.weight) FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id INNER JOIN competitor_event AS T3 ON T2.id = T3.competitor_id INNER JOIN medal AS T4 ON T3.medal_id = T4.id WHERE T4.medal_name = 'Silver'
olympics,In which city the 2004 Summer was held?,in which city refers to city_name; the 2004 Summer refers to games_name = '2004 Summer';,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T3.games_name = '2004 Summer'
olympics,"What is the season of the game where a competitor who weighted 73 kg and 180 cm tall, participated?",competitor who weighted 73 kg and 180 cm tall refers to person_id where height = 180 and weight = 73;,SELECT DISTINCT T1.season FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.height = 180 AND T3.weight = 73
olympics,Provide the names of competitors who received a gold medal.,names of competitors refer to full_name; gold medal refers to medal_name = 'Gold';,SELECT DISTINCT T1.full_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id INNER JOIN competitor_event AS T3 ON T2.id = T3.competitor_id INNER JOIN medal AS T4 ON T3.medal_id = T4.id WHERE T4.medal_name = 'Gold'
olympics,Compute the average height of competitors whose age ranges from 22 to 28.,AVG(height) where age BETWEEN 22 AND 28;,SELECT AVG(T1.height) FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id WHERE T2.age BETWEEN 22 AND 28
olympics,How many female competitors were from Iran?,female competitors refer to person_id where gender = 'F'; from Iran refers to region_name = 'Iran';,SELECT COUNT(T2.person_id) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Iran' AND T3.gender = 'F'
olympics,Provide the age of the tallest competitor.,the tallest refers to MAX(height);,SELECT T2.age FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id ORDER BY T1.height DESC LIMIT 1
olympics,"Among the competitors with age ranges 24 and below, calculate the difference between the number of competitors who weighed greater than 70 kg and competitors who weighted less than 70 kg.","SUBTRACT(COUNT(weight > 70), COUNT(weight < 70)) where age < 24;",SELECT COUNT(CASE WHEN T1.weight > 70 THEN 1 ELSE NULL END) - COUNT(CASE WHEN T1.weight < 70 THEN 1 ELSE NULL END) FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id WHERE T2.age < 24
olympics,"In the 2014 Winter game, what is the percentage of competitors who age 28 years old?","DIVIDE(COUNT(age = 28), COUNT(id)) as percentage where games_name = '2014 Winter';",SELECT CAST(COUNT(CASE WHEN T2.age = 28 THEN 1 END) AS REAL) * 100 / COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '2014 Winter'
olympics,"Among the males, list the region name of people with height greater than 87% of the average height of all people listed.","males refer to gender = 'M'; height greater than 87% of the average height refers to height > MULTIPLY(AVG(height), 0.87);",SELECT DISTINCT T1.region_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.gender = 'M' AND T3.height * 100 > ( SELECT AVG(height) FROM person WHERE gender = 'M' ) * 87
address,What is the total number of households in Arecibo county?,"""ARECIBO"" is the county; total number of households refer to sum(households)",SELECT SUM(T1.households) FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T2.county = 'ARECIBO'
address,Which residential area in Arecibo county has the highest average house value? Please give its zip_code.,"""ARECIBO"" is the county; highest average house value refers to Max(avg_house_value)",SELECT T1.zip_code FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T2.county = 'ARECIBO' ORDER BY T1.avg_house_value DESC LIMIT 1
address,Please list the numbers of males in all the residential areas in Arecibo county.,"""ARECIBO"" is the county; number of males refers to Sum(male_population)",SELECT SUM(T1.male_population) FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T2.county = 'ARECIBO'
address,"Among all the residential areas in Delaware, how many of them implement daylight saving?","""Delaware"" is a county; implement daylight savings refers to daylight_saving = 'Yes'",SELECT COUNT(T1.zip_code) FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T2.county = 'DELAWARE' AND T1.daylight_savings = 'Yes'
address,"Among all the residential areas in Arecibo county, what is the zip_code of the one with the highest white population?","""ARECIBO"" is the county; highest white population refers to Max(white_population)",SELECT T1.zip_code FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T2.county = 'ARECIBO' ORDER BY T1.white_population DESC LIMIT 1
address,In which county is the residential area with the highest average income per household located?,highest average income per household refers to Max(avg_income_per_household),SELECT T2.county FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T2.county = 'ARECIBO' GROUP BY T2.county ORDER BY T1.avg_income_per_household DESC LIMIT 1
address,Please list the names of all the counties with at least one residential area that implements daylight saving.,implements daylight savings refers to daylight_savings = 'Yes',SELECT DISTINCT T2.county FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T1.daylight_savings = 'Yes'
address,Please list the zip_codes of all the residential areas in Huntingdon county with over 30 employees.,over 30 employees refers to employee > 30; 'HUNTINGDON' is the county,SELECT DISTINCT T1.zip_code FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T2.county = 'HUNTINGDON' AND T1.employees > 30
address,"Please list the Asian populations of all the residential areas with the bad alias ""URB San Joaquin"".","""URB San Joaquin"" is the bad_alias",SELECT SUM(T1.asian_population) FROM zip_data AS T1 INNER JOIN avoid AS T2 ON T1.zip_code = T2.zip_code WHERE T2.bad_alias = 'URB San Joaquin'
address,"Among the residential areas with the bad alias ""Internal Revenue Service"", how many of them are in the Eastern time zone?","""Internal Revenue Service"" is the bad_alias; in Eastern time zone refers to time_zone = 'Eastern'",SELECT COUNT(T1.zip_code) FROM zip_data AS T1 INNER JOIN avoid AS T2 ON T1.zip_code = T2.zip_code WHERE T2.bad_alias = 'Internal Revenue Service' AND T1.time_zone = 'Eastern'
address,What is the bad alias of the residential area with the highest average house value?,highest average house value refers to Max(avg_house_value),SELECT T2.bad_alias FROM zip_data AS T1 INNER JOIN avoid AS T2 ON T1.zip_code = T2.zip_code WHERE T1.avg_house_value = ( SELECT MAX(avg_house_value) FROM zip_data ) LIMIT 1
address,Please list the bad alias of all the residential areas with a median female age of over 32.,median female age of over 32 refers to median_female_age > 32,SELECT DISTINCT T2.bad_alias FROM zip_data AS T1 INNER JOIN avoid AS T2 ON T1.zip_code = T2.zip_code WHERE T1.female_median_age > 32
address,What is the highest gender ratio of the residential areas in Arecibo county?,"""ARECIBO"" is the county; highest gender ration refers to Max(Divide (male_population, female_population))",SELECT CAST(T1.male_population AS REAL) / T1.female_population FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T2.county = 'ARECIBO' AND T1.female_population <> 0 ORDER BY 1 DESC LIMIT 1
address,What is the average median female age of all the residential areas in the Arecibo county?,"""ARECIBO"" is the county; average median female age = Divide (Sum(median_female_age), Count(country))",SELECT SUM(T1.female_median_age) / COUNT(T1.zip_code) FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T2.county = 'ARECIBO'
address,What is the area code of the city with the female median age over 32 years old?,,SELECT T1.area_code FROM area_code AS T1 INNER JOIN ZIP_Data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.female_median_age > 32 GROUP BY T1.area_code
address,What is the alias of the city called Hartford?,"""Hartford"" is the city",SELECT DISTINCT T2.alias FROM zip_data AS T1 INNER JOIN alias AS T2 ON T1.zip_code = T2.zip_code WHERE T1.city = 'Hartford'
address,How many counties are there in Alabama?,"""Alabama"" is the name",SELECT COUNT(T2.county) FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Alabama'
address,How many post offices are there in New York?,"""New York"" refers to state = 'NY' and name = 'New York'; 'Post Office' is the type",SELECT COUNT(DISTINCT T2.zip_code) FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T1.abbreviation = 'NY' AND T2.type = 'Post Office'
address,What are the precise locations of the cities with an area code of 787?,"precise location refers to latitude, longitude","SELECT T2.latitude, T2.longitude FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = '787' GROUP BY T2.latitude, T2.longitude"
address,"In California, how many delivery receptacles are there in the community post office that has the highest number of delivery receptacles?",in California refers to name = 'California' and state = 'CA'; 'Community Post Office' is the Type,SELECT COUNT(*) FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T1.abbreviation = 'CA' AND T2.type LIKE '%Community Post Office%' AND T1.name = 'California' AND T2.state = 'CA'
address,In which county can you find the city with the highest number of females?,highest number of females refers to Max(female_population),SELECT T4.county FROM zip_data AS T3 INNER JOIN country AS T4 ON T3.zip_code = T4.zip_code GROUP BY T4.county ORDER BY T3.female_population DESC LIMIT 1
address,What are the names of the states whose postal point is not affiliated with any organization?,postal point is not affiliated with any organization refers to division is null,SELECT DISTINCT T2.name FROM zip_data AS T1 INNER JOIN state AS T2 ON T1.state = T2.abbreviation WHERE T1.division IS NULL
address,"What is the difference in the most populated city of Allentown-Bethlehem-Easton, PA-NJ in 2020 against its population in 2010?","""Allentown-Bethlehem-Easton, PA-NJ"" is the CBSA_name; most populated city refers to Max(population_2020); difference = Subtract (population_2020, population_2011)","SELECT T1.population_2020 - T1.population_2010 AS result_data FROM zip_data AS T1 INNER JOIN CBSA AS T2 ON T1.CBSA = T2.CBSA WHERE T2.CBSA_name = 'Allentown-Bethlehem-Easton, PA-NJ' ORDER BY T1.population_2020 DESC LIMIT 1"
address,List all the zip codes in the county of New Castle in Delaware.,"""NEW CASTLE"" is the county; 'Delaware' is the name of state",SELECT DISTINCT T2.zip_code FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state WHERE T2.county = 'NEW CASTLE' AND T1.name = 'Delaware'
address,How many representatives are there in the state with the highest monthly benefit payments for retired workers?,state with highest monthly benefits payment for retired workers refers to Max(monthly_benefits_retired_workers),SELECT COUNT(T3.cognress_rep_id) FROM zip_data AS T1 INNER JOIN state AS T2 ON T1.state = T2.abbreviation INNER JOIN congress AS T3 ON T2.abbreviation = T3.abbreviation ORDER BY T1.monthly_benefits_retired_workers DESC LIMIT 1
address,"In the state where Lisa Murkowski is the representative, how many cities have zero employees?",zero employee refers to employees = 0,SELECT COUNT(T3.city) FROM congress AS T1 INNER JOIN state AS T2 ON T1.abbreviation = T2.abbreviation INNER JOIN zip_data AS T3 ON T2.abbreviation = T3.state WHERE T1.first_name = 'Murkowski' AND T1.last_name = 'Lisa' AND T3.employees = 0
address,What are the top 3 states with the highest Asian population? List the full names of all the representatives in the said states.,"city with highest asian population refers to Max(Sum(asian_population)); full name refers to first_name, last_name","SELECT t.state, T1.first_name, T1.last_name FROM zip_data AS T INNER JOIN congress AS T1 ON t.state = T1.abbreviation GROUP BY t.state ORDER BY SUM(t.asian_population) DESC LIMIT 3"
address,Which state is Outagamie County in? Give the full name of the state.,"""OUTAGAMIE"" is the county",SELECT DISTINCT T2.name FROM country AS T1 INNER JOIN state AS T2 ON T1.state = T2.abbreviation WHERE T1.county = 'OUTAGAMIE'
address,What party does the area with the zip code 91701 belong to?,,SELECT T1.party FROM congress AS T1 INNER JOIN state AS T2 ON T1.abbreviation = T2.abbreviation INNER JOIN zip_data AS T3 ON T2.abbreviation = T3.state WHERE T3.zip_code = 91701 GROUP BY T1.party
address,How many males are there in New Haven County's residential areas?,"""NEW HAVEN"" is the county; male refers to male_population",SELECT SUM(T1.male_population) FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T2.county = 'NEW HAVEN'
address,"Show the alias for the county at coordinate (18.090875, -66.867756).","coordinates refers to latitude, longitude; latitude = '18.090875; longitude = '-66.867756'",SELECT T2.alias FROM zip_data AS T1 INNER JOIN alias AS T2 ON T1.zip_code = T2.zip_code WHERE T1.latitude = 18.090875 AND T1.longitude = -66.867756
address,"For the city with the most elders, what's its area code?",city with most elders refers to Max(over_65),SELECT T2.area_code FROM zip_data AS T1 INNER JOIN area_code AS T2 ON T1.zip_code = T2.zip_code GROUP BY T2.area_code ORDER BY T1.over_65 DESC LIMIT 1
address,"For the county represented by Thompson Bennie G, how many bad aliases does it have?",,SELECT COUNT(DISTINCT T2.bad_alias) FROM zip_congress AS T1 INNER JOIN avoid AS T2 ON T1.zip_code = T2.zip_code INNER JOIN congress AS T3 ON T1.district = T3.cognress_rep_id WHERE T3.first_name = 'Thompson' AND T3.last_name = 'Bennie G'
address,Give the location coordinates of the city with area code 636.,"location coordinate refers to (latitude, longitude)","SELECT T2.latitude, T2.longitude FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = 636"
address,Show the zip code of the county represented by Buchanan Vernon.,,SELECT T2.zip_code FROM congress AS T1 INNER JOIN zip_congress AS T2 ON T1.cognress_rep_id = T2.district WHERE T1.first_name = 'Buchanan' AND T1.last_name = 'Vernon'
address,Which state is area code 878 in? Give the name of the state.,,SELECT T2.state FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = 878
address,How many counties are there in Virginia State?,"""Virginia"" is the state",SELECT COUNT(T2.county) FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Virginia'
address,Give the name and the position of the cbsa officer from the area with the zip code 45503.,"position refers to latitude, longitude","SELECT T1.CBSA_name, T2.latitude, T2.longitude FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T2.zip_code = 45503 GROUP BY T1.CBSA_name, T2.latitude, T2.longitude"
address,Tell the name of the county which is represented by Hartzler Vicky.,name of county refers to county,SELECT T1.county FROM country AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code INNER JOIN congress AS T3 ON T2.district = T3.cognress_rep_id WHERE T3.first_name = 'Hartzler' AND T3.last_name = 'Vicky' GROUP BY T1.county
address,Calculate the average male median age of all the residential areas in Windham county.,"average male median age refers to Divide (Sum(male_median_age), Count(county)); 'WINDHAM' is the county",SELECT SUM(T2.male_median_age) / COUNT(T2.median_age) FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.county = 'WINDHAM'
address,"For the county where DeSantis Ron is from, what is the average female median age?","average female median age refers to Divide (Sum(female_median_age), Count(county))",SELECT SUM(T4.female_median_age) / COUNT(T1.county) FROM country AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code INNER JOIN congress AS T3 ON T2.district = T3.cognress_rep_id INNER JOIN zip_data AS T4 ON T1.zip_code = T4.zip_code WHERE T3.first_name = 'DeSantis' AND T3.last_name = 'Ron'
address,"What is the area code of Bishopville, SC?","""Bishopville"" is the city; 'SC' is the state",SELECT T1.area_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.city = 'Bishopville' AND T2.state = 'SC'
address,"Name the bad alias of Geneva, AL.","""Geneva"" is the city; 'AL' is the state",SELECT T1.bad_alias FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.city = 'Geneva' AND T2.state = 'AL'
address,Which city and state has the bad alias of Lawrenceville?,"""Lawrenceville"" is the bad_alias","SELECT T2.city, T2.state FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.bad_alias = 'Lawrenceville' GROUP BY T2.city, T2.state"
address,Name both the alias and the bad alias of zip code 38015.,,"SELECT T1.alias, T2.bad_alias FROM alias AS T1 INNER JOIN avoid AS T2 ON T1.zip_code = T2.zip_code WHERE T1.zip_code = 38015"
address,What is the zip code of the district represented by Steven A King?,,SELECT T2.zip_code FROM congress AS T1 INNER JOIN zip_congress AS T2 ON T1.cognress_rep_id = T2.district WHERE T1.first_name = 'King' AND T1.last_name = 'Steven A'
address,"What is the CBSA name and type in York, ME?","""York"" is the city; 'ME' is the state; type refers to CBSA_type","SELECT T1.CBSA_name, T1.CBSA_type FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T2.city = 'York' AND T2.state = 'ME'"
address,List 10 cities with a median age over 40. Include their zip codes and area codes.,median age over 40 refers to median_age > 40,"SELECT T2.city, T2.zip_code, T1.area_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.median_age >= 40 LIMIT 10"
address,Name the county that has the bad alias of Druid Hills.,"""Druid Hills"" is the bad_alias",SELECT T2.county FROM avoid AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T1.bad_alias = 'Druid Hills'
address,What is the area code of Phillips county in Montana?,"""PHILLIPS"" is the county; 'Montana' is the name of state",SELECT DISTINCT T1.area_code FROM area_code AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code INNER JOIN state AS T3 ON T2.state = T3.abbreviation WHERE T2.county = 'PHILLIPS' AND T3.name = 'Montana'
address,Which district has the largest land area in Wisconsin? Write the full name of the congress representative and include the postal codes.,"""Wisconsin"" is the state; largest land area refers to Max(land_area); full name refers to first_name, last_name; postal code refers to zip_code","SELECT T2.zip_code, T1.first_name, T1.last_name FROM congress AS T1 INNER JOIN zip_congress AS T2 ON T1.cognress_rep_id = T2.district WHERE T1.state = 'Wisconsin' ORDER BY T1.land_area DESC LIMIT 1"
address,How many states are in the central time zone? Write their full names.,central time zone refers to time_zone = 'Central',SELECT SUM(CASE WHEN T1.time_zone = 'Central' THEN 1 ELSE 0 END) AS count FROM zip_data AS T1 INNER JOIN state AS T2 ON T2.abbreviation = T1.state WHERE T1.time_zone = 'Central'
address,"Name 10 cities with their states that are under the Lexington-Fayette, KY office of the Canada Border Services Agency.","""Lexington-Fayette, KY"" is the CBSA_name","SELECT DISTINCT T2.city, T2.state FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_name = 'Lexington-Fayette, KY' LIMIT 10"
address,What is the percentage ratio between Democrats and Republicans in Indiana? List the zip codes belonging to Democrats.,"""Democrats"" and ""Republicans"" refers to party = 'Democrat"" and party = 'Republican'; percentage ratio = Multiply (Divide (Count(party = 'Democrat""), Count(party = 'Republican')), 100)",SELECT CAST(COUNT(CASE WHEN T2.party = 'Democrat' THEN 1 ELSE NULL END) AS REAL) / COUNT(CASE WHEN T2.party = 'Republican' THEN 1 ELSE NULL END)FROM zip_congress AS T1 INNER JOIN congress AS T2 ON T2.cognress_rep_id = T1.district
address,Calculate the ratio between the number of representatives in Alabama and the number of representatives in Illinois.,"""Alabama"" and ""Illinois"" are both state; Ratio = Divide (Count(state = 'Alabama'), Count(state = 'Illinois'))",SELECT CAST(COUNT(CASE WHEN state = 'Alabama' THEN cognress_rep_id ELSE NULL END) AS REAL) / COUNT(CASE WHEN state = 'Illinois' THEN cognress_rep_id ELSE NULL END) FROM congress
address,Calculate the average of 2020's population in each zip code.,"average of 2020 population in each zip code refers to Divide (Sum(population_2020), Count(zip_code))",SELECT CAST(SUM(population_2020) AS REAL) / COUNT(zip_code) FROM zip_data
address,"State the male population for all zip code which were under the Berlin, NH CBSA.","""Berlin, NH"" is the CBSA_name","SELECT T2.male_population FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_name = 'Berlin, NH' GROUP BY T2.male_population"
address,Which CBSAs have more than 10 zip codes?,has more than 10 zip codes refers to CBSA where count(CBSA) > 10,SELECT T1.CBSA_name FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA GROUP BY T1.CBSA HAVING COUNT(T2.zip_code) > 10
address,List all the bad alias for zip codes in Puerto Rico.,"""Puerto Rico"" refers to state = 'PR'",SELECT T1.bad_alias FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.state = 'PR'
address,What is the longitude and latitude for the district represented by Grayson Alan?,,"SELECT T1.latitude, T1.longitude FROM zip_data AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code INNER JOIN congress AS T3 ON T2.district = T3.cognress_rep_id WHERE T3.first_name = 'Grayson' AND T3.last_name = 'Alan'"
address,What is the state for area code of 787?,,SELECT DISTINCT T2.state FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = 787
address,List all representatives of districts which have more than 30 000 population in 2020.,"more than 30000 population in 2020 refers to population_2020 > 30000; representative refers to first_name, last_name","SELECT T3.first_name, T3.last_name FROM zip_data AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code INNER JOIN congress AS T3 ON T2.district = T3.cognress_rep_id WHERE T1.population_2020 > 30000 GROUP BY T3.first_name, T3.last_name"
address,Which zip code in Massachusetts that have more than 1 area code?,"""Massachusetts"" is the state; zip code more than 1 area code refers to Count (zip_code) > 1",SELECT T1.zip_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.state = 'MA' GROUP BY T1.zip_code HAVING COUNT(T1.area_code) > 1
address,State the county for Arecibo City.,"""Arecibo"" is the city",SELECT DISTINCT T1.county FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.city = 'Arecibo'
address,"How many zip codes are under Barre, VT?","""Barre, VT"" is the CBSA_name","SELECT COUNT(T2.zip_code) FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_name = 'Barre, VT'"
address,"Among the zip code under Saint Croix county, which zip code has the biggest land area?","biggest land area refers to Max(land_area); ""SAINT CROIX"" is the county",SELECT T1.zip_code FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.county = 'SAINT CROIX' ORDER BY T2.land_area DESC LIMIT 1
address,Calculate the difference between the 2020 population and the 2010 population for the districts represented by Griffin Tim.,"difference = Subtract (population_2020, population_2010)",SELECT T1.population_2020 - T1.population_2010 FROM zip_data AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code INNER JOIN congress AS T3 ON T2.district = T3.cognress_rep_id WHERE T3.first_name = 'Griffin' AND T3.last_name = 'Tim'
address,"Based on the population in 2020, calculate the percentage for the population of Asian in the zip code where the CBSA was Atmore, AL.","""Atmore, AL"" is CBSA_name; percentage = Divide(asian_population, population_2020) * 100","SELECT CAST(T2.asian_population AS REAL) * 100 / T2.population_2010 FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_name = 'Atmore, AL'"
address,"Among the cities with an area code 939, which city has the highest Asian population?",highest asian population refers to Max(asian_population),SELECT T2.city FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = 939 ORDER BY T2.asian_population DESC LIMIT 1
address,Give the name of the country and state of the city with elevation of 1039.,elevation of 1039 refers to elevation = 1039,"SELECT DISTINCT T1.name, T2.state FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state INNER JOIN zip_data AS T3 ON T2.zip_code = T3.zip_code WHERE T3.elevation = 1039"
address,Provide the alias and elevation of the city with zip code 1028.,,"SELECT T1.alias, T2.elevation FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.zip_code = 1028"
address,What is the area code of the city with the largest land area?,largest land area refers to Max(land_area),SELECT T1.area_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.land_area = ( SELECT MAX(land_area) FROM zip_data )
address,Give the area code of the city with the white population ranging between 1700 to 2000.,,SELECT T1.area_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.white_population BETWEEN 1700 AND 2000
address,What is the Asian population in the city with the alias Leeds?,,SELECT SUM(T2.asian_population) FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.alias = 'Leeds'
address,List down the area code and country of the city named Savoy.,Savoy is the city;,"SELECT T1.area_code, T2.county FROM area_code AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code INNER JOIN zip_data AS T3 ON T1.zip_code = T3.zip_code WHERE T3.city = 'Savoy'"
address,What are the alias of the cities with 0 population in 2010?,with 0 population in 2010 refers to population_2010 = 0;,SELECT DISTINCT T1.alias FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.population_2010 = 0
address,"Among the cities with area code 608, how many cities implement daylight savings?",implement daylight savings refers to daylight_savings = 'Yes';,SELECT COUNT(T2.city) FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = 608 AND T2.daylight_savings = 'Yes'
address,Provide the average elevation of the cities with alias Amherst.,AVG(elevation) where alias = 'Amherst';,SELECT AVG(T2.elevation) FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.alias = 'Amherst'
address,What is the country and state of the city named Dalton?,Dalton is the city;,SELECT T2.county FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state INNER JOIN zip_data AS T3 ON T2.zip_code = T3.zip_code WHERE T3.city = 'Dalton' GROUP BY T2.county
address,Give at least five alias of cities with a postal point of post office.,postal point of post office refers to type = 'Post Office';,SELECT T1.alias FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.type = 'Post Office' LIMIT 5
address,What is the difference in the number of cities with P.O. box only and cities with Post Office among the cities with area code 787?,"SUBTRACT(COUNT(type = 'P.O. Box Only'), COUNT(type = 'Post Office')) where area_code = 787;",SELECT COUNT(CASE WHEN T2.type = 'P.O. Box Only' THEN 1 ELSE NULL END) - COUNT(CASE WHEN T2.type = 'Post Office' THEN 1 ELSE NULL END) AS DIFFERENCE FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = 787
address,"Among the cities belonging to the country named Arroyo, calculate the percentage of increase in the population in these cities from 2010 to 2020.","DIVIDE(SUBTRACT(SUM(population_2020)), SUM(population_2010)), SUM(population_2010) as percentage where county = 'ARROYO';",SELECT CAST((SUM(T2.population_2020) - SUM(T2.population_2010)) AS REAL) * 100 / SUM(T2.population_2010) FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.city = 'Arroyo'
address,"Among the postal points in Texas, provide the zip codes and cities of postal points which have total beneficiaries of above 10000.","Texas is the name of the state, in which name = 'Texas'; total beneficiaries of above 10000 refer to total_beneficiaries > 10000;","SELECT T2.zip_code, T2.city FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Texas' AND T2.total_beneficiaries > 10000"
address,"Among the postal points in the District of Columbia, how many of them have an area with above 20000 black population?",District of Columbia refers to county = 'DISTRICT OF COLUMBIA'; postal points refer to zip_code; area with above 20000 black population refers to black_population > 20000;,SELECT COUNT(T1.zip_code) FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.county = 'DISTRICT OF COLUMBIA' AND T2.black_population > 20000
address,Provide the city where zip code 19019 is located and the alias of that city.,,"SELECT T2.city, T1.alias FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.zip_code = 19019"
address,List the bad alias of the postal point located in Camuy.,postal points refer to zip_code; Camuy is the city;,SELECT T1.bad_alias FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.city = 'Camuy'
address,"Provide the zip code, city, and congress representative's full names of the area which has highest population in 2020.","representative's full names refer to first_name, last_name; area which has highest population in 2020 refers to MAX(population_2020);","SELECT T1.zip_code, T1.city, T3.first_name, T3.last_name FROM zip_data AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code INNER JOIN congress AS T3 ON T2.district = T3.cognress_rep_id GROUP BY T2.district ORDER BY T1.population_2020 DESC LIMIT 1"
address,"Among the daylight savings areas in the Midwest region, how many postal points are there in Illinois?","postal points refer to zip_code; the daylight savings areas refer to daylight_savings = 'Yes'; Illinois is the name of the state, in which name = 'Illinois';",SELECT COUNT(T2.zip_code) FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Illinois' AND T2.daylight_savings = 'Yes' AND T2.region = 'Midwest'
address,Provide the countries and the zip codes in the Virgin Islands.,the Virgin Islands refer to state where name = 'Virgin Islands';,"SELECT T2.county, T2.zip_code FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Virgin Islands'"
address,Provide the zip codes and the alias of Greeneville.,Greeneville is the city;,"SELECT T2.zip_code, T1.alias FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.city = 'Greeneville'"
address,Compare the numbers of postal points under Smith Adrian and Heck Joe.,COUNT(zip_code where first_name = 'Smith' and last_name = 'Adrian') > COUNT(zip_code where first_name = 'Heck' and last_name = 'Joe');,SELECT CASE WHEN COUNT(CASE WHEN T1.first_name = 'Smith' AND T1.last_name = 'Adrian' THEN T2.zip_code ELSE NULL END) > COUNT(CASE WHEN T1.first_name = 'Heck' AND T1.last_name = 'Joe' THEN T2.zip_code ELSE NULL END) THEN 'Smith Adrian>Heck Joe' ELSE 'Smith Adrian<=Heck Joe' END AS COMPARE FROM congress AS T1 INNER JOIN zip_congress AS T2 ON T1.cognress_rep_id = T2.district
address,Provide the zip codes and CBSA officers of the postal point in Oxford.,CBSA officers refer to CBSA_name; postal point refers to zip_code; Oxford is the city;,"SELECT T2.zip_code, T1.CBSA_name FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T2.city = 'Oxford'"
address,"Provide the zip codes and their affiliated organization for the postal point under Kingsport-Bristol, TN-VA.","postal point under Kingsport-Bristol, TN-VA refers to zip_code where CBSA_name = 'Kingsport-Bristol, TN-VA'; affiliated organization refers to organization from CBSA;","SELECT T2.zip_code, T2.organization FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_name = 'Kingsport-Bristol, TN-VA'"
address,Provide the zip codes and the congress representatives' names of the postal points which are affiliated with Readers Digest.,"representative's full names refer to first_name, last_name; postal points affiliated with Readers Digest refer to zip_code where organization = 'Readers Digest';","SELECT T1.zip_code, T3.first_name, T3.last_name FROM zip_data AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code INNER JOIN congress AS T3 ON T2.district = T3.cognress_rep_id WHERE T1.organization = 'Readers Digest'"
address,"Among the postal points in California, calculate the percentage of them in post office types.","DIVIDE(COUNT(zip_code where type = 'Post Office'), COUNT(zip_code)) as percentage where name = 'California';",SELECT CAST(COUNT(CASE WHEN T2.type = 'Post Office' THEN T2.zip_code ELSE NULL END) AS REAL) * 100 / COUNT(T2.zip_code) FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'California'
address,What are the zip code for the Senate house?,House of Repsentatives can stand for senate house,SELECT T2.zip_code FROM congress AS T1 INNER JOIN zip_congress AS T2 ON T1.cognress_rep_id = T2.district WHERE T1.House = 'House of Repsentatives' GROUP BY T2.zip_code
address,Which city has the most bad aliases?,the most bad aliases refer to MAX(COUNT(bad_alias));,SELECT T2.city FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code GROUP BY T1.bad_alias ORDER BY COUNT(T1.zip_code) DESC LIMIT 1
address,List all the counties in Georgia.,"Georgia is the name of the state, in which name = 'Georgia';",SELECT T2.county FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Georgia' GROUP BY T2.county
address,"List all the locations of postal points with the area code ""410"".",latitude and longitude coordinates can be used to identify the location; postal points refer to zip_code;,"SELECT T2.latitude, T2.longitude FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = 410"
address,What is the name of the CBSA of the city with the highest average house value?,the highest average house value refers to avg_house_value;,SELECT DISTINCT T1.CBSA_name FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T2.avg_house_value = ( SELECT MAX(avg_house_value) FROM zip_data ) LIMIT 1
address,What are the bad aliases of the postal points from East Setauket?,East Setauket is the city;,SELECT T1.bad_alias FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.city = 'East Setauket'
address,What was the population of Wilcox County in 2010?,population of Wilcox County in 2010 refers to SUM(population_2010) where county = 'WILCOX';,SELECT SUM(T2.population_2010) FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.county = 'WILCOX'
address,What is the code of the area with the largest Asian population?,the code of the area refers to area_code; area with the largest Asian population refers to MAX(asian_population);,SELECT T1.zip_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code GROUP BY T2.asian_population ORDER BY T2.asian_population DESC LIMIT 1
address,List all the cities with micro CBSA.,micro CBSA refers to CBSA_type = 'Micro';,SELECT T2.city FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_type = 'Micro'
address,What is the name of the state with the most counties?,the most counties refer to MAX(COUNT(county));,SELECT T1.name FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state GROUP BY T2.state ORDER BY COUNT(T2.county) DESC LIMIT 1
address,"What is the number of households in the ""FL-10"" district?",,SELECT SUM(CASE WHEN T2.district = 'FL-10' THEN 1 ELSE 0 END) FROM zip_data AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code
address,"What is the average household income in the city known as ""Danzig""?","average household income refers to avg_income_per_household; city known as ""Danzig"" refers to bad_alias = 'Danzig';",SELECT T2.avg_income_per_household FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.bad_alias = 'Danzig'
address,What are the states with an above-average female population?,"above-average female population refers to female_population > DIVIDE(SUM(female_population), COUNT(state));",SELECT DISTINCT T2.state FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T2.female_population > ( SELECT AVG(female_population) FROM zip_data )
address,"What percentage of households are in ""Coroyell"" out of its state?","DIVIDE(SUM(households where county = 'CORYELL'), SUM(households)) as percentage;",SELECT CAST(SUM(CASE WHEN T1.county = 'CORYELL' THEN T2.households ELSE 0 END) AS REAL) * 100 / SUM(T2.households) FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code
address,What is the name and the position of the CBSA officer in the city of Cabo Rojo?,name of the CBSA officer refers to CBSA_name; position of the CBSA officer refers to CBSA_type;,"SELECT T1.CBSA_name, T1.CBSA_type FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T2.city = 'Cabo Rojo' GROUP BY T1.CBSA_name, T1.CBSA_type"
address,Indicate the country name of the city Las Marias.,,SELECT T1.county FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.city = 'Las Marias'
address,How many cities does congressman Pierluisi Pedro represent?,,SELECT COUNT(DISTINCT T1.city) FROM zip_data AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code INNER JOIN congress AS T3 ON T2.district = T3.cognress_rep_id WHERE T3.first_name = 'Pierluisi' AND T3.last_name = 'Pedro'
address,Provide the names of bad aliases in the city of Aguadilla.,,SELECT T1.bad_alias FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.city = 'Aguadilla'
address,Indicate the name of the congressman represent in Guanica.,"name of congressman implies full name which refers to first_name, last_name; Guanica is the city;","SELECT T3.first_name, T3.last_name FROM zip_data AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code INNER JOIN congress AS T3 ON T2.district = T3.cognress_rep_id WHERE T1.city = 'Guanica'"
address,Which state has the most bad aliases?,the most bad aliases refer to MAX(COUNT(bad_alias));,SELECT T2.state FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code GROUP BY T2.state ORDER BY COUNT(T1.bad_alias) DESC LIMIT 1
address,What is the difference in the number of bad alias between Aguada city and Aguadilla city?,"SUBTRACT(COUNT(bad_alias where city = 'Aguada'), COUNT(bad_alias where city = 'Aguadilla'));",SELECT COUNT(CASE WHEN T2.city = 'Aguada' THEN T1.bad_alias ELSE NULL END) - COUNT(CASE WHEN T2.city = 'Aguadilla' THEN T1.bad_alias ELSE NULL END) AS DIFFERENCE FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code
address,Which state has greater than 50 CBSA officers of metro type?,greater than 50 CBSA officers of metro type refers to COUNT(CBSA_type = 'Metro') > 50;,SELECT T2.state FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_type = 'Metro' GROUP BY T2.state HAVING COUNT(T1.CBSA_type) > 50
address,Provide the population of Arecibo in 2020.,population of Arecibo in 2020 refers to SUM(population_2020) where county = 'ARECIBO';,SELECT SUM(T2.population_2020) FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.county = 'ARECIBO'
address,Indicate the name of the country with a population greater than 10000 in 2010.,population greater than 10000 in 2010 refers to population_2010 > 10000;,SELECT DISTINCT T1.county FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.population_2010 > 10000
address,Name the country with the largest number of households in a residential area.,the largest number of households refers to MAX(households);,SELECT T1.county FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code GROUP BY T1.county ORDER BY T2.households DESC LIMIT 1
address,Calculate the percentage of households in residential areas of countries over 10000.,"DIVIDE(SUM(households > 10000), SUM(households)) as percentage;",SELECT CAST(COUNT(CASE WHEN T2.households > 10000 THEN T1.zip_code ELSE NULL END) AS REAL) * 100 / COUNT(T1.zip_code) FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code
address,"Among the types of postal points in Saint Croix, what percentage of postal points is the post office?","DIVIDE(COUNT(type = 'Post Office' ), COUNT(type)) as percentage where county = 'SAINT CROIX';",SELECT CAST(COUNT(CASE WHEN T2.type = 'Post Office' THEN T1.zip_code ELSE NULL END) AS REAL) * 100 / COUNT(T1.zip_code) FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.county = 'SAINT CROIX'
address,"Among the area code 787, list the country of the cities with a postal point type of unique postal office.",postal point type of unique postal office refers to type = 'Unique Post Office';,SELECT DISTINCT T2.county FROM area_code AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code INNER JOIN zip_data AS T3 ON T1.zip_code = T3.zip_code WHERE T1.area_code = '787' AND T3.type = 'Unique Post Office'
address,What is the elevation of the city with the alias East Longmeadow?,,SELECT T2.elevation FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.alias = 'East Longmeadow'
address,"In cities that do not implement daylight savings, what is the total number of cities?",do not implement daylight savings refers to daylight_savings = 'No';,SELECT COUNT(T1.area_code) FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.daylight_savings = 'No'
address,Give the country and area code of the city with zip code 1116.,,"SELECT T2.county, T1.area_code FROM area_code AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T1.zip_code = 1116"
address,"Among the cities with alias St Thomas, provide the type of postal point for each city.",,SELECT DISTINCT T2.type FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.alias = 'St Thomas'
address,"List down the names of the cities belonging to Noble, Oklahoma.",the county of Noble is located in the state of Oklahoma;,SELECT T3.city FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state INNER JOIN zip_data AS T3 ON T2.zip_code = T3.zip_code WHERE T1.name = 'Oklahoma' AND T2.county = 'NOBLE'
address,"Among the listed cities, provide the area code of the city with the largest water area.",the largest water area refers to MAX(water_area);,SELECT T1.area_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.water_area = ( SELECT MAX(water_area) FROM zip_data )
address,Provide the alias of the city with the highest population in year 2020.,the highest population in year 2020 refers to MAX(population_2020);,SELECT T1.alias FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.population_2020 = ( SELECT MAX(population_2020) FROM zip_data )
address,"What is the elevation of the city belonging to Hampden, Massachusetts?",the county of Hampden is located in the state of Massachusetts.,SELECT T3.elevation FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state INNER JOIN zip_data AS T3 ON T2.zip_code = T3.zip_code WHERE T1.name = 'Massachusetts' AND T2.county = 'HAMPDEN' GROUP BY T3.elevation
address,List the area code of the city with the highest Hispanic population.,the highest Hispanic population refers to MAX(hispanic_population);,SELECT T1.area_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.hispanic_population = ( SELECT MAX(hispanic_population) FROM zip_data )
address,Give the alias of the cities with an Asian population of 7.,Asian population of 7 refers to asian_population = 7;,SELECT T1.alias FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.asian_population = 7
address,What is the average of the white population in the cities with area code 920?,AVG(white_population) where area_code = 920;,SELECT AVG(T2.white_population) FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = 920
address,"Among the cities with alias Ponce, what is the percentage of cities with a country level FIPS code of less than 20?","DIVIDE(COUNT(county_fips < 20), COUNT(county_fips)) as percentage where alias = 'Ponce';",SELECT CAST(COUNT(CASE WHEN T2.county_fips < 20 THEN T2.zip_code ELSE NULL END) AS REAL) * 100 / COUNT(T2.zip_code) FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.alias = 'Ponce'
address,List down the country of the cities with a population greater than 97% of the average population of all countries in 2020.,"population_2020 > MULTIPLY(0.97, AVG(population_2020));",SELECT T1.county FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.population_2020 > 0.97 * ( SELECT AVG(population_2020) FROM zip_data )
address,Count the number of postal points in the district represented by Kirkpatrick Ann.,postal points refer to zip_code;,SELECT COUNT(T2.zip_code) FROM congress AS T1 INNER JOIN zip_congress AS T2 ON T1.cognress_rep_id = T2.district WHERE T1.first_name = 'Kirkpatrick' AND T1.last_name = 'Ann'
address,"Provide the zip codes and coordinates of the postal points under Allentown-Bethlehem-Easton, PA-NJ.","coordinates refer to latitude and longitude; under Allentown-Bethlehem-Easton, PA-NJ refers to CBSA_name = 'Allentown-Bethlehem-Easton, PA-NJ';","SELECT T2.zip_code, T2.latitude, T2.longitude FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_name = 'Allentown-Bethlehem-Easton, PA-NJ'"
address,"Provide the zip codes, cities, and locations of the postal points that have Shared Reshipper as a bad alias.",latitude and longitude coordinates can be used to identify the location;,"SELECT T1.zip_code, T2.city, T2.latitude, T2.longitude FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.bad_alias = 'Shared Reshipper'"
address,Who are the congress representatives of the postal points in Garfield?,"Who are the congress representatives refer to first_name, last_name; Garfield is the city;","SELECT T3.first_name, T3.last_name FROM zip_data AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code INNER JOIN congress AS T3 ON T2.district = T3.cognress_rep_id WHERE T1.city = 'Garfield'"
address,"Count the number of postal points under New York-Newark-Jersey City, NY-NJ-PA.","postal points refer to zip_code; under New York-Newark-Jersey City, NY-NJ-PA refers to CBSA_name = 'New York-Newark-Jersey City, NY-NJ-PA';","SELECT COUNT(T2.zip_code) FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_name = 'New York-Newark-Jersey City, NY-NJ-PA'"
address,How many postal points are there under the congress representative in Puerto Rico?,postal points refer to zip_code; Puerto Rico refers to state = 'Puerto Rico';,SELECT COUNT(T2.zip_code) FROM congress AS T1 INNER JOIN zip_congress AS T2 ON T1.cognress_rep_id = T2.district WHERE T1.state = 'Puerto Rico'
address,Describe the number of postal points and the countries in West Virginia.,"postal points refer to zip_code; West Virginia is the name of the state, in which name = 'West Virginia';","SELECT COUNT(DISTINCT T2.zip_code), COUNT(DISTINCT T2.county) FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'West Virginia'"
address,Provide the zip codes and area codes of the postal points with the community post office type at the elevation above 6000.,community post office type refers to type = 'Community Post Office'; elevation above 6000 refers to elevation > 6000;,"SELECT T1.zip_code, T1.area_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.type = 'Community Post Office ' AND T2.elevation > 6000"
address,How many postal points are there under the congress representative from the House of Representatives in Mississippi?,"postal points refer to zip_code; Mississippi is the name of the state, in which name = 'Mississippi';",SELECT COUNT(T2.zip_code) FROM congress AS T1 INNER JOIN zip_congress AS T2 ON T1.cognress_rep_id = T2.district WHERE T1.state = 'Mississippi'
address,Provide the congress representatives' IDs of the postal points in East Springfield.,congress representatives' IDs refer to CID; East Springfield is the city;,SELECT T2.district FROM zip_data AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code WHERE T1.city = 'East Springfield'
address,Who is the CBSA officer of the post point in the area with the highest number of employees?,CBSA officer refers to CBSA_name; the highest number of employees refers to MAX(employees);,SELECT T1.CBSA_name FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T2.employees = ( SELECT MAX(employees) FROM zip_data )
address,How many postal points with unique post office types are there in Ohio?,"postal points refer to zip_code; unique post office types refer to type = 'Unique Post Office'; Ohio is the name of the state, in which name = 'Ohio';",SELECT COUNT(T2.zip_code) FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Ohio' AND T2.type = 'Unique Post Office'
address,Calculate the average number of beneficiaries per postal point in Guam.,"DIVIDE(SUM(total_beneficiaries), COUNT(zip_code)) where name = 'Guam';",SELECT CAST(SUM(T2.total_beneficiaries) AS REAL) / COUNT(T2.zip_code) FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Guam'
address,"Calculate the percentage of congress representatives from the Democrat party. Among them, how many postal points are in the Hawaii state?","DIVIDE(COUNT(party = 'Democrat'), COUNT(congress_rep_id)) as percentage; postal points refer to zip_code; state = 'Hawaii';","SELECT CAST(SUM(CASE WHEN T1.party = 'Democrat' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*), SUM(CASE WHEN T1.state = 'Hawaii' THEN 1 ELSE 0 END) FROM congress AS T1 INNER JOIN zip_congress AS T2 ON T1.cognress_rep_id = T2.district"
beer_factory,What is the name of the root beer brand that has the longest history?,name of the root beer brand refers to BrandName; longest history refers to MIN(FirstBrewedYear);,SELECT BrandName FROM rootbeerbrand WHERE FirstBrewedYear = ( SELECT MIN(FirstBrewedYear) FROM rootbeerbrand )
beer_factory,How many breweries are located in North America?,North America refers to country = 'United States'; North America is the name of continent where country = 'United States' is located;,SELECT COUNT(BrandID) FROM rootbeerbrand WHERE Country = 'United States'
beer_factory,Please list the names of all the root beer brands that are advertised on facebook.,name of the root beer brand refers to BrandName; advertised on facebook refers to FacebookPage IS not NULL;,SELECT BrandName FROM rootbeerbrand WHERE FacebookPage IS NOT NULL
beer_factory,What is the name of the root beer brand with the lowest unit profit available to wholesalers?,"name of the root beer brand refers to BrandName; lowest unit profit available to wholesalers refers to MIN(SUBTRACT(CurrentRetailPrice, WholesaleCost));",SELECT BrandName FROM rootbeerbrand ORDER BY CurrentRetailPrice - WholesaleCost LIMIT 1
beer_factory,What is the description of the root beer brand A&W?,A&W refers to BrandName = 'A&W';,SELECT Description FROM rootbeerbrand WHERE BrandName = 'A&W'
beer_factory,In which city is the brewery AJ Stephans Beverages located?,AJ Stephans refers to BreweryName = 'AJ Stephans Beverages';,SELECT City FROM rootbeerbrand WHERE BreweryName = 'AJ Stephans Beverages'
beer_factory,"How many transactions had Frank-Paul Santangelo made in July, 2014?","in July, 2014 refers to SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '07';","SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Frank-Paul' AND T1.Last = 'Santangelo' AND STRFTIME('%Y-%m', T2.TransactionDate) = '2014-07'"
beer_factory,"Among the transactions made in July, 2014, how many of them were made by a male customer?","in July, 2014 refers to SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '07'; male customer refers to Gender = 'M';","SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Gender = 'M' AND STRFTIME('%Y-%m', T2.TransactionDate) = '2014-07'"
beer_factory,"Among the users that permit the company to send regular emails to them, how many of them had made a transaction with a Visa card in July, 2014?","users permit the company to send regular emails to them refers to subscribedtoemaillist = 'TRUE'; Visa card refers to creditcardtype = 'Visa'; in July, 2014 refers to SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '07';","SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.SubscribedToEmailList = 'TRUE' AND T2.CreditCardType = 'Visa' AND STRFTIME('%Y-%m', T2.TransactionDate) = '2014-07'"
beer_factory,"What is the full name of the customer that had made the most transactions in August, 2014?","full name = First, Last; made the most transactions refers to MAX(COUNT(TransactionID)); in August, 2014 refers to SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '08';","SELECT T1.First, T1.Last FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y-%m', T2.TransactionDate) = '2014-08' GROUP BY T1.CustomerID ORDER BY COUNT(T2.CustomerID) DESC LIMIT 1"
beer_factory,Please list the brands of all the root beer that Frank-Paul Santangelo had purchased on 2014/7/7.,brands of the root beer refers to BrandName; purchased on 2014/7/7 refers to transactiondate = '2014-07-07';,SELECT DISTINCT T4.BrandName FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeer AS T3 ON T2.RootBeerID = T3.RootBeerID INNER JOIN rootbeerbrand AS T4 ON T3.BrandID = T4.BrandID WHERE T1.First = 'Frank-Paul' AND T1.Last = 'Santangelo' AND T2.TransactionDate = '2014-07-07'
beer_factory,"Of the 4 root beers that Frank-Paul Santangelo purchased on 2014/7/7, how many of them were in cans?",on 2014/7/7 refers to transactiondate = '2014-07-07'; in cans refers to containertype = 'Can';,SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeer AS T3 ON T2.RootBeerID = T3.RootBeerID WHERE T1.First = 'Frank-Paul' AND T1.Last = 'Santangelo' AND T2.TransactionDate = '2014-07-07' AND T3.ContainerType = 'Can'
beer_factory,"How many root beers of the Bulldog were purchased in August, 2014?","Bulldog refers to BrandName = 'Bulldog'; purchased in August, 2014 refers to SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '08';",SELECT COUNT(T1.BrandID) FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID WHERE T2.TransactionDate LIKE '2014-08%' AND T3.BrandName = 'Bulldog'
beer_factory,Please list the full names of the customers who have purchased at least one root beer produced by AJ Stephans Beverages.,"full name = First, Last; customers who have purchased at least one root beer refers to CustomerID > = 1; produced by AJ Stephans Beverages refers to BreweryName = 'AJ Stephans Beverages';","SELECT T1.First, T1.Last FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeer AS T3 ON T2.RootBeerID = T3.RootBeerID INNER JOIN rootbeerbrand AS T4 ON T3.BrandID = T4.BrandID WHERE T4.BreweryName = 'AJ Stephans Beverages'"
beer_factory,"Among the root beer brands that do not advertise on Twitter, how many of them have root beers sold in August, 2014?","do not advertise on Twitter refers to twitter IS NULL; in August, 2014 refers to SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '08';",SELECT COUNT(T1.BrandID) FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID WHERE T2.TransactionDate LIKE '2014-08%' AND T3.Twitter IS NULL
beer_factory,What is the number of the credit card that Frank-Paul Santangelo used to purchase root beers on 2014/7/7?,number of the credit card refers to CreditCardNumber; on 2014/7/7 refers to TransactionDate = '2014-07-07';,SELECT DISTINCT T2.CreditCardNumber FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Frank-Paul' AND T1.Last = 'Santangelo' AND T2.TransactionDate = '2014-07-07'
beer_factory,"Among all the root beers purchased by Frank-Paul Santangelo, how many of them were non-sweetened?",non-sweetened refers to honey = 'FALSE' AND artificialsweetener = 'FALSE';,SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeer AS T3 ON T2.RootBeerID = T3.RootBeerID INNER JOIN rootbeerbrand AS T4 ON T3.BrandID = T4.BrandID WHERE T1.First = 'Frank-Paul' AND T1.Last = 'Santangelo' AND T4.ArtificialSweetener = 'FALSE' AND T4.Honey = 'FALSE'
beer_factory,Please list the dates on which a male customer has purchased more than 3 root beers.,dates of purchase refers to TransactionDate; male customer refers to Gender = 'M'; purchased more than 3 root beers refers to COUNT(CustomerID) > 3;,SELECT T2.TransactionDate FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Gender = 'M' GROUP BY T2.TransactionDate HAVING COUNT(T2.CustomerID) > 3
beer_factory,"What is the average number of root beers of the brand A&W sold in a day in August, 2014?","average = DIVIDE(SUM(COUNT(RootBeerID WHERE BrandName = 'A&W' AND SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '08')), 31); A&W refers to BrandName = 'A&W'; in August, 2014 refers to SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '08';",SELECT CAST(COUNT(T1.BrandID) AS REAL) / 31 FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID WHERE T2.TransactionDate LIKE '2014-08%' AND T3.BrandName = 'A&W'
beer_factory,"Among all the root beers sold in 2014, what is the percentage of the root beers produced by the brewery AJ Stephans Beverages?","sold in 2014 refers to SUBSTR(TransactionDate, 1, 4) = '2014'; percentage = DIVIDE(MULTIPLY(SUM(BreweryName = 'AJ Stephans Beverages'), 1.0), COUNT(RootBeerID)) WHERE SUBSTR(TransactionDate, 1, 4) = '2014'; AJ Stephans Beverages refers to BreweryName = 'AJ Stephans Beverages';",SELECT CAST(COUNT(CASE WHEN T3.BreweryName = 'AJ Stephans Beverages' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.BrandID) FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID WHERE T2.TransactionDate LIKE '2014%'
beer_factory,Tell the number of reviews given by James House.,FALSE;,SELECT COUNT(T2.CustomerID) FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'James' AND T1.Last = 'House'
beer_factory,Show the credit card number of Lisa Ling.,FALSE;,SELECT DISTINCT T2.CreditCardNumber FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Lisa' AND T1.Last = 'Ling'
beer_factory,State the coordinate of Sac State American River Courtyard.,"coordinate = Latitude, Longitude; Sac State American River Courtyard refers to LocationName = 'Sac State American River Courtyard';","SELECT T2.Latitude, T2.Longitude FROM location AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID WHERE T1.LocationName = 'Sac State American River Courtyard'"
beer_factory,Provide the name of the location where transaction no.100885 happened.,name of the location refers to LocationName; transaction no. refers to TransactionID; TransactionID = 100885;,SELECT T2.LocationName FROM `transaction` AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.TransactionID = 100885
beer_factory,Which city does the customer who finished transaction no.103545 live in?,transaction no. refers to TransactionID; TransactionID = 103545;,SELECT T1.City FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.TransactionID = 103545
beer_factory,What is the phone number of the customer who owns the credit card of number 6011179359005380?,FALSE;,SELECT DISTINCT T1.PhoneNumber FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CreditCardNumber = 6011179359005382
beer_factory,Which customer has the most reviews? State the full name.,"customer that has the most reviews refers to MAX(COUNT(CustomerID)); full name = First, Last;","SELECT T1.First, T1.Last FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY COUNT(T2.CustomerID) DESC LIMIT 1"
beer_factory,"For the customer who leaves the review content of ""Tastes like Australia."", when was his/her first purchase date?","review content of ""Tastes like Australia."" refers to Review = 'Tastes like Australia.';",SELECT T1.FirstPurchaseDate FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Review = 'Tastes like Australia.'
beer_factory,When did Natalie Dorris buy her first root beer?,when a customer bought their first root beer refers to FirstPurchaseDate;,SELECT T2.TransactionDate FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Natalie' AND T1.Last = 'Dorris' ORDER BY T2.TransactionDate LIMIT 1
beer_factory,"For the root beer brand with the most 5 star ratings, what is the name of the brewery?",most 5 star ratings refers to MAX(COUNT(StarRating = 5)); name of the brewery refers to BreweryName;,SELECT T1.BreweryName FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T2.StarRating = 5 GROUP BY T1.BrandID ORDER BY COUNT(T2.StarRating) DESC LIMIT 1
beer_factory,"For the customer who gave a 3 star rating to Frostie brand on 2014/4/24, did the user permit the company to send regular emails to him/her?","3 star rating refers to StarRating = 3; Frostie refers to  BrandName = 'Frostie'; if SubscribedToEmailList = 'TRUE', it means the user permit the company to send regular emails to him/her; if SubscribedToEmailList = FALSE', it means the user did not permit the company to send regular emails to him/her; rating on 2014/4/24 refers to ReviewDate = '2014-04-24';",SELECT CASE WHEN T1.SubscribedToEmailList LIKE 'TRUE' THEN 'YES' ELSE 'NO' END AS result FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeerbrand AS T3 ON T2.BrandID = T3.BrandID WHERE T2.StarRating = 3 AND T3.BrandName = 'Frostie' AND T2.ReviewDate = '2014-04-24'
beer_factory,"For the root beer brand which got the review with the content of ""The quintessential dessert root beer. No ice cream required."", what is the current retail price of the root beer?","review with the content of ""The quintessential dessert root beer. No ice cream required."" refers to Review = 'The quintessential dessert root beer. No ice cream required.';",SELECT T1.CurrentRetailPrice - T1.WholesaleCost AS price FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T2.Review = 'The quintessential dessert root beer. No ice cream required.'
beer_factory,What is the percentage of 5 star ratings River City brand root beer get?,"percentage = MULTIPLY(DIVIDE(SUM(BrandID WHERE StarRating = 5), COUNT(BrandID) WHERE BrandName = 'River City'), 1.0); 5 star ratings refers to StarRating = 5; River City refers to BrandName = 'River City';",SELECT CAST(COUNT(CASE WHEN T2.StarRating = 5 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.StarRating) FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T1.BrandName = 'River City'
beer_factory,"What is the average number of reviews of all the root beer brands from ""CA"" State?","average = DIVIDE(COUNT(CustomerID), COUNT(BrandID) WHERE state = CA); 
",SELECT CAST(COUNT(*) AS REAL) / COUNT(DISTINCT T1.BrandID) AS avgreview FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T1.State = 'CA'
beer_factory,How many female customers permit the company to send regular emails to them?,female refers to Gender = 'F'; customer permits the company to send regular emails to them refers to SubscribedToEmailList = 'TRUE';,SELECT COUNT(CustomerID) FROM customers WHERE Gender = 'F' AND SubscribedToEmailList = 'TRUE'
beer_factory,What is the name of the brand of the beer with the shortest brewed history?,name of the brand of the beer refers to BrandName; shortest brewed history refers to MAX(FirstBrewedYear);,SELECT BrandName FROM rootbeerbrand ORDER BY FirstBrewedYear DESC LIMIT 1
beer_factory,What are the full names of the first top 10 customers?,full name = First Last; first top 10 customers refers to MIN(FirstPurchaseDate) LIMIT 10;,"SELECT First, Last FROM customers ORDER BY FirstPurchaseDate LIMIT 10"
beer_factory,How many breweries are there in Australia?,Australia refers to Country = 'Australia';,SELECT COUNT(BreweryName) FROM rootbeerbrand WHERE Country = 'Australia'
beer_factory,How many customers are named Charles in Sacramento?,Sacramento refers to City = 'Sacramento';,SELECT COUNT(CustomerID) FROM customers WHERE First = 'Charles' AND City = 'Sacramento'
beer_factory,How many transactions were paid through MasterCard in 2014?,MasterCard refers to CreditCardType = 'MasterCard'; in 2014 refers to TransactionDate > = '2014-01-01' AND TransactionDate < = '2014-12-31';,SELECT COUNT(TransactionID) FROM `transaction` WHERE CreditCardType = 'MasterCard' AND TransactionDate LIKE '2014%'
beer_factory,Which brand of root beer did Jayne Collins give the lowest rating?,brand of root beer refers to BrandName; lowest rating refers to MIN(StarRating);,SELECT T3.BrandName FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeerbrand AS T3 ON T2.BrandID = T3.BrandID WHERE T1.First = 'Jayne' AND T1.Last = 'Collins' AND T2.StarRating = 1
beer_factory,How many sweet bottled root beers that do not contain cane sugar were purchased in 2015 through the selling company located in Sac State American River Courtyard?,sweet refers to Honey = 'TRUE'; bottled refers to ContainerType = 'Bottle'; do not contain cane sugar refers to CaneSugar = 'FALSE'; in 2015 refers to PurchaseDate < = '2015-12-31'; Sac State American River Courtyard refers to LocationName = 'Sac State American River Courtyard';,SELECT COUNT(T1.BrandID) FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID INNER JOIN location AS T3 ON T1.LocationID = T3.LocationID WHERE T3.LocationName = 'Sac State American River Courtyard' AND T1.PurchaseDate LIKE '2015%' AND T2.Honey = 'TRUE' AND T2.CaneSugar = 'FALSE' AND T1.ContainerType = 'Bottle'
beer_factory,Which brewery does the most purchased root beer in 2016 belong to?,most purchased root beer refers to MAX(COUNT(BrandID)); in 2016 refers to PurchaseDate > = '2016-01-01' AND PurchaseDate < = '2016-12-31';,SELECT T2.BreweryName FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T1.PurchaseDate BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY T2.BrandID ORDER BY COUNT(T1.BrandID) DESC LIMIT 1
beer_factory,What are the full names of the customer who gave River City a 5-star?,"full name = First, Last; River City refers to BrandName = 'River City'; 5-star refers to StarRating = 5;","SELECT T1.First, T1.Last FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeerbrand AS T3 ON T2.BrandID = T3.BrandID WHERE T3.BrandName = 'River City' AND T2.StarRating = 5"
beer_factory,How many root beers did Tom Hanks purchase between 2015 to 2016?,between 2015 to 2016 refers to TransactionDate > = '2015-01-01' AND TransactionDate < '2016-12-31';,SELECT COUNT(T2.RootBeerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Tom' AND T1.Last = 'Hanks' AND T2.TransactionDate BETWEEN '2015-01-01' AND '2016-12-31'
beer_factory,Which brand of root beer was highly rated by customers?,brand of root beer refers to BrandName; highly rated refers to MAX(COUNT(StarRating = 5));,SELECT T1.BrandName FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T2.StarRating = 5
beer_factory,How many Henry Weinhard's were bought by Nicholas Sparks?,Henry Weinhard's refers to BrandName = 'Henry Weinhard''s';,SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeer AS T3 ON T2.RootBeerID = T3.RootBeerID INNER JOIN rootbeerbrand AS T4 ON T3.BrandID = T4.BrandID WHERE T1.First = 'Nicholas' AND T1.Last = 'Sparks' AND T4.BrandName LIKE 'Henry Weinhard%s'
beer_factory,"Among the root beer brands that do not advertise on Facebook and Twitter, which brand has the highest number of purchases?",do not advertise on Facebook and Twitter refers to FacebookPage IS NULL AND Twitter IS NULL; highest number of purchases refers to MAX(COUNT(BrandID));,SELECT T2.BreweryName FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T2.FacebookPage IS NULL AND T2.Twitter IS NULL GROUP BY T2.BrandID ORDER BY COUNT(T1.BrandID) DESC LIMIT 1
beer_factory,"Between Sac State Union and Sac State American River Courtyard, which location sold the most Dog n Suds root beer?","Between Sac State Union and Sac State American River Courtyard refers to LocationName IN('Sac State American River Courtyard', 'Sac State Union'); Dog n Suds refers to BrandName = 'Dog n Suds'; sold the most root beer refers to MAX(COUNT(BrandID));","SELECT T3.LocationName FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID INNER JOIN location AS T3 ON T1.LocationID = T3.LocationID WHERE T2.BrandName = 'Dog n Suds' AND T3.LocationName IN ('Sac State American River Courtyard', 'Sac State Union') GROUP BY T1.LocationID ORDER BY COUNT(T1.BrandID) DESC LIMIT 1"
beer_factory,How many canned A&W were purchased in 2016?,canned refers to ContainerType = 'Can'; A&W refers to BrandName = 'A&W'; in 2016 refers to PurchaseDate > = '2016-01-01' AND PurchaseDate < = '2016-12-31';,SELECT COUNT(T1.BrandID) FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T1.ContainerType = 'Can' AND T2.BrandName = 'A&W' AND T1.PurchaseDate LIKE '2016%'
beer_factory,What is the precise location of Sac State Union?,"precise location = Latitude, Longitude; Sac State Union refers to LocationName = 'Sac State Union';","SELECT T2.Latitude, T2.Longitude FROM location AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID WHERE T1.LocationName = 'Sac State Union'"
beer_factory,What are the brands of the root beers that received 5-star ratings from no less than 5 customers?,brand of the root beer refers to BrandName; 5-star ratings refers to StarRating = 5; no less than 5 customers refers to COUNT(CustomerID) > = 5;,SELECT T1.BrandName FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T2.StarRating = 5 GROUP BY T2.BrandID HAVING COUNT(T2.StarRating) >= 5
beer_factory,List the brands of root beer produced by Dr Pepper Snapple Group and calculate their percentage of purchases between 2014 to 2016.,"brand of root beer refers to BrandName; produced by Dr Pepper Snapple Group refers to BreweryName = 'Dr Pepper Snapple Group'; percentage of purchases = MULTIPLY(DIVIDE(SUM(BrandID WHERE PurchaseDate > = '2014-01-01' AND PurchaseDate < = '2016-12-31'), COUNT(BrandID) WHERE BreweryName = 'Dr Pepper Snapple Group'), 1.0); between 2014 to 2016 refers to PurchaseDate > = '2014-01-01' AND PurchaseDate < = '2016-12-31;","SELECT T1.BrandName , CAST(SUM(CASE WHEN T2.PurchaseDate >= '2014-01-01' AND T2.PurchaseDate <= '2016-12-31' THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.BrandID) AS purchase FROM rootbeerbrand AS T1 INNER JOIN rootbeer AS T2 ON T1.BrandID = T2.BrandID WHERE T1.BreweryName = 'Dr Pepper Snapple Group' GROUP BY T2.BrandID"
beer_factory,Which brand of root beer has the lowest unit profit available to wholesalers? Indicate the ID of the customer that has the highest number of purchases of the said brand.,"brand of root beer refers to BrandName; lowest unit profit available to wholesalers refers to MIN(SUBTRACT(CurrentRetailPrice, WholesaleCost)); ID of the customer refers to CustomerID; highest number of purchases refers to MAX(COUNT(CustomerID));","SELECT T3.BrandName, T2.CustomerID FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID GROUP BY T3.BrandID ORDER BY T3.CurrentRetailPrice - T3.WholesaleCost, COUNT(T1.BrandID) DESC LIMIT 1"
beer_factory,List the full name and phone number of male customers from Fair Oaks who are subscribed to the email list.,"full name = First, Last; male customers refers to Gender = 'M'; Fair Oaks refers to City = 'Fair Oaks'; subscribed to the email list refers to SubscribedToEmailList = 'TRUE';","SELECT First, Last, PhoneNumber FROM customers WHERE Gender = 'M' AND City = 'Fair Oaks' AND SubscribedToEmailList = 'TRUE'"
beer_factory,"Among the root beer purchased in 2014, what percentage were sold in cans?","in 2014 refers to PurchaseDate > = '2014-01-01' AND PurchaseDate < = '2014-12-31'; percentage = MULTIPLY(DIVIDE(SUM(ContainerType = 'Can'), COUNT(RootBeerID) WHERE PurchaseDate > = '2014-01-01' AND PurchaseDate < = '2014-12-31'), 1.0); in cans refers to ContainerType = 'Can';",SELECT CAST(COUNT(CASE WHEN ContainerType = 'Can' THEN RootBeerID ELSE NULL END) AS REAL) * 100 / COUNT(RootBeerID) FROM rootbeer WHERE PurchaseDate LIKE '2014%'
beer_factory,Give the name of the brands that brewed their first drink between 1996 and 2000 in the descending order of the date brewed.,name of the brands refers to BrandName; between 1996 and 2000 refers to FirstBrewedYear > = 1996 AND FirstBrewedYear < = 2000;,SELECT BrandName FROM rootbeerbrand WHERE FirstBrewedYear BETWEEN '1996' AND '2000' ORDER BY FirstBrewedYear DESC
beer_factory,Find the brand Id of the root beer which has the most number of customers who gave 1-star ratings.,most number of customers who gave 1-star ratings refers to MAX(COUNT(StarRating = 1)); 1-star ratings refers to StarRating = 1;,SELECT BrandID FROM rootbeerreview WHERE StarRating = 1 GROUP BY BrandID ORDER BY COUNT(BrandID) DESC LIMIT 1
beer_factory,"Among the transactions, what percentage is done by using a visa card?","visa card refers to CreditCardType = 'Visa'; percentage = MULTIPLY(DIVIDE(SUM(CreditCardType = 'Visa'), COUNT(TransactionID)), 1.0);",SELECT CAST(COUNT(CASE WHEN CreditCardType = 'Visa' THEN TransactionID ELSE NULL END) AS REAL) * 100 / COUNT(TransactionID) FROM `transaction`
beer_factory,How many brands of root beers are available in cans and contain corn syrup and artificial sweeteners?,available in cans refers to AvailableInCans = 'TRUE'; contain corn syrup refers to CornSyrup = 'TRUE'; contain artificial sweeteners refers to ArtificialSweetener = 'TRUE';,SELECT COUNT(BrandID) FROM rootbeerbrand WHERE CornSyrup = 'TRUE' AND ArtificialSweetener = 'TRUE' AND AvailableInCans = 'TRUE'
beer_factory,Calculate the percentage of sales done at Sac State American River Courtyard.,"percentage =   MULTIPLY(DIVIDE(SUM(LocationName = 'Sac State American River Courtyard'), COUNT(LocationID)), 1.0); Sac State American River Courtyard refers to LocationName = 'Sac State American River Courtyard';",SELECT CAST(COUNT(CASE WHEN T2.LocationName = 'Sac State American River Courtyard' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.TransactionID) FROM `transaction` AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID
beer_factory,On average how many caffeinated root beers are sold a day?,"average = DIVIDE(COUNT(RootBeerID WHERE Caffeinated = 'TRUE'), COUNT(PurchaseDate)); caffeinated refers to Caffeinated = 'TRUE';",SELECT CAST(COUNT(T2.RootBeerID) AS REAL) / COUNT(DISTINCT T2.PurchaseDate) FROM rootbeerbrand AS T1 INNER JOIN rootbeer AS T2 ON T1.BrandID = T2.BrandID INNER JOIN `transaction` AS T3 ON T2.RootBeerID = T3.RootBeerID WHERE T1.Caffeinated = 'TRUE'
beer_factory,Find the root beer with the most and least amount of profit per unit and list the container types in which these root beers are sold.,"most amount of profit per unit refers to MAX(SUBTRACT(CurrentRetailPrice, WholesaleCost)); least amount of profit per unit refers to MIN(SUBTRACT(CurrentRetailPrice, WholesaleCost));","SELECT * FROM ( SELECT T1.BrandName, T2.ContainerType FROM rootbeerbrand AS T1 INNER JOIN rootbeer AS T2 ON T1.BrandID = T2.BrandID ORDER BY T1.CurrentRetailPrice - T1.WholesaleCost DESC LIMIT 1 ) UNION ALL SELECT * FROM ( SELECT T3.BrandName, T4.ContainerType FROM rootbeerbrand AS T3 INNER JOIN rootbeer AS T4 ON T3.BrandID = T4.BrandID ORDER BY T3.CurrentRetailPrice - T3.WholesaleCost ASC LIMIT 1 )"
beer_factory,What is the average cost of root beers purchased for more than 2 dollars and sold in bottles?,"average cost = DIVIDE(SUM(PurchasePrice > 2), COUNT(RootBeerID) WHERE PurchasePrice > 2); more than 2 dollars refers to PurchasePrice > 2; in bottles refers to ContainerType = 'Bottle';",SELECT AVG(T2.PurchasePrice) FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID WHERE T1.ContainerType = 'Bottle' AND T2.PurchasePrice > 2
beer_factory,"Among the root beers sold in bottles, how many are sold at the location 38.559615, -121.42243?","in bottles refers to ContainerType = 'Bottle';  location 38.559615, -121.42243 refers to latitude = 38.559615 AND longitude = -121.42243;",SELECT COUNT(T4.BrandID) FROM `transaction` AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID INNER JOIN location AS T3 ON T1.LocationID = T3.LocationID INNER JOIN rootbeer AS T4 ON T1.RootBeerID = T4.RootBeerID WHERE T2.Latitude = 38.559615 AND T2.Longitude = -121.42243 AND T4.ContainerType = 'Bottle'
beer_factory,"Among the customers not subscribed to the mailing list, what percentage has given three or more stars in a review?","not subscribed to the mailing list refers to SubscribedToEmailList = 'FALSE'; percentage = MULTIPLY(DIVIDE(SUM(CustomerID WHERE StarRating > 3), COUNT(CustomerID) WHERE SubscribedToEmailList = 'FALSE'), 1.0);",SELECT CAST(COUNT(CASE WHEN T2.StarRating > 3 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.CustomerID) FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.SubscribedToEmailList = 'FALSE'
beer_factory,Which root beer got the most five stars in 2012? Give the brand name of this beer.,most five stars refers to MAX(COUNT(StarRating = 5)); in 2012 refers to FirstBrewedYear = 2012;,"SELECT T3.BrandName FROM rootbeer AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID WHERE T2.StarRating = 5 AND strftime('%Y', T2.ReviewDate) = '2012' GROUP BY T1.BrandID ORDER BY COUNT(T2.BrandID) DESC LIMIT 1"
beer_factory,"In the female customers, how many bought root beer that contains artificial sweetener?",female refers to Gender = 'F'; contains artificial sweetener refers to ArtificialSweetener = 'TRUE';,SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeer AS T3 ON T2.RootBeerID = T3.RootBeerID INNER JOIN rootbeerbrand AS T4 ON T3.BrandID = T4.BrandID WHERE T1.Gender = 'F' AND T4.ArtificialSweetener = 'TRUE'
beer_factory,Calculate the difference between the number of root beers sold that use cane sugar and corn syrup.,"difference = SUBTRACT(SUM(CaneSugar = 'TRUE'), SUM(CornSyrup = 'TRUE')); use cane sugar refers to CaneSugar = 'TRUE'; corn syrup refers to CornSyrup = 'TRUE';",SELECT COUNT(CASE WHEN T3.CaneSugar = 'TRUE' THEN T1.BrandID ELSE NULL END) - COUNT(CASE WHEN T3.CornSyrup = 'TRUE' THEN T1.BrandID ELSE NULL END) AS DIFFERENCE FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID
beer_factory,Which brewery brewed the most sold root beer in 2015?,brewery refers to BreweryName; most sold root beer refers to MAX(COUNT(BrandID)); in 2015 refers to TransactionDate > = '2015-01-01' AND TransactionDate < = '2015-12-31';,SELECT T3.BreweryName FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID WHERE T2.TransactionDate LIKE '2015%' GROUP BY T3.BrandID ORDER BY COUNT(T1.BrandID) DESC LIMIT 1
beer_factory,"Among the male customers in Sacramento, what percentage bought Dominion root beer in 2013?","male customers refers to Gender = 'M'; Sacramento refers to City = 'Sacramento'; percentage = MULTIPLY(DIVIDE(SUM(BrandID WHERE BrandName = 'Dominion'), COUNT(BrandID) WHERE City = 'Sacramento'), 1.0); Dominion refers to BrandName = 'Dominion'; in 2013 refers to TransactionDate > = 2013-01-01 AND TransactionDate < 2014-01-01;",SELECT CAST(COUNT(CASE WHEN T4.BrandName = 'Dominion' THEN T1.CustomerID ELSE NULL END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeer AS T3 ON T2.RootBeerID = T3.RootBeerID INNER JOIN rootbeerbrand AS T4 ON T3.BrandID = T4.BrandID WHERE T1.City = 'Sacramento' AND T1.Gender = 'M' AND T2.TransactionDate LIKE '2014%'
beer_factory,What is the difference in the average number of sales per day of root beer brands that contain honey and that don’t contain honey.,"difference in the average = SUBTRACT(DIVIDE(MULTIPLY(SUM(Honey = 'TRUE'), 1.0), COUNT(TransactionDate)), DIVIDE(MULTIPLY(SUM(Honey = 'FALSE'), 1.0), COUNT(TransactionDate))); contain honey refers to Honey = 'TRUE'; don’t contain honey refers to Honey = 'FALSE'",SELECT (CAST(SUM(CASE WHEN T1.Honey = 'TRUE' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT T3.TransactionDate)) - (CAST(SUM(CASE WHEN T1.Honey <> 'TRUE' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT T3.TransactionDate)) FROM rootbeerbrand AS T1 INNER JOIN rootbeer AS T2 ON T1.BrandID = T2.BrandID INNER JOIN `transaction` AS T3 ON T2.RootBeerID = T3.RootBeerID
beer_factory,Find and list the full name and email of the customers who used American Express cards in Sac State Union.,"full name = First, Last; American Express cards refers to CreditCardType = 'American Express'; Sac State Union refers to LocationName = 'Sac State Union';","SELECT DISTINCT T1.First, T1.Last, T1.Email FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN location AS T3 ON T2.LocationID = T3.LocationID WHERE T3.LocationName = 'Sac State Union' AND T2.CreditCardType = 'American Express'"
beer_factory,In the reviews of September 2014. Which brand of beers obtained the highest star ratings?,September 2014 refers to ReviewDate LIKE '2014-09%'; brand of beers refers to BrandName; highest star ratings refers to MAX(StarRating);,SELECT DISTINCT T1.BrandName FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T2.StarRating = 5 AND T2.ReviewDate BETWEEN '2014-09-01' AND '2014-09-30'
beer_factory,What is the precise location of all paying customers with American Express?,"precise location refers to Latitude, Longitude; American Express refers to CreditCardType = 'American Express';","SELECT DISTINCT T2.Latitude, T2.Longitude FROM `transaction` AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID WHERE T1.CreditCardType = 'American Express'"
beer_factory,How many Folsom customers prefer to pay with Visa?,Folsom refers to City = 'Folsom'; Visa refers to CreditCardType = 'Visa';,SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.City = 'Folsom' AND T2.CreditCardType = 'Visa'
beer_factory,From which cities are the customers who gave 5 stars in their reviews in November 2012?,5 stars refers to StarRating = 5; in November 2012 refers to ReviewDate LIKE '2012-11%';,SELECT DISTINCT T1.City FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.StarRating = 5 AND T2.ReviewDate BETWEEN '2012-11-01' AND '2012-11-30'
beer_factory,What brands of beer has Peg Winchester consumed?,brands of beer refers to BrandName;,SELECT T3.BrandName FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeerbrand AS T3 ON T2.BrandID = T3.BrandID WHERE T1.First = 'Peg' AND T1.Last = 'Winchester'
beer_factory,What brand of beer has been the worst rated most times?,brand of beer refers to BrandName; worst rated most times refers to MAX(COUNT(StarRating = 1));,SELECT T1.BrandName FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T2.BrandID = T1.BrandID WHERE T2.StarRating = 1 GROUP BY T1.BrandName ORDER BY COUNT(T1.BrandName) DESC LIMIT 1
beer_factory,What credit card is the most used in the purchase of non-alcoholic beer?,credit card that is the most used refers to MAX(COUNT(CreditCardType)); non-alcoholic beer refers to Alcoholic = 'FALSE';,SELECT T2.CreditCardType FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID WHERE T3.Alcoholic = 'FALSE' GROUP BY T2.CreditCardType ORDER BY COUNT(T2.CreditCardType) DESC LIMIT 1
beer_factory,What is the name of all the customers who have ever given a 5-star review?,"name of the customer = First, Last; 5-star review refers to StarRating = 5;","SELECT T1.First, T1.Last FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.StarRating = 5"
beer_factory,At what latitude is the Thomas Kemper brand beer consumed the most?,Thomas Kemper refers to BrandName = 'Thomas Kemper';  latitude the beer is consumed the most refers to MAX(COUNT(Latitude));,SELECT T3.Latitude FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID INNER JOIN geolocation AS T3 ON T1.LocationID = T3.LocationID WHERE T2.BrandName = 'Thomas Kemper' GROUP BY T3.Latitude ORDER BY COUNT(T1.BrandID) DESC LIMIT 1
beer_factory,What star rating is the most common for beers containing corn syrup?,most common refers to MAX(COUNT(StarRating)); containing corn syrup refers to CornSyrup = 'TRUE';,SELECT T2.StarRating FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T1.CornSyrup = 'TRUE' GROUP BY T2.StarRating ORDER BY COUNT(T2.StarRating) DESC LIMIT 1
beer_factory,What is the precise location of zip code 95819?,"precise location = Latitude, Longitude;","SELECT T2.Latitude, T2.Longitude FROM location AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID WHERE T1.ZipCode = 95819"
beer_factory,"What brands of beers are manufactured at coordinates 38,566,129, -121,426,432?","coordinates 38,566,129, -121,426,432 refers to Latitude = 38.566129 AND Longitude = -121.426432;",SELECT DISTINCT T2.BrandName FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID INNER JOIN geolocation AS T3 ON T1.LocationID = T3.LocationID WHERE T3.Latitude = '38.566129' AND T3.Longitude = '-121.426432'
beer_factory,What is the average unit profit for wholesalers of canned beers?,"average unit profit = DIVIDE(SUM(SUBTRACT(CurrentRetailPrice, WholesaleCost)), COUNT(ContainerType = 'Can')); canned beers refers to ContainerType = 'Can';",SELECT AVG(T2.CurrentRetailPrice - T2.WholesaleCost) FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T1.ContainerType = 'Can'
beer_factory,What percentage of customers who paid with a Discover Credit Card gave a 3-star rating?,"percentage = MULTIPLY(DIVIDE(COUNT(CustomerID WHERE StarRating = 3), COUNT(CustomerID) WHERE CreditCardType = 'Discover'), 100); Discover Credit Card refers to CreditCardType = 'Discover'; 3-star rating refers to StarRating = 3;",SELECT CAST(COUNT(CASE WHEN T1.StarRating = 3 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM rootbeerreview AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CreditCardType = 'Discover'
beer_factory,List the brand IDs of the beers whose star rating is more than 3.,star rating is more than 3 refers to StarRating > 3;,SELECT BrandID FROM rootbeerreview WHERE StarRating > 3
beer_factory,How many brands of bottle root beer were purchased between 4/3/2015 and 10/26/2015?,bottle root beer refers to ContainerType = 'Bottle'; purchased between 4/3/2015 and 10/26/2015 refers to PurchaseDate BETWEEN '2015-04-23' AND '2015-10-26';,SELECT COUNT(BrandID) FROM rootbeer WHERE ContainerType = 'Bottle' AND PurchaseDate BETWEEN '2015-04-03' AND '2015-10-26'
beer_factory,"What is the full name of the customer who gave a 5-star rating and commented ""The quintessential dessert root beer. No ice cream required"" on his review?","full name = First, Last; 5-star rating refers to StarRating = 5; commented ""The quintessential dessert root beer. No ice cream required"" refers to Review = 'The quintessential dessert root beer. No ice cream required.';","SELECT T1.First, T1.Last FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.StarRating = 5 AND T2.Review = 'The quintessential dessert root beer. No ice cream required.'"
beer_factory,Tally the email addresses and phone numbers of customers from Sacramento who gave a star rating of more than 3 in 2014.,email addresses refers to Email; Sacramento refers to City = 'Sacramento'; star rating of more than 3 refers to StarRating > 3; in 2014 refers to ReviewDate LIKE '2014%';,"SELECT DISTINCT T1.Email, T1.PhoneNumber FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.StarRating > 3 AND T1.City = 'Sacramento' AND T2.ReviewDate BETWEEN '2014-01-01' AND '2014-12-31'"
beer_factory,How many female mailing list subscribers from Sacramento gave a 4-star rating between 1/3/2016 and 10/26/2016?,female refers to Gender = 'F'; mailing list subscribers refers to SubscribedToEmailList = 'TRUE'; Elk Grove refers to City = 'Sacramento'; 4-star rating refers to StarRating = 4; between 1/3/2016 and 10/26/2016 refers to ReviewDate BETWEEN '2016-01-03' AND '2016-10-26';,SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.StarRating = 4 AND T1.City = 'Sacramento' AND T1.Gender = 'F' AND T1.SubscribedToEmailList = 'TRUE' AND T2.ReviewDate BETWEEN '2013-01-03' AND '2013-10-26'
beer_factory,Give me the brewery and brand names of canned root beer that were purchased before 6/6/2015.,canned root beer refers to ContainerType = 'Can'; purchased before 6/6/2015 refers to PurchaseDate < '2015-06-06';,"SELECT DISTINCT T2.BreweryName, T2.BrandName FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T1.PurchaseDate < '2015-06-06' AND T1.ContainerType = 'Can'"
beer_factory,List the brand names of bottled root beer whose first brewing year is no later than 1930.,bottled root beer refers to ContainerType = 'Bottle'; first brewing year is no later than 1930 refers to FirstBrewedYear < 1930;,SELECT T2.BrandName FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T2.FirstBrewedYear < '1930-01-01' AND T1.ContainerType = 'Bottle' ORDER BY T2.FirstBrewedYear LIMIT 1
beer_factory,How many times did Anna Himes use her Mastercard when paying between 12/25/2014 and 5/20/2016 ?,Mastercard refers to CreditCardType = 'MasterCard'; between 12/25/2014 and 5/20/2016 refers to TransactionDate BETWEEN '2014-12-25' AND '2016-05-20';,SELECT COUNT(T2.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Anna' AND T1.Last = 'Himes' AND T2.CreditCardType = 'MasterCard' AND T2.TransactionDate BETWEEN '2014-12-25' AND '2016-05-20'
beer_factory,What is the average star rating given by female customers to brand ID 10018 from 1/25/2015 to 3/10/2015?,average star rating = AVG(StarRating); female customers refers to Gender = 'F; from 1/25/2015 to 3/10/2015 refers to ReviewDate BETWEEN '2015-01-25' AND '2015-03-10';,SELECT AVG(T2.StarRating) FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.BrandID = 10018 AND T1.Gender = 'F' AND T2.ReviewDate BETWEEN '2013-01-25' AND '2015-03-10'
beer_factory,"What is the brand name of the root beer that gained a 1-star rating from customer ID 331115 while saying, ""Yuk, more like licorice soda""?","1-star rating refers to StarRating = 1; saying, ""Yuk, more like licorice soda"" refers to Review = 'Yuk, more like licorice soda.';","SELECT T1.BrandName FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T2.CustomerID = 331115 AND T2.Review = 'Yuk, more like licorice soda.' AND T2.StarRating = 1"
beer_factory,Calculate the total purchases made by customers using their Visa credit cards in the Sac State American River Courtyard between 6/3/2014 and 11/27/2015.,total purchases = SUM(PurchasePrice); Visa credit card refers to CreditCardType = 'Visa'; Sac State American River Courtyard refers to LocationName = 'Sac State American River Courtyard'; between 6/3/2014 and 11/27/2015 refers to TransactionDate BETWEEN '2014-06-03' AND '2015-11-27';,SELECT SUM(T1.PurchasePrice) FROM `transaction` AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.LocationName = 'Sac State American River Courtyard' AND T1.CreditCardType = 'Visa' AND T1.TransactionDate BETWEEN '2014-06-03' AND '2015-11-27'
beer_factory,How many transactions were made in Sac State Union using the American Express credit card in 2014?,Sac State Union refers to LocationName = 'Sac State Union'; American Express credit card refers to CreditCardType = 'American Express'; in 2014 refers to TransactionDate LIKE '2014%';,SELECT COUNT(T1.TransactionID) FROM `transaction` AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.LocationName = 'Sac State Union' AND T1.CreditCardType = 'American Express' AND T1.TransactionDate BETWEEN '2014-01-01' AND '2014-12-31'
beer_factory,What is the precise coordinate of Sac State Union?,"precise coordinate = Latitude, Longitude; Sac State Union refers to LocationName = 'Sac State Union';","SELECT T2.Latitude, T2.Longitude FROM location AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID WHERE T1.LocationName = 'Sac State Union'"
beer_factory,What did the customer say in his or her review of Bulldog root beer on 7/26/2013?,Bulldog refers to BrandName = 'Bulldog'; on 7/26/2013 refers to ReviewDate = '2013-07-26';,SELECT T2.Review FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T1.BrandName = 'Bulldog' AND T2.ReviewDate = '2013-07-26'
beer_factory,List down the brand names of root beer that gained a 5-star rating from a customer's review in 2013. Calculate the unit profit available to wholesalers for each brand.,"5-star rating refers to StarRating = 5; in 2013 refers to ReviewDate LIKE '2013%'; unit profit available to wholesalers = SUBTRACT(CurrentRetailPrice, WholesaleCost);","SELECT T1.BrandName, T1.CurrentRetailPrice - T1.WholesaleCost AS result FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T2.StarRating = 5 AND T2.ReviewDate BETWEEN '2013-01-01' AND '2013-12-31'"
beer_factory,"Give me the full name of the first customer, and tell me how long ago he or she wrote his or her first review since making his or her first purchase.","full name = First, Last; how long ago = SUBTRACT(ReviewDate, FirstPurchaseDate);","SELECT T1.First, T1.Last , strftime('%J', ReviewDate) - strftime('%J', FirstPurchaseDate) AS TIMEAGO FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID LIMIT 1"
beer_factory,What is the credit card type used by Kenneth Walton?,FALSE;,SELECT DISTINCT T2.CreditCardType FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Kenneth' AND T1.Last = 'Walton'
beer_factory,"What is the container type, brand name and star rating for root beer ID 10054?",FALSE;,"SELECT T4.ContainerType, T3.BrandName, T1.StarRating FROM rootbeerreview AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID INNER JOIN rootbeer AS T4 ON T2.RootBeerID = T4.RootBeerID WHERE T2.RootBeerID = 100054"
beer_factory,List out the root beers bought by Tim Ocel and Dawn Childress.,FALSE;,SELECT T2.RootBeerID FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T2.CustomerID = T1.CustomerID WHERE (T1.First = 'Tim' AND T1.Last = 'Ocel') OR (T1.First = 'Dawn' AND T1.Last = 'Childress')
beer_factory,"List out the root beer ID for the brand Bulldog, Bundaberg, Dad's, Dog n Suds and Virgil's.","Bulldog, Bundaberg, Dad's, Dog n Suds and Virgil's refers to BrandName IN('Bulldog', 'Bundaberg', 'Dad''s', 'Dog n Suds', 'Virgil''s');","SELECT T1.RootBeerID FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T2.BrandID = T1.BrandID WHERE T2.BrandName IN ('Bulldog', 'Bundaberg', 'Dad''s', 'Dog n Suds', 'Virgil''s')"
beer_factory,How many bottles of beer have been bought by Jim Breech?,bottles refers to ContainerType = 'Bottle';,SELECT COUNT(T3.ContainerType) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T2.CustomerID = T1.CustomerID INNER JOIN rootbeer AS T3 ON T3.RootBeerID = T2.RootBeerID WHERE T3.ContainerType = 'Bottle' AND T1.First = 'Jim' AND T1.Last = 'Breech'
beer_factory,How many transactions have been made to purchase a root beer brand from California?,California refers to State = 'CA';,SELECT COUNT(T3.RootBeerID) FROM rootbeerbrand AS T1 INNER JOIN rootbeer AS T2 ON T1.BrandID = T2.BrandID INNER JOIN `transaction` AS T3 ON T2.RootBeerID = T3.RootBeerID WHERE T1.State = 'CA'
beer_factory,What is the average review given by a subscriber?,average review = AVG(StarRating); subscriber refers to SubscribedToEmailList = 'TRUE';,SELECT AVG(T2.StarRating) FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.SubscribedToEmailList = 'TRUE'
beer_factory,What is the amount difference between the bottles of root beer sold from Louisiana and Missouri?,"difference = SUBTRACT(COUNT(ContainerType = 'Bottle' WHERE State = 'LA'), COUNT(ContainerType = 'Bottle' State = 'MO')); bottles refers to ContainerType = 'Bottle'; Louisiana refers to State = 'LA'; Missouri refers to State = 'MO';",SELECT ( SELECT COUNT(T1.BrandID) FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T2.State = 'LA' AND T1.ContainerType = 'Bottle' ) - ( SELECT COUNT(T3.BrandID) FROM rootbeer AS T3 INNER JOIN rootbeerbrand AS T4 ON T3.BrandID = T4.BrandID WHERE T4.State = 'MO' AND T3.ContainerType = 'Bottle' ) AS DIFFERENCE
beer_factory,What is the transaction ratio being made at Sac State American River Courtyard and Sac State Union?,"transaction ratio = DIVIDE(SUM(TransactionID WHERE LocationName = 'Sac State American River Courtyard'), SUM(TransactionID WHERE LocationName = 'Sac State Union')); Sac State American River Courtyard refers to LocationName = 'Sac State American River Courtyard'; Sac State Union refers to LocationName = 'Sac State Union';",SELECT CAST(COUNT(CASE WHEN T2.LocationName = 'Sac State American River Courtyard' THEN T1.TransactionID ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN T2.LocationName = 'Sac State Union' THEN T1.TransactionID ELSE NULL END) FROM `transaction` AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID
beer_factory,List out the name of the top 10 spenders and what credit card type are they using.,top 10 spenders refers to MAX(PurchasePrice) LIMIT 10;,"SELECT T1.First, T1.Last, T2.CreditCardType FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY SUM(T2.PurchasePrice) DESC LIMIT 10"
beer_factory,List out root beer brand that is not caffeinated and not containing cane sugar. What is the total amount sold for this products?,root beer brand refers to BrandName; not caffeinated refers to Caffeinated = 'FALSE'; not containing cane sugar refers to CaneSugar = 'FALSE'; total amount sold = SUM(PurchasePrice);,"SELECT T1.BrandName, SUM(T3.PurchasePrice) FROM rootbeerbrand AS T1 INNER JOIN rootbeer AS T2 ON T1.BrandID = T2.BrandID INNER JOIN `transaction` AS T3 ON T2.RootBeerID = T3.RootBeerID WHERE T1.CaneSugar = 'FALSE' AND T1.Caffeinated = 'FALSE' GROUP BY T1.BrandName"
beer_factory,Which of the root beer brand have the lowest purchase?,root beer brand refers to BrandName; lowest purchase refers to MIN(COUNT(BrandID));,SELECT T2.BrandName FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID GROUP BY T2.BrandID ORDER BY COUNT(T1.BrandID) LIMIT 1
beer_factory,What is the best seller root beer brand and what is the average star rating for this root beer?,best seller root beer refers to MAX(COUNT(BrandID)); average star rating = AVG(StarRating);,"SELECT T1.BrandID, AVG(T1.StarRating) FROM rootbeerreview AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID GROUP BY T3.BrandID ORDER BY COUNT(T1.BrandID) DESC LIMIT 1"
beer_factory,What is the percentage difference of River City sale compare to Frostie?,"percentage difference = (DIVIDE(MULTIPLY(SUBTRACT(SUM(PurchasePrice WHERE BrandName = 'River City'), SUM(PurchasePrice WHERE BrandName = 'Frostie')), 100), SUM(PurchasePrice WHERE BrandName = 'Frostie'))); River City refers to BrandName = 'River City'; Frostie refers to BrandName = 'Frostie';",SELECT CAST((SUM(CASE WHEN T3.BrandName = 'River City' THEN T2.PurchasePrice ELSE 0 END) - SUM(CASE WHEN T3.BrandName = 'Frostie' THEN T2.PurchasePrice ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T3.BrandName = 'Frostie' THEN T2.PurchasePrice ELSE 0 END) FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID
beer_factory,Please name all of the cities in California.,California refers to State = 'CA';,SELECT DISTINCT City FROM customers WHERE State = 'CA'
beer_factory,What is the percentage of female customers who subscribed to the email list?,"percentage = MULTIPLY(DIVIDE(COUNT(CustomerID WHERE Gender = 'F'), COUNT(CustomerID) WHERE SubscribedToEmailList = 'TRUE'), 1.0); female refers to Gender = 'F'; subscribed to the email list refers to SubscribedToEmailList = 'TRUE';",SELECT CAST(COUNT(CASE WHEN Gender = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(SubscribedToEmailList) FROM customers WHERE SubscribedToEmailList = 'TRUE'
beer_factory,Which type of card did Dick Ruthven use to pay for all of his transactions?,type of card refers to CreditCardType;,SELECT DISTINCT T2.CreditCardType FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Dick' AND T1.Last = 'Ruthven'
beer_factory,How many transactions were made at Sac State Union?,Sac State Union refers to LocationName = 'Sac State Union';,SELECT COUNT(T1.TransactionID) FROM `transaction` AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.LocationName = 'Sac State Union'
beer_factory,How many stars did Urijah Faber rate for Frostie?,stars refers to StarRating; Frostie refers to BrandName = 'Frostie';,SELECT T2.StarRating FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeerbrand AS T3 ON T2.BrandID = T3.BrandID WHERE T1.First = 'Urijah' AND T1.Last = 'Faber' AND T3.BrandName = 'Frostie'
beer_factory,"Which brand has the lowest star rating with a ""Too spicy!"" review?","lowest star rating refers to MIN(StarRating); ""Too spicy!"" review refers to Review = 'Too Spicy!';",SELECT T1.BrandName FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T2.BrandID = T1.BrandID WHERE T2.StarRating = 1 AND T2.Review = 'Too Spicy!'
beer_factory,How many purchases were made at Sac State American River Courtyard using Master Card?,Sac State American River Courtyard refers to LocationName = 'Sac State American River Courtyard'; Master Card refers to CreditCardType = 'MasterCard';,SELECT COUNT(T1.TransactionID) FROM `transaction` AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.LocationName = 'Sac State American River Courtyard' AND T1.CreditCardType = 'MasterCard'
beer_factory,Which brand in 2012 has the lowest star rating and contains cane sugar as well as honey?,brand refers to BrandName; in 2012 refers to ReviewDate LIKE '2012%'; lowest star rating refers to MIN(StarRating); contains cane sugar as well as honey refers to CaneSugar = 'TRUE' AND Honey = 'TRUE';,SELECT DISTINCT T1.BrandName FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T1.CaneSugar = 'TRUE' AND T1.Honey = 'TRUE' AND T2.StarRating = 1 AND T2.ReviewDate LIKE '2012%'
beer_factory,What is the precise location of the place where Tommy Kono made a purchase in 2014?,"precise location = Latitude, Longitude; in 2014 refers to TransactionDate LIKE '2014%';","SELECT DISTINCT T1.Latitude, T1.Longitude FROM geolocation AS T1 INNER JOIN `transaction` AS T2 ON T2.LocationID = T1.LocationID INNER JOIN customers AS T3 ON T3.CustomerID = T2.CustomerID WHERE T3.First = 'Tommy' AND T3.Last = 'Kono' AND T2.TransactionDate LIKE '2014%'"
beer_factory,What is the email address of the customer who made a purchase in transaction 100016?,email address refers to Email; transaction 100016 refers to TransactionID = 100016;,SELECT T1.Email FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.TransactionID = '100016'
beer_factory,How many transactions were made to purchase a bottle of beer using American Express?,bottle of beer refers to ContainerType = 'Bottle'; American Express refers to CreditCardType = 'American Express';,SELECT COUNT(T1.RootBeerID) FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID WHERE T1.ContainerType = 'Bottle' AND T2.CreditCardType = 'American Express'
beer_factory,Which location sold more bottles of beer?,location refers to LocationName; bottle of beer refers to ContainerType = 'Bottle'; location that sold more bottles of beer refers to MAX(COUNT(LocationID WHERE ContainerType = 'Bottle'));,SELECT T2.LocationName FROM rootbeer AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.ContainerType = 'Bottle' GROUP BY T2.LocationID ORDER BY COUNT(T1.LocationID) DESC LIMIT 1
beer_factory,Please name any three root beer brands that have the highest market evaluation and acceptance.,root beer brands refers to BrandName; highest market evaluation and acceptance refers to MAX(COUNT(StarRating = 5));,SELECT DISTINCT T1.BrandName FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T2.StarRating = 5 LIMIT 3
beer_factory,What is the precise location of the Sac State American River Courtyard?,"precise location = Latitude, Longitude; Sac State American River Courtyard refers to LocationName = 'Sac State American River Courtyard';","SELECT T2.Latitude, T2.Longitude FROM location AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID WHERE T1.LocationName = 'Sac State American River Courtyard'"
sales,How many sales ids are there for customer id 80?,,SELECT COUNT(SalesID) FROM Sales WHERE CustomerID = 80
sales,Count the total quantity for sales from id 1 to 10.,sales from id 1 to 10 refers to SalesID BETWEEN 1 AND 10;,SELECT SUM(Quantity) FROM Sales WHERE SalesID BETWEEN 1 AND 10
sales,Calculate the average quantity per sales from sales id 20 to 30.,average quantity = AVG(Quantity); SalesID BETWEEN 20 AND 30;,SELECT AVG(Quantity) FROM Sales WHERE SalesID BETWEEN 20 AND 30
sales,List down the product id for products with the highest quantity.,highest quantity refers to MAX(Quantity);,SELECT DISTINCT ProductID FROM Sales WHERE Quantity = ( SELECT MAX(Quantity) FROM Sales )
sales,How many product ids have the lowest price?,lowest price refers to MIN(Price);,SELECT COUNT(DISTINCT ProductID) FROM Products WHERE Price = ( SELECT MAX(Price) FROM Products )
sales,List down product names of free gifts.,free gifts refers to Price = 0;,SELECT Name FROM Products WHERE Price = 0
sales,List down the product name for products from id 1 to 10.,products from id 1 to 10 refers to ProductID BETWEEN 1 AND 10;,SELECT Name FROM Products WHERE ProductID BETWEEN 1 AND 10
sales,What is the name of the product with the lowest quantity?,lowest quantity refers to MIN(Quantity);,SELECT T2.Name FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID ORDER BY T1.Quantity LIMIT 1
sales,How many customer ids have purchased Hex Nut 9?,Hex Nut 9' is name of product;,SELECT COUNT(T1.CustomerID) FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'Hex Nut 9'
sales,Calculate the total sales ids that were sales of Flat Washer 8.,Flat Washer 8' is name of product;,SELECT COUNT(T1.SalesID) FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'Flat Washer 8'
sales,List down all of the product names that were placed by sales person with id 10.,id refers to SalesPersonID; SalesPersonID = 10,SELECT DISTINCT T1.Name FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T2.SalesPersonID = 10
sales,List down the first name of customers who placed order for product id 1.,,SELECT T1.FirstName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T2.ProductID = 1
sales,What is the last name of the customer who placed an order for sales id 178?,,SELECT T1.LastName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.SalesID = 178
sales,List down product ids that were purchased by customers called Abby.,,SELECT DISTINCT T1.ProductID FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.FirstName = 'Abby'
sales,Write down all of the product ids that were placed by Meander.,,SELECT DISTINCT T2.ProductID FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID WHERE T1.FirstName = 'Meander'
sales,What is the last name of sales person for sales id 100?,,SELECT T1.LastName FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID WHERE T2.SalesID = 100
sales,What is the first name of employee who handled sales for customer called Abigail?,,SELECT DISTINCT T3.FirstName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Employees AS T3 ON T2.SalesPersonID = T3.EmployeeID WHERE T1.FirstName = 'Abigail'
sales,How many free gifts have customer with id 11782 received?,free gifts refers to Price = 0;,SELECT COUNT(T1.ProductID) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T2.CustomerID = 11782 AND T1.Price = 0
sales,What is the full name of customers who dealt with sales person with id 5?,"full name = FirstName, MiddleInitial, LastName;","SELECT T1.FirstName, T1.MiddleInitial, T1.LastName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.SalesPersonID = 5"
sales,"List down all of the sales IDs for sales handled by sales people with first name starting with alphabet ""s"".","first name starting with alphabet ""s"" refers to FirstName LIKE 's%';","SELECT T1.SalesID FROM Sales AS T1 INNER JOIN Employees AS T2 ON T1.SalesPersonID = T2.EmployeeID WHERE SUBSTR(T2.FirstName, 1, 1) = 's'"
sales,"Among customers with IDs from 1 to 100, what is the highest price of products they purchased?",IDs from 1 to 100 refers to CustomerID BETWEEN 1 AND 100 ; highest price refers to MAX(Price);,SELECT T1.Price FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T2.CustomerID BETWEEN 1 AND 100 ORDER BY T1.Price DESC LIMIT 1
sales,"Among customers with the last name of Valdez, who purchased the highest quantity?",highest quantity refers to MAX(Quantity);,SELECT T1.FirstName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.LastName = 'Valdez' ORDER BY T2.Quantity DESC LIMIT 1
sales,"Sum up the number sales ids handled by employees called Morningstar, Heather and Dean.","SUM = ADD(SUM(SalesID WHERE FirstName = 'Morningstar'), SUM(SalesID WHERE FirstName = 'Heather'), SUM(SalesID WHERE FirstName = 'Dean'));","SELECT SUM(IIF(T2.FirstName = 'Morningstar', 1, 0)) + SUM(IIF(T2.FirstName = 'Heather', 1, 0)) + SUM(IIF(T2.FirstName = 'Dean', 1, 0)) AS num FROM Sales AS T1 INNER JOIN Employees AS T2 ON T1.SalesPersonID = T2.EmployeeID"
sales,Has Alex purchased product with id 498?,WHEN ProductID = 498 AND FirstName = 'Alex' means that Alex purchased a product; WHEN ProductID = 498 AND FirstName NOT 'Alex' means Alex has not purchased a product;,"SELECT IIF(T1.ProductID = 498, 'YES', 'NO') FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.FirstName = 'Alex'"
sales,Calculate the total price of products purchased by Adam.,"total price = SUM(MULTIPLY(Price, Quantity));",SELECT SUM(T3.Price * T2.quantity) FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.FirstName = 'Adam'
sales,Calculate the total price for products from id 400 to 500.,"total price = SUM(MULTIPLY(Price, Quantity)); from id 400 to 500 refers to ProductID BETWEEN 400 AND 500;",SELECT SUM(T1.Price * T2.quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductID BETWEEN 400 AND 500
sales,"Calculate the total quantity of products with name starting with alphabet ""c"".","name starting with alphabet ""c"" refers to Name LIKE 'C%';","SELECT SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE SUBSTR(T1.Name, 1, 1) = 'C'"
sales,Calculate the total quantity of products purchased by customer called Adrian.,,SELECT SUM(T2.Quantity) FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.FirstName = 'Adam'
sales,"List the product ID of the top five products, by descending order, in terms of price.",top 5 products in terms of Price refers to MAX(Price) LIMIT 5;,SELECT ProductID FROM Products ORDER BY Price DESC LIMIT 5
sales,"Among the products, how many of them are freebies?",freebies refers to Price = 0;,SELECT COUNT(ProductID) FROM Products WHERE Price = 0
sales,Write down the name of products whose sale quantity is more than 950.,quantity is more than 950 refers to Quantity > 950;,SELECT DISTINCT T1.Name FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Quantity > 950
sales,What is the full name of employee who sold 1000 units?,"full name of employee = FirstName, MiddleInitial, LastName; units refers to quantity; Quantity = 100","SELECT DISTINCT T2.FirstName, T2.MiddleInitial, T2.LastName FROM Sales AS T1 INNER JOIN Employees AS T2 ON T1.SalesPersonID = T2.EmployeeID WHERE T1.Quantity = 1000"
sales,Tally the product name and quantity of the first ten sales.,first ten sales refers to SalesID BETWEEN 1 AND 10;,"SELECT T3.Name, T2.Quantity FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T2.SalesID BETWEEN 1 AND 10"
sales,What is the total sales amount for Reflector?,"total sales amount = SUM(MULTIPLY(Price, Quantity)); 'Reflector' is name of product;",SELECT SUM(T1.Price * T2.quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'Reflector'
sales,"What is the best selling colour for HL Mountain Frame, 42?","best selling colour refers to name of product with higher total sales; SUM(SalesID WHERE Name = 'HL Mountain Frame - Silver, 42') > SUM(Name = 'HL Mountain Frame - Black, 42') means Silver is the best selling colour, otherwise Black is the best seling colour;","SELECT IIF(SUM(IIF(T1.Name = 'HL Mountain Frame - Silver, 42', T2.SalesID, 0)) - SUM(IIF(T1.Name = 'HL Mountain Frame - Black, 42', T2.SalesID, 0)) > 0, 'Silver', 'Black') FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID"
sales,"What is the difference in price between HL Mountain Frame - Black, 42 and LL Mountain Frame - Black, 42?","difference = SUBTRACT((Price WHERE Name = 'HL Mountain Frame - Black, 42'), (Price WHERE Name = 'HL Mountain Frame - Black, 42'));","SELECT ( SELECT Price FROM Products WHERE Name = 'HL Mountain Frame - Black, 42' ) - ( SELECT Price FROM Products WHERE Name = 'LL Mountain Frame - Black, 42' ) AS num"
sales,Calculate the total number of sales closed by Michel E. DeFrance?,,SELECT COUNT(T1.SalesID) FROM Sales AS T1 INNER JOIN Employees AS T2 ON T1.SalesPersonID = T2.EmployeeID WHERE T2.FirstName = 'Michel' AND T2.MiddleInitial = 'e' AND T2.LastName = 'DeFrance'
sales,What is the average number of customers per sales person?,"average = DIVIDE(COUNT(CustomerID), COUNT(EmployeeID));",SELECT CAST(COUNT(T1.CustomerID) AS REAL) / COUNT(T3.EmployeeID) FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Employees AS T3 ON T2.SalesPersonID = T3.EmployeeID
sales,"Among all customers handled by Innes E. del Castillo, how many have purchased Short-Sleeve Classic Jersey, L?","Short-Sleeve Classic Jersey, L' is name of product;","SELECT COUNT(T2.CustomerID) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Employees AS T3 ON T2.SalesPersonID = T3.EmployeeID WHERE T3.FirstName = 'Innes' AND T3.LastName = 'del Castillo' AND T1.Name = 'Short-Sleeve Classic Jersey, L' AND T3.MiddleInitial = 'e'"
sales,"Name the sales person who helped Elizabeth A. White to purchase Road-250 Black, 48.","name of the sales person = FirstName, MiddleInitial, LastName; 'Road-250 Black, 48' is name of product;","SELECT DISTINCT T3.FirstName, T3.MiddleInitial, T3.LastName FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Employees AS T3 ON T2.SalesPersonID = T3.EmployeeID INNER JOIN Customers AS T4 ON T2.CustomerID = T4.CustomerID WHERE T4.MiddleInitial = 'A' AND T4.LastName = 'White' AND T1.Name = 'Road-250 Black, 48' AND T4.FirstName = 'Elizabeth'"
sales,How many sales people managed to sell Headlights - Weatherproof?,Headlights - Weatherproof' is name of product,SELECT COUNT(T2.SalesPersonID) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'Headlights - Weatherproof'
sales,"Calculate the revenue produced through sales of HL Road Frame - Red, 56.","revenue = MULTIPLY(SUM(Quantity, Price)); 'HL Road Frame - Red, 56' is name of product;","SELECT SUM(T2.Quantity * T1.Price) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'HL Road Frame - Red, 56'"
sales,How many sales transactions were given by the customer named Joe L. Lopez?,sales transactions refers to SalesID;,SELECT COUNT(T1.SalesID) FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.FirstName = 'Joe' AND T2.MiddleInitial = 'L' AND T2.LastName = 'Lopez'
sales,Name the customers who received 'Touring Rim' as a free gift.,"name of the customer = FirstName, MiddleInitial, LastName; 'Touring Rim' is name of product;","SELECT DISTINCT T1.FirstName, T1.MiddleInitial, T1.LastName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T3.Name = 'Touring Rim' AND T3.Price = 0"
sales,Find the number of customers handled by each of the sales people.,,SELECT COUNT(CustomerID) FROM Sales GROUP BY SalesPersonID
sales,How many sales people are handling all the customers?,,SELECT COUNT(EmployeeID) FROM Employees
sales,Identify the name of the sales person with employee ID 7.,"name of the sales person = FirstName, MiddleInitial, LastName;","SELECT FirstName, MiddleInitial, LastName FROM Employees WHERE EmployeeID = 7"
sales,"Name the most expensive and the least expensive products available, excluding free gifts.",most expensive product refers to MAX(Price); least expensive product refers to MIN(Price); excluding free gifts refers to not including Price = 0;,"SELECT Name FROM Products WHERE Price IN (( SELECT MAX(Price) FROM Products ), ( SELECT MIN(Price) FROM Products ))"
sales,"Among all the customers who have purchased ML Bottom Bracket, identify the percentage of sales by Albert I. Ringer?","ML Bottom Bracket' is name of product; percentage = MULTIPLY(DIVIDE(SUM(CustomerID WHERE FirstName = 'Albert' AND MiddleInitial = 'I' AND LastName = 'Ringer'), COUNT(CustomerID)), 1.0);","SELECT CAST(SUM(IIF(T3.FirstName = 'Albert' AND T3.MiddleInitial = 'I' AND T3.LastName = 'Ringer', 1, 0)) AS REAL) * 100 / COUNT(T2.CustomerID) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Employees AS T3 ON T2.SalesPersonID = T3.EmployeeID WHERE T1.Name = 'ML Bottom Bracket'"
sales,How many customers have the first name Abigail?,,SELECT COUNT(CustomerID) FROM Customers WHERE FirstName = 'Abigail'
sales,Indicate the quantity of Blade products sold.,Blade' is name of product;,SELECT DISTINCT T2.Quantity FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'Blade'
sales,Give the full name of the employee who has sold the most quantity.,"full name of the employee = FirstName, LastName; most quantity refers to MAX(Quantity);","SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID ORDER BY T2.Quantity DESC LIMIT 1"
sales,List the full name of the customer who purchased the most quantity of products.,"full name of the customer = FirstName, LastName; most quantity refers to MAX(Quantity);","SELECT T1.FirstName, T1.LastName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID ORDER BY T2.Quantity DESC LIMIT 1"
sales,What is the name of the product that is most sold by sale person id 20?,most sold refers to MAX(Quantity);,SELECT T1.Name FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T2.SalesPersonID = 20 ORDER BY T2.Quantity DESC LIMIT 1
sales,List the first names of employees with trading quantity for more than 500.,trading quantity for more than 500 refers to Quantity > 500;,SELECT DISTINCT T1.FirstName FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID WHERE T2.Quantity > 500
sales,List the first names of customers who have purchased products from sale person id 1.,,SELECT T1.FirstName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.SalesPersonID = 1
sales,Calculate the total trading quantity of Abraham sold to Aaron Alexander.,total trading quantity = SUM(Quantity WHERE Employees.FirstName = 'Abraham' AND Customers.FirstName = 'Aaron' AND Customers.LastName = 'Alexander');,SELECT SUM(T2.Quantity) FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Employees AS T3 ON T2.SalesPersonID = T3.EmployeeID WHERE T2.SalesPersonID = 1 AND T1.FirstName = 'Aaron' AND T1.LastName = 'Alexander' AND T3.FirstName = 'Abraham'
sales,List the full names of customers who have purchased products in quantity over 600.,"full names of customers = FirstName, LastName; quantity over 600 refers to quantity > 600;","SELECT T1.FirstName, T1.LastName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Quantity > 600"
sales,"Among the customers whose first name is Cameron, who bought the product in the most quantity?","most quantity refers to MAX(Quantity); who refers to FirstName, LastName;","SELECT T1.FirstName, T1.LastName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.FirstName = 'Cameron' ORDER BY T2.Quantity DESC LIMIT 1"
sales,Please provide sales ID for products named Hex Nut with a price greater than 100.,price greater than 100 refers to price > 100;,SELECT T2.SalesID FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name LIKE 'Hex Nut%' AND T1.Price > 100
sales,Identify customer IDs who bought products priced from 1000 to 2000.,priced from 1000 to 2000 refers to Price BETWEEN 1000 AND 2000;,SELECT DISTINCT T2.CustomerID FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Price BETWEEN 1000 AND 2000
sales,Calculate the total quantity of products that are gifts.,total quantity = SUM(Quantity); gifts refers to Price = 0;,SELECT SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Price = 0
sales,Calculate the quantity percentage of the gift products in the total trading quantity.,"percentage = MULTIPLY(DIVIDE(SUM(Quantity WHERE Price = 0), SUM(Quantity)), 1.0); gift products refers to Price = 0;","SELECT CAST(SUM(IIF(T1.Price = 0, T2.Quantity, 0)) AS REAL) * 100 / SUM(T2.Quantity)FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID"
sales,Calculate the percentage of sold blades in the total number of transactions.,"percentage = MULTIPLY(DIVIDE(SUM(Quantity WHERE Name = 'Blade'), SUM(Quantity)), 1.0); 'blades' refers to name of product;","SELECT CAST(SUM(IIF(T1.Name = 'Blade', T2.Quantity, 0)) AS REAL) * 100 / SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID"
sales,"How many of the employees have the last name ""Ringer"" ?",,SELECT COUNT(LastName) FROM Employees WHERE LastName = 'Ringer'
sales,"Among the products with product ID lower than 15, how many of them costs 10 and below?",product ID lower than 15 refers to ProductID < 15; costs 10 and below refers to Price; Price < = 10;,SELECT COUNT(ProductID) FROM Products WHERE ProductID < 15 AND Price <= 10
sales,Give the product's name brought by Aaron Alexander.,,SELECT DISTINCT T1.Name FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.FirstName = 'Aaron' AND T3.LastName = 'Alexander'
sales,Give the product ID and name of the product with the highest prices among the quantity ranges from 400 to 500.,highest prices refers to MAX(Price); quantity ranges from 400 to 500 refers to Quantity BETWEEN 400 AND 500;,"SELECT T1.ProductID, T1.Name FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T2.quantity BETWEEN 400 AND 500 ORDER BY T1.Price DESC LIMIT 1"
sales,"Among customers named Kate, who has the highest quantity?",highest quantity refers to MAX(Quantity);,"SELECT T2.FirstName, T2.LastName FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.FirstName = 'Kate' ORDER BY T1.Quantity DESC LIMIT 1"
sales,"Among the products that have price ranges from 100 to 150, what is the customer ID and sales ID of the product with a quantity lower than 25?",price ranges from 100 to 150 refers to Price BETWEEN 100 AND 150; quantity lower than 25 refers to Quantity < 25;,"SELECT T2.CustomerID, T2.SalesID FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Price BETWEEN 100 AND 150 AND T2.Quantity < 25"
sales,List the quantity and price of the product bought by Abigail Henderson.,,"SELECT T2.Quantity, T1.Price FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.FirstName = 'Abigail' AND T3.LastName = 'Henderson'"
sales,"In sales with a quantity of 60, how many of them have a price not greater than 500?",,SELECT COUNT(T1.ProductID) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T2.quantity = 60 AND T1.Price <= 500
sales,"In customers with the first name of Erica, how many of them bought a quantity below 200?",quantity below 200 refers to quantity < 200;,SELECT COUNT(T1.ProductID) FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.FirstName = 'Erica' AND T1.Quantity < 200
sales,"Among products bought by Kathryn Ashe, what is the name of the product with the highest quantity?",highest quantity refers to MAX(Quantity);,SELECT T1.Name FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.FirstName = 'Kathryn' AND T3.LastName = 'Ashe' ORDER BY T2.Quantity DESC LIMIT 1
sales,What is the price and quantity of the product named Seat Tube?,,"SELECT DISTINCT T2.Price, T1.Quantity FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'Seat Tube'"
sales,What is the price and name of the product bought by Erica Xu?,,"SELECT T3.Price, T3.Name FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.FirstName = 'Erica' AND T2.LastName = 'Xu'"
sales,"List the sales ID of the product with a quantity of 590 and named ""External Lock Washer 7"".",External Lock Washer 7' is name of product;,SELECT T1.SalesID FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'External Lock Washer 7' AND T1.Quantity = 590
sales,"In sales ID between 30 and 40, who is the customer that bought a total quantity of 403?","who refers to FirstName, LastName;","SELECT T2.FirstName, T2.LastName FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Quantity = 403 AND T1.SalesID BETWEEN 30 AND 40"
sales,List the customer's ID and last name of the customer that purchased a product with a quantity greater than 90% of the average quantity of all listed products.,"quantity greater than 90% of the average quantity = Quantity > MULTIPLY(AVG(Quantity), 0.9);","SELECT T2.CustomerID, T2.LastName FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Quantity > ( SELECT AVG(Quantity) FROM Sales ) * 0.9"
sales,"Among the sales ID ranges from 1 to 200, what is the percentage of the products with a price ranging from 200 to 300?","sales ID ranges from 1 to 200 refers to SalesID between 1 and 200; percentage = MULTIPLY(DIVIDE(SUM(Price between 200 and 300), COUNT(Price)), 1.0);","SELECT CAST(SUM(IIF(T2.Price BETWEEN 200 AND 300, 1, 0)) AS REAL) * 100 / COUNT(T2.Price) FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T1.SalesID BETWEEN 1 AND 200"
sales,What is the name of the most expensive product?,most expensive product refers to MAX(Price);,SELECT Name FROM Products WHERE Price = ( SELECT MAX(Price) FROM Products )
sales,How many customers are named Madison?,,SELECT COUNT(CustomerID) FROM Customers WHERE FirstName = 'Madison'
sales,"How many types of ""HL Touring Frames"" are there?",types of HL Touring Frames refers to Name like '%HL Touring Frame%';,SELECT COUNT(ProductID) FROM Products WHERE Name LIKE '%HL Touring Frame%'
sales,How many customers share the most common last name?,most common last name refers to MAX(COUNT(LastName));,SELECT COUNT(CustomerID) FROM Customers GROUP BY LastName ORDER BY COUNT(LastName) DESC LIMIT 1
sales,How many free or gift products are there?,free gift refers to Price = 0;,SELECT COUNT(ProductID) FROM Products WHERE Price = 0
sales,What is the name of the sales person who handled the highest number of sales?,"name of the sales person = FirstName, MiddleInitial, LastName; highest number of sales refers to MAX(COUNT(SalesID));","SELECT T1.FirstName, T1.MiddleInitial, T1.LastName FROM Employees AS T1 INNER JOIN Sales AS T2 ON T2.SalesPersonID = T1.EmployeeID GROUP BY T2.SalesPersonID, T1.FirstName, T1.MiddleInitial, T1.LastName ORDER BY COUNT(T2.SalesID) DESC LIMIT 1"
sales,What is the full name of the customer who purchased the highest amount of total price in a single purchase?,"full name of the customer = FirstName, MiddleInitial, LastName; highest amount of total price refers to MAX(MULTIPLY(Quantity, Price));","SELECT T2.FirstName, T2.MiddleInitial, T2.LastName FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Products AS T3 ON T1.ProductID = T3.ProductID GROUP BY T1.SalesID, T1.Quantity, T3.Price, FirstName, MiddleInitial, LastName ORDER BY T1.Quantity * T3.Price DESC LIMIT 1"
sales,"How many ""Mountain-500 Black 42"" were sold in total?",Mountain-500 Black 42' is name of product; sold in total = SUM(Quantity);,"SELECT SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'Mountain-500 Black, 42'"
sales,How much is the total amount of sales handled by Heather McBadden?,"total amount of sales = SUM(MULTIPLY(Quantity, Price));",SELECT SUM(T2.Quantity * T3.Price) FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.FirstName = 'Heather' AND T1.LastName = 'McBadden'
sales,"How many ""Mountain-100 Silver, 38"" were sold by Stearns MacFeather?","Mountain-100 Silver, 38' is name of product;","SELECT SUM(T2.Quantity) FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.FirstName = 'Stearns' AND T1.LastName = 'MacFeather' AND T3.Name = 'Mountain-100 Silver, 38'"
sales,How many type of products did Dalton M. Coleman purchase?,,SELECT COUNT(T2.ProductID) FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.FirstName = 'Dalton' AND T1.MiddleInitial = 'M' AND T1.LastName = 'Coleman'
sales,What are the full names of the top 3 employees who handled the highest number of sales?,"full names of employees = FirstName, MiddleInitital, LastName; highest number of sales refers to MAX(COUNT(SalesID));","SELECT T1.FirstName, T1.MiddleInitial, T1.LastName FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID GROUP BY T2.SalesPersonID, T1.FirstName, T1.MiddleInitial, T1.LastName ORDER BY COUNT(T2.SalesID) DESC LIMIT 3"
sales,"Among the ""Mountain-500 Black"" product types, which type was purchased the most?",Mountain-500 Black product types refers to Name like 'Mountain-500 Black%'; purchased the most refers to MAX(SUM(Quantity));,"SELECT T1.Name FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name LIKE 'Mountain-500 Black%' GROUP BY T2.Quantity, T1.Name ORDER BY SUM(T2.Quantity) DESC LIMIT 1"
sales,"How many employees sold ""ML Road Frame-W - Yellow, 40""?","ML Road Frame-W - Yellow, 40' is name of product;","SELECT COUNT(T2.SalesPersonID) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'ML Road Frame-W - Yellow, 40'"
sales,How many chainring bolts were sold under sales ID 551971?,Chainring Bolts' is name of product;,SELECT T1.Quantity FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'Chainring Bolts' AND T1.SalesID = 551971
sales,"How many employees sold over 20,000 quantities of ""Touring-2000 Blue, 50""?","over 20,000 quantities refers to Quantity > 20000; 'Touring-2000 Blue, 50' is name of product;","SELECT COUNT(*) FROM ( SELECT SUM(Quantity) FROM Sales WHERE ProductID IN ( SELECT ProductID FROM Products WHERE Name = 'Touring-2000 Blue, 50' ) GROUP BY Quantity, SalesPersonID HAVING SUM(Quantity) > 20000 )"
sales,"What is the total cost of all the ""Road-650, Red, 60"" products that Abraham E. Bennet sold?","total cost = SUM(MULTIPLY(Quantity, Price)); 'Road-650, Red, 60' is name of product;","SELECT SUM(T2.Quantity * T3.Price) FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.FirstName = 'Abraham' AND T1.MiddleInitial = 'e' AND T1.LastName = 'Bennet' AND T3.Name = 'Road-650 Red, 60'"
sales,Which product has the highest total amount of quantity sold? Calculate its overall total price.,"highest total amount of quantity refers to MAX(Quantity); overall total price = SUM(MULTIPLY(Quantity, Price));","SELECT T1.Name, SUM(T2.Quantity * T1.Price) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID GROUP BY T1.ProductID, T1.Name ORDER BY SUM(T2.Quantity) DESC LIMIT 1"
sales,List the first name of all the customers whose last name is Chen.,,"SELECT FirstName, LastName FROM Customers WHERE LastName = 'Chen'"
sales,"Among the employee names, what is the most common middle initial?",most common middle initial refers to MAX(COUNT(MiddleInitial));,SELECT MiddleInitial FROM Employees GROUP BY MiddleInitial ORDER BY COUNT(MiddleInitial) DESC LIMIT 1
sales,What is the average price of products that cost between 100 and 200?,"average price = DIVIDE(SUM(Price, COUNT(Price))); cost refers to Price; Price BETWEEN 100 AND 200;",SELECT AVG(Price) FROM Products WHERE Price BETWEEN 100 AND 200
sales,Find and list the full name of customers who bought products above-average quantity.,"full name of the customer = FirstName, MiddleInitial, LastName; above-average quantity = Quantity > AVG(Quantity);","SELECT T2.FirstName, T2.MiddleInitial, T2.LastName FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Quantity HAVING T1.Quantity > ( SELECT AVG(Quantity) FROM Sales )"
sales,Give the full name of the customer who bought the most amount of products.,"full name of the customer = FirstName, MiddleInitial, LastName; most amount of products refers to MAX(MULTIPLY(Quantity, Price));","SELECT T3.FirstName, T3.MiddleInitial, T3.LastName FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Customers AS T3 ON T2.CustomerID = T3.CustomerID ORDER BY T2.Quantity * T1.Price DESC LIMIT 1"
sales,"Of the employees who sold Blade, who has the most amount of sales?","Blade' is name of product; most amount of sales refers to MAX(MULTIPLY(Quantity, Price));","SELECT T1.FirstName, T1.MiddleInitial, T1.LastName FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID ORDER BY T2.Quantity * T3.Price DESC LIMIT 1"
sales,"List the full name of customers who spend more than 50,000 in descending order the amount spend.","full name of the customer = FirstName, MiddleInitial, LastName; more than 50,000 in the amount refers to MULTIPLY(Quantity, Price) > 50000;","SELECT DISTINCT T3.FirstName, T3.MiddleInitial, T3.LastName FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T2.Quantity * T1.Price > 50000"
sales,Name the product that sold the most quantity.,most quantity refers to MAX(Quantity);,SELECT T2.Name FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID ORDER BY T1.Quantity DESC LIMIT 1
sales,Find and list the products that sold below the average quantity.,below the average quantity refers to Quantity < AVG(Quantity);,SELECT DISTINCT T2.Name FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Quantity < ( SELECT AVG(Quantity) FROM Sales )
menu,How many dishes do not have correct data for the year in which it appeared first?,do not have correct data refers to first_appeared < 1851 or first_appeared > 2012;,SELECT COUNT(*) FROM Dish WHERE first_appeared < 1851 OR first_appeared > 2012
menu,"Which dish lasted longer, Anchovies or Fresh lobsters in every style?","if (SUBTRACT(last_appeared, first_appeared) WHERE name = 'Anchovies') > (SUBTRACT(last_appeared, first_appeared) WHERE name = 'Fresh lobsters in every style'), it means 'Anchovies' lasted longer; if (SUBTRACT(last_appeared , first_appeared) WHERE name = 'Fresh lobsters in every style') > (SUBTRACT(last_appeared , first_appeared) WHERE name = 'Anchovies') it means 'Fresh lobsters in every style' last longer;","SELECT CASE WHEN SUM(CASE WHEN name = 'Anchovies' THEN last_appeared - first_appeared ELSE 0 END) - SUM(CASE WHEN name = 'Fresh lobsters in every style' THEN last_appeared - first_appeared ELSE 0 END) > 0 THEN 'Anchovies' ELSE 'Fresh lobsters in every style' END FROM Dish WHERE name IN ('Fresh lobsters in every style', 'Anchovies')"
menu,"Among all the dishes that were once free, what is the name of the dish that had appeared on most menus?",dishes that were once free refers to lowest_price = 0; appeared on most menus refers to MAX(menus_appeared);,SELECT name FROM Dish WHERE lowest_price = 0 ORDER BY menus_appeared DESC LIMIT 1
menu,"How many menus with the name ""Waldorf Astoria"" have 4 pages?",4 pages refers to page_count = 4;,SELECT COUNT(*) FROM Menu WHERE name = 'Waldorf Astoria' AND page_count = 4
menu,What is the name of the dish that appeared on the upper left corner on menu page no. 1389?,appeared on the upper left corner on menu refers to xpos < 0.25 AND ypos < 0.25; menu page no. refers to menu_page_id; menu_page_id = 1389;,SELECT T1.name FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T2.menu_page_id = 1389 AND T2.xpos < 0.25 AND T2.ypos < 0.25
menu,"Please list the prices of the dish ""Clear green turtle"" on every menu page it appeared on.",Clear green turtle is a name of dish;,SELECT T2.price FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.name = 'Clear green turtle'
menu,"Among all the menu pages with the appearance of the dish ""Clear green turtle"", how many of them have the dish at a stable price?",Clear green turtle is a name of dish; stable price refers to highest_price is null;,SELECT SUM(CASE WHEN T1.name = 'Clear green turtle' THEN 1 ELSE 0 END) FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.highest_price IS NULL
menu,"What is the highest price of the dish ""Clear green turtle"" on a menu page?",highest price refers to MAX(Price); Clear green turtle is a name of dish;,SELECT T2.price FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.name = 'Clear green turtle' ORDER BY T2.price DESC LIMIT 1
menu,"Please list the IDs of all the menus in which the dish ""Clear green turtle"" had appeared.",Clear green turtle is a name of dish;,SELECT T1.menu_id FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id INNER JOIN Dish AS T3 ON T2.dish_id = T3.id WHERE T3.name = 'Clear green turtle'
menu,"Among the menus in which the dish ""Clear green turtle"" had appeared, how many of them used the dollar as their currency?",Clear green turtle is a name of dish; dollar as currency refers to currency = 'Dollars';,SELECT SUM(CASE WHEN T3.currency = 'Dollars' THEN 1 ELSE 0 END) FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T4.name = 'Clear green turtle'
menu,"Among the menus in which the dish ""Clear green turtle"" had appeared, how many of them did not support taking out or booking in advance?",Clear green turtle is a name of dish; not support taking out or booking in advance refers to call_number is null;,SELECT SUM(CASE WHEN T4.name = 'Clear green turtle' THEN 1 ELSE 0 END) FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T3.call_number IS NULL
menu,"Please list the names of all the dishes that appeared on the menu ""Zentral Theater Terrace"".",Zentral Theater Terrace is a name of menu;,SELECT T4.name FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T3.name = 'Zentral Theater Terrace'
menu,"Which dish has the highest price on the menu ""Zentral Theater Terrace""? Please give its name.",highest price refers to MAX(Price); Zentral Theater Terrace is a name of menu;,SELECT T4.name FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T3.name = 'Zentral Theater Terrace' ORDER BY T1.price DESC LIMIT 1
menu,"How many dishes are there on the menu ""Zentral Theater Terrace""?",Zentral Theater Terrace is a name of menu;,SELECT SUM(CASE WHEN T3.name = 'Zentral Theater Terrace' THEN 1 ELSE 0 END) FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id
menu,"How many dishes are there in total in the menus with the name ""Waldorf Astoria""?",FALSE;,SELECT SUM(CASE WHEN T3.name = 'Waldorf Astoria' THEN 1 ELSE 0 END) FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id
menu,"Please list the IDs of the menus that are DIYs of the restaurant and have the dish ""Clear green turtle"".",IDs of the menus refers to menu_id; menus that are DIYs of the restaurant refers to sponsor is null; Clear green turtle is a name of dish;,SELECT T2.menu_id FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T4.name = 'Clear green turtle' AND T3.sponsor IS NULL
menu,"What is the average page number of the menus that have the dish ""Clear green turtle""?",average page number = AVG(page_number); Clear green turtle is a name of dish;,SELECT AVG(T1.page_number) FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id INNER JOIN Dish AS T3 ON T2.dish_id = T3.id WHERE T3.name = 'Clear green turtle'
menu,"What is the average price of the dishes on the menu ""Zentral Theater Terrace""?",average price = AVG(price); Zentral Theater Terrace refers to menu;,SELECT SUM(T1.price) / COUNT(T1.price) FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id WHERE T3.name = 'Zentral Theater Terrace'
menu,How many menu items were created on 28th March 2011?,created on 28th March 2011 refers to created_at like '2011-03-28%';,SELECT COUNT(*) FROM MenuItem WHERE created_at LIKE '2011-03-28%'
menu,How many dishes are included in the menu page ID 144?,FALSE;,SELECT COUNT(*) FROM MenuItem WHERE menu_page_id = 144
menu,How many menus were used in Dutcher House?,Dutcher House refers to location = 'Dutcher House';,SELECT COUNT(*) FROM Menu WHERE location = 'Dutcher House'
menu,How many dishes appeared on a menu more than once?,appeared on a menu more than once refers to times_appeared > menus_appeared;,SELECT COUNT(*) FROM Dish WHERE times_appeared > menus_appeared
menu,How many menus were created for steamship?,steamship refers to venue = 'STEAMSHIP';,SELECT COUNT(*) FROM Menu WHERE venue = 'STEAMSHIP'
menu,How many pages were there on the menu created on 17th November 1898?,created on 17th November 1898 refers to date = '1898-11-17';,SELECT SUM(CASE WHEN T1.date = '1898-11-17' THEN 1 ELSE 0 END) FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id
menu,Name the dishes that were on the menu page ID 174.,FALSE;,SELECT T2.name FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE T1.menu_page_id = 174
menu,List the names and menu page IDs of the dishes that first appeared in 1861.,first appeared in 1861 refers to first_appeared = 1861;,"SELECT T2.name, T1.dish_id FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE T2.first_appeared = 1861"
menu,"Among the dishes on menu page ID 7610, list the names and highest prices of the dishes in menu items that were created on 23rd May 2011.",highest prices of the dishes refers to MAX(price); created on 23rd May 2011 refers to created_at like '2011-05-23%';,"SELECT T1.name, T2.price FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T2.created_at LIKE '2011-05-23%' ORDER BY T2.price DESC LIMIT 1"
menu,List the dishes included on page number 30 with the least in full height.,least in full height refers to MIN(full_height);,"SELECT T3.name FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id INNER JOIN Dish AS T3 ON T2.dish_id = T3.id WHERE T1.page_number = 30 ORDER BY T1.full_height DESC, T1.full_height ASC LIMIT 1"
menu,Provide the page IDs and name of the menu which had the highest page count.,page IDs refers to page_number; highest page count refers to MAX(page_count);,"SELECT T1.page_number, T2.name FROM MenuPage AS T1 INNER JOIN Menu AS T2 ON T2.id = T1.menu_id ORDER BY T2.page_count DESC LIMIT 1"
menu,"On the menu with the most dishes, how many dishes were there on its second page?",menu with the most dishes refers to menu.id with MAX(dish_count); second page refers to page_number = 2;,SELECT COUNT(T1.dish_id) FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id WHERE T2.page_number = 2 GROUP BY T3.name ORDER BY T3.dish_count DESC LIMIT 1
menu,Provide the numbers of the menu item which includes Fresh lobsters in every style and location where that dish was used on a menu.,"Fresh lobsters in every style' is a name of dish; location where the dish was used on a menu = (xpos, ypos);","SELECT T2.menu_id, T1.xpos, T1.ypos FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T4.name = 'Fresh lobsters in every style'"
menu,"List the dishes that appeared at the left upper corner of the CHAS.BRADLEY'S OYSTER & DINING ROOM""s sponsored menu.",appeared at the left upper corner refers to xpos < 0.25 and ypos < 0.25; CHAS.BRADLEY'S OYSTER & DINING ROOM refers to sponsor = 'CHAS.BRADLEY''S OYSTER & DINING ROOM';,SELECT T4.name FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T3.sponsor = 'CHAS.BRADLEY''S OYSTER & DINING ROOM' AND T1.xpos < 0.25 AND T1.ypos < 0.25
menu,Provide the sponsor and event of the menu which includes Cerealine with Milk.,Cerealine with Milk is a name of dish;,"SELECT T3.name, T3.event FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T4.name = 'Cerealine with Milk'"
menu,How many percent of Bluefish dishes are located at the center of the menu page?,"percent = MULTIPLY(DIVIDE(SUM(xpos BETWEEN 0.25 AND 0.75 and ypos BETWEEN 0.25 AND 0.75), COUNT(id)), 1.0); Bluefish is a sub name of dish; located at the center of the menu page refers to xpos BETWEEN 0.25 AND 0.75 and ypos BETWEEN 0.25 AND 0.75;",SELECT CAST(SUM(CASE WHEN T2.xpos BETWEEN 0.25 AND 0.75 AND T2.ypos BETWEEN 0.25 AND 0.75 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id) FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.name LIKE '%BLuefish%'
menu,Who is the sponsor of menu with ID 12463?,FALSE;,SELECT sponsor FROM Menu WHERE id = 12463
menu,What is the event sponsored by the Republican House?,sponsored by the Republican House refers to sponsor = 'REPUBLICAN HOUSE';,SELECT event FROM Menu WHERE sponsor = 'REPUBLICAN HOUSE'
menu,Where is the place that menu with ID 12472 was created for?,place refers to location;,SELECT location FROM Menu WHERE id = 12472
menu,Please describe the menu sponsored by Noviomagus physically.,describe the menu physically refers to physical_description; sponsored by Noviomagus refers to sponsor = 'Noviomagus';,SELECT physical_description FROM Menu WHERE sponsor = 'Noviomagus'
menu,What is the occasion for menu with ID 12463?,FALSE;,SELECT occasion FROM Menu WHERE id = 12463
menu,List down the locations of menu sponsored by Norddeutscher Lloyd Bremen.,sponsored by Norddeutscher Lloyd Bremen refers to sponsor = 'Norddeutscher Lloyd Bremen';,SELECT location FROM Menu WHERE sponsor = 'Norddeutscher Lloyd Bremen'
menu,List down the menu page IDs for menu sponsored by Occidental & Oriental?,menu page IDs refers to MenuPage.id; sponsored by Occidental & Oriental refers to sponsor = 'Occidental & Oriental';,SELECT T2.id FROM MenuPage AS T1 INNER JOIN Menu AS T2 ON T2.id = T1.menu_id WHERE T2.sponsor = 'Occidental & Oriental'
menu,List down the image IDs for menu located at Manhattan Hotel.,located at Manhattan Hotel refers to location = 'Manhattan Hotel';,SELECT T1.image_id FROM MenuPage AS T1 INNER JOIN Menu AS T2 ON T2.id = T1.menu_id WHERE T2.location = 'Manhattan Hotel'
menu,"State the full height and width for menu called ""El Fuerte Del Palmar"".",width refers to full_width; El Fuerte Del Palmar is a name of menu;,"SELECT T1.full_height, T1.full_width FROM MenuPage AS T1 INNER JOIN Menu AS T2 ON T2.id = T1.menu_id WHERE T2.name = 'El Fuerte Del Palmar'"
menu,"Is ""c02c9a3b-6881-7080-e040-e00a180631aa"" the uuid for menu called ""The Biltmore""?","if 'c02c9a3b-6881-7080-e040-e00a180631aa' can be found in uuid, it means the 'c02c9a3b-6881-7080-e040-e00a180631aa' is the uuid for the menu called The Biltmore; if 'c02c9a3b-6881-7080-e040-e00a180631aa' can not be found in uuid, it means the 'c02c9a3b-6881-7080-e040-e00a180631aa' is not the uuid for the menu called The Biltmore; The Biltmore is a name of menu;",SELECT CASE WHEN T2.uuid = 'c02c9a3b-6881-7080-e040-e00a180631aa' THEN 'yes' ELSE 'no' END AS yn FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T1.name = 'The Biltmore' AND T2.uuid = 'c02c9a3b-6881-7080-e040-e00a180631aa'
menu,State the name of menu with the longest full height.,longest full height refers to MAX(full_height);,SELECT T2.name FROM MenuPage AS T1 INNER JOIN Menu AS T2 ON T2.id = T1.menu_id ORDER BY T1.full_height DESC LIMIT 1
menu,What is the page count for menu with page ID of 130?,page ID of 130 refers MenuPage.id = 130;,SELECT T1.page_count FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T2.id = 130
menu,How much is the price of menu with image ID 4000009194?,FALSE;,SELECT T3.price FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id INNER JOIN MenuItem AS T3 ON T2.id = T3.menu_page_id WHERE T2.image_id = 4000009194
menu,List down the page numbers for menu with dishes on the right upper corner.,on the right upper corner refers to xpos > 0.75 AND ypos < 0.25;,SELECT T2.page_number FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id INNER JOIN MenuItem AS T3 ON T2.id = T3.menu_page_id WHERE T3.xpos > 0.75 AND T3.ypos < 0.25
menu,List down the name of dishes from menu created in April.,"created in April refers to SUBSTR(created_at, 7, 1) = '4';","SELECT T2.name FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE SUBSTR(T1.created_at, 7, 1) = '4'"
menu,List down name of dishes from menu with menu page ID 1389.,FALSE;,SELECT T2.name FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE T1.menu_page_id = 1389
menu,What is the highest price of dishes with menu item ID 1 to 5?,highest price refers to MAX(price); menu item ID 1 to 5 refers to MenuItem.id BETWEEN 1 AND 5;,SELECT T2.price FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T2.id BETWEEN 1 AND 5 ORDER BY T2.price DESC LIMIT 1
menu,List down the name of dishes that were positioned on the left upper corner.,positioned on the left upper corner refers to xpos < 0.25 AND ypos < 0.25;,SELECT T1.name FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T2.xpos < 0.25 AND T2.ypos < 0.25
menu,"Calculate the total dish count for menu with uuid of ""510d47e4-2958-a3d9-e040-e00a18064a99"" & ""510d47e4-295a-a3d9-e040-e00a18064a99"".",total dish count for uuid of '510d47e4-2958-a3d9-e040-e00a18064a99' = SUM(dish_count WHERE uuid = '510d47e4-2958-a3d9-e040-e00a18064a99'); total dish count for uuid of '510d47e4-295a-a3d9-e040-e00a18064a99 = SUM(dish_count WHERE uuid = '510d47e4-295a-a3d9-e040-e00a18064a99');,SELECT SUM(CASE WHEN T2.uuid = '510d47e4-2958-a3d9-e040-e00a18064a99' THEN T1.dish_count ELSE 0 END) - SUM(CASE WHEN T2.uuid = '510d47e4-295a-a3d9-e040-e00a18064a99' THEN T1.dish_count ELSE 0 END) FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id
menu,Calculate the total price of items for menu with ID 12882.,total price = SUM(price);,SELECT SUM(T2.price) FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id WHERE T1.menu_id = 12882
menu,"List the top five dishes, by descending order, in terms of highest price.",highest price refers to MAX(highest_price);,SELECT name FROM Dish ORDER BY highest_price DESC LIMIT 5
menu,"Among the dishes, how many of them are for free?",free refers to lowest_price = 0;,SELECT COUNT(*) FROM Dish WHERE lowest_price = 0
menu,"What dishes made their first and last appearances in 1855 and 1900, respectively?",first appearance in 1855 refers to first_appeared = 1855; last appearance in 1900 refers to last_appeared = 1900;,SELECT name FROM Dish WHERE first_appeared = 1855 AND last_appeared = 1900
menu,Write down the top ten menus with the highest dish count.,highest dish count refers to MAX(dish_count);,SELECT name FROM Menu GROUP BY name ORDER BY dish_count DESC LIMIT 10
menu,How many dishes appear in the right upper corner of the menu page?,appear in the right upper corner of the menu page refers to xpos > 0.75 and ypos < 0.25;,SELECT COUNT(*) FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T1.dish_id = T2.id WHERE T1.xpos > 0.75 AND T1.ypos < 0.25
menu,"How long has the ""Clear Green Turtle"" dish appeared on the menu, and tell me when its latest update was?","Clear Green Turtle is a name of dish; how long a dish appeared on the menu = SUBTRACT(last_appeared, first_appeared); latest update refers to latest updated_at;","SELECT T1.last_appeared - T1.first_appeared, T2.updated_at FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.name = 'Clear green turtle'"
menu,Tally the dishes that have appeared on the menu for more than 100 years.,"appeared on the menu for more than 100 years = SUBTRACT(last_appeared, first_appeared) > 100;",SELECT T1.name FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.last_appeared - T1.first_appeared > 100
menu,How many dishes have appeared on the menu in less than 5 years?,"appeared on the menu in less than 5 years = SUBTRACT(last_appeared, first_appeared) < 5;",SELECT COUNT(*) FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.last_appeared - T1.first_appeared < 5
menu,Give me the name and menu price of dishes that were free.,dishes that were free refers to lowest_price = 0;,"SELECT T2.name, T1.price FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE T2.lowest_price = 0"
menu,How much does the dish on page 2 of menu ID 12474 cost?,page 2 refers to page_number = 2;,SELECT T1.price FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T2.id = T1.menu_page_id WHERE T2.menu_id = 12474 AND T2.page_number = 2
menu,"Among the dishes, how many of them were created between 2011-03-31 at 20:24:46 UTC and 2011-04-15 at 23:09:51 UTC.",created between 2011-03-31 at 20:24:46 UTC and 2011-04-15 at 23:09:51 UTC refers to created_at between '2011-03-31 20:24:46 UTC' AND '2011-04-15 23:09:51 UTC';,SELECT SUM(CASE WHEN T2.created_at BETWEEN '2011-03-31 20:24:46 UTC' AND '2011-04-15 23:09:51 UTC' THEN 1 ELSE 0 END) FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id
menu,Who are the sponsors of the menu whose image full height is more than 10000 mm?,image full height is more than 10000 mm refers to full_height > 10000;,SELECT T2.sponsor FROM MenuPage AS T1 INNER JOIN Menu AS T2 ON T2.id = T1.menu_id WHERE T1.full_height = 10000
menu,"Write down the image ID, full height, and full width of the menu that were used in the ""100TH ANNIVERSARY OF BIRTH OF DANIEL WEBSTER"" event.",FALSE;,"SELECT T1.image_id, T1.full_height, T1.full_width FROM MenuPage AS T1 INNER JOIN Menu AS T2 ON T2.id = T1.menu_id WHERE T2.event = '100TH ANNIVERSARY OF BIRTH OF DANIEL WEBSTER'"
menu,Under what events was the menu page's full width less than 2000 mm?,full width less than 2000 mm refers to full_width < 2000;,SELECT T1.event FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T2.full_width = 2000
menu,"Name the dishes that cost 180,000.","cost 180,000 refers to price = 180000;",SELECT T1.name FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T2.price = 180000
menu,"What is the position coordinate on the page menu of the ""Small Hominy"" dish and how long did it appear?","position coordinate = xpos, ypos; Small Hominy is a name of dish; how long it appear = SUBTRACT(last_appeared, first_appeared);","SELECT T2.xpos, T2.ypos, T1.last_appeared - T1.first_appeared FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.name = 'Small Hominy'"
menu,"Calculate the image area of the page menu for the dish named ""Baked Stuffed Mullet & Sauce Pomard"". Please include the page number and image ID.","image area = MULTIPLY(full_height, full_width);","SELECT T1.full_height * T1.full_width, T1.page_number, T1.image_id FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id INNER JOIN Dish AS T3 ON T2.dish_id = T3.id WHERE T3.name = 'Baked Stuffed Mullet & Sauce Pomard'"
menu,How many dishes appeared more than once on a menu?,appeared more than once on a menu refers to times_appeared > menus_appeared;,SELECT COUNT(*) FROM Dish WHERE times_appeared > Dish.menus_appeared
menu,How many menus sponsored by Krogs Fiske Restaurant were created in April 2015?,sponsored by Krogs Fiske Restaurant refers to sponsor = 'Krogs Fiskerestaurant'; created in April 2015 refers to date like '2015-04%';,SELECT COUNT(*) FROM Menu WHERE date LIKE '2015-04%' AND sponsor = 'Krogs Fiskerestaurant'
menu,Which dish has the longest history?,"longest history refers to MAX(SUBTRACT(last_appeared, first_appeared));",SELECT name FROM Dish ORDER BY last_appeared - Dish.first_appeared DESC LIMIT 1
menu,"On 1887-07-21, what was the event that lead to the creation of menu id 21380?",On 1887-07-21 refers to date = '1887-07-21';,SELECT event FROM Menu WHERE date = '1887-07-21' AND id = 21380
menu,"How many pages are there in the ""Emil Kuehn"" menu?",Emil Kuehn is a name of menu;,SELECT SUM(CASE WHEN T1.name = 'Emil Kuehn' THEN 1 ELSE 0 END) FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id
menu,How many menus include puree of split peas aux croutons?,puree of split peas aux croutons is a name of dish;,SELECT SUM(CASE WHEN T1.name = 'Puree of split peas aux croutons' THEN 1 ELSE 0 END) FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id
menu,What are the names of the dishes with a stable price that were created in April of 2011?,"dishes with a stable price refers to highest_price is null; created in April of 2011 refers to SUBSTR(created_at,1,4) = '2011' and SUBSTR(created_at, 7, 1) = '4';","SELECT T1.name FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE SUBSTR(T2.created_at, 1, 4) = '2011' AND SUBSTR(T2.created_at, 7, 1) = '4' AND T1.highest_price IS NULL"
menu,What is the name of the menu with the highest number of pages?,highest number of pages refers to MAX(COUNT(page_number));,SELECT T1.name FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id GROUP BY T2.menu_id ORDER BY COUNT(T2.page_number) DESC LIMIT 1
menu,Provide the menu page ids of all the menu that includes mashed potatoes.,mashed potatoes is a name of dish;,SELECT T2.menu_page_id FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.name = 'Mashed potatoes'
menu,"Among the menus sponsored by Pacific Mail Steamship Company, how many menus have no more than 2 pages?",sponsored by Pacific Mail Steamship Company refers to sponsor = 'PACIFIC MAIL STEAMSHIP COMPANY'; no more than 2 pages refers to COUNT(page_number) < = 2;,SELECT COUNT(*) FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T1.sponsor = 'PACIFIC MAIL STEAMSHIP COMPANY' GROUP BY T2.menu_id HAVING COUNT(T2.page_number) <= 2
menu,"Among the menus that include milk, what is the menu page id of the menu that has the highest price?",milk is a name of dish; highest price refers to MAX(price);,SELECT T1.menu_page_id FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE T2.name = 'Milk' ORDER BY T1.price DESC LIMIT 1
menu,What is the menu id of the menu sponsored by Occidental and Oriental Steamship Company with the highest number of pages?,sponsored by Occidental and Oriental Steamship Company refers to sponsor = 'OCCIDENTAL & ORIENTAL STEAMSHIP COMPANY'; highest number of pages refers to MAX(COUNT(page_number));,SELECT T2.menu_id FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T1.sponsor = 'OCCIDENTAL & ORIENTAL STEAMSHIP COMPANY' GROUP BY T2.menu_id ORDER BY COUNT(T2.page_number) DESC LIMIT 1
menu,"List the positions of the dish ""breaded veal cutlet with peas"" on every menu where it appeared.","positions = xpos, ypos; breaded veal cutlet with peas is a name of dish;","SELECT T2.xpos, T2.ypos FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.name = 'breaded veal cutlet with peas'"
menu,What are the names of the dishes shown in the lower right corner of menu page 48706?,shown in the lower right corner refers to xpos > 0.75 AND ypos > 0.75;,SELECT T2.name FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE T1.xpos > 0.75 AND T1.ypos > 0.75 AND T1.menu_page_id = 48706
menu,"What are the names of the dishes in the menu sponsored by The Society of Cumberland that was created for the 19th reunion at Grand Pacific Hotel in Chicago, Illinois?","sponsored by The Society of Cumberland refers to sponsor = 'THE SOCIETY OF THE CUMBERLAND'; created for the 19th reunion refers to event = '19NTH REUNION'; Grand Pacific Hotel in Chicago, Illinois refers to place = 'GRAND PACIFIC HOTEL, CHICAGO, ILL';","SELECT T4.name FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id INNER JOIN MenuItem AS T3 ON T2.id = T3.menu_page_id INNER JOIN Dish AS T4 ON T3.dish_id = T4.id WHERE T1.sponsor = 'THE SOCIETY OF THE CUMBERLAND' AND T1.event = '19NTH REUNION' AND T1.place = 'GRAND PACIFIC HOTEL,CHICAGO,ILL'"
menu,"Among the menus that include baked apples with cream, who is the sponsor of the menu with the highest price?",baked apples with cream is a name of dish; highest price refers to MAX(price);,SELECT T4.sponsor FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id INNER JOIN Dish AS T3 ON T2.dish_id = T3.id INNER JOIN Menu AS T4 ON T4.id = T1.menu_id WHERE T3.name = 'Baked apples with cream' AND T3.id = 107 ORDER BY T2.price DESC LIMIT 1
menu,What is the average number of dishes per menu in the Souper de Luxe menus? Identify what is the name of the dish that appeared the most in all of its menus.,"average number of dishes per menu = DIVIDE(COUNT(dish_id), COUNT(menu_page_id)); Souper de Luxe is a name of menu; dish that appeared the most in all of its menus refers to MAX(COUNT(dish_id));","SELECT COUNT(*), T1.dish_id FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T3.name = 'Souper de Luxe' GROUP BY T3.id ORDER BY COUNT(T1.dish_id) DESC LIMIT 1"
menu,Please list the IDs of all the menus that are DIYs of the restaurant.,menus that are DIYs of the restaurant refers to sponsor is null;,SELECT id FROM Menu WHERE sponsor IS NULL
menu,How many menus were created for lunch?,created for lunch refers to event = 'LUNCH';,SELECT COUNT(*) FROM Menu WHERE event = 'LUNCH'
menu,"Among the menus with over 10 pages, how many of them have over 20 dishes?",menus with over 10 pages refers to page_count > 10; over 20 dishes refers to dish_count > 20;,SELECT COUNT(*) FROM Menu WHERE page_count > 10 AND dish_count > 20
menu,What is the ID of the menu with the most number of dishes?,most number of dishes refers to MAX(COUNT(dish_count));,SELECT id FROM Menu ORDER BY dish_count DESC LIMIT 1
menu,"How many dishes are there on the menu ""Zentral Theater Terrace""?",Zentral Theater Terrace is a name of menu;,SELECT COUNT(*) FROM Menu WHERE name = 'Zentral Theater Terrace'
menu,"Among the menus that did not support taking out or booking in advance, how many of them were created before 1950?","did not support taking out or booking in advance refers to call_number is null; created before 1950 refers to strftime('%Y', date) < '1950';","SELECT COUNT(*) FROM Menu WHERE call_number IS NULL AND strftime('%Y', date) < '1950'"
menu,"What is the image ID of page 1 of the menu ""Zentral Theater Terrace""?",page 1 refers to page_number = 1; Zentral Theater Terrace is a name of menu;,SELECT T2.image_id FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T1.name = 'Zentral Theater Terrace' AND T2.page_number = 1
menu,To which menu does the menu page image ID5189412 belong? Please give its name.,FALSE;,SELECT T1.name FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T2.image_id = 5189412
menu,"Which menu page has a bigger width, page 1 of ""Zentral Theater Terrace"" or page 1 of ""Young's Hotel""?","if SUM(full_width where page_number = 1 AND menu.name = 'Zentral Theater Terrace') > SUM(full_width where page_number = 1 AND menu.name = 'Young''s Hotel'), it means Zentral Theater Terrace menu page is bigger than Young's Hotel; if SUM(full_width WHERE page_number = 1 AND menu.name = 'Young''s Hotel') < SUM(full_width WHERE page_number = 1 AND menu.name = 'Zentral Theater Terrace'), it means Young's Hotel menu page is bigger than Zentral Theater Terrace;",SELECT CASE WHEN SUM(CASE WHEN T1.name = 'Zentral Theater Terrace' THEN T2.full_width ELSE 0 END) - SUM(CASE WHEN T1.name = 'Young''s Hotel' THEN T2.full_width ELSE 0 END) > 0 THEN 'Zentral Theater Terrace' ELSE 'Young''s Hotel' END FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id
menu,"Which menu page of ""Ritz Carlton"" has the biggest height?",Ritz Carlton is a name of menu; biggest height refers to MAX(full_height);,SELECT T1.page_number FROM MenuPage AS T1 INNER JOIN Menu AS T2 ON T2.id = T1.menu_id WHERE T2.name = 'Ritz Carlton' ORDER BY T1.full_height DESC LIMIT 1
menu,"Among the menu pages of ""Ritz Carlton"", how many of them have a width of over 1000?",Ritz Carlton is a name of menu; width of over 2490 refers to full_width > 1000;,SELECT SUM(CASE WHEN T1.name = 'Ritz Carlton' THEN 1 ELSE 0 END) FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T2.full_width > 1000
menu,How many dishes are there on page 1 of menu ID12882?,page 1 refers to page_number = 1;,SELECT SUM(CASE WHEN T1.page_number = 1 THEN 1 ELSE 0 END) FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id WHERE T1.menu_id = 12882
menu,Please list the names of all the dishes on page 1 of menu ID12882.,page 1 refers to page_number = 1;,SELECT T3.name FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id INNER JOIN Dish AS T3 ON T2.dish_id = T3.id WHERE T1.menu_id = 12882 AND T1.page_number = 1
menu,"Please list the page numbers of all the menu pages on which the dish ""Chicken gumbo"" had appeared.",Chicken gumbo is a name of dish;,SELECT T1.page_number FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id INNER JOIN Dish AS T3 ON T2.dish_id = T3.id WHERE T3.name = 'Chicken gumbo'
menu,"Among the menu pages on which the dish ""Chicken gumbo"" had appeared, what is the menu ID of the one with the biggest width?",Chicken gumbo is a name of dish; biggest width refers to MAX(full_width);,SELECT T1.id FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id INNER JOIN Dish AS T3 ON T2.dish_id = T3.id WHERE T3.name = 'Chicken gumbo' ORDER BY T1.full_width DESC LIMIT 1
menu,"For how many times had the dish ""Chicken gumbo"" appeared on a menu page?",Chicken gumbo is a name of dish;,SELECT SUM(CASE WHEN T1.name = 'Chicken gumbo' THEN 1 ELSE 0 END) FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id
menu,"Among the menu pages on which the dish ""Paysanne Soup"" had appeared, how many of them had a stable price for the dish?",Paysanne Soup is a name of dish; stable price refers to highest_price is null;,SELECT SUM(CASE WHEN T1.name = 'Paysanne Soup' THEN 1 ELSE 0 END) FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.highest_price IS NULL
menu,"What is the highest price of the dish ""Chicken gumbo"" on a menu page?",highest price refers to MAX(price); Chicken gumbo is a name of dish;,SELECT T2.price FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.name = 'Chicken gumbo' ORDER BY T2.price DESC LIMIT 1
menu,"How much space does page 1 of the menu ""Zentral Theater Terrace"" cover?","how much space = MULTIPLY(full_height, full_width); Zentral Theater Terrace is a name of menu;",SELECT T2.full_height * T2.full_width FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T1.name = 'Zentral Theater Terrace' AND T2.page_number = 1
menu,What is the average number of dishes per menu page of menu ID12882?,"average number of dishes per menu = DIVIDE(COUNT(dish_id), COUNT(page_count));",SELECT CAST(COUNT(dish_id) AS REAL) / COUNT(T3.page_count) FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id WHERE T2.menu_id = 12882
shipping,How many shipments were ordered by S K L Enterprises Inc in 2017?,"""S K L Enterprises Inc"" is the cust_name; in 2017 refers to Cast(ship_date AS DATE) = 2017","SELECT COUNT(T2.ship_id) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T1.cust_name = 'S K L Enterprises Inc' AND STRFTIME('%Y', T2.ship_date) = '2017'"
shipping,What is the total number of pounds being transported for S K L Enterprises Inc?,"""S K L Enterprises Inc"" is the cust_name; total number of pounds refers to Sum(weight)",SELECT SUM(T2.weight) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T1.cust_name = 'S K L Enterprises Inc'
shipping,"Among the shipments done by Sue Newell, how many of them are for S K L Enterprises Inc?","""S K L Enterprises Inc"" is the cust_name",SELECT COUNT(*) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id INNER JOIN driver AS T3 ON T3.driver_id = T2.driver_id WHERE T1.cust_name = 'S K L Enterprises Inc' AND T3.first_name = 'Sue' AND T3.last_name = 'Newell'
shipping,How many shipments were ordered by a customer in Florida?,customer in Florida refers to state = 'FL',SELECT COUNT(T1.cust_id) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T1.state = 'FL'
shipping,Please list the IDs of all the shipments made by a retailer customer.,"""retailer"" is the cust_type;  IDs of shipments refers to ship_id",SELECT T2.ship_id FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T1.cust_type = 'retailer'
shipping,"Among the customers having at least one shipment in 2017, how many of them have an annual revenue of over 30000000?",shipment in 2017 refers to Cast(ship_date AS DATE) = 2017; annual revenue of over 30000000 refers to annual_revenue > 30000000,"SELECT COUNT(COUNTCUSID) FROM ( SELECT COUNT(T1.cust_id) AS COUNTCUSID FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE STRFTIME('%Y', T2.ship_date) = '2017' AND T1.annual_revenue > 30000000 GROUP BY T1.cust_id HAVING COUNT(T2.ship_id) >= 1 ) T3"
shipping,How many shipments in 2017 were done by Sue Newell?,in 2017 refers to Cast(ship_date AS DATE) = 2017,"SELECT COUNT(*) FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE STRFTIME('%Y', T1.ship_date) = '2017' AND T2.first_name = 'Sue' AND T2.last_name = 'Newell'"
shipping,What is the full name of the driver that has done the most shipments in 2017?,"driver refers to driver_id; full name refers to first_name, last_name; in 2017 refers to Cast(ship_date AS DATE) = 2017; Most shipment refers to Max(Sum(weight))","SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE STRFTIME('%Y', T1.ship_date) = '2017' GROUP BY T2.first_name, T2.last_name ORDER BY COUNT(*) DESC LIMIT 1"
shipping,"Among the shipments in 2017, how many of them have the destination in New Jersey?",in 2017 refers to Cast(ship_date AS DATE) = 2017; 'New Jersey' is the state,"SELECT COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE STRFTIME('%Y', T1.ship_date) = '2017' AND T2.state = 'New Jersey'"
shipping,What is the maximum weight being transported to New York during a single shipment?,"""New York"" is the city_name; maximum weight refers to Max(weight)",SELECT MAX(T1.weight) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T2.city_name = 'New York'
shipping,How much more pounds in total were transported to New York than to Chicago?,"""New York"" and ""Chicago"" are both city_name; more pounds in total refers to Subtract (Sum(weight where city_name = 'New York'), Sum(weight where city_name = 'Chicago'))",SELECT SUM(CASE WHEN T2.city_name = 'New York' THEN T1.weight ELSE 0 END) - SUM(CASE WHEN T2.city_name = 'Chicago' THEN T1.weight ELSE 0 END) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id
shipping,Please list the destination cities of all the shipments ordered by S K L Enterprises Inc.,"""S K L Enterprises Inc"" is the cust_name; destination cities refers to city_name",SELECT DISTINCT T3.city_name FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id INNER JOIN city AS T3 ON T3.city_id = T2.city_id WHERE T1.cust_name = 'S K L Enterprises Inc'
shipping,What is the average weight of the goods being transported on a single shipment ordered by S K L Enterprises Inc?,"""S K L Enterprises Inc"" is the cust_name; average = Divide (Sum(weight), Count(ship_id))",SELECT AVG(T2.weight) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T1.cust_name = 'S K L Enterprises Inc'
shipping,"Among all the shipments to Florida, what is the percentage of the shipment to Jacksonville?","""Florida"" is the state; ""Jacksonville"" is city_name;",SELECT CAST(SUM(CASE WHEN T2.city_name = 'Jacksonville' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T2.state = 'Florida'
shipping,State the headquarter of the truck which completed shipment no.1045.,"shipment no. 1045 refers to ship_id = 1045; headquarter refers to if make = 'Peterbit', then 'Texax(TX)', if make = 'Mack', then 'North Carolina (NC)'; if make = 'Kenworth', then 'Washington (WA)'",SELECT T1.make FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T2.ship_id = 1045
shipping,How many shipments were delivered by the oldest truck model?,oldest truck model refers to Min(model_year),SELECT COUNT(*) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id GROUP BY T1.model_year ORDER BY T1.model_year ASC LIMIT 1
shipping,Who was the customer of shipment no.1275? Give the customer's name.,shipment no. 1275 refers to ship_id = 1275; customer name refers to cust_name,SELECT T1.cust_name FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T2.ship_id = '1275'
shipping,Where was the destination city of shipment no.1701?,shipment no. 1701 refers to ship_id = 1701; destination city refers to city_name,SELECT T2.city_name FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T1.ship_id = '1701'
shipping,Give the name of the driver of shipment no.1021.,"shipment no. 1021 refers to ship_id = 1021; name refers to first_name, last_name","SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T1.ship_id = '1021'"
shipping,Tell the name of the driver who received the shipment on 2017/11/5.,"shipment on 2017/11/5 refers to ship_date = '2017-11/05'; name refers to first_name, last_name","SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T1.ship_date = '2017-11-05'"
shipping,Show the population of the city which was the destination of shipment no.1398.,shipment no. 1398 refers to ship_id = 1398,SELECT T2.population FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T1.ship_id = '1398'
shipping,Provide the ship date of the first shipment to customers in South Carolina.,"""South Carolina"" refers to state = 'SC'; first shipment refers to Min(ship_date)",SELECT MIN(T1.ship_date) FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T2.state = 'SC'
shipping,"For the shipment received by Leszek Kieltyka on 2017/9/25, what was its weight?",on 2017/9/25 refers to ship_date = '2017-09-25',SELECT T1.weight FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T2.first_name = 'Leszek' AND T2.last_name = 'Kieltyka' AND T1.ship_date = '2017-09-25'
shipping,What is the area of the destination city of shipment No.1346?,shipment no. 1346 refers to ship_id = 1346,SELECT T2.area FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T1.ship_id = '1346'
shipping,Provide the weight of the shipment to U-haul Center Of N Syracuse on 2016/9/21.,"""U-haul Center Of N Syracuse"" is the cust_name; on 2016/9/21 refers to ship_date = '2016/09/21'",SELECT T1.weight FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T2.cust_name = 'U-haul Center Of N Syracuse' AND T1.ship_date = '2016-09-21'
shipping,Who was the driver of truck no.3 on 2016/9/19? Tell the full name.,"truck no. 3 refers to truck_id = 3; on 2016/9/19 refers to ship_date = '2016-09-19'; full name refers to first_name, last_name","SELECT T3.first_name, T3.last_name FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id INNER JOIN driver AS T3 ON T3.driver_id = T2.driver_id WHERE T1.truck_id = '3' AND T2.ship_date = '2016-09-19'"
shipping,Calculate the population density of the city as the destination of shipment no.1369.,"shipment no. 1369 refers to ship_id = 1369; population density refers to Divide (area, population)",SELECT T2.area / T2.population FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T1.ship_id = '1369'
shipping,What is the average number of shipments done by the Kenworth trucks?,"""Kenworth"" is the make of truck; average = Divide (Count(ship_id where make = 'Kenworth'), Count(truck_id where make = 'Kenworth))",SELECT CAST(COUNT(T2.ship_id) AS REAL) / COUNT(DISTINCT T1.truck_id) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T1.make = 'Kenworth'
shipping,How many pounds did Sue Newell transport during her first shipment?,first shipment refers to Min(ship_date); pounds refers to weight,SELECT T1.weight FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T2.first_name = 'Sue' AND T2.last_name = 'Newell' ORDER BY T1.ship_date ASC LIMIT 1
shipping,To whom did the company transport its heaviest shipment?,heaviest shipment refers to Max(weight),SELECT T2.cust_name FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id ORDER BY T1.weight DESC LIMIT 1
shipping,What is the full name of the driver who transported the first shipment of the company?,"first shipment of the company refers to Min(ship_date); full name refers to first_name, last_name","SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id ORDER BY T1.ship_date ASC LIMIT 1"
shipping,"In total, how many shipments were transported to Olympic Camper Sales Inc?","""Olympic Camper Sales Inc"" is the cust_name",SELECT COUNT(T2.ship_id) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T1.cust_name = 'Olympic Camper Sales Inc'
shipping,How many of the shipments bound for New York City were shipped to Harry's Hot Rod Auto and Truck Accessories?,"""New York"" is the city_name; 'Harry's Hot Rod Auto & Truck Accessories' is the cust_name",SELECT COUNT(*) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id INNER JOIN city AS T3 ON T3.city_id = T2.city_id WHERE T3.city_name = 'New York' AND T1.cust_name = 'Harry''s Hot Rod Auto & Truck Accessories'
shipping,"Among the top 5 heaviest shipments, how many shipments were transported via Mack?",heaviest shipment refers to Max(weight); via Mack refers to make = 'Mack',SELECT COUNT(T2.ship_id) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T1.make = 'Mack' ORDER BY T2.weight DESC LIMIT 1
shipping,What is the full name of the driver who delivered the most shipments to the least populated city?,"least populated city refers to Min(population); fullname refers to first_name, last_name; most shipment refers to driver_id where Max(Count (ship_id))","SELECT T1.first_name, T1.last_name FROM driver AS T1 INNER JOIN shipment AS T2 ON T1.driver_id = T2.driver_id INNER JOIN city AS T3 ON T3.city_id = T2.city_id GROUP BY T1.first_name, T1.last_name, T3.population HAVING T3.population = MAX(T3.population) ORDER BY COUNT(*) DESC LIMIT 1"
shipping,"How many shipments with weight of no more than 1,000 pounds were shipped by the oldest truck?",weight of no more than 1000 pounds refers to weight < 1000; oldest truck refers to Min (model_year),SELECT COUNT(*) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T2.weight < 1000 ORDER BY T1.model_year ASC LIMIT 1
shipping,How much is the annual revenue of the customer with the most number of shipments?,customer with the most number of shipment refers to cust_id where Max(Count(ship_id)),SELECT T2.annual_revenue FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_id ORDER BY COUNT(T1.cust_id) DESC LIMIT 1
shipping,"Among the shipments for Downey, how many shipments were shipped to California in 2016?","""Downey"" is the city_name; 'California' is the state, whose abbreviation is CA; in 2016 refers to year(ship_date) = 2016,","SELECT COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id INNER JOIN customer AS T3 ON T3.cust_id = T1.cust_id WHERE T2.city_name = 'Downey' AND STRFTIME('%Y', T1.ship_date) = '2016' AND T3.state = 'CA'"
shipping,How many shipments did Holger Nohr transport to North Las Vegas overall?,"""North Las Vegas"" is the city_name",SELECT COUNT(*) FROM driver AS T1 INNER JOIN shipment AS T2 ON T1.driver_id = T2.driver_id INNER JOIN city AS T3 ON T3.city_id = T2.city_id WHERE T1.first_name = 'Holger' AND T1.last_name = 'Nohr' AND T3.city_name = 'North Las Vegas'
shipping,How many shipments were shipped to the most densely populated city?,"most densely populated city refers to Max(Divide(area, population))",SELECT COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id ORDER BY T2.area / T2.population DESC LIMIT 1
shipping,Determine the percentage of manufacturers who are from Texas among all of Lorenzo's customers.,"""Texas"" refers to state = 'TX'; 'manufacturer' is the cust_type; percentage = Divide (Count(cust_id where state = 'TX'), Count(cust_id)) * 100",SELECT CAST(SUM(CASE WHEN cust_type = 'manufacturer' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM customer WHERE state = 'TX'
shipping,"Identify the total weight of shipments transported to San Mateo, California, in 2016.","""San Mateo"" is the city_name; in 2016 refers to Cast(ship_date as DATE) = 2016","SELECT SUM(T1.weight) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T2.city_name = 'San Mateo' AND STRFTIME('%Y', T1.ship_date) = '2016'"
shipping,Identify the total weight of shipments transported in 2016 by the newest Peterbilt.,transported in 2016 refers to CAST(ship_date as DATE) = 2016; 'Peterbilt' is the make; newest refers to Max(model_year),"SELECT SUM(T2.weight) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T1.make = 'Peterbilt' AND STRFTIME('%Y', T2.ship_date) = '2016' ORDER BY T1.model_year DESC LIMIT 1"
shipping,What was the maximum weight of the shipment carried to Boston? Name the customer of that shipment.,"""Boston"" is the city_name; maximum weight refers to Max(weight); customer refers to cust_name","SELECT T1.weight, T2.cust_name FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id INNER JOIN city AS T3 ON T3.city_id = T1.city_id WHERE T3.city_name = 'Boston' ORDER BY T1.weight DESC LIMIT 1"
shipping,Where was shipment no. 1002 headed?,shipment no. 1002 refers to ship_id = 1002; where shipment was headed refers to city_name,SELECT T2.city_name FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T1.ship_id = '1002'
shipping,What is the average shipment weight carried by the oldest Mack?,"""Mack"" is the make; oldest refers to Min(model_year); average shipment weight refers to AVG(weight)",SELECT AVG(T2.weight) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T1.make = 'Mack'
shipping,Identify the full name of the driver who delivered a shipment to the city of New York in February 2016.,"""New York"" is the city_name; in February 2016 refers to ship_date LIKE '2016-02%'; full name refers to first_name, last_name","SELECT T3.first_name, T3.last_name FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id INNER JOIN driver AS T3 ON T3.driver_id = T1.driver_id WHERE T2.city_name = 'New York' AND T1.ship_date LIKE '2016-02%'"
shipping,Name the customer who sent the shipment to Oak Park.,"""Oak Park"" is the city_name; customer name refers to cust_name",SELECT T2.cust_name FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id INNER JOIN city AS T3 ON T3.city_id = T1.city_id WHERE T3.city_name = 'Oak Park'
shipping,Determine the number of shipments delivered by Andrea Simons to Huntsville in 2016.,"""Huntsville"" is the city_name; in 2016 refers to Cast(ship_date AS DATE) = 2016; number of shipment refers to Count(ship_id)","SELECT COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id INNER JOIN driver AS T3 ON T3.driver_id = T1.driver_id WHERE T3.first_name = 'Andrea' AND T3.last_name = 'Simons' AND T2.city_name = 'Huntsville' AND STRFTIME('%Y', T1.ship_date) = '2016'"
shipping,How many shipments does each driver deliver per month on average?,"shipment data was for 24 months in 2016 and 2017 respectively; deliver per month on average refers to Divide(Count(ship_id), Multiply (24, Count(driver_id)))",SELECT CAST(COUNT(*) AS REAL) / (12 * COUNT(T2.driver_id)) FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id
shipping,"Among all shipments placed by Sunguard Window Tinting & Truck Accessories in 2017, identify the percentage of shipments whose weight exceeded 10,000 pounds.","""Sunguard Window Tinting & Truck Accessories"" is the cust_name; weight exceed 10,000 pounds refers to weight > = 10000; in 2017 refers to Cast(ship_date AS DATE) = 2017; percentage = Divide (Sum(weight > = 10000), Sum(weight)) * 100","SELECT CAST(SUM(CASE WHEN T1.weight >= 10000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T2.cust_name = 'Sunguard Window Tinting & Truck Accessories' AND STRFTIME('%Y', T1.ship_date) = '2017'"
shipping,"Among all shipments delivered by Sue Newel, identify the percentage of shipments that were placed by Autoware Inc.","""Autoware Inc"" is the cust_name; percentage = Divide (Count(ship_id where cust_name = 'Autoware Inc'), Count(ship_id)) * 100",SELECT CAST(SUM(CASE WHEN T3.cust_name = 'Autoware Inc' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS per FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id INNER JOIN customer AS T3 ON T3.cust_id = T1.cust_id WHERE T2.first_name = 'Sue' AND T2.last_name = 'Newell'
shipping,How many cities which belong to New Jersey have transported weight greater than 20000?,"""New Jersey"" is the state; transported weight greater than 20000 refers to Sum(weight) > 20000",SELECT COUNT(*) FROM ( SELECT T2.city_id AS CITYID FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T2.state = 'New Jersey' GROUP BY T2.city_id HAVING SUM(T1.weight) > 20000 )
shipping,How many cities whose polulation is larger than 50000 pounds have shipment in 2017?,population is larger than 50000 refers to population > 50000,"SELECT COUNT(*) FROM city AS T1 INNER JOIN shipment AS T2 ON T1.city_id = T2.city_id WHERE T1.population > 50000 AND STRFTIME('%Y', T2.ship_date) = '2017'"
shipping,State the weight of shipments transported by Peterbilt.,"""Peterbilt"" is the make",SELECT T2.weight FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE make = 'Peterbilt'
shipping,What is the model year of the truck used in shipment id 1003?,shipment id 1003 refers to ship_id = 1003,SELECT T1.model_year FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T2.ship_id = '1003'
shipping,What is the brand of truck used in shipment id 1011?,shipment id 1011 refers to ship_id = 1011; brand of truck refers to make,SELECT T1.make FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T2.ship_id = '1011'
shipping,What is the first name of the driver who transported shipment id 1028?,shipment id 1028 refers to ship_id = 1028,"SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T1.ship_id = 1028"
shipping,List out the state of driver who transported the shipment id 1055.,shipment id 1055 refers to ship_id = 1055,SELECT T2.state FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T1.ship_id = '1055'
shipping,State the address of drivers who transported the shipment with weight greater than 50000 pounds.,shipment with weight greater than 50000 pounds refers to Sum(weight) > 50000,SELECT T2.address FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id GROUP BY T2.driver_id HAVING SUM(T1.weight) > 50000
shipping,Give the full name of driver who transported the items on 3/2/2016.,"on 3/2/2016 refers to ship_date = '2016-02-03'; full name refers to first_name, last_name","SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T1.ship_date = '2016-03-02'"
shipping,What is the average annual revenue of customers who have shipment weight of less than 65000 pounds?,weight of less than 65000 pounds refers to weight < 65000; average annual revenue refers to AVG(annual_revenue),SELECT AVG(T1.annual_revenue) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T2.weight < 65000
shipping,What is the percentage of wholesaler customers who have shipment weight of not greater than 70000 pounds?,"""wholesaler"" is the cust_type; weight of not greater than 70000 pounds refers to weight < 70000; percentage = Divide (Count(cust_id where weight < 70000), Count(cust_id)) * 100",SELECT CAST(SUM(CASE WHEN T2.weight < 70000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T1.cust_type = 'wholesaler'
shipping,What is the last name of driver who transported shipment id 1088?,shipment id 1088 refers to ship_id = 1088,SELECT T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T1.ship_id = '1088'
shipping,Give the phone of drivers who transported shipment weight of greater than 20000 pounds.,shipment weight of greater than 20000 pounds refers to Sum(weight) > 20000,SELECT T2.phone FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id GROUP BY T2.driver_id HAVING SUM(T1.weight) > 20000
shipping,What is the brand and model of truck used in shipment id 1055?,shipment id 1055 refers to ship_id = 1055; brand refers to make; model refers to model_year,"SELECT T1.make, T1.model_year FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T2.ship_id = '1055'"
shipping,How many trucks were manufactured in year 2009?,manufactured in year 2009 refers to model_year = 2009,SELECT COUNT(truck_id) FROM truck WHERE model_year = 2009
shipping,How many customers are manufacturer?,"""manufacturer"" is the cust_type",SELECT COUNT(*) FROM customer WHERE cust_type = 'manufacturer'
shipping,How many customers who live in California that are retailers?,"""retailer"" is the cust_type; live in California refers to state = 'CA'",SELECT COUNT(*) FROM customer WHERE cust_type = 'retailer' AND state = 'CA'
shipping,How many cities are in Connecticut?,"""Connecticut"" is the state",SELECT COUNT(*) FROM city WHERE state = 'Connecticut'
shipping,What is the most populated city in California?,in California refers to state = 'CA'; most populated city refers to Max(population),SELECT city_name FROM city WHERE state = 'California' AND population = ( SELECT MAX(population) FROM city WHERE state = 'California' )
shipping,What is the annual revenue of Klett & Sons Repair?,"""Klett & Sons Repair"" is the cust_name",SELECT annual_revenue FROM customer WHERE cust_name = 'Klett & Sons Repair'
shipping,Who is the driver that transported the lightest weight of shipment? Provide the full name of the driver.,"lightest weight refers to Min(weight); full name refers to first_name, last_name","SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id ORDER BY T1.weight ASC LIMIT 1"
shipping,How many shipments were shipped to customers living in California in year 2016?,living in California refers to state = 'CA'; in year 2016 refers to CAST(ship_date AS DATE) = 2016,"SELECT COUNT(*) AS per FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE STRFTIME('%Y', T2.ship_date) = '2016' AND T1.state = 'CA'"
shipping,What is the brand of the truck that is used to ship by Zachery Hicks?,brand of truck refers to make,SELECT DISTINCT T1.make FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id INNER JOIN driver AS T3 ON T3.driver_id = T2.driver_id WHERE T3.first_name = 'Zachery' AND T3.last_name = 'Hicks'
shipping,List all the name of the customers that received a shipment in February 2017.,shipment in February 2017 refers to ship_date LIKE '2017-02-%'; name of customer refers to cust_name,SELECT T1.cust_name FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T2.ship_date LIKE '2017-02%'
shipping,Provide the brand of the truck and the name of the driver that transported goods in Klett & Sons Repair.,"""Klett & Sons Repair"" is the cust_name; brand of truck refers to make; name of driver refers to first_name, last_name","SELECT T3.make, T4.first_name, T4.last_name FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id INNER JOIN truck AS T3 ON T3.truck_id = T2.truck_id INNER JOIN driver AS T4 ON T4.driver_id = T2.driver_id WHERE T1.cust_name = 'Klett & Sons Repair'"
shipping,What is the shipment ID of the heaviest shipment that Zachery Hicks transported?,shipment ID refers to ship_id; heaviest shipment refers to Max(weight),SELECT T1.ship_id FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T2.first_name = 'Zachery' AND T2.last_name = 'Hicks' ORDER BY T1.weight DESC LIMIT 1
shipping,How many shipments did Zachery Hicks transport goods to New York in the year 2016?,"""New York"" is the city_name; in 2016 refers to CAST(ship_date AS DATE) = 2016","SELECT COUNT(*) FROM city AS T1 INNER JOIN shipment AS T2 ON T1.city_id = T2.city_id INNER JOIN driver AS T3 ON T3.driver_id = T2.driver_id WHERE T3.first_name = 'Zachery' AND T3.last_name = 'Hicks' AND T1.city_name = 'New York' AND STRFTIME('%Y', T2.ship_date) = '2016'"
shipping,Which headquarter's truck has the highest shipments in year 2016?,"in 2016 refers to CAST(ship_date AS DATE) = 2016; make = 'Peterbilt' means headquarter is 'Texas (TX)', make = 'Mack' means headquarter is 'North Carolina (NC)', make = 'Kenworth' means headquarter is 'Washington (WA)'; highest shipment refers to MAX(COUNT(ship_id))","SELECT CASE WHEN T2.make = 'Peterbilt' THEN 'Texas (TX)' WHEN T2.make = 'Mack' THEN 'North Carolina (NC)' WHEN T2.make = 'Kenworth' THEN 'Washington (WA)' END AS ""result"" FROM shipment AS T1 INNER JOIN truck AS T2 ON T1.truck_id = T2.truck_id WHERE CAST(T1.ship_date AS DATE) = 2016 GROUP BY T2.make ORDER BY COUNT(T1.ship_id) DESC LIMIT 1"
shipping,How many shipments were shipped to the least populated city in California?,"""California"" is the state; least populated city refers to Min(population)",SELECT COUNT(T3.city_name) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id INNER JOIN city AS T3 ON T3.city_id = T2.city_id WHERE T3.state = 'California' ORDER BY T3.population ASC LIMIT 1
shipping,In which city did the heaviest shipment transported?,heaviest shipment refers to Max(weight); city refers to city_name,SELECT T2.city_name FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id ORDER BY T1.weight DESC LIMIT 1
shipping,List all the cities where Zachery Hicks transported goods.,city refers to city_name,SELECT DISTINCT T3.city_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id INNER JOIN city AS T3 ON T1.city_id = T3.city_id WHERE T2.first_name = 'Zachery' AND T2.last_name = 'Hicks'
shipping,Calculate the average number of shipments that Zachery Hicks shipped in year 2017.,"in year 2017 refers to CAST(ship_date AS DATE) = 2017; percentage = Divide (Count(ship_id where first_name = 'Zachery' AND last_name = 'Hicks'), Count(ship_id)) * 100","SELECT CAST(SUM(CASE WHEN T2.first_name = 'Zachery' AND T2.last_name = 'Hicks' THEN T1.ship_id ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE STRFTIME('%Y', T1.ship_date) = '2017'"
shipping,Calculate the percentage of the weight of goods being transported by Zachery Hicks to California in year 2016.,"""California"" is the state; in 2016 refers to CAST (ship_date AS DATE) = 2016; percentage = Divide (Sum(weight where first_name = 'Zachery' AND last_name = 'Hicks'), Sum(weight)) * 100","SELECT CAST(SUM(CASE WHEN T2.first_name = 'Zachery' AND T2.last_name = 'Hicks' THEN T1.weight ELSE 0 END) AS REAL) * 100 / SUM(T1.weight) FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE STRFTIME('%Y', T1.ship_date) = '2016'"
shipping,How many shipments were shipped by the driver named Zachary Hicks?,,SELECT COUNT(*) FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T1.driver_id = 23
shipping,What is the ship ID of shipments shipped to the city with the largest area?,city with largest area refers to Max(area),SELECT T1.ship_id FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id ORDER BY T2.area DESC LIMIT 1
shipping,List the drivers who shipped the shipments to the least populated city.,"least populated city refers to Min(population); name refers to first_name, last_name","SELECT T3.first_name, T3.last_name FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id INNER JOIN driver AS T3 ON T3.driver_id = T1.driver_id ORDER BY T2.population ASC LIMIT 1"
shipping,"Among the shipments shipped to Cicero, Illinois, how many shipments weighed between 9,000 to 15,000?","""Cicero"" is the city; 'Illinois' is the state",SELECT COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T2.city_name = 'Cicero' AND T2.state = 'Illinois' AND T1.weight BETWEEN 9000 AND 15000
shipping,What model year of truck delivered the ship ID 1233?,,SELECT T1.model_year FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T2.ship_id = '1233'
shipping,"What is the address of the driver that delivers the shipment for the customer lives at 7052 Carroll Road, San Diego, California?","""7052 Carroll Road"" is the address of customer; 'San Diego' is the city; 'California' is the state",SELECT T3.address FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id INNER JOIN driver AS T3 ON T3.driver_id = T1.driver_id WHERE T2.address = '7052 Carroll Road' AND T2.city = 'San Diego' AND T2.state = 'CA'
shipping,"Among the shipments delivered by Maria Craft, how many shipments were delivered in 2017?",delivered in 2017 refers to Cast(ship_date AS DATE) = 2017,"SELECT COUNT(*) FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T2.first_name = 'Maria' AND T2.last_name = 'Craft' AND STRFTIME('%Y', T1.ship_date) = '2017'"
shipping,What is the truck's model year used to ship the ship ID 1245?,,SELECT T1.model_year FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T2.ship_id = '1245'
shipping,Where does the driver of ship ID 1127 live?,live refers to address,SELECT T2.address FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T1.ship_id = '1127'
shipping,Give the annual revenue of the customer of ship ID 1047.,,SELECT T2.annual_revenue FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T1.ship_id = '1047'
shipping,"What is the weight of the shipment delivered by Andrea Simons on March 7, 2016?","on March 7, 2016 refers to ship_date = '2016-03-07'",SELECT T1.weight FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T2.first_name = 'Andrea' AND T2.last_name = 'Simons' AND T1.ship_date = '2016-03-07'
shipping,"Provide the destination city of the shipment shipped by January 16, 2017.","January 16, 2017 refers to ship_date = '2017-01-16'; city refers to city_name",SELECT T2.city_name FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T1.ship_date = '2017-01-16'
shipping,How many shipments were delivered to a customer from New York?,"""New York"" refers to state = 'NY'",SELECT COUNT(*) FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T2.state = 'NY'
shipping,What is the name of the customer of ship ID 1147?,name of customer refers to cust_name,SELECT T2.cust_name FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T1.ship_id = '1147'
shipping,List the ship ID of shipments shipped to the most populated city.,most populated city refers to Max(population),SELECT T1.ship_id FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id ORDER BY T2.population DESC LIMIT 1
shipping,"List the driver's name of the shipment shipped on February 22, 2016.","on February 22, 2016 refers to ship_date = '2016-02-22'; driver's name refers to first_name, last_name","SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T1.ship_date = '2016-02-22'"
shipping,List the weight of the customer's shipment with annual revenue of 39448581.,,SELECT T1.weight FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T2.annual_revenue = 39448581
shipping,What is the customer's address for the shipment with ship ID 1117?,,SELECT T2.address FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T1.ship_id = '1117'
shipping,"Among the shipments to a customer from Texas, what percentage of the shipments shipped in 2017?","""Texas"" refers to state = 'TX'; shipped in 2017 refers to CAST(ship_date AS DATE) = 2017; percentage = Divide (Count (ship_id where CAST(ship_date AS DATE) = 2017), Count (ship_id)) * 100","SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', T1.ship_date) = '2017' THEN 1 ELSE 0 END) AS REAL ) * 100 / COUNT(*) FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T2.state = 'TX'"
shipping,Calculate the difference between the number of shipments shipped by the truck with the model year 2005 and model year 2006.,"""2005"" and ""2006"" are both model_year of truck; difference = Subtract (Count (ship_id where model_year = 2005), Count(ship_id where model_year = 2006))",SELECT SUM(CASE WHEN T1.model_year = '2005' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.model_year = '2006' THEN 1 ELSE 0 END) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id
shipping,List the driver's name of the shipment with a weight greater than 95% of the average weight of all shipments.,"weight greater than 95% of average weight refers to weight > Multiply (AVG(weight), 0.95); driver name refers to first_name, last_name","SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T1.weight * 100 > ( SELECT 95 * AVG(weight) FROM shipment )"
language_corpus,Name the longest Catalan language Wikipedia page title and state the number of different words in this page.,longest title refers to max(length(title)),"SELECT title, words FROM pages WHERE title = ( SELECT MAX(LENGTH(title)) FROM pages )"
language_corpus,List all the Catalan language wikipedia page title with less than 10 number of different words in these pages.,less than 10 number of different words refers to words < 10,SELECT title FROM pages WHERE words < 10
language_corpus,List the page number for Catalan language wikipedia pages containing the word 'Art' in the page title.,containing the word 'Art' refers to title LIKE '% Art %',SELECT page FROM pages WHERE title LIKE 'Art%' OR title LIKE '%Art%' OR title LIKE '%Art'
language_corpus,What is the title of Catalan language wikipedia page with revision page id '16203226'?,revision page id '16203226' refers to revision = 16203226,SELECT title FROM pages WHERE revision = 16203226
language_corpus,List the titles for all Catalan language wikipedia page from revision page id 106600 to 106700.,from revision page id 106600 to 106700 refers to revision BETWEEN 106600 AND 106700,SELECT title FROM pages WHERE revision BETWEEN 106600 AND 106700
language_corpus,How many Catalan language wikipedia pages have between 1000 to 2000 number of different words?,between 1000 to 2000 number of different words refers to words BETWEEN 1000 AND 2000,SELECT COUNT(pid) FROM pages WHERE words BETWEEN 1000 AND 2000
language_corpus,List the page id of wikipedia about Catalan language which have the appearance of the word 'decimal'?,have the appearance of 'decimal' refers to word = 'decimal',SELECT T2.pid FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid WHERE T1.word = 'decimal'
language_corpus,Which word has the most occurrences within the same page of wikipedia about Catalan language?,most occurrences refers to max(occurrences),SELECT T1.word FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid WHERE T2.occurrences = ( SELECT MAX(occurrences) FROM pages_words )
language_corpus,List all the first words of the biwords pair where the second word is 'antic'.,first words refer to w1st.word; second word is 'antic' refers to w2nd.word = 'antic',SELECT T1.word FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st WHERE T2.w2nd = ( SELECT wid FROM words WHERE word = 'antic' )
language_corpus,Show all the title of pages and number of occurences for each page where the word 'quipu' appears.,word 'quipu' appears refers to word = 'quipu',"SELECT T1.title, T2.occurrences FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid INNER JOIN words AS T3 ON T2.wid = T3.wid WHERE T3.word = 'quipu'"
language_corpus,Calculate the average number of the word occurrences in which ‘system’ appeared as the first word in the pair.,"average word occurrences = divide(sum(occurrences), count(occurrences)); ‘system’ appeared as the first word refers to w1st = 'system'",SELECT AVG(T2.occurrences) FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st WHERE T2.w1st = ( SELECT wid FROM words WHERE word = 'sistema' )
language_corpus,What is the total pages of Wikipedia in Catalan language?,total pages refers to sum(pages); Catalan language refers to lang = 'ca',SELECT pages FROM langs WHERE lang = 'ca'
language_corpus,"In the Catalan language, which biwords pair appeared the most in this language/page?",biwords pair refers to w1st.word w2nd.word; appeared the most refers to max(occurrences),"SELECT w1st, w2nd FROM biwords WHERE occurrences = ( SELECT MAX(occurrences) FROM biwords )"
language_corpus,What is the word id of the catalan language that was repeated no more than 10 times in the said language?,word id refers to wid; repeated no more than 10 times refers to occurrences < = 10,SELECT wid FROM langs_words WHERE occurrences <= 10
language_corpus,What is the title of the Catalan language Wikipedia page that has the highest number of different words?,highest number of different words refers to max(words),SELECT title FROM pages WHERE words = ( SELECT MAX(words) FROM pages )
language_corpus,What is the wikipedia page id of Arqueozoologia?,page id refers to pid; Arqueozoologia refers to title = 'Arqueozoologia',SELECT page FROM pages WHERE title = 'Arqueozoologia'
language_corpus,"In Abadia, what is the word id of the of the Catalan language that appeared the highest amount of times? Indicate the how many times did they said word id appeared.",Abadia refers to title = 'Abadia'; word id refers to wid; the highest amount of times refers to max(occurrences),"SELECT T2.wid, T2.occurrences FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T1.title = 'Abadia' ORDER BY T2.occurrences DESC LIMIT 1"
language_corpus,What are the titles of the top 5 Catalan language Wikipedia page with the least number of different words? Indicate each title's word id that has appeared the most in the said pages.,least number of different words refers to min(words); word id refers to wid; appeared the most refers to max(occurrences),SELECT T1.title FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid ORDER BY T1.words LIMIT 5
language_corpus,"How many times did the word pair ""i"" and ""a"" appeared in the Cataln language/page?","times appeared refers to occurrences; word pair ""i"" and ""a"" refers to w1st.word = 'i' w2st.word = 'a'",SELECT SUM(occurrences) FROM biwords WHERE w1st = 86 AND w2nd = 109
language_corpus,What are the word pairs that occured only twice?,word pair refers to w1st.word w2nd.word; occured only twice refers to occurrences = 2,"SELECT T1.word, T3.word FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st INNER JOIN words AS T3 ON T3.wid = T2.w2nd WHERE T2.occurrences = 2"
language_corpus,What is the word pair that occured the highest amount of times in Addicio? Indicate how many times such word pair occured.,word pair refers to w1st.word w2nd.word; occurred the highest amount of times refers to max(occurrences); Addicio refers to title = 'Addicio'; times occurred refer to occurrences,"SELECT T3.w1st, T3.w2nd, T3.occurrences FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid INNER JOIN biwords AS T3 ON T2.wid = T3.w1st OR T2.wid = T3.w2nd WHERE T1.title = 'Addicio' ORDER BY T3.occurrences DESC LIMIT 1"
language_corpus,"What is the total word of title ""Adam"" and ""Acampada""?","total word refers to sum(words); title ""Adam"" and ""Acampada"" refers to title IN('Adam','Acampada')","SELECT SUM(words) FROM pages WHERE title IN ('Adam', 'Acampada')"
language_corpus,"What is the revision page ID of title ""Aigua dolÃ§a""?","title ""Aigua dolÃ§a"" refers to title LIKE 'Aigua dolÃ§a%'",SELECT revision FROM pages WHERE title = 'Aigua dolÃ§a'
language_corpus,What is the title of corpus with most words?,most words refers to max(words),SELECT title FROM pages WHERE words = ( SELECT MAX(words) FROM pages )
language_corpus,What is the average words of the 10 fewest words title?,average words = avg(words); 10 fewest words refers to words > = 10,SELECT CAST(SUM(CASE WHEN words >= 10 THEN words ELSE 0 END) AS REAL) / SUM(CASE WHEN words >= 10 THEN 1 ELSE 0 END) FROM pages
language_corpus,"Among the title with single digit word count, list down 5 revision page ID of these titles.",single digit word count refers to words < 10,SELECT revision FROM pages WHERE words < 10 LIMIT 5
language_corpus,"List down the page id of titles start with alphabet ""b"".","start with alphabet ""b"" refers to title LIKE 'b%'",SELECT pid FROM pages WHERE title LIKE 'b%'
language_corpus,"What is the title of corpus where word ""desena"" appear?",This is not,SELECT T1.title FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid INNER JOIN words AS T3 ON T2.wid = T3.wid WHERE T3.word = 'desena'
language_corpus,"What is the word id for title ""Sometent""?",word id refers to wid,SELECT T2.wid FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T1.title = 'Sometent'
language_corpus,"Is word id ""88"" the word id for title ""Animals""?","word id ""88"" refers to wid = 88",SELECT CASE WHEN COUNT(T1.pid) > 0 THEN 'YES' ELSE 'NO' END AS YORN FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T2.wid = 88 AND T1.title = 'Animals'
language_corpus,"What are the occurance of word ""del"" in title ""Any anomalÃ­stic""?",This is not,SELECT T2.occurrences FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE T1.word = 'del' AND T3.title = 'Any anomalÃ­stic'
language_corpus,State one biword pair with occurence of 4.,biword pair refers to w1st.word w2nd.word; occurrence of 4 refers to occurrences = 4,"SELECT T1.word, T3.word FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st INNER JOIN words AS T3 ON T3.wid = T2.w2nd WHERE T2.occurrences = 4 LIMIT 1"
language_corpus,"What are the total occurence of words that paired with ""nombre""?","total occurrence refers to sum(occurrences); paired with ""nombre"" refers to w1st.word = ""nombre"" or w2nd.word = ""nombre""",SELECT SUM(T2.occurrences) FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st OR T1.wid = T2.w2nd WHERE T2.w1st IN (( SELECT wid FROM words WHERE word = 'nombre' ) OR T2.w2nd IN ( SELECT wid FROM words WHERE word = 'nombre' ))
language_corpus,"What are the words that were paired with ""John"", list down 10 of them.","pair with ""John"" refers to w1st.word = ""John"" or w2nd.word = ""John""",SELECT w2nd FROM biwords WHERE w1st = ( SELECT wid FROM words WHERE word = 'john' ) LIMIT 10
language_corpus,"List down the revision page id of titles where ""fresc"" appears.","page id refers to pid; ""fresc"" refers to word = 'fresc'",SELECT T3.revision FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE T1.word = 'fresc'
language_corpus,List down the words with word id from 1 to 10 and write down a paired word for each of them.,word id from 1 to 10 refers to wid BETWEEN 1 AND 10,"SELECT T1.word AS W1, T3.word AS W2 FROM words AS T1 LEFT JOIN biwords AS T2 ON T1.wid = T2.w1st LEFT JOIN words AS T3 ON T3.wid = T2.w2nd WHERE T1.wid <= 10 GROUP BY T1.wid"
language_corpus,"For corpus title ""Atomium"", pick 3 words appear in the title and calculate the total occurence of these words.",total occurrences refers to sum(occurrences),"SELECT T1.word, T1.occurrences FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid WHERE T2.pid = ( SELECT pid FROM pages WHERE title = 'Atomium' ) LIMIT 3"
language_corpus,Indicate which is the word that is repeated the most times.,repeated the most times refer to MAX(occurrences);,SELECT word FROM words WHERE occurrences = ( SELECT MAX(occurrences) FROM words )
language_corpus,Indicate the page id of Wikipedia about Catalan language of all the pages that have a numeric value in their title.,"the page id of Wikipedia refers to pid; numeric value contains only numbers, LIKE '%0%' OR '%1%' OR '%2%' OR '%3%' OR '%4%' OR '%5%' OR '%6%' OR '%7%' OR '%8%' OR '%9%';","SELECT pid, title FROM pages WHERE title LIKE '%0%' OR '%1%' OR '%2%' OR '%3%' OR '%4%' OR '%5%' OR '%6%' OR '%7%' OR '%8%' OR '%9%'"
language_corpus,What is the title of the page that has the fewest words?,has the fewest words refers to MIN(COUNT(words));,SELECT title FROM pages WHERE title = ( SELECT MIN(words) FROM pages )
language_corpus,What is the pair of words that is repeated the most times? Identify them by their ID.,"repeated the most times refer to MAX(occurrences); pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word;","SELECT w1st, w2nd FROM biwords WHERE occurrences = ( SELECT MAX(occurrences) FROM biwords )"
language_corpus,How many total occurrences are there in the three-letter words?,three-letter words are words composed of exactly three letters;,SELECT SUM(occurrences) FROM words WHERE LENGTH(word) = 3
language_corpus,Calculate the average number of different words that appear on all pages whose title begins with A.,"DIVIDE(SUM(words WHERE title = 'A%'), COUNT(words WHERE title = 'A%')) as percentage; A is a letter;",SELECT AVG(words) FROM pages WHERE title LIKE 'A%'
language_corpus,Calculate the average number of repetitions in the pairs of words in which the first word id is number 34.,"Pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word; the first word id number 34 refers to w1st = 34; repetition refers to occurrences or times this pair appears; DIVIDE(SUM(occurrences where w1st = 34), COUNT(occurrences where w1st = 34));",SELECT CAST(SUM(CASE WHEN w1st = 34 THEN 1 ELSE 0 END) AS REAL) / COUNT(w1st) FROM biwords
language_corpus,Calculate the percentage of pages that have 1500 different words.,"DIVIDE(COUNT(pages WHERE words = 1500), COUNT(pages)) as percentage;",SELECT CAST(COUNT(CASE WHEN words = 1500 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(page) FROM pages WHERE words > 300 LIMIT 3
language_corpus,Calculate the percentage of times that the same word appears in a pair.,"Pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word; the same word appears in a pair refers to w1st = w2nd; times refers to occurrences; DIVIDE(COUNT(occurrences where w1st = w2nd), COUNT(occurrences)) as percentage;",SELECT CAST(COUNT(CASE WHEN w1st = w2nd THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(w1st) FROM biwords
language_corpus,Indicate the title of all the pages in which the word comunitat appears.,This is not;,SELECT T3.title FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE T1.word = 'comunitat'
language_corpus,Indicate on how many different pages the word ripoll appears.,This is not;,SELECT T3.page FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE T1.word = 'ripoll'
language_corpus,How many words are repeated on the Llista de conflictes armats page?,title = 'Llista de conflictes armats'; How many repeated refers to occurrences;,SELECT occurrences FROM pages_words WHERE pid = ( SELECT pid FROM pages WHERE title = 'Llista de conflictes armats' )
language_corpus,Indicate if there is any pair formed by the words fukunaga and d'egees.,"Pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word;  w1st = word = 'fukunaga' or w2nd = word = 'fukunaga'; w1st = word = 'd'egees'or w2nd = word = 'd'egees';",SELECT CASE WHEN COUNT(T1.wid) > 0 THEN 'yes' ELSE 'no' END FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st OR T1.wid = T2.w2nd WHERE T2.w1st = ( SELECT wid FROM words WHERE T1.word = 'fukunaga' ) AND T2.w2nd = ( SELECT wid FROM words WHERE word LIKE 'd%egees' )
language_corpus,Calculate the average of repetitions in the pages that have a total of 100 different words.,"Repetition refers to occurrences; 100 different words refers to words = 100; DIVIDE(SUM(occurrences where words = 100), COUNT(page where words = 100)) as percentage;",SELECT CAST(SUM(T2.occurrences) AS REAL) / COUNT(T1.page) FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T1.words = 100
language_corpus,"Which Wikipedia page number does the Catalan language's name, Acampada, appear on?",Wikipedia page number refers to page; title = 'Acampada';,SELECT page FROM pages WHERE title = 'Acampada'
language_corpus,Please list any three Wikipedia pages with more than 300 words.,more than 300 words refers to words > 300;  list any three means limit 3; Wikipedia pages refers to page;,SELECT page FROM pages WHERE words > 300 LIMIT 3
language_corpus,How many times did the word number 8 appear?,word number 8 refers to wid = 8; How many times refer to occurrences;,SELECT occurrences FROM words WHERE wid = 8
language_corpus,Please list the top three most frequently occurring words and their ids.,most frequently occurring words refer to MAX(occurrences); id refers to wid;,"SELECT word, wid FROM words ORDER BY occurrences DESC LIMIT 3"
language_corpus,How frequently did the words 1 and 25 appear together?,"How frequently refers to occurrences;  word 1 refers to wid = 1; word 25 refers to wid = 25; appear together means pair, which is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word;  w1st or w2nd = wid = 1; w1st or w2nd = wid = 25;",SELECT occurrences FROM biwords WHERE w1st = 1 AND w2nd = 25
language_corpus,What number of words are there on revision page 27457362?,This is not;,SELECT words FROM pages WHERE revision = 27457362
language_corpus,"What is the percentage of words in the Catalan language that have a repetition of more than 16,000 times?","words in the Catalan language refers lid = 1; repetition of more than 16,000 times refers to occurrences > 16000; DIVIDE(COUNT(words where lid = 1 and occurrences > 16000), COUNT(words where lid = 1)) as percentage;",SELECT CAST(COUNT(CASE WHEN occurrences > 16000 THEN lid ELSE NULL END) AS REAL) * 100 / COUNT(lid) FROM langs_words
language_corpus,Which Wikipedia page number has the highest number of words in the Catalan language?,Wikipedia page number refers to page;  the highest number of words in the Catalan language refers to MAX(lid = 1);,SELECT page FROM pages WHERE words = ( SELECT MAX(words) FROM pages )
language_corpus,What proportion of a pair of words in the Catalan language have been repeated less than 80 times?,"Pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word; in the Catalan language refers to lid; repeated less than 80 times refers to occurrences < 80; DIVIDE(COUNT(lid where occurrences < 80), COUNT(lid)) as percentage;",SELECT CAST(COUNT(CASE WHEN occurrences < 80 THEN lid ELSE NULL END) AS REAL) * 100 / COUNT(lid) FROM biwords
language_corpus,How many Catalan-language Wikipedia pages are there overall?,Catalan-language refers to lang = 'ca';,SELECT pages FROM langs WHERE lang = 'ca'
language_corpus,"Please list any three Wikipedia pages that are written in Catalan, together with their titles and revision page numbers.",in Catalan means in Catalan-language and refers to lid = 1; revision page numbers refer to revision;,"SELECT title, revision FROM pages WHERE lid = 1 LIMIT 3"
language_corpus,What is the language of the pair of words numbered 1 and 616?,"Pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word; w1st = 1; w2nd = 616;",SELECT T2.lang FROM biwords AS T1 INNER JOIN langs AS T2 ON T1.lid = T2.lid WHERE T1.w1st = 1 AND T1.w2nd = 616
language_corpus,"How many times does the Catalan word ""nombre"" repeat itself?",the Catalan means Catalan language and refers to lid = 1; How many times repeat refers to occurrences;,SELECT T1.occurrences FROM langs_words AS T1 INNER JOIN words AS T2 ON T1.wid = T2.wid WHERE T2.word = 'nombre'
language_corpus,What is the second word in the pair of words number 1 and 8968?,"Pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word; w1st = 1; w2nd = 8968;",SELECT word FROM words WHERE wid = 8968
language_corpus,Which word has the most repetitions in the Catalan language?,the most repetitions refer to MAX(occurrences); Catalan language refers to lid = 1;,SELECT T2.word FROM langs_words AS T1 INNER JOIN words AS T2 ON T1.wid = T2.wid WHERE T1.occurrences = ( SELECT MAX(occurrences) FROM langs_words )
language_corpus,"How many times on page number 44 does the word ""votives"" appear?",How many times refers to occurrences; page number 44 refers to pid = 44;,SELECT T2.occurrences FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid WHERE T1.word = 'votives' AND T2.pid = 44
language_corpus,How many times on page number 16 does the second word in the pair of words 1 and 109 appear?,"How many times appear refer to occurrences; page number 16 refers to pid = 16; Pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word; w1st = 1; w2nd = 109;",SELECT SUM(T1.occurrences) FROM pages_words AS T1 INNER JOIN biwords AS T2 ON T2.w2nd = T1.wid WHERE T2.w2nd = 109 AND T2.w1st = 1 AND T1.pid = 16
language_corpus,What is the percentage of the words that have been repeated under 180 times in the Catalan language?,"repeated under 180 times refers to occurrences < 180; Catalan language refers to lang = 'ca'; DIVIDE(COUNT(words WHERE occurrences < 180 and lang = 'ca'), COUNT(words WHERE lang = 'ca')) as percentage;",SELECT CAST(COUNT(CASE WHEN T2.occurrences < 180 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.lid) FROM langs AS T1 INNER JOIN langs_words AS T2 ON T1.lid = T2.lid WHERE T1.lang = 'ca'
language_corpus,"What percentage of Catalan-language Wikipedia pages have more than 10,000 words?","Catalan-language refers to lang = 'ca'; more than 10,000 words refer to words > 10000; DIVIDE(COUNT(pages WHERE words > 10000 and lang = 'ca'), COUNT(pages WHERE lang = 'ca')) as percentage;",SELECT CAST(COUNT(CASE WHEN T2.words > 10000 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.page) FROM langs AS T1 INNER JOIN pages AS T2 ON T1.lid = T2.lid WHERE T1.lang = 'ca'
language_corpus,"How many times the word ""desena"" occurs?",How many times occurs refers to occurrences;,SELECT occurrences FROM words WHERE word = 'desena'
language_corpus,How many words has the appearance times greater than 10?,appearance times greater than 10 refers to occurrences > 10;,SELECT COUNT(w1st) AS countwords FROM biwords WHERE occurrences > 10
language_corpus,List out the total pages of Wikipedia in Catalan language.,This is not;,SELECT pages FROM langs
language_corpus,How many words have repetitions greater than 2000 and lower than 5000?,repetitions greater than 2000 and lower than 5000 refer to occurrences between 2000 and 5000;,SELECT COUNT(wid) FROM langs_words WHERE occurrences BETWEEN '2000' AND '5000'
language_corpus,List out the title of Catalan language Wikipedia page that has wikipedia revision page id as 106601.,Wikipedia revision page id as 106601 refers to revision = 106601;,SELECT title FROM pages WHERE revision = 106601
language_corpus,State the Wikipedia page title that has revision page id of 28040864.,revision page id of 28040864 refers to revision = 28040864;,SELECT title FROM pages WHERE revision = 28040864
language_corpus,"How many times that the word pair of ""barcelona"" and ""precolombina"" occur?","Pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word; w1st or w2nd = 'barcelona'; w1st or w2nd = 'precolombina';",SELECT SUM(occurrences) FROM biwords WHERE w1st = ( SELECT wid FROM words WHERE word = 'barcelona' ) AND w2nd = ( SELECT wid FROM words WHERE word = 'precolombina' )
language_corpus,"What is the locale of the language of the page titled ""Anys 90""?","page titled ""Anys 90"" refers to title = 'Anys 90';",SELECT T1.locale FROM langs AS T1 INNER JOIN pages AS T2 ON T1.lid = T2.lid WHERE T2.title = 'Anys 90'
language_corpus,Which word that has 71303 appearance in the Catalan language?,has 71303 appearance refers to occurrences = 71303;,SELECT T1.word FROM words AS T1 INNER JOIN langs_words AS T2 ON T1.wid = T2.wid WHERE T2.occurrences = 71303
language_corpus,"What is the locale of the language of the page titled ""Abril""?","the page titled ""Abril"" refers to title = 'Abril';",SELECT T1.locale FROM langs AS T1 INNER JOIN pages AS T2 ON T1.lid = T2.lid WHERE T2.title = 'Abril'
language_corpus,"What is the total number of words in page containing pair of word id ""100"" and ""317""?","Pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word; w1st = 100; w2nd = 317;",SELECT words FROM langs WHERE lid = ( SELECT lid FROM biwords WHERE w1st = 100 AND w2nd = 317 )
language_corpus,State the total pages of the words that has repeated times of 2593.,repeated times of 2593 refers to occurrences = 2593;,SELECT COUNT(T1.pages) FROM langs AS T1 INNER JOIN langs_words AS T2 ON T1.lid = T2.lid WHERE T2.occurrences = 2593
language_corpus,List out the title of the word have id less than 20.,word have id less than 20 refers to wid < 20;,SELECT DISTINCT T1.title FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T2.wid < 20
language_corpus,How many word that has number of different words equal to 3?,This is not;,SELECT COUNT(T2.wid) FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T1.words = 3
language_corpus,How many word appeared 8 times? State the language id of the page.,appeared 8 times refers to occurrences = 8;,"SELECT COUNT(T2.wid), T1.lid FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T2.occurrences = 8"
language_corpus,Calculate the average percentage of word appearance in the page that have revision page id smaller than 106680.,"revision page id smaller than 106680 refers to revision < 106680; word appearance refers to occurrences; DIVIDE(SUM(occurrences where revision < 106680), COUNT(occurrences)) as percentage;",SELECT CAST(SUM(T1.words) AS REAL) * 100 / SUM(T2.occurrences) FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T1.revision < 106680
language_corpus,List out the total pages of the words that has repeated times more than 3000.,repeated more than 3000 times refers to occurrences > 3000;,SELECT T1.pages FROM langs AS T1 INNER JOIN langs_words AS T2 ON T1.lid = T2.lid WHERE T2.occurrences > 3000 GROUP BY T1.pages
language_corpus,State the name of the pair of word that have id of 20 and 50?,word that have id of 20 refers to wid = 20; word that have id of 50 refers to wid = 50;,"SELECT T1.word, T3.word FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st INNER JOIN words AS T3 ON T3.wid = T2.w2nd WHERE T2.w1st = 20 AND T2.w2nd = 50"
language_corpus,How many pages of Wikipedia are there in total on the Catalan language?,Catalan language refers to lang = 'ca';,SELECT pages FROM langs WHERE lang = 'ca'
language_corpus,Please list the titles of the Wikipedia pages on the Catalan language with more than 4000 words.,Catalan language refers to lid = 1; more than 4000 words refers to words > 4000;,SELECT title FROM pages WHERE lid = 1 AND words > 4000
language_corpus,"How many words are there on the page titled ""Asclepi""?","page titled ""Asclepi"" refers to title = 'Asclepi' ;",SELECT words FROM pages WHERE title = 'Asclepi'
language_corpus,"Which of these pages have more words, the page titled ""Afluent"" or ""Asclepi""?",COUNT(words where title = 'Afluent')> COUNT(words where title = 'Asclepi'),SELECT CASE WHEN ( SELECT words FROM pages WHERE title = 'Asclepi' ) > ( SELECT words FROM pages WHERE title = 'Afluent' ) THEN 'Asclepi' ELSE 'Afluent' END
language_corpus,"What is the occurrence of the word ""nombre""?",This is not;,SELECT occurrences FROM words WHERE word = 'nombre'
language_corpus,Please list the Catalan words with an occurrence of over 200000.,occurrence of over 200000 refers to occurrences > 200000;,SELECT word FROM words WHERE occurrences > 200000
language_corpus,"What is the locale of the language of the page titled ""Asclepi""?","page titled ""Asclepi"" refers to title = 'Asclepi' ;",SELECT T2.locale FROM pages AS T1 INNER JOIN langs AS T2 ON T1.lid = T2.lid WHERE T1.title = 'Asclepi'
language_corpus,"How many times did the word ""grec"" occur on the page titled ""Àbac""?","how many times occur refers to occurrences; page titled ""Àbac"" refers to title = 'Àbac' ;",SELECT T2.occurrences FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE T3.title = 'Àbac' AND T1.word = 'grec'
language_corpus,"Please list the title of the pages on which the word ""grec"" occurred for over 20 times.",occurred for over 20 times refers to occurrences > 20;,SELECT T3.title FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE T1.word = 'grec' AND T2.occurrences > 20
language_corpus,"How many words are there on the page that the word ""grec"" has occurred for 52 times?","the word ""grec"" refers to word = 'grec'; occurred for 52 times refers to occurrences = 52",SELECT SUM(T3.words) FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE T1.word = 'grec' AND T2.occurrences = 52
language_corpus,"What's the occurrence of the biwords pair whose first word is ""àbac"" and second word is ""xinès""?",àbac refers to word = 'àbac'; xinès refers to word = 'xinès'; occurrence refers to occurrences,SELECT occurrences FROM biwords WHERE w1st = ( SELECT wid FROM words WHERE word = 'àbac' ) AND w2nd = ( SELECT wid FROM words WHERE word = 'xinès' )
language_corpus,"Which biwords pair has a higher occurrence, ""àbac-xinès"" or ""àbac-grec""?",higher occurrence is MAX(occurrences); àbac refers to word = 'àbac'; xinès refers to word = 'xinès'; grec refers to word = 'grec',SELECT CASE WHEN ( SELECT occurrences FROM biwords WHERE w1st = ( SELECT wid FROM words WHERE word = 'àbac' ) AND w2nd = ( SELECT wid FROM words WHERE word = 'xinès' ) ) > ( SELECT occurrences FROM biwords WHERE w1st = ( SELECT wid FROM words WHERE word = 'àbac' ) AND w2nd = ( SELECT wid FROM words WHERE word = 'grec' ) ) THEN 'àbac-xinès' ELSE 'àbac-grec' END AS CALUS FROM words LIMIT 1
language_corpus,"How many more times does the first word in the biwords pair ""àbac-xinès"" occur than the biwords pair itself?","àbac refers to word = 'àbac'; xinès refers to word = 'xinès'; How many more times the first word in the biwords occur than the biwords pair itself means SUBTRACT(words.occurrence, biwords.occurrences)",SELECT occurrences - ( SELECT occurrences FROM biwords WHERE w1st = ( SELECT wid FROM words WHERE word = 'àbac' ) AND w2nd = ( SELECT wid FROM words WHERE word = 'xinès' ) ) AS CALUS FROM words WHERE word = 'àbac'
language_corpus,"Please list all the biwords pairs with ""àbac"" as its first word.",àbac refers to word = 'àbac'; first word refers to w1st,"SELECT T1.word AS W1, T3.word AS W2 FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st INNER JOIN words AS T3 ON T3.wid = T2.w2nd WHERE T1.word = 'àbac'"
language_corpus,"What is the total occurrence of the biwords pairs with ""àbac"" as its first word?",occurrence refers to occurrences; àbac refers to word = 'àbac'; first word refers to w1st,SELECT COUNT(T2.w1st) FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st INNER JOIN words AS T3 ON T3.wid = T2.w2nd WHERE T1.word = 'àbac'
language_corpus,"How many Wikipedia pages are there on the language of the biwords pair ""àbac-xinès""?",àbac refers to word = 'àbac'; xinès refers to word = 'xinès'; Wikipedia pages refer to pages,SELECT COUNT(T1.pages) FROM langs AS T1 INNER JOIN biwords AS T2 ON T1.lid = T2.lid WHERE T2.w1st = ( SELECT wid FROM words WHERE word = 'àbac' ) AND T2.w2nd = ( SELECT wid FROM words WHERE word = 'xinès' )
language_corpus,"How much higher in percentage does the word ""grec"" occur on the page titled ""Àbac"" than on the page titled ""Astronomia""?","grec refers to word = 'grec'; Àbac refers to title = 'Àbac'; Astronomia refers to title = 'Astronomia'; percentage = DIVIDE(SUBTRACT(occurrences where title = 'Àbac' AND word = 'grec', occurrences where title = 'Astronomia' AND word = 'grec'), occurrences where title = 'Astronomia' AND word = 'grec')",SELECT CAST((SUM(CASE WHEN T3.title = 'Àbac' THEN T2.occurrences END) - SUM(CASE WHEN T3.title = 'Astronomia' THEN T2.occurrences END)) AS REAL) * 100 / SUM(CASE WHEN T3.title = 'Astronomia' THEN T2.occurrences END) FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE T1.word = 'grec'
language_corpus,How many pages does the Catalan language have in Wikipedia?,Catalan language refers to lang = 'ca',SELECT pages FROM langs WHERE lang = 'ca'
language_corpus,Which word has the most repetitions in the Catalan language? Give the ID of the word.,word with the most repetitions refers to MAX(occurrences); ID of the word refers to wid,SELECT wid FROM langs_words WHERE occurrences = ( SELECT MAX(occurrences) FROM langs_words )
language_corpus,What is the word ID for the second word for the biwords pair with most repetitions?,second word refers to w2nd; biwords pair with most repetitions refers to MAX(biwords.occurrences),SELECT w2nd FROM biwords WHERE occurrences = ( SELECT MAX(occurrences) FROM biwords )
language_corpus,"How many occurrences does the word ""panajot"" have?",panajot refers to word = 'panajot',SELECT occurrences FROM words WHERE word = 'panajot'
language_corpus,Which word has the time of occurrences as 340691?,occurrences of 340691 refers to occurrences = 340691,SELECT word FROM words WHERE occurrences = 340691
language_corpus,"State the word ID for ""periodograma"".",word ID refers to wid; periodograma refers to word = 'periodograma',SELECT wid FROM words WHERE word = 'periodograma'
language_corpus,"For the biwords pair that appears ""116430"" times, what is the second word of the pair?","the biwords pair that appears ""116430"" times refers to occurrences = 116430; second word of the pair refers to w2nd",SELECT T1.word FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w2nd WHERE T2.occurrences = 116430
language_corpus,"How many times does the word ""riu"" appears in the biwords pair?",riu refers to word = 'riu'; SUM(w1st where wid is word = 'riu' AND w2nd where wid is word = 'riu'),SELECT COUNT(T1.wid) FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st INNER JOIN words AS T3 ON T3.wid = T2.w2nd WHERE T1.word = 'riu'
language_corpus,"Which word has the most appearances in the Wikipedia page with the title of ""Agricultura""? Give the word ID.",Agricultura refers to title = 'Agricultura'; the most appearances is MAX(pages_words_sampling.occurrences),SELECT T2.wid FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T1.title = 'Agricultura' ORDER BY T2.occurrences DESC LIMIT 1
language_corpus,"How many appearances does the word ID No. 2823 have in the Wikipedia page ""Astre""?",Astre refers to title = 'Astre'; word ID No. 2823 refers to wid = 2823; appearances refers to pages_words_sampling.occurrences,SELECT SUM(T2.occurrences) FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T1.title = 'Astre' AND T2.wid = 2823
language_corpus,In which Wikipedia page does the word ID No. 174 have the most appearances? Give the title.,word ID No. 174 refers to wid = 174; appearances refers to pages_words_sampling.occurrences,SELECT title FROM pages WHERE pid = ( SELECT pid FROM pages_words WHERE wid = 174 ORDER BY occurrences DESC LIMIT 1 )
language_corpus,"How many times does the word ""heròdot"" appear in the Wikipedia page?",heròdot refers to word = 'heròdot'; times appear refers to SUM(pid),SELECT COUNT(T2.occurrences) FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid WHERE T1.word = 'heròdot'
language_corpus,Which word has the most appearances in the Wikipedia page revision ID No. 28278070? Give the word ID.,the most appearances refers to MAX(occurrences); revision ID No. 28278070 refers to revision = 28278070; word ID refers to wid,SELECT pid FROM pages_words WHERE pid = ( SELECT pid FROM pages WHERE revision = 28278070 ) ORDER BY occurrences DESC LIMIT 1
language_corpus,"How many times does the biwords ""que gregorio"" appear in the language?",que gregorio refers to w1st = wid where word = 'que' AND w2nd = wid where word = 'gregorio'; appear refers to biwords.occurrences,SELECT occurrences FROM biwords WHERE w1st = ( SELECT wid FROM words WHERE word = 'que' ) AND w2nd = ( SELECT wid FROM words WHERE word = 'gregorio' )
language_corpus,"How many biword pairs contain the word ""base"" as the second word?",base refers to word = 'base'; SUM(w2nd) where w2nd = wid for word = 'base',SELECT COUNT(w1st) FROM biwords WHERE w2nd = ( SELECT wid FROM words WHERE word = 'base' )
language_corpus,"How many times of repetition does the word ""exemple"" show in the Catalan language?",exemple refers to word = 'exemple'; repetition refers to langs_words.occurrences; lid = 1 menas it's Catalan language,SELECT T2.occurrences FROM words AS T1 INNER JOIN langs_words AS T2 ON T1.wid = T2.wid WHERE T1.word = 'exemple' AND T2.lid = 1
language_corpus,Which word that has 274499 repetitions in the Catalan language?,lid = 1 menas it's Catalan language; 274499 repetitions refers to occurrences = 274499,SELECT T1.word FROM words AS T1 INNER JOIN langs_words AS T2 ON T1.wid = T2.wid WHERE T2.occurrences = 274499 AND T2.lid = 1
language_corpus,"How many times greater is the appearances of the biword pair ""a base"" than ""a decimal""?","a, base AND decimal are words; wid is the ID of word; w1st is the first word of a biword pair; w2nd is the second word of a biword pair; appearances refers to biwords.occurrences; biword pair 'a base' refers to word = 'a' as w1st AND word = 'base' as w2nd; biword pair 'a decimal' refers to word = 'a' as w1st AND word = 'decimal' as w2nd; appearances of 'a base' greater than 'a decimal' refers to DIVIDE(SUBTRACT(biwords.occurrences'a base', biwords.occurrences'a decimal'), biwords.occurrences'a decimal')",SELECT CAST(occurrences AS REAL) / ( SELECT occurrences FROM biwords WHERE w1st = ( SELECT wid FROM words WHERE word = 'a' ) AND w2nd = ( SELECT wid FROM words WHERE word = 'decimal' ) ) FROM biwords WHERE w1st = ( SELECT wid FROM words WHERE word = 'a' ) AND w2nd = ( SELECT wid FROM words WHERE word = 'base' )
language_corpus,"For the word ""grec"", what is the percentage of the appearances in the ""Art"" Wikipedia page have among all the appearances?","grec refers to word = 'grec'; Art refers to title = 'Art'; percentage is DIVIDE(occurrences(grec), occurences(Art))*100",SELECT CAST(SUM(CASE WHEN T3.title = 'Art' THEN T2.occurrences ELSE 0 END) AS REAL) * 100 / SUM(T2.occurrences) FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE T1.word = 'grec'
language_corpus,How many Wikipedia pages with over 4000 different words are there on the Catalan language?,lid = 1 means it's Catalan language; over 4000 different words means words > 4000; Wikipedia pages refers to pid,SELECT COUNT(lid) FROM pages WHERE lid = 1 AND words > 4000
language_corpus,Please list the titles of all the Wikipedia pages on the Catalan language with 10 different words.,lid = 1 means it's Catalan language; 10 different words refers to words = 10; titles refers to title,SELECT title FROM pages WHERE lid = 1 AND words = 10 LIMIT 10
language_corpus,What is the word that occurs the most in the Catalan language?,MAX(occurrences),SELECT word FROM words WHERE occurrences = ( SELECT MAX(occurrences) FROM words )
language_corpus,Please list the titles of the top 3 Wikipedia pages with the most different words on the Catalan language.,lid = 1 means it's Catalan language; with most different words refers to MAX(words),SELECT title FROM pages WHERE lid = 1 ORDER BY words DESC LIMIT 3
language_corpus,"What is the revision ID for the page on Catalan titled ""Arqueologia""?",lid = 1 means it's Catalan language; Arqueologia refers to title = 'Arqueologia'; revision ID refers to revision,SELECT revision FROM pages WHERE lid = 1 AND title = 'Arqueologia'
language_corpus,"Among the wikipedia pages on Catalan with more than 300 different words, how many of them have a revision ID of over 28330000?",lid = 1 means it's Catalan language; more than 300 different words refers to words > 300; revision ID of over 28330000 refers to revision > 28330000,SELECT COUNT(lid) FROM pages WHERE lid = 1 AND words > 300 AND revision > 28330000
language_corpus,"Please list the page IDs of all the Wikipedia pages that have the word ""nombre"" appeared on it.",nombre refers to word = 'nombre'; page IDs refers to pid,SELECT T2.pid FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid WHERE T1.word = 'nombre'
language_corpus,"How many Wikipedia pages on Catalan are there with the word ""nombre"" appearing for more than 5 times?",nombre refers to word = 'nombre'; appear for more than 5 times refers to  pages_words.occurrences > 5,SELECT COUNT(T2.pid) FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid WHERE T1.word = 'nombre' AND T2.occurrences > 5
language_corpus,"How many biwords pairs are there whose second word is ""grec""?",grec refers to word = 'grec'; wid where word = 'grec' AS w2nd,SELECT COUNT(T2.w1st) FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w2nd WHERE T1.word = 'grec'
language_corpus,"What is the title of the page on which the word ""grec"" has an occurrence of 52 times.",occurrence of 52 times refers to pages_words.occurrences = 52; grec refers to word = 'grec',SELECT T3.title FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE T1.word = 'grec' AND T2.occurrences = 52
language_corpus,"Among the biwords pairs with ""àbac"" as its first word, how many of them have an occurrence of over 10?",àbac refers to word = 'àbac'; as first word refers to w1st; occurrence of over 10 refers to occurrences > 10,SELECT COUNT(T2.w2nd) FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st WHERE T1.word = 'àbac' AND T2.occurrences > 10
language_corpus,"What is the average occurrence of the word ""grec"" on each Wikipedia page that has this word?",grec refers to word = 'grec'; AVG(occurrences where word = 'grec'),SELECT CAST(SUM(T2.occurrences) AS REAL) / COUNT(T1.wid) FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid WHERE T1.word = 'grec'
airline,How many flights were there on 2018/8/1?,on 2018/8/1 refers to FL_DATE = '2018/8/1';,SELECT COUNT(*) FROM Airlines WHERE FL_DATE = '2018/8/1'
airline,"Among the flights on 2018/8/1, how many of them departed from an airport in New York?",on 2018/8/1 refers to FL_DATE = '2018/8/1'; departed from an airport in New York refers to ORIGIN = 'JFK';,SELECT COUNT(*) FROM Airlines WHERE FL_DATE = '2018/8/1' AND ORIGIN = 'JFK'
airline,Please list the destination cities of all the flights that were cancelled on 2018/8/1.,destination cities refers to DEST; cancelled refers to CANCELLED = 1; on 2018/8/1 refers to FL_DATE = '2018/8/1';,SELECT DEST FROM Airlines WHERE FL_DATE = '2018/8/1' AND CANCELLED = 1 GROUP BY DEST
airline,Please list the dates of the flights that were cancelled due to the most serious reason.,dates of the flights refers to FL_DATE; cancelled refers to CANCELLED = 1; most serious reason refers to CANCELLATION_CODE = 'A';,SELECT FL_DATE FROM Airlines WHERE CANCELLATION_CODE = 'A' GROUP BY FL_DATE
airline,Please list the departure airports of the flights on 2018/8/1 that were delayed.,departure airports refers ORIGIN; on 2018/8/1 refers to FL_DATE = '2018/8/1'; delayed refers to DEP_DELAY > 0;,SELECT T1.Description FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T2.FL_DATE = '2018/8/1' AND T2.DEP_DELAY > 0 GROUP BY T1.Description
airline,"Among the flights on 2018/8/1, how many of them were scheduled to depart from John F. Kennedy International in New York?","on 2018/8/1 refers to FL_DATE = '2018/8/1'; depart from refers to ORIGIN; John F. Kennedy International in New York refers to Description = 'New York, NY: John F. Kennedy International';","SELECT COUNT(T1.Code) FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T2.FL_DATE = '2018/8/1' AND T1.Description = 'New York, NY: John F. Kennedy International'"
airline,"For the flight on 2018/8/1 that was delayed for the longest time, which was the destination airport of this flight?",on 2018/8/1 refers to FL_DATE = '2018/8/1';  delayed for the longest time refers to MAX(DEP_DELAY); destination airport refers to DEST;,SELECT T1.Description FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST WHERE T2.FL_DATE = '2018/8/1' ORDER BY T2.DEP_DELAY DESC LIMIT 1
airline,"Among the flights departing from John F. Kennedy International, how many of them arrived earlier than scheduled?","departing from refers to ORIGIN; John F. Kennedy International refers to Description = 'New York, NY: John F. Kennedy International'; arrived earlier than scheduled refers to ARR_DELAY < 0;","SELECT SUM(CASE WHEN T2.ARR_DELAY < 0 THEN 1 ELSE 0 END) AS count FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T1.Description = 'New York, NY: John F. Kennedy International'"
airline,"Among all the flights scheduled to depart from John F. Kennedy International on 2018/8/1, when was the earliest one scheduled to depart?","depart from refers to ORIGIN; John F. Kennedy International refers to Description = 'New York, NY: John F. Kennedy International'; on 2018/8/1 refers to FL_DATE = '2018/8/1'; earliest one scheduled to depart refers to MIN(DEP_TIME);","SELECT T2.DEP_TIME FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T2.FL_DATE = '2018/8/1' AND T1.Description = 'New York, NY: John F. Kennedy International' AND T2.DEP_TIME IS NOT NULL ORDER BY T2.DEP_TIME ASC LIMIT 1"
airline,How many flights on 2018/8/1 were operated by American Airlines Inc.?,on 2018/8/1 refers to FL_DATE = '2018/8/1'; American Airlines Inc. refers to Description = 'American Airlines Inc.: AA';,SELECT COUNT(*) FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T2.FL_DATE = '2018/8/1' AND T3.Description = 'American Airlines Inc.: AA'
airline,Please list the flight numbers of all the flights operated by American Airlines Inc. that were scheduled to depart from John F. Kennedy International.,"flight numbers refers to OP_CARRIER_FL_NUM; American Airlines Inc. refers to Description = 'American Airlines Inc.: AA'; depart from refers to ORIGIN; John F. Kennedy International refers to Description = 'New York, NY: John F. Kennedy International';","SELECT T2.OP_CARRIER_FL_NUM FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T3.Description = 'American Airlines Inc.: AA' AND T1.Description = 'New York, NY: John F. Kennedy International' AND T2.FL_DATE = '2018/8/1'"
airline,How many flights operated by American Airlines Inc. on 2018/8/1 were faster than scheduled?,American Airlines Inc. refers to Description = 'American Airlines Inc.: AA'; on 2018/8/1 refers to FL_DATE = '2018/8/1'; faster than scheduled refers to ACTUAL_ELAPSED_TIME < CRS_ELAPSED_TIME;,SELECT SUM(CASE WHEN T2.ACTUAL_ELAPSED_TIME < CRS_ELAPSED_TIME THEN 1 ELSE 0 END) AS count FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T2.FL_DATE = '2018/8/1' AND T3.Description = 'American Airlines Inc.: AA'
airline,What is the flight number of the flight operated by American Airlines Inc. that had the longest delay in departure?,flight numbers refers to OP_CARRIER_FL_NUM; American Airlines Inc. refers to Description = 'American Airlines Inc.: AA'; longest delay in departure refers to MAX(DEP_DELAY);,SELECT T1.OP_CARRIER_FL_NUM FROM Airlines AS T1 INNER JOIN Airports AS T2 ON T2.Code = T1.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T1.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T3.Description = 'American Airlines Inc.: AA' ORDER BY T1.DEP_TIME DESC LIMIT 1
airline,"Among the flights operated by American Airlines Inc., how many of them were scheduled to land in New York?",American Airlines Inc. refers to Description = 'American Airlines Inc.: AA'; land in New York refers to DEST = 'JFK';,SELECT SUM(CASE WHEN T2.DEST = 'JFK' THEN 1 ELSE 0 END) AS count FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T3.Description = 'American Airlines Inc.: AA'
airline,"Among the flights operated by American Airlines Inc. on 2018/8/1, how many of them were cancelled?",American Airlines Inc. refers to Description = 'American Airlines Inc.: AA'; on 2018/8/1 refers to FL_DATE = '2018/8/1'; cancelled refers to CANCELLED = 1;,SELECT SUM(CASE WHEN T2.CANCELLED = 1 THEN 1 ELSE 0 END) AS count FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T2.FL_DATE = '2018/8/1' AND T3.Description = 'American Airlines Inc.: AA'
airline,"Which airline operated more flights on 2018/8/1, American Airlines Inc. or Endeavor Air Inc.?",SUM(Description = 'American Airlines Inc.: AA') > SUM(Description = 'Endeavor Air Inc.: 9E') means American Airlines Inc. operated more flights than  Endeavor Air Inc; SUM(Description = 'American Airlines Inc.: AA') < SUM(Description = 'Endeavor Air Inc.: 9E') means Endeavor Air Inc. operated more flights than American Airlines Inc.; on 2018/8/1 refers to FL_DATE = '2018/8/1';,SELECT CASE WHEN COUNT(CASE WHEN T3.Description = 'American Airlines Inc.: AA' THEN 1 ELSE NULL END) > COUNT(CASE WHEN T3.Description = 'Endeavor Air Inc.: 9E' THEN 1 ELSE NULL END) THEN 'American Airlines Inc.: AA' ELSE 'Endeavor Air Inc.: 9E' END AS RESULT FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T2.FL_DATE = '2018/8/1'
airline,What is the average departure delay time of flights operated by American Airlines Inc.?,"average departure delay time = DIVIDE(SUM(DEP_DELAY), COUNT(Code)); American Airlines Inc. refers to Description = 'American Airlines Inc.: AA';",SELECT AVG(T1.DEP_DELAY) FROM Airlines AS T1 INNER JOIN Airports AS T2 ON T2.Code = T1.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T1.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T3.Description = 'American Airlines Inc.: AA'
airline,"How many flights on average does American Airlines Inc. operate every day in August, 2018?","flights on average = DIVIDE(COUNT(Code), 31); American Airlines Inc. refers to Description = 'American Airlines Inc.: AA'; every day in August, 2018 refers to FL_DATE like '2018/8%';",SELECT CAST( SUM(CASE WHEN T2.FL_DATE LIKE '2018/8%' THEN 1 ELSE 0 END) AS REAL) / 31 FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T3.Description = 'American Airlines Inc.: AA'
airline,What is the number of air carriers in the database?,,SELECT COUNT(Code) FROM `Air Carriers`
airline,Give the number of planes that took off from Los Angeles International airport on 2018/8/27.,"took off from refers to ORIGIN; Los Angeles International airport refers to Description = 'Los Angeles, CA: Los Angeles International'; on 2018/8/27 refers to FL_DATE = '2018/8/27';","SELECT SUM(CASE WHEN T2.FL_DATE = '2018/8/27' THEN 1 ELSE 0 END) AS count FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T1.Description = 'Los Angeles, CA: Los Angeles International'"
airline,Provide the number of airplanes that landed on Oakland Airport on 2018/8/7.,landed on refers to DEST; Oakland Airport refers to Description which contains 'Oakland'; on 2018/8/7 refers to FL_DATE = '2018/8/7';,SELECT SUM(CASE WHEN T1.Description LIKE '%Oakland%' THEN 1 ELSE 0 END) AS count FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST WHERE T2.FL_DATE = '2018/8/7'
airline,How many flights of Alaska Airlines were delayed on 2018/8/2?,Alaska Airlines refers to Description = 'Alaska Airlines Inc.: AS'; delayed refers to DEP_DELAY > 0; on 2018/8/2 refers to FL_DATE = '2018/8/2';,SELECT COUNT(*) FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.FL_DATE = '2018/8/2' AND T2.Description = 'Alaska Airlines Inc.: AS' AND T1.DEP_DELAY > 0
airline,Tell the number of fights landed earlier on Miami Airport on 2018/8/12.,landed on refers to DEST; landed earlier refers to ARR_DELAY < 0; Miami Airport refers to DEST = 'MIA'; on 2018/8/12 refers to FL_DATE = '2018/8/12';,SELECT COUNT(*) FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST WHERE T2.FL_DATE = '2018/8/12' AND T2.DEST = 'MIA' AND T2.ARR_DELAY < 0
airline,How many flights from American Airlines were cancelled due to a type A cancellation code?,American Airlines refers to Description = 'American Airlines Inc.: AA'; cancelled refers to Cancelled = 1; cancelled due to type A cancellation code refers to CANCELLATION_CODE = 'A';,SELECT COUNT(*) FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.CANCELLATION_CODE = 'A' AND T2.Description = 'American Airlines Inc.: AA' AND T1.CANCELLED = 1
airline,How many flights of Endeavor Air Inc. were faster than scheduled on 2018/8/31?,Endeavor Air Inc. refers to Description = 'Endeavor Air Inc.: 9E'; faster than scheduled refers to ACTUAL_ELAPSED_TIME < CRS_ELAPSED_TIME; on 2018/8/31 refers to FL_DATE = '2018/8/31';,SELECT SUM(CASE WHEN T1.ACTUAL_ELAPSED_TIME < CRS_ELAPSED_TIME THEN 1 ELSE 0 END) AS count FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.FL_DATE = '2018/8/31' AND T2.Description = 'Endeavor Air Inc.: 9E'
airline,How many planes of Spirit Air Lines took off on 2018/8/7?,Spirit Air Lines refers to Description = 'Spirit Air Lines: NK'; on 2018/8/7 refers to FL_DATE = '2018/8/7';,SELECT COUNT(T2.Code) FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.FL_DATE = '2018/8/7' AND T2.Description = 'Spirit Air Lines: NK'
airline,"For the flight with the tail number 'N702SK', which air carrier does it belong to?",tail number refers to TAIL_NUM; TAIL_NUM = 'N702SK';,SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.TAIL_NUM = 'N702SK' GROUP BY T2.Description
airline,Provide the name of the airport which landed the most number of flights on 2018/8/15.,name of the airport refers to Description; airport that landed the most number of flights refers to MAX(COUNT(DEST)); on 2018/8/15 refers to FL_DATE = '2018/8/15';,SELECT T1.Description FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST WHERE T2.FL_DATE = '2018/8/15' ORDER BY T2.DEST DESC LIMIT 1
airline,"For the flight from ATL to PHL on 2018/8/1 that scheduled local departure time as ""2040"", which air carrier does this flight belong to?",flight from ATL refers to ORIGIN = 'ATL'; flight to PHL refers to DEST = 'PHL'; on 2018/8/1 refers to FL_DATE = '2018/8/1'; local departure time refers to CRS_DEP_TIME; CRS_DEP_TIME = '2040';,SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.FL_DATE = '2018/8/1' AND T1.ORIGIN = 'ATL' AND T1.DEST = 'PHL' AND T1.CRS_DEP_TIME = '2040' GROUP BY T2.Description
airline,Tell the number of flights that landed at Lake Charles Regional Airport on 2018/8/15.,"landed at refers to DEST; Lake Charles Regional Airport refers to Description = 'Lake Charles, LA: Lake Charles Regional'; on 2018/8/15 refers to FL_DATE = '2018/8/15';","SELECT COUNT(T1.Code) FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST WHERE T2.FL_DATE = '2018/8/15' AND T1.Description = 'Lake Charles, LA: Lake Charles Regional'"
airline,How many flights were there from San Diego International airport to Los Angeles International airport in the August of 2018?,"flights from refers to ORIGIN; San Diego International airport refers to Description = 'San Diego, CA: San Diego International'; flights to refers to DEST; Los Angeles International airport refers to Description = 'Los Angeles, CA: Los Angeles International'; in the August of 2018 refers to FL_DATE like '2018/8%';","SELECT COUNT(FL_DATE) FROM Airlines WHERE FL_DATE LIKE '2018/8%' AND ORIGIN = ( SELECT T2.ORIGIN FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T1.Description = 'San Diego, CA: San Diego International' ) AND DEST = ( SELECT T4.DEST FROM Airports AS T3 INNER JOIN Airlines AS T4 ON T3.Code = T4.DEST WHERE T3.Description = 'Los Angeles, CA: Los Angeles International' )"
airline,What is the percentage of flights from Los Angeles International airport that were cancelled due to a type C cancellation code?,"percentage = MULTIPLY(DIVIDE(SUM(CANCELLATION_CODE = 'C'), COUNT(Code)), 100); flights from refers to ORIGIN; Los Angeles International airport refers to Description = 'Los Angeles, CA: Los Angeles International'; cancelled refers to Cancelled = 1; cancelled due to a type C cancellation code refers to CANCELLATION_CODE = 'C';","SELECT CAST(SUM(CASE WHEN T2.CANCELLATION_CODE = 'C' THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T2.FL_DATE = '2018/8/15' AND T2.CANCELLATION_CODE IS NOT NULL AND T1.Description = 'Los Angeles, CA: Los Angeles International'"
airline,What is the percentage of flights which landed at Pittsburgh were faster than scheduled?,"percentage = MULTIPLY(DIVIDE(SUM(ACTUAL_ELAPSED_TIME < T2.CRS_ELAPSED_TIME), COUNT(Code)), 100); landed at refers to DEST; Pittsburgh refers to Description which contains 'Pittsburgh'; faster than scheduled refers to ACTUAL_ELAPSED_TIME < CRS_ELAPSED_TIME;",SELECT CAST(SUM(CASE WHEN T1.ACTUAL_ELAPSED_TIME < T1.CRS_ELAPSED_TIME THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Airlines AS T1 INNER JOIN Airports AS T2 ON T2.Code = T1.DEST WHERE T2.Description LIKE '%Pittsburgh%' AND T1.CRS_ELAPSED_TIME IS NOT NULL AND T1.ACTUAL_ELAPSED_TIME IS NOT NULL
airline,What is the description of the airline code 19049?,,SELECT Description FROM `Air Carriers` WHERE Code = 19049
airline,How many flights departed on time on 8/1/2018?,departed on time refers to DEP_DELAY < = 0; on 8/1/2018 refers to FL_DATE = '2018/8/1';,SELECT COUNT(*) FROM Airlines WHERE FL_DATE = '2018/8/1' AND DEP_DELAY <= 0
airline,"What are the codes of the airport found in Ankara, Turkey?","airport found in Ankara, Turkey refers to Description like '%Ankara, Turkey%';","SELECT Code FROM Airports WHERE Description LIKE '%Ankara, Turkey%'"
airline,How long was the longest minute delay caused by a weather problem in airport id 12264?,longest minute delay caused by a weather problem refers to MAX(WEATHER_DELAY); airport id refers to ORIGIN_AIRPORT_ID; ORIGIN_AIRPORT_ID = 12264;,SELECT WEATHER_DELAY FROM Airlines WHERE ORIGIN_AIRPORT_ID = 12264 ORDER BY WEATHER_DELAY DESC LIMIT 1
airline,"What is the IATA code of the Anita Bay Airport in Anita Bay, Alaska?","IATA code refers to Code; Anita Bay Airport in Anita Bay, Alaska refers to Description = 'Anita Bay, AK: Anita Bay Airport';","SELECT Code FROM Airports WHERE Description = 'Anita Bay, AK: Anita Bay Airport'"
airline,What is the origin airport id that recorded the longest delay due to a late aircraft?,origin airport id refers to ORIGIN_AIRPORT_ID; longest delay due to a late aircraft refers to MAX(LATE_AIRCRAFT_DELAY);,SELECT ORIGIN_AIRPORT_ID FROM Airlines ORDER BY LATE_AIRCRAFT_DELAY DESC LIMIT 1
airline,How many flights depart to Hartsfield-Jackson Atlanta International from Chicago O'Hare International?,"depart to refers to DEST; Hartsfield-Jackson Atlanta International refers to Description = 'Atlanta, GA: Hartsfield-Jackson Atlanta International'; depart from refers to ORIGIN; Chicago O'Hare International refes to Description = 'Chicago, IL: Chicago O'Hare International';","SELECT COUNT(FL_DATE) FROM Airlines WHERE ORIGIN = ( SELECT T2.ORIGIN FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T1.Description = 'Chicago, IL: Chicago O''Hare International' ) AND DEST = ( SELECT T4.DEST FROM Airports AS T3 INNER JOIN Airlines AS T4 ON T3.Code = T4.DEST WHERE T3.Description = 'Atlanta, GA: Hartsfield-Jackson Atlanta International' )"
airline,How many planes does Southwest Airlines Co. have?,planes refers to TAIL_NUM; Southwest Airlines Co. refers to Description = 'Southwest Airlines Co.: WN';,SELECT COUNT(T3.TAIL_NUM) FROM ( SELECT T1.TAIL_NUM FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T2.Description = 'Southwest Airlines Co.: WN' GROUP BY T1.TAIL_NUM ) T3
airline,"On August 2018, which day had the highest number of cancelled flights due to the most serious reasons in Dallas/Fort Worth International?","On August 2018 refers to FL_DATE like '2018/8%'; day with the highest number of cancelled flights refers to MAX(COUNT(FL_DATE WHERE CANCELLED = 1)); cancelled due to the most serious reasons refers to CANCELLATION_CODE = 'A'; in Dallas/Fort Worth International refers to Description = 'Dallas/Fort Worth, TX: Dallas/Fort Worth International';","SELECT T2.FL_DATE FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T2.FL_DATE LIKE '2018/8%' AND T1.Description = 'Dallas/Fort Worth, TX: Dallas/Fort Worth International' AND T2.ORIGIN = 'DFW' AND T2.CANCELLED = 1 AND T2.CANCELLATION_CODE = 'A' GROUP BY T2.FL_DATE ORDER BY COUNT(T2.FL_DATE) DESC LIMIT 1"
airline,List the tail numbers of all the aircraft that arrived on time at Meadows Field airport in August of 2018?,"tail number refers to TAIL_NUM; arrived on time refers to ARR_DELAY < = 0; Meadows Field airport refers to Description = 'Bakersfield, CA: Meadows Field'; in August of 2018 refers to FL_DATE like '2018/8%';","SELECT T2.TAIL_NUM FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST WHERE T2.FL_DATE LIKE '2018/8%' AND T1.Description = 'Bakersfield, CA: Meadows Field' AND T2.DEST = 'BFL' AND T2.ARR_DELAY <= 0 GROUP BY T2.TAIL_NUM"
airline,"Among the airports whose destination is Logan International, what is the airline id of the carrier operator with the highest delay in minutes due to security?","destination refers to DEST; Logan International refers to Description = 'Boston, MA: Logan International'; airline id of the carrier operator refers to OP_CARRIER_AIRLINE_ID; highest delay in minutes due to security refers to MAX(SECURITY_DELAY);","SELECT T2.OP_CARRIER_AIRLINE_ID FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST WHERE T1.Description = 'Boston, MA: Logan International' AND T2.DEST = 'BOS' ORDER BY T2.SECURITY_DELAY DESC LIMIT 1"
airline,What are the names of the top 5 airlines with the highest number of aircraft?,names of the airlines refers to Description; highest number of aircraft refers to MAX(COUNT(TAIL_NUM));,SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code GROUP BY T2.Description ORDER BY T1.TAIL_NUM DESC LIMIT 5
airline,What is the name of the airline with the highest number of non-cancelled flights?,names of the airlines refers to Description; highest number of non-cancelled flights refers to MAX(COUNT(CANCELLED = 0));,SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.CANCELLED = 0 GROUP BY T2.Description ORDER BY COUNT(T1.CANCELLED) DESC LIMIT 1
airline,Give the name of the airline to which tail number N202NN belongs to.,name of the airline refers to Description; tail number refers to TAIL_NUM; TAIL_NUM = 'N202NN';,SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.TAIL_NUM = 'N202NN' GROUP BY T2.Description
airline,What is the name of the airline that flew the most flights to Chicago Midway International?,"name of the airline refers to Description; flights to refers to DEST; Chicago Midway International refers to Description = 'Chicago, IL: Chicago Midway International'; most flights to Chicago Midway International refers to MAX(COUNT(DEST WHERE Description = 'Chicago, IL: Chicago Midway International'));","SELECT T3.Description FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T1.Description = 'Chicago, IL: Chicago Midway International' AND T2.DEST = 'MDW' GROUP BY T3.Description ORDER BY COUNT(T3.Description) DESC LIMIT 1"
airline,What is the tail number of a Compass Airline's plane that flew the most number of flights from LAX to ABQ?,tail number refers to TAIL_NUM; Compass Airline refers to Description = 'Compass Airlines: CP'; flew the most number of lights from LAX TO ABQ refers to MAX(COUNT(OP_CARRIER_AIRLINE_ID WHERE ORIGIN = 'LAX' and DEST = 'ABQ')); from LAX refers to ORIGIN = 'LAX'; to ABQ refers to DEST = 'ABQ';,SELECT T2.OP_CARRIER_AIRLINE_ID FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description = 'Compass Airlines: CP' AND T2.ORIGIN = 'LAX' AND T2.DEST = 'ABQ' GROUP BY T2.OP_CARRIER_AIRLINE_ID ORDER BY COUNT(T2.OP_CARRIER_AIRLINE_ID) DESC LIMIT 1
airline,Which airport did Republic Airline fly the most from?,Republic Airline refers to Description = 'Republic Airline: YX'; fly the most from refers to MAX(COUNT(ORIGIN));,SELECT T2.DEST FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description = 'Republic Airline: YX' GROUP BY T2.DEST ORDER BY COUNT(T2.DEST) DESC LIMIT 1
airline,Which airline does the aircraft with the fastest flight belong to?,"fastest flight refers to MIN(SUBTRACT(ACTUAL_ELAPSED_TIME, CRS_ELAPSED_TIME));",SELECT T1.OP_CARRIER_AIRLINE_ID FROM Airlines AS T1 INNER JOIN Airports AS T2 ON T1.ORIGIN = T2.Code WHERE T1.ACTUAL_ELAPSED_TIME IS NOT NULL AND T1.CRS_ELAPSED_TIME IS NOT NULL ORDER BY T1.ACTUAL_ELAPSED_TIME - T1.CRS_ELAPSED_TIME ASC LIMIT 1
airline,How many hours in total did all of the Delta Air Lines aircraft were delayed due to a late aircraft in August of 2018? Identify the plane number of the aircraft with the highest delayed hours.,"hours in total = DIVIDE(SUM(LATE_AIRCRAFT_DELAY), 60); Delta Air Lines refers to Description = 'Delta Air Lines Inc.: DL'; delayed due to a late aircraft refers to LATE_AIRCRAFT_DELAY; in August of 2018 refers to FL_DATE like '2018/8/%'; plane number refers to TAIL_NUM; highest delayed hours refers to MAX(DIVIDE(SUM(LATE_AIRCRAFT_DELAY),60));","SELECT T1.TAIL_NUM, SUM(CAST(T1.LATE_AIRCRAFT_DELAY AS REAL) / 60) AS delay FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T2.Code = T1.OP_CARRIER_AIRLINE_ID WHERE T1.FL_DATE LIKE '2018/8/%' AND T2.Description = 'Delta Air Lines Inc.: DL' ORDER BY delay DESC LIMIT 1"
airline,Please list any three airports with their codes.,,"SELECT Code, Description FROM Airports LIMIT 3"
airline,What is the code of Mississippi Valley Airlines?,Mississippi Valley Airlines refers to Description like 'Mississippi Valley Airlines%';,SELECT Code FROM `Air Carriers` WHERE Description LIKE 'Mississippi Valley Airlines%'
airline,What is the scheduled local departure time and the actual departure time of the flight from Philadelphia to Harrisburg with the plane's tail number N627AE on the 13th of August 2018?,scheduled local departure time refers to CRS_DEP_TIME; actual departure time refers to DEP_TIME; from Philadelphia refers to ORIGIN = 'PHL'; to Harrisburg refers to DEST = 'MDT'; tail number refers to TAIL_NUM; TAIL_NUM = 'N627AE'; on the 13th of August 2018 refers to FL_DATE = '2018/8/13';,"SELECT CRS_DEP_TIME, DEP_TIME FROM Airlines WHERE ORIGIN = 'PHL' AND DEST = 'MDT' AND TAIL_NUM = 'N627AE' AND FL_DATE = '2018/8/13'"
airline,"How many flights on the 1st of August 2018 were coming from Allentown, Pennsylvania?","1st of August 2018 refers to FL_DATE = '2018/8/1'; coming from Allentown, Pennsylvania refers to ORIGIN = 'ABE';",SELECT COUNT(*) FROM Airlines WHERE FL_DATE = '2018/8/1' AND ORIGIN = 'ABE'
airline,What is the only flight destination for flights from Albany?,flight destination refers to DEST; from Albany refers to ORIGIN = 'ABY';,SELECT DEST FROM Airlines WHERE ORIGIN = 'ABY' GROUP BY DEST
airline,How many flights from Dallas to Santa Ana departed on time?,from Dallas refers to ORIGIN = 'DFW'; to Santa Ana refers to DEST = 'SNA'; departed on time refers to DEP_DELAY = 0;,SELECT COUNT(*) FROM Airlines WHERE DEST = 'SNA' AND ORIGIN = 'DFW' AND DEP_DELAY = 0
airline,How many flights from Charlotte Douglas International Airport to Austin - Bergstrom International Airport experienced serious reasons that cause flight cancellation?,"from refers to ORIGIN; Charlotte Douglas International Airport refers to Description = 'Charlotte, NC: Charlotte Douglas International'; to refers to DEST; Austin - Bergstrom International Airport refers to Description = 'Austin, TX: Austin - Bergstrom International'; serious reasons refers to CANCELLATION_CODE = 'A';","SELECT COUNT(*) FROM Airlines AS T1 INNER JOIN Airports AS T2 ON T1.ORIGIN = T2.Code WHERE T1.ORIGIN = 'CLT' AND T1.DEST = 'AUS' AND T2.Description = 'Charlotte, NC: Charlotte Douglas International' AND T1.CANCELLATION_CODE = 'A'"
airline,Which flight carrier operator has the most cancelled flights?,flight carrier operator refers to OP_CARRIER_AIRLINE_ID; most cancelled flights refers to MAX(COUNT(CANCELLED = 1));,SELECT T1.Description FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID ORDER BY T2.CANCELLED DESC LIMIT 1
airline,What is the actual departure time of JetBlue Airways with the plane's tail number N903JB to Fort Lauderdale-Hollywood International Airport on the 20th of August 2018?,actual departure time refers to DEP_TIME; JetBlue Airways refers to Description like '%JetBlue Airways%'; tail number refers to TAIL_NUM; TAIL_NUM = 'N903JB'; to refers to DEST; Fort Lauderdale-Hollywood International Airport refers to Description like '%Fort Lauderdale-Hollywood%'; on the 20th of August 2018 refers to FL_DATE = '2018/8/20';,SELECT T1.DEP_TIME FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code INNER JOIN Airports AS T3 ON T1.DEST = T3.Code WHERE T1.FL_DATE = '2018/8/20' AND T1.TAIL_NUM = 'N903JB' AND T2.Description LIKE '%JetBlue Airways%' AND T3.Description LIKE '%Fort Lauderdale-Hollywood%'
airline,Which flight carrier operator flies from Atlantic City to Fort Lauderdale?,flight carrier operator refers to OP_CARRIER_AIRLINE_ID; from Atlantic City refers to ORIGIN = 'ACY'; to Fort Lauderdale refers to DEST = 'FLL';,SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.ORIGIN = 'ACY' AND T1.DEST = 'FLL' GROUP BY T2.Description
airline,What is the airport description of the airport code A11?,,SELECT Description FROM Airports WHERE Code = 'A11'
airline,What is the total number of flights that have Oklahoma as their origin?,Oklahoma as origin refers to Origin = 'OKC';,SELECT COUNT(*) AS num FROM Airlines WHERE Origin = 'OKC'
airline,How many airports have a code starting with the letter C?,code starting with the letter C refers to Code like 'C%';,SELECT COUNT(*) FROM Airports WHERE Code LIKE 'C%'
airline,Provide the destinations of flight number 1596.,destination refers to DEST; flight number refers to OP_CARRIER_FL_NUM; OP_CARRIER_FL_NUM = 1596;,SELECT DEST FROM Airlines WHERE OP_CARRIER_FL_NUM = 1596
airline,List the description of the airports that have code that ends with number 3?,code that ends with number 3 refers to Code like '%3';,SELECT Description FROM Airports WHERE Code LIKE '%3'
airline,"Give the code of the airport described as Driftwood Bay, AK: Driftwood Bay Airport.","Driftwood Bay, AK: Driftwood Bay Airport refers to Description = 'Driftwood Bay, AK: Driftwood Bay Airport';","SELECT Code FROM Airports WHERE Description = 'Driftwood Bay, AK: Driftwood Bay Airport'"
airline,How many cancelled flights are there?,cancelled flights refers to CANCELLED = 1;,SELECT COUNT(*) FROM Airlines WHERE CANCELLED = 1
airline,"List the tail number of flights that flew on August 17, 2018.","tail number refers to TAIL_NUM; on August 17, 2018 refers to FL_DATE = '2018/8/17';",SELECT TAIL_NUM FROM Airlines WHERE FL_DATE = '2018/8/17' GROUP BY TAIL_NUM
airline,Provide the origin of the flight that has the shortest actual elapsed time.,shortest actual elapsed time refers to MIN(ACTUAL_ELAPSED_TIME);,SELECT ORIGIN FROM Airlines ORDER BY ACTUAL_ELAPSED_TIME ASC LIMIT 1
airline,"Provide the date and tail number of flight with air carrier ""Ross Aviation Inc.: GWE"".",date of flight refers to FL_DATE; tail number of flight refers to TAIL_NUM; Ross Aviation Inc.: GWE refers to Description = 'Ross Aviation Inc.: GWE';,"SELECT T1.FL_DATE, T1.TAIL_NUM FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T2.Description = 'Ross Aviation Inc.: GWE'"
airline,List the air carrier description and code of the flight with the shortest arrival time.,shortest arrival time refers to MIN(ARR_TIME);,"SELECT T1.Description, T1.Code FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID ORDER BY T2.ARR_TIME ASC LIMIT 1"
airline,How many flights of air carrier called JetBlue Airways: B6 have 0 new arrival delay?,JetBlue Airways refers to Description = '%JetBlue Airway%'; 0 new arrival delay refers to ARR_DELAY_NEW = 0;,SELECT COUNT(*) FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description LIKE '%JetBlue Airways: B6%' AND T2.ARR_DELAY_NEW = 0
airline,Provide the air carrier description of all flights arriving at Miami.,arriving at Miami refers to DEST = 'MIA';,SELECT T1.Description FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T2.DEST = 'MIA'
airline,What is the air carrier's description of the cancelled flights?,cancelled flights refers to CANCELLED = 1;,SELECT T1.Description FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T2.CANCELLED = 1 GROUP BY T1.Description
airline,Give the actual elapsed time of the flights with air carrier named Semo Aviation Inc.: SEM.,actual elapsed time refers to ACTUAL_ELAPSED_TIME; Semo Aviation Inc.: SEM. Refers to Description = 'Semo Aviation Inc.: SEM';,SELECT T2.ACTUAL_ELAPSED_TIME FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description = 'Semo Aviation Inc.: SEM'
airline,"Among the flights with air carrier described as Asap Air Inc.: ASP, what is the tail number of the flight with the longest departure delay?",Asap Air Inc.: ASP refers to Description = 'Asap Air Inc.: ASP'; tail number refers to TAIL_NUM; longest departure delay refers to MAX(DEP_DELAY);,SELECT T2.TAIL_NUM FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description = 'Asap Air Inc.: ASP' ORDER BY T2.DEP_DELAY DESC LIMIT 1
airline,List the air carrier's description of the flights with 0 departure delay.,0 departure delay refers to DEP_DELAY = 0;,SELECT T1.Description FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T2.DEP_DELAY = 0 GROUP BY T1.Description
airline,Provide the air carrier description of the flight with the highest actual elapsed time.,highest actual elapsed time refers to MAX(ACTUAL_ELAPSED_TIME);,SELECT T1.Description FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID ORDER BY T2.ACTUAL_ELAPSED_TIME DESC LIMIT 1
airline,"What are the destinations of the flights with air carrier description ""Southeast Alaska Airlines: WEB""?",destinations refers to DEST; Southeast Alaska Airlines: WEB refers to Description = 'Southeast Alaska Airlines: WEB';,SELECT T2.DEST FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description = 'Southeast Alaska Airlines: WEB'
airline,"From August 10 to August 20, 2018, how many cancelled flights of air carrier named Spirit Air Lines: NK are there?","From August 10 to August 20, 2018 refers to FL_DATE BETWEEN '2018/8/10' AND '2018/8/20'; cancelled flights refers to CANCELLED = 1; Trans Southern Airways: 'Spirit Air Lines: NK' refers to Description = 'Spirit Air Lines: NK';",SELECT COUNT(*) FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description = 'Spirit Air Lines: NK' AND T2.CANCELLED = 0 AND T2.FL_DATE BETWEEN '2018/8/10' AND '2018/8/20'
airline,"What is the total number of flights that flew on August 2, 2018 with air carrier described as Horizon Air?","on August 2, 2018 refers to FL_DATE = '2018/8/2'; Horizon Air refers to Description which includs 'Horizon Air';",SELECT COUNT(*) FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description LIKE '%Horizon Air%' AND T2.FL_DATE = '2018/8/2'
airline,What is the tail number of the flight with air carrier named Iscargo Hf: ICQ and arrival time of 1000 and below?,tail number refers to TAIL_NUM; Iscargo Hf: ICQ refers to Description = 'Iscargo Hf: ICQ'; arrival time of 1000 and below refers to ARR_TIME < = 1000;,SELECT T2.TAIL_NUM FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T2.ARR_TIME <= 1000 AND T1.Description = 'Iscargo Hf: ICQ'
airline,List the flight date of flights with air carrier described as Profit Airlines Inc.: XBH which have an actual elapsed time below 100.,flight date refers to FL_DATE; Profit Airlines Inc.: XBH refers to Description = 'Profit Airlines Inc.: XBH'; actual elapsed time below 100 refers to ACTUAL_ELAPSED_TIME < 100;,SELECT T2.FL_DATE FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T2.ACTUAL_ELAPSED_TIME < 100 AND T1.Description = 'Profit Airlines Inc.: XBH'
airline,"Among the flights with air carrier named Republic Airline, how many of the flights have departure delay of 30 minutes and above?",Republic Airline refers to Description which contains 'Republic Airline'; departure delay of 30 minutes and above refers to DEP_DELAY > 30;,SELECT COUNT(*) FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description LIKE '%Republic Airline%' AND T2.DEP_DELAY > 30
airline,"What are the air carriers of the flights that flew on August 25, 2018 that have departure delay of -5?","on August 25, 2018 refers to FL_DATE = '2018/8/25'; departure delay of -5 refers to DEP_DELAY = -5;",SELECT T1.Description FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T2.FL_DATE = '2018/8/25' GROUP BY T1.Description
airline,Provide the air carrier description of the flight with a tail number N922US from Phoenix.,tail number refers to TAIL_NUM; TAIL_NUM = 'N922US'; from Phoenix refers to ORIGIN = 'PHX';,SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T2.Code = T1.OP_CARRIER_AIRLINE_ID WHERE T1.TAIL_NUM = 'N922US' AND T1.ORIGIN = 'PHX' GROUP BY T2.Description
airline,Give the air carrier description of the flights that have an earlier arrival and departure.,earlier arrival and departure refers to ARR_DELAY < 0 AND DEP_DELAY < 0;,SELECT T1.Description FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T2.ARR_DELAY < 0 AND T2.DEP_DELAY < 0 GROUP BY T1.Description
airline,"Among the flights with air carrier ""Southwest Airlines Co.: WN"", provide the tail number of flights with an actual elapsed time lower than the 80% of the average actual elapsed time of listed flights.","Southwest Airlines Co.: WN refers to Description = 'Southwest Airlines Co.: WN'; tail number refers to TAIL_NUM; actual elapsed time lower than the 80% of the average actual elapsed time refers to ACTUAL_ELAPSED_TIME < (MULTIPLY AVG(ACTUAL_ELAPSED_TIME), 0.8);",SELECT T2.TAIL_NUM FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description = 'Southwest Airlines Co.: WN' AND T2.ACTUAL_ELAPSED_TIME < ( SELECT AVG(ACTUAL_ELAPSED_TIME) * 0.8 FROM Airlines )
airline,List the air carrier's description with arrival time lower than the 40% of the average arrival time of flights that flew to Phoenix.,"arrival time lower than the 40% of the average arrival time refers to ARR_TIME < MULTIPLY(AVG(ARR_TIME), 0.4); flew to Phoenix refers to DEST = 'PHX';",SELECT T1.Description FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T2.DEST = 'PHX' AND T2.ARR_TIME < ( SELECT AVG(ARR_TIME) * 0.4 FROM Airlines ) GROUP BY T1.Description
airline,"Among the flights of the air carrier described as American Airlines, what is the percentage of the flights with earlier departure?","American Airlines can be found in Description which contains 'American Airlines'; percentage = MULTIPLY(DIVIDE(SUM(DEP_DELAY < 0), COUNT(DEP_DELAY)), 1.0); earlier departure refers to DEP_DELAY < 0;",SELECT CAST(SUM(CASE WHEN T2.DEP_DELAY < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description LIKE '%American Airlines%'
books,"Among the books published by publisher ID 1929, how many of them have over 500 pages?",books have over 500 pages refers to num_pages > 500,SELECT COUNT(*) FROM book WHERE publisher_id = 1929 AND num_pages > 500
books,What is the publication date of the book with the most pages?,book with the most pages refers to Max(num_pages),SELECT publication_date FROM book ORDER BY num_pages DESC LIMIT 1
books,"What is the name of the publisher of the book ""The Illuminati""?","""The Illuminati"" is the title of the book; name of publisher refers to publisher_name",SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.title = 'The Illuminati'
books,"How many books were published by publisher ""Thomas Nelson""?","""Thomas Nelson"" is the publisher_name",SELECT COUNT(*) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Thomas Nelson'
books,What is the name of the publisher that has published the most number of books?,name of publisher refers to publisher_name; publisher published the most number of books refers to Max(Count(book_id)),SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id GROUP BY T2.publisher_name ORDER BY COUNT(T1.book_id) DESC LIMIT 1
books,"Please give the title of the oldest book published by publisher ""Thomas Nelson"".","""Thomas Nelson"" is the publisher_name; oldest book refers to Min(publication_date)",SELECT T1.title FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Thomas Nelson' ORDER BY T1.publication_date ASC LIMIT 1
books,"Among the books published by publisher ""Thomas Nelson"", how many of them have over 300 pages?","""Thomas Nelson"" is the publisher_name; books with over 300 pages refers to num_pages > 300",SELECT COUNT(*) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Thomas Nelson' AND T1.num_pages > 300
books,What is the name of the publisher of the book with the most pages?,book with the most pages refers to Max(num_pages); name of publisher refers to publisher_name,SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id ORDER BY T1.num_pages DESC LIMIT 1
books,How many books are in English?,books in English refers to language_name = 'English',SELECT COUNT(*) FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T2.language_name = 'English'
books,Please list the titles of all the books in British English.,"""British English"" is the language_name of the book",SELECT T1.title FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T2.language_name = 'British English'
books,"What is the cheapest order price of the book ""The Little House""?","""The Little House"" is the title of book; cheapest order price refers to Min(price)",SELECT MIN(T2.price) FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T1.title = 'The Little House'
books,Please list the titles of all the books that Lucas Wyldbore has ordered.,,SELECT T1.title FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T4.first_name = 'Lucas' AND T4.last_name = 'Wyldbore'
books,"Among the books ordered by Lucas Wyldbore, how many of them are over 300 pages?",books have over 300 pages refers to num_pages > 300,SELECT COUNT(*) FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T4.first_name = 'Lucas' AND T4.last_name = 'Wyldbore' AND T1.num_pages > 300
books,What is the total price of all the books ordered by Lucas Wyldbore?,total price refers to Sum(price),SELECT SUM(T1.price) FROM order_line AS T1 INNER JOIN cust_order AS T2 ON T2.order_id = T1.order_id INNER JOIN customer AS T3 ON T3.customer_id = T2.customer_id WHERE T3.first_name = 'Lucas' AND T3.last_name = 'Wyldbore'
books,How much money on average does Lucas Wyldbore spend on book orders?,average spend on book orders = AVG (price),SELECT SUM(T1.price) / COUNT(*) FROM order_line AS T1 INNER JOIN cust_order AS T2 ON T2.order_id = T1.order_id INNER JOIN customer AS T3 ON T3.customer_id = T2.customer_id WHERE T3.first_name = 'Lucas' AND T3.last_name = 'Wyldbore'
books,"Among the books ordered by Lucas Wyldbore, what is the percentage of those books over $13?","books over $13 refers to price > 13; percentage = Divide (Sum (order_id where price > 13), Count (order_id)) * 100",SELECT CAST(SUM(CASE WHEN T1.price > 13 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM order_line AS T1 INNER JOIN cust_order AS T2 ON T2.order_id = T1.order_id INNER JOIN customer AS T3 ON T3.customer_id = T2.customer_id WHERE T3.first_name = 'Lucas' AND T3.last_name = 'Wyldbore'
books,Which city does the address id 547 belong to?,,SELECT city FROM address WHERE address_id = 547
books,How many orders has Cordy Dumbarton made?,,SELECT COUNT(*) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'Cordy' AND T1.last_name = 'Dumbarton'
books,List the title of the earliest published Japanese book.,Japanese book refers to language_name = 'Japanese'; earliest published refers to Min(publication_date),SELECT T1.title FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T2.language_name = 'Japanese' ORDER BY T1.publication_date ASC LIMIT 1
books,"For the publisher which published the most books, show its name.",published the most books refers to Max(Count(book_id)); publisher refers to publisher_name,SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id GROUP BY T2.publisher_name ORDER BY COUNT(T2.publisher_id) DESC LIMIT 1
books,How many books were published by Kensington?,"""Kensington"" is the publisher_name;",SELECT COUNT(T1.book_id) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Kensington'
books,Which language was book id 1405 written in?,language written in refers to language_name;,SELECT T2.language_name FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T1.book_id = 1405
books,Which customer has made the most orders? Show his/her full name.,"most order refers to Max(Count(order_id)); customer refers to first_name, last_name","SELECT T1.first_name, T1.last_name FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.first_name, T1.last_name ORDER BY COUNT(*) DESC LIMIT 1"
books,Name the book title of the bestseller.,book title refers to title; best sellers refers to title where Max(count(order_id)),SELECT T1.title FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id GROUP BY T1.title ORDER BY COUNT(T1.title) DESC LIMIT 1
books,How many books did David Foster Wallace write?,"""David Foster Wallace"" is the author_name;",SELECT COUNT(T1.title) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'David Foster Wallace'
books,"How many orders does the book ""O Xará"" have?","""O Xará"" is the title of the book",SELECT COUNT(*) FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T1.title = 'O Xará'
books,Which country does Malina Johnson live in?,country refers to country_name,SELECT T4.country_name FROM customer AS T1 INNER JOIN customer_address AS T2 ON T1.customer_id = T2.customer_id INNER JOIN address AS T3 ON T3.address_id = T2.address_id INNER JOIN country AS T4 ON T4.country_id = T3.country_id WHERE T1.first_name = 'Malina' AND T1.last_name = 'Johnson' AND T2.status_id = 2
books,Give the number of Ukrainian addresses in the database.,Ukrainian address refers to country_name = 'Ukraine',SELECT COUNT(*) FROM country AS T1 INNER JOIN address AS T2 ON T1.country_id = T2.country_id WHERE T1.country_name = 'Ukraine'
books,Which country does Žirovnica city belong to?,"""Žirovnica"" is the city; country refers to country_name",SELECT T1.country_name FROM country AS T1 INNER JOIN address AS T2 ON T1.country_id = T2.country_id WHERE T2.city = 'Žirovnica'
books,Calculate the percentage of the International shipping orders on 2022/11/10.,"International shipping order refers to method_name = 'International'; orders on 2022/11/10 refers to order_date LIKE '2022-11-10%'; percentage = Divide (Sum(order_id  where method_name = 'International'), Count(order_id)) * 100",SELECT CAST(SUM(CASE WHEN T1.method_name = 'International' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM shipping_method AS T1 INNER JOIN cust_order AS T2 ON T1.method_id = T2.shipping_method_id WHERE T2.order_date LIKE '2022-11-10%'
books,What is the average number of pages of David Coward's books?,"number of pages refers to num_pages; average = Divide (Sum(num_pages), Count(book_id))",SELECT AVG(T1.num_pages) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'David Coward'
books,What is the cost of the slowest and least expensive shipping method?,slowest and least expesive method refers to shipping_method = 'Standard',SELECT method_name FROM shipping_method ORDER BY cost ASC LIMIT 1
books,What is the title of the first book that was published in 1900?,published in 1900 refers to publication_date LIKE '1900%'; first book refers to Min(publication_date),"SELECT title FROM book WHERE STRFTIME('%Y', publication_date) = '1900' ORDER BY publication_date LIMIT 1"
books,"What is the full name of the customer who owns the ""aalleburtonkc@yellowbook.com"" e-mail address?","""aalleburtonkc@yellowbook.com"" is the email of customer; full name refers to first_name, last_name","SELECT first_name, last_name FROM customer WHERE email = 'aalleburtonkc@yellowbook.com'"
books,How many orders in 2022 have Iran as their destinations?,Iran as their destination refers to country_name = 'Iran'; orders in 2022 refers to order_date LIKE '2022%',"SELECT COUNT(*) FROM country AS T1 INNER JOIN address AS T2 ON T1.country_id = T2.country_id INNER JOIN cust_order AS T3 ON T3.dest_address_id = T2.address_id WHERE T1.country_name = 'Iran' AND STRFTIME('%Y', T3.order_date) = '2022'"
books,"Among Daisey Lamball's orders, how many were shipped via International shipping?",via international shipping refers to method_name = 'International',SELECT COUNT(*) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id INNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id WHERE T1.first_name = 'Daisey' AND T1.last_name = 'Lamball' AND T3.method_name = 'International'
books,What is the full name of the customer who ordered the most books of all time?,"customer who ordered the most book refers to customer_id where Max(count(order_id)); full name refers to first_name, last_name","SELECT T1.first_name, T1.last_name FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.first_name, T1.last_name ORDER BY COUNT(*) DESC LIMIT 1"
books,How many orders did Antonia Poltun return?,order returned refers to status_value = 'Returned',SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T1.status_value = 'Returned' AND T4.first_name = 'Antonia' AND T4.last_name = 'Poltun'
books,Which shipping method is preferred by customers the most?,shipping method preferred the most by customers refers to method_id where Max(Count(method_id)); which shipping method refers to method_name,SELECT T2.method_name FROM cust_order AS T1 INNER JOIN shipping_method AS T2 ON T1.shipping_method_id = T2.method_id GROUP BY T2.method_name ORDER BY COUNT(T2.method_id) DESC LIMIT 1
books,How many orders were delivered in 2021?,delivered refers to status_value = 'Delivered'; in 2021 refers to status_date LIKE '2021%',"SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Delivered' AND STRFTIME('%Y', T2.status_date) = '2021'"
books,What is the name of the first book written by J.K Rowling?,"""J.K Rowling"" is the author_name; first published book refers to book_id where Min(publication_date); name of the book refers to title",SELECT T1.title FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'J.K. Rowling' ORDER BY T1.publication_date ASC LIMIT 1
books,How many books did A.R. Braunmuller write?,"""A.R. Braunmuller"" is the author_name",SELECT COUNT(*) FROM author AS T1 INNER JOIN book_author AS T2 ON T1.author_id = T2.author_id WHERE T1.author_name = 'A.R. Braunmuller'
books,What is the name of the publisher who published Agatha Christie's first book?,"""Agatha Christie"" is the author_name; name of publisher refers to publisher_name; first book refers to Min(publication_date)",SELECT T4.publisher_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id INNER JOIN publisher AS T4 ON T4.publisher_id = T1.publisher_id WHERE T3.author_name = 'Agatha Christie' ORDER BY T1.publication_date ASC LIMIT 1
books,List all the names of the books written by Danielle Steel.,"""Danielle Steel"" is the author_name; name of books refers to title",SELECT T1.title FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Danielle Steel'
books,How many books by William Shakespeare were published by Penguin Classics?,"""William Shakespeare"" is the author_name; ""Penguin Classics"" is the publisher_name",SELECT COUNT(*) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id INNER JOIN publisher AS T4 ON T4.publisher_id = T1.publisher_id WHERE T3.author_name = 'William Shakespeare' AND T4.publisher_name = 'Penguin Classics'
books,What is the name of the publisher that published the most books?,name of publisher refers to publisher_name; publisher published the most number of books refers to Max(Count(book_id)),SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id GROUP BY T2.publisher_name ORDER BY COUNT(T2.publisher_id) DESC LIMIT 1
books,What is the total shipping cost of all the orders made by Page Holsey? Indicate how many of the said orders were ordered in 2022.,shipping cost refers to cost; ordered in 2022 refers to order_date LIKE '2022%',"SELECT SUM(T3.cost) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id INNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id WHERE T1.first_name = 'Page' AND T1.last_name = 'Holsey' AND STRFTIME('%Y', T2.order_date) = '2022'"
books,What is the name of the publisher with publisher ID 22?,name of publisher refers to publisher_name,SELECT publisher_name FROM publisher WHERE publisher_id = 22
books,How many of the books authored by Al Gore have less than 400 pages?,"""AI Gore"" is the author_name; have less than 400 pages refers to num_pages < 400",SELECT COUNT(*) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Al Gore' AND T1.num_pages < 400
books,"List the author's and publisher's name of the book published on July 10, 1997.","author's name refers to author_name; publisher's name refers to publisher_name; book published on July 10, 1997 refers to publication_date LIKE '1997-07-10'","SELECT T3.author_name, T4.publisher_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id INNER JOIN publisher AS T4 ON T4.publisher_id = T1.publisher_id WHERE T1.publication_date = '1997-07-10'"
books,What is the language of the book with ISBN 23755004321?,"""23755004321"" is the isbn13; language refers to language_name",SELECT T2.language_name FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T1.isbn13 = 23755004321
books,What is the title of the most expensive book?,most expensive book refers to Max(price),SELECT T1.title FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id ORDER BY T2.price DESC LIMIT 1
books,Calculate the total price of books ordered by customer named Lucas Wyldbore.,"total price refers to Sum(price); full name is composed of first name, last name",SELECT SUM(T1.price) FROM order_line AS T1 INNER JOIN cust_order AS T2 ON T2.order_id = T1.order_id INNER JOIN customer AS T3 ON T3.customer_id = T2.customer_id WHERE T3.first_name = 'Lucas' AND T3.last_name = 'Wyldbore'
books,List the ISBN of the book published in Spanish.,"""Spanish"" is the language_name; ISBN refers to isbn13",SELECT T1.isbn13 FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T2.language_name = 'Spanish'
books,"Among the books that cost less than 1 dollar, how many were published by Berkley Trade?",book cost less than 1 dollar refers to price < 1; 'Berkley Trade' is the publisher_name;,SELECT COUNT(*) FROM publisher AS T1 INNER JOIN book AS T2 ON T1.publisher_id = T2.publisher_id INNER JOIN order_line AS T3 ON T3.book_id = T2.book_id WHERE T1.publisher_name = 'Berkley' AND T3.price < 1
books,List the title of the books purchased by the customer named Zia Roizin.,,SELECT T1.title FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T4.first_name = 'Zia' AND T4.last_name = 'Roizin'
books,Who authored the book with greatest number of pages?,greatest number of pages refers to Max(num_pages); who authored refers to author_name,SELECT T3.author_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id ORDER BY T1.num_pages DESC LIMIT 1
books,List the email of customers that bought the book titled Switch on the Night.,"""Switch on the Night"" is the title",SELECT T4.email FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T1.title = 'Switch on the Night'
books,List the author's name of the books published by Abrams.,"""Abrams"" is the publisher_name; author's name refers to author_name",SELECT T3.author_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id INNER JOIN publisher AS T4 ON T4.publisher_id = T1.publisher_id WHERE T4.publisher_name = 'Abrams'
books,What is the publisher name of the book titled The Illuminati?,"""The Illuminati"" is the title of book",SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.title = 'The Illuminati'
books,"In books authored by Abraham Lincoln, what is the percentage of the books published in 1992?","""Abraham Lincoln"" is the author_name; published in 1992 refers to publication_date LIKE '1992%'; percentage = Divide (Sum(publication_date LIKE '1992%'), Count(publication_date)) * 100","SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', T1.publication_date) = '1992' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Abraham Lincoln'"
books,"Among the books published in 2004, list the name of the publisher of books with number of pages greater than 70% of the average number of pages of all books.","published in 2004 refers to publication_date LIKE '2004%'; books with number of pages greater than 70% of the average number of pages refers to num_pages > Multiply(Avg(num_pages), 0.7); name of publisher refers to publisher_name","SELECT T1.title, T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE STRFTIME('%Y', T1.publication_date) = '2004' AND T1.num_pages * 100 > ( SELECT AVG(num_pages) FROM book ) * 70"
books,Provide the contact email of Moss Zarb.,,SELECT email FROM customer WHERE first_name = 'Moss' AND last_name = 'Zarb'
books,Name the streets in Dallas.,"""Dallas"" is the city; streets refers to street_name",SELECT street_name FROM address WHERE city = 'Dallas'
books,Which books were released by Orson Scott Card in 2001?,"""Orson Scott Card"" is the author_name; released in 2001 refers to publication_date LIKE '2001%'; books refers to title","SELECT T1.title FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Orson Scott Card' AND STRFTIME('%Y', T1.publication_date) = '2001'"
books,Count the number of books written by Orson Scott Card.,"""Orson Scott Card"" is the author_name",SELECT COUNT(*) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Orson Scott Card'
books,Provide the authors and titles of the books which have more than 3000 pages.,authors refers to author_name; more than 3000 pages refers to num_pages > 3000,"SELECT T3.author_name, T1.title FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T1.num_pages > 3000"
books,"Who wrote ""The Prophet""?","""The Prophet"" is the title of the book: who wrote refers to author_name",SELECT T3.author_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T1.title = 'The Prophet'
books,How many books were published by Ace Hardcover?,"""Ace Hardcover"" is the publisher_name",SELECT COUNT(*) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Ace Hardcover'
books,Which publisher published Barry Eisler's book?,"""Barry Eisler"" is the author_name; publisher refers to publisher_name",SELECT T4.publisher_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id INNER JOIN publisher AS T4 ON T4.publisher_id = T1.publisher_id WHERE T3.author_name = 'Barry Eisler'
books,How many books were published in Japanese?,published in Japanese refers to language_name = 'Japanese',SELECT COUNT(T2.book_id) FROM book_language AS T1 INNER JOIN book AS T2 ON T1.language_id = T2.language_id WHERE T1.language_name = 'Japanese'
books,Sum the total price of the orders for The Prophet book.,"""The Prophet"" is the title of the book: total price refers to Sum(price)",SELECT SUM(T1.price) FROM order_line AS T1 INNER JOIN book AS T2 ON T1.book_id = T2.book_id WHERE T2.title = 'The Prophet'
books,Provide the number of orders by Daisey Lamball in 2021.,in 2021 refers to order_date LIKE '2021%',"SELECT COUNT(*) FROM cust_order AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Daisey' AND T2.last_name = 'Lamball' AND STRFTIME('%Y', T1.order_date) = '2021'"
books,How many customers are from Australia?,"""Australia"" is the country_name;",SELECT COUNT(*) FROM customer_address AS T1 INNER JOIN address AS T2 ON T2.address_id = T1.address_id INNER JOIN country AS T3 ON T3.country_id = T2.country_id WHERE T3.country_name = 'Australia'
books,How many orders were delivered in December 2019?,delivered refers to status_value = 'Delivered'; in December 2019 refers to status_date LIKE '2019-12%',"SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Delivered' AND STRFTIME('%Y', T2.status_date) = '2019'"
books,Provide the customers' names who ordered the Fantasmas.,"""Fantasmas"" is the title of the book; customer names refers to first_name, last_name","SELECT T4.first_name, T4.last_name FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T1.title = 'Fantasmas'"
books,How many percent of orders in 2020 used international shipping?,"international shipping refers to method_name = 'International'; orders in 2020 refers to order_date = '2020%'; percentage = Divide (Sum(method_name = 'International'), Count(order_id)) * 100","SELECT CAST(SUM(CASE WHEN T2.method_name = 'International' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cust_order AS T1 INNER JOIN shipping_method AS T2 ON T1.shipping_method_id = T2.method_id WHERE STRFTIME('%Y', T1.order_date) = '2020'"
books,"List all the authors named ""George"".",author named 'George' refers to author_name = 'George%',SELECT author_name FROM author WHERE author_name LIKE 'George%'
books,Which year has the most customer orders?,year with the most customer orders refers to Max(count(order_id)),"SELECT strftime('%Y', order_date) FROM cust_order GROUP BY strftime('%Y', order_date) ORDER BY COUNT(strftime('%Y', order_date)) DESC LIMIT 1"
books,What is the average price for the order line?,average price refers to AVG(price),SELECT AVG(price) FROM order_line
books,List all of the books that were published in 1995.,published in 1995 refers to publication_date LIKE '1995%'; ; list of book refers to title,"SELECT title FROM book WHERE STRFTIME('%Y', publication_date) = '1995'"
books,What is the most common domain for the email address among all the customers?,"most common domain for the email refers to Max(Count(SUBSTR(email, CHARINDEX('@', email) + 1, length(email) - charindex('@', email))))","SELECT SUBSTR(email, INSTR(email, '@') + 1, LENGTH(email) - INSTR(email, '@')) AS ym FROM customer GROUP BY SUBSTR(email, INSTR(email, '@') + 1, LENGTH(email) - INSTR(email, '@')) ORDER BY COUNT(*) DESC LIMIT 1"
books,"How many publishers have the word ""book"" in their name?",publisher have the word 'book' refers to publisher_name LIKE '%book%',SELECT COUNT(*) FROM publisher WHERE publisher_name LIKE '%book%'
books,Which language is the rarest among all the books?,language written in refers to language_name; rarest refers to Min(Count(book_id)),SELECT T2.language_name FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id GROUP BY T2.language_name ORDER BY COUNT(T2.language_name) ASC LIMIT 1
books,"List all the order dates for the customer named ""Adrian Kunzelmann"".",,SELECT T3.order_date FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T4.first_name = 'Adrian' AND T4.last_name = 'Kunzelmann'
books,How many addresses are from the Philippines?,"""Philippines"" is the country_name",SELECT COUNT(T2.country_id) FROM address AS T1 INNER JOIN country AS T2 ON T2.country_id = T1.country_id WHERE T2.country_name = 'Philippines'
books,Who is the author who wrote the most books?,author refers to author_name; who wrote the most book refers to Max(Count(author_id)),SELECT T1.author_name FROM author AS T1 INNER JOIN book_author AS T2 ON T1.author_id = T2.author_id GROUP BY T1.author_name ORDER BY COUNT(T2.author_id) DESC LIMIT 1
books,"What are the books published by ""Harper Collins""?","""Harper Collins"" is the publisher_name; books refers to title",SELECT T1.title FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Harper Collins'
books,How many orders were returned in the year 2020?,returned refers to status_value = 'Returned'; in the year 2020 refers to status_date LIKE '%2020%',"SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Returned' AND STRFTIME('%Y', T2.status_date) = '2020'"
books,What is the second-least common method of shipping?,method of shipping refers to method_name; least method refers to Min(Count(method_id)),"SELECT T2.method_name FROM cust_order AS T1 INNER JOIN shipping_method AS T2 ON T1.shipping_method_id = T2.method_id GROUP BY T2.method_name ORDER BY COUNT(T2.method_id) ASC LIMIT 1, 1"
books,How many of the customer addresses are inactive?,addresses are inactive refers to address_status = 'Inactive',SELECT COUNT(*) FROM customer_address AS T1 INNER JOIN address_status AS T2 ON T1.status_id = T2.status_id WHERE T2.address_status = 'Inactive'
books,What is the book with the most orders?,books refers to title; the most orders refers to Max(Count(order_id)),SELECT T2.title FROM order_line AS T1 INNER JOIN book AS T2 ON T1.book_id = T2.book_id GROUP BY T2.title ORDER BY COUNT(T1.book_id) DESC LIMIT 1
books,What is the address that received the most orders?,"address refers to street_name, city; received the most orders refers to Max(count(dest_address_id))","SELECT T2.street_name, T2.city FROM cust_order AS T1 INNER JOIN address AS T2 ON T1.dest_address_id = T2.address_id GROUP BY T2.street_number, T2.street_name, T2.city ORDER BY COUNT(T1.dest_address_id) DESC LIMIT 1"
books,"How much time does it take to update the status of order ""2398""?","""2398"" is the order_id; time =   Subtract(strftime('%Y', status_date), strftime('%Y', order_date)) AS ""year"" , Subtract(strftime('%m', status_date), strftime('%m', order_date)) AS ""month"", Subtract (strftime('%d', status_date), strftime('%d', order_date)) AS ""day""","SELECT strftime('%J', T2.status_date) - strftime('%J', T1.order_date) FROM cust_order AS T1 INNER JOIN order_history AS T2 ON T1.order_id = T2.order_id WHERE T1.order_id = 2398"
books,Which customer has the most addresses?,"customer refers to first_name, last_name; the most address refers to Max(count(address_id))","SELECT T1.first_name, T1.last_name FROM customer AS T1 INNER JOIN customer_address AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.first_name, T1.last_name ORDER BY COUNT(T2.customer_id) DESC LIMIT 1"
books,What percentage of the total prices of all orders are shipped internationally?,"shipped internationally refers to method_name = 'International'; percentage = Divide (Sum(price where method_name = 'International'), Sum(price)) * 100",SELECT CAST(SUM(CASE WHEN T3.method_name = 'International' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cust_order AS T1 INNER JOIN order_line AS T2 ON T1.order_id = T2.order_id INNER JOIN shipping_method AS T3 ON T3.method_id = T1.shipping_method_id
books,List all the authors who wrote fewer pages than the average.,author refers to author_name; who wrote fewer pages than the average refers to num_pages < AVG(num_pages),SELECT T3.author_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T1.num_pages < ( SELECT AVG(num_pages) FROM book )
books,"Other than zero, what is the lowest price paid by a customer for an order?",other than 0 refers to price ! = 0; lowest price paid refers to Min(price),SELECT MIN(price) FROM order_line WHERE price <> 0
books,How many customers have an address that is located in the city of Villeneuve-la-Garenne?,"""Villeneuve-la-Garenne"" is the city",SELECT COUNT(address_id) FROM address WHERE city = 'Villeneuve-la-Garenne'
books,How many authors are named Adam?,authors named Adam refers to author_name LIKE 'Adam',SELECT COUNT(*) FROM author WHERE author_name LIKE 'Adam%'
books,How many customers use a Yahoo! Mail e-mail address?,Yahoo! Mail e-mail address refers to email LIKE '%@yahoo.com',SELECT COUNT(*) FROM customer WHERE email LIKE '%@yahoo.com'
books,What are the city addresses of the customers located in the United States of America?,"""United States of America"" is the country_name",SELECT DISTINCT T2.city FROM country AS T1 INNER JOIN address AS T2 ON T1.country_id = T2.country_id WHERE T1.country_name = 'United States of America'
books,How many orders did Marcelia Goering place in 2021 that uses the Priority Shipping method?,"in 2021 refers to substr(order_date, 1, 4) = '2021'; priority shipping method refers to method_name = 'Priority'","SELECT COUNT(*) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id INNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id WHERE T1.first_name = 'Marcelia' AND T1.last_name = 'Goering' AND STRFTIME('%Y', T2.order_date) = '2021' AND T3.method_name = 'Priority'"
books,Which books have the most expensive price?,most expensive book refers to Max(price),SELECT T2.title FROM order_line AS T1 INNER JOIN book AS T2 ON T1.book_id = T2.book_id ORDER BY T1.price DESC LIMIT 1
books,"How many customers ordered the book titled ""Anleitung zum Zickigsein""","""Anleitung zum Zickigsein"" is the title of the book",SELECT COUNT(*) FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T1.title = 'Anleitung zum Zickigsein'
books,"What is the most expensive price paid by a customer for the book ""Bite Me If You Can (Argeneau #6)""?","""Bite Me If You Can (Argeneau #6)"" is the title of the book; most expensive price refers to Max(price)",SELECT MAX(T2.price) FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T1.title = 'Bite Me If You Can (Argeneau #6)'
books,How many customers ordered the oldest book?,oldest book refers to Min(publiation_date),SELECT COUNT(*) FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id GROUP BY T1.publication_date ORDER BY T1.publication_date ASC LIMIT 1
books,List all the titles of the Spanish books published by Alfaguara.,"""Spanish"" is the language_name; 'Alfaguara' is the publisher_name",SELECT T2.title FROM book_language AS T1 INNER JOIN book AS T2 ON T2.language_id = T1.language_id INNER JOIN publisher AS T3 ON T3.publisher_id = T2.publisher_id WHERE T1.language_name = 'Spanish' AND T3.publisher_name = 'Alfaguara' GROUP BY T2.title
books,How many customers ordered Stephen King's first book?,"""Stephen King"" is the author_name; first book refers to Min(publication_date)",SELECT COUNT(T1.publication_date) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id INNER JOIN order_line AS T4 ON T4.book_id = T1.book_id WHERE T3.author_name = 'Stephen King' ORDER BY T1.publication_date ASC LIMIT 1
books,What are the languages of the first two published books?,first two published book refers to Min(publication_date); language refers to language_name,SELECT T2.language_name FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id ORDER BY T1.publication_date ASC LIMIT 2
books,"Who published the book ""The Secret Garden""?","""The Secret Garden"" is the title of the book; who published the book refers to publisher_name",SELECT DISTINCT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.title = 'The Secret Garden'
books,"Among the books that were published by Scholastic, how many were written by J.K Rowling?","""J.K Rowling"" is the author_name; 'Scholastic' is the publisher_name",SELECT COUNT(*) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id INNER JOIN book_author AS T3 ON T3.book_id = T1.book_id INNER JOIN author AS T4 ON T4.author_id = T3.author_id WHERE T2.publisher_name = 'Scholastic' AND T4.author_name = 'J.K. Rowling'
books,What are the names of all the publishers who have published at least 30 books?,published at least 30 books refers to Count(book_id) > = 30,SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id GROUP BY T2.publisher_name HAVING COUNT(T2.publisher_name) >= 30
books,Indicate the last number of each street.,"street refers to street_name; last number of each street refers to Substr (street_number, -1)",SELECT street_number FROM address
books,Indicate the complete address of customers located in Lazaro Cardenas.,"complete address refers to street_number, street_name, city, country; ""Lazaro Cardenas"" is the city","SELECT street_number, street_name, city, country_id FROM address WHERE city = 'Lazaro Cardenas'"
books,Indicate the ISBN13 of all the books that have less than 140 pages and more than 135.,ISBN13 refers to isbn13; less than 140 pages and more than 135 refers to num_pages > 135 AND num_pages < 140;,SELECT isbn13 FROM book WHERE num_pages < 140 AND num_pages > 135
books,Indicate the title of the six books with the greatest potential value as collectibles.,greatest potential value refers to Min(publication_date),SELECT title FROM book ORDER BY publication_date ASC LIMIT 6
books,How many books were ordered in the last month of the year 2020?,"ordered in last month of the year 2020 refers to Substr(order_date, 1, 7) = '2020-12'",SELECT COUNT(*) FROM cust_order WHERE order_date LIKE '2020-12%'
books,Indicate the full name of all customers whose last name begins with the letter K.,"full name refers to first_name, last_name; last name begin with the letter 'K' refers to last_name LIKE 'K%'","SELECT first_name, last_name FROM customer WHERE last_name LIKE 'K%'"
books,In which cities are the customers of Costa Rica located?,"""Costa Rica"" is the country_name",SELECT T1.city FROM address AS T1 INNER JOIN country AS T2 ON T2.country_id = T1.country_id WHERE T2.country_name = 'Costa Rica'
books,Which customer addresses are no longer active?,"no longer active refers to address_status = 'Inactive'; customer address refers to street_number, street_name, city",SELECT DISTINCT T1.street_name FROM address AS T1 INNER JOIN customer_address AS T2 ON T1.address_id = T2.address_id INNER JOIN address_status AS T3 ON T3.status_id = T2.status_id WHERE T3.address_status = 'Inactive'
books,What is the full name of the customers who live in Baiyin city?,"full name refers to first_name, last_name; 'Baiyin' is the city","SELECT T3.first_name, T3.last_name FROM address AS T1 INNER JOIN customer_address AS T2 ON T1.address_id = T2.address_id INNER JOIN customer AS T3 ON T3.customer_id = T2.customer_id WHERE T1.city = 'Baiyin'"
books,What is the email of the customers who place their orders with priority method?,priority method refers to method_name = 'Priority',SELECT T1.email FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id INNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id WHERE T3.method_name = 'Priority'
books,On what date did the customers who live at number 460 of their respective streets place their orders?,live at number 460 refers to street_number = '460'; date the customers placed their orders refers to order_date,SELECT T1.order_date FROM cust_order AS T1 INNER JOIN address AS T2 ON T1.dest_address_id = T2.address_id WHERE T2.street_number = 460
books,Identify by their id all the orders that have been cancelled.,have been cancelled refers to status_value = 'cancelled'; id refers to order_id,SELECT T2.order_id FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Cancelled'
books,What is the status of the orders placed on 04/10/2022?,"placed on 04/10/2022 refers to SUBSTR(order_date, 1, 10) = '2022-04-10'; status of order refers to status_value",SELECT DISTINCT T1.status_value FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id WHERE T3.order_date LIKE '2022-04-10%'
books,What is the highest price at which a customer bought the book 'The Prophet'?,"""The Prophet"" is the title of the book; highest price refers to Max(price)",SELECT MAX(T2.price) FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T1.title = 'The Prophet'
books,On what dates were books ordered at a price of 16.54?,price of 16.54 refers to price = 16.54; dates the book ordered refers to order_date,SELECT T1.order_date FROM cust_order AS T1 INNER JOIN order_line AS T2 ON T1.order_id = T2.order_id WHERE T2.price = 16.54
books,List the titles of all the books that Peter H. Smith wrote.,"""Peter H.Smit"" is the author_name",SELECT T1.title FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Peter H. Smith'
books,How many books under 300 pages has HarperCollins Publishers published?,"under 300 pages refers to num_pages < 300; 'HarperCollins Publishers"" is the publisher_name",SELECT COUNT(*) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'HarperCollins Publishers' AND T1.num_pages < 300
books,How many books have been published in Japanese?,in Japanese refers to language_name = 'Japanese,SELECT COUNT(*) FROM book_language AS T1 INNER JOIN book AS T2 ON T1.language_id = T2.language_id WHERE T1.language_name = 'Japanese'
books,What is the average number of pages in the books written by Jennifer Crusie?,"""Jennifer Crusie"" is the author_name; average number of pages refers to AVG(num_pages)",SELECT AVG(T1.num_pages) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Jennifer Crusie'
books,What percentage of the orders placed by Kaleena were shipped by the international method?,"shipped by international method refers to method_name = 'International'; percentage = Divide (Sum(method_name = 'International'), Count(method_name)) * 100",SELECT CAST(SUM(CASE WHEN T3.method_name = 'International' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id INNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id WHERE T1.first_name = 'Kaleena'
books,Provide the full name of the customers who have ordered the book The Sorrows of Young Werther.,"full name refers to first_name, last_name; 'The Sorrows of Young Werther' is the title of the book","SELECT T4.first_name, T4.last_name FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T1.title = 'The Sorrows of Young Werther'"
books,List every book that Ursola Purdy has ordered.,book refers to title,SELECT T1.title FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T4.first_name = 'Ursola' AND T4.last_name = 'Purdy'
books,Who is the author of the book with the biggest page count?,"author refers to author_name, biggest page count refers to Max(num_pages)",SELECT T3.author_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id ORDER BY T1.num_pages DESC LIMIT 1
books,How many books written by Akira Watanabe are available on Gravity?,"""Akira Watanabe"" is the author_name",SELECT COUNT(*) FROM author AS T1 INNER JOIN book_author AS T2 ON T1.author_id = T2.author_id WHERE T1.author_name = 'Akira Watanabe'
books,Provide the full address of Ursola Purdy.,"full address refers to street_number, street_name, city, country_name","SELECT T3.street_number, T3.street_name, T3.city FROM customer AS T1 INNER JOIN customer_address AS T2 ON T1.customer_id = T2.customer_id INNER JOIN address AS T3 ON T3.address_id = T2.address_id INNER JOIN country AS T4 ON T4.country_id = T3.country_id WHERE T1.first_name = 'Ursola' AND T1.last_name = 'Purdy'"
books,Who is the author of the book The Mystery in the Rocky Mountains?,author refers to author_name; 'The Mystery in the Rocky Mountains' is the title of the book,SELECT T3.author_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T1.title = 'The Mystery in the Rocky Mountains'
books,Identify the publisher of the book Girls' Night In.,"""Girls' Night In"" is the title of the book; publisher is the publisher_name",SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.title = 'Girls'' Night In'
books,Name the publisher of the oldest book.,publisher refers to publisher_name;  oldest book refers to Min(publication_date),SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id ORDER BY T1.publication_date ASC LIMIT 1
books,Identify the cost difference between Priority and Express shipping methods.,"""Priority"" and ""Express"" are both method_name; cost difference = Subtract (Sum(cost where method_name = 'Express'), Sum(cost where method_name 'Priority'))",SELECT SUM(CASE WHEN method_name = 'Priority' THEN cost ELSE 0 END) - SUM(CASE WHEN method_name = 'Express' THEN cost ELSE 0 END) FROM shipping_method
books,How many orders have been cancelled in 2022?,"cancelled refers to status_value = 'Cancelled'; in 2022 refers to SUBSTR(status_date, 1, 4) = '2022'","SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Cancelled' AND STRFTIME('%Y', T2.status_date) = '2022'"
books,List all the books published by BBC Audiobooks.,"""BBC Audiobooks"" refers to publisher_name; books refers to title",SELECT T1.title FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'BBC Audiobooks'
books,How many books were published in 2017?,"published in 2017 refers to Substr(publication_date,1, 4) = '2017'","SELECT COUNT(*) FROM book WHERE STRFTIME('%Y', publication_date) = '2017'"
books,Provide the International Standard Book Number of the book The Mystery in the Rocky Mountains.,International Standard Book Number refers to isbn13; 'The Mystery in the Rocky Mountains' is the title of the book,SELECT isbn13 FROM book WHERE title = 'The Mystery in the Rocky Mountains'
books,"Among all orders updated in 2022, identify the percentage that has been returned.","order updated in 2022 refers to SUBSTR(status_date, 1, 4) = '2022'; has been returned refers to status_value = 'Returned'; percentage = Divide (Count(status_value = 'Returned'), Count(status_value)) * 100","SELECT CAST(SUM(CASE WHEN T1.status_value = 'Returned' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE STRFTIME('%Y', T2.status_date) = '2022'"
books,"Among all addresses provided by customers, identify the percentage that are not in use anymore.","address not in use refers to address_status = 'Inactive'; percentage = Divide (Count(address_status = 'Inactive'), Count(address_status)) * 100",SELECT CAST(SUM(CASE WHEN T2.address_status = 'Inactive' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM customer_address AS T1 INNER JOIN address_status AS T2 ON T2.status_id = T1.status_id
books,How many pages does 'Seaward' have?,"""Seaward"" is the title of the book; pages refers to num_pages",SELECT num_pages FROM book WHERE title = 'Seaward'
books,Who is the author of First Things First?,"""First Things First"" is the title of the book; author refers to author_name",SELECT T3.author_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T1.title = 'First Things First'
books,List all books authored by Tom Clancy.,"""Tom Clancy"" is the author_name; books refers title",SELECT T1.title FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Tom Clancy'
books,Which book by Hirohiko Araki was published on 6/6/2006?,"""Hirohiko Araki"" is the author_name; on 6/6/2006 refers to publication_date = '2006-06-06'; which book refers to title",SELECT T1.title FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Hirohiko Araki' AND T1.publication_date = '2006-06-06'
books,Who is the publisher of Hitchhiker's Guide To The Galaxy: The Filming of the Douglas Adams classic?,"""Hitchhiker's Guide To The Galaxy: The Filming of the Douglas Adams classic"" is the title of the book; publisher refers to publisher_name",SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.title = 'Hitchhiker''s Guide To The Galaxy: The Filming of the Douglas Adams classic'
books,List all books published by ADV Manga.,"""ADV Manga"" is the publisher_name; books refers to title",SELECT T1.title FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'ADV Manga'
books,"Write the full name of the customers whose address is at 55 Dorton Pass, Huangqiao.","full name refers to first_name, last_name; '55' is the street_number, 'Dorton Pass' is the street_name; 'Huangqiao' is the city","SELECT DISTINCT T1.first_name, T1.last_name FROM customer AS T1 INNER JOIN customer_address AS T2 ON T1.customer_id = T2.customer_id INNER JOIN address AS T3 ON T3.address_id = T2.address_id WHERE T3.street_number = 55 AND T3.street_name = 'Dorton Pass' AND T3.city = 'Huangqiao'"
books,"Which country is 9 Green Ridge Point, Arendal located at?","""9"" is the street_number; 'Green Reidge Point' is the street_name; 'Arendal' is the city",SELECT T2.country_name FROM address AS T1 INNER JOIN country AS T2 ON T2.country_id = T1.country_id WHERE T1.street_number = 9 AND T1.street_name = 'Green Ridge Point' AND T1.city = 'Arendal'
books,List 10 addresses located in Poland.,"""Polan"" is the country_name; address refers to street_number, street_name, city","SELECT T1.street_number, T1.street_name, T1.city FROM address AS T1 INNER JOIN country AS T2 ON T2.country_id = T1.country_id WHERE T2.country_name = 'Poland' LIMIT 10"
books,What is the shipping method ordered by Nicolette Sadler at 6/29/2020 7:40:07 PM?,ordered at 6/29/2020 7:40:07 PM refers to order_date = '2020-06-29 19:40:07'; shipping method refers to method_name,SELECT T3.method_name FROM cust_order AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id INNER JOIN shipping_method AS T3 ON T3.method_id = T1.shipping_method_id WHERE T2.first_name = 'Nicolette' AND T2.last_name = 'Sadler' AND T1.order_date = '2020-06-29 19:40:07'
books,List all books written in Arabic.,"""Arabic"" is the language_name; book refers to title",SELECT T1.title FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T2.language_name = 'Arabic'
books,Which language is 'El plan infinito' written in?,"""El plan infinito"" is the title of the book; language refers to language_name",SELECT T2.language_name FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'El plan infinito'
books,What percentage of books written by Hirohiko make up the number of books published by Viz Media?,"""Hirohiko Araki"" is the author_name; 'Viz Media' is the publisher_name; percentage = Divide (Count(author_name = 'Hirohiko Araki'), Count(book_id)) * 100",SELECT CAST(SUM(CASE WHEN T1.author_name = 'Hirohiko Araki' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM author AS T1 INNER JOIN book_author AS T2 ON T2.author_id = T1.author_id INNER JOIN book AS T3 ON T3.book_id = T2.book_id INNER JOIN publisher AS T4 ON T4.publisher_id = T3.publisher_id WHERE T4.publisher_name = 'VIZ Media'
books,What is the average number of book pages written by Zilpha Keatley Snyder?,"""Zilpha Keatley Snyder"" is the author_name; average number of book pages refers to AVG(num_pages)",SELECT AVG(T3.num_pages) FROM book_author AS T1 INNER JOIN author AS T2 ON T1.author_id = T2.author_id INNER JOIN book AS T3 ON T3.book_id = T1.book_id WHERE T2.author_name = 'Zilpha Keatley Snyder'
books,What is the full name of customer with email ckupis4@tamu.edu?,"""ckupis4@tamu.edu"" is the email of customer; full name refers to first_name, last_name","SELECT first_name, last_name FROM customer WHERE email = 'ckupis4@tamu.edu'"
books,Which book has the most number of pages?,books with the most number of pages refers to Max(num_pages),SELECT title FROM book ORDER BY num_pages DESC LIMIT 1
books,How many books were written by author A.J. Ayer?,"""A.J. Ayer"" is the author_name;",SELECT COUNT(*) FROM book_author AS T1 INNER JOIN author AS T2 ON T1.author_id = T2.author_id WHERE T2.author_name = 'A.J. Ayer'
books,Name the title of books written by author A.J.Ayer.,"""A.J. Ayer"" is the author_name;",SELECT T3.title FROM book_author AS T1 INNER JOIN author AS T2 ON T1.author_id = T2.author_id INNER JOIN book AS T3 ON T3.book_id = T1.book_id WHERE T2.author_name = 'A.J. Ayer'
books,"The book name ""The Season: A Candid Look at Broadway"" was published by which publisher?","""The Season: A Candid Look at Broadway"" is the  title of the book; publisher refers to publisher_name",SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.title = 'The Season: A Candid Look at Broadway'
books,What is the average of English books among all books published by Carole Marsh Mysteries?,"English book refers to language_name = 'English'; 'Carole Marsh Mysteries' is the publisher_name; average = Divide (Count(language_name = 'English'), Count(book_id))",SELECT CAST(SUM(CASE WHEN T1.language_name = 'English' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) FROM book_language AS T1 INNER JOIN book AS T2 ON T1.language_id = T2.language_id INNER JOIN publisher AS T3 ON T3.publisher_id = T2.publisher_id WHERE T3.publisher_name = 'Carole Marsh Mysteries'
books,Name the title of the book with the most number of pages that was published from 1990 to 2000 by publisher Free Press.,"books with the most number of pages refers to Max(num_pages); published from 1990 to 2000 refers to SUBSTR(publication_date, 1, 4) BETWEEN '1990' AND '2000'; 'Free Press' is the publisher_name","SELECT T1.title FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Free Press' AND STRFTIME('%Y', T1.publication_date) BETWEEN '1990' AND '2000' ORDER BY T1.num_pages DESC LIMIT 1"
books,"What is the order price of the book ""The Servant Leader"" in 2003?","""The Servant Leader"" is the title of the book; book in 2003 refers to SUBSTR(publication_date, 1, 4) = '2003'","SELECT T2.price FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T1.title = 'The Servant Leader' AND STRFTIME('%Y', T1.publication_date) = '2003'"
books,What is the current address of customer Kandy?,"current address refers to address_status = 1; address refers to street_number, street_name, city","SELECT T3.street_number, T3.street_name, T3.city FROM customer AS T1 INNER JOIN customer_address AS T2 ON T1.customer_id = T2.customer_id INNER JOIN address AS T3 ON T3.address_id = T2.address_id INNER JOIN address_status AS T4 ON T4.status_id = T2.status_id WHERE T1.first_name = 'Kandy'"
books,How many books were ordered by customer Kandy Adamec?,,SELECT COUNT(*) FROM order_line AS T1 INNER JOIN cust_order AS T2 ON T2.order_id = T1.order_id INNER JOIN customer AS T3 ON T3.customer_id = T2.customer_id WHERE T3.first_name = 'Kandy' AND T3.last_name = 'Adamec'
books,How many orders got returned in 2022?,"orders got returned refers to status_value = 'Returned'; in 2022 refers to SUBSTR(status_date, 1, 4) = '2022'","SELECT COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE T1.status_value = 'Returned' AND STRFTIME('%Y', T2.status_date) = '2022'"
books,"Which country does the customer with the email ""rturbitt2@geocities.jp"" from?","""rturbitt2@geocities.jp"" is the email of customer; country refers to country_name",SELECT T4.country_name FROM customer AS T1 INNER JOIN customer_address AS T2 ON T1.customer_id = T2.customer_id INNER JOIN address AS T3 ON T3.address_id = T2.address_id INNER JOIN country AS T4 ON T4.country_id = T3.country_id WHERE T1.email = 'rturbitT2@geocities.jp'
books,Name the publisher who published the most books.,published the most books refers to Max(Count(book_id)); publisher refers to publisher_name,SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id GROUP BY T2.publisher_name ORDER BY COUNT(T2.publisher_id) DESC LIMIT 1
books,What is the title of the first book that was written by A.J. Ayer?,"""A.J. Ayer"" is the author_name; first book refers to Min(publication_date)",SELECT T1.title FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'A.J. Ayer' ORDER BY T1.publication_date ASC LIMIT 1
books,What is the percentage of books that cost greater than $10 and were ordered by customer Ruthanne Vatini?,"cost greater than $10 refers to price > 10; percentage = Divide (Count(book_id where price >10), Count(book_id)) * 100; full name refers to the composition of first name, lastname",SELECT CAST(SUM(CASE WHEN T1.price > 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM order_line AS T1 INNER JOIN cust_order AS T2 ON T2.order_id = T1.order_id INNER JOIN customer AS T3 ON T3.customer_id = T2.customer_id WHERE T3.first_name = 'Ruthanne' AND T3.last_name = 'Vatini'
books,List the title of books published by AK Press.,"""AK Press"" is the publisher_name",SELECT T1.title FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'AK Press'
books,Who ordered the book with the cheapest price?,"book with cheapest price refers to Min(price); who order means name of customer which refers to first_name, last_name","SELECT T3.first_name, T3.last_name FROM order_line AS T1 INNER JOIN cust_order AS T2 ON T2.order_id = T1.order_id INNER JOIN customer AS T3 ON T3.customer_id = T2.customer_id ORDER BY T1.price ASC LIMIT 1"
books,List down the ISBN of the books purchased by the customer with an email of fsier3e@ihg.com.,"""fsier3e@ihg.com"" is the email of customer; ISBN refers to isbn13",SELECT T1.isbn13 FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T4.email = 'fsier3e@ihg.com'
books,Give the author's name of the books that cost 19 dollars and above.,books cost 19 dollars and above refers to price > = 19,SELECT DISTINCT T3.author_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id INNER JOIN order_line AS T4 ON T4.book_id = T1.book_id WHERE T4.price > 19
books,Provide the publisher name of the book with ISBN 76092025986.,"""76092025986"" is the isbn13",SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.isbn13 = 76092025986
books,"Among the books published by Birlinn in 2008, how many books have pages around 600 to 700?","""Birlinn"" is the publisher_name; books have pages around 600 to 700 refers to num_pages BETWEEN 600 AND 700; in 2008 refers to SUBSTR(publication_date, 1, 4) = '2008'","SELECT COUNT(*) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Birlinn' AND STRFTIME('%Y', T1.publication_date) = '2008' AND T1.num_pages BETWEEN 600 AND 700"
books,What is the price of the book with ISBN 9780763628321?,"""9780763628321"" is the isbn13",SELECT T2.price FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T1.isbn13 = 9780763628321
books,What is the number of pages of the book in the order ID 1167?,number of pages refers to num_pages,SELECT T1.num_pages FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T2.order_id = 1167
books,Provide the title of the books published in British-English.,"""British English"" is the language_name of the book",SELECT DISTINCT T1.title FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T2.language_name = 'British English'
books,How many books were published by Brava in 2006?,"""Brava"" is the publisher_name; in 2006 refers to SUBSTR(publication_date, 1, 4) = '2006'","SELECT COUNT(*) FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T2.publisher_name = 'Brava' AND STRFTIME('%Y', T1.publication_date) = '2006'"
books,Provide the ISBN and price of the book with book ID 7160.,ISBN refers to isbn13;,"SELECT T1.isbn13, T2.price FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T2.book_id = 6503"
books,What is the title of the book in the order ID 931?,,SELECT T1.title FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T2.order_id = 931
books,What is the language of the book titled Zorro?,"""Zorro"" is the title of the book; langauge refers to language_name",SELECT T2.language_name FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'Zorro'
books,Provide the email of the customers that purchased books with a price range of 3 to 5 dollars.,books with a price range of 3 to 5 dollars refers to price BETWEEN 3 AND 5,SELECT DISTINCT T3.email FROM order_line AS T1 INNER JOIN cust_order AS T2 ON T2.order_id = T1.order_id INNER JOIN customer AS T3 ON T3.customer_id = T2.customer_id WHERE T1.price BETWEEN 3 AND 5
books,List the ISBN of the books that cost 7.5 dollars.,ISBN refers to isbn13; books cost 7.5 dollars refers to price = 7.5,SELECT T1.isbn13 FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T2.price = 7.5
books,Give the publisher's name of the books authored by Alan Lee.,"""Alan Lee"" is the author_name; publisher's name refers to publisher_name",SELECT T4.publisher_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id INNER JOIN publisher AS T4 ON T4.publisher_id = T1.publisher_id WHERE T3.author_name = 'Alan Lee' GROUP BY T4.publisher_name
books,What is the sum of the number of pages of the books ordered by Mick Sever?,sum of the number of pages refers to Sum(num_pages),SELECT SUM(T1.num_pages) FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T4.first_name = 'Mick' AND T4.last_name = 'Sever'
books,Write down the author's name of the book most recently published.,author's name refers to author_name; book most recently published refers to Max(publication_date),SELECT T3.author_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id ORDER BY T1.publication_date DESC LIMIT 1
books,"In books published by Ace Book, what is the percentage of English books published?","""Ace Book"" is the publisher_name; English book refers to language_name = 'English'; percentage = Divide (Count(book_id where language_name = 'English'), Count(book_id)) * 100",SELECT CAST(SUM(CASE WHEN T1.language_name = 'English' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM book_language AS T1 INNER JOIN book AS T2 ON T1.language_id = T2.language_id INNER JOIN publisher AS T3 ON T3.publisher_id = T2.publisher_id WHERE T3.publisher_name = 'Ace Book'
books,"Among the books purchased by less than 1 dollar, what is the difference between the number of books with less than 500 pages and books with greater than 500 pages?","book purchased by less than 1 dollar refers to price < 1; books with less than 500 pages refers to num_pages < 500; greater than 500 pages refers to num_pages > 500; Difference = Subtract (Count(book_id where num_pages < 500), Count(book_id where num_pages > 500))",SELECT SUM(CASE WHEN T1.num_pages < 500 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.num_pages > 500 THEN 1 ELSE 0 END) AS dif FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T2.price < 1
books,What are the language and title of the ordered books with price less than 20% of the average price of all ordered books?,"language refers to language_name; books with price less than 20% of the average price refers to price < Multiply (AVG(price), 0.2)","SELECT DISTINCT T3.language_name, T2.title FROM order_line AS T1 INNER JOIN book AS T2 ON T1.book_id = T2.book_id INNER JOIN book_language AS T3 ON T3.language_id = T2.language_id WHERE T1.price * 100 < ( SELECT AVG(price) FROM order_line ) * 20"
food_inspection_2,Please list the full names of all the sanitarians under the supervision of Darlisha Jacobs.,"full name refers to first_name, last_name","SELECT first_name, last_name FROM employee WHERE title = 'Sanitarian' AND supervisor = ( SELECT employee_id FROM employee WHERE first_name = 'Darlisha' AND last_name = 'Jacobs' )"
food_inspection_2,"Please list the full names of the sanitarians who did at least one inspection in May, 2010.","full name refers to first_name, last_name; in May 2010 refers to inspection_date like '2010-05%'; sanitarian refers to title = 'Sanitarian'","SELECT DISTINCT T1.first_name, T1.last_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE strftime('%Y-%m', T2.inspection_date) = '2010-05' AND T1.title = 'Sanitarian'"
food_inspection_2,How many inspections were sanitarian Joshua Rosa responsible for in 2010?,in 2010 refers to inspection_date like '2010%',"SELECT COUNT(T2.inspection_id) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE strftime('%Y', T2.inspection_date) = '2010' AND T1.first_name = 'Joshua' AND T1.last_name = 'Rosa'"
food_inspection_2,Please list the assumed name of all the facilities inspected by Joshua Rosa.,assumed name refers to dba_name,SELECT DISTINCT T3.dba_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN establishment AS T3 ON T2.license_no = T3.license_no WHERE T1.first_name = 'Joshua' AND T1.last_name = 'Rosa'
food_inspection_2,"Among the facilities that have undergone at least one inspection in 2010, how many of them are restaurants or cafeterias?",in 2010 refers to inspection_date like '2010%'; restaurant or cafeteria refers to facility_type = 'Restaurant',"SELECT COUNT(DISTINCT T1.license_no) FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE strftime('%Y', T1.inspection_date) = '2010' AND T2.facility_type = 'Restaurant'"
food_inspection_2,Please list the location coordinates of all the facilities that had an inspection on 2010/5/11.,"location coordinates refers to latitude, longitude; on 2010/5/11 refers to inspection_date = '2010-05-11'","SELECT DISTINCT T2.latitude, T2.longitude FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE T1.inspection_date = '2010-05-11'"
food_inspection_2,"Among the facilities that have undergone at least one inspection in 2010, how many of them are in ward no.42?",in 2010 refers to inspection_date like '2010%'; in ward no.42 refers to ward = 42,"SELECT COUNT(DISTINCT T1.license_no) FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE strftime('%Y', T1.inspection_date) = '2010' AND T2.ward = 42"
food_inspection_2,Please list the full names of all the sanitarians who have inspected the facility Burbank.,"full name refers to first_name, last_name; the facility Burbank refers to dba_name = 'Burbank'","SELECT DISTINCT T1.first_name, T1.last_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN establishment AS T3 ON T2.license_no = T3.license_no WHERE T3.dba_name = 'Burbank' AND T1.title = 'Sanitarian'"
food_inspection_2,Please list the assumed name of all the facilities that failed an inspection in 2010.,assumed name refers to dba_name; failed an inspection refers to results = 'Fail'; in 2010 refers to inspection_date like '2010%',"SELECT DISTINCT T2.dba_name FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE T1.results = 'Fail' AND strftime('%Y', T1.inspection_date) = '2010'"
food_inspection_2,What is the full name of the sanitarian who inspected Amundsen High School on 2010/5/11?,"full name refers to first_name, last_name;  Amundsen High School refers to dba_name = 'AMUNDSEN HIGH SCHOOL'; on 2010/5/11 refers to inspection_date = '2010-05-11'","SELECT T1.first_name, T1.last_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN establishment AS T3 ON T2.license_no = T3.license_no WHERE T2.inspection_date = '2010-05-11' AND T3.dba_name = 'AMUNDSEN HIGH SCHOOL' AND T1.title = 'Sanitarian'"
food_inspection_2,"Among the inspections done by sanitarian Joshua Rosa, how many of them have the result of ""pass""?","have the result of ""pass"" refers to results = 'Pass'",SELECT COUNT(T2.inspection_id) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.results = 'Pass' AND T1.first_name = 'Joshua' AND T1.last_name = 'Rosa'
food_inspection_2,"After Azha Restaurant Inc. passed the inspection on 2010/1/21, when was the follow-up inspection done?",Azha Restaurant Inc. refers to dba_name = 'Azha Restaurant Inc.'; on 2010/1/21 refers to inspection_date = '2010-01-21'; follow-up inspection date refers to followup_to,SELECT T1.followup_to FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE T2.dba_name = 'Azha Restaurant Inc.' AND T1.results = 'Pass' AND T1.inspection_date = '2010-01-21'
food_inspection_2,"Among the facilities that had undergone at least one inspection in 2010, how many of them have the most serious food safety issues?",in 2010 refers to inspection_date like '2010%'; the most serious food safety issues refers to risk_level = 3,"SELECT COUNT(DISTINCT T2.license_no) FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE strftime('%Y', T1.inspection_date) = '2010' AND T2.risk_level = 3"
food_inspection_2,What is the average number of inspections carried out in the year 2010 by a sanitarian whose salary is over 70000?,"in the year 2010 refers to inspection_date like '2010%'; salary is over 70000 refers to salary > 70000; average number = divide(sum(inspection where inspection_date like '2010%'), sum(employee_id where salary > 70000))",SELECT CAST(SUM(CASE WHEN T2.inspection_date LIKE '2010%' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.salary > 70000 THEN 1 ELSE 0 END) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id
food_inspection_2,"What is the point level of ""Refrigeration and metal stem thermometers provided and conspicuous""?","""Refrigeration and metal stem thermometers provided and conspicuous"" refers to Description = 'Refrigeration and metal stem thermometers provided and conspicuous '",SELECT point_level FROM inspection_point WHERE Description = 'Refrigeration and metal stem thermometers provided and conspicuous '
food_inspection_2,Which employee was responsible for inspection no.48224? Give the full name.,"inspection no.48224 refers to inspection_id = '48224'; full name refers to first_name, last_name;","SELECT T2.first_name, T2.last_name FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id WHERE T1.inspection_id = 48224"
food_inspection_2,How many inspections did All Style Buffet Restaurant have?,All Style Buffet refers to dba_name = 'All Style Buffet'; Restaurant refers to facility_type = 'Restaurant',SELECT COUNT(T2.inspection_id) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.facility_type = 'Restaurant' AND T1.dba_name = 'All Style Buffet'
food_inspection_2,When did Wing Hung Chop Suey Restaurant have its first inspection?,Wing Hung Chop Suey Restaurant refers to aka_name = 'WING HUNG CHOP SUEY RESTAURANT'; first inspection refers to min(inspection_date),SELECT MIN(T2.inspection_date) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.aka_name = 'WING HUNG CHOP SUEY RESTAURANT'
food_inspection_2,How many restaurants were inspected on 2015/5/8?,restaurant refers to facility_type = 'Restaurant'; on 2015/5/8 refers to inspection_date = '2015-05-08',SELECT COUNT(T2.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T2.inspection_date = '2015-05-08' AND T1.facility_type = 'Restaurant'
food_inspection_2,"How many ""food maintenance"" related violations did inspection no.1454071 have?","""food maintenance"" related refers to category = 'Food Maintenance'; inspection no.1454071 refers to inspection_id = '1454071'",SELECT COUNT(T2.point_id) FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T2.inspection_id = '1454071' AND T1.category = 'Food Maintenance'
food_inspection_2,State the number of violations did Royal Thai Cuisine has during the 2015/5/8 inspection.,Royal Thai Cuisine refers to dba_name = 'ROYAL THAI CUISINE'; 2015/5/8 refers to inspection_date = '2015-05-08',SELECT COUNT(T3.point_id) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE T2.inspection_date = '2015-05-08' AND T1.dba_name = 'ROYAL THAI CUISINE'
food_inspection_2,"For the grocery store located at ""3635 W DIVERSEY AVE"", how many inspections did it have?","grocery store refers to facility_type = 'Grocery Store'; ""3635 W DIVERSEY AVE"" refers to address = '3635 W DIVERSEY AVE'",SELECT COUNT(T2.inspection_id) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.address = '3635 W DIVERSEY AVE ' AND T1.facility_type = 'Grocery Store'
food_inspection_2,Who is responsible for most of the inspections? Give the full name.,"full name refers to first_name, last_name; most of the inspections refers to max(count(employee_id))","SELECT T.first_name, T.last_name FROM ( SELECT T2.employee_id, T2.first_name, T2.last_name, COUNT(T1.inspection_id) FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id GROUP BY T2.employee_id, T2.first_name, T2.last_name ORDER BY COUNT(T1.inspection_id) DESC LIMIT 1 ) AS T"
food_inspection_2,"How many inspections done by Lisa Tillman ended up with the result of ""Out of Business""?","the result of ""Out of Business"" refers to results = 'Out of Business'",SELECT COUNT(T1.inspection_id) FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id WHERE T2.first_name = 'Lisa' AND T2.last_name = 'Tillman' AND T1.results = 'Out of Business'
food_inspection_2,"For the sanitarian who lives on 5000 N Wolcott Ave, how many establishments did he/she inspect in the May of 2011?",sanitarian refers to title = 'Sanitarian'; 5000 N Wolcott Ave refers to address = '5000 N Wolcott Ave'; in May 2011 refers to inspection_date between '2011-04-30' and '2011-06-01',"SELECT COUNT(T1.inspection_id) FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id WHERE T2.address = '5000 N Wolcott Ave' AND T2.title = 'Sanitarian' AND strftime('%Y-%m', T1.inspection_date) = '2011-05'"
food_inspection_2,Show the phone number of the sanitarian who was responsible for inspection no.634597.,phone number refers to phone; sanitarian refers to title = 'Sanitarian'; inspection no.634597 refers to inspection_id = '634597',SELECT T2.phone FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id WHERE T1.inspection_id = 634597 AND T2.title = 'Sanitarian'
food_inspection_2,State the salary of the employee who did the most inspections.,the most inspections refers to max(count(employee_id)),"SELECT T1.salary FROM employee AS T1 INNER JOIN ( SELECT T.employee_id, COUNT(T.inspection_id) FROM inspection AS T GROUP BY T.employee_id ORDER BY COUNT(T.inspection_id) DESC LIMIT 1 ) AS T2 ON T1.employee_id = T2.employee_id"
food_inspection_2,What is the average number of inspections did risk level 3 taverns have?,"risk level 3 refers to risk_level = '3'; tavern refers to facility_type = 'TAVERN'; average number = divide(count(inspection_id), sum(license_no)) where risk_level = '3' and facility_type = 'TAVERN'",SELECT CAST(COUNT(T2.inspection_id) AS REAL) / COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.risk_level = 3 AND T1.facility_type = 'TAVERN'
food_inspection_2,State the inspection pass rate of Pockets Restaurant.,"Pockets refers to dba_name = 'POCKETS'; Restaurant refers to facility_type = 'Restaurant'; pass refers to results = 'Pass'; the inspection pass rate = divide(sum(inspection_id where results = 'Pass'), count(license_no)) where dba_name = 'POCKETS' and facility_type = 'Restaurant'",SELECT CAST(COUNT(CASE WHEN T2.results = 'Pass' THEN T2.inspection_id ELSE NULL END) AS REAL) * 100 / COUNT(T2.inspection_id) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.dba_name = 'POCKETS' AND T1.facility_type = 'Restaurant'
food_inspection_2,How many sanitarian employees in Chicago are from the zip code 60617?,sanitarian refers to title = 'Sanitarian'; in Chicago refers to city = 'Chicago'; zip code 60617 refers to zip = 60617,SELECT COUNT(employee_id) FROM employee WHERE zip = '60617'
food_inspection_2,What is the assumed name of the business located at 2903 W Irving Park Rd?,assumed name refers to dba_name; 2903 W Irving Park Rd refers to address = '2903 W IRVING PARK RD ',SELECT DISTINCT dba_name FROM establishment WHERE address = '2903 W IRVING PARK RD '
food_inspection_2,What is the full name of the employee with the lowest salary?,"full name refers to first_name, last_name; the lowest salary refers to min(salary)","SELECT first_name, last_name FROM employee ORDER BY salary ASC LIMIT 1"
food_inspection_2,How many establishments that are doing business as Homemade Pizza have a risk level of 2?,Homemade Pizza refers to dba_name = 'HOMEMADE PIZZA'; a risk level of 2 refers to risk_level = 2,SELECT COUNT(license_no) FROM establishment WHERE risk_level = 2 AND dba_name = 'HOMEMADE PIZZA'
food_inspection_2,How many inspections with critical food safety problems are under inspection point id 3?,critical food safety problems refers to fine = 500; point_id = 3,SELECT COUNT(inspection_id) FROM violation WHERE point_id = 3 AND fine = 500
food_inspection_2,How many employees are under Gregory Cardenas?,,SELECT COUNT(T1.employee_id) FROM employee AS T1 WHERE T1.supervisor = ( SELECT employee_id FROM employee WHERE first_name = 'Gregory' AND last_name = 'Cardenas' )
food_inspection_2,When did Renaldi's Pizza had its first inspection?,Renaldi's Pizza refers to dba_name = 'RENALDI''S PIZZA'; first inspection refers to min(inspection_date),SELECT MIN(T2.inspection_date) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.dba_name = 'RENALDI''S PIZZA'
food_inspection_2,What is the full name of the employee who was responsible for the most inspection in March 2016?,"full name refers to first_name, last_name; the most inspection refers to max(count(employee_id)); in March 2016 refers to inspection_date like '2016-03%'","SELECT T3.first_name, T3.last_name FROM ( SELECT T1.employee_id, COUNT(T1.inspection_id) FROM inspection AS T1 WHERE strftime('%Y-%m', T1.inspection_date) = '2016-03' GROUP BY T1.employee_id ORDER BY COUNT(T1.inspection_id) DESC LIMIT 1 ) AS T2 INNER JOIN employee AS T3 ON T2.employee_id = T3.employee_id"
food_inspection_2,What are the names of the businesses that passed with conditions in May 2012?,name of business refers to dba_name; passed with conditions refers to results = 'Pass w/ Conditions'; in May 2012 refers to inspection_date like '2012-05%',"SELECT DISTINCT T2.dba_name FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE strftime('%Y-%m', T1.inspection_date) = '2012-05' AND T1.results = 'Pass w/ Conditions'"
food_inspection_2,"Out of all the short form complaint inspections done by David Hodges, how many businesses passed?",short form complaint inspection refers to inspection_type = 'Short Form Complaint'; pass refers to results = 'Pass',SELECT COUNT(DISTINCT T2.license_no) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T1.first_name = 'David' AND T1.last_name = 'Hodges' AND T1.employee_id = 153225 AND T2.inspection_type = 'Short Form Complaint' AND T2.results = 'Pass'
food_inspection_2,How many businesses from ward 42 have at least 5 failed inspection results between 1/1/2010 to 12/31/2015?,ward 42 refers to ward = 42; at least 5 failed inspection results refers to count(results = 'Fail') > = 5; between 1/1/2010 to 12/31/2015 refers to inspection_date between '2010-01-01' and '2015-12-31',SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T2.inspection_date BETWEEN '2010-01-01' AND '2015-12-31' AND T1.ward = 42 AND T1.license_no IN ( SELECT license_no FROM ( SELECT license_no FROM inspection WHERE results = 'Fail' GROUP BY license_no HAVING COUNT(results) >= 5 ) )
food_inspection_2,How much is the salary of the employee who has the highest number of inspections done of all time?,the highest number of inspections done refers to max(count(employee_id)),"SELECT T1.salary FROM employee AS T1 INNER JOIN ( SELECT employee_id, COUNT(inspection_id) FROM inspection GROUP BY employee_id ORDER BY COUNT(inspection_id) DESC LIMIT 1 ) AS T2 ON T1.employee_id = T2.employee_id"
food_inspection_2,What is the assumed name of the business that has the highest total fine in 2014?,assumed name of business refers to dba_name; the highest total fine refers to max(sum(fine)); in 2014 refers to inspection_date like '2014%',"SELECT T.dba_name FROM ( SELECT T1.dba_name, SUM(T3.fine) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE strftime('%Y', T2.inspection_date) = '2014' GROUP BY T1.dba_name ORDER BY SUM(T3.fine) DESC LIMIT 1 ) AS T"
food_inspection_2,What is the precise location of the establishment with the highest number of failed inspections?,"precise location refers to latitude, longitude; the highest number of failed inspections refers to max(count(results where results = 'Fail'))","SELECT T1.latitude, T1.longitude FROM establishment AS T1 INNER JOIN ( SELECT license_no FROM inspection WHERE results = 'Fail' GROUP BY license_no ORDER BY COUNT(results) DESC LIMIT 1 ) AS T2 ON T1.license_no = T2.license_no"
food_inspection_2,What are the comments of the inspector during the inspection of Taqueria La Fiesta on 1/25/2010?,comment of the inspector refers to inspector_comment; Taqueria La Fiesta refers to dba_name = 'TAQUERIA LA FIESTA'; on 1/25/2010 refers to inspection_date = '2010-01-25',SELECT T3.inspector_comment FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE T2.inspection_date = '2010-01-25' AND T1.dba_name = 'TAQUERIA LA FIESTA'
food_inspection_2,How much is the total fine given to Ron of Japan Inc in its inspection done on February 2014?,total fine = sum(fine); Ron of Japan Inc refers to dba_name = 'RON OF JAPAN INC'; on February 2014 refers to inspection_date like '2014-02%',"SELECT SUM(T3.fine) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE strftime('%Y-%m', T2.inspection_date) = '2014-02' AND T1.dba_name = 'RON OF JAPAN INC'"
food_inspection_2,List the full names of the employees who were responsible for inspecting Taqueria La Paz.,"full name refers to first_name, last_name; Taqueria La Paz refers to dba_name = 'TAQUERIA LA PAZ'","SELECT DISTINCT T3.first_name, T3.last_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN employee AS T3 ON T2.employee_id = T3.employee_id WHERE T1.dba_name = 'TAQUERIA LA PAZ'"
food_inspection_2,What is the full name of the employee who gave the highest amount of fine of all time?,"full name refers to first_name, last_name; the highest amount of fine refers to max(sum(fine))","SELECT T.first_name, T.last_name FROM ( SELECT T1.first_name, T1.last_name, SUM(T3.fine) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id GROUP BY T1.first_name, T1.last_name ORDER BY SUM(T3.fine) DESC LIMIT 1 ) t"
food_inspection_2,What is the average number of inspections done by the top 5 employees with the highest salary? List the names of the said employees.,"the highest salary refers to max(salary); sanitarian refers to title = 'Sanitarian'; name refers to first_name, last_name; average number = divide(sum(inspection_id), 5)","SELECT CAST(COUNT(DISTINCT T2.inspection_id) AS REAL) / 5, T1.first_name, T1.last_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T1.title = 'Sanitarian' ORDER BY T1.salary DESC LIMIT 5"
food_inspection_2,Which business had the highest number of inspections done? Calculate the percentage of passed and failed inspections of the said business.,"business name refers to dba_name; the highest number of inspections done max(count(inspection_id)); percentage of passed inspections = divide(sum(inspection_id where results = 'Pass'), total(inspection_id)) * 100%; percentage of failed inspections = divide(sum(inspection_id where results = 'Fail'), total(inspection_id)) * 100%","SELECT T2.dba_name , CAST(SUM(CASE WHEN T1.results = 'Pass' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.inspection_id) AS percentagePassed , CAST(SUM(CASE WHEN T1.results = 'Fail' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.inspection_id) FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no GROUP BY T2.dba_name ORDER BY COUNT(T1.license_no) DESC LIMIT 1"
food_inspection_2,"What is the employee's last name at 7211 S Hermitage Ave, Chicago, IL?",7211 S Hermitage Ave refers to address = '7211 S Hermitage Ave'; Chicago refers to city = 'Chicago'; IL refers to state = 'IL',SELECT last_name FROM employee WHERE address = '7211 S Hermitage Ave' AND city = 'Chicago' AND state = 'IL'
food_inspection_2,"What is the establishment's name and employee involved in the inspection ID 44256 on May 5, 2010?","establishment's name refers to dba_name; employee name refers to first_name, last_name; inspection ID 44256 refers to inspection_id = 44256; on May 5, 2010 refers to inspection_date = '2010-05-05'","SELECT T1.dba_name, T3.first_name, T3.last_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN employee AS T3 ON T2.employee_id = T3.employee_id WHERE T2.inspection_date = '2010-05-05' AND T2.inspection_id = 44256"
food_inspection_2,Give the address of the schools that passed the inspection in March 2010.,school refers to facility_type = 'School'; pass refers to results = 'Pass'; in March 2010 refers to inspection_date like '2010-03%',"SELECT DISTINCT T1.address FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE strftime('%Y-%m', T2.inspection_date) = '2010-03' AND T2.results = 'Pass' AND T1.facility_type = 'School'"
food_inspection_2,"What is the employee's full name involved in the canvass inspection type on March 09, 2010?","full name refers to first_name, last_name; canvass inspection type refers to inspection_type = 'Canvass'; on March 09, 2010 refers to inspection_date = '2010-03-09'","SELECT DISTINCT T1.first_name, T1.last_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.inspection_date = '2010-03-09' AND T2.inspection_type = 'Canvass'"
food_inspection_2,"Provide the inspection ID of the establishment named ""PIZZA RUSTICA, INC.""","""PIZZA RUSTICA, INC."" refers to dba_name = 'PIZZA RUSTICA, INC'","SELECT DISTINCT T2.inspection_id FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.dba_name = 'PIZZA RUSTICA, INC'"
food_inspection_2,How many restaurants with the highest risk level still passed the inspection?,restaurant refers to facility_type = 'Restaurant'; the highest risk level refers to max(risk_level); pass the inspection refers to results = 'Pass',SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.risk_level = 3 AND T2.results = 'Pass' AND T1.facility_type = 'Restaurant'
food_inspection_2,List the names of employees involved in an inspection with the Display of Inspection Report Summary category.,"name refers to first_name, last_name; Display of Inspection Report Summary category refers to category = 'Display of Inspection Report Summary'","SELECT DISTINCT T1.first_name, T1.last_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id INNER JOIN inspection_point AS T4 ON T3.point_id = T4.point_id WHERE T4.category = 'Display of Inspection Report Summary'"
food_inspection_2,What is the title of the employee involved in inspection ID 60332?,,SELECT T1.title FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.inspection_id = 60332
food_inspection_2,How many of the restaurants with the lowest risk level failed the complaint inspection type?,restaurant refers to facility_type = 'Restaurant'; the lowest risk level refers to min(risk_level); failed refers to results = 'Fail'; the complaint inspection type refers to inspection_type = 'Complaint',SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.risk_level = '1' AND T2.inspection_type = 'Complaint' AND T1.facility_type = 'Restaurant' AND T2.results = 'Fail'
food_inspection_2,Provide the fine paid and the complete address of the establishment with inspection ID 48216.,"complete address refers to state, city, address","SELECT DISTINCT T3.fine, T1.state, T1.city, T1.address FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE T2.inspection_id = 48216"
food_inspection_2,"What is the inspection ID of the inspection with critical point level, $500 fine, and inspector comment ""CDI ON 5-17-10""?","critical point level refers to point_level = 'Critical'; $500 fine refers to fine = 500; inspector comment ""CDI ON 5-17-10"" refers to inspector_comment = 'CDI ON 5-17-10'",SELECT T2.inspection_id FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T2.fine = 500 AND T1.point_level = 'Critical' AND T2.inspector_comment = 'CDI ON 5-17-10'
food_inspection_2,What are the inspection description and inspector's comments in the inspection ID 164795?,inspection description refers to Description; inspector's comment refers to inspector_comment,"SELECT T1.Description, T2.inspector_comment FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T2.inspection_id = 44247"
food_inspection_2,What are the inspector's comments and clean operating requirement code for inspection ID 54216 and point ID 34?,inspector's comment refers to inspector_comment; clean operating requirement code refers to code,"SELECT T2.inspector_comment, T1.code FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T2.inspection_id = 54216 AND T2.point_id = 34"
food_inspection_2,"Among the establishments that failed in the inspection, what is the percentage of establishments with the highest risk level?","failed in inspection refers to results = 'Fail'; the highest risk level refers to max(risk_level); percentage = divide(count(license_no where risk_level = max(risk_level)), count(license_no)) * 100% where results = 'Fail'",SELECT CAST(COUNT(CASE WHEN T1.risk_level = 3 THEN T1.license_no END) AS REAL) * 100 / COUNT(T1.risk_level) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T2.results = 'Fail'
food_inspection_2,"Among the employees that receive a salary between $75000 to $85000, what is the difference between the number of employees which undergone an inspection that fined 100 and 500?","salary between $75000 and $85000 refers to 75000 < = salary < = 80000; difference = subtract(count(inspection_id where fine = 100), count(inspection_id where fine = 500)) where 75000 < = salary < = 80000",SELECT SUM(CASE WHEN T3.fine = 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T3.fine = 500 THEN 1 ELSE 0 END) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE T1.salary BETWEEN 75000 AND 80000
food_inspection_2,How many inspections were done in January 2011?,in January 2011 refers to inspection_date like '2011-01%',"SELECT COUNT(inspection_id) FROM inspection WHERE strftime('%Y-%m', inspection_date) = '2011-01'"
food_inspection_2,How many inspections failed in 2014?,failed refers to results = 'Fail'; in 2014 refers to inspection_date like '2014%',"SELECT COUNT(inspection_id) FROM inspection WHERE strftime('%Y', inspection_date) = '2014' AND results = 'Fail'"
food_inspection_2,Calculate the percentage of inspections with the fine for a minor food safety problem.,"fine for a minor food safety problem refers to fine = 100; percentage = divide(count(inspection_id where fine = 100), sum(inspection_id)) * 100%",SELECT CAST(COUNT(CASE WHEN fine = 100 THEN inspection_id END) AS REAL) * 100 / COUNT(inspection_id) FROM violation
food_inspection_2,List the point IDs and fines of the inspections done on 7th August 2010.,on 7th August 2010 refers to inspection_date = '2010-08-07',"SELECT T2.point_id, T2.fine FROM inspection AS T1 INNER JOIN violation AS T2 ON T1.inspection_id = T2.inspection_id WHERE T1.inspection_date = '2010-08-07'"
food_inspection_2,How many inspections were done under the personnel category?,under the personnel category refers to category = 'Personnel',SELECT COUNT(T1.inspection_id) FROM violation AS T1 INNER JOIN inspection_point AS T2 ON T1.point_id = T2.point_id WHERE T2.category = 'Personnel'
food_inspection_2,Provide the names and inspection results of the facilities located in Burnham.,names refers to dba_name; inspection result refers to results; in Burnham refers to city = 'BURNHAM',"SELECT DISTINCT T1.dba_name, T2.results FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.city = 'BURNHAM'"
food_inspection_2,Compare the number of inspections under toxic items and no-smoking regulations.,under toxic items refers to category = 'Toxic Items'; no-smoking regulations refers to category = 'No Smoking Regulations',"SELECT COUNT(CASE WHEN T2.category = 'Toxic Items' THEN T1.inspection_id END) AS Tox_nums , COUNT(CASE WHEN T2.category = 'No Smoking Regulations' THEN T1.inspection_id END) AS NosmoNums FROM violation AS T1 INNER JOIN inspection_point AS T2 ON T1.point_id = T2.point_id"
food_inspection_2,Which facilities were inspected by Sarah Lindsey on 20th November 2012?,facility name refers to dba_name; on 20th November 2012 refers to inspection_date = '2012-11-20',SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN employee AS T3 ON T2.employee_id = T3.employee_id WHERE T2.inspection_date = '2012-11-20' AND T3.first_name = 'Sarah' AND T3.last_name = 'Lindsey'
food_inspection_2,Provide the categories and fines for the inspections done by Lisa Tillman in January 2014.,in January 2014 refers to inspection_date like '2014-01%',"SELECT DISTINCT T4.category, T3.fine FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id INNER JOIN violation AS T3 ON T1.inspection_id = T3.inspection_id INNER JOIN inspection_point AS T4 ON T3.point_id = T4.point_id WHERE T2.first_name = 'Lisa' AND T2.last_name = 'Tillman' AND strftime('%Y-%m', T1.inspection_date) = '2014-01'"
food_inspection_2,How many inspections were done under the display of inspection report summary category?,under the display of inspection report summary category refers to category = 'Display of Inspection Report Summary',SELECT COUNT(T2.inspection_id) FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T1.category = 'Display of Inspection Report Summary'
food_inspection_2,List the types and results of the inspections done on Riverwalk café.,type refers to inspection_type; Riverwalk café refers to facility_type = 'RIVERWALK CAFE',"SELECT T2.inspection_type, T2.results FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.facility_type = 'RIVERWALK CAFE'"
food_inspection_2,Who inspected Jean Samocki and what was the result?,"employee's name refers to first_name, last_name; Jean Samocki refers to dba_name = 'JEAN SAMOCKI'","SELECT T3.first_name, T3.last_name, T2.results FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN employee AS T3 ON T2.employee_id = T3.employee_id WHERE T1.dba_name = 'JEAN SAMOCKI'"
food_inspection_2,How much did Hacienda Los Torres from ward 36 fine for failing an inspection?,Hacienda Los Torres refers to dba_name = 'HACIENDA LOS TORRES'; ward 36 refers to ward = 36; failing an inspection refers to results = 'Fail';,SELECT SUM(T3.fine) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE T1.dba_name = 'HACIENDA LOS TORRES' AND T1.ward = 36 AND T2.results = 'Fail'
food_inspection_2,Calculate the total amount of fine under the food equipment and utensil category.,under the food equipment and utensil category refers to category = 'Food Equipment and Utensil',SELECT SUM(T2.fine) FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T1.category = 'Food Equipment and Utensil'
food_inspection_2,Provide the names and locations of the facilities that failed inspections on 29th July 2013.,"name refers to dba_name; location refers to latitude, longitude; failed inspections refers to results = 'Fail'; on 29th July 2013 refers to inspection_date = '2013-07-29'","SELECT T2.dba_name, T2.longitude, T2.latitude FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE T1.inspection_date = '2013-07-29' AND T1.results = 'Fail'"
food_inspection_2,"Calculate the percentage of inspections with verified quality. Among them, how many businesses were from Chicago?","verified quality refers to results like 'Pass%'; from Chicago refers to city = 'CHICAGO'; percentage = divide(count(inspection_id where results like 'Pass%'), sum(inspection_id)) * 100%","SELECT CAST(COUNT(CASE WHEN T2.results LIKE '%Pass%' THEN T2.inspection_id END) AS REAL) * 100 / COUNT(T2.inspection_id), COUNT(DISTINCT T2.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.city = 'CHICAGO'"
food_inspection_2,Calculate the average inspections per year done by Jessica Anthony from 2010 to 2017.,"from 2010 to 2017 refers to inspection_date > '2010-01-01' AND T2.inspection_id < '2017-12-31'; average inspections per year = divide(count(inspection_id where inspection_date > '2010-01-01' AND T2.inspection_id < '2017-12-31'), 8)","SELECT CAST(COUNT(CASE WHEN T1.first_name = 'Jessica' AND T1.last_name = 'Anthony' THEN T2.inspection_id ELSE 0 END) AS REAL) / 8 FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE strftime('%Y', T2.inspection_date) BETWEEN '2010' AND '2017'"
food_inspection_2,Provide the first name of employee who did inspection ID 48225?,,SELECT T1.first_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.inspection_id = 48225
food_inspection_2,Tell the address of employee who did inspection ID 52238?,,SELECT T1.address FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.inspection_id = 52238
food_inspection_2,Write down the last name of employee who did inspection ID 52238?,,SELECT T1.last_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.inspection_id = 52238
food_inspection_2,What is the inspection result for inspection done by Thomas Langley?,inspection result refers to results,SELECT DISTINCT T2.results FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T1.first_name = 'Thomas' AND T1.last_name = 'Langley'
food_inspection_2,List down the address of employees who did inspection dated 11/5/2010.,dated 11/5/2010 refers to inspection_date = '2010-11-05',SELECT DISTINCT T1.address FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.inspection_date = '2010-11-05'
food_inspection_2,List down the phone numbers of employees who did Canvass inspection.,phone number refers to phone; Canvass inspection refers to inspection_type = 'Canvass',SELECT DISTINCT T1.phone FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.inspection_type = 'Canvass'
food_inspection_2,What is the job title of employee who did inspection ID 52269?,job title refers to title,SELECT T1.title FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.inspection_id = 52269
food_inspection_2,What are the inspection results for Xando Coffee & Bar / Cosi Sandwich Bar?,Xando Coffee & Bar / Cosi Sandwich Bar refers to dba_name = 'XANDO COFFEE & BAR / COSI SANDWICH BAR',SELECT DISTINCT T2.results FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.dba_name = 'XANDO COFFEE & BAR / COSI SANDWICH BAR'
food_inspection_2,What type of inspection was done at John Schaller?,type of inspection refers to inspection_type; John Schaller refers to dba_name = 'JOHN SCHALLER',SELECT DISTINCT T2.inspection_type FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.dba_name = 'JOHN SCHALLER'
food_inspection_2,List down the dba name of restaurants that were inspected due to license.,inspected due to license refers to inspection_type = 'License',SELECT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T2.inspection_type = 'License'
food_inspection_2,How many inspections done in 2010 had serious food safety issue?,in 2010 refers to inspection_date like '2010%'; had serious food safety issue refers to risk_level = 3,"SELECT COUNT(T2.inspection_id) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE strftime('%Y', T2.inspection_date) = '2010' AND T1.risk_level = 3"
food_inspection_2,State the name of dbas with verified quality.,name of dba refers to dba_name; with verified quality refers to results = 'Pass' or results = 'Pass w/Conditions',SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T2.results LIKE '%Pass%'
food_inspection_2,Calculate the total salary for employees who did inspection from ID 52270 to 52272.,inspection from ID 52270 to 52272 refers to inspection_id between 52270 and 52272,SELECT SUM(T2.salary) FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id WHERE T1.inspection_id BETWEEN 52270 AND 52272
food_inspection_2,Calculate the average salary for employees who did inspection on License Re-Inspection.,inspection on License Re-Inspection refers to inspection_type = 'License Re-Inspection'; average salary = avg(salary),SELECT AVG(T2.salary) FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id WHERE T1.inspection_type = 'License Re-Inspection'
food_inspection_2,Did license number 1222441 pass the inspection and what is the zip code number of it?,license number 1222441 refers to license_no = 1222441; result of the inspection refers to results; zip code number refers to zip,"SELECT DISTINCT T2.results, T1.zip FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.license_no = 1222441"
food_inspection_2,When did restaurant John Schaller has its first inspection in 2010?,John Schaller refers to dba_name = 'JOHN SCHALLER'; first inspection refers to min(inspection_date); in 2010 refers to inspection_date like '2010%',"SELECT MIN(T2.inspection_date) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.dba_name = 'JOHN SCHALLER' AND strftime('%Y', T2.inspection_date) = '2010'"
food_inspection_2,What is the full name of the employee that inspected establishments with license 1334073?,"full name refers to first_name, last_name; with license 1334073 refers to license_no = 1334073","SELECT DISTINCT T1.first_name, T1.last_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.license_no = 1334073"
food_inspection_2,Which establishments did Joshua Rosa inspect?,establishment name refers to dba_name,SELECT DISTINCT T3.dba_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN establishment AS T3 ON T2.license_no = T3.license_no WHERE T1.first_name = 'Joshua' AND T1.last_name = 'Rosa'
food_inspection_2,How many employees have salary greater than 70000 but fail the inspection?,salary greater than 70000 refers to salary > 70000; fail the inspection refers to results = 'Fail',SELECT COUNT(DISTINCT T1.employee_id) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.results = 'Fail' AND T1.salary > 70000
food_inspection_2,Name the food businesses that passed the inspection in 2010.,business name refers to dba_name; food business refers to restaurant; pass the inspection refers to results = 'Pass'; in 2010 refers to inspection_date like '2010%',"SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE strftime('%Y', T2.inspection_date) = '2010' AND T2.results = 'Pass' AND T1.facility_type = 'Liquor'"
food_inspection_2,What is the name of the establishment that Joshua Rosa inspected?,name of the establishment refers to dba_name,SELECT DISTINCT T3.dba_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN establishment AS T3 ON T2.license_no = T3.license_no WHERE T1.first_name = 'Joshua' AND T1.last_name = 'Rosa'
food_inspection_2,How many taverns failed in July 2010?,tavern refers to facility_type = 'Tavern'; failed refers to results = 'Fail'; in July 2010 refers to inspection_date like '2010-07%',"SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE strftime('%Y-%m', T2.inspection_date) = '2010-07' AND T2.results = 'Fail' AND T1.facility_type = 'Restaurant'"
food_inspection_2,What is the risk level of the establishment that Bob Benson inspected?,,SELECT DISTINCT T3.risk_level FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN establishment AS T3 ON T2.license_no = T3.license_no WHERE T1.first_name = 'Bob' AND T1.last_name = 'Benson'
food_inspection_2,Which establishments did Bob Benson inspect in 2010 and what was the results?,establishment name refers to dba_name; in 2010 refers to inspection_date like '2010%',"SELECT DISTINCT T3.dba_name, T2.results FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN establishment AS T3 ON T2.license_no = T3.license_no WHERE T1.first_name = 'Bob' AND T1.last_name = 'Benson' AND strftime('%Y', T2.inspection_date) = '2010'"
food_inspection_2,What is the title of the employee that inspected the establishment with license number 1576687?,license number 1576687 refers to license_no = 1576687,SELECT DISTINCT T1.title FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.license_no = 1576687
food_inspection_2,How many inspection points with serious point level that have no fine?,serious point level refers to point_level = 'Serious '; have no fine refers to fine = 0,SELECT COUNT(DISTINCT T2.point_id) FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T1.point_level = 'Serious ' AND T2.fine = 0
food_inspection_2,What is the percentage of restaurants that paid a fine of 250 among all establishments?,"a fine of 250 refers to fine = 250; percentage = divide(sum(license_no where fine = 250), count(license_no)) * 100%",SELECT CAST(COUNT(CASE WHEN T3.fine = 250 THEN T1.license_no END) AS REAL) * 100 / COUNT(T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE T1.facility_type = 'Restaurant'
food_inspection_2,What is the percentage of establishments with a risk level of 1 among all of the establishments that passed the inspection?,"a risk level of 1 refers to risk_level = 1; pass the inspection refers to results = 'Pass'; percentage = divide(sum(license_no where risk_level = 1), count(license_no)) * 100% where results = 'Pass'",SELECT CAST(COUNT(CASE WHEN T1.risk_level = 1 THEN T1.license_no END) AS REAL) * 100 / COUNT(T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T2.results = 'Pass'
food_inspection_2,"Where does the employee named ""Standard Murray"" live?","address refers to address, city, state","SELECT address, city, state FROM employee WHERE first_name = 'Standard' AND last_name = 'Murray'"
food_inspection_2,"What is the facility type of the establishment named ""Kinetic Playground""?","the establishment named ""Kinetic Playground"" refers to dba_name = 'Kinetic Playground'",SELECT facility_type FROM establishment WHERE dba_name = 'Kinetic Playground'
food_inspection_2,How much salary does Jessica Anthony receive?,,SELECT salary FROM employee WHERE first_name = 'Jessica' AND last_name = 'Anthony'
food_inspection_2,"What is the restaurant's name at ""41.9532864854"" latitude and ""-87.7673790701422"" longitude?","restaurant refers to facility_type = 'Restaurant'; name refers to dba_name; ""41.9532864854"" latitude and ""-87.7673790701422"" longitude refers to latitude = 41.9532864854 and longitude = -87.7673790701422",SELECT dba_name FROM establishment WHERE latitude = 41.9532864854 AND longitude = -87.7673790701422 AND facility_type = 'Restaurant'
food_inspection_2,"Among the list of employees, what is the total number of supervisors?",supervisor refers to title = 'Supervisor',SELECT COUNT(employee_id) FROM employee WHERE title = 'Supervisor'
food_inspection_2,"Where in Chicago does the restaurant named ""Old Timers Rest & Lounge"" located?","in Chicago refers to city = 'CHICAGO'; restaurant refers to facility_type = 'Restaurant'; ""Old Timers Rest & Lounge"" refers to dba_name = 'OLD TIMERS REST & LOUNGE'; location refers to address",SELECT address FROM establishment WHERE city = 'CHICAGO' AND dba_name = 'OLD TIMERS REST & LOUNGE' AND facility_type = 'Restaurant'
food_inspection_2,"How many employees are living in Hoffman Estates, IL?",in Hoffman Estates refers to city = 'Hoffman Estates'; IL refers to state = 'IL',SELECT COUNT(employee_id) FROM employee WHERE state = 'IL' AND city = 'Hoffman Estates'
food_inspection_2,What is the total number of establishments with the highest risk level?,total number of establishments with the highest risk level = count(max(risk_level)),SELECT COUNT(license_no) FROM establishment WHERE risk_level = 3
food_inspection_2,Who is the employee that receives 82700 as their salary?,"employee name refers to first_name, last_name; receives 82700 as salary refers to salary = 82700","SELECT first_name, last_name FROM employee WHERE salary = 82700"
food_inspection_2,Provide the last name of the employee involved in the inspection ID 52256.,,SELECT DISTINCT T1.last_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.inspection_id = 52256
food_inspection_2,Please list the names of taverns that paid a $100 fine upon inspection.,name refers to dba_name; tavern refers to facility_type = 'Tavern'; a $100 fine refers to fine = 100,SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE T1.facility_type = 'Tavern' AND T3.fine = 100
food_inspection_2,List point level of inspections with no fine.,no fine refers to fine = 0,SELECT DISTINCT T1.point_level FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T2.fine = 0
food_inspection_2,Provide the facility type and license number of establishments with the lowest risk level but failed the inspection.,license number refers to license_no; the lowest risk level refers to min(risk_level); failed the inspection refers to results = 'Fail',"SELECT DISTINCT T1.facility_type, T1.license_no FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.risk_level = 1 AND T2.results = 'Fail'"
food_inspection_2,"What is the result of the February 24, 2010 inspection involving the employee named ""Arnold Holder""?","February 24, 2010 refers to inspection_date = '2010-02-24'",SELECT DISTINCT T2.results FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.inspection_date = '2010-02-24' AND T1.first_name = 'Arnold' AND T1.last_name = 'Holder'
food_inspection_2,How many restaurants failed the inspection in April 2010?,restaurant refers to facility_type = 'Restaurant'; failed the inspection refers to results = 'Fail'; in April 2010 refers to inspection_date like '2010-04%',"SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE strftime('%Y-%m', T2.inspection_date) = '2010-04' AND T1.facility_type = 'Restaurant' AND T2.results = 'Fail'"
food_inspection_2,"List all inspection IDs where the employee named ""Rosemary Kennedy"" was involved.",,SELECT DISTINCT T2.inspection_id FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T1.first_name = 'Rosemary' AND T1.last_name = 'Kennedy'
food_inspection_2,"What type of inspection was done on July 07, 2010, involving the employee named ""Lisa Tillman""?","type of inspection refers to inspection_type; on July 07, 2010 refers to inspection_date = '2010-07-07'",SELECT DISTINCT T2.inspection_type FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T1.first_name = 'Lisa' AND T1.last_name = 'Tillman' AND T2.inspection_date = '2010-07-07'
food_inspection_2,"Provide the inspection ID of the inspection with the comment ""MUST CLEAN AND BETTER ORGANIZE HALLWAY AREA"" and sanitary operating requirement code of 7-38-030, 015, 010 (A), 005 (A).","comment ""MUST CLEAN AND BETTER ORGANIZE HALLWAY AREA"" refers to inspector_comment = 'MUST CLEAN AND BETTER ORGANIZE HALLWAY AREA'; sanitary operating requirement code of 7-38-030, 015, 010 (A), 005 (A) refers to code = '7-38-030, 015, 010 (A), 005 (A)'","SELECT T2.inspection_id FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T2.inspector_comment = 'MUST CLEAN AND BETTER ORGANIZE HALLWAY AREA' AND T1.code = '7-38-030, 015, 010 (A), 005 (A)'"
food_inspection_2,List down the names of the establishments with the highest risk level and failed the inspection.,name of establishment refers to dba_name; the highest risk level refers to max(risk_level); failed the inspection refers to results = 'Fail',SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.risk_level = 3 AND T2.results = 'Fail'
food_inspection_2,"What is the inspection ID where the employee named ""David Hodges"" is currently employed in the ""Kamayan Express"" establishment?","the ""Kamayan Express"" establishment refers to dba_name = 'KAMAYAN EXPRESS'",SELECT T2.inspection_id FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN employee AS T3 ON T2.employee_id = T3.employee_id WHERE T3.first_name = 'David' AND T3.last_name = 'Hodges' AND T1.dba_name = 'KAMAYAN EXPRESS'
food_inspection_2,Provide the salary range of the employee involved in the inspection ID 58424.,,"SELECT T1.salary, T3.salary FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN employee AS T3 WHERE T2.inspection_id = 58424 ORDER BY T1.salary, T3.salary DESC LIMIT 1"
food_inspection_2,"List down the inspection ID with the inspector's comment ""A certified food service manager must be present in all establishments at which potentially hazardous food is prepared or served. NO CERTIFIED FOOD MANAGER ON DUTY AT THIS TIME FOODS ARE COOKED AND SERVED SERIOUS CITATION ISSUED"" and inspection category of Personnel.","inspector's comment ""A certified food service manager must be present in all establishments at which potentially hazardous food is prepared or served. NO CERTIFIED FOOD MANAGER ON DUTY AT THIS TIME FOODS ARE COOKED AND SERVED SERIOUS CITATION ISSUED"" refers to inspector_comment = 'A certified food service manager must be present in all establishments at which potentially hazardous food is prepared or served.FOUND NO CITY OF CHICAGO SANITATION CERTIFICATE POSTED OR VALID DOCUMENTATION DURING THIS INSPECTION.'; inspection category of Personnel refers to category = 'Personnel'",SELECT T2.inspection_id FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T1.category = 'Personnel' AND T2.inspector_comment = 'A certified food service manager must be present in all establishments at which potentially hazardous food is prepared or served.FOUND NO CITY OF CHICAGO SANITATION CERTIFICATE POSTED OR VALID DOCUMENTATION DURING THIS INSPECTION.'
food_inspection_2,How many grocery stores paid $250 fine upon their inspection?,grocery store refers to facility_type = 'Grocery Store'; $250 fine refers to fine = 250,SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE T1.facility_type = 'Grocery Store' AND T3.fine = 250
food_inspection_2,"What is the category of the inspection of the establishment named ""J & J FOOD""?","the establishment named ""J & J FOOD"" refers to dba_name = 'J & J FOOD'",SELECT DISTINCT T4.category FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id INNER JOIN inspection_point AS T4 ON T3.point_id = T4.point_id WHERE T1.dba_name = 'J & J FOOD'
food_inspection_2,Name the taverns that failed the inspection in January 2010.,tavern refers to facility_type = 'Tavern'; failed the inspection refers to results = 'Fail'; in January 2010 refers to inspection_date like '2010-01%',"SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE strftime('%Y-%m', T2.inspection_date) = '2010-01' AND T2.results = 'Fail' AND T1.facility_type = 'TAVERN'"
food_inspection_2,How many of the inspections with serious point levels have no fines?,serious point level refers to point_level = 'Serious'; no fines refers to fine = 0,SELECT COUNT(DISTINCT T2.inspection_id) FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T1.point_level = 'Serious ' AND T2.fine = 0
food_inspection_2,What is the establishment's name with an inspection category of No Smoking Regulations?,establishment's name refers to dba_name; an inspection category of No Smoking Regulations refers to category = 'No Smoking Regulations',SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id INNER JOIN inspection_point AS T4 ON T3.point_id = T4.point_id WHERE T4.category = 'No Smoking Regulations'
food_inspection_2,What is the difference in the number of restaurants that passed and failed the canvass inspection type?,"canvass inspection type refers to inspection_type = 'Canvass'; restaurant refers to facility_type = 'Restaurant'; difference = subtract(count(inspection_id where results = 'Pass'), count(inspection_id where results = 'Fail'))",SELECT COUNT(CASE WHEN T2.results = 'Pass' THEN T1.license_no END) - COUNT(CASE WHEN T2.results = 'Fail' THEN T1.license_no END) AS diff FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T2.inspection_type = 'Canvass' AND T1.facility_type = 'Restaurant'
food_inspection_2,"Among the establishments that failed the inspection in February 2010, list the names of the employees with a salary greater than 70% of the average salary of all employees.","failed the inspection refers to results = 'Fail'; in January 2010 refers to inspection_date like '2010-01%'; name of employee refers to first_name, last_name; a salary greater than 70% of the average salary refers to salary > multiply(avg(salary), 0.7)","SELECT DISTINCT T1.employee_id FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.results = 'Fail' AND strftime('%Y-%m', T2.inspection_date) = '2010-02' AND T1.salary > 0.7 * ( SELECT AVG(salary) FROM employee )"
food_inspection_2,"Among the establishments that paid a 500 fine, what is the percentage of restaurants?","a 500 fine refers to fine = 500; restaurant refers to facility_type = 'Restaurant'; percentage = divide(count(license_no where facility_type = 'Restaurant'), count(license_no)) * 100% where fine = 500",SELECT CAST(COUNT(CASE WHEN T1.facility_type = 'Restaurant' THEN T1.license_no END) AS REAL) * 100 / COUNT(T1.facility_type) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE T3.fine = 500
coinmarketcap,Name the coin that has the highest market capitalization for all transactions in 2018.,highest market capitalization refers to max(market_cap); in 2018 refers to year(date) = 2018,"SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date LIKE '2018%' AND T2.market_cap = ( SELECT MAX(market_cap) FROM historical WHERE STRFTIME('%Y', date) = '2018' )"
coinmarketcap,What is the total value of Argentum coined traded in the past 24 hours on 2016/10/11.,total value in the past 24 hours refers to volume_24h; on 11/10/16 refers to date = '2016-11-10',SELECT T2.volume_24h FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Argentum' AND T2.date = '2016-10-11'
coinmarketcap,List the price for Zetacoin on 13/11/1 and the next 7 consecutive days. What is the average price for these 7 days?,on 1/11/13 and the next 7 consecutive days refers to DATE BETWEEN '2013-11-01' AND '2013-11-07'; average price refers to AVG(price); Zetacoin refers to name = 'Zetacoin',SELECT T2.price FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Zetacoin' AND T2.date BETWEEN '2013-11-01' AND '2013-11-07' UNION ALL SELECT AVG(T2.PRICE) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Zetacoin' AND T2.date BETWEEN '2013-11-01' AND '2013-11-07'
coinmarketcap,"For all transactions for WRAP in August 2016, list the time to achieve highest price and the time to achieve the lowest price.",in May 2013 refers to month(date) = 5 AND year(date) = 2013; time to achieve the highest price refers to time_high; time to achieve the lowest price refers to time_low; WRAP refers to name = 'WARP',"SELECT T2.time_high, T2.time_low, T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'WARP' AND STRFTIME('%Y-%m', T2.date) = '2016-08'"
coinmarketcap,State the transaction date whereby DigixDAO was transacted at the hightest price.,the highest price refers to max(price); DigixDAO refers to name = 'DigixDAO',SELECT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'DigixDAO' ORDER BY T2.price DESC LIMIT 1
coinmarketcap,Name the coin with the highest percentage price changed in 24 hours. State the transaction date and price.,the highest percentage price changed in 24 hours refers to max(percent_change_24h),"SELECT T1.name, T2.DATE, T2.price FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.percent_change_24h = ( SELECT MAX(percent_change_24h) FROM historical )"
coinmarketcap,What is the average monthly circulating supply for Frozen in 2014.,average monthly circulating supply = AVG(circulating_supply); in 2017 refers to date BETWEEN '2017-01-01' AND '2017-12-31',"SELECT CAST(SUM(T2.circulating_supply) AS REAL) / 12 FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Frozen' AND STRFTIME('%Y', T2.date) = '2014'"
coinmarketcap,List all the inactive coins and state the last date of its transaction?,the last date refers to max(date); inactive coins refers to status = 'inactive',"SELECT T1.NAME, MAX(T2.DATE) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.ID = T2.coin_id WHERE T1.status = 'inactive' ORDER BY T2.DATE DESC LIMIT 1"
coinmarketcap,What was the price of 1 Bitcoin in 2016?,2016 refers to historical date where year(date) = 2016,"SELECT AVG(T2.price) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bitcoin' AND STRFTIME('%Y', T2.date) = '2016'"
coinmarketcap,State the transaction date and the price when Bitcoin was bottomed?,was bottomed refers to min(price),"SELECT T2.date, T2.price FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bitcoin' ORDER BY T2.price LIMIT 1"
coinmarketcap,For all coins with average price more than $1000. State the current status of the coin.,average price more than $1000 refers to AVG(price)>1000,SELECT T1.status FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id GROUP BY T1.name HAVING AVG(T2.price) > 1000
coinmarketcap,Name the coin and date of transactions with the greatest decline in percent change in 1 hour.,the greatest decline in percent change in 1 hour refers to max(percent_change_1h),"SELECT T1.name, T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.percent_change_1h = ( SELECT MIN(percent_change_1h) FROM historical )"
coinmarketcap,Name the coin under the token category that gives the highest max profit.,"the highest max profit refers to max(subtract(high, low))",SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.category = 'token' ORDER BY T2.high - T2.low DESC LIMIT 1
coinmarketcap,Name the coin that have higher than average percentage price changed from the previous 24 hours for transaction on 2013/6/22.,average percentage price changed from the previous 24 hours refers to AVG(percent_change_24h); on 15/5/2013 refers to DATE = '2013-04-15',SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2020-06-22' GROUP BY T1.name HAVING AVG(T2.percent_change_24h) > T2.PRICE
coinmarketcap,Which crytocurrency was ranked the first by CoinMarketCap on 2013/4/28?,ranked the first refers to cmc_rank = 1; on 2013/4/28 refers to date = '2013-04-28',SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-28' AND T2.cmc_rank = 1
coinmarketcap,How much dollars was a Bitcoin worth on 2013/4/28 according to the coin market?,worth refers to price; on 2013/4/28 refers to date = '2013-04-28',SELECT T2.market_cap FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-28' AND T1.name = 'Bitcoin'
coinmarketcap,Which crytocurrency was not opened on 2013/5/3?,not opened refers to open IS NULL; on 2013/5/3 refers to date = '2013-05-03',SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-05-03' AND T2.open IS NULL
coinmarketcap,What was the price of Bitcoin when it closed at the end of the day on 2013/4/29?,price when it closed refers to close; on 2013/4/29 refers to date = '2013-04-29',SELECT T2.close FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-29' AND T1.name = 'Bitcoin'
coinmarketcap,When did Bitcoin reach its highest price on 2013/4/29?,time that a coin reaches its highest price refers to time_high; on 2013/4/29 refers to date = '2013-04-29',SELECT T2.time_high FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-29' AND T1.name = 'Bitcoin'
coinmarketcap,What was the max profit a user can make on Bitcoin on 2013/4/28?,"the max profit = subtract(high, low); on 2013/4/28 refers to date = '2013-04-28'",SELECT T2.high - T2.low FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-28' AND T1.name = 'Bitcoin'
coinmarketcap,What was the number of Bitcoins verifiably burned until 2013/4/28?,the number of Bitcoins verifiably burned = max_supply - total_supply; 2013/4/28 refers to date = '2013-04-28',SELECT T2.max_supply - T2.total_supply FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-28' AND T1.name = 'Bitcoin'
coinmarketcap,Which crytocurrency was traded in the highest value on 2016/1/8?,traded in the highest value refers to max(volume_24h); on 2016/1/8 refers to date = '2016-01-08',SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2016-01-08' AND T2.volume_24h = ( SELECT MAX(volume_24h) FROM historical WHERE date = '2016-01-08' )
coinmarketcap,Please list the names of the crytocurrencies that have a total amount of existence of over 10000000 on 2013/4/28.,a total amount of existence of over 10000000 refers to total_supply>10000000; on 2013/4/28 refers to date = '2013-04-28',SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-28' AND T2.total_supply > 10000000
coinmarketcap,Had Bitcoin's price increased or decreased on 2013/5/5 compared with the price 7 days before?,price increased refers to percent_change_7d>0; decreased refers percent_change_7d<0; on 2013/5/5 refers to date = '2013-05-05',SELECT (CASE WHEN T2.percent_change_7d > 0 THEN 'INCREASED' ELSE 'DECREASED' END) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-05-05' AND T1.name = 'Bitcoin'
coinmarketcap,"Which crytocurrency had a bigger number of coins circulating in the market and in the general public's hands on 2013/4/28, Bitcoin or Litecoin?",a bigger number of coins circulating in the market refers to max(circulating_supply); on 2013/4/28 refers to date = '2013-04-28',"SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-28' AND T1.name IN ('Bitcoin', 'Litecoin') ORDER BY T2.circulating_supply DESC LIMIT 1"
coinmarketcap,How much was a Bitcoin on 2013/4/28?,how much refers to price; on 2013/4/28 refers to date = '2013-04-28',SELECT T2.price FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-28' AND T1.name = 'Bitcoin'
coinmarketcap,What was the average price of a Bitcoin in the year 2013?,average price refers SUM(price)/COUNT(named = 'Bitcoin'); in the year 2013 refers to year(date) = 2013,"SELECT AVG(T2.price) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE STRFTIME('%Y', T2.date) = '2013' AND T1.name = 'Bitcoin'"
coinmarketcap,What was the percentage of the Bitcoins verifiably burned until 2018/4/28?,"the percentage of the Bitcoins verifiably burned = divide(subtract(SUM(max_supply), SUM(total_supply)),SUM(total_supply))*100%; until 2013/4/28 refers to date<'2013-04-08'",SELECT CAST((SUM(T2.max_supply) - SUM(T2.total_supply)) AS REAL) / SUM(T2.total_supply) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date < '2018-04-28' AND T1.name = 'Bitcoin'
coinmarketcap,Please list the names of coins that has been disappeared.,has disappeared refers to status = 'extinct',SELECT name FROM coins WHERE status = 'extinct'
coinmarketcap,What's the descripition of BitBar?,,SELECT description FROM coins WHERE name = 'BitBar'
coinmarketcap,How many coins were added in May 2013? Please list the names of coins.,in May 2013 refers to year(date_added) = 2013 and month(date_added) = 5,"SELECT COUNT(id) num FROM coins WHERE STRFTIME('%Y-%m', date_added) = '2013-05' UNION ALL SELECT name FROM coins WHERE STRFTIME('%Y-%m', date_added) = '2013-05'"
coinmarketcap,"List the names and symbols of the coins that were added on June 14, 2013.","added on June 14, 2013 refers to date_added like '2013-06-14%'","SELECT name, symbol FROM coins WHERE date_added LIKE '2013-06-14%'"
coinmarketcap,List the names of coins that cannot be traded in 2014.,cannot be tracked refers to status = 'untracked'; in 2014 refers to year(date_added) = '2014',SELECT name FROM coins WHERE date_added LIKE '2014%' AND status = 'untracked'
coinmarketcap,Name the coins that have three tags.,"have three tags refers to length(tag_names)-length(replace(tag_names,',','')) = 2","SELECT name FROM coins WHERE LENGTH(tag_names) - LENGTH(replace(tag_names, ',', '')) = 2"
coinmarketcap,What is the name of the coin with the highest price?,the highest price refers to max(price),SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.price = ( SELECT MAX(price) FROM historical )
coinmarketcap,"Please name the coin that ranked first among the coins traded on April 29, 2013.","ranked first refers to cmc_rank = 1; on April 29, 2013 refers to date = '2013-04-29'",SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-29' AND T2.cmc_rank = 1
coinmarketcap,When is the best time to purchase Bitcoin?,lowest price refers to low; best time refers to date with the low;,SELECT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bitcoin' ORDER BY T2.low LIMIT 1
coinmarketcap,What is the name of the coin that creates the most total value in the past 24 hours?,creates the most total value in the past 24 hours refers to max(volume_24h),SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.volume_24h = ( SELECT MAX(volume_24h) FROM historical )
coinmarketcap,Name the coins that were not opened on May 2013.,not opened refers to open IS NULL; on May 2013 refers to year(date) = 2019 AND month(date) = 5,"SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE STRFTIME('%Y-%m', T2.date) = '2013-05' AND T2.open IS NULL"
coinmarketcap,When is the highest closed price of CHNCoin?,the highest closed price refers to max(close),SELECT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'CHNCoin' ORDER BY T2.close DESC LIMIT 1
coinmarketcap,When did Peercoin rank fifth?,when refers to date; rank fifth refers to cmc_rank = 5,SELECT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Peercoin' AND T2.cmc_rank = 5
coinmarketcap,When is Devcoin most valuable in the market?,when refers to date; most valuable refers to max(market_cap),SELECT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Devcoin' ORDER BY T2.market_cap DESC LIMIT 1
coinmarketcap,"List the names of the top five coins traded on January 1, 2014.","the top five coins refers to cmc_rank< = 5; on January 1, 2014 refers to date = '2014-01-01'",SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2014-01-01' AND T2.cmc_rank <= 5
coinmarketcap,When was Lebowskis not opened?,when refers to date; not opened refers to open IS NULL,SELECT DISTINCT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Lebowskis' AND (T2.open IS NULL OR T2.open = 0)
coinmarketcap,When is the highest price of Terracoin?,when refers to date; the highest price refers to max(price),SELECT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Terracoin' ORDER BY T2.price DESC LIMIT 1
coinmarketcap,How many times was Bytecoin traded in June 2013?,in June 2013 refers to year(date) = 2013 AND month(date) = 6,"SELECT COUNT(T2.coin_id) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bytecoin' AND STRFTIME('%Y-%m', T2.date) = '2013-06'"
coinmarketcap,"List the names of the coins above the average price on April 28, 2013.","average price = divide(sum(price), count(name)); on April 28, 2013 refers to date = '2013-04-28'",SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2018-04-28' AND T2.price > ( SELECT AVG(price) FROM historical WHERE date = '2018-04-28' )
coinmarketcap,"What's the percentage of coins that is higher than the price 1 hour ago in May 29,2013? List the names of these coins.","percentage that is higher than the price 1 hour ago refers to percent_change_1h>0; in May 29,2013 refers to date = '2013-05-29'",SELECT T1.NAME FROM coins AS T1 INNER JOIN historical AS T2 ON T1.ID = T2.coin_id WHERE T2.DATE = '2013-05-29' AND T2.percent_change_1h > 0
retail_world,How many employees have obtained a doctorate?,doctorate refers to TitleOfCourtesy = 'Dr.;,SELECT COUNT(EmployeeID) FROM Employees WHERE TitleOfCourtesy = 'Dr.'
retail_world,To whom does Nancy Davolio report? Please give that employee's full name.,"to whom refers to ReportsTo; full name = FirstName, LastName;","SELECT FirstName, LastName FROM Employees WHERE EmployeeID = ( SELECT ReportsTo FROM Employees WHERE LastName = 'Davolio' AND FirstName = 'Nancy' )"
retail_world,Which phone number should I call if I want to reach Nancy Davolio's home?,phone number of Nancy Davolio's home refers to HomePhone WHERE FirstName = 'Nancy' AND LastName = 'Davolio';,SELECT HomePhone FROM Employees WHERE LastName = 'Davolio' AND FirstName = 'Nancy'
retail_world,How many employees have Andrew Fuller as their direct supervisor?,direct supervisor refers to ReportsTo where the person being reported to is usually the direct supervisor of the reporter;,SELECT COUNT(EmployeeID) FROM Employees WHERE ReportsTo = ( SELECT EmployeeID FROM Employees WHERE LastName = 'Fuller' AND FirstName = 'Andrew' )
retail_world,Which employee has the highest salary? Please give his or her full name.,"highest salary refers to MAX(Salary); full name = FirstName, LastName;","SELECT FirstName, LastName FROM Employees WHERE Salary = ( SELECT MAX(Salary) FROM Employees )"
retail_world,How much higher is the salary of Andrew Fuller than that of Nancy Davolio?,"how much higher = SUBTRACT(SUM(Salary WHERE LastName = 'Fuller' and FirstName = 'Andrew'), SUM(Salary WHERE LastName = 'Davolio' and FirstName = 'Nancy'));",SELECT ( SELECT Salary FROM Employees WHERE LastName = 'Fuller' AND FirstName = 'Andrew' ) - ( SELECT Salary FROM Employees WHERE LastName = 'Davolio' AND FirstName = 'Nancy' ) AS RESULT
retail_world,"Among the employees working as Sales Representatives, how many of them are located in the UK?",Sales Representatives refers to Title = 'Sales Representative'; UK refers to Country = 'UK';,SELECT COUNT(Country) FROM Employees WHERE Title = 'Sales Representative' AND Country = 'UK'
retail_world,Which employee is in charge of the sales in Hollis? Please give the employee's full name.,"Hollis refers to TerritoryDescription = 'Hollis'; full name = FirstName, LastName;","SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T3.TerritoryDescription = 'Hollis'"
retail_world,The sales of how many territories is Nancy Davolio in charge of?,,SELECT COUNT(T2.TerritoryID) FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.FirstName = 'Nancy' AND T1.LastName = 'Davolio'
retail_world,Please list the names of all the territories whose sales are taken in charge by Nancy Davolio.,names of all territories refers to TerritoryDescription;,SELECT T3.TerritoryDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.FirstName = 'Nancy' AND T1.LastName = 'Davolio'
retail_world,The sales of how many territories in total do the employees in London take charge of?,London refers to city = 'London';,SELECT COUNT(T2.TerritoryID) FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.City = 'London'
retail_world,Please list the territories whose sales are taken in charge by the employees who report to Andrew Fuller.,territories refers to TerritoryDescription;,SELECT T3.TerritoryDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.ReportsTo = ( SELECT EmployeeID FROM Employees WHERE FirstName = 'Andrew' AND LastName = 'Fuller' )
retail_world,How many employees in the UK takes charge of the sales in over 4 territories?,UK refers to Country = 'UK'; employees with over 4 territories refers to EmployeeID WHERE TerritoryID > 4;,SELECT COUNT(COUNTEID) FROM ( SELECT T1.EmployeeID AS COUNTEID FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.Country = 'UK' GROUP BY T1.EmployeeID HAVING COUNT(T2.TerritoryID) > 4 ) T1
retail_world,How many territories are there in the Eastern Region?,Eastern Region refers to RegionDescription = 'Eastern';,SELECT COUNT(T1.TerritoryID) FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Eastern'
retail_world,Please list all the territories in the Eastern Region.,territories refers to TerritoryDescription; Eastern Region refers to RegionDescription = 'Eastern';,SELECT DISTINCT T1.TerritoryDescription FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Eastern'
retail_world,How many employees in total are in charge of the sales in the Eastern Region?,Eastern Region refers to RegionDescription = 'Eastern';,SELECT COUNT(T.EmployeeID) FROM ( SELECT T3.EmployeeID FROM Region AS T1 INNER JOIN Territories AS T2 ON T1.RegionID = T2.RegionID INNER JOIN EmployeeTerritories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.RegionDescription = 'Eastern' GROUP BY T3.EmployeeID ) T
retail_world,Please list the home phone numbers of the employees who are in charge of the sales in the territories in the Eastern Region.,home phone numbers refers to HomePhone; Eastern Region refers to RegionDescription = 'Eastern';,SELECT T1.HomePhone FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID INNER JOIN Region AS T4 ON T3.RegionID = T4.RegionID WHERE T4.RegionDescription = 'Eastern ' GROUP BY T1.HomePhone
retail_world,How many more territories are there in than Eastern Region than in the Southern Region?,"how many more = SUBTRACT(SUM(RegionDescription = 'Eastern'), SUM(RegionDescription = 'Southern')); Eastern Region refers to RegionDescription = 'Eastern'; Southern Region refers to RegionDescription = 'Southern';",SELECT ( SELECT COUNT(T1.TerritoryID) FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Eastern' ) - ( SELECT COUNT(T1.TerritoryID) FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Southern' ) AS Calu
retail_world,Please list the names of all the products ordered in order no. 10248.,names of the products refers to ProductName; order no. refers to OrderID;,SELECT T1.ProductName FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T2.OrderID = 10248
retail_world,What is the quantity of Ikura ordered in order no. 10273?,Ikura refers to ProductName = 'Ikura'; order no. refers to OrderID;,SELECT T2.Quantity FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T2.OrderID = 10273 AND T1.ProductName = 'Ikura'
retail_world,What is the total price of Ikura ordered in order no. 10273?,"total price = MULTIPLY(UnitPrice, Quantity); Ikura refers to ProductName = 'Ikura'; order no. refers to OrderID;",SELECT T2.UnitPrice * T2.Quantity FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T2.OrderID = 10273 AND T1.ProductName = 'Ikura'
retail_world,What is the total production of the product that is ordered in the highest quantity in order no. 10248?,"total production of the product = SUM(units in stock, units on order); order no. refers to OrderID;",SELECT T1.UnitsInStock + T1.UnitsOnOrder FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T2.OrderID = 10248 ORDER BY T2.Quantity DESC LIMIT 1
retail_world,"Of all the products ordered in order no. 10248, which product has the highest user satisfaction?",order no. refers to OrderID; highest user satisfaction refers to MAX(ReorderLevel);,SELECT T1.ProductName FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T2.OrderID = 10248 ORDER BY T1.ReorderLevel DESC LIMIT 1
retail_world,How many orders have asked for the product Tofu?,product refers to ProductName;,SELECT COUNT(T2.OrderID) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductName = 'Tofu'
retail_world,Please list the IDs of the orders with a product whose production is not continuous.,IDs of the orders refers to OrderID; production is not continuous refers to Discontinued = 1;,SELECT T2.OrderID FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Discontinued = 1
retail_world,"Of all the orders that have ordered Ikura, how many of them enjoys a unit price that's lower than its standard unit price?","Ikura refers to ProductName = 'Ikura'; ordered unit price that's lower than its standard unit price refers to ""Order Details"".UnitPrice < ""Product"".UnitPrice;",SELECT COUNT(T2.OrderID) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductName = 'Ikura' AND T2.UnitPrice < T1.UnitPrice
retail_world,What is the name of the supplier company for Aniseed Syrup?,name of the supplier refers to CompanyName; Aniseed Syrup refers to ProductName = 'Aniseed Syrup';,SELECT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ProductName = 'Aniseed Syrup'
retail_world,Please list the names of all the products whose supplier is in Japan.,names of the products refers to ProductName; Japan refers to Country = 'Japan';,SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.Country = 'Japan'
retail_world,Please list the phone numbers of the suppliers of the products that have a higher units on order than units in stock.,UnitsInStock < UnitsOnOrder;,SELECT DISTINCT T2.Phone FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.UnitsInStock < T1.UnitsOnOrder
retail_world,"Among the products that are no longer in continuous production, how many of them have their supplier in the USA?",no longer continuous refers to Discontinued = 1; USA refers to Country = 'USA';,SELECT COUNT(T1.Discontinued) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.Country = 'USA' AND T1.Discontinued = 1
retail_world,Who is the supplier of the product with the highest unit price?,supplier of the product refers to CompanyName; highest unit price refers to MAX(UnitPrice);,SELECT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.UnitPrice = ( SELECT MAX(UnitPrice) FROM Products )
retail_world,What is the average salary of the employees who takes charge of the sales of over 4 territories?,"average salary = DIVIDE(SUM(Salary), COUNT(EmployeeID)); employees who takes charge of over 4 territories refers to EmployeeID WHERE COUNT(TerritoryID) > 4;",SELECT AVG(T1.Salary) FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID GROUP BY T1.EmployeeID HAVING COUNT(T2.TerritoryID) > 4
retail_world,How much lower in percentage is the unit price of Ikura in order no. 10273 than its standard unit price?,"how much lower in percentage = MULTIPLY(DIVIDE(SUBTRACT(Products.UnitPrice, Order Details.UnitPrice), Products.UnitPrice), 100); Ikura refers to ProductName = 'Ikura'; order no. refers to OrderID;",SELECT CAST((T1.UnitPrice - T2.UnitPrice) AS REAL) * 100 / T1.UnitPrice FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T2.OrderID = 10273 AND T1.ProductName = 'Ikura'
retail_world,What is the average quantity of Ikura ordered in one order?,average = AVG(Quantity); Ikura refers to ProductName = 'Ikura';,SELECT CAST(SUM(T2.Quantity) AS REAL) / COUNT(T2.OrderID) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductName = 'Ikura'
retail_world,"Among the products ordered in order no. 10248, which product has the biggest ratio of units on order to units in stock?","order no. refers to OrderID; biggest ratio = MAX(DIVIDE(UnitsOnOrder, UnitsInStock));",SELECT T1.ProductName FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T2.OrderID = 10248 ORDER BY T1.UnitsOnOrder / T1.UnitsInStock DESC LIMIT 1
retail_world,Give the full name of the youngest employee.,"full name = FirstName, LastName; youngest refers to latest BirthDate;","SELECT FirstName, LastName FROM Employees WHERE BirthDate = ( SELECT MAX(BirthDate) FROM Employees )"
retail_world,Who is the newest hired employee? Give the full name.,"newest hired refers to latest HireDate; full name = FirstName, LastName;","SELECT FirstName, LastName FROM Employees WHERE HireDate = ( SELECT MAX(HireDate) FROM Employees )"
retail_world,Provide the number of orders that were handled by Michael Suyama.,,SELECT COUNT(T2.OrderID) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.FirstName = 'Michael' AND T1.LastName = 'Suyama'
retail_world,Give the name of the territory where Mr. Robert King works.,name of territory refers to TerritoryDescription; Mr. refers to TitleOfCourtesy = 'Mr';,SELECT T3.TerritoryDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.TitleOfCourtesy = 'Mr.' AND T1.FirstName = 'Robert' AND T1.LastName = 'King'
retail_world,Which territory does Ms. Laura Callahan's direct supervisor work in? Give the name of the territory.,Ms. refers to TitleOfCourtesy = 'Ms'; ReportsTo’ represents a hierarchical relationship where the person being reported to is usually the direct supervisor of the reporter; name of the territory refers to TerritoryDescription;,SELECT T3.TerritoryDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.EmployeeID = ( SELECT ReportsTo FROM Employees WHERE TitleOfCourtesy = 'Ms.' AND FirstName = 'Laura' AND LastName = 'Callahan' )
retail_world,"Who is in charge of the ""Santa Monica"" territory? Give the full name.","Santa Monica refers to TerritoryDescription = 'Santa Monica'; full name = FirstName, MiddleName, LastName;","SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T3.TerritoryDescription = 'Santa Monica'"
retail_world,"Give the home phone number of the employee who is in charge of ""Savannah"" territory.",home phone number refers to HomePhone; Savannah refers to TerritoryDescription = 'Savannah';,SELECT T1.HomePhone FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T3.TerritoryDescription = 'Savannah'
retail_world,"For the order from ""HILAA"" on 1997/12/25, what was the total quantity of the products in that order?",HILLA refers to CustomerID = 'HILAA'; on 1997/12/25 refers to OrderDate = '1997/12/25';,SELECT SUM(T2.Quantity) FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID WHERE T1.CustomerID = 'HILAA' AND T1.OrderDate LIKE '1997-12-25%'
retail_world,"For the order paying the highest freight, how many kinds of products does it contain?",highest freight refers to MAX(Freight); kinds of products refers to ProductID;,SELECT COUNT(T2.ProductID) FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID WHERE T1.Freight = ( SELECT MAX(Freight) FROM Orders ) GROUP BY T1.OrderID
retail_world,Tell the name of the shipper company for the order No.10585.,name of the shipper company refers to ShipName; order No. refers to OrderID;,SELECT T2.CompanyName FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T1.OrderID = 10585
retail_world,"Give the number of orders that were shipped by ""Federal Shipping"".",Federal Shipping refers to CompanyName = 'Federal Shipping';,SELECT COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Federal Shipping'
retail_world,"How many kinds of products are there in the the category of ""dairy products""?",kinds of products refers to ProductID; category refers to CategoryName;,SELECT COUNT(T1.ProductID) FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID WHERE T2.CategoryName = 'Dairy Products'
retail_world,"Which category does ""tofu"" belong to?",category refers to CategoryName; tofu refers to ProductName = 'Tofu';,SELECT T2.CategoryName FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID WHERE T1.ProductName = 'Tofu'
retail_world,What is the total production of the products from the supplier “Escargots Nouveaux”?,"total production of the products = add(units in stock , units on order); supplier “Escargots Nouveaux” refers to CompanyName = 'Escargots Nouveaux'",SELECT SUM(T1.UnitsInStock + T1.UnitsOnOrder) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Escargots Nouveaux'
retail_world,"Give the reorder level for the products from the supplier ""Nord-Ost-Fisch Handelsgesellschaft mbH"".","supplier ""Nord-Ost-Fisch Handelsgesellschaft mbH"" refers to CompanyName = 'Nord-Ost-Fisch Handelsgesellschaft mbH'",SELECT T1.ReorderLevel FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Nord-Ost-Fisch Handelsgesellschaft mbH'
retail_world,"How many kinds of products are supplied by ""Karkki Oy"" company?",supplied by refers to CompanyName,SELECT COUNT(T1.ProductID) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Karkki Oy'
retail_world,"Give the contact name of the supplier for the product ""Gudbrandsdalsost"".",product refers to ProductName,SELECT T2.ContactName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ProductName = 'Gudbrandsdalsost'
retail_world,"Tell the country name of the supplier for ""Scottish Longbreads"".","""Scottish Longbreads"" refers to ProductName = 'Scottish Longbreads'",SELECT T2.Country FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ProductName = 'Scottish Longbreads'
retail_world,"Give the number of territories in the ""Northern"" region.","""Northern"" region refers to RegionDescription = 'Northern'",SELECT COUNT(T1.TerritoryID) FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Northern'
retail_world,"Which region is ""Columbia"" in?","region refers to RegionID; ""Columbia"" refers to TerritoryDescription = 'Columbia'",SELECT T2.RegionDescription FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T1.TerritoryDescription = 'Columbia'
retail_world,"For the orders of Customer ""WHITC"", what is the percentage of the orders were fulfilled with shipper company ""United Package""?","Customer ""WHITC"" refers to CustomerID = 'WHITC'; shipper company ""United Package"" refers to CompanyName = 'United Package'; percentage = divide(count(ShipperID where CompanyName = 'United Package') , count(ShipperID)) * 100%",SELECT CAST(COUNT(CASE WHEN T2.CompanyName = 'United Package' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T1.CustomerID = 'WHITC'
retail_world,"How many percent more orders were fulfilled with shipper company ""United Package"" than with ""Speedy Express""?","percent = divide(subtract(count(OrderID where CompanyName = 'United Package') , count(OrderID where CompanyName = 'Speedy Express')) , count(OrderID where CompanyName = 'Speedy Express')) * 100%",SELECT CAST((COUNT(CASE WHEN T2.CompanyName = 'United Package' THEN 1 ELSE NULL END) - COUNT(CASE WHEN T2.CompanyName = 'Speedy Express' THEN 1 ELSE NULL END)) AS REAL) * 100 / COUNT(CASE WHEN T2.CompanyName = 'Speedy Express' THEN 1 ELSE NULL END) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID
retail_world,"How many times is the number of territories in ""Eastern Region"" than ""Southern Region""?","""Eastern Region"" refers to RegionDescription = 'Eastern'; ""Southern Region"" refers to RegionDescription = 'Southern'; times = divide(count(TerritoryDescription where RegionDescription = 'Eastern') , count(TerritoryDescription where RegionDescription = 'Southern'))",SELECT CAST(( SELECT COUNT(T1.TerritoryID) FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Eastern' ) AS REAL) / ( SELECT COUNT(T1.TerritoryID) FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Southern' ) AS Calu
retail_world,How many customers are there in the country with the highest number of customers?,highest number refers to max(count(CustomerID)),SELECT COUNT(CustomerID) FROM Customers GROUP BY Country ORDER BY COUNT(CustomerID) DESC LIMIT 1
retail_world,What are the order ids of the orders with freight of over 800?,freight of over 800 refers to Freight > 800,SELECT OrderID FROM Orders WHERE Freight > 800
retail_world,What is the Island Trading customer's complete address?,"Island Trading refers to CompanyName = 'Island Trading'; complete address = Address, City, Region, Country, PostalCode","SELECT Address, City, Region, Country, PostalCode FROM Customers WHERE CompanyName = 'Island Trading'"
retail_world,What is the most expensive product?,product refers to ProductName; most expensive refers to max(UnitPrice),SELECT ProductName FROM Products WHERE UnitPrice = ( SELECT MAX(UnitPrice) FROM Products )
retail_world,How many suppliers are there in the United States of America?,United States of America refers to Country = 'USA',SELECT COUNT(SupplierID) FROM Suppliers WHERE Country = 'USA'
retail_world,Which product have the highest user satisfaction?,product refers to ProductName; highest user satisfaction refers to max(ReorderLevel),SELECT ProductName FROM Products WHERE ReorderLevel = ( SELECT MAX(ReorderLevel) FROM Products )
retail_world,What is the full name of the employee with the highest salary?,full name refers to FirstName LastName; highest salary refers to max(Salary),"SELECT FirstName, LastName FROM Employees WHERE Salary = ( SELECT MAX(Salary) FROM Employees )"
retail_world,What are the names of the products that were discountinued?,discontinued refers to Discontinued = 1; name of products refers to ProductName,SELECT ProductName FROM Products WHERE Discontinued = 1
retail_world,What is the average salary of sales representatives in the United Kingdom?,average salary = avg(Salary); sales representative refers to Title = 'Sales Representative'; in the United Kingdom refers to Country = 'UK',SELECT AVG(Salary) FROM Employees WHERE Title = 'Sales Representative' AND Country = 'UK'
retail_world,What is the most widely used shipping company in the United States of America?,most widely used refers to max(count(ShipVia)); shipping company refers to CompanyName; in the United States of America refers to ShipCountry = 'USA',SELECT T2.CompanyName FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T1.ShipCountry = 'USA' GROUP BY T2.CompanyName ORDER BY COUNT(T2.CompanyName) DESC LIMIT 1
retail_world,"How many products were supplied by Pavlova, Ltd.?","Pavlova, Ltd. refers to CompanyName = 'Pavlova, Ltd.'","SELECT COUNT(T1.ProductName) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Pavlova, Ltd.'"
retail_world,How many orders were shipped to GREAL via United Package?,GREAL refers to CustomerID = 'GREAL'; via United Package refers to CompanyName = 'United Package',SELECT COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T1.CustomerID = 'GREAL' AND T2.CompanyName = 'United Package'
retail_world,What are the names of the suppliers whose products have the highest user satisfaction?,name of the supplier refers to SupplierID; highest user satisfaction refers to max(ReorderLevel),SELECT DISTINCT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ReorderLevel = ( SELECT MAX(ReorderLevel) FROM Products )
retail_world,"In total, how many orders were shipped via United Package?",via United Package refers to CompanyName = 'United Package',SELECT COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'United Package'
retail_world,How many suppliers in Australia whose products were discontinued?,in Australia refers to Country = 'Australia'; discontinued refers to Discontinued = 1,SELECT COUNT(T1.Discontinued) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.Discontinued = 1 AND T2.Country = 'Australia'
retail_world,"How much is the total purchase price, including freight, of the top 2 most expensive products?","total purchase price including freight refers to add(multiply(UnitPrice , Quantity) , Freight); most expensive refers to max(UnitPrice)",SELECT T2.UnitPrice * T2.Quantity + T1.Freight FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID ORDER BY T2.UnitPrice * T2.Quantity + T1.Freight DESC LIMIT 2
retail_world,What is the name of the supplier that supplies the most products to the company?,name of the supplier refers to SupplierID; the most product refers to max(count(ProductID)),SELECT T1.SupplierID FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID GROUP BY T1.SupplierID ORDER BY COUNT(*) DESC LIMIT 1
retail_world,What are the names of the products that were ordered that have a unit price of no more than 5?,unit price of no more than 5 refers to UnitPrice < 5; name of products refers to ProductName,SELECT DISTINCT T1.ProductName FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T2.UnitPrice < 5
retail_world,What is the title of the employee with the highest number of territories in charge?,highest number of territories refers to max(TerritoryID),SELECT T1.Title FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID GROUP BY T1.Title ORDER BY COUNT(T2.TerritoryID) DESC LIMIT 1
retail_world,What is the most ordered products by customers?,most ordered refers to max(count(ProductID)); product refers to ProductID,SELECT T1.ProductID FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID GROUP BY T1.ProductID ORDER BY COUNT(*) DESC LIMIT 1
retail_world,Which territories is the employee with a doctorate in charge of? List all of the territory descriptions.,with a doctorate refers to TitleOfCourtesy = 'Dr.',SELECT T3.TerritoryDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.TitleOfCourtesy = 'Dr.'
retail_world,What are the territory descriptions of territories in the Eastern region?,in the Eastern region refers to RegionDescription = 'Eastern',SELECT DISTINCT T1.TerritoryDescription FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Eastern' ORDER BY T1.TerritoryDescription
retail_world,What is the average number of territories do each sales representative is in charge of?,"sales representative refers to Title = 'Sales Representative'; average number of territories = divide(count(TerritoryID) , count(EmployeeID)) where Title = 'Sales Representative'",SELECT CAST(COUNT(T2.TerritoryID) AS REAL) / COUNT(DISTINCT T1.EmployeeID) FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.Title = 'Sales Representative'
retail_world,"Among the beverages, which product has the highest customer satisfaction?",beverage refers to CategoryName = 'Beverages'; highest customer satisfaction refers to max(ReorderLevel),SELECT T1.ProductName FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID WHERE T2.CategoryName = 'Beverages' ORDER BY T1.ReorderLevel DESC LIMIT 1
retail_world,What is the full name of the employee who handled the highest amount of orders?,full name refers to FirstName LastName; highest amount of orders refers to max(count(OrderID)),"SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID GROUP BY T1.FirstName, T1.LastName ORDER BY COUNT(*) DESC LIMIT 1"
retail_world,How many products were ordered in the order with the highest freight?,highest freight refers to max(Freight),SELECT COUNT(T2.ProductID) FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID GROUP BY T2.ProductID ORDER BY COUNT(T1.Freight) DESC LIMIT 1
retail_world,"Among the seafood products, which product have the highest total production of the production?","seafood product refers to CategoryName = 'Seafood'; product refers to ProductID; highest total production refers to max(add(units in stock, units on order))",SELECT T1.ProductName FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID WHERE T2.CategoryName = 'Seafood' ORDER BY T1.UnitsInStock + T1.UnitsOnOrder DESC LIMIT 1
retail_world,What is the difference in salary of the top 2 employees with the highest number of territories in charge?,"highest number of territories refers to max(TerritoryID); difference in salary = subtract(employeeA.Salary, employeeB.Salary)","SELECT MAX(Salary) - MIN(Salary) FROM ( SELECT T1.Salary FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID GROUP BY T1.EmployeeID, T1.Salary ORDER BY COUNT(T2.TerritoryID) DESC LIMIT 2 ) T1"
retail_world,What is the average price of products with more than fifty units in stock?,more than fifty units in stock refers to UnitsInStock > 50; average price = avg(UnitPrice where UnitsInStock > 50),SELECT SUM(UnitPrice) / COUNT(UnitPrice) FROM Products WHERE UnitsInStock > 50
retail_world,List the company names of customers from the city with the most customers.,most customers refers to max(count(Relationship)),SELECT CompanyName FROM `Customer and Suppliers by City` WHERE CITY = ( SELECT City FROM `Customer and Suppliers by City` GROUP BY City ORDER BY COUNT(Relationship) DESC LIMIT 1 )
retail_world,"Find and list the company name, company contact name, and contact title of customers from Madrid.",from Madrid refers to City = 'Madrid',"SELECT CompanyName, ContactName, ContactTitle FROM Customers WHERE City = 'Madrid'"
retail_world,Give the full name and contact number of employees in descending order of age.,full name refers to FirstName LastName; contact number refers to HomePhone; descending order of age refers to order by BirthDate desc limit 1,"SELECT FirstName, LastName, HomePhone FROM Employees ORDER BY BirthDate DESC"
retail_world,Calculate the average price of products shipped to the UK.,"average price = divide(sum(UnitPrice) , count(ProductID)); the UK refers to Country = 'UK'",SELECT AVG(UnitPrice) AS avg FROM Invoices WHERE Country = 'UK'
retail_world,"Among all the orders, which products sold for the most amount?",the most amount refers to max(sum(Quantity)),SELECT ProductID FROM `Order Details` GROUP BY ProductID ORDER BY SUM(Quantity) DESC LIMIT 1
retail_world,"List the name, address, and phone number of companies that supply products for more than thirty dollars per unit.",more than thirty dollars per unit refers to UnitPrice > 30,"SELECT T2.CompanyName, T2.Address, T2.Phone FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.UnitPrice > 30"
retail_world,"Among the customers, list customers' company names and addresses who paid more than average in freight.","paid more than average in freight refers to Freight > divide(sum(Freight) , count(OrderID))","SELECT DISTINCT T1.CompanyName, T1.Address FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Freight > ( SELECT AVG(Freight) FROM Orders )"
retail_world,"Find and list the full name of employees who are from the territory, Wilton.",full name refers to FirstName LastName; Wilton refers to TerritoryDescription = 'Wilton',"SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T3.TerritoryDescription = 'Wilton'"
retail_world,List the names of non-US suppliers that have discontinued.,non-US refers to Country <> 'USA'; discontinued refers to Discontinued = 1,SELECT DISTINCT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.Discontinued = 1 AND T2.Country != 'USA'
retail_world,List the top five most costly products in 1998.,"most costly refers to max(add(unit price , Freight)); in 1998 refers to OrderDate > = '1998-01-01 00:00:00' AND OrderDate < '1999-01-01 00:00:00'",SELECT T3.ProductName FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.OrderDate LIKE '1998%' ORDER BY T3.UnitPrice + T1.Freight DESC LIMIT 5
retail_world,"Of the customers who are from Canada, how many used Federal Shipping?",from Canada refers to Country = 'Canada'; Federal Shipping refers to ShipName = 'Federal Shipping',SELECT COUNT(T3.CustomerID) FROM Shippers AS T1 INNER JOIN Orders AS T2 ON T1.ShipperID = T2.ShipVia INNER JOIN Customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T2.ShipName = 'Federal Shipping'
retail_world,List the name of the top ten most ordered product's names in descending order of the number of orders.,most ordered refers to max(COUNT(OrderID)),SELECT T3.ProductName FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID GROUP BY T3.ProductName ORDER BY COUNT(*) DESC LIMIT 10
retail_world,Which supplier supplies the most amount of products?,supplier refers to SupplierID; most amount refers to max(count(ProductID)),"SELECT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID GROUP BY T2.SupplierID, T2.CompanyName ORDER BY COUNT(T1.ProductName) DESC LIMIT 1"
retail_world,Please list the full name and region of each employee in alphabetical order.,full name refers to FirstName LastName; region refers to RegionDescription,"SELECT DISTINCT T1.FirstName, T1.LastName, T4.RegionDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID INNER JOIN Region AS T4 ON T3.RegionID = T4.RegionID ORDER BY T1.FirstName"
retail_world,"Which employee handled the most amount of orders in 1996? Give the full name, title, and address of this employee.","most amount of orders refers to max(count(OrderID)); in 1996 refers to OrderDate > = '1996-01-01 00:00:00' AND OrderDate < '1997-01-01 00:00:00'; full name refers to FirstName, LastName","SELECT FirstName, LastName, Title, address FROM Employees WHERE EmployeeID = ( SELECT T1.EmployeeID FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.OrderDate BETWEEN '1996-01-01 00:00:00' AND '1997-01-01 00:00:00' GROUP BY T1.EmployeeID ORDER BY COUNT(T2.OrderID) DESC LIMIT 1 )"
retail_world,What was the average unit price of products shipped via United Package in 1997?,"via United Package refers to CompanyName = 'United Package'; in 1997 refers to OrderDate > = '1997-01-01 00:00:00' AND OrderDate < '1998-01-01 00:00:00'; average unit price = divide(sum(UnitPrice), count(ShipperID))",SELECT AVG(T2.UnitPrice) FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Shippers AS T3 ON T1.ShipVia = T3.ShipperID WHERE T1.OrderDate LIKE '1997%' AND T3.CompanyName = 'United Package'
retail_world,Calculate the percentage of shipping done through Speedy Express.,"through Speedy Express refers to CompanyName = 'Speedy Express'; percentage = divide(count(ShipperID where CompanyName = 'Speedy Express') , count(ShipperID)) * 100%",SELECT CAST(COUNT(CASE WHEN T2.CompanyName = 'Speedy Express' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ShipVia) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID
retail_world,Indicate the courtesy title of the 3 employees who have the lowest salary.,courtesy title refers to TitleOfCourtesy; the lowest salary refers to MIN(Salary);,SELECT TitleOfCourtesy FROM Employees ORDER BY Salary LIMIT 3
retail_world,What is the last name of the employees who must report to the Vice President of Sales?,"report to represents a hierarchical relationship where the person being reported to is usually the direct supervisor of the reporter; Vice President of Sales refers to Title = 'Vice President, Sales';","SELECT LastName FROM Employees WHERE ReportsTo = ( SELECT EmployeeID FROM Employees WHERE Title = 'Vice President, Sales' )"
retail_world,What is the highest total price paid for an order?,"the highest total price paid for an order can be calculated as MAX(MULTIPLY(UnitPrice, Quantity, SUBTRACT(1-Discount)));",SELECT UnitPrice * Quantity * (1 - Discount) AS THETOP FROM `Order Details` ORDER BY UnitPrice * Quantity * (1 - Discount) DESC LIMIT 1
retail_world,Which 3 products are produced in greater quantity?,"3 products produced in greater quantity refer to MAX(SUM(UnitsInStock, UnitsOnOrder)) Limit 3;",SELECT ProductName FROM Products ORDER BY UnitsInStock + UnitsOnOrder DESC LIMIT 3
retail_world,"Of the 10 products with the highest unit price, identify by their ID the ones that have generated the least satisfaction.",High reorder level generally means high user satisfaction of the product and vice versa; the least satisfaction refers to MIN(ReorderLevel); the highest unit price refers to MAX(UnitPrice);,"SELECT ProductID FROM Products ORDER BY ReorderLevel ASC, UnitPrice DESC LIMIT 1"
retail_world,How many non-discontinued products are there in the dairy category?,non-discontinued products in the dairy category refer to ProductID where Discontinued = 0 and CategoryName = 'Dairy Products';,SELECT COUNT(T1.CategoryID) FROM Categories AS T1 INNER JOIN Products AS T2 ON T1.CategoryID = T2.CategoryID WHERE T1.CategoryName = 'Dairy Products' AND T2.Discontinued = 0
retail_world,What territories is the Inside Sales Coordinator in charge of?,territories refer to TerritoryDescription; Title = 'Inside Sales Coordinator';,SELECT T3.TerritoryDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.Title = 'Inside Sales Coordinator'
retail_world,"Indicate the name of the companies that have freighted products for a value greater than 2,000,000.","freighted products for a value greater than 2,000,000 refer to Freight > 2000000; name of companies refers to CompanyName;",SELECT T1.CompanyName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Freight > 2000000
retail_world,Through which companies have products been shipped the most times to the city of Aachen?,shipped the most times refer to MAX(COUNT(ShipVia)); city of Aachen refers to ShipCity = 'Aache'; companies refers to CompanyName;,SELECT T2.CompanyName FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T1.ShipCity = 'Aachen' GROUP BY T2.CompanyName ORDER BY COUNT(T1.ShipVia) DESC LIMIT 1
retail_world,List the full name of all employees who work in the Northern region.,"full names = FirstName, LastName; Northern region refers to RegionDescription = 'Northern';","SELECT DISTINCT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID INNER JOIN Region AS T4 ON T3.RegionID = T4.RegionID WHERE T4.RegionDescription = 'Northern'"
retail_world,What is the name of the contact person of the Pavlova supplier company?,contact person refers to ContactName; Pavlova is the name of the product;,SELECT T2.ContactName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ProductName = 'Pavlova'
retail_world,Indicate the name of the products that have been shipped to the city of Paris.,shipped to the city of Paris refers to ShipCity = 'Paris';,SELECT T3.ProductName FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.ShipCity = 'Paris'
retail_world,What product is the least shipped to the postal code 28023?,the least shipped product refers ProductName where MIN(Quantity);,SELECT T4.ProductName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID INNER JOIN Products AS T4 ON T3.ProductID = T4.ProductID WHERE T1.PostalCode = 28023 ORDER BY T3.Quantity LIMIT 1
retail_world,What is the full name of the employee in charge of the Southern region who is to report to Andrew Fuller?,"full names = FirstName, LastName; report to represents a hierarchical relationship where the person being reported to is usually the direct supervisor of the reporter; Andrew Fuller refers to Employees WHERE FirstName = 'Andrew' AND LastName = 'Fuller'; Southern region refers to RegionDescription = 'Southern';","SELECT DISTINCT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID INNER JOIN Region AS T4 ON T3.RegionID = T4.RegionID WHERE T4.RegionDescription = 'Southern' AND T1.ReportsTo = ( SELECT EmployeeID FROM Employees WHERE FirstName = 'Andrew' AND LastName = 'Fuller' )"
retail_world,On what date did the Du monde entier company request that 9 units of Filo Mix be sent to it?,9 units of Filo Mix refer to ProductName where Quantity = 9; Du monde entier is the name of the customer; date refers to OrderDate;,SELECT T2.OrderDate FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID INNER JOIN Products AS T4 ON T3.ProductID = T4.ProductID WHERE T4.ProductName = 'Filo Mix' AND T3.Quantity = 9 AND T1.CompanyName = 'Du monde entier'
retail_world,Indicate the name of the categories to which the products of order number 10933 belong.,order number 10933 refers to OrderID = 10933;,SELECT T3.CategoryName FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Categories AS T3 ON T1.CategoryID = T3.CategoryID WHERE T2.OrderID = 10933
retail_world,What is the phone number for the employee in charge of the Portsmouth territory?,phone refers to HomePhone; Portsmouth territory refers to TerritoryDescription = 'Portsmouth';,SELECT T1.HomePhone FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T3.TerritoryDescription = 'Portsmouth'
retail_world,What is the average quantity of product that have been shipped by Federal Shipping in November 1996?,"Federal Shipping refers to CompanyName = 'Federal Shipping'; DIVIDE(SUM(Quantity), COUNT(ProductID)) where CompanyName = 'Federal Shipping' and ShippedDate > = '1996-11-01 00:00:00' AND ShippedDate < '1996-12-01 00:00:00';",SELECT CAST(SUM(T2.Quantity) AS REAL) / COUNT(T2.OrderID) FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Shippers AS T3 ON T1.ShipVia = T3.ShipperID WHERE T1.ShippedDate LIKE '1996-11%' AND T3.CompanyName = 'Federal Shipping'
retail_world,"Of all the shipments made by United Package throughout the year 1996, what percentage correspond to the month of September?","DIVIDE(COUNT(OrderID where CompanyName = 'United Package' and ShippedDate > = '1996-09-01 00:00:00' AND ShippedDate < '1996-09-30 00:00:00')), (COUNT(OrderID where CompanyName = 'United Package' and ShippedDate > = '1996-01-01 00:00:00' AND ShippedDate < '1997-01-01 00:00:00')) as percentage; 
",SELECT CAST(COUNT(CASE WHEN T1.ShippedDate LIKE '1996-09%' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ShipVia) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'United Package' AND T1.ShippedDate LIKE '1996%'
retail_world,How many owners are located in Mexico?,owners in Mexico refer to ContactTitle where Country = 'Mexico';,SELECT COUNT(ContactTitle) FROM Customers WHERE Country = 'Mexico' AND ContactTitle = 'Owner'
retail_world,What is the full address of Andr Fonseca?,"full address includes Address, City, Region, PostalCode and Country; ContactName = 'Andr Fonseca';","SELECT Address, City, Region, PostalCode, Country FROM Customers WHERE ContactName = 'Andr Fonseca'"
retail_world,What are the companies that have the same phone area code as 171?,phone area code as 171 refers to Phone LIKE '(171)%'; companies refer to CompanyName;,SELECT CompanyName FROM Customers WHERE Phone LIKE '(171)%'
retail_world,What is the difference in the number of employees from the UK and the USA who work as sales representatives?,"SUBTRACT(COUNT(EmployeeID where Country = 'UK' and Title = 'sales representative'), COUNT(EmployeeID where Country = 'USA' and Title = 'sales representative'));",SELECT ( SELECT COUNT(Title) FROM Employees WHERE Country = 'UK' AND Title = 'Sales Representative' ) - ( SELECT COUNT(Title) FROM Employees WHERE Country = 'USA' AND Title = 'Sales Representative' ) AS DIFFERENCE
retail_world,"How many sales associates are located in Sao Paulo, Brazil?",sales associates refer to ContactTitle; Sao Paulo is the name of the city in the country Brazil;,SELECT COUNT(CustomerID) FROM Customers WHERE City = 'Sao Paulo' AND Country = 'Brazil' AND ContactTitle = 'Sales Associate'
retail_world,What is the family name of the employee who shipped the order 10521 to CACTU?,order 10521 refers to OrderID = 10521; CustomerID = 'CACTU'; family name refers to LastName;,SELECT T1.LastName FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.OrderID = 10521 AND T2.CustomerID = 'CACTU'
retail_world,What is the shipping cost for order number 10692 from the company Alfreds Futterkiste?,Alfreds Futterkiste is the name of the company; order number 10692 refers to OrderID = 10692;,SELECT T2.Freight FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.OrderID = 10692 AND T1.CompanyName = 'Alfreds Futterkiste'
retail_world,What is the shipping company for order number 10558?,order number 10558 refers to OrderID = 10558;,SELECT T2.CompanyName FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T1.OrderID = 10558
retail_world,Please list any three order numbers that have been shipped using Speedy Express.,Speedy Express is the name of the shipping company; three order numbers refer to OrderID LIMIT 3;,SELECT T1.OrderID FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Speedy Express' LIMIT 3
retail_world,What are the products that belong to the beverage category?,products belong to beverage category refer to ProductName where CategoryName = 'beverage';,SELECT T2.ProductName FROM Categories AS T1 INNER JOIN Products AS T2 ON T1.CategoryID = T2.CategoryID WHERE T1.CategoryName = 'Beverages'
retail_world,What is the description of the category that tofu belongs to?,tofu is the name of the product;,SELECT T1.Description FROM Categories AS T1 INNER JOIN Products AS T2 ON T1.CategoryID = T2.CategoryID WHERE T2.ProductName = 'tofu'
retail_world,Which company supplies Gula Malacca?,Gula Malacca is the name of the product; company refers to CompanyName;,SELECT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ProductName = 'Gula Malacca'
retail_world,What are the products that are supplied by Aux joyeux ecclsiastiques?,Aux joyeux ecclsiastiques is the name of supply company; products refer to ProductName;,SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Aux joyeux ecclsiastiques'
retail_world,How much per unit of Konbu does Mayumi's charge?,Mayumi's is the name of the company; how much per unit of Konbu refers to UnitPrice where ProductName = 'Konbu';,SELECT T1.UnitPrice FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName LIKE 'Mayumi%' AND T1.ProductName = 'Konbu'
retail_world,Who is the person to contact to get Camembert Pierrot?,Camembert Pierrot is the name of the product; person to contact refers to ContactName;,SELECT T2.ContactName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ProductName = 'Camembert Pierrot'
retail_world,Please name any three products that have been discontinued in the meat or poultry category.,three products that have been discontinued refer to ProductName LIMIT 3 where Discontinued = 1; CategoryName = 'Meat/Poultry';,SELECT T2.ProductName FROM Categories AS T1 INNER JOIN Products AS T2 ON T1.CategoryID = T2.CategoryID WHERE T2.Discontinued = 1 AND T1.CategoryName = 'Meat/Poultry' LIMIT 3
retail_world,Please name any two products that have the highest satisfaction levels among users of Heli Swaren GmbH & Co. KG.,High reorder level generally means high user satisfaction; the highest satisfaction levels refer to MAX(ReorderLevel); two products refer to ProductName LIMIT 2; CompanyName = 'Heli Swaren GmbH & Co. KG';,SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Heli Swaren GmbH & Co. KG' ORDER BY T1.ReorderLevel DESC LIMIT 2
retail_world,"Who is the one representing the company ""Heli Swaren GmbH & Co. KG""?",Heli Swaren GmbH & Co. KG is the name of the company; who is representing refers to ContactName;,SELECT ContactName FROM Suppliers WHERE CompanyName = 'Heli Swaren GmbH & Co. KG'
retail_world,"From which country is the company ""Drachenblut Delikatessen"" from?",Drachenblut Delikatessen is the company name;,SELECT Country FROM Customers WHERE CompanyName = 'Drachenblut Delikatessen'
retail_world,How many territories are there?,,SELECT COUNT(TerritoryID) FROM Territories
retail_world,What is the largest total price for an order?,"the largest total price for an order can be calculated as MAX(MULTIPLY(UnitPrice, Quantity, SUBTRACT(1-Discount)));",SELECT SUM(UnitPrice) FROM `Order Details` GROUP BY OrderID ORDER BY SUM(UnitPrice) DESC LIMIT 1
retail_world,Which product is the most expensive?,most expensive product refers to ProductName where MAX(UnitPrice);,SELECT ProductName FROM Products WHERE UnitPrice = ( SELECT MAX(UnitPrice) FROM Products )
retail_world,How many of the orders are shipped to France?,shipped to France refers to ShipCountry = 'France';,SELECT COUNT(ShipCountry) FROM Orders WHERE ShipCountry = 'France'
retail_world,Which region does Hoffman Estates belong to?,Hoffman Estates refer to TerritoryDescription;,SELECT T2.RegionDescription FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T1.TerritoryDescription = 'Hoffman Estates'
retail_world,"What is the homepage link for the company that supplies the product ""Thringer Rostbratwurst""?",ProductName = 'Thringer Rostbratwurst';,SELECT T2.HomePage FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ProductName = 'Thringer Rostbratwurst'
retail_world,"List the first names of the employees who take the orders that ship to the city of ""Reims"".","ship to the city of ""Reims"" refers to ShipCity = Reims';",SELECT DISTINCT T1.FirstName FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.ShipCity = 'Reims'
retail_world,"What is the largest quantity of ""Manjimup Dried Apples"" for an order?","the largest quantity of ""Manjimup Dried Apples"" refers to MAX(Quantity) where ProductName = 'Manjimup Dried Apples';",SELECT T2.Quantity FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T2.ProductID = T1.ProductID WHERE T1.ProductName = 'Manjimup Dried Apples' ORDER BY T2.Quantity DESC LIMIT 1
retail_world,"How many orders were shipped by ""Speedy Express""?","""Speedy Express"" is the name of the shipping company; orders refer to OrderID;",SELECT COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Speedy Express'
retail_world,Make a list of all the territories in the Southern region.,territories in the Southern region refer to TerritoryDescription WHERE RegionDescription = 'Southern';,SELECT DISTINCT T1.TerritoryDescription FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Southern'
retail_world,What are the prices on cheese products?,prices on cheese refer to UnitPrice WHERE Description = 'Cheeses';,SELECT T2.UnitPrice FROM Categories AS T1 INNER JOIN Products AS T2 ON T1.CategoryID = T2.CategoryID WHERE T1.Description = 'Cheeses'
retail_world,"How many orders did ""Laughing Bacchus Wine Cellars"" make?","""Laughing Bacchus Wine Cellars"" is the name of the company; orders refer to OrderID;",SELECT COUNT(T2.OrderID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CompanyName = 'Laughing Bacchus Wine Cellars'
retail_world,List all the products that were shipped to Starenweg 5.,products shipped to Starenweg 5 refer to ProductName where ShipAddress = 'Starenweg 5';,SELECT T3.ProductName FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.ShipAddress = 'Starenweg 5' GROUP BY T3.ProductName
retail_world,"What are the products by the company ""Bigfoot Breweries""?",Bigfoot Breweries is the name of the company; products refer to ProductName;,SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Bigfoot Breweries'
retail_world,What are the names of Robert King's territories?,Robert King is a full name of an employee where LastName = 'King' AND FirstName = 'Robert'; names of territories refer to TerritoryDescription;,SELECT T3.TerritoryDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.LastName = 'King' AND T1.FirstName = 'Robert'
retail_world,Provide the name of the contact person who made the orders that shipped to Switzerland.,shipped to Switzerland refers to ShipCountry = 'Switzerland'; contact person refers to Customers;,SELECT T1.ContactName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.ShipCountry = 'Switzerland' GROUP BY T1.ContactName
retail_world,What proportion of orders are taken by the Sales Representative?,"DIVIDE(COUNT(OrderID where Title = 'Sales Representative'), COUNT(OrderID)) as percentage;",SELECT CAST(COUNT(CASE WHEN T1.Title = 'Sales Representative' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.OrderID) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID
retail_world,"Among the USA employess, how many of them has PhD title of courtesy?","""USA"" is the Country; PhD title of courtesy refers to TitleOfCourtesy = 'Dr.'",SELECT COUNT(Country) FROM Employees WHERE TitleOfCourtesy = 'Dr.' AND Country = 'USA'
retail_world,What is the average salary for employees from ID 1 to 9?,ID 1 to 9 refers to EmployeeID BETWEEN 1 AND 9; Average salary = AVG(Salary),SELECT AVG(Salary) FROM Employees WHERE EmployeeID BETWEEN 1 AND 9
retail_world,Calculate the total salary for employees from UK.,"""UK"" is the Country; total salary refers to Sum(Salary)",SELECT SUM(Salary) FROM Employees WHERE Country = 'UK'
retail_world,Is (206) 555-1189 the home phone number for Laura Callahan?,"""Laura Callahan"" refers to FirstName = 'Laura AND LastName = 'Callahan",SELECT CASE WHEN HomePhone = '(206) 555-1189' THEN 'YES' ELSE 'NO' END FROM Employees WHERE FirstName = 'Laura' AND LastName = 'Callahan'
retail_world,Write down the notes of employee with the highest salary.,highest salary refers to Max(Salary),SELECT Notes FROM Employees WHERE Salary = ( SELECT MAX(Salary) FROM Employees )
retail_world,List down the customer ids who placed order with Michael Suyama.,,SELECT T2.CustomerID FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.FirstName = 'Michael' AND T1.LastName = 'Suyama'
retail_world,Where are the ship countries of orders placed by Janet Leverling?,,SELECT DISTINCT T2.ShipCountry FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.FirstName = 'Janet' AND T1.LastName = 'Leverling'
retail_world,How many orders have Margaret Peacock placed?,,SELECT COUNT(T2.EmployeeID) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.FirstName = 'Margaret' AND T1.LastName = 'Peacock'
retail_world,Calculate the average salary per order for Andrew Fuller.,average salary = AVG(Salary),SELECT CAST(SUM(T1.Salary) AS REAL) / COUNT(T2.EmployeeID) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.FirstName = 'Andrew' AND T1.LastName = 'Fuller'
retail_world,What are the product names of Exotic Liquids?,"""Exotic Liquids"" is the CompanyName",SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Exotic Liquids'
retail_world,List down the quantity per unit for products of Tokyo Traders.,"""Tokyo Traders"" is the CompanyName",SELECT T1.QuantityPerUnit FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Tokyo Traders'
retail_world,How many products have been discountinued by New Orleans Cajun Delights?,"""New Orleans Cajun Delights"" is the CompanyName; discontinued refers to Discontinued = 1",SELECT COUNT(T1.Discontinued) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'New Orleans Cajun Delights'
retail_world,Please calculate the average unit price for products of Formaggi Fortini s.r.l.,"""Formaggi Fortini s.r.l."" is the CompanyName; average unit price = AVG(UnitPrice)",SELECT SUM(T1.UnitPrice) / COUNT(T1.SupplierID) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Formaggi Fortini s.r.l.'
retail_world,Calculate the total products that are supplied by Japan suppliers.,Japan Supplier refers to Country = 'Japan'; total product refers to Count (ProductName),SELECT COUNT(T1.SupplierID) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.Country = 'Japan'
retail_world,What is the contact name for product Teatime Chocolate Biscuits?,"""Teatime Chocolate Biscuits"" is the ProductName",SELECT T2.ContactName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ProductName = 'Teatime Chocolate Biscuits'
retail_world,List down the company names that have the highest reorder level.,Highest reorder level refers to Max(ReorderLevel),SELECT DISTINCT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ReorderLevel = ( SELECT MAX(ReorderLevel) FROM Products )
retail_world,What is the contact title for the person who supplied a product that is 10 boxes x 12 pieces.,"""10 boxes x 12 pieces"" is the QuantityPerUnit",SELECT T2.ContactTitle FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.QuantityPerUnit = '10 boxes x 12 pieces'
retail_world,What is the total units on order from Exotic Liquids?,"""Exotic Liquids"" is the CompanyName; total unit on order = Sum(UnitsOnOrder)",SELECT SUM(T1.UnitsOnOrder) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Exotic Liquids'
retail_world,Calculate the percentage of products supplied by Gai pturage over all products.,"""Gai pturage"" is the CompanyName; Percentage = Divide (Count(SupplierID where CompanyName = 'Gai pturage'), Count (SupplierID)) * 100",SELECT CAST(COUNT(CASE WHEN T2.CompanyName = 'Gai pturage' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.SupplierID) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID
retail_world,"List the product ID of the top five products, by descending order, the number of quantities in stock.",by descending in number of quantity in stock refers to max(UnitsInStock),SELECT ProductID FROM Products ORDER BY UnitsInStock DESC LIMIT 5
retail_world,"Among the products, how many of them were discontinued in production?",discontinued refers to Discontinued = 1,SELECT COUNT(*) FROM Products WHERE Discontinued = 1
retail_world,"Give me the address, home phone and salary of the Sales Manager.","""Sales Manage"" is the Title","SELECT Address, HomePhone, Salary FROM Employees WHERE Title = 'Sales Manager'"
retail_world,What is the full name of the Vice President of Sales. Give me the URL of his/her photo.,"""Vice Present of Sales"" refers to Title = 'Vice President, Sales'; full name refers to FirstName, LastName; url of photo refers to PhotoPath","SELECT FirstName, LastName FROM Employees WHERE Title = 'Vice President, Sales'"
retail_world,Write down the top ten companies with the most total sales by amount.,most total sales refers to Max(SaleAmount); companies refers to CompanyName,SELECT CompanyName FROM `Sales Totals by Amount` ORDER BY SaleAmount DESC LIMIT 10
retail_world,What is the average sales for each categories?,average sales = AVG(ProductSales),SELECT AVG(ProductSales) FROM `Sales by Category` GROUP BY CategoryName
retail_world,Compute the total order quantity for Uncle Bob's Organic Dried Pears so far.,"""Uncle Bob's Organic Dried Pears"" is the ProductName; total order quantity refers to Sum(Quantity)",SELECT SUM(T2.Quantity) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductName LIKE 'Uncle Bob%s Organic Dried Pears'
retail_world,"Among the seafoods, how many of them have an order quantity of more than 50?","""Seafood"" is the CategoryName; order quantity of more than 50 refers to Quantity > 50",SELECT COUNT(T1.ProductID) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Categories AS T3 ON T1.CategoryID = T3.CategoryID WHERE T3.CategoryName = 'Seafood' AND T2.Quantity > 50
retail_world,"List the products whose supplier is Pavlova, Ltd. Please include the product ID and re-order level.","""Pavlova, Ltd"" is the CompanyName; products refers to ProductName","SELECT T1.ProductName, T1.ProductID, T1.ReorderLevel FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Pavlova, Ltd.'"
retail_world,Who are the suppliers of the discontinued products?,discontinued product refers to Discontinued = 1; supplier refers to CompanyName,SELECT DISTINCT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.Discontinued = 1
retail_world,"Among the employees, give me the full names of those who have less than 4 territories.",less than 4 territories refers to EmployeeID where Count(TerritoryID) < 4,"SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.EmployeeID < 4"
retail_world,How many employees have territories in the Eastern region?,"""Eastern"" is the RegionDescription",SELECT COUNT(DISTINCT T1.FirstName) FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID INNER JOIN Region AS T4 ON T3.RegionID = T4.RegionID WHERE T4.RegionDescription = 'Eastern'
retail_world,"From 1/3/97 to 8/10/97, how many orders were shipped via Federal Shipping?",from 1/3/97 to 8/10/97 refers to 1997-03-01 < ShippedDate < 1997-10-08; 'Federal Shipping' is the CompanyName,SELECT COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Federal Shipping' AND T1.ShippedDate BETWEEN '1997-03-01 00:00:00' AND '1997-10-08 23:59:59'
retail_world,Tally the customer ID of orders that were shipped to Brazil by Margaret Peacock from 3/31/97 to 12/10/97.,"""Brazil"" is the ShipCountry; from 3/31/97 to 12/10/97 refers to 1997-03-31 < ShippedDate < 1997-10-12",SELECT DISTINCT T2.CustomerID FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.LastName = 'Peacock' AND T1.FirstName = 'Margaret' AND T2.ShipCountry = 'Brazil' AND T2.ShippedDate BETWEEN '1997-03-31 00:00:00' AND '1997-12-10 23:59:59'
retail_world,What is the re-order level of products that have an order quantity of 1?,order quantity of 1 refers to Quantity = 1,SELECT T1.ReorderLevel FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Quantity = 1
retail_world,What is the stock value of every condiments?,"""Condiments"" is the CategoryName; Stock value = MULTIPLY( UnitPrice, UnitInStock)",SELECT T1.UnitPrice * T1.UnitsInStock FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID
retail_world,How many territories are owned by Anne Dodsworth?,,SELECT COUNT(T2.TerritoryID) FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.FirstName = 'Anne' AND T1.LastName = 'Dodsworth'
retail_world,Which of the American customers have experienced a delay in the shipment and how long was the longest?,"""American"" refers to Country = 'USA'; longest delay in shipment refers to Max(Subtract(RequiredDate, ShippedDate)); customer refers to CustomerID","SELECT T1.CompanyName, TIMESTAMPDIFF(DAY, T2.ShippedDate, T2.RequiredDate) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Country = 'USA' AND TIMESTAMPDIFF(DAY, T2.ShippedDate, T2.RequiredDate) < 0"
retail_world,What is the contact name and phone number of the customer who has made the most total payment on the order to date?,"most total payment = Max(Multiply(Quantity, UnitPrice, Subtract(1, Discount)))","SELECT T1.ContactName, T1.Phone FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID GROUP BY T2.OrderID, T1.ContactName, T1.Phone ORDER BY SUM(T3.UnitPrice * T3.Quantity * (1 - T3.Discount)) DESC LIMIT 1"
retail_world,Who is the sales representative of the customer who has made the highest payment? Include the full name of employee and his/her supervisor.,"highest payment refers to Max(Multiply(Quantity, UnitPrice, Subtract(1, Discount))); full name refers to FirstName, LastName; his/her supervisor refers to 'ReportsTo'","SELECT T4.LastName, T4.FirstName, T4.ReportsTo , T1.Quantity * T1.UnitPrice * (1 - T1.Discount) AS payment FROM `Order Details` AS T1 INNER JOIN Orders AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Customers AS T3 ON T2.CustomerID = T3.CustomerID INNER JOIN Employees AS T4 ON T2.EmployeeID = T4.EmployeeID ORDER BY payment DESC LIMIT 1"
retail_world,"How many customers are there in Berlin, Germany?","""Berlin"" is the City; 'Germany' is the Country",SELECT COUNT(City) FROM Customers WHERE Country = 'Germany' AND City = 'Berlin'
retail_world,How many products does the company Exotic Liquids supply?,"""Exotic Liquids"" is the CompanyName of supplier",SELECT COUNT(T1.ProductName) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Exotic Liquids'
retail_world,Which company has the lowest unit price? Please give the company name and the product name.,lowest unit price refers to Min(UnitPrice),"SELECT T2.CompanyName, T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.UnitPrice = ( SELECT MIN(UnitPrice) FROM Products )"
retail_world,What is the average unit price of Tokyo Traders' products?,"""Tokyo Traders"" is the CompanyName; average unit price = AVG(UnitPrice)",SELECT SUM(T1.UnitPrice) / COUNT(T2.SupplierID) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Tokyo Traders'
retail_world,How many territories are there in the Eastern region?,"""Eastern"" is the RegionDescription",SELECT COUNT(T1.RegionID) FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Eastern'
retail_world,Which region has the most territories?,region refers to RegionDescription; most territories refers to Max(Count(TerritoryID)),SELECT T2.RegionID FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID GROUP BY T2.RegionID ORDER BY COUNT(T1.TerritoryID) DESC LIMIT 1
retail_world,Which region does territory id 2116 belong to?,region refers to RegionDescription,SELECT T2.RegionDescription FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T1.TerritoryID = 2116
retail_world,What percentage of orders were placed by customers in Madrid city in 1996?,"""Madrid"" is the City; in 1996 refers to YEAR (OrderDate) = 1996; percentage = Divide (Count (CustomerID where City = 'Madrid'), Count (CustomerID)) * 100","SELECT CAST(COUNT(CASE WHEN T1.City = 'Madrid' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.City) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y', T2.OrderDate) = 1996"
retail_world,Please list the full names and titles of all employees.,"full name refers to LastName, FirstName","SELECT FirstName, LastName, Title FROM Employees"
retail_world,Who has the highest salary? Please give their first name.,highest salary refers to Max(Salary),"SELECT FirstName, LastName FROM Employees WHERE Salary = ( SELECT MAX(Salary) FROM Employees )"
retail_world,How many sales representatives whose salaries are higher than 2000?,"""Sales Representative"" is the Title; higher than 2000 refers to Salary > 2000",SELECT COUNT(Title) FROM Employees WHERE Salary > 2000 AND Title = 'Sales Representative'
retail_world,"In 1996, how many orders were from customers in the UK?",in 1996 refers to YEAR (OrderDate) = 1996; 'UK' is the Country;,"SELECT COUNT(T1.CustomerID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y', T2.OrderDate) = '1996' AND T1.Country = 'UK'"
retail_world,Which company had the most orders in 1998?,in 1998 refers to YEAR (OrderDate) = 1998; most orders = Max(Count(CustomerID)); company refers to CompanyName,"SELECT T1.CompanyName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y', T2.OrderDate) = '1998' GROUP BY T1.CompanyName ORDER BY COUNT(T2.OrderID) DESC LIMIT 1"
retail_world,Please calculate the number of orders from customers by country in 1996.,in 1996 refer to YEAR(OrderDate) = 1996; number of order = Count(OrderID),"SELECT COUNT(T2.CustomerID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y', T2.OrderDate) = '1996' GROUP BY T1.Country"
retail_world,How many orders were from Hanna Moos company in 1999?,"""Hanna Moos"" is the CompanyName; in 1999 refer to YEAR (OrderDate) = 1999","SELECT COUNT(T2.OrderID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y', T2.OrderDate) = '1999' AND T1.CompanyName = 'Hanna Moos'"
retail_world,How many days was the fastest shipping of Berglunds snabbkp's order?,"Berglunds snabbkp is the CompanyName; fastest shipping = Min(Subtract(ShippedDate, OrderDate))","SELECT datediff(T2.ShippedDate, T2.OrderDate) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CompanyName = 'Berglunds snabbkp' ORDER BY datediff(T2.ShippedDate, T2.OrderDate) LIMIT 1"
retail_world,Which company placed the order with the id 10257?,"""10257"" is the OrderID; company refers to CompanyName",SELECT T1.CompanyName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.OrderID = 10257
retail_world,In which year did Around the Horn place the most orders?,Around the Horn is the CompanyName; year with the most order refers to Year (OrderDate) where Max(Count(OrderID)),"SELECT STRFTIME('%Y', T2.OrderDate) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CompanyName = 'Around the Horn' GROUP BY STRFTIME('%Y', T2.OrderDate) ORDER BY COUNT(T2.OrderID) DESC LIMIT 1"
retail_world,How many employees report to Andrew Fuller?,"""Andrew Fuller"" refers to FirstName = 'Andrew' AND LastName = 'Fuller'; report to refers to ReportsTo ! = NULL",SELECT COUNT(EmployeeID) FROM Employees WHERE ReportsTo = ( SELECT EmployeeID FROM Employees WHERE LastName = 'Fuller' AND FirstName = 'Andrew' )
retail_world,Which country are the majority of the suppliers located?,majority of the suppliers located refers to MAX(COUNT(SupplierID)),SELECT Country FROM Suppliers GROUP BY Country ORDER BY COUNT(SupplierID) DESC LIMIT 1
retail_world,What is the full name of the employees who report to the Sales Manager?,"full name refers to LastName, FirstName; the Sales Manager refers to Title = 'Sales Manager'; report to refers to ReportsTo is not NULL;","SELECT FirstName, LastName FROM Employees WHERE ReportsTo = ( SELECT EmployeeID FROM Employees WHERE Title = 'Sales Manager' )"
retail_world,"In August of 1996, how many orders were placed by the customer with the highest amount of orders?",August of 1996 refers to OrderDate = '1996-8'; highest amount of orders refers to MAX(COUNT(OrderID)),SELECT COUNT(OrderID) FROM Orders WHERE OrderDate LIKE '1996-08%' GROUP BY CustomerID ORDER BY COUNT(OrderID) DESC LIMIT 1
retail_world,How much is the salary of the first employee that was hired?,first employee that was hired refers to MIN(HireDate),SELECT Salary FROM Employees WHERE HireDate = ( SELECT MIN(HireDate) FROM Employees )
retail_world,How old was the oldest employee at the time he or she was hired?,"oldest employee at the time he or she was hired refers to MAX(SUBTRACT(HireDate, Birthdate))","SELECT MAX(TIMESTAMPDIFF(YEAR, BirthDate, HireDate)) FROM Employees"
retail_world,What is the total sales amount of all discontinued products?,"discontinued products refers to Discontinued = 1; total sales amount refers to SUM(MULTIPLY(UnitPrice, Quantity))",SELECT SUM(T2.UnitPrice * T2.Quantity) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Discontinued = 1
retail_world,What is the category of the product that has the highest number of discontinued products?,discontinued products refers to Discontinued = 1; highest number of discontinued products refers to MAX(Discontinued = 1),SELECT T2.CategoryName FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID WHERE T1.Discontinued = 1 GROUP BY T2.CategoryName ORDER BY COUNT(T1.ProductID) DESC LIMIT 1
retail_world,How many condiments were sold in 1997?,"""Condiments"" is the CategoryName; in 1997 refers to year(OrderDate) = 1997;",SELECT COUNT(T2.ProductID) FROM Categories AS T1 INNER JOIN Products AS T2 ON T1.CategoryID = T2.CategoryID INNER JOIN `Order Details` AS T3 ON T2.ProductID = T3.ProductID INNER JOIN Orders AS T4 ON T3.OrderID = T4.OrderID WHERE T1.CategoryName = 'Condiments' AND T1.CategoryID = 2 AND T4.OrderDate LIKE '1997%'
retail_world,Who is the customer who purchased the highest number of products in a single order?,highest number of products refers to MAX(COUNT(ProductID)),SELECT T1.CompanyName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID GROUP BY T1.CompanyName ORDER BY COUNT(T3.ProductID) DESC LIMIT 1
retail_world,What is the monthly average number of products shipped via Federal Shipping for the year 1996?,"monthly average number of products refers to DIVIDE(SUM(OrderID), 12); shipped via Federal Shipping refers to CompanyName = 'Federal Shipping'; for the year 1996 refers to year(ShippedDate) = 1996",SELECT CAST(SUM(T1.ShipVia) AS REAL) / 12 FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Federal Shipping' AND T1.ShippedDate LIKE '1996%'
retail_world,"Which products are being supplied by ""G'day, Mate""? List all of their names.","supplied by ""G'day, Mate"" refers to CompanyName = 'G''day, Mate';","SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName LIKE 'G%day, Mate'"
retail_world,How many territories are there in the region with the highest number of territories?,highest number of territories refers to max(TerritoryID),"SELECT COUNT(T2.RegionDescription), T1.TerritoryDescription, COUNT(*) AS num FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID GROUP BY T1.TerritoryDescription ORDER BY num DESC LIMIT 1"
retail_world,What is the company name of the supplier who supplies the product with the highest unit price?,the highest unit price refers to MAX(UnitPrice);,SELECT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.UnitPrice = ( SELECT MAX(UnitPrice) FROM Products )
retail_world,How many female employees are in charge of 3 or more territories?,female employees refers to TitleOfCourtesy = 'Mrs.' or TitleOfCourtesy = 'Ms.'; in charge of 3 or more territories refers to TerritoryID > = 3;,SELECT COUNT(EID) FROM ( SELECT T1.EmployeeID AS EID FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.TitleOfCourtesy IN ('Ms.' OR 'Mrs.') GROUP BY T1.EmployeeID HAVING COUNT(T2.TerritoryID) >= 3 ) T1
retail_world,Who are the top 8 suppliers supplying the products with the highest user satisfaction?,highest user satisfaction refers to max(ReorderLevel);,SELECT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID ORDER BY T1.ReorderLevel DESC LIMIT 8
retail_world,What is the company name of the customer who made the biggest amount of purchase in a single order before discount?,"biggest amount of purchase in a single order refers to MAX(MULTIPLY(UnitPrice, Quantity)); before discount refers to Discount = 0",SELECT T1.CompanyName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID WHERE T3.Discount = 0 GROUP BY T1.CompanyName ORDER BY SUM(T3.UnitPrice * T3.Quantity) DESC LIMIT 1
retail_world,"What was the total amount of sales handled by Nancy Davolio in December 1996, excluding discounts?","in December 1996 refers to year(OrderDate) = 1996 AND month(OrderDate) = 12; excluding discounts refers to Discount = 0; total amount of sales refers to MULTIPLY((UnitPrice, Quantity))",SELECT SUM(T3.UnitPrice * T3.Quantity) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID WHERE T1.FirstName = 'Nancy' AND T1.LastName = 'Davolio' AND T2.OrderDate LIKE '1996-12%' AND T3.Discount = 0
retail_world,What is the total amount of sales made in the year 1997?,year 1997 refers to year(OrderDate) = 1997; total amount of sales refers to (UnitPrice * Quantity),SELECT SUM(T2.UnitPrice * T2.Quantity * (1 - T2.Discount)) FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID WHERE T1.OrderDate LIKE '1997%'
retail_world,What is the average annual amount of shipped sales from 1997 to 1998?,"from 1997 to 1998 refers to ShippedDate > '1996-1-1' and ShippedDate < '1998-12-31'; average annual amount refers to SUM(MULTIPLY(UnitPrice, Quantity, SUBTRACT(1, Discount)))",SELECT SUM(T2.UnitPrice * T2.Quantity * (1 - T2.Discount)) / 3 FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID WHERE T1.ShippedDate BETWEEN '1996-01-01 00:00:00' AND '1998-12-31 23:59:59'
retail_world,How many orders were shipped to Venezuela in 1996?,shipped to Venezuela refers to ShipCountry = 'Venezuela'; in 1996 refers to year(ShippedDate) = '1996';,"SELECT COUNT(OrderID) FROM Orders WHERE ShipCountry = 'Venezuela' AND STRFTIME('%Y', ShippedDate) = '1996'"
retail_world,What are the ID and description of the condiments category?,condiments category refers to CategoryName = 'Condiments'; the ID refers to CategoryID,"SELECT CategoryID, Description FROM Categories WHERE CategoryName = 'Condiments'"
retail_world,"List the order IDs, product IDs and unit price of orders which total payment is greater than 15000.","total payment is greater than 15000 refers to MULTIPLY((Quantity * UnitPrice * (1 - Discount))) > 15000
","SELECT ProductID, OrderID, UnitPrice FROM `Order Details` WHERE UnitPrice * Quantity * (1 - Discount) > 15000"
retail_world,Provide the territory IDs under employee ID of 7.,,SELECT TerritoryID FROM EmployeeTerritories WHERE EmployeeID = 7
retail_world,Provide the supplier company name in Sydney and its homepage address if available.,in Sydney refers to City = 'Sydney';,"SELECT CompanyName, HomePage FROM Suppliers WHERE City = 'Sydney'"
retail_world,Write down the full name of Vie President of Sales and his age when he was hired.,"Vice President of Sales refers to Title = 'Vice President, Sales';","SELECT FirstName, LastName , TIMESTAMPDIFF(YEAR, BirthDate, HireDate) AS AGE FROM Employees WHERE Title = 'Vice President, Sales'"
retail_world,List the supplier company names located in Germany.,located in Germany refers to Country = 'Germany';,SELECT CompanyName FROM Suppliers WHERE Country = 'Germany'
retail_world,List the employees' full names and ages in 2022 who lived in London.,"in London refers to City = 'London'; ages in 2022 refers to SUBTRACT(2022, year(BirthDate)); full names refers to FirstName, LastName","SELECT TitleOfCourtesy, FirstName, LastName , TIMESTAMPDIFF(YEAR, BirthDate, NOW()) AS ages FROM Employees WHERE City = 'London'"
retail_world,"List down the customer company names, addresses, phones and faxes which are located in London.",in London refers to City = 'London',"SELECT CompanyName, Address, Phone, Fax FROM Customers WHERE City = 'London'"
retail_world,List the full name of employees and titles who have to report to Sales Manager.,"Sales Manager refers to Title = 'Sales Manager'; full name refers to FirstName, LastName","SELECT FirstName, LastName, Title FROM Employees WHERE ReportsTo = ( SELECT EmployeeID FROM Employees WHERE Title = 'Sales Manager' )"
retail_world,List all the customer company names and cities located in Canada.,located in Canada refers to Country = 'Canada',"SELECT CompanyName, City FROM Customers WHERE Country = 'Canada'"
retail_world,"Find the total production amount and product names which had ""10 - 500 g pkgs."" as quantity per unit.","total production amount refers to ADD(UnitsInstock, UnitsOnOrder)","SELECT UnitsInStock + UnitsOnOrder, ProductName FROM Products WHERE QuantityPerUnit = '10 - 500 g pkgs.'"
retail_world,List all the product names and categories of the highest reorder level.,Highest reorder level refers to Max(ReorderLevel),"SELECT T2.ProductName, T1.CategoryName FROM Categories AS T1 INNER JOIN Products AS T2 ON T1.CategoryID = T2.CategoryID ORDER BY T2.ReorderLevel DESC LIMIT 1"
retail_world,"Describe the supplier companies, cities and products which total production amount is more than 120.","total production amount is more than 120 refers to ADD(UnitsInstock, UnitsOnOrder) > 120","SELECT T2.CompanyName, T2.City, T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.UnitsInStock + UnitsOnOrder > 120"
retail_world,"Provide the contact person name, title and supplied products by ""Escargots Nouveaux"" company.","""Escargots Nouveaux"" company refers to CompanyName = 'Escargots Nouveaux';","SELECT T2.ContactName, T2.ContactTitle, T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Escargots Nouveaux'"
retail_world,"List the territory IDs, description and region description under the in-charge of Mrs. Margaret Peacock.",,"SELECT T3.TerritoryID, T3.TerritoryDescription, T4.RegionDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID INNER JOIN Region AS T4 ON T3.RegionID = T4.RegionID WHERE T1.TitleOfCourtesy = 'Mrs.' AND T1.LastName = 'Peacock' AND T1.FirstName = 'Margaret'"
retail_world,What were the products supplied by the company in Spain?,company in Spain refers to Country = 'Spain'; product supplied refers to ProductName,SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.Country = 'Spain'
retail_world,"What products were ordered by the customer ID ""WILMK"" which were required on 3/26/1998?",required on 3/26/1998 refers to RequiredDate = '1998-03-26 00:00:00'; products ordered refers to ProductName,SELECT T3.ProductName FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.RequiredDate LIKE '1998-03-26%' AND T1.CustomerID = 'WILMK'
retail_world,Provide the list of product IDs and names under the meat/poultry category.,meat/poultry category refers to CategoryName = 'Meat/Poultry';,"SELECT T2.ProductName, T1.CategoryName FROM Categories AS T1 INNER JOIN Products AS T2 ON T1.CategoryID = T2.CategoryID WHERE T2.ReorderLevel = ( SELECT MAX(ReorderLevel) FROM Products )"
retail_world,How many orders were made by the customers in Ireland.,in Ireland refers to Country = 'Ireland';,SELECT COUNT(T2.OrderID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Country = 'Ireland'
retail_world,Provide the products list which were ordered in 1996 by the company in Norway.,ordered in 1996 refers to year(OrderDate) = 1996; in Norway refers to Country = 'Norway',"SELECT T4.ProductName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID INNER JOIN Products AS T4 ON T3.ProductID = T4.ProductID WHERE T1.Country = 'Norway' AND STRFTIME('%Y', T2.OrderDate) = '1996'"
retail_world,"Among orders shipping to Brazil, mention the supplier company of the order which was done by employee Anne Dodsworth in December, 1996 .","shipping to Brazil refers to ShipCountry = 'Brazil'; in December, 1996  refers to year(OrderDate) = 1996 and month(OrderDate) = 12;",SELECT T5.CompanyName FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID INNER JOIN Products AS T4 ON T3.ProductID = T4.ProductID INNER JOIN Suppliers AS T5 ON T4.SupplierID = T5.SupplierID WHERE T1.FirstName = 'Anne' AND T1.LastName = 'Dodsworth' AND T2.ShipCountry = 'Brazil' AND T2.OrderDate LIKE '1996-12%'
retail_world,"Mention the oldest empoyee's full name, title, salary and number of orders which were shipped to USA by him.","full name refers to FirstName, LastName; shipped to USA refers to ShipCountry = 'USA'","SELECT T1.FirstName, T1.LastName, T1.Title, T1.Salary , COUNT(T2.OrderID) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE ShipCountry = 'USA' GROUP BY T1.FirstName, T1.LastName, T1.Title, T1.Salary, T1.BirthDate ORDER BY T1.BirthDate LIMIT 1"
retail_world,List down the territory IDs and descriptions existed in Southern region.,in Southern region refers to RegionDescription = 'Southern';,"SELECT T1.TerritoryID, T1.TerritoryDescription FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Southern'"
retail_world,Calculate the average payment per product under confections category.,under confections category refers to CategoryName = 'Confections';,SELECT SUM(T2.UnitPrice * T2.Quantity * (1 - T2.Discount)) / COUNT(T1.ProductID) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Categories AS T3 ON T1.CategoryID = T3.CategoryID WHERE T3.CategoryName = 'Confections'
retail_world,Find the total payment of the orders by customers from San Francisco.,"from San Francisco refers to City = 'San Francisco'; total payment refers to sum(MULTIPLY(UnitPrice, Quantity, SUBTRACT(1, Discount)))",SELECT SUM(T3.UnitPrice * T3.Quantity * (1 - T3.Discount)) AS TOTALPAYMENT FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID WHERE T1.City = 'San Francisco'
retail_world,Calculate the total production for each product which were supplied from Japan,"from Japan refers to Country = 'Japan'; total production refers to ADD(UnitsInstock, UnitsOnOrder)",SELECT SUM(T1.UnitsInStock + T1.UnitsOnOrder) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.Country = 'Japan'
retail_world,"Among the supplied products from Australia, describe the discontinued products and the category.",from Australia refers to Country = 'Australia'; discontinued products refers to Discontinued = 1;,"SELECT T2.ProductName, T3.CategoryName FROM Suppliers AS T1 INNER JOIN Products AS T2 ON T1.SupplierID = T2.SupplierID INNER JOIN Categories AS T3 ON T2.CategoryID = T3.CategoryID WHERE T1.Country = 'Australia' AND T2.Discontinued = 1"
retail_world,Mention the supplier country of Ipoh Coffee and the order ID which had maximum in total payment.,"Ipoh Coffee refers to ProductName = 'Ipoh Coffee'; maximum in total payment refers to MAX(MULTIPLY(UnitPrice, Quantity, SUBTRACT(1, Discount)))","SELECT T3.Country, T1.OrderID FROM `Order Details` AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Suppliers AS T3 ON T2.SupplierID = T3.SupplierID WHERE T2.ProductName = 'Ipoh Coffee' ORDER BY T1.UnitPrice * T1.Quantity * (1 - T1.Discount) DESC LIMIT 1"
retail_world,Provide the list of products ordered by ID 10979 and calculate its total payment.,"ordered by ID 10979 refers to OrderID = '10979'; total payment refers to SUM(MULTIPLY(UnitPrice, Quantity, SUBTRACT(1, Discount)))","SELECT T1.ProductName , SUM(T2.UnitPrice * T2.Quantity * (1 - T2.Discount)) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T2.OrderID = 10979 GROUP BY T1.ProductName"
retail_world,"Among the products under grains/cereals category, provide the contact person and title of the supplier with one digit ID.",grains/cereals category refers to CategoryName = 'Grains/Cereals'; supplier with one digit ID refers to SupplierID between 1 and 10;,"SELECT DISTINCT T1.ContactName, T1.ContactTitle FROM Suppliers AS T1 INNER JOIN Products AS T2 ON T1.SupplierID = T2.SupplierID INNER JOIN Categories AS T3 ON T2.CategoryID = T3.CategoryID WHERE T3.CategoryName = 'Grains/Cereals' AND T1.SupplierID BETWEEN 1 AND 10 LIMIT 1"
retail_world,"Provide Speedy Express's phone number and number of shipped orders on 30th January, 1998.","Speedy Express's refers to CompanyName = 'Speedy Express'; orders on 30th January, 1998 refers to ShippedDate = '1998-01-30 00:00:00'","SELECT T2.Phone, COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Speedy Express' AND T1.ShippedDate LIKE '1998-01-30%' GROUP BY T2.Phone"
retail_world,Describe the ordered products which were the most overdue from required date.,"the most overdue from required date refers to MIN(SUBTRACT(ShippedDate, RequiredDate) < 0)","SELECT DISTINCT T3.ProductName FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE DATEDIFF(T1.ShippedDate, T1.RequiredDate) < 0"
retail_world,"Under the in-charge of inside sales coordinator, provide the product lists which were shipped to Mexico in 1996.",shipped to Mexico refers to ShipCountry = 'Mexico'; in 1996 refers to year(ShippedDate) = 1996; charge of inside sales coordinator refers to Title = 'Inside Sales Coordinator',SELECT T4.ProductName FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID INNER JOIN Products AS T4 ON T3.ProductID = T4.ProductID WHERE T1.Title = 'Inside Sales Coordinator' AND T2.ShippedDate LIKE '1996%' AND T2.ShipCountry = 'Mexico'
retail_world,Identify the name of the most popular dairy product in terms of reorder quantity.,'dairy product' refers to CategoryName; most popular reorder quantity refers to MAX(ReorderLevel),SELECT T2.ProductName FROM Categories AS T1 INNER JOIN Products AS T2 ON T1.CategoryID = T2.CategoryID WHERE T1.CategoryName = 'Dairy Products' AND T2.ReorderLevel = ( SELECT MAX(ReorderLevel) FROM Products )
retail_world,Calculate the production volume of the dairy product 'Mascarpone Fabioli'.,"'Mascarpone Fabioli' is a ProductName; calculation = SUM(UnitsInStock, UnitsOnOrder)",SELECT SUM(UnitsInStock + UnitsOnOrder) FROM Products WHERE ProductName = 'Mascarpone Fabioli'
retail_world,Identify the name and product category for the most expensive and the least expensive products.,name of product refers to ProductName; category of product refers to CategoryName; the most expensive products refers to MAX(UnitPrice); the least expensive products refers to MIN(UnitPrice);,"SELECT T2.ProductName, T1.CategoryName FROM Categories AS T1 INNER JOIN Products AS T2 ON T1.CategoryID = T2.CategoryID WHERE T2.UnitPrice IN (( SELECT MIN(UnitPrice) FROM Products ), ( SELECT MAX(UnitPrice) FROM Products ))"
retail_world,"Identify the customer, which placed the largest order in terms of value.","value refers to SUM(UnitPrice * Quantity * SUBTRACT(1, Discount)); the largest order in value refers to MAX(value)",SELECT T1.CompanyName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID GROUP BY T2.CustomerID ORDER BY SUM(T3.UnitPrice * T3.Quantity * (1 - T3.Discount)) DESC LIMIT 1
retail_world,Identify the number of employees in Northern sales region.,Northern sales region refers to RegionDescription = 'Northern',SELECT COUNT(T2.EmployeeID) FROM Territories AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.TerritoryID = T2.TerritoryID INNER JOIN Region AS T3 ON T1.RegionID = T3.RegionID WHERE T3.RegionDescription = 'Northern'
retail_world,What is the average value of the sales order?,"calculation = DIVIDE(SUM(UnitPrice * Quantity * SUBTRACT(1, Discount)), COUNT(OrderID))",SELECT SUM(UnitPrice * Quantity * (1 - Discount)) / COUNT(OrderID) FROM `Order Details`
retail_world,Find the percentage of discontinued products in Northwind's portfolio of products.,"discontinued products refers to Discontinued = 1; calculation = DIVIDE(SUM(Discontinued = 1), COUNT(ProductID)) * 100",SELECT CAST(COUNT(CASE WHEN Discontinued = 1 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(ProductID) FROM Products
retail_world,Provide the full name of the employee who processed the sales order with ID 10274.,"full name refers to FirstName, LastName; sales order with ID 10274 refers to OrderID = 10274","SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.OrderID = 10274"
retail_world,Calculate the total number of orders placed by the company 'GROSELLA-Restaurante'.,'GROSELLA-Restaurante' refers to CompanyName;,SELECT COUNT(T2.OrderID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CompanyName = 'GROSELLA-Restaurante'
retail_world,Name products and their quantity ordered by the company 'GROSELLA-Restaurante' in the sales order that was processed by Nancy Davolio.,"name products refers to ProductName; 'GROSELLA-Restaurante' refers to CompanyName; 'Nancy Davolio' is the full name of an employee; full name refers to FirstName, LastName;","SELECT T4.ProductName, T3.Quantity FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID INNER JOIN Products AS T4 ON T3.ProductID = T4.ProductID INNER JOIN Customers AS T5 ON T2.CustomerID = T5.CustomerID WHERE T1.FirstName = 'Nancy' AND T1.LastName = 'Davolio' AND T5.CompanyName = 'GROSELLA-Restaurante'"
retail_world,Identify the total number of orders placed by the customer 'Laughing Bacchus Wine Cellars' and it's average value.,"'Laughing Bacchus Wine Cellars' refers to CompanyName; calculation = DIVIDE(SUM(UnitPrice * Quantity * SUBTRACT(1, Discount)), COUNT(OrderID))","SELECT COUNT(T2.OrderID) , SUM(T3.UnitPrice * T3.Quantity * (1 - T3.Discount)) / COUNT(T2.OrderID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID WHERE T1.CompanyName = 'Laughing Bacchus Wine Cellars'"
retail_world,How many boxes of 'Pavlova' did Northwind sell?,'Pavlova' is a ProductName,SELECT COUNT(T2.Quantity) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductName = 'Pavlova'
retail_world,What is the salary range for sales representative in Northwind?,salary range is BETWEEN max(Salary) AND min(Salary); sales representative is a title,"SELECT ( SELECT MIN(Salary) FROM Employees WHERE Title = 'Sales Representative' ) AS MIN , ( SELECT MAX(Salary) FROM Employees WHERE Title = 'Sales Representative' ) AS MAX"
retail_world,How many suppliers does Northwind have in USA?,'USA' is a country; supplier refers to CompanyName,SELECT COUNT(SupplierID) FROM Suppliers WHERE Country = 'USA'
retail_world,What products are no longer sold by Northwind?,no longer sold refers to Discontinued = 1; products refers to ProductName,SELECT ProductName FROM Products WHERE Discontinued = 1
retail_world,Who is the Sales Agent for the company 'Eastern Connection'?,'Eastern Connection' is a CompanyName; 'Sales Agent' is a ContactTitle,SELECT ContactName FROM Customers WHERE CompanyName = 'Eastern Connection' AND ContactTitle = 'Sales Agent'
retail_world,How many companies do ship Northwind's orders?,companies refers to ShipperID,SELECT COUNT(ShipperID) FROM Shippers
retail_world,Identify the total number of orders processed by Northwind employee named Andrew Fuller. What percent of those orders was shipped to Austria?,"'Andrew Fuller' is the full name of an employee; full name refers to FistName, LastName; Austria refers to ShipCountry; calculation = DIVIDE(SUM(ShipCountry = 'Austria'), COUNT(OrderID)) * 100",SELECT CAST(COUNT(CASE WHEN T2.ShipCountry = 'Austria' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.OrderID) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.FirstName = 'Andrew' AND T1.LastName = 'Fuller'
retail_world,"Indicate category name of soft drinks, coffees, teas, beers, and ales in description list.","Soft drinks, coffees, teas, beers, and ales' is Description of CategoryName","SELECT CategoryName FROM Categories WHERE Description = 'Soft drinks, coffees, teas, beers, and ales'"
retail_world,List the phone number of company named Around the Horn.,phone number refers to Phone; 'Around the Horn' is a CompanyName,SELECT Phone FROM Customers WHERE CompanyName = 'Around the Horn'
retail_world,Indicate the fax of the company Blondesddsl pre et fils in Strasbourg city.,'Blondesddsl pre et fils' is a CompanyName,SELECT Fax FROM Customers WHERE CompanyName = 'Blondesddsl pre et fils' AND City = 'Strasbourg'
retail_world,How many companies are there in the city of London?,companies refers to CompanyName;,SELECT COUNT(CompanyName) FROM Customers WHERE City = 'London'
retail_world,Indicate the address of the company Eastern Connection whose contact name is Ann Devon.,"'Eastern Connection' is a CompanyName; 'Ann Devon' is the full name of an employee; full name refers to FirstName, LastName",SELECT Address FROM Customers WHERE CompanyName = 'Eastern Connection' AND ContactName = 'Ann Devon'
retail_world,Indicate which company is located in France?,company refers to CompanyName; France is a country,SELECT CompanyName FROM Customers WHERE Country = 'France'
retail_world,How many product names does the supplier Exotic Liquids have?,'Exotic Liquids' is a CompanyName,SELECT COUNT(T1.ProductName) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Exotic Liquids'
retail_world,What is the name of the company that has the product with the highest unit price?,name of the company refers to CompanyName; the highest unit price refers to MAX(UnitPrice),SELECT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.UnitPrice = ( SELECT MAX(UnitPrice) FROM Products )
retail_world,Which company name in London city has the most stocked products?,the most stocked products refers to MAX(UnitsInStock),SELECT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.City = 'London' ORDER BY T1.UnitsInStock DESC LIMIT 1
retail_world,Which product of Exotic Liquids company that have the highest reorder levels?,'Exotic Liquids' is a CompanyName; the highest reorder levels refers to MAX(ReorderLevel),SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Exotic Liquids' ORDER BY T1.ReorderLevel DESC LIMIT 1
retail_world,Provide the category name of the Chef Anton's Gumbo Mix product that New Orleans Cajun Delights company has.,'Chef Anton's Gumbo Mix' is a ProductName; 'New Orleans Cajun Delights' is a CompanyName;,SELECT T3.CategoryName FROM Suppliers AS T1 INNER JOIN Products AS T2 ON T1.SupplierID = T2.SupplierID INNER JOIN Categories AS T3 ON T2.CategoryID = T3.CategoryID WHERE T1.CompanyName = 'New Orleans Cajun Delights' AND T2.ProductName LIKE 'Chef Anton%s Gumbo Mix'
retail_world,Indicate the name of the country where Leka Trading supplies Ipoh Coffee product.,'Leka Trading' is a CompanyName; 'Ipoh Coffee' is a ProductName,SELECT T2.Country FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ProductName = 'Ipoh Coffee' AND T2.CompanyName = 'Leka Trading'
retail_world,Indicate the category name of the product name with the highest units on order.,,SELECT T2.CategoryName FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID WHERE T1.UnitsOnOrder = ( SELECT MAX(T1.UnitsOnOrder) FROM Products )
retail_world,What is the difference in number of unit price from Chef Anton's Cajun Seasoning product and Chef Anton's Gumbo Mix product of New Orleans Cajun Delights company.,"Chef Anton's Cajun Seasoning' AND 'Chef Anton''s Gumbo Mix' are ProductName; 'New Orleans Cajun Delights' is a CompanyName; calculation = SUBTRACT(UnitPrice where ProductName = 'Chef Anton's Cajun Seasoning', UnitPrice where ProductName = 'Chef Anton''s Gumbo Mix')",SELECT ( SELECT T1.UnitPrice FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'New Orleans Cajun Delights' AND T1.ProductName LIKE 'Chef Anton%s Cajun Seasoning' ) - ( SELECT T1.UnitPrice FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'New Orleans Cajun Delights' AND T1.ProductName LIKE 'Chef Anton%s Gumbo Mix' ) AS calu
retail_world,Which of Cooperativa de Quesos 'Las Cabras' products have a unit price greater than 20?,Cooperativa de Quesos 'Las Cabras'' is a CompanyName; unit price greater than 20 refers to UnitPrice > 20,SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName LIKE 'Cooperativa de Quesos%' AND T1.UnitPrice > 20
retail_world,Please indicate the product name of Tokyo Traders company with order quantity greater than 40.,'Tokyo Traders' is a CompanyName; order quantity greater than 40 refers to Quantity > 40,SELECT DISTINCT T2.ProductName FROM Suppliers AS T1 INNER JOIN Products AS T2 ON T1.SupplierID = T2.SupplierID INNER JOIN `Order Details` AS T3 ON T2.ProductID = T3.ProductID WHERE T1.CompanyName = 'Tokyo Traders' AND T3.Quantity > 40
retail_world,List all category name of Exotic Liquids 's product with units in stock over 100.,'Exotic Liquids' is a CompanyName; units in stock over 100 refers to UnitsInStock > 100,SELECT T3.CategoryName FROM Suppliers AS T1 INNER JOIN Products AS T2 ON T1.SupplierID = T2.SupplierID INNER JOIN Categories AS T3 ON T2.CategoryID = T3.CategoryID WHERE T2.UnitsInStock > 100 AND T1.CompanyName = 'Exotic Liquids'
retail_world,How many product names have order quantity less than 50? Calculate the percentage of orders less than 50 out of total order quantity.,"order quantity less than 50 refers to Quantity < 50; Calculation = DIVIDE(SUM(Quantity < 50), SUM(ProductID)) * 100","SELECT SUM(CASE WHEN T2.Quantity < 50 THEN 1 ELSE 0 END) , CAST(SUM(IF(T2.Quantity < 50, 1, 0)) AS REAL) / COUNT(T1.ProductID) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID"
retail_world,Please indicate total order quantity of product Geitost and calculate the percentage of such product among all the order quantity.,"'Geitost' is a ProductName; calculation = DIVIDE(ProductName = 'Geitost', COUNT(ProductID)) * 100","SELECT SUM(IF(T1.ProductName = 'Geitost', 1, 0)) AS sum , CAST(SUM(IF(T1.ProductName = 'Geitost', 1, 0)) AS REAL) / COUNT(T1.ProductID) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID"
retail_world,What is the position of Robert King?,"'Robert King' is the full name of an employee; full name refers to FirstName, LastName; position refers to Title",SELECT Title FROM Employees WHERE FirstName = 'Robert' AND LastName = 'King'
retail_world,Write the shipping company name with the telephone number of (503) 555-9931.,telephone number of (503) 555-9931 refers to Phone = '(503) 555-9931',SELECT CompanyName FROM Shippers WHERE Phone = '(503) 555-9931'
retail_world,Write the address and phone number of Margaret Peacock.,"Margaret Peacock is the full name of an employee; full name refers to FirstName, LastName; phone number refers to HomePhone","SELECT Address, HomePhone FROM Employees WHERE FirstName = 'Margaret' AND LastName = 'Peacock'"
retail_world,What is the full address of Rattlesnake Canyon Grocery?,"full address refers to ShipAddress, ShipCity, ShipRegion,ShipPostalCode, ShipCountry; 'Rattlesnake Canyon Grocery' is a ShipName;","SELECT DISTINCT ShipAddress, ShipCity, ShipRegion, ShipPostalCode, ShipCountry FROM Orders WHERE ShipName = 'Rattlesnake Canyon Grocery'"
retail_world,List all product names under Confections.,'Confections' is a CompanyName;,SELECT T1.ProductName FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID WHERE T2.CategoryName = 'Confections'
retail_world,Sir Rodney's Marmalade is supplied by which company and who is the contact for this company?,'Sir Rodney's Marmalade' is a ProductName; company refers to CompanyName; contact for a company refers to ContactName,"SELECT T2.CompanyName, T2.ContactName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ProductName LIKE 'Sir Rodney%s Marmalade'"
retail_world,What is the full name of the employee who is in charge of the territory of Denver?,"full name refers to FirstName, LastName; Denver is a TerritoryDescription","SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T3.TerritoryDescription = 'Denver'"
retail_world,List all the territories where Laura Callahan is in charge.,"territories refers to TerritoryDescription; Laura Callahan is the full name of an employee; full name refers to FirstName, LastName",SELECT T3.TerritoryDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.FirstName = 'Laura' AND T1.LastName = 'Callahan'
retail_world,How many orders were shipped via Federal Shipping?,'Federal Shipping' is a CompanyName; orders refers to OrderID,SELECT COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Federal Shipping' AND T1.ShipVia = 3
retail_world,Name the products where the suppliers come from Finland.,'Finland' is a Country; product refers to ProductName; suppliers refers to SupplierID,SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.Country = 'Finland'
retail_world,The product 'Mozzarella di Giovanni' belongs in which category? Include the category's description as well.,Mozzarella di Giovanni' is a ProductName; category refers to CategoryName;,"SELECT T2.CategoryName, T2.Description FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID WHERE T1.ProductName = 'Mozzarella di Giovanni'"
retail_world,Name the suppliers that supply products under the category 'cheeses.',suppliers refers to CompanyName; 'cheeses' is a Description,SELECT DISTINCT T1.CompanyName FROM Suppliers AS T1 INNER JOIN Products AS T2 ON T1.SupplierID = T2.SupplierID INNER JOIN Categories AS T3 ON T2.CategoryID = T3.CategoryID WHERE T3.Description = 'Cheeses'
retail_world,Name all products supplied by Zaanse Snoepfabriek.,products refers to ProductName; 'Zaanse Snoepfabriek' is a CompanyName,SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Zaanse Snoepfabriek'
retail_world,Which products by Plutzer Lebensmittelgromrkte AG were discontinued and what are their price?,"products refers to ProductName; 'Plutzer Lebensmittelgromrkte AG' is a CompanyName; price refers to UnitPrice; 
discontinued products refers to discontinued = 1",SELECT T1.UnitPrice FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Plutzer Lebensmittelgromrkte AG' AND T1.Discontinued = 1
retail_world,List the cities where the product 'Mishi Kobe Niku' were shipped to.,cities refers to ShipCity; 'Mishi Kobe Niku' is a ProductName,SELECT T1.ShipCity FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T3.ProductName = 'Mishi Kobe Niku'
retail_world,What percentage does the shipment of products by Speedy Express to Sweden make up to the shipping company's total?,"Speedy Express is a company; Sweden is a ShipCountry; calculation = DIVIDE(SUM(ShipCountry = 'Sweden'), SEM(ShipCountry)) * 100",SELECT CAST(COUNT(CASE WHEN T1.ShipCountry = 'Sweden' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Speedy Express'
retail_world,How many territory fall into region 1?,"region 1 refers to RegionID = 1

",SELECT COUNT(TerritoryID) FROM Territories WHERE RegionID = 1
retail_world,What are the the total number of territory in each region?,,"SELECT COUNT(TerritoryDescription) FROM Territories WHERE RegionID IN (1, 2, 3, 4) GROUP BY RegionID"
retail_world,How many suppliers are from UK?,from UK refers to Country = 'UK',SELECT COUNT(SupplierID) FROM Suppliers WHERE Country = 'UK'
retail_world,Please give the contact name for Tokyo Traders.,Tokyo Traders refers to CompanyName = 'Tokyo Traders',SELECT ContactName FROM Suppliers WHERE CompanyName = 'Tokyo Traders'
retail_world,How many employees from USA with Sales Representative title?,from USA refers to Country = 'USA',SELECT COUNT(Country) FROM Employees WHERE Country = 'USA' AND Title = 'Sales Representative'
retail_world,What are the highest salary earn by the the employee and what is his/her position in the company?,highest salary refers to max(salary); position refers to Title,"SELECT Salary, Title FROM Employees WHERE Salary = ( SELECT MAX(Salary) FROM Employees )"
retail_world,How many products supplied by Plutzer Lebensmittelgromrkte AG that is currently out of stock and on order?,Plutzer Lebensmittelgromrkte AG refers to CompanyName; is currently out of stock and on order refers to UnitsInStock = 0 and UnitsOnOrder > 0,SELECT COUNT(T1.ProductID) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Plutzer Lebensmittelgromrkte AG' AND T1.UnitsInStock = 0 AND T1.UnitsOnOrder = 0
retail_world,What product have the highest unit price and how many quantity have been being sold?,product refers to ProductID; highest unit price refers to Max(UnitPrice),"SELECT T1.ProductName, T2.Quantity FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID ORDER BY T1.UnitPrice DESC LIMIT 1"
retail_world,Which employee has created the least order and please indicates the employee's title?,least order refers to Min(OrderID),SELECT T1.Title FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID GROUP BY T1.Title ORDER BY COUNT(T2.OrderID) LIMIT 1
retail_world,What is the most common product ordered by a customer from Germany?,most common product refers to max(count(ProductID)); customer from Germany refers to Country = 'Germany',SELECT T2.ProductID FROM Customers AS T1 INNER JOIN `Order Details` AS T2 WHERE T1.Country = 'Germany' GROUP BY T2.ProductID ORDER BY COUNT(T2.ProductID) DESC LIMIT 1
retail_world,What are the total products value shipped to Brazil by Speedy Express Company?,"shipped to Brazil refers to ShipCountry = 'Brazil'; by Speedy Express Company refers to CompanyName = 'Speedy Express'; total products value refers to sum(MULTIPLY(UnitPrice, Quantity))",SELECT SUM(T2.Quantity * T2.UnitPrice) FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Shippers AS T3 ON T1.ShipVia = T3.ShipperID WHERE T3.CompanyName = 'Speedy Express' AND T1.ShipCountry = 'Brazil'
retail_world,How many subordinates does employee ID 2 have and what is the biggest order in terms of value that his/her subordinates have created?,"subordinates of employee ID 2 refers to EmployeeID where ReportsTo = 2;  biggest order in terms of value refers to max(MULTIPLY(Quantity, UnitPrice))","SELECT COUNT(T1.EmployeeID), SUM(T3.Quantity * T3.UnitPrice) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID WHERE T1.ReportsTo = 2 ORDER BY SUM(T3.UnitPrice * T3.Quantity) DESC LIMIT 1"
retail_world,How many sales values have been created by sales representative and which sales representative have the highest sales?,"sales representative refers to Title = 'Sales Representative'; sales values refers to MULTIPLY(Quantity, UnitPrice); the highest sales refers to max(MULTIPLY(Quantity, UnitPrice))",SELECT SUM(T3.UnitPrice * T3.Quantity) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID WHERE T1.Title = 'Sales Representative' ORDER BY SUM(T3.UnitPrice * T3.Quantity)
retail_world,How many employees is a UK citizen and are they all covering the same region?,is a UK citizen refers to Country = 'UK',"SELECT COUNT(T1.EmployeeID), T3.RegionID FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.Country = 'UK' GROUP BY T3.RegionID"
retail_world,Which customer have the biggest purchase in one order and where does this order being ship to?,biggest purchase refers to max(ProductID.Order_Details); ship to refers to ShipCountry,"SELECT T1.CompanyName, T2.ShipCountry FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID GROUP BY T1.CompanyName, T2.ShipCountry ORDER BY COUNT(T3.ProductID) DESC LIMIT 1"
retail_world,Which customer is a regular customer in this shop and what are the products category that he mostly buy?,regular customer refers to max(count(CustomerID)); products category refers to CategoryName; mostly buy refers to max(count(CategoryID)),"SELECT T1.CustomerID, T4.CategoryName FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID INNER JOIN Categories AS T4 ON T3.CategoryID = T4.CategoryID ORDER BY T1.CustomerID DESC, T4.CategoryName DESC"
retail_world,What are the most popular confections product and calculate the total sales generated by this product?,"most popular confections product refers to ProductID = max(count(MULTIPLY(Quantity, UnitPrice))) from CategoryName = 'Confections' ;  total sales refers to sum(MULTIPLY(Quantity, UnitPrice))",SELECT COUNT(T1.UnitPrice * T3.Quantity) FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID INNER JOIN `Order Details` AS T3 ON T1.ProductID = T3.ProductID WHERE T2.CategoryName = 'Confections' GROUP BY T3.Quantity ORDER BY T3.Quantity DESC LIMIT 1
retail_world,What is the name of product with the ID of 77?,name of product refers to ProductName; ID refers to ProductID,SELECT ProductName FROM Products WHERE ProductID = 77
retail_world,State the company name of all suppliers in USA.,in USA refers to Country = 'USA',SELECT CompanyName FROM Suppliers WHERE Country = 'USA'
retail_world,What is the position title for Laura Callahan?,,SELECT Title FROM Employees WHERE FirstName = 'Laura' AND LastName = 'Callahan'
retail_world,State the name of employee that manages the order from Victuailles en stock?,name of employee refers to FirstName; from Victuailles en stock refers to CompanyName = 'Victuailles en stock',"SELECT DISTINCT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.CompanyName = 'Victuailles en stock'"
retail_world,How many orders were shipped by Federal Shipping?,Federal Shipping refers to CompanyName = 'Federal Shipping',SELECT COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Federal Shipping'
retail_world,Who was taking charge of orders from Morristown?,Morristown refers to TerritoryDescription = 'Morristown',"SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T3.TerritoryDescription = 'Morristown'"
retail_world,State the name of all territories in Northern region.,name of all territories refers to TerritoryDescription; Northern region refers to RegionDescription = 'Northern',SELECT DISTINCT T1.TerritoryDescription FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Northern'
retail_world,How many orders were handled by Michael Suyama. State the order ID.,,SELECT COUNT(T2.OrderID) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.FirstName = 'Michael' AND T1.LastName = 'Suyama'
retail_world,What is the ratio number of territories in Northern region and number territories in Western region?,"Northern region refers to RegionID = 3; Western region refers to RegionID = 2 ; ratio = divide((TerritoryDescription where RegionID = 3), (TerritoryDescription where RegionID = 2))",SELECT CAST(( SELECT COUNT(T1.TerritoryID) FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Northern' ) AS REAL) * 100 / ( SELECT COUNT(T1.TerritoryID) FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Westerns' ) AS Calu
retail_world,Provide employees' ID who are in-charge of territory ID from 1000 to 2000.,territory ID from 1000 to 2000 refers to TerritoryID BETWEEN 1000 and 2000,SELECT EmployeeID FROM EmployeeTerritories WHERE TerritoryID BETWEEN 1000 AND 2000
retail_world,"List down the territory IDs, descriptions and region description which are under the in-charge of Nancy Davolio,",descriptions refers to TerritoryDescription; region refers to RegionDescription,"SELECT T3.RegionID, T3.TerritoryDescription, T4.RegionDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID INNER JOIN Region AS T4 ON T3.RegionID = T4.RegionID WHERE T1.LastName = 'Davolio' AND T1.FirstName = 'Nancy'"
retail_world,Describe Sales Representative names who were hired in 1992 and compare the number of orders among them.,Sales Representative refers to Title = 'Sales Representative'；were hired in 1992 refers to HireDate = '1992',"SELECT T1.FirstName, T1.LastName, COUNT(T2.OrderID) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.Title = 'Sales Representative' AND STRFTIME('%Y', T1.HireDate) = '1992' GROUP BY T1.EmployeeID, T1.FirstName, T1.LastName"
retail_world,Calculate the total payment of orders for Vegie-spread product.,"Vegie-spread product refers to ProductName = 'Vegie-spread'；total payment = MULTIPLY(UnitPrice, Quantity, (1-Discount))",SELECT SUM(T2.UnitPrice * T2.Quantity * (1 - T2.Discount)) AS sum FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductName = 'Vegie-spread'
retail_world,"List down the company names which supplied products for the order on 14th August, 1996.","products refers to Order_Details.ProductID; on 14th August, 1996 refers to OrderDate = '8/14/1996'",SELECT T1.CompanyName FROM Suppliers AS T1 INNER JOIN Products AS T2 ON T1.SupplierID = T2.SupplierID INNER JOIN `Order Details` AS T3 ON T2.ProductID = T3.ProductID INNER JOIN Orders AS T4 ON T3.OrderID = T4.OrderID WHERE date(T4.OrderDate) = '1996-08-14'
retail_world,"Among the product lists in order ID 10337, write down the product names and suppliers which had the highest in reorder level.",suppliers refers to CompanyName; highest in reorder level refers to Max(ReorderLevel),"SELECT T2.ProductName, T1.CompanyName FROM Suppliers AS T1 INNER JOIN Products AS T2 ON T1.SupplierID = T2.SupplierID INNER JOIN `Order Details` AS T3 ON T2.ProductID = T3.ProductID WHERE T3.OrderID = 10337 ORDER BY T2.ReorderLevel DESC LIMIT 1"
retail_world,Name the shipper which had the most shipments in first quarter of 1998.,Name the shipper refers to CompanyName; most shipments refers to max(count(OrderID)); first quarter of 1998 refers to ShippedDate = 1998/1 and ShippedDate = 1998/2 and ShippedDate = 1998/3 and ShippedDate = 1998/4,"SELECT T1.CompanyName FROM Shippers AS T1 INNER JOIN Orders AS T2 ON T1.ShipperID = T2.ShipVia WHERE STRFTIME('%Y', T2.ShippedDate) = '1998' GROUP BY T1.CompanyName ORDER BY COUNT(T2.OrderID) DESC LIMIT 1"
retail_world,How many customers are located in London?,London refers to City = 'London',SELECT COUNT(CustomerID) FROM Customers WHERE City = 'London'
retail_world,What is the title of Michael Suyama?,,SELECT Title FROM Employees WHERE FirstName = 'Michael' AND LastName = 'Suyama'
retail_world,"List out the full name of employee who has birth day on ""3/4/1955 12:00:00 AM"".","full name refers to FirstName, LastName; brith day refers to BirthDate","SELECT FirstName, LastName FROM Employees WHERE BirthDate = '1955-03-04 00:00:00'"
retail_world,Mention the first name of employee who took care the order id 10250.,,"SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.OrderID = 10250"
retail_world,How many orders that the employees who are located in Tacoma handled?,located in Tacoma refers to City = 'Tacoma',SELECT COUNT(T2.OrderID) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.City = 'Tacoma'
retail_world,What is the country location of the employee who handled order id 10257?,,SELECT T1.Country FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.OrderID = 10257
retail_world,What is the title of the employee who handled order id 10270?,,SELECT T1.Title FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.OrderID = 10257
retail_world,Give the phone number of the customer who placed the order id 10264.,,SELECT T1.Phone FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.OrderID = 10264
retail_world,What is the region where the customer who placed the order id 10276 located?,,SELECT T1.Region FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.OrderID = 10276
retail_world,"Among the employees who handled orders to Brazil, who has the highest salary and calculate the average salary of them.",orders to Brazil refers to ShipCountry = 'Brazil'; highest salary refers to max(salary); average salary = AVG(Salary),"SELECT T1.FirstName, T1.LastName, AVG(T1.Salary) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.ShipCountry = 'Brazil' GROUP BY T1.FirstName, T1.LastName ORDER BY SUM(T1.Salary) DESC LIMIT 1"
retail_world,Calculate the percentage salary of employees who handled orders shipped in 1996.,"shipped in 1996 refers to ShippedDate = 1996; percentage salary = divide(sum(Salary when ShippedDate = 1996), sum(Salary)) as percentage","SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', T2.ShippedDate) = '1996' THEN T1.Salary ELSE 0 END) AS REAL) * 100 / SUM(T1.Salary) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID"
retail_world,When was the employee who handled order id 10281 hired?,When was hired refers to HireDate,SELECT T1.HireDate FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.OrderID = 10281
retail_world,How many orders was handled by employees who reported to employee id 5?,reported to employee id 5 refers to ReportsTo = 5,SELECT COUNT(T2.OrderID) FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.ReportsTo = 5
retail_world,Give the full name of employee who handled the order id 10280.,"full name refers to FirstName, LastName","SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.OrderID = 10280"
retail_world,State the shipping company of order id 10260.,shipping company refers to CompanyName,SELECT T2.CompanyName FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T1.OrderID = 10260
retail_world,How many orders have been shipped through United Package?,shipped through refers to ShipVia; United Package refers to CompanyName = 'United Package',SELECT COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'United Package'
retail_world,List out the phone number of the shipping company of order id 10296.,shipping company refers to Shippers; phone number refers to Phone,SELECT T2.Phone FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T1.OrderID = 10260
retails,How many kinds of items are returned in order no.5?,returned refer to l_returnflag = 'R'; order no.5 refers to l_orderkey = 5; kinds of items refer to l_linenumber;,SELECT COUNT(l_linenumber) FROM lineitem WHERE l_orderkey = 5 AND l_returnflag = 'R'
retails,When was the latest date the items of order no.1 were shipped?,order no.1 refers to l_orderkey = 1; the latest date shipped refers to MAX(l_shipdate);,SELECT MAX(l_shipdate) FROM lineitem WHERE l_orderkey = 1
retails,"Which order has a higher priority, order no. 4 or order no. 36?","earlier orderdate have higher priority in delivery; which order no. 4 or order no. 36 refers to o_orderkey in (4, 36) where MIN(o_orderdate);","SELECT l_orderkey FROM lineitem WHERE l_orderkey IN (4, 36) ORDER BY l_shipdate DESC LIMIT 1"
retails,What is the comment of the order with the highest total price?,the highest total price refers to MAX(o_totalprice); comment of the order refers to o_comment;,SELECT o_comment FROM orders WHERE o_totalprice = ( SELECT MAX(o_totalprice) FROM orders )
retails,What is the phone number of Customer#000000001?,customer phone refers to c_phone; Customer#000000001 refers to c_name;,SELECT c_phone FROM customer WHERE c_name = 'Customer#000000001'
retails,How many orders in total have the customers in the household segment made?,orders in household segment refer to o_orderkey where c_mktsegment = 'HOUSEHOLD';,SELECT COUNT(T1.o_orderkey) FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_mktsegment = 'HOUSEHOLD'
retails,"Among all the orders made by a customer in the household segment, what is the highest total price?",orders in household segment refer to o_orderkey where c_mktsegment = 'HOUSEHOLD'; the highest total price refers to MAX(o_totalprice);,SELECT MAX(T1.o_totalprice) FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_mktsegment = 'HOUSEHOLD'
retails,Please list the order comments of all the orders made by customers in the household segment.,orders in household segment refer to o_orderkey where c_mktsegment = 'HOUSEHOLD'; order comments refer to o_comment;,SELECT T1.o_comment FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_mktsegment = 'HOUSEHOLD'
retails,Please give the name of the customer who has made the single order with the highest total price.,name of the customer refers to c_name; single order with the highest total price refers to MAX(o_totalprice) LIMIT 1;,SELECT T2.c_name FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey ORDER BY T1.o_totalprice DESC LIMIT 1
retails,Please list the order keys of all the orders made by a customer whose account is in debt.,account is in debt if c_acctbal < 0;,SELECT T1.o_orderkey FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_acctbal < 0
retails,"Among the orders made by customers in the household segment, how many of them are urgent?",orders in household segment refer to o_orderkey where c_mktsegment = 'HOUSEHOLD'; the order is urgent if o_orderpriority = '1-URGENT' ;,SELECT COUNT(T1.o_orderpriority) FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_mktsegment = 'HOUSEHOLD' AND T1.o_orderpriority = '1-URGENT'
retails,How many customers are in Brazil?,Brazil is the name of the nation which refers to n_name = 'BRAZIL',SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'BRAZIL'
retails,Please list the phone numbers of all the customers in the household segment and are in Brazil.,phone numbers refer to c_phone; Brazil is the name of the nation which refers to n_name = 'BRAZIL'; household segment refers to c_mktsegment = 'HOUSEHOLD';,SELECT T1.c_phone FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_mktsegment = 'HOUSEHOLD' AND T2.n_name = 'BRAZIL'
retails,"Among all the customers in Germany, how many of them have an account balance of over 1000?",Germany is the name of the nation which refers to n_name = 'GERMANY'; account balance of over 1000 refers to c_acctbal > 1000;,SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'GERMANY' AND T1.c_acctbal > 1000
retails,How many orders in total are made by customers in Germany?,orders refer to o_orderkey; Germany is the name of the nation which refers to n_name = 'GERMANY';,SELECT COUNT(T2.c_custkey) FROM nation AS T1 INNER JOIN customer AS T2 ON T1.n_nationkey = T2.c_nationkey INNER JOIN orders AS T3 ON T2.c_custkey = T3.o_custkey WHERE T1.n_name = 'GERMANY'
retails,What is the total price of all the orders made by customers in Germany?,orders refer to o_orderkey; total price refers to o_totalprice; Germany is the name of the nation which refers to n_name = 'GERMANY';,SELECT SUM(T3.o_totalprice) FROM nation AS T1 INNER JOIN customer AS T2 ON T1.n_nationkey = T2.c_nationkey INNER JOIN orders AS T3 ON T2.c_custkey = T3.o_custkey WHERE T1.n_name = 'GERMANY'
retails,"Among the orders made by customers in Germany, which one of them has the highest priority in delivery? Please give its order key.",orders refer to o_orderkey; Germany is the name of the nation which refers to n_name = 'GERMANY'; earlier orderdate have higher priority in delivery therefore MIN(o_orderdate);,SELECT T3.o_orderkey FROM nation AS T1 INNER JOIN customer AS T2 ON T1.n_nationkey = T2.c_nationkey INNER JOIN orders AS T3 ON T2.c_custkey = T3.o_custkey WHERE T1.n_name = 'GERMANY' ORDER BY T3.o_orderdate LIMIT 1
retails,What is the average price of the orders made by a customer in Germany?,"DIVIDE(SUM(o_totalprice), COUNT(o_orderkey)) where n_name = 'GERMANY';",SELECT AVG(T3.o_totalprice) FROM nation AS T1 INNER JOIN customer AS T2 ON T1.n_nationkey = T2.c_nationkey INNER JOIN orders AS T3 ON T2.c_custkey = T3.o_custkey WHERE T1.n_name = 'GERMANY'
retails,"Among all the customers, what is the percentage of the customer's nation being Germany?","DIVIDE(COUNT(c_custkey when n_name = 'GERMANY'), COUNT(c_custkey)) as percentage;","SELECT CAST(SUM(IIF(T2.n_name = 'GERMANY', 1, 0)) AS REAL) * 100 / COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey"
retails,How many countries are there in the No.2 region?,No.2 region refers to n_regionkey = 2;,SELECT COUNT(n_nationkey) FROM nation WHERE n_regionkey = 2
retails,Which country does supplier No.34 come from?,supplier No.34 refers to s_suppkey = 34; country refers to n_name;,SELECT T2.n_name FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_suppkey = 34
retails,"Which region does ""Supplier#000000129"" belong to?","""Supplier#000000129"" is the name of the supplier which refers to s_name; Which region refers to r_name;",SELECT T3.r_name FROM nation AS T1 INNER JOIN supplier AS T2 ON T1.n_nationkey = T2.s_nationkey INNER JOIN region AS T3 ON T1.n_regionkey = T3.r_regionkey WHERE T2.s_name = 'Supplier#000000129'
retails,"What is the nationality of ""Customer#000000055""?","""Customer#000000055"" is the name of the customer which refers to c_name; nationality is the state of belonging to a particular country, therefore nationality refers to n_name;",SELECT T2.n_name FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_name = 'Customer#000000055'
retails,Give customer No.106936's region name.,"""Customer#000000055"" is the name of the customer which refers to c_name; region name refers to r_name;",SELECT T3.r_name FROM nation AS T1 INNER JOIN customer AS T2 ON T1.n_nationkey = T2.c_nationkey INNER JOIN region AS T3 ON T1.n_regionkey = T3.r_regionkey WHERE T2.c_custkey = 106936
retails,Give the number of Moroccan customers whose account is in debt.,account is in debt if c_acctbal < 0; Moroccan customers refer to c_name WHERE n_name = 'MOROCCO';,SELECT COUNT(T1.c_name) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'MOROCCO' AND T1.c_acctbal < 0
retails,"For the order with the total price of 231499.38, what was the discounted price for supplier No. 9397?","MULTIPLY(l_extendedprice, SUBTRACT(1, l_discount)) where o_totalprice = 231499.38 AND l_suppkey = 9397;",SELECT T1.l_extendedprice * (1 - T1.l_discount) AS DISCOUNTERPRICE FROM lineitem AS T1 INNER JOIN orders AS T2 ON T2.o_orderkey = T1.l_orderkey WHERE T1.l_suppkey = 9397 AND T2.o_totalprice = 231499.38
retails,"For the order with the total price of 218195.43, which supplier handled the returned item? Give the supplier id.",returned item refers to l_returnflag = 'R'; supplier id refers to l_suppkey; order with the total price of 218195.43 refers to o_totalprice = 218195.43;,SELECT T2.l_suppkey FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_totalprice = 218195.43 AND T2.l_returnflag = 'R'
retails,"Clerk#000000936 dealt with a ""Not Specified"" order on 1995/3/13, what was the charge for the part of the order shipped by truck?","MULTIPLY(MULTIPLY(l_extendedprice, SUBTRACT(1, l_discount)), SUM(1, l_tax)) WHERE o_clerk = 'Clerk#000000936', o_orderstatus = '4-NOT SPECIFIED', o_orderdate = '1995-03-13' AND l_shipmode = 'TRUCK';",SELECT T2.l_extendedprice * (1 - T2.l_discount) * (1 + T2.l_tax) AS num FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_clerk = 'Clerk#000000936' AND T2.l_shipmode = 'TRUCK' AND T1.o_orderstatus = '4-NOT SPECIFIED' AND T1.o_orderdate = '1995-03-13'
retails,"Customer No.129301 made an order on 1996/7/27, what was the delivery time for the first part of that order?","SUBTRACT(l_receiptdate, l_commitdate) WHERE o_orderdate = '1996-07-27' AND o_custkey = '129301';",SELECT JULIANDAY(T2.l_receiptdate) - JULIANDAY(T2.l_commitdate) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_custkey = '129301' AND T1.o_orderdate = '1996-07-27'
retails,Give the name of the customer who made an order with Clerk#000000803 on 1997/12/10.,name of the customer refers to c_name; o_clerk = 'Clerk#000000803'; order on 1997/12/10 refers to o_orderdate = '1997-12-10';,SELECT T2.c_name FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T1.o_orderdate = '1997-12-10' AND T1.o_clerk = 'Clerk#000000803'
retails,Calculates the profit processed by Supplier No. 7414 on order No. 817154.,"SUBTRACT(MULTIPLY(l_extendedprice, (SUBTRACT(1, l_discount)), MULTIPLY(ps_supplycost, l_quantity))) WHERE l_suppkey = 7414 AND l_orderkey = 817154;",SELECT T1.l_extendedprice * (1 - T1.l_discount) - T2.ps_supplycost * T1.l_quantity FROM lineitem AS T1 INNER JOIN partsupp AS T2 ON T1.l_suppkey = T2.ps_suppkey WHERE T1.l_suppkey = 7414 AND T1.l_orderkey = 817154
retails,Which country has the most number of suppliers whose account is in debt?,country refers to n_name; the most number of suppliers whose account is in debt refers to MAX(SUM(s_acctbal < 0));,"SELECT T.n_name FROM ( SELECT T2.n_name, SUM(T1.s_acctbal) AS num FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0 GROUP BY T2.n_name ) AS T ORDER BY T.num LIMIT 1"
retails,What is the percentage of the European countries among the given countries?,"DIVIDE(COUNT(n_name where r_name = 'EUROPE'), COUNT(n_name)) as percentage;","SELECT CAST(SUM(IIF(T2.r_name = 'EUROPE', 1, 0)) AS REAL) * 100 / COUNT(T1.n_name) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey"
retails,Give the percentage of Japanese suppliers whose account is in debt.,"account is in debt if s_acctbal < 0; DIVIDE(COUNT(s_acctbal < 0 where n_name = 'JAPAN'), COUNT(s_name where n_name = 'JAPAN')) as percentage;","SELECT CAST(SUM(IIF(T2.n_name = 'JAPAN', 1, 0)) AS REAL) * 100 / COUNT(T1.s_name) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0"
retails,What is the name of the customer with the highest amount of debt?,customer with the highest amount of debt refers to c_name where MIN(c_acctbal);,SELECT c_name FROM customer WHERE c_acctbal = ( SELECT MIN(c_acctbal) FROM customer )
retails,How many orders were shipped in 1998?,orders refer to l_orderkey; shipped in 1998 refers to year(l_shipdate) = 1998;,"SELECT COUNT(l_orderkey) FROM lineitem WHERE STRFTIME('%Y', l_shipdate) = '1998'"
retails,How many customers are in debt?,customers are in debt refer to c_custkey where c_acctbal < 0;,SELECT COUNT(c_custkey) FROM customer WHERE c_acctbal < 0
retails,How many items that were shipped via air were returned in 1994?,items refer to l_linenumber; shipped via air in 1994 refers to year(l_shipdate) = 1994 where l_shipmode = 'AIR'; returned refer to l_returnflag = 'R';,"SELECT COUNT(l_linenumber) FROM lineitem WHERE l_returnflag = 'R' AND l_shipmode = 'AIR' AND STRFTIME('%Y', l_shipdate) = '1994'"
retails,How many customers are in the automobile market segment?,automobile market segment refers to c_mktsegment = 'AUTOMOBILE';,SELECT COUNT(c_custkey) FROM customer WHERE c_mktsegment = 'AUTOMOBILE'
retails,What are the top 2 order keys of the item with the highest amount of extended price?,the highest amount of extended price refers to MAX(l_extendedprice);,SELECT l_orderkey FROM lineitem ORDER BY l_extendedprice DESC LIMIT 2
retails,When was the order with the highest amount of total price shipped?,when shipped refers to l_shipdate; the highest amount of total price refers to MAX(o_totalprice);,SELECT T2.l_shipdate FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey ORDER BY T1.o_totalprice DESC LIMIT 1
retails,In which country do most of the customers come from?,country refers to n_name; most of the customers refer to MAX(COUNT(c_custkey));,"SELECT T.n_name FROM ( SELECT T2.n_name, COUNT(T1.c_custkey) AS num FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey GROUP BY T2.n_name ) AS T ORDER BY T.num DESC LIMIT 1"
retails,How many urgent orders were shipped the next day?,"the order is urgent if o_orderpriority = '1-URGENT'; shipped the next day refers to SUBTRACT(l_shipdate, o_orderdate) = 1;",SELECT COUNT(T2.o_orderkey) FROM lineitem AS T1 INNER JOIN orders AS T2 ON T2.o_orderkey = T1.l_orderkey WHERE JULIANDAY(T1.l_shipdate) - JULIANDAY(T2.o_orderdate) = 1 AND T2.o_orderpriority = '1-URGENT'
retails,How many in debt customers in the household market segment are from Russia?,in debt customers refer to c_custkey where c_acctbal < 0; c_mktsegment = 'HOUSEHOLD'; Russian is the name of the nation which refers to n_name = 'RUSSIA';,SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_acctbal < 0 AND T1.c_mktsegment = 'HOUSEHOLD' AND T2.n_name = 'RUSSIA'
retails,How many suppliers are from Japan?,suppliers refer to s_nationkey; Japan is the name of the nation which refers to n_name = 'JAPAN';,SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'JAPAN'
retails,How many orders shipped via ship have a medium priority?,orders shipped via ship refer to o_orderkey where l_shipmode = 'SHIP'; medium priority refers to o_orderpriority = '3-MEDIUM';,SELECT COUNT(T1.o_orderkey) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T2.l_shipmode = 'SHIP' AND T1.o_orderpriority = '3-MEDIUM'
retails,"Among the customers from the United States, which market segment has the highest number of customers?",the highest number of customers refer to MAX(COUNT(c_custkey)); the United States is the name of the nation which refers to n_name = 'UNITED STATES'; market segment refers to c_mktsegment;,"SELECT T.c_mktsegment FROM ( SELECT T1.c_mktsegment, COUNT(T1.c_custkey) AS num FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'UNITED STATES' GROUP BY T1.c_mktsegment ) AS T ORDER BY T.num DESC LIMIT 1"
retails,What are the countries in the region of Asia?,countries in the region of Asia refer to n_name where r_name = 'ASIA';,SELECT T1.n_name FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey WHERE T2.r_name = 'ASIA'
retails,"What are the names of the parts manufactured by manufacturer 3 that have a supply cost of 1,000?",names of the parts refer to p_name; manufacturer 3 refers to p_mfgr = 'Manufacturer#3'; ps_supplycost = 1000;,SELECT T2.p_name FROM partsupp AS T1 INNER JOIN part AS T2 ON T1.ps_partkey = T2.p_partkey WHERE T1.ps_supplycost = 1000 AND T2.p_mfgr = 'Manufacturer#3'
retails,"How many countries are there in the region whose comment description is ""asymptotes sublate after the r.""",r_comment = 'asymptotes sublate after the r'; countries refer to n_nationkey;,SELECT COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey WHERE T2.r_comment = 'asymptotes sublate after the r'
retails,"Among the products manufactured by manufacturer 5 that have a retail price of no more than 1,000, how many products were shipped via rail?","manufacturer 5 refers to p_mfgr = 'Manufacturer#5'; retail price of no more than 1,000 refers to p_retailprice < 1000; shipped via rail refers to shipmode = 'RAIL';",SELECT COUNT(T1.ps_partkey) FROM partsupp AS T1 INNER JOIN lineitem AS T2 ON T1.ps_suppkey = T2.l_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey WHERE T3.p_mfgr = 'Manufacturer#5' AND T3.p_retailprice < 1000 AND T2.l_shipmode = 'RAIL'
retails,How much is the profit for smoke turquoise purple blue salmon that was delivered in person on 5/7/1996?,"SUBTRACT(MULTIPLY(l_extendedprice, (SUBTRACT(1, l_discount)), MULTIPLY(ps_supplycost, l_quantity))) where p_name = 'smoke turquoise purple blue salmon' and l_receiptdate = '1996-05-07' and l_shipinstruct = 'DELIVER IN PERSON';",SELECT T1.l_extendedprice * (1 - T1.l_discount) - T2.ps_supplycost * T1.l_quantity AS num FROM lineitem AS T1 INNER JOIN partsupp AS T2 ON T1.l_suppkey = T2.ps_suppkey INNER JOIN part AS T3 ON T2.ps_partkey = T3.p_partkey WHERE T1.l_receiptdate = '1996-05-07' AND T1.l_shipinstruct = 'DELIVER IN PERSON' AND T3.p_name = 'smoke turquoise purple blue salmon'
retails,What is the average price before discount of the top 10 orders with the highest total price?,"DIVIDE(SUM(l_extendedprice), 10) where MAX(o_totalprice);",SELECT SUM(T2.l_extendedprice) / 10 FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey ORDER BY T1.o_totalprice DESC LIMIT 10
retails,Identify the names of the top 3 customers with the highest number of orders of all time and calculate for the average total price per order of each customers.,"customers with the highest number of orders refer to c_name where MAX(COUNT(o_orderkey)); DIVIDE(SUM(o_totalprice), COUNT(o_orderkey));","SELECT T.c_name, T.res FROM ( SELECT T2.c_name, SUM(T1.o_totalprice) / COUNT(T1.o_orderkey) AS res , COUNT(T1.o_orderkey) AS num FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey GROUP BY T1.o_custkey ) AS T ORDER BY T.num DESC LIMIT 3"
retails,"How many items were shipped on 4th December, 1993?","items shipped on 4th December, 1993 refer to l_linenumber where l_shipdate = '1993-12-04';",SELECT COUNT(l_linenumber) FROM lineitem WHERE l_shipdate = '1993-12-04'
retails,What was the order date of items with the highest total price?,the highest total price refers to MAX(o_totalprice);,SELECT o_orderdate FROM orders WHERE o_totalprice = ( SELECT MAX(o_totalprice) FROM orders )
retails,Calculate the percentage of customers' accounts in debt.,"DIVIDE(COUNT(c_custkey where c_acctbal < 0), COUNT(c_custkey)) as percentage;","SELECT CAST(SUM(IIF(c_acctbal < 0, 1, 0)) AS REAL) * 100 / COUNT(c_custkey) FROM customer"
retails,How many part supplies were nearly out of stock?,supplies nearly out of stock refer to ps_partkey where ps_availqty < 10;,SELECT COUNT(ps_suppkey) FROM partsupp WHERE ps_availqty < 10
retails,Calculate the percentage of manufactured parts by Manufacturer#3.,"DIVIDE(COUNT(p_partkey where p_mfgr = 'Manufacturer#3'), COUNT(p_partkey)) as percentage;","SELECT CAST(SUM(IIF(p_mfgr = 'Manufacturer#3', 1, 0)) AS REAL) * 100 / COUNT(p_partkey) FROM part"
retails,List any five parts name in Medium Plated Brass.,p_type = 'MEDIUM PLATED BRASS'; parts name refer to p_name;,SELECT p_name FROM part WHERE p_type = 'MEDIUM PLATED BRASS' LIMIT 5
retails,"Among the orders shipped in November, 1998 by air, how many orders were urgent?","orders shipped in November, 1998 refer to o_orderkey where l_shipdate LIKE '1998-11-%'; by air refers to l_shipmode = 'AIR'; the order is urgent if o_orderpriority = '1-URGENT' ;","SELECT COUNT(T1.o_orderkey) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T2.l_shipmode = 'AIR' AND T1.o_orderpriority = '1-URGENT' AND SUBSTR(T2.l_shipdate, 1, 7) = '1998-11'"
retails,How many customers are there in India?,customers refer to c_custkey; India is the name of the nation which refers to n_name = 'INDIA';,SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'INDIA'
retails,"Among the customers from Morocco, how many customers were in debt?",customers refer to c_custkey; Morocco is the name of the nation which refers to n_name = 'MOROCCO'; in debt refers to c_acctbal < 0;,SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_acctbal < 0 AND T2.n_name = 'MOROCCO'
retails,List down the nation keys and names in Africa.,Africa refers to r_name = 'Africa';,"SELECT T1.n_name, T1.n_nationkey FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey WHERE T2.r_name = 'AFRICA'"
retails,Calculate the total price of orders by Customer#000000013.,Customer#000000013 is the name of the customer which refers to c_name;,SELECT SUM(T1.o_totalprice) FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_name = 'Customer#000000013'
retails,How many items did Customer#000021159 order? Calculate those items total charges.,"items Customer#000021159 order refer to l_linenumber where c_name = 'Customer#000021159'; SUM(MULTIPLY(MULTIPLY(l_extendedprice, SUBTRACT(1, l_discount)), SUM(1, l_tax))) where c_name = 'Customer#000021159';","SELECT COUNT(T2.o_orderkey), SUM(T3.l_extendedprice * (1 - T3.l_discount) * (1 + T3.l_tax)) FROM customer AS T1 INNER JOIN orders AS T2 ON T1.c_custkey = T2.o_custkey INNER JOIN lineitem AS T3 ON T2.o_orderkey = T3.l_orderkey WHERE T1.c_name = 'Customer#000021159' GROUP BY T3.l_linenumber"
retails,Calculate the total profit made by chocolate floral blue coral cyan.,"SUBTRACT(MULTIPLY(l_extendedprice, (SUBTRACT(1, l_discount)), MULTIPLY(ps_supplycost, l_quantity))) where p_name = 'chocolate floral blue coral cyan';",SELECT SUM(T3.l_extendedprice * (1 - T3.l_discount) - T2.ps_supplycost * T3.l_quantity) FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN lineitem AS T3 ON T2.ps_partkey = T3.l_partkey AND T2.ps_suppkey = T3.l_suppkey WHERE T1.p_name = 'chocolate floral blue coral cyan'
retails,Calculate the percentage of suppliers in Germany.,"DIVIDE(COUNT(s_suppkey where n_name = 'GERMANY'), COUNT(s_suppkey)) as percentage;","SELECT CAST(SUM(IIF(T2.n_name = 'GERMANY', 1, 0)) AS REAL) * 100 / COUNT(T1.s_suppkey) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0"
retails,List the suppliers' names which supplied smoke red pale saddle plum.,p_name = 'smoke red pale saddle plum'; the suppliers' names refer to s_name;,SELECT T3.s_name FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN supplier AS T3 ON T2.ps_suppkey = T3.s_suppkey WHERE T1.p_name = 'smoke red pale saddle plum'
retails,"Among the suppliers from Middle East region, how many suppliers were in debt?",suppliers from Middle East region refer to s_name where r_name = 'MIDDLE EAST'; in debt refers to s_acctbal < 0;,SELECT COUNT(T3.s_name) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey INNER JOIN supplier AS T3 ON T2.n_nationkey = T3.s_nationkey WHERE T3.s_acctbal < 0 AND T1.r_name = 'MIDDLE EAST'
retails,"Among the parts shipped by rail on 1st December, 1995, list part names with 10% discount.","shipped by rail on 1st December, 1995 refers to l_shipmode = 'RAIL' where l_shipdate = '1995-12-01'; part names with 10% discount refer to p_name where l_discount = 0.1;",SELECT T2.p_name FROM partsupp AS T1 INNER JOIN part AS T2 ON T1.ps_partkey = T2.p_partkey INNER JOIN lineitem AS T3 ON T1.ps_partkey = T3.l_partkey WHERE T3.l_discount = 0.1 AND T3.l_shipdate = '1995-12-01' AND T3.l_shipmode = 'RAIL'
retails,"Among the parts supplied by Supplier#000000018, provide parts names which had supply costs above 900.",Supplier#000000018 is the name of supplier which refers to s_name; supply costs above 900 refer to ps_supplycost > 900;,SELECT T2.p_name FROM partsupp AS T1 INNER JOIN part AS T2 ON T1.ps_partkey = T2.p_partkey INNER JOIN supplier AS T3 ON T1.ps_suppkey = T3.s_suppkey WHERE T1.ps_supplycost > 900 AND T3.s_name = 'Supplier#000000018'
retails,How many orders were shipped in 1994?,orders shipped in 1994 refer to l_orderkey where year(l_shipdate) = 1994;,"SELECT COUNT(l_orderkey) FROM lineitem WHERE STRFTIME('%Y', l_shipdate) = '1994'"
retails,How many of the line items have been shipped by rail with a quantity less than 30?,shipped by rail refers to l_shipmode = 'RAIL'; quantity less than 30 refers to l_quantity < 30;,SELECT COUNT(l_linenumber) FROM lineitem WHERE l_quantity < 30 AND l_shipmode = 'RAIL'
retails,"Among the customers in the furniture market segment, how many of them have a nation key of 1?",furniture market segment refers to c_mktsegment = 'FURNITURE';,SELECT COUNT(c_custkey) FROM customer WHERE c_mktsegment = 'FURNITURE' AND c_nationkey = 1
retails,Give the phone number of the customer with the highest account balance.,phone number of the customer refers to c_phone; the highest account balance refers to MAX(c_acctbal);,SELECT c_phone FROM customer ORDER BY c_acctbal DESC LIMIT 1
retails,What is the order priority of the order with the highest total price?,order with the highest total price refers to MAX(o_totalprice);,SELECT o_orderpriority FROM orders WHERE o_totalprice = ( SELECT MAX(o_totalprice) FROM orders )
retails,What is the total number of orders made by customers in United States?,orders refer to o_orderkey; the United States is the name of the nation which refers to n_name = 'UNITED STATES';,SELECT COUNT(T1.o_orderkey) FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey INNER JOIN nation AS T3 ON T2.c_nationkey = T3.n_nationkey WHERE T3.n_name = 'UNITED STATES'
retails,"Among the customers from Brazil, how many customers are in automobile market segment?",customers refer to c_custkey; Brazil is the name of the nation which refers to n_name = 'BRAZIL'; c_mktsegment = 'automobile';,SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_mktsegment = 'AUTOMOBILE' AND T2.n_name = 'BRAZIL'
retails,Provide the order comments for at least 5 orders made by customers in the furniture segment.,order comments refer to o_comment; c_mktsegment = 'Furniture';,SELECT T1.o_comment FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_mktsegment = 'Furniture' LIMIT 5
retails,List down the countries that are located in Asia.,countries in Asia refer to n_name where r_name = 'ASIA';,SELECT T1.n_name FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey WHERE T2.r_name = 'ASIA'
retails,"Name the countries that belong in the region with comment description ""furiously express accounts wake sly"".",r_comment = 'furiously express accounts wake sly';,SELECT T1.n_name FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey WHERE T2.r_comment = 'furiously express accounts wake sly'
retails,What is the total number of suppliers from Germany?,suppliers refer to s_suppkey; Germany is the name of the nation which refers to n_name = 'GERMANY';,SELECT COUNT(T1.s_suppkey) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T2.n_name = 'GERMANY'
retails,"Among the customers in Asia, how many customers are in debt?",customers in Asia refer to n_name where r_name = 'ASIA'; customers in debt refer to c_acctbal < 0;,SELECT COUNT(T1.n_name) FROM nation AS T1 INNER JOIN customer AS T2 ON T1.n_nationkey = T2.c_nationkey INNER JOIN region AS T3 ON T1.n_regionkey = T3.r_regionkey WHERE T2.c_acctbal < 0 AND T3.r_name = 'ASIA'
retails,Provide the phone number of the customer with the highest total price in an order.,phone number of the customer refers to c_phone; the highest total price refers to MAX(o_totalprice);,SELECT T2.c_phone FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey ORDER BY T1.o_totalprice DESC LIMIT 1
retails,"Among the products that have a retail price greater than 1,000, how many products were shipped via ship?","products refer to l_partkey; retail price greater than 1,000 refers to p_retailprice > 1000; shipped via ship refers to l_shipmode = 'SHIP';",SELECT COUNT(T1.ps_suppkey) FROM partsupp AS T1 INNER JOIN lineitem AS T2 ON T1.ps_suppkey = T2.l_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey WHERE T3.p_retailprice > 1000 AND T2.l_shipmode = 'SHIP'
retails,What is the name and marketing segment of the customer with the total order price of 199180.63?,name of the customer refers to c_name; total order price of 199180.63 refers o_totalprice = 199180.63; marketing segment refers to c_mktsegment;,"SELECT T2.c_name, T2.c_mktsegment FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T1.o_totalprice = 199180.63"
retails,Provide the nation and region of the customer with the address of wH55UnX7 VI?,nation refers to n_name; region refers to r_name; address of wH55UnX7 VI refers to c_address = 'wH55UnX7 VI';,"SELECT T1.n_name, T3.r_name FROM nation AS T1 INNER JOIN customer AS T2 ON T1.n_nationkey = T2.c_nationkey INNER JOIN region AS T3 ON T1.n_regionkey = T3.r_regionkey WHERE T2.c_address = 'wH55UnX7 VI'"
retails,"Among all the customers in Brazil, how many of them have an account balance of less than 1000?",customers refer to c_custkey; Brazil is the name of the nation which refers to n_name = 'BRAZIL'; account balance of less than 1000 refers to c_acctbal < 1000;,SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'BRAZIL' AND T1.c_acctbal < 1000
retails,List the country name of the customers in the building marketing segment with an account balance greater than 80% of the average account balance of all customers.,"country name refers to n_name; building marketing segment refers to c_mktsegment = 'BUILDING'; account balance greater than 80% of the average account balance of all customers refers to c_acctbal > MULTIPLY(AVG(c_acctbal), 0.8);",SELECT T2.n_name FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey INNER JOIN ( SELECT AVG(c_acctbal) * 0.8 AS avg_acctbal FROM customer ) AS T3 WHERE T1.c_acctbal > T3.avg_acctbal
retails,"Among the customers with an account balance lower than 4000, what is the percentage of the customers in the US?","DIVIDE(COUNT(c_custkey where n_name = 'United States' and c_acctbal < 4000), COUNT(c_custkey where c_acctbal < 4000)) as percentage;","SELECT CAST(SUM(IIF(T2.n_name = 'United States', 1, 0)) AS REAL) * 100 / COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_acctbal < 4000"
retails,Give the name and phone number of the customers who have more than 9000 account balance.,the name of the customer refers to c_name; phone number of the customer refers to c_phone; have more than 9000 account balance refers to c_acctbal > 9000;,"SELECT c_name, c_phone FROM customer WHERE c_acctbal > 9000"
retails,What is the average number of items shipped each day in April of 1994?,AVG(l_linenumber) where l_shipdate between '1994-01-01' and '1994-01-30';,SELECT AVG(l_linenumber) FROM lineitem WHERE l_shipdate BETWEEN '1994-01-01' AND '1994-01-30'
retails,List the order key of the orders with a total price between 200000 and 300000.,orders with a total price between 200000 and 300000 refer to o_totalprice between 200000 and 300000;,SELECT o_orderkey FROM orders WHERE o_totalprice BETWEEN 200000 AND 300000
retails,Find and list the part key of the parts which has an above-average retail price.,part key of the parts which has an above-average retail price refer to p_partkey where p_retailprice > AVG(p_retailprice);,SELECT p_partkey FROM part WHERE p_retailprice > ( SELECT AVG(p_retailprice) FROM part )
retails,Calculate the percentage of part supply that costs more than 500.,"DIVIDE(COUNT(ps_suppkey where ps_supplycost > 500)), COUNT(ps_suppkey) as percentage;","SELECT CAST(SUM(IIF(ps_supplycost > 500, 1, 0)) AS REAL) * 100 / COUNT(ps_suppkey) FROM partsupp"
retails,"Find the supply key of the top ten suppliers with the most account balance, and list the supply key along with the account balance in descending order of account balance.",supply key refers to s_suppkey; the most amount account balance refers to MAX(s_acctbal);,"SELECT s_suppkey, s_acctbal FROM supplier ORDER BY s_acctbal DESC LIMIT 10"
retails,How many customers who are not in debt ordered an urgent order?,customers who are not in debt refer to c_custkey where c_acctbal > 0; the order is urgent if o_orderpriority = '1-URGENT' ;,SELECT COUNT(T2.c_custkey) FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_acctbal > 0 AND T1.o_orderpriority = '1-URGENT'
retails,List the name and phone number of customers in India who have an above-average account balance.,name of customer refers to c_name; phone number of customer refers to c_phone; customers in India who have an above-average account balance refer to n_name = 'INDIA' and c_acctbal > AVG(c_acctbal);,"SELECT T1.c_name, T1.c_phone FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_acctbal > ( SELECT AVG(c_acctbal) FROM customer ) ORDER BY T1.c_name"
retails,"In the parts supply by Supplier#000000654, list the top five parts with the most supply cost in descending order of supply cost.",Supplier#000000654 is the name of the supplier which refers to s_name; parts with the most supply cost refer to ps_partkey where MAX(ps_supplycost);,SELECT T2.ps_partkey FROM supplier AS T1 INNER JOIN partsupp AS T2 ON T1.s_suppkey = T2.ps_suppkey WHERE T1.s_name = 'Supplier#000000654' ORDER BY T2.ps_supplycost DESC LIMIT 5
retails,What percentage of customers from France is in the automobile segment?,"DIVIDE(COUNT(c_name where c_mktsegment = 'AUTOMOBILE' and n_name = 'FRANCE'), COUNT(c_name where n_name = 'FRANCE')) as percentage;","SELECT CAST(SUM(IIF(T1.c_mktsegment = 'AUTOMOBILE', 1, 0)) AS REAL) * 100 / COUNT(T1.c_name) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'FRANCE'"
retails,Name the part which is most profitable.,"profit can be calculated as SUBTRACT(MULTIPLY(l_extendedprice, (SUBTRACT(1, l_discount)), MULTIPLY(ps_supplycost, l_quantity))); part which is most profitable refers to p_name where MAX(profit);","SELECT T.p_name FROM ( SELECT T3.p_name , T2.l_extendedprice * (1 - T2.l_discount) - T1.ps_supplycost * T2.l_quantity AS num FROM partsupp AS T1 INNER JOIN lineitem AS T2 ON T1.ps_suppkey = T2.l_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey ) AS T ORDER BY T.num DESC LIMIT 1"
retails,List the names of the countries with the below-average number of customers in ascending order of customer numbers.,"the names of countries with the below-average number of customers refer to n_name where COUNT(c_name) < DIVIDE(COUNT(c_name)), COUNT(n_name);",SELECT T2.n_name FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey GROUP BY T2.n_name HAVING COUNT(T1.c_name) > ( SELECT COUNT(customer.c_name) / COUNT(DISTINCT nation.n_name) FROM customer INNER JOIN nation ON customer.c_nationkey = nation.n_nationkey ) ORDER BY COUNT(T1.c_name)
retails,What percentage of customers from the African region is in the household segment?,"DIVIDE(COUNT(c_custkey where c_mktsegment = 'HOUSEHOLD' and r_name = 'AFRICA'), COUNT(c_custkey where r_name = 'AFRICA')) as percentage;","SELECT CAST(SUM(IIF(T2.r_name = 'AFRICA', 1, 0)) AS REAL) * 100 / COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey INNER JOIN customer AS T3 ON T1.n_nationkey = T3.c_nationkey WHERE T3.c_mktsegment = 'HOUSEHOLD'"
retails,List the name of the top ten items with the most quantity available in the descending order of availability.,items with the most quantity available refer to p_name where MAX(ps_availqty);,SELECT T1.p_name FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey ORDER BY T2.ps_availqty DESC LIMIT 10
retails,Calculate the difference in the average retail price of parts shipped via ship and air.,"SUBTRACT(DIVIDE(SUM(p_retailprice where l_shipmode = 'SHIP'), COUNT(l_shipmode = 'SHIP')), DIVIDE(SUM(p_retailprice where l_shipmode = 'AIR'), COUNT(l_shipmode = 'AIR')));","SELECT (CAST(SUM(IIF(T3.l_shipmode = 'SHIP', T1.p_retailprice, 0)) AS REAL) / SUM(IIF(T3.l_shipmode = 'SHIP', 1, 0))) - (CAST(SUM(IIF(T3.l_shipmode = 'AIR', T1.p_retailprice, 0)) AS REAL) / SUM(IIF(T3.l_shipmode = 'AIR', 1, 0))) FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN lineitem AS T3 ON T2.ps_suppkey = T3.l_suppkey"
retails,What is the average discount for the parts made by Manufacturer#5?,"DIVIDE(SUM(l_discount), COUNT(l_partkey)) where p_mfgr = 'Manufacturer#5';",SELECT AVG(T3.l_discount) FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN lineitem AS T3 ON T2.ps_suppkey = T3.l_suppkey WHERE T1.p_mfgr = 'Manufacturer#5'
retails,"In the parts shipped by rail, how many are of medium priority?",parts shipped by rail refer to l_partkey where l_shipmode = 'RAIL'; medium priority refers to o_orderpriority = '3-MEDIUM';,SELECT COUNT(T2.l_partkey) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T2.l_shipmode = 'RAIL' AND T1.o_orderpriority = '3-MEDIUM'
retails,"Among the suppliers in the European region, what percentage have a below-average account balance?","DIVIDE(COUNT(s_acctbal < AVG(s_acctbal)), COUNT(s_suppkey)) as percentage where r_name = 'EUROPE';","SELECT CAST(SUM(IIF(T3.s_acctbal < ( SELECT AVG(supplier.s_acctbal) FROM supplier ), 1, 0)) AS REAL) * 100 / COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey INNER JOIN supplier AS T3 ON T1.n_nationkey = T3.s_nationkey WHERE T2.r_name = 'EUROPE'"
retails,Calculate the difference in the average number of low-priority orders shipped by truck in each month of 1995 and 1996.,"SUBTRACT(DIVIDE(SUM(l_orderkey where year(l_shipdate) = 1995), 12), DIVIDE(SUM(l_orderkey where year(l_shipdate) = 1996), 12)) where o_orderpriority = '5-LOW';","SELECT (CAST(SUM(IIF(STRFTIME('%Y', T2.l_shipdate) = 1995, 1, 0)) AS REAL) / 12) - (CAST(SUM(IIF(STRFTIME('%Y', T2.l_shipdate) = 1996, 1, 0)) AS REAL) / 12) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderpriority = '5-LOW' AND T2.l_shipmode = 'TRUCK'"
retails,List by their id all customers who have a debit balance in their accounts.,customers who have a debt balance refer to c_custkey where c_acctbal < 0;,SELECT c_custkey FROM customer WHERE c_acctbal < 0
retails,List by order number the 3 items with the lowest price after applying the discount.,"order number refers to l_orderkey; the lowest price after applying the discount refers to MIN(MULTIPLY(l_extendedprice), SUBTRACT(1, l_discount));",SELECT l_orderkey FROM lineitem ORDER BY l_extendedprice * (1 - l_discount) LIMIT 3
retails,How many orders of more than 10 items have been returned?,more than 10 items have been returned refer to l_returnflag = 'R' where l_quantity > 10; orders refer to l_orderkey;,SELECT COUNT(l_linenumber) FROM lineitem WHERE l_quantity > 10 AND l_returnflag = 'R'
retails,What is the total price charged for orders shipped by air without shipping instructions?,"SUM(MULTIPLY(MULTIPLY(l_extendedprice, SUBTRACT(1, l_discount)), SUM(1, l_tax))) where l_shipmode = 'AIR' and l_shipinstruct = 'NONE';",SELECT l_extendedprice * (1 - l_discount) * (1 + l_tax) AS totalprice FROM lineitem WHERE l_shipmode = 'AIR' AND l_shipinstruct = 'NONE'
retails,"Of the orders with a lower delivery priority, how many have an urgent priority order?",an urgent priority order refers to o_orderkey where o_orderpriority = '1-URGENT'; earlier orderdate have higher priority in delivery; lower delivery priority refers to MAX(o_orderdate);,SELECT COUNT(o_orderkey) FROM orders WHERE o_orderpriority = '1-URGENT' GROUP BY o_orderdate ORDER BY o_orderdate DESC LIMIT 1
retails,How many suppliers from Egypt have a debit balance?,suppliers refer to s_suppkey; Egypt is the name of the nation which refers to n_name = 'EGYPT'; the balance is in debt if s_acctbal < 0;,SELECT COUNT(T1.s_suppkey) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0 AND T2.n_name = 'EGYPT'
retails,"How many items shipped by REG AIR were ordered on March 22, 1995?","items shipped by REG AIR refer to l_linenumber where l_shipmode = 'REG AIR'; ordered on March 22, 1995 refers to o_orderdate = '1995-03-22';",SELECT COUNT(T1.o_orderkey) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T2.l_shipmode = 'REG AIR' AND T1.o_orderdate = '1995-03-22'
retails,How many European suppliers are there?,European suppliers refer to s_suppkey where r_name = 'EUROPE';,SELECT COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey INNER JOIN supplier AS T3 ON T1.n_nationkey = T3.s_nationkey WHERE T2.r_name = 'EUROPE'
retails,To which segment belongs the customer that made the most orders in April 1994?,segment refers to c_mktsegment; customer made the most orders in April 1994 refers to c_custkey where o_orderdate LIKE '1994-04-%' and MAX(COUNT(o_orderkey));,"SELECT T.c_mktsegment FROM ( SELECT T2.c_mktsegment, COUNT(T1.o_orderkey) AS num FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T1.o_orderdate LIKE '1994-04-%' GROUP BY T1.o_custkey ) AS T ORDER BY T.num DESC LIMIT 1"
retails,Lists all parts supplied by Supplier#000000034.,part refers to p_name; Supplier#000000034 refers to s_name = 'Supplier#000000034',SELECT T3.p_name FROM partsupp AS T1 INNER JOIN supplier AS T2 ON T1.ps_suppkey = T2.s_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey WHERE T2.s_name = 'Supplier#000000034'
retails,What are the cost prices of large burnished copper?,cost price refers to ps_supplycost; large burnished copper refers to p_type = 'LARGE BURNISHED COPPER',SELECT T2.ps_supplycost FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey WHERE T1.p_type = 'LARGE BURNISHED COPPER'
retails,How many clients from Mozambique required orders with a low priority order?,Mozambique refers to n_name = 'MOZAMBIQUE'; low priority order refers to o_orderpriority = '5-LOW',SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey INNER JOIN orders AS T3 ON T1.c_custkey = T3.o_custkey WHERE T2.n_name = 'MOZAMBIQUE' AND T3.o_orderpriority = '5-LOW'
retails,Indicate the name of the product that is close to being sold out and that has the lowest cost price.,name of the product refers to p_name; close to being sold out refers to ps_availqty < 10; the lowest cost price refers to min(ps_supplycost),SELECT T1.p_name FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey WHERE T2.ps_availqty < 10 ORDER BY T2.ps_supplycost LIMIT 1
retails,How many different clerks have served the customer with the address uFTe2u518et8Q8UC?,"clerk who have served the customer refers to o_clerk
",SELECT COUNT(T1.o_clerk) FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_address = 'uFTe2u518et8Q8UC'
retails,Indicate the name of the parts without discount.,name of the part refers to p_name; without discount refers to l_discount = 0.0000,SELECT T3.p_name FROM partsupp AS T1 INNER JOIN lineitem AS T2 ON T1.ps_suppkey = T2.l_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey WHERE T2.l_discount = 0.0000
retails,How many suppliers from Germany have left a comment with 'carefully regular packages'?,Germany is nation name which refers to n_name = 'GERMANY'; comment with 'carefully regular packages' refers to s_comment LIKE 'carefully regular packages%',SELECT COUNT(T1.s_suppkey) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T2.n_name = 'GERMANY' AND T1.s_comment LIKE '%carefully regular packages%'
retails,How many products shipped on 19/11/1994 were ordered on 21/09/1994?,shipped on 19/11/1994 refers to l_shipdate = '1994-11-19'; ordered on 21/09/1994 refers to o_orderdate = '1994-09-21',SELECT COUNT(T2.l_partkey) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderdate = '1994-09-21' AND T2.l_shipdate = '1994-11-19'
retails,Calculate the average profit of prom brushed steel products.,"prom brushed steel refers to p_type = 'PROMO BRUSHED STEEL'; average profit = divide(sum(subtract(multiply(l_extendedprice, subtract(1, l_discount)), multiply(ps_supplycost, l_quantity))), count(ps_partkey))",SELECT SUM(T2.l_extendedprice * (1 - T2.l_discount) - T1.ps_supplycost * T2.l_quantity) / COUNT(T1.ps_partkey) FROM partsupp AS T1 INNER JOIN lineitem AS T2 ON T1.ps_suppkey = T2.l_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey WHERE T3.p_type = 'PROMO BRUSHED STEEL'
retails,What percentage of customers engaged in the household segment are from Iran?,"the household segment refers to c_mktsegment = 'HOUSEHOLD'; Iran is nation name which refers to n_name = 'IRAN'; percentage = divide(count(c_custkey where n_name = 'IRAN'), count(c_custkey)) where c_mktsegment = 'HOUSEHOLD' * 100%","SELECT CAST(SUM(IIF(T2.n_name = 'IRAN', 1, 0)) AS REAL) * 100 / COUNT(T2.n_name) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_mktsegment = 'HOUSEHOLD'"
retails,"Please state the segment, the name, the address, and the phone number of customer number 3.",segment refers to c_mktsegment; name refers to c_name; address refers to c_address; phone number refers to c_phone; customer number 3 refers to c_custkey = 3,"SELECT c_mktsegment, c_name, c_address, c_phone FROM customer WHERE c_custkey = 3"
retails,Please list any three line item numbers that have 10% off.,line item number refers to l_linenumber; 10% off refers to l_discount = 0.1,SELECT l_linenumber FROM lineitem WHERE l_discount = 0.1 LIMIT 3
retails,How many of the line items that have a quantity greater than 40 have been shipped by air?,quantity greater than 40 refers to l_quantity > 40; shipped by air refers to l_shipmode = 'AIR',SELECT COUNT(l_linenumber) FROM lineitem WHERE l_quantity > 40 AND l_shipmode = 'AIR'
retails,"Which ship mode has more ""deliver in person"" instructions, rail or mail?","ship mode refers to l_shipmode; ""deliver in person"" instruction refers to l_shipinstruct = 'DELIVER IN PERSON'","SELECT IIF(SUM(IIF(l_shipmode = 'RAIL', 1, 0)) - SUM(IIF(l_shipmode = 'MAIL', 1, 0)), 'RAIL', 'MAIL') AS result FROM lineitem WHERE l_shipinstruct = 'DELIVER IN PERSON'"
retails,What is the total price and the order priority of order number 33?,total price refers to o_totalprice; order priority refers to o_orderpriority; order number 33 refers to o_orderkey = 33,"SELECT o_totalprice, o_orderpriority FROM orders WHERE o_orderkey = 33"
retails,How many orders in 1998 had a total price under 950?,1998 refers to year(o_orderdate) = '1998'; a total price under 950 refers to o_totalprice < 950,"SELECT COUNT(o_orderkey) AS countorders FROM orders WHERE STRFTIME('%Y', o_orderdate) = '1998' AND o_totalprice < 950"
retails,Please list any three customers with debt.,customer refers to c_name; with debt refers to c_acctbal < 0,SELECT c_name FROM customer WHERE c_acctbal < 0 LIMIT 3
retails,What is the discounted price of line item number 1?,"discounted price refers to multiply(l_extendedprice, subtract(1, l_discount)); line item number 1 refers to l_linenumber = 1",SELECT l_extendedprice * (1 - l_discount) FROM lineitem WHERE l_linenumber = 1
retails,What is the difference between the number of returned items and not returned items with the full price of under 16947.7?,"full price of under 16947.7 refers to l_extendedprice < 16947.7; returned item refers to l_returnflag = 'R'; not returned item refers to l_returnflag = 'A' OR l_returnflag = 'N'; difference = subtract(count(l_linenumber where l_returnflag = 'A' OR l_returnflag = 'N'), count(l_linenumber where l_returnflag = 'R')) where l_extendedprice < 16947.7","SELECT SUM(IIF(l_returnflag = 'A', 1, 0)) - SUM(IIF(l_returnflag = 'N', 1, 0)) AS diff FROM lineitem WHERE l_extendedprice < 16947.7"
retails,What is the supply cost of large plated tin?,supply cost refers to ps_supplycost; large plated tin refers to p_type = 'large plated tin',SELECT T2.ps_supplycost FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey WHERE T1.p_type = 'large plated tin'
retails,Please name any three parts that have an available quantity of more than 9998.,part name refers to p_name; an available quantity of more than 9998 refers to ps_availqty > 9998,SELECT T1.p_name FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey WHERE T2.ps_availqty > 9998 LIMIT 3
retails,Please list any two parts that come with the wrap bag container and have a supply cost of under 10.,part name refers to p_name; wrap bag container refers to p_container = 'WRAP BAG'; supply cost of under 10 refers to ps_supplycost < 10,SELECT T1.p_name FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey WHERE T2.ps_supplycost < 10 AND T1.p_container = 'WRAP BAG' LIMIT 2
retails,What is the nationality of supplier number 1?,nationality refers to n_name; supplier number 1 refers to s_suppkey = 1,SELECT T2.n_name FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_suppkey = 1
retails,What are the countries that belong to Africa?,country is nation name which refers to n_name; Africa is region name refers to r_name = 'Africa',SELECT T2.n_name FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey WHERE T1.r_name = 'Africa'
retails,Which region has the lowest number of countries?,region refers to has r_name; the lowest number of countries refers to min(count(n_name)),"SELECT T.r_name FROM ( SELECT T1.r_name, COUNT(T2.n_name) AS num FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey GROUP BY T1.r_name ) AS T ORDER BY T.num LIMIT 1"
retails,How many customers from the furniture segments come from Iraq?,furniture segment refers to c_mktsegment = 'FURNITURE'; Iraq refers to n_name = 'Iraq',SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_mktsegment = 'FURNITURE' AND T2.n_name = 'IRAQ'
retails,What is the name of the customer number 93697 with the total order price of 191918.92?,customer name refers to c_name; number 93697 refers to o_custkey = 93697; total order price of 191918.92 refers to o_totalprice = 191918.92,SELECT T2.c_name FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T1.o_totalprice = 191918.92 AND T1.o_custkey = 93697
retails,Which nation and region does the Customer#000000008 come from?,nation refers to n_name; region refers to r_name; Customer#000000008 refers to c_name = 'Customer#000000008',"SELECT T1.n_name, T3.r_name FROM nation AS T1 INNER JOIN customer AS T2 ON T1.n_nationkey = T2.c_nationkey INNER JOIN region AS T3 ON T1.n_regionkey = T3.r_regionkey WHERE T2.c_name = 'Customer#000000008'"
retails,What is the delivery time and the clerk of order number 6?,"delivery time = subtract(l_receiptdate, l_commitdate); clerk refers to o_clerk; order number 6 refers to o_orderkey = 6","SELECT JULIANDAY(T2.l_receiptdate) - JULIANDAY(T2.l_commitdate), T1.o_clerk FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderkey = 6"
retails,How many Japanese suppliers have their accounts in debt?,Japanese refers to n_name = 'Japan'; have accounts in debt refers to s_acctbal < 0,SELECT COUNT(T1.s_suppkey) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0 AND T2.n_name = 'JAPAN'
retails,Which customer is the most in debt?,customer refers to c_name; the most in debt refers to max(c_acctbal),SELECT c_name FROM customer WHERE c_acctbal = ( SELECT MIN(c_acctbal) FROM customer )
retails,List all the dates of the urgent orders.,date refers to o_orderdate; urgent order refers to o_orderpriority = '1-URGENT',SELECT o_orderdate FROM orders WHERE o_orderpriority = '1-URGENT'
retails,How many of the items are instructed to be delivered in person?,instructed to be delivered in person refers to l_shipinstruct = 'DELIVER IN PERSON',SELECT COUNT(l_linenumber) FROM lineitem WHERE l_shipinstruct = 'DELIVER IN PERSON'
retails,What is the largest supplier's account balance?,the largest supplier's account balance refers to max(s_acctbal),SELECT MAX(s_acctbal) FROM supplier
retails,How many part supplies are close to being out of stock?,close to being out of stock refers to ps_availqty < 10,SELECT COUNT(ps_suppkey) FROM partsupp WHERE ps_availqty < 10
retails,List all the nations in Europe.,nation refers to n_name; Europe refers to r_name = 'EUROPE',SELECT T2.n_name FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey WHERE T1.r_name = 'EUROPE'
retails,"What is the supply cost for the part ""violet olive rose ivory sandy""?","supply cost refers to ps_supplycost; part ""violet olive rose ivory sandy"" refers to p_name = 'violet olive rose ivory sandy'",SELECT T2.ps_supplycost FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey WHERE T1.p_name = 'violet olive rose ivory sandy'
retails,List all the customers' phone numbers from Ethiopia.,phone number refers to c_phone; Ethiopia refers to n_name = 'Ethiopia',SELECT T1.c_phone FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'Ethiopia'
retails,"What is the total price of all orders from the customer with the phone number ""627-220-3983""?","total price = sum(o_totalprice); phone number ""627-220-3983"" refers to c_phone = '627-220-3983'",SELECT SUM(T1.o_totalprice) FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_phone = '627-220-3983'
retails,What are the shipping methods for the orders on 12/31/1994?,shipping method refers to l_shipmode; order on 12/31/1994 refers to o_orderdate = '1994-12-31',SELECT DISTINCT T2.l_shipmode FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderdate = '1994-12-31'
retails,What is the account balance of the supplier with the most parts?,account balance refers to s_acctbal; the most parts refers to max(count(ps_suppkey)),"SELECT T.s_acctbal FROM ( SELECT T1.s_acctbal, COUNT(T2.ps_suppkey) AS num FROM supplier AS T1 INNER JOIN partsupp AS T2 ON T1.s_suppkey = T2.ps_suppkey GROUP BY T1.s_suppkey ) AS T ORDER BY T.num DESC LIMIT 1"
retails,"Which nation does the supplier with the account balance of ""4393.04"" belong to?","nation refers to n_name; account balance of ""4393.04"" refers to s_acctbal = 4393.04",SELECT T2.n_name FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal = 4393.04
retails,What is the region with the most customers?,region refers to r_name; the most customers refers to max(count(c_custkey)),"SELECT T.r_name FROM ( SELECT T3.r_name, COUNT(T2.c_custkey) AS num FROM nation AS T1 INNER JOIN customer AS T2 ON T1.n_nationkey = T2.c_nationkey INNER JOIN region AS T3 ON T1.n_regionkey = T3.r_regionkey GROUP BY T3.r_name ) AS T ORDER BY T.num DESC LIMIT 1"
retails,"List the phone number of the customer who placed orders with a total price of more than $300,000.","phone number refers to c_phone; a total price of more than $300,000 refers to o_totalprice > 300000",SELECT T2.c_phone FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T1.o_totalprice > 300000
retails,What are the clerks of orders with line items shipped by mail?,clerk refers to o_clerk; shipped by mail refers to l_shipmode = 'MAIL',SELECT T1.o_clerk FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T2.l_shipmode = 'MAIL'
retails,What are the top 5 nations of suppliers with the lowest account balance?,nation refers to n_name; the lowest account balance refers to min(s_acctbal),SELECT T2.n_name FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey ORDER BY T1.s_acctbal LIMIT 1
retails,List all the addresses for the suppliers of the biggest parts.,addresses refers to s_address; the biggest part refers to max(p_size),SELECT T2.s_address FROM partsupp AS T1 INNER JOIN supplier AS T2 ON T1.ps_suppkey = T2.s_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey ORDER BY T3.p_size DESC LIMIT 1
retails,Which part and supplier have the most profit?,"part refers to p_name; supplier refers to s_name; the most profit refers to max(subtract(multiply(l_extendedprice, subtract(1, l_discount)), multiply(ps_supplycost, l_quantity)))","SELECT T3.p_name, T4.s_name FROM partsupp AS T1 INNER JOIN lineitem AS T2 ON T1.ps_suppkey = T2.l_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey INNER JOIN supplier AS T4 ON T1.ps_suppkey = T4.s_suppkey ORDER BY T2.l_extendedprice * (1 - T2.l_discount) - T1.ps_supplycost * T2.l_quantity DESC LIMIT 1"
retails,What proportion of suppliers are from Asia?,"Asia refers to r_name = 'ASIA'; proportion = divide(count(s_name where r_name = 'ASIA'), count(s_name)) * 100%","SELECT CAST(SUM(IIF(T1.r_name = 'ASIA', 1, 0)) AS REAL) * 100 / COUNT(T1.r_regionkey) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey INNER JOIN supplier AS T3 ON T2.n_nationkey = T3.s_nationkey"
retails,Please indicate the total price of order key 32.,total price refers to o_totalprice; order key 32 refers to o_orderkey = 32,SELECT o_totalprice FROM orders WHERE o_orderkey = 32
retails,How many order keys are not applied for the discount?,order key refers to l_orderkey; not applied for the discount refers to l_discount = 0,SELECT COUNT(l_orderkey) FROM lineitem WHERE l_discount = 0
retails,List line items shipped by truck with delivery time before 1997.,line item refers to l_linenumber; shipped by truck refers to l_shipmode = 'truck'; delivery time before 1997 refers to year(l_shipdate) < 1997,"SELECT l_linenumber FROM lineitem WHERE STRFTIME('%Y', l_shipdate) < 1997 AND l_shipmode = 'truck'"
retails,How many line items were returned in 1998?,line item refers to l_linenumber; returned refers to returnflag = 'R'; in 1998 refers to year(l_shipdate) = 1998,"SELECT l_linenumber FROM lineitem WHERE STRFTIME('%Y', l_shipdate) < 1997 AND l_shipmode = 'TRUCK'"
retails,Which line item with the highest quantity is shipped by air?,line item refers to l_linenumber; the highest quantity refers to max(l_quantity); shipped by air refers to l_shipmode = 'AIR',SELECT l_linenumber FROM lineitem WHERE l_shipmode = 'AIR' ORDER BY l_quantity DESC LIMIT 1
retails,List the names of customers whose accounts are in debt.,name of customer refers to c_name; account in debt refers to c_acctbal < 0,SELECT c_name FROM customer WHERE c_acctbal < 0
retails,How many customers belong to the household segment in Germany?,household segment refers to c_mktsegment = 'household'; Germany refers to n_name = 'Germany',SELECT COUNT(T1.c_name) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_mktsegment = 'HOUSEHOLD' AND T2.n_name = 'GERMANY'
retails,List the phone numbers of customers whose order priority is urgent.,phone number refers to c_phone; order priority is urgent refers to o_orderpriority = '1-URGENT',SELECT T2.c_phone FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T1.o_orderpriority = '1-URGENT'
retails,Name of customer whose order is applied with the highest discount.,customer name refers to c_name; the highest discount refers to max(l_discount),SELECT T3.c_name FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey INNER JOIN customer AS T3 ON T1.o_custkey = T3.c_custkey ORDER BY T2.l_discount DESC LIMIT 1
retails,"List the 5 orders with the highest total price, indicating the delivery date.",order refers to o_orderkey; the highest total price refers to max(o_totalprice); delivery date refers to l_shipdate,"SELECT T1.o_orderkey, T2.l_shipdate FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey ORDER BY T1.o_totalprice DESC LIMIT 5"
retails,List the comments describing orders from customers in the furniture segment.,comment refers to o_comment; furniture segment refers to c_mktsegment = 'FURNITURE',SELECT T1.o_comment FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_mktsegment = 'FURNITURE'
retails,Please indicate the names of the customers whose order with a total price over $300000.,customer name refers to c_name; a total price over $300000 refers to o_totalprice > 300000,SELECT T2.c_name FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T1.o_totalprice > 300000
retails,Name customers in India with account balances over $5000.,customer name refers to c_name; India refers to n_name = 'INDIA'; account balance over $5000 refers to c_acctbal > 5000,SELECT T1.c_name FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_acctbal > 5000 AND T2.n_name = 'INDIA'
retails,List the phone numbers of suppliers from Japan.,phone number refers to s_phone; Japan refers to n_name = 'JAPAN',SELECT T1.s_phone FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T2.n_name = 'JAPAN'
retails,"Among the providers in Argentina, which supplier has an account that is in debt?",Argentina refers to n_name = 'ARGENTINA'; supplier refers to s_name; an account in debt refers to s_acctbal < 0,SELECT T1.s_name FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0 AND T2.n_name = 'ARGENTINA'
retails,How many countries belong to the Algeria region?,the algeria region refers to r_name = 'ALGERIA',SELECT COUNT(T1.r_name) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey WHERE T2.n_name = 'ALGERIA'
retails,Please indicate the names of customers whose orders are eligible for 10% discount with order dates between 1/1/1994 and 1/1/1995.,customer name refers to c_name; 10% discount refers to l_discount = 0.1; order dates between 1/1/1994 and 1/1/1995 refers to year(o_orderdate) = 1994 OR o_orderdate = '1995-01-01',"SELECT T3.c_name FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey INNER JOIN customer AS T3 ON T1.o_custkey = T3.c_custkey WHERE T2.l_discount = 0.1 AND STRFTIME('%Y', T1.o_orderdate) BETWEEN 1994 AND 1995"
retails,Calculate the percentage of countries that belong to the American region.,"the American region refers to r_name = 'America'; percentage = divide(count(n_name where r_name = 'America'), count(n_name)) * 100%","SELECT CAST(SUM(IIF(T1.r_name = 'America', 1, 0)) AS REAL) * 100 / COUNT(T2.n_name) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey"
retails,Calculate percentage of household segment in Indonesia.,"household segment refers to c_mktsegment = 'HOUSEHOLD'; Indonesia refers to n_name = 'Indonesia'; percentage = divide(count(c_mktsegment = 'HOUSEHOLD'), count(c_mktsegment)) where n_name = 'Indonesia' * 100%","SELECT CAST(SUM(IIF(T1.c_mktsegment = 'HOUSEHOLD', 1, 0)) AS REAL) * 100 / COUNT(T1.c_mktsegment) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'INDONESIA'"
retails,"Please list the names of all the products under the type ""promo brushed steel"".","product name refers to p_name; type ""promo brushed steel"" refers to p_type = 'PROMO BRUSHED STEEL'",SELECT p_name FROM part WHERE p_type = 'PROMO BRUSHED STEEL'
retails,"What is the comment of the product ""burlywood plum powder puff mint""?","comment refers to p_comment; product ""burlywood plum powder puff mint"" refers to p_name = 'burlywood plum powder puff mint'",SELECT p_comment FROM part WHERE p_name = 'burlywood plum powder puff mint'
retails,How many parts have a retail price of over 1900?,a retail price of over 1900 refers to p_retailprice > 1900,SELECT COUNT(p_partkey) FROM part WHERE p_retailprice > 1900
retails,"Among the products under the type ""promo brushed steel"", how many of them are manufactured by Manufacturer#5?","type ""promo brushed steel"" refers to p_type = 'PROMO BRUSHED STEEL'; Manufacturer#5 refers to p_mfgr = 'Manufacturer#5'",SELECT COUNT(p_partkey) FROM part WHERE p_type = 'PROMO BRUSHED STEEL' AND p_mfgr = 'Manufacturer#5'
retails,"Please list all the brands that contain a part under the type ""promo brushed steel"".","brand refers to p_brand; type ""promo brushed steel"" refers to p_type = 'PROMO BRUSHED STEEL'",SELECT p_brand FROM part WHERE p_type = 'PROMO BRUSHED STEEL'
retails,What is the name of the product with the highest retail price?,name of the product refers to p_name; the highest retail price refers to p_retailprice,SELECT p_name FROM part WHERE p_retailprice = ( SELECT MAX(p_retailprice) FROM part )
retails,"Which part has a bigger size, ""pink powder drab lawn cyan"" or ""cornflower sky burlywood green beige""?","size refers to p_size; ""pink powder drab lawn cyan"" or ""cornflower sky burlywood green beige"" refers to p_name in ('pink powder drab lawn cyan', 'cornflower sky burlywood green beige')","SELECT T.p_name FROM ( SELECT p_name, p_size FROM part WHERE p_name IN ('pink powder drab lawn cyan', 'cornflower sky burlywood green beige') ) AS T ORDER BY p_size DESC LIMIT 1"
retails,How many parts have a jumbo case container?,jumbo case container refers to p_container = 'JUMBO CASE',SELECT COUNT(p_partkey) FROM part WHERE p_container = 'JUMBO CASE'
retails,What is the size of the smallest part in a jumbo case container?,size refers to p_size; the smallest part refers to min(p_size); jumbo case container refers to p_container = 'JUMBO CASE',SELECT MIN(p_size) FROM part WHERE p_container = 'JUMBO CASE'
retails,How many suppliers have their accounts in debt?,account in debt refers to s_acctbal < 0,SELECT COUNT(s_suppkey) FROM supplier WHERE s_acctbal < 0
retails,Please list the names of the top 3 suppliers with the most amount of money in their accounts.,supplier name refers to s_name; the most amount of money refers to max(s_acctbal),SELECT s_name FROM supplier ORDER BY s_acctbal DESC LIMIT 3
retails,Please list the phone numbers of all the suppliers in Germany.,phone number refers to s_phone; Germany refers to n_name = 'Germany',SELECT T1.s_phone FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T2.n_name = 'Germany'
retails,"Please list the names of all the suppliers for the part ""hot spring dodger dim light"".","supplier name refers to s_name; part ""hot spring dodger dim light"" refers to p_name = 'hot spring dodger dim light'",SELECT T2.s_name FROM partsupp AS T1 INNER JOIN supplier AS T2 ON T1.ps_suppkey = T2.s_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey WHERE T3.p_name = 'hot spring dodger dim light'
retails,"What is the lowest supply cost for the part ""hot spring dodger dim light""?","the lowest supply cost refers to min(ps_supplycost); part ""hot spring dodger dim light"" refers to p_name = 'hot spring dodger dim light'",SELECT MIN(T1.ps_supplycost) FROM partsupp AS T1 INNER JOIN part AS T2 ON T1.ps_partkey = T2.p_partkey WHERE T2.p_name = 'hot spring dodger dim light'
retails,"What is the name of the supplier that provides the part ""hot spring dodger dim light"" with the lowest supply cost?","supplier name refers to s_name; part ""hot spring dodger dim light"" refers to p_name = 'hot spring dodger dim light'; the lowest supply cost refers to min(ps_supplycost)",SELECT T2.s_name FROM partsupp AS T1 INNER JOIN supplier AS T2 ON T1.ps_suppkey = T2.s_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey WHERE T3.p_name = 'hot spring dodger dim light' ORDER BY T1.ps_supplycost LIMIT 1
retails,"What is the total quantity available by all suppliers for the part ""hot spring dodger dim light""?","total quantity available refers to sum(ps_availqty); part ""hot spring dodger dim light"" refers to p_name = 'hot spring dodger dim light'",SELECT SUM(T1.ps_availqty) FROM partsupp AS T1 INNER JOIN part AS T2 ON T1.ps_partkey = T2.p_partkey WHERE T2.p_name = 'hot spring dodger dim light'
retails,"Which supplier can provide the most number of ""hot spring dodger dim light""? Please give the supplier's phone number.","the most number refers to max(ps_availqty); ""hot spring dodger dim light"" refers to p_name = 'hot spring dodger dim light'; phone number refers to s_phone",SELECT T3.s_phone FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN supplier AS T3 ON T2.ps_suppkey = T3.s_suppkey WHERE T1.p_name = 'hot spring dodger dim light' ORDER BY T2.ps_availqty DESC LIMIT 1
retails,Please list the names of all the suppliers for the part with the highest retail price.,supplier name refers to s_name; the highest retail price refers to max(p_retailprice),SELECT T3.s_phone FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN supplier AS T3 ON T2.ps_suppkey = T3.s_suppkey WHERE T1.p_name = 'hot spring dodger dim light' ORDER BY T1.p_size DESC LIMIT 1
retails,"How many suppliers for the part ""hot spring dodger dim light"" are in Vietnam?","part ""hot spring dodger dim light"" refers to p_name = 'hot spring dodger dim light'; Vietnam refers to n_name = 'VIETNAM'",SELECT COUNT(T3.s_name) FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN supplier AS T3 ON T2.ps_suppkey = T3.s_suppkey INNER JOIN nation AS T4 ON T3.s_nationkey = T4.n_nationkey WHERE T1.p_name = 'hot spring dodger dim light' AND T4.n_name = 'VIETNAM'
retails,"Among the suppliers providing parts under the type ""promo brushed steel"", how many of them are in debt?","type ""promo brushed steel"" refers to p_type = 'PROMO BRUSHED STEEL'; in debt refers to s_acctbal < 0",SELECT COUNT(T3.s_name) FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN supplier AS T3 ON T2.ps_suppkey = T3.s_suppkey WHERE T3.s_acctbal < 0 AND T1.p_type = 'PROMO BRUSHED STEEL'
retails,Please list the names of all the suppliers for parts under Brand#55.,supplier name refers to s_name; Brand#55 refers to p_brand = 'Brand#55',SELECT T3.s_name FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN supplier AS T3 ON T2.ps_suppkey = T3.s_suppkey WHERE T1.p_brand = 'Brand#55'
retails,"Among all the parts under the type ""promo brushed steel"", how many of them have a total available quantity from all suppliers of under 5000?","type ""promo brushed steel"" refers to p_type = 'PROMO BRUSHED STEEL'; a total available quantity of under 5000 refers to sum(ps_availqty) < 5000",SELECT SUM(num) FROM ( SELECT COUNT(T3.s_name) AS num FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN supplier AS T3 ON T2.ps_suppkey = T3.s_suppkey WHERE T1.p_type = 'PROMO BRUSHED STEEL' GROUP BY T2.ps_partkey HAVING SUM(T2.ps_availqty) < 5000 ) T
retails,"The part ""hot spring dodger dim light"" is ordered in how many orders?","part ""hot spring dodger dim light"" refers to p_name = 'hot spring dodger dim light'",SELECT COUNT(T1.p_partkey) FROM part AS T1 INNER JOIN lineitem AS T2 ON T1.p_partkey = T2.l_partkey WHERE T1.p_name = 'hot spring dodger dim light'
retails,"What is the total quantity of the part ""hot spring dodger dim light"" ordered in all orders?","total quantity refers to sum(l_quantity); part ""hot spring dodger dim light"" refers to p_name = 'hot spring dodger dim light'",SELECT SUM(T1.p_partkey) FROM part AS T1 INNER JOIN lineitem AS T2 ON T1.p_partkey = T2.l_partkey WHERE T1.p_name = 'hot spring dodger dim light'
retails,Please list the order keys of all the orders that have more than 2 parts with a jumbo case container.,order key refers to l_orderkey; jumbo case container refers to p_container = 'JUMBO CASE'; more than 2 parts refers to count(l_partkey) > 2,"SELECT T.l_orderkey FROM ( SELECT T2.l_orderkey, COUNT(T2.l_partkey) AS num FROM part AS T1 INNER JOIN lineitem AS T2 ON T1.p_partkey = T2.l_partkey WHERE T1.p_container = 'JUMBO CASE' GROUP BY T2.l_orderkey ) AS T WHERE T.num > 2"
retails,"Among all the suppliers in debt, how many of them are in Europe?",in debt refers to s_acctbal < 0; Europe refers to r_name = 'EUROPE',SELECT COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey INNER JOIN supplier AS T3 ON T1.n_nationkey = T3.s_nationkey WHERE T2.r_name = 'EUROPE' AND T3.s_acctbal < 0
retails,"Among all the suppliers providing the part ""hot spring dodger dim light"", how many of them are in Europe?","part ""hot spring dodger dim light"" refers to p_name = hot spring dodger dim light; Europe refers to r_name = 'EUROPE'",SELECT COUNT(T1.r_regionkey) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey INNER JOIN supplier AS T3 ON T2.n_nationkey = T3.s_nationkey WHERE T1.r_name = 'EUROPE'
retails,Please list the phone numbers of all the suppliers for the parts ordered in order no.1.,phone number refers to s_phone; order no.1 refers to l_orderkey = 1,SELECT T2.s_phone FROM lineitem AS T1 INNER JOIN supplier AS T2 ON T1.l_suppkey = T2.s_suppkey WHERE T1.l_orderkey = 1
retails,"Among the suppliers for the parts ordered in order no.4, how many of them are in debt?",order no.4 refers to l_orderkey = 4; in debt refers to s_acctbal < 0,SELECT COUNT(T1.l_linenumber) FROM lineitem AS T1 INNER JOIN supplier AS T2 ON T1.l_suppkey = T2.s_suppkey WHERE T1.l_orderkey = 4 AND T2.s_acctbal < 0
retails,"Among the parts that are returned, how many of them are provided by a supplier in debt?",returned refers to l_returnflag = 'R'; in debt refers to s_acctbal < 0,SELECT COUNT(T1.l_partkey) FROM lineitem AS T1 INNER JOIN supplier AS T2 ON T1.l_suppkey = T2.s_suppkey WHERE T1.l_returnflag = 'R' AND T2.s_acctbal < 0
retails,"On which date was the part ""burnished seashell gainsboro navajo chocolate"" in order no.1 shipped?","date refers to l_shipdate; part ""burnished seashell gainsboro navajo chocolate"" refers to p_name = 'burnished seashell gainsboro navajo chocolate'; order no.1 refers to l_orderkey = 1",SELECT T1.l_shipdate FROM lineitem AS T1 INNER JOIN part AS T2 ON T1.l_partkey = T2.p_partkey WHERE T1.l_orderkey = 1 AND T2.p_name = 'burnished seashell gainsboro navajo chocolate'
retails,"What is the quantity of the part ""burnished seashell gainsboro navajo chocolate"" ordered in order no.1?","quantity refers to l_quantity; part ""burnished seashell gainsboro navajo chocolate"" refers to p_name = 'burnished seashell gainsboro navajo chocolate'; order no.1 refers to l_orderkey = 1",SELECT T1.l_quantity FROM lineitem AS T1 INNER JOIN part AS T2 ON T1.l_partkey = T2.p_partkey WHERE T1.l_orderkey = 1 AND T2.p_name = 'burnished seashell gainsboro navajo chocolate'
retails,"Which part is ordered in a bigger amount in order no.1, ""burnished seashell gainsboro navajo chocolate"" or ""salmon white grey tan navy""?","amount refers to sum(l_quantity); order no.1 refers to l_orderkey = 1; ""burnished seashell gainsboro navajo chocolate"" or ""salmon white grey tan navy"" refers to p_name IN ('salmon white grey tan navy', 'burnished seashell gainsboro navajo chocolate')","SELECT T.p_name FROM ( SELECT T2.p_name, SUM(T1.l_quantity) AS num FROM lineitem AS T1 INNER JOIN part AS T2 ON T1.l_partkey = T2.p_partkey WHERE T2.p_name IN ('salmon white grey tan navy', 'burnished seashell gainsboro navajo chocolate') GROUP BY T1.l_partkey ) AS T ORDER BY T.num DESC LIMIT 1"
retails,"What is the biggest discount among all orders for the part ""burnished seashell gainsboro navajo chocolate""?","the biggest discount refers to max(l_discount); part ""burnished seashell gainsboro navajo chocolate"" refers to p_name = 'burnished seashell gainsboro navajo chocolate'",SELECT MAX(T1.l_discount) FROM lineitem AS T1 INNER JOIN part AS T2 ON T1.l_partkey = T2.p_partkey WHERE T2.p_name = 'burnished seashell gainsboro navajo chocolate'
retails,"Please list all the modes of shipping for the part ""burnished seashell gainsboro navajo chocolate"".","mode of shipping refers to l_shipmode; part ""burnished seashell gainsboro navajo chocolate"" refers to p_name = 'burnished seashell gainsboro navajo chocolate'",SELECT DISTINCT T1.l_shipmode FROM lineitem AS T1 INNER JOIN part AS T2 ON T1.l_partkey = T2.p_partkey WHERE T2.p_name = 'burnished seashell gainsboro navajo chocolate'
retails,"What is the average supply cost for the part ""hot spring dodger dim light""?","average supply cost refers to avg(ps_supplycost); part ""hot spring dodger dim light"" refers to p_name = 'hot spring dodger dim light'",SELECT AVG(T1.ps_supplycost) FROM partsupp AS T1 INNER JOIN supplier AS T2 ON T1.ps_suppkey = T2.s_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey WHERE T3.p_name = 'hot spring dodger dim light'
retails,"How much higher in percentage is the highest supply cost of the part ""hot spring dodger dim light"" than the lowest supply cost?","part ""hot spring dodger dim light"" refers to p_name = 'hot spring dodger dim light'; percentage = divide(subtract(max(ps_supplycost), min(ps_supplycost)), min(ps_supplycost)) * 100%",SELECT CAST((MAX(T1.ps_supplycost) - MIN(T1.ps_supplycost)) AS REAL) * 100 / MIN(T1.ps_supplycost) FROM partsupp AS T1 INNER JOIN supplier AS T2 ON T1.ps_suppkey = T2.s_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey WHERE T3.p_name = 'hot spring dodger dim light'
retails,What is the profit for part no.98768 in order no.1?,"part no.98768 refers to l_partkey = 98768; order no.1 refers to l_orderkey = 1; profit = subtract(multiply(l_extendedprice, subtract(1, l_discount)), multiply(ps_supplycost, l_quantity))",SELECT T1.l_extendedprice * (1 - T1.l_discount) - T2.ps_supplycost * T1.l_quantity FROM lineitem AS T1 INNER JOIN partsupp AS T2 ON T1.l_suppkey = T2.ps_suppkey WHERE T1.l_orderkey = 1 AND T1.l_partkey = 98768
retails,"What is the discounted price of the part ""burnished seashell gainsboro navajo chocolate"" in order no.1?","part ""burnished seashell gainsboro navajo chocolate"" refers to p_name = 'burnished seashell gainsboro navajo chocolate'; order no.1 refers to l_orderkey = 1; discounted price refers to multiply(l_extendedprice, subtract(1, l_discount))",SELECT T1.l_extendedprice * (1 - T1.l_discount) FROM lineitem AS T1 INNER JOIN part AS T2 ON T1.l_partkey = T2.p_partkey WHERE T2.p_name = 'burnished seashell gainsboro navajo chocolate' AND T1.l_orderkey = 1
retails,Which market segment does the customer with the highest amount of debt belongs to?,market segment refers to c_mktsegment; the highest amount of debt refers to max(c_acctbal),SELECT c_mktsegment FROM customer WHERE c_acctbal = ( SELECT MIN(c_acctbal) FROM customer )
retails,"In 1997, how many orders were shipped via mail?",1997 refers to year(l_shipdate) = 1997; shipped via mail refers to l_shipmode = 'MAIL',"SELECT COUNT(l_orderkey) FROM lineitem WHERE STRFTIME('%Y', l_shipdate) = '1997' AND l_shipmode = 'MAIL'"
retails,How many customers are in the furniture segment?,furniture segment refers to c_mktsegment = 'FURNITURE',SELECT COUNT(c_custkey) FROM customer WHERE c_mktsegment = 'FURNITURE'
retails,"Among the items shipped in 1994 via truck, how many items were returned?",1994 refers to year(l_shipdate) = 1994; via truck refers to l_shipmode = 'TRUCK'; returned refers to l_returnflag = 'R',"SELECT COUNT(l_orderkey) FROM lineitem WHERE STRFTIME('%Y', l_shipdate) = '1994' AND l_returnflag = 'R' AND l_shipmode = 'TRUCK'"
retails,How many customers in the machinery segment are in debt?,machinery segment refers to c_mktsegment = 'MACHINERY'; in debt refers to c_acctbal < 0,SELECT COUNT(c_custkey) FROM customer WHERE c_acctbal < 0 AND c_mktsegment = 'MACHINERY'
retails,How many urgent orders did Clerk#000000001 handle in 1997?,urgent order refers to o_orderpriority = '1-URGENT'; Clerk#000000001 refers to o_clerk = 'Clerk#000000001'; 1997 refers to year(o_orderdate) = 1997,"SELECT COUNT(o_orderkey) FROM orders WHERE STRFTIME('%Y', o_orderdate) = '1997' AND o_clerk = 'Clerk#000000001' AND o_orderpriority = '1-URGENT'"
retails,What is the name of the customer whose order was delivered the longest?,"name of the customer refers to c_name; delivered the longest refers to max(subtract(l_receiptdate, l_commitdate))",SELECT T3.c_name FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey INNER JOIN customer AS T3 ON T1.o_custkey = T3.c_custkey ORDER BY (JULIANDAY(T2.l_receiptdate) - JULIANDAY(T2.l_commitdate)) DESC LIMIT 1
retails,How much is the total price of all the orders shipped to customers in Argentina?,total price = sum(o_totalprice); Argentina refers to n_name = 'Argentina',SELECT SUM(T3.o_totalprice) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey INNER JOIN orders AS T3 ON T1.c_custkey = T3.o_custkey WHERE T2.n_name = 'ARGENTINA'
retails,"How many customers in the building segments have orders with a total price of no less than 50,000?","building segment refers to c_mktsegment = 'BUILDING'; a total price of no less than 50,000 refers to o_totalprice > 50000",SELECT COUNT(T2.c_name) FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_mktsegment = 'BUILDING' AND T1.o_totalprice > 50000
retails,Which country has the least number of suppliers?,country refers to n_name; the least number of suppliers refers to min(count(s_name)),SELECT T2.n_name FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey GROUP BY T1.s_nationkey ORDER BY COUNT(T1.s_name) LIMIT 1
retails,How much is the part supply cost for the medium metallic grey dodger linen?,part supply cost refers to ps_supplycost; medium metallic grey dodger linen refers to p_name = 'medium metallic grey dodger linen',SELECT T2.ps_supplycost FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey WHERE T1.p_name = 'medium metallic grey dodger linen'
retails,What are the top 2 countries with the highest number of indebted suppliers?,country refers to c_name; highest number of indebted refers to max(sum(acctbal)) where s_acctbal < 0,"SELECT T.n_name FROM ( SELECT T2.n_name, SUM(T1.s_acctbal) AS num FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0 GROUP BY T1.s_nationkey ) AS T ORDER BY T.num LIMIT 2"
retails,"What are the names of the parts that have a part supply cost of at least 1,000?","name of the part refers to p_name; part supply cost of at least 1,000 refers to ps_supplycost > 1000",SELECT T1.p_name FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey WHERE T2.ps_supplycost > 1000
retails,What is the name of the country of the supplier with the highest debt?,name of the country refers to n_name; the highest debt refers to min(s_acctbal),SELECT T2.n_name FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey ORDER BY T1.s_suppkey DESC LIMIT 1
retails,Who is the clerk in charge of handling the item with the highest amount of extended price?,clerk refers to o_clerk; the highest amount of extended price refers to max(l_extendedprice),SELECT T1.o_clerk FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey ORDER BY T2.l_extendedprice DESC LIMIT 1
retails,What are the total quantities of the items ordered by customer 101660 on 10/5/1995?,total quantity refers to sum(l_quantity); customer 101660 refers to o_custkey = 101660; on 10/5/1995 refers to o_orderdate = '1995-10-05',SELECT SUM(T2.l_quantity) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderdate = '1995-10-05' AND T1.o_custkey = 101660
retails,What is the total amount of tax charged for the order placed by customer 88931 on 7/13/994?,"total amount of tax refers to sum(multiply(multiply(l_extendedprice, subtract(1, l_discount)), add(1, l_tax))); customer 88931 refers to o_custkey = 88931; on 7/13/1994 refers to o_orderdate = '1994-07-13'",SELECT SUM(T2.l_extendedprice * (1 - T2.l_discount) * (1 + T2.l_tax)) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_custkey = 88931 AND T1.o_orderdate = '1994-07-13'
retails,What are the names of the parts that were ordered by customer 110942?,name of the part refers to p_name; customer 110942 refers to o_custkey = 110942,SELECT T3.p_name FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey INNER JOIN part AS T3 ON T2.l_partkey = T3.p_partkey WHERE T1.o_custkey = 110942
retails,How much is the discounted price of every item that customer 111511 ordered in order 53159? List the names of the parts of every item.,"discounted price refers to multiply(l_extendedprice, subtract(1, l_discount)); customer 111511 refers to o_custkey = 111511; order 53159 refers to o_orderkey = 53159; name of the part refers to p_name","SELECT T2.l_extendedprice * (1 - T2.l_discount), T3.p_name FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey INNER JOIN part AS T3 ON T2.l_partkey = T3.p_partkey WHERE T1.o_custkey = 111511 AND T1.o_orderkey = 53159"
ice_hockey_draft,What is the height of David Bornhammar in inches?,heigh in inches refers to height_in_inch;,SELECT T2.height_in_inch FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T1.PlayerName = 'David Bornhammar'
ice_hockey_draft,"Please list the names of all the players with a height of over 6'2"" inches.","name of the players refers to PlayerName; height of over 6'2"" inches refers to height_in_inch > '6''2""' ;","SELECT DISTINCT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T2.height_in_inch > '6''2""'"
ice_hockey_draft,"Among the players with a height of over 6'2"" inches, how many of them were born in Sweden?","height of over 6'2"" inches refers to height_in_inch > '6''2""'; born in Sweden refers to nation = 'Sweden' ;","SELECT COUNT(T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T2.height_in_inch > '6''2""' AND T1.nation = 'Sweden'"
ice_hockey_draft,What is the name of the tallest player?,tallest player refers to MAX(height_in_cm);,SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id ORDER BY T2.height_in_cm DESC LIMIT 1
ice_hockey_draft,How much does David Bornhammar weigh in kilograms?,weigh in kilograms refers to weight_in_kg;,SELECT T2.weight_in_kg FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T1.PlayerName = 'David Bornhammar'
ice_hockey_draft,How many players weigh more than 90 kg?,weigh more than 90 kg refers to weight_in_kg > 90;,SELECT COUNT(T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T2.weight_in_kg > 90
ice_hockey_draft,"Among the players that weigh more than 90 kg, how many of them have a position of defense?",weigh more than 90 kg refers to weight_in_kg > 90; position of defense refers to position_info = 'D' ;,SELECT COUNT(T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T2.weight_in_kg > 90 AND T1.position_info = 'D'
ice_hockey_draft,"Among the players that weigh more than 90 kg, what is the name of the player that has the most attendance in the player's first 7 years of NHL career?",weigh more than 90 kg refers to weight_in_kg > 90; name of the player refers to PlayerName; most attendance in the player's first 7 years of NHL career refers to MAX(sum_7yr_GP);,SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T2.weight_in_kg > 90 AND T1.sum_7yr_GP = ( SELECT MAX(T1.sum_7yr_GP) FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T2.weight_in_kg > 90 )
ice_hockey_draft,What is the weight of the player with the longest time on ice in the player’s first 7 years of NHL career in kilograms?,weight in kilograms refers to weight_in_kg; longest time on ice in the player's first 7 years of NHL career refers to MAX(sum_7yr_TOI);,SELECT T2.weight_in_kg FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T1.sum_7yr_TOI = ( SELECT MAX(t.sum_7yr_TOI) FROM PlayerInfo t )
ice_hockey_draft,How much taller is David Bornhammar than Pauli Levokari in centimeters?,"how much taller = SUBTRACT(SUM(height_in_cm WHERE PlayerName = 'David Bornhammar'), SUM(height_in_cm WHERE PlayerName = 'Pauli Levokari')); height in centimeters refers to height_in_cm;",SELECT ( SELECT T2.height_in_cm FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T1.PlayerName = 'David Bornhammar' ) - ( SELECT T2.height_in_cm FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T1.PlayerName = 'Pauli Levokari' )
ice_hockey_draft,"Among all the players that are right-shooted, how many of them weigh over 90 kg?",right-shooted refers to shoots = 'R'; weigh over 90 kg refers to weight_in_kg > 90;,SELECT COUNT(T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T2.weight_in_kg > 90 AND T1.shoots = 'R'
ice_hockey_draft,Please list the names of all the players that are over 90 kg and are right-shooted.,names of the players refers to PlayerName; over 90 kg refers to weight_in_kg > 90; right-shooted refers to shoots = 'R';,SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T2.weight_in_kg > 90 AND T1.shoots = 'R'
ice_hockey_draft,What is the BMI of David Bornhammar?,"BMI = DIVIDE(weight_in_kg, power(DIVIDE(height_in_cm, 100), 2));",SELECT CAST(T2.weight_in_kg AS REAL) / (CAST(T3.height_in_cm AS REAL) / 100 * (CAST(T3.height_in_cm AS REAL) / 100)) FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id INNER JOIN height_info AS T3 ON T1.height = T3.height_id WHERE T1.PlayerName = 'David Bornhammar'
ice_hockey_draft,What is the average height in centimeters of all the players in the position of defense?,average = AVG(height_in_cm); players refers to PlayerName; position of defense refers to position_info = 'D' ;,SELECT CAST(SUM(T2.height_in_cm) AS REAL) / COUNT(T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T1.position_info = 'D'
ice_hockey_draft,What is the weight in pounds of the heaviest player?,weight in pounds refers to weight_in_lbs; heaviest player refers to MAX(weight_in_lbs);,SELECT MAX(T2.weight_in_lbs) FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id
ice_hockey_draft,How many right-shooted players have a height of 5'7''?,"right-shooted players refers to shoots = 'R'; height of 5'7'' refers to height_in_inch = '5''7""';","SELECT COUNT(T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T2.height_in_inch = '5''7""' AND T1.shoots = 'R'"
ice_hockey_draft,"Among the players whose total NHL games played in their first 7 years of NHL career is no less than 500, what is the name of the player who committed the most rule violations?",total NHL games played in their first 7 years of NHL career is no less than 500 refers to sum_7yr_GP > 500; name of the player refers to PlayerName; committed the most rule violations refers to MAX(PIM);,SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.sum_7yr_GP > 500 ORDER BY T2.PIM DESC LIMIT 1
ice_hockey_draft,"What is the height in centimeter of the tallest player born in Edmonton, Alberta, Canada?","height in centimeter refers to height_in_cm; tallest player refers to MAX(height_in_cm); born in Edmonton, Alberta, Canada refers to birthplace = 'Edmonton, AB, CAN';","SELECT T2.height_in_cm FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T1.birthplace = 'Edmonton, AB, CAN' ORDER BY T2.height_in_cm DESC LIMIT 1"
ice_hockey_draft,"How many players, who were drafted by Anaheim Ducks in 2008, have played for U.S. National U18 Team?",drafted by Anaheim Ducks refers to overallby = 'Anaheim Ducks'; in 2008 refers to draftyear = 2008; played for U.S. National U18 Team refers to TEAM = 'U.S. National U18 Team';,SELECT COUNT(DISTINCT T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.overallby = 'Anaheim Ducks' AND T1.draftyear = 2008 AND T2.TEAM = 'U.S. National U18 Team'
ice_hockey_draft,What is the weight in kilograms of the player with the highest number of goal differential of all time?,weight in kilograms refers to weight_in_kg; highest number of goal differential of all time refers to MAX(PLUSMINUS);,SELECT T3.weight_in_kg FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID INNER JOIN weight_info AS T3 ON T2.weight = T3.weight_id ORDER BY T1.PLUSMINUS DESC LIMIT 1
ice_hockey_draft,Who is the most valuable player in QMJHL league during the 2004-2005 season?,most valuable player refers to MAX(P); QMJHL league refers to LEAGUE = 'QMJHL'; 2004-2005 season refers to SEASON = '2004-2005';,SELECT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON BETWEEN '2004' AND '2005' AND T1.LEAGUE = 'QMJHL' ORDER BY T1.P DESC LIMIT 1
ice_hockey_draft,What are the names of the players who played for Acadie-Bathurst Titan during the regular season in 1998-1999?,names of the players refers to PlayerName; played for Acadie-Bathurst Titan refers to TEAM = 'AcadieandBathurst Titan'; regular season refers to GAMETYPE = 'Regular Season'; in 1998-1999 refers to SEASON = '1998-1999';,SELECT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '1998-1999' AND T1.GAMETYPE = 'Regular Season' AND T1.TEAM = 'Acadie-Bathurst Titan'
ice_hockey_draft,How many games did the tallest player have ever played?,tallest player refers to MAX(height_in_cm);,SELECT T1.GP FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.ELITEID = ( SELECT t.ELITEID FROM PlayerInfo t ORDER BY t.height DESC LIMIT 1 )
ice_hockey_draft,Who is the youngest player to have played during the 1997-1998 season for OHL League?,youngest player refers to MAX(birthdate); 1997-1998 season refers to SEASON = '1997-1998'; OHL league refers to LEAGUE = 'OHL';,SELECT DISTINCT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '1997-1998' AND T1.LEAGUE = 'OHL' ORDER BY T2.birthdate DESC LIMIT 1
ice_hockey_draft,"Among the players who played 72 games, how many are left-shooters?",played 72 games refers to GP = 72; left-shooters refers to shoots = 'L';,SELECT COUNT(T2.ELITEID) FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.GP = 72 AND T2.shoots = 'L'
ice_hockey_draft,What is the difference in the number of goals scored by Pavel Brendl during the regular season versus the playoffs in the 1998-1999 season?,"difference = SUBTRACT(SUM(G WHERE GAMETYPE = 'Regular Season'), SUM(G WHERE GAMETYPE = 'Playoffs') WHERE SEASON = '1998-1999'); number of goals scored refers to G; regular season refers to GAMETYPE = 'Regular Season'; playoffs refers to GAMETYPE = 'Playoffs'; 1998-1999 season refers to SEASON = '1998-1999';","SELECT T3.Rs_G - T4.Pf_G AS diff FROM ( SELECT T2.PlayerName, T1.G AS Rs_G FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.PlayerName = 'Pavel Brendl' AND T1.SEASON = '1998-1999' AND T1.GAMETYPE = 'Regular Season' ) AS T3 INNER JOIN ( SELECT T2.PlayerName, T1.G AS Pf_G FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.PlayerName = 'Pavel Brendl' AND T1.SEASON = '1998-1999' AND T1.GAMETYPE = 'Playoffs' ) AS T4 ON T3.PlayerName = T4.PlayerName"
ice_hockey_draft,What is the average weight in pounds of all the players with the highest prospects for the draft?,average = AVG(weight_in_lbs); weight in pounds refers to weight_in_lbs; players refers to PlayerName; highest prospects for the draft refers to MAX(CSS_rank);,SELECT CAST(SUM(T2.weight_in_lbs) AS REAL) / COUNT(T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T1.CSS_rank = ( SELECT MAX(CSS_rank) FROM PlayerInfo )
ice_hockey_draft,"Among all the teams that made the playoffs in the 2007-2008 season, identify the percentage that played over 20 games.","playoffs refers to GAMETYPE = 'Playoffs'; percentage = MULTIPLY(DIVIDE(SUM(GP > 20), COUNT(ELITEID)), 100); played over 20 games refers to GP > 20; 2007-2008 season refers to SEASON = '2007-2008';",SELECT CAST(COUNT(CASE WHEN GP > 20 THEN TEAM ELSE NULL END) AS REAL) * 100 / COUNT(TEAM) FROM SeasonStatus WHERE SEASON = '2007-2008' AND GAMETYPE = 'Playoffs'
ice_hockey_draft,Name the player who scored the most goals in a single game in the 2007-2008 season of WHL?,name of the player refers to PlayerName; scored the most goals in a single game refers to MAX(G); WHL refers to LEAGUE = 'WHL'; 2007-2008 season refers to SEASON = '2007-2008';,SELECT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2007-2008' AND T1.LEAGUE = 'WHL' ORDER BY T1.G DESC LIMIT 1
ice_hockey_draft,Name the Chilliwack Chiefs players who have scored 100 points or more in the NHL.,name of the player refers to PlayerName; Chilliwack Chiefs refers to TEAM = 'Chilliwack Chiefs'; scored 100 points or more in the NHL refers to P > 100;,SELECT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.TEAM = 'Chilliwack Chiefs' AND T1.P >= 100
ice_hockey_draft,Identify the players who weigh 120 kg.,players refers to PlayerName; weigh 120 kg refers to weight_in_kg = 120;,SELECT T2.PlayerName FROM weight_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.weight_id = T2.weight WHERE T1.weight_in_kg = 120
ice_hockey_draft,Identify the players with the same height as Brian Gionta. How tall are they?,players refers to PlayerName; height refers to height_in_cm;,"SELECT T2.PlayerName, T1.height_in_cm FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height WHERE T2.height = ( SELECT height FROM PlayerInfo WHERE PlayerName = 'Brian Gionta' )"
ice_hockey_draft,Identify the name and position of the player who has committed the most rule violations.,name of the player refers to PlayerName; position of the player refers to position_info; committed the most rule violations refers to MAX(PIM);,"SELECT T2.PlayerName, T2.position_info FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.PIM = ( SELECT MAX(PIM) FROM SeasonStatus )"
ice_hockey_draft,Name the player who has the most NHL points in draft year.,name of the player refers to PlayerName; most NHL points in draft year refers to MAX(P);,SELECT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.P = ( SELECT MAX(P) FROM SeasonStatus )
ice_hockey_draft,"Among all players drafted by the Toronto Maple Leafs, identify the percentage who are from Eastern Europe.","players refers to PlayerName; drafted by the Toronto Maple Leafs refers to overallby = 'Toronto Maple Leafs'; percentage = MULTIPLY(DIVIDE(SUM(nation = 'Eastern Europe'), COUNT(ELITEID) WHERE overallby = 'Toronto Maple Leafs'), 100); from Eastern Europe refers to nation in ('Belarus', 'Bulgaria', 'Czech Republic', 'Hungary', 'Moldova', 'Poland', 'Romania', 'Slovakia', 'Ukraine'); countries in a continent can be identified by referring to https://worldpopulationreview.com/country-rankings/list-of-countries-by-continent;","SELECT CAST(COUNT(CASE WHEN nation IN ('Belarus', 'Czech Rep.', 'Slovakia', 'Ukraine') THEN ELITEID ELSE NULL END) AS REAL) * 100 / COUNT(ELITEID) FROM PlayerInfo WHERE overallby = 'Toronto Maple Leafs'"
ice_hockey_draft,"Among all players drafted by the Toronto Maple Leafs in 2008, identify the player with the highest prospects for the draft.",players refers to PlayerName; drafted by the Toronto Maple Leafs refers to overallby = 'Toronto Maple Leafs'; highest prospects for the draft refers to MAX(CSS_rank);,SELECT PlayerName FROM PlayerInfo WHERE overallby = 'Toronto Maple Leafs' AND draftyear = '2008' ORDER BY CSS_rank DESC LIMIT 1
ice_hockey_draft,Name the player and his team who made the playoffs in the 2006-2007 season of SuperElit league with the highest points.,name of the player refers to PlayerName; playoffs refers to GAMETYPE = 'Playoffs'; highest points refers to MAX(P); 2006-2007 season refers to SEASON = '2006-2007'; SuperElit league refers to LEAGUE = 'SuperElit';,"SELECT T2.PlayerName, T1.TEAM FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2006-2007' AND T1.GAMETYPE = 'Playoffs' AND T1.LEAGUE = 'SuperElit' ORDER BY T1.P DESC LIMIT 1"
ice_hockey_draft,How many players who were drafted by the Toronto Maple Leafs have played over 300 games in their first 7 years of the NHL career?,drafted by the Toronto Maple Leafs refers to overallby = 'Toronto Maple Leafs'; played over 300 games in their first 7 years of the NHL career refers to sum_7yr_GP > 300;,SELECT COUNT(ELITEID) FROM PlayerInfo WHERE overallby = 'Toronto Maple Leafs' AND sum_7yr_GP > 300
ice_hockey_draft,How tall is the player from Yale University who picked up 28 penalty minutes in the 2005-2006 season?,how tall refers to height_in_cm; Yale University refers to TEAM = 'Yale Univ.'; 28 penalty minutes refers to PIM = '28'; 2005-2006 season refers to SEASON = '2005-2006';,SELECT T3.height_in_cm FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID INNER JOIN height_info AS T3 ON T2.height = T3.height_id WHERE T1.SEASON = '2005-2006' AND T1.TEAM = 'Yale Univ.' AND T1.PIM = 28
ice_hockey_draft,"Among all goals scored by Calgary Hitmen in the 2007-2008 season, identify the percentage scored by Ian Schultz.","goals scored refers to G; Calgary Hitmen refers to TEAM = 'Calgary Hitmen'; percentage = MULTIPLY(DIVIDE(SUM(G WHERE PlayerName = 'Ian Schultz'), SUM(G)), 100); 2007-2008 season refers to SEASON = '2007-2008';",SELECT CAST(SUM(CASE WHEN T2.PlayerName = 'Ian Schultz' THEN T1.G ELSE 0 END) AS REAL) * 100 / SUM(T1.G) FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2007-2008' AND T1.TEAM = 'Calgary Hitmen'
ice_hockey_draft,"Among all penalty minutes picked up by Ak Bars Kazan in the 1999-2000 season, identify the percentage picked up by Yevgeni Muratov.","penalty minutes refers to PIM; Ak Bars Kazan refers to TEAM = 'Ak Bars Kazan'; percentage = MULTIPLY(DIVIDE(SUM(PIM WHERE PlayerName = 'Yevgeni Muratov'), SUM(PIM)), 100.0); 1999-2000 season refers to SEASON = '1999-2000';",SELECT CAST(SUM(CASE WHEN T2.PlayerName = 'Yevgeni Muratov' THEN T1.PIM ELSE 0 END) AS REAL) * 100 / SUM(T1.PIM) FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '1999-2000' AND T1.TEAM = 'Ak Bars Kazan'
ice_hockey_draft,What is the birthplace of Aaron Gagnon?,FALSE;,SELECT birthplace FROM PlayerInfo WHERE PlayerName = 'Aaron Gagnon'
ice_hockey_draft,What is the weight in kg of Tony Martensson?,FALSE;,SELECT T2.weight_in_kg FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T1.PlayerName = 'Tony Martensson'
ice_hockey_draft,List out the name of players who weight 190 lbs.,name of players refers to PlayerName; weight 190 lbs refers to weight_in_lbs = 190;,SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T2.weight_in_lbs = 190
ice_hockey_draft,Who has the heaviest weight?,who refers to PlayerName; heaviest weight refers to MAX(weight_in_kg);,SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id ORDER BY T2.weight_in_kg DESC LIMIT 1
ice_hockey_draft,What is the percentage of players who were born in Denmark and weight above 154 lbs?,"percentage = MULTIPLY(DIVIDE(SUM(weight_in_lbs > 154 and nation = 'Denmark'), COUNT(ELITEID)), 100); players refers to PlayerName; born in Denmark refers to nation = 'Denmark'; weight above 154 lbs refers to weight_in_lbs > 154;",SELECT CAST(COUNT(CASE WHEN T1.nation = 'Denmark' AND T2.weight_in_lbs > 154 THEN T1.ELITEID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id
ice_hockey_draft,Which team does Andreas Jamtin belong to?,FALSE;,SELECT DISTINCT T1.TEAM FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.PlayerName = 'Andreas Jamtin'
ice_hockey_draft,List out the seasons that Niklas Eckerblom played.,FALSE;,SELECT DISTINCT T1.SEASON FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.PlayerName = 'Niklas Eckerblom'
ice_hockey_draft,Mention the type of game that Matthias Trattnig played.,type of game refers to GAMETYPE;,SELECT DISTINCT T1.GAMETYPE FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.PlayerName = 'Matthias Trattnig'
ice_hockey_draft,List out the nation of players who played for the 1997-1998 season .,players refers to PlayerName; 1997-1998 season refers to SEASON = '1997-1998';,SELECT DISTINCT T2.nation FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '1997-1998'
ice_hockey_draft,What is the highest point highest point of Per Mars in the draft year?,highest point in the draft year refers to MAX(P);,SELECT T1.P FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.PlayerName = 'Per Mars' ORDER BY T1.P DESC LIMIT 1
ice_hockey_draft,"Among the Italian players, who has the shortest height?",Italian refers to nation = 'Italy'; players refers to PlayerName; shortest height refers to MIN(height_in_cm);,SELECT T2.PlayerName FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height WHERE T2.nation = 'Italy' ORDER BY T1.height_in_cm ASC LIMIT 1
ice_hockey_draft,"List out the name of players who have a height of 5'8"".","name of players refers to PlayerName; height of 5'8"" refers to height_in_inch = '5''8""';","SELECT T2.PlayerName FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height WHERE T1.height_in_inch = '5''8""'"
ice_hockey_draft,How many players were born in 1982 and have a height above 182cm?,born in 1982 refers to birthyear = 1982; height above 182cm refers to height_in_cm > 182 ;,"SELECT COUNT(T2.ELITEID) FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height WHERE T1.height_in_cm > 182 AND strftime('%Y', T2.birthdate) = '1982'"
ice_hockey_draft,What is the percentage of Russian players who have a height of under 200 inch?,"percentage = MULTIPLY(DIVIDE(SUM(nation = 'Russia' WHERE height_in_cm < 200), COUNT(ELITEID)), 100); Russian refers to nation = 'Russia'; players refers to PlayerName; height of under 200 inch refers to height_in_cm < 200;",SELECT CAST(COUNT(CASE WHEN T1.height_in_cm < 200 AND T2.nation = 'Russia' THEN T2.ELITEID ELSE NULL END) AS REAL) * 100 / COUNT(T2.ELITEID) FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height
ice_hockey_draft,"Among the USA players, who has the lightest weight?","USA refers to nation = 'USA' ; players refers to PlayerName; lightest weight refers to MIN(weight_in_lbs);
",SELECT T2.PlayerName FROM weight_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.weight_id = T2.weight WHERE T2.nation = 'USA' ORDER BY T1.weight_in_lbs ASC LIMIT 1
ice_hockey_draft,Who among the players in season 2000-2001 has committed the highest rule violations or penalty minutes?,committed the highest rule violations or penalty minutes refers to MAX(PIM); 2000-2001 season refers to SEASON = '2000-2001',SELECT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2000-2001' ORDER BY T1.PIM DESC LIMIT 1
ice_hockey_draft,List the names of all players in team Avangard Omsk in season 2000-2001.,names of the players refers to PlayerName; team Avangard Omsk refers to TEAM = 'Avangard Omsk'; 2000-2001 season refers to SEASON = '2000-2001';,SELECT DISTINCT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2000-2001' AND T1.TEAM = 'Avangard Omsk'
ice_hockey_draft,Who among the players drafted by Arizona Coyotes in 2000 has committed the highest rule violations?,who refers to PlayerName; drafted by Arizona Coyotes refers to overallby = 'Arizona Coyotes'; committed the highest rule violations refers to MAX(PIM); in 2000 refers to draftyear = 2000;,SELECT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.overallby = 'Arizona Coyotes' AND T2.draftyear = 2000 ORDER BY T1.PIM DESC LIMIT 1
ice_hockey_draft,How many players were drafted by Arizona Coyotes whose height reaches 195 centimeters?,drafted by Arizona Coyotes refers to overallby = 'Arizona Coyotes'; height reaches 195 centimeters refers to height_in_cm = 195;,SELECT COUNT(T2.ELITEID) FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height WHERE T2.overallby = 'Arizona Coyotes' AND T1.height_in_cm = 195
ice_hockey_draft,List the names of all players from Avangard Omsk that have played for playoffs in season 2000-2001.,names of the players refers to PlayerName; Avangard Omsk refers to TEAM = 'Avangard Omsk'; playoffs refers to GAMETYPE = 'Playoffs'; 2000-2001 season refers to SEASON = '2000-2001';,SELECT DISTINCT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2000-2001' AND T1.TEAM = 'Avangard Omsk' AND T1.GAMETYPE = 'Playoffs'
ice_hockey_draft,Who is the most valuable player who played in the 2000-2001 season of the International league?,most valuable player refers to MAX(P); 2000-2001 season refers to SEASON = '2000-2001'; International league refers to LEAGUE = 'International';,SELECT DISTINCT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2000-2001' AND T1.LEAGUE = 'International' ORDER BY T1.P DESC LIMIT 1
ice_hockey_draft,How many players who were born in 1980 weigh 185 in pounds?,born in 1980 refers to birthyear = 1980; weigh 185 in pounds refers to weight_in_lbs = 185;,"SELECT COUNT(T2.ELITEID) FROM weight_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.weight_id = T2.weight WHERE T1.weight_in_lbs = 185 AND strftime('%Y', T2.birthdate) = '1980'"
ice_hockey_draft,Who has played the most game plays in the 2000-2001 season of the International league?,played the most game plays refers to MAX(GP); 2000-2001 season refers to SEASON = '2000-2001'; International league refers to LEAGUE = 'International';,SELECT DISTINCT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2000-2001' AND T1.LEAGUE = 'International' ORDER BY T1.GP DESC LIMIT 1
ice_hockey_draft,List the names of all players from Avangard Omsk who played in the 2000-2001 season of the International league that have no goals in draft year.,names of the players refers to PlayerName; Avangard Omsk refers to TEAM = 'Avangard Omsk'; International league refers to LEAGUE = 'International'; no goals in draft year refers to G = 0; 2000-2001 season refers to SEASON = '2000-2001';,SELECT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2000-2001' AND T1.LEAGUE = 'International' AND T1.TEAM = 'Czech Republic (all)' AND T1.G = 0
ice_hockey_draft,Who is the oldest player who played for Avangard Omsk during the regular season in 2000-2001?,"oldest player refers to MIN(birthdate); Avangard Omsk refers to TEAM = 'Avangard Omsk'; regular season refers to GAMETYPE = 'Regular Season'; 2000-2001 season refers to SEASON = '2000-2001';
",SELECT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2000-2001' AND T1.GAMETYPE = 'Regular Season' AND T1.TEAM = 'Avangard Omsk' ORDER BY T2.birthdate ASC LIMIT 1
ice_hockey_draft,"Among the players who played in OHL league during the regular season in 2007-2008, who is the player that attained the most number of assist?",OHL league refers to LEAGUE = 'OHL'; who refers to PlayerName; regular season refers to GAMETYPE = 'Regular Season'; most number of assist refers to MAX(A); 2007-2008 season refers to SEASON = '2007-2008';,SELECT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2007-2008' AND T1.LEAGUE = 'OHL' AND T1.GAMETYPE = 'Regular Season' ORDER BY T1.A DESC LIMIT 1
ice_hockey_draft,How many teams did the heaviest player drafted by Arizona Coyotes have played for?,heaviest player refers to MAX(weight_in_lb); drafted by Arizona Coyotes refers to overallby = 'Arizona Coyotes';,SELECT COUNT(T2.TEAM) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID INNER JOIN weight_info AS T3 ON T1.weight = T3.weight_id WHERE T1.overallby = 'Arizona Coyotes' ORDER BY T3.weight_in_lbs DESC LIMIT 1
ice_hockey_draft,Calculate the average weight in pounds of all players drafted by Arizona Coyotes.,average weight in pounds = AVG(weight_in_lbs); weight in pounds refers to weight_in_lbs; players refers to PlayerName; drafted by Arizona Coyotes refers to overallby = 'Arizona Coyotes';,SELECT CAST(SUM(T1.weight_in_lbs) AS REAL) / COUNT(T2.ELITEID) FROM weight_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.weight_id = T2.weight WHERE T2.overallby = 'Arizona Coyotes'
ice_hockey_draft,Calculate the average height in centimeter of all players who played in Acadie-Bathurst Titan during regular season.,average height in centimeter = AVG(height_in_cm); height in centimeter refers to height_in_cm; players refers to PlayerName; Acadie-Bathurst Titan refers to TEAM = 'Acadie-Bathurst Titan'; regular season refers to GAMETYPE = 'Regular Season';,SELECT CAST(SUM(T1.height_in_cm) AS REAL) / COUNT(T2.ELITEID) FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height INNER JOIN SeasonStatus AS T3 ON T2.ELITEID = T3.ELITEID WHERE T3.TEAM = 'Acadie-Bathurst Titan' AND T3.GAMETYPE = 'Regular Season'
ice_hockey_draft,How many games did Per Mars play in the 1997-1998 season?,1997-1998 season refers to SEASON = '1997-1998';,SELECT T2.GP FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.SEASON = '1997-1998' AND T1.PlayerName = 'Pavel Patera'
ice_hockey_draft,How heavy is Matthias Trattnig in kilograms?,how heavy in kilograms refers to weight_in_kg;,SELECT T2.weight_in_kg FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T1.PlayerName = 'Pavel Patera'
ice_hockey_draft,List the name of players who have a height over 5'9.,"names of players refers to PlayerName; height over 5'9 refers to height_in_inch > '5''9""';","SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T2.height_in_inch > '5''9""'"
ice_hockey_draft,What team did Niklas Eckerblom play in the 1997-1998 season?,1997-1998 season refers to SEASON = '1997-1998';,SELECT T2.TEAM FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.SEASON = '1997-1998' AND T1.PlayerName = 'Niko Kapanen'
ice_hockey_draft,Which team has the most Swedish?,Swedish refers to nation = 'Sweden'; team with the most Swedish refers to MAX(TEAM WHERE nation = 'Sweden');,"SELECT T.TEAM FROM ( SELECT T2.TEAM, COUNT(DISTINCT T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.nation = 'Sweden' GROUP BY T2.TEAM ORDER BY COUNT(DISTINCT T1.ELITEID) DESC LIMIT 1 ) AS T"
ice_hockey_draft,How many playoffs did Per Mars participate in?,playoffs refers to GAMETYPE = 'Playoffs';,SELECT SUM(T2.GP) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.PlayerName = 'Per Mars' AND T2.GAMETYPE = 'Playoffs'
ice_hockey_draft,Name the player who had the most goals for team Rimouski Oceanic in playoff.,name of the player refers to PlayerName; most goals refers to MAX(G); team Rimouski Oceanic refers to TEAM = 'Rimouski Oceanic'; playoff refers to GAMETYPE = 'Playoffs';,SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.TEAM = 'Rimouski Oceanic' AND T2.GAMETYPE = 'Playoffs' ORDER BY T2.G DESC LIMIT 1
ice_hockey_draft,Which country do most players of team Plymouth Whalers come from?,country and nation are synonyms; country where most players come from refers to MAX(COUNT(nation WHERE TEAM = 'Plymouth Whalers')); players refers to PlayerName; team Plymouth Whalers refers to TEAM = 'Plymouth Whalers';,"SELECT T.nation FROM ( SELECT T1.nation, COUNT(T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.TEAM = 'Plymouth Whalers' GROUP BY T1.nation ORDER BY COUNT(T1.ELITEID) DESC LIMIT 1 ) AS T"
ice_hockey_draft,Who had the most assists of team Plymouth Whalers in the 1999-2000 season?,who refers to PlayerName; most assists refers to MAX(A); team Plymouth Whalers refers to TEAM = 'Plymouth Whalers'; 1999-2000 season refers to SEASON = '1999-2000';,SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.TEAM = 'Plymouth Whalers' AND T2.SEASON = '1999-2000' ORDER BY T2.A DESC LIMIT 1
ice_hockey_draft,Indicate the height of all players from team Oshawa Generals in inches.,height in inches refers to height_in_inch; players refers to PlayerName; team Oshawa Generals refers to TEAM = 'Oshawa Generals';,SELECT T3.height_in_inch FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID INNER JOIN height_info AS T3 ON T1.height = T3.height_id WHERE T2.TEAM = 'Oshawa Generals'
ice_hockey_draft,Who is the oldest player that participated in OHL league in the 1997 - 2000 season?,oldest player refers to MIN(birthdate); OHL league refers to LEAGUE = 'OHL'; 1997-2000 season refers to SEASON = '1997-2000';,SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.LEAGUE = 'OHL' AND T2.SEASON = '1999-2000' ORDER BY T1.birthdate LIMIT 1
ice_hockey_draft,Who is the tallest player in team USA U20?,"tallest refers to MAX(height_in_cm); 
player refers to PlayerName; team USA U20 refers to TEAM = 'USA U20';","SELECT T.PlayerName FROM ( SELECT T1.PlayerName, T3.height_in_cm FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID INNER JOIN height_info AS T3 ON T1.height = T3.height_id WHERE T2.TEAM = 'USA U20' ORDER BY T3.height_in_cm DESC ) AS T WHERE T.height_in_cm = ( SELECT MAX(T3.height_in_cm) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID INNER JOIN height_info AS T3 ON T1.height = T3.height_id WHERE T2.TEAM = 'USA U20' )"
ice_hockey_draft,What is the percentage of Swedish players in playoffs games in the 1997 - 2000 season?,"percentage = MULTIPLY(DIVIDE(SUM(nation = 'Sweden'), COUNT(ELITEID) WHERE SEASON = '1997-2000'), 100); Swedish refers to nation = 'Sweden'; players refers to PlayerName; playoffs games refers to GAMETYPE = 'Playoffs'; 1997-2000 season refers to 3 consecutive SEASONs : '1997-1998', '1998-1999', '1999-2000';","SELECT DISTINCT CAST(COUNT(CASE WHEN T1.nation = 'Sweden' THEN T1.ELITEID ELSE NULL END) OVER (PARTITION BY T2.SEASON) AS REAL) * 100 / COUNT(T1.ELITEID) OVER (PARTITION BY T2.SEASON) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.SEASON IN ('1997-1998', '1998-1999', '1999-2000')"
ice_hockey_draft,Calculate the percentage of penalty minutes of Swedish players in OHL league among all players.,"percentage = MULTIPLY(DIVIDE(SUM(PIM WHERE nation = 'Sweden'), COUNT(ELITEID) WHERE LEAGUE = 'OHL'), 100); Swedish refers to nation = 'Sweden'; players refers to PlayerName; OHL league refers to LEAGUE = 'OHL';",SELECT CAST(COUNT(CASE WHEN T1.nation = 'Sweden' THEN T2.PIM ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.LEAGUE = 'OHL'
works_cycles,What is the average standard cost of product number CA-1098?,Average cost = AVG(StandardCost),SELECT AVG(T2.StandardCost) FROM Product AS T1 INNER JOIN ProductCostHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductNumber = 'CA-1098'
works_cycles,"For all the products, list the product name and its corresponding start date for the current standard cost.",The current standard cost refers to EndDate is NULL,"SELECT T1.Name, T2.StartDate FROM Product AS T1 INNER JOIN ProductCostHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T2.EndDate IS NULL"
works_cycles,List the products whereby the standard cost is $80 more than previous standard cost in history.,"SUBTRACT(product.StandardCost, CostHistory.StandardCost)>80",SELECT T1.Name FROM Product AS T1 INNER JOIN ProductCostHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.StandardCost - T2.StandardCost > 80 GROUP BY T1.Name
works_cycles,Name all products and total quantity for each item for shopping cart ID 14951.,,"SELECT T1.Name, T2.Quantity FROM Product AS T1 INNER JOIN ShoppingCartItem AS T2 ON T1.ProductID = T2.ProductID WHERE T2.ShoppingCartID = 14951"
works_cycles,List the product name with more than 5 quantity in the shopping cart.,Product with more than 5 quantity refers to Quantity>5,SELECT T1.Name FROM Product AS T1 INNER JOIN ShoppingCartItem AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Quantity > 5
works_cycles,"For all the purchase order transactions, name all the products with low quality.","Low quality refers to the product's quality class, therefore Class = 'L'",SELECT DISTINCT T1.Name FROM Product AS T1 INNER JOIN TransactionHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Class = 'L' AND T2.TransactionType = 'P' ORDER BY T1.Name
works_cycles,"Provide all the transactions whereby the quantiy is more than 10,000 pieces. State the product name and the selling price.","Quantity more than 10,000 pieces refers to Quantity>10000; selling price refers to ListPrice","SELECT DISTINCT T1.Name, T1.ListPrice FROM Product AS T1 INNER JOIN TransactionHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Quantity > 10000"
works_cycles,Which is a high quality product but with the lowest transacted quantity?,"High quality refers to the product's quality class, therefore Class = 'H'; the lowest transacted quantity refers to Quantity = 1",SELECT T1.Name FROM Product AS T1 INNER JOIN TransactionHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Class = 'H' ORDER BY T2.Quantity ASC LIMIT 1
works_cycles,How many transactions are there for product under the Mountain line?,"The Mountain line refers to the product line, therefore ProductLine = 'M'",SELECT COUNT(T2.TransactionID) FROM Product AS T1 INNER JOIN TransactionHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductLine = 'M'
works_cycles,How much would be the total sales profit for shopping cart ID 20621 ?,"Sales profit = MULTIPLY(SUBTRACT(ListPrice, StandardCost; Quantity)), where ShoppingCartID = '20621'",SELECT SUM((T1.ListPrice - T1.StandardCost) * T2.Quantity) FROM Product AS T1 INNER JOIN ShoppingCartItem AS T2 ON T1.ProductID = T2.ProductID WHERE T2.ShoppingCartID = 20621
works_cycles,List all product names that are high in quality. Please also state its selling price.,"High quality refers to the product's quality class, therefore Class = 'H'","SELECT Name, ListPrice FROM Product WHERE Class = 'H'"
works_cycles,Which product line has the most products that are salable?,Saleable product refers to FinishedGoodsFlag = 1,SELECT ProductLine FROM Product WHERE FinishedGoodsFlag = 1 GROUP BY ProductLine ORDER BY COUNT(FinishedGoodsFlag) DESC LIMIT 1
works_cycles,"Provide details of review from reviewer whose name begin with letter 'J'. State the product ID, rating and comments.",reviewer whose name begin with letter 'J' = ReviewerName LIKE 'J%',"SELECT ProductID, Rating, Comments FROM ProductReview WHERE ReviewerName LIKE 'J%'"
works_cycles,"State the product name, product line, rating and the selling price of product with the lowest rating.","Product with the lowest rating refers to the rating
given by the
reviewer where Rating = 1","SELECT T1.Name, T1.ProductLine, T2.Rating, T1.ListPrice FROM Product AS T1 INNER JOIN ProductReview AS T2 ON T1.ProductID = T2.ProductID ORDER BY T2.Rating ASC LIMIT 1"
works_cycles,Calculate the profit of each products. List all products with more than $100 in profit.,"Profit = AVG(SUBTRACT(ListPrice, StandardCost)>100",SELECT DISTINCT Name FROM Product WHERE ListPrice - StandardCost > 100
works_cycles,"List down the product name, reviewer name, rating and comments for product under the road line.","The Road line refers to the product line, therefore ProductLine = 'R'","SELECT T1.Name, T2.ReviewerName, T2.Rating, T2.Comments FROM Product AS T1 INNER JOIN ProductReview AS T2 USING (productID) WHERE T1.ProductLine = 'R'"
works_cycles,How many people reviewed for product named HL Mountain Pedal? What is the average rating?,"AVG(Rating) = DIVIDE(SUM(rating), COUNT(ReviewerName))","SELECT COUNT(T1.ProductID), AVG(T2.Rating) FROM Product AS T1 INNER JOIN ProductReview AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'HL Mountain Pedal'"
works_cycles,List the purchase order whereby all received quantity were rejected? Name those product.,Rejected refers rejected product in which to RejectedQty = 1,SELECT T1.Name FROM Product AS T1 INNER JOIN PurchaseOrderDetail AS T2 ON T1.ProductID = T2.ProductID WHERE T2.RejectedQty = T2.ReceivedQty AND T2.RejectedQty <> 0
works_cycles,"Among all products without any rejected quantity, which product has the highest line total? State the product name and unit price.",Product without any rejected quantity refers to RejectedQty = 0,"SELECT T1.Name, T2.UnitPrice FROM Product AS T1 INNER JOIN PurchaseOrderDetail AS T2 ON T1.ProductID = T2.ProductID WHERE T2.RejectedQty = 0 ORDER BY T2.LineTotal DESC LIMIT 1"
works_cycles,List all product names and its product line for all purchase order with order quantity of 5000 or more.,Purchase order with order quantity of 5000 or more refers to OrderQty> = 5000,"SELECT T1.Name, T1.ProductLine FROM Product AS T1 INNER JOIN PurchaseOrderDetail AS T2 ON T1.ProductID = T2.ProductID WHERE T2.OrderQty > 4999"
works_cycles,What is the total ordered quantity for products under the 'Touring' line?,"The Touring line refers to the product line, therefore ProductLine = 'T'",SELECT SUM(T2.OrderQty) FROM Product AS T1 INNER JOIN PurchaseOrderDetail AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductLine = 'T'
works_cycles,"Among the low quality product, which product has the highest line total? List the product name and its line total?","Low quality refers to the product's quality class, therefore Class = 'L'","SELECT T1.Name, T2.LineTotal FROM Product AS T1 INNER JOIN PurchaseOrderDetail AS T2 ON T1.ProductID = T2.ProductID WHERE Class = 'L' ORDER BY OrderQty * UnitPrice DESC LIMIT 1"
works_cycles,Which product has the highest profit on net? State the product name.,"Profit on net = SUBTRACT(LastReceiptCost, StandardPrice)",SELECT T1.Name FROM Product AS T1 INNER JOIN ProductVendor AS T2 ON T1.ProductID = T2.ProductID ORDER BY T2.LastReceiptCost - T2.StandardPrice DESC LIMIT 1
works_cycles,List all products with minimum order quantity of 100 and order them by product name in descending order.,miinimum order quantity refers to MinOrderQty = 100,SELECT DISTINCT T1.Name FROM Product AS T1 INNER JOIN ProductVendor AS T2 ON T1.ProductID = T2.ProductID WHERE T2.MinOrderQty = 100 ORDER BY T1.Name DESC
works_cycles,List the name and calculate its profit for product with the highest rating in review.,"Profit = SUBTRACT(ListPrice, StandardCost); the highest rating in review refers to Rating = 5","SELECT T1.Name, T1.ListPrice - T1.StandardCost FROM Product AS T1 INNER JOIN ProductReview AS T2 ON T1.ProductID = T2.ProductID ORDER BY T2.Rating DESC LIMIT 1"
works_cycles,What is the total profit all transactions with product ID 827?,"Profit = MULTIPLY(SUBTRACT(ListPrice, StandardCost) Quantity))",SELECT SUM((T1.ListPrice - T1.StandardCost) * T2.Quantity) FROM Product AS T1 INNER JOIN TransactionHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductID = 827
works_cycles,Which currency pair's average exchange rate for the day is the highest?,currency pair refers to FromCurrencyCode/ToCurrencyCode,"SELECT FromCurrencyCode, ToCurrencyCode FROM CurrencyRate ORDER BY AverageRate DESC LIMIT 1"
works_cycles,How many products with the highest unit price were ordered?,number of products refers to OrderQty,SELECT OrderQty FROM PurchaseOrderDetail ORDER BY UnitPrice DESC LIMIT 1
works_cycles,"Between Northwest and Southeast of the United States, which territory one recorded the highest amount of sales last year?",United States refers to CountryRegionCode = 'US';,SELECT Name FROM SalesTerritory WHERE CountryRegionCode = 'US' AND (Name = 'Northwest' OR Name = 'Southeast') ORDER BY SalesLastYear DESC LIMIT 1
works_cycles,What is the full name of the Document Control Manager who is in charge of all Level 1 approved documents?,full Name = FirstName+MiddleName+Last Name; approved document refers to Status = 2;,"SELECT T1.FirstName, T1.MiddleName, T1.LastName FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Document AS T3 ON T3.Owner = T2.BusinessEntityID WHERE T2.JobTitle = 'Document Control Manager' AND T3.DocumentLevel = 1 AND T3.Status = 2 GROUP BY T1.FirstName, T1.MiddleName, T1.LastName"
works_cycles,Which customer has the highest subtotal amount of sales orders whose assigned to the salesperson with the highest bonus?,highest subtotal amount of sales order refers to max(SubTotal);,SELECT T1.CustomerID FROM SalesOrderHeader AS T1 INNER JOIN SalesPerson AS T2 ON T1.SalesPersonID = T2.BusinessEntityID ORDER BY T1.SubTotal DESC LIMIT 1
works_cycles,What is the total price of Sales Order ID 46625 with Volume Discount 11 to 14 and Product ID 716?,"total price = multiply(UnitPrice, OrderQty);",SELECT T2.UnitPrice * T2.OrderQty FROM SpecialOffer AS T1 INNER JOIN SalesOrderDetail AS T2 ON T1.SpecialOfferID = T2.SpecialOfferID WHERE T1.Description = 'Volume Discount 11 to 14' AND T1.SpecialOfferID = 2 AND T2.ProductID = 716 AND T2.SalesOrderID = 46625
works_cycles,"Of the products that has a reorder inventory point of no more than 600, how many manufactured in-house products that takes 1 day to manufacture with BOM Level 4 are there?",ReorderPoint<600; product is manufactured in-house refers to Makeflag = 1;,SELECT COUNT(T1.ProductID) FROM Product AS T1 INNER JOIN BillOfMaterials AS T2 ON T1.ProductID = T2.ProductAssemblyID WHERE T1.MakeFlag = 1 AND T1.DaysToManufacture = 1 AND T2.BOMLevel = 4 AND T1.ReorderPoint <= 600
works_cycles,What is the highest amount of bonus earned by the sales person in Canada?,Canada is name of a sales territory,SELECT T2.Bonus FROM SalesTerritory AS T1 INNER JOIN SalesPerson AS T2 ON T1.TerritoryID = T2.TerritoryID WHERE T1.CountryRegionCode = 'CA' ORDER BY T2.SalesQuota DESC LIMIT 1
works_cycles,What are the names of the product that has the lowest rating?,lowest rating refers to Rating = 1;,SELECT T2.Name FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Rating = ( SELECT Rating FROM ProductReview ORDER BY Rating ASC LIMIT 1 )
works_cycles,How many of the workers who started working in 2009 are from the Production Department?,StartDate BETWEEN '2009-01-01' AND '2009-12-31';,SELECT COUNT(T2.BusinessEntityID) FROM Department AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.DepartmentID = T2.DepartmentID WHERE T2.StartDate >= '2009-01-01' AND T2.StartDate < '2010-01-01' AND T1.Name = 'Production'
works_cycles,Who is the company's highest-paid single female employee? Include her full name and job title.,full name = FirstName+MiddleName+LastName; highest-paid refers to max(Rate); single refers to Status = 'S'; female refers to Gender = 'F';,"SELECT T3.FirstName, T3.MiddleName, T3.LastName, T1.JobTitle FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Person AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T1.MaritalStatus = 'S' AND T1.Gender = 'F' ORDER BY T2.Rate DESC LIMIT 1"
works_cycles,Who is the Vice President of Engineering and when did he join the company? Indicate his/her full name.,full name = FirstName+MiddleName+LastName; HiredDate refers to the date the person joins the company;,"SELECT T2.FirstName, T2.MiddleName, T2.LastName, T1.HireDate FROM Employee AS T1 INNER JOIN Person AS T2 USING (BusinessEntityID) WHERE T1.JobTitle = 'Vice President of Engineering'"
works_cycles,How many active employees whose payrate is equal or below 30 per hour.,active employee refers to CurrentFlag = 1; Rate< = 30;,SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.CurrentFlag = 1 AND T2.Rate <= 30
works_cycles,Which department has a worker who just recently started working?,recently started working refers to latest StartDate;,SELECT T1.Name FROM Department AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.DepartmentID = T2.DepartmentID ORDER BY T2.StartDate DESC LIMIT 1
works_cycles,Which store sales person was reently hired? Indicate his/her full name and gender.,SC is an abbreviation for Store Contact; store contact person refers to PersonType = 'SC'; recently hired refers to latest StartDate;,"SELECT T2.FirstName, T2.MiddleName, T2.LastName, T1.Gender FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.PersonType = 'SP'"
works_cycles,How frequently do the employee with the least number of sick leave hours get paid?,least number of sick leave refers to min(SickLeaveHours); PayFrequency = 1 means ‘Salary received monthly’; PayFrequency = 2 means ‘Salary received biweekly';,SELECT T2.PayFrequency FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID ORDER BY T1.SickLeaveHours ASC LIMIT 1
works_cycles,Which job title has the lowest pay?,lowest pay refers to min(Rate);,SELECT T1.JobTitle FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID ORDER BY T2.Rate ASC LIMIT 1
works_cycles,What is the total number of employees that worked in the Finance department?,,SELECT COUNT(T2.BusinessEntityID) FROM Department AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 USING (DepartmentID) WHERE T1.Name = 'Finance'
works_cycles,What is the profit of the product with the highest list price and of the product with the lowest list price other than 0? Indicates the depth the component is from its parent.,"profit = subtract(ListPrice, StandardCost); the depth the component from its parent refers to BOMLevel;","SELECT ( SELECT ListPrice - StandardCost FROM Product WHERE ListPrice != 0 ORDER BY ListPrice DESC LIMIT 1 ) , ( SELECT ListPrice - StandardCost FROM Product WHERE ListPrice != 0 ORDER BY ListPrice LIMIT 1 )"
works_cycles,"Among the companies to which Adventure Works Cycles purchases parts or other goods, what is the profit on net obtained from the vendor who has an above average credit rating? Kindly indicate each names of the vendor and the corresponding net profits.","above average credit rating refers to CreditRating = 3; profit on net = subtract(LastReceiptCost, StandardPrice);","SELECT T2.Name, T1.LastReceiptCost - T1.StandardPrice FROM ProductVendor AS T1 INNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.CreditRating = 3"
works_cycles,How many accounts have an address that is too long?,address that is too long refers to AddressLine2! = null,SELECT COUNT(*) FROM Address WHERE AddressLine2 <> ''
works_cycles,What is the postal code of the street address of the account that is latest updated?,account latest updated refers to year(ModifiedDate) = 2022 and month(ModifiedDate) = 10,SELECT PostalCode FROM Address ORDER BY ModifiedDate DESC LIMIT 1
works_cycles,What is the longest assembly item duration for bicycles?,"longest assembly item duration = max(subtract(EndDate,StartDate))",SELECT JULIANDAY(EndDate) - JULIANDAY(StartDate) FROM BillOfMaterials ORDER BY JULIANDAY(EndDate) - JULIANDAY(StartDate) DESC LIMIT 1
works_cycles,How many assembly items for bicycles aren't finished?,assembly lines that are not finished refers to EndDate = null,SELECT COUNT(BillOfMaterialsID) FROM BillOfMaterials WHERE EndDate IS NULL
works_cycles,Please list the unit measure code of the component that is of the greatest need in quantity to create the assembly.,greatest need in quantity refers to max(PerAssemblyQty),SELECT UnitMeasureCode FROM BillOfMaterials ORDER BY PerAssemblyQty DESC LIMIT 1
works_cycles,How many product maintenance documents are private?,product maintenance documents are private refers to DocumentSummary = null,SELECT COUNT(DocumentNode) FROM Document WHERE DocumentSummary IS NULL
works_cycles,Please list the titles of the documents that are pending approval.,documents pending approval refers to Status = 1,SELECT Title FROM Document WHERE Status = 1
works_cycles,Please list the job titles of the employees who has a document that has been approved.,document has been approved refers to Status = 2,"SELECT DISTINCT T2.BusinessEntityID, T2.JobTitle FROM Document AS T1 INNER JOIN Employee AS T2 ON T1.Owner = T2.BusinessEntityID WHERE T1.Status = 2"
works_cycles,What is the pay frequency of the oldest employee?,oldest employee refers to min(BirthDate); PayFrequency = 1 refers to ‘Salary received monthly’; PayFrequency = 2 refers to ‘Salary received biweekly',SELECT T1.PayFrequency FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID ORDER BY T2.BirthDate ASC LIMIT 1
works_cycles,"Among the employees whose pay frequencies are the highest, how many of them are married?",married refers to MaritalStatus = M; highest pay frequency refers to PayFrequency = 2,SELECT COUNT(T1.BusinessEntityID) FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.MaritalStatus = 'M' AND T1.PayFrequency = ( SELECT PayFrequency FROM EmployeePayHistory ORDER BY PayFrequency DESC LIMIT 1 )
works_cycles,"For the employee who has been hired the latest, what is his or her pay rate?",hired the latest refers to max(HireDate),SELECT T1.Rate FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID ORDER BY T2.HireDate DESC LIMIT 1
works_cycles,"Among the employees who have a pay rate of above 40, how many of them are male?",pay rate above 40 refers to Rate>40; male employee refers to Gender = M,SELECT SUM(CASE WHEN T2.Gender = 'M' THEN 1 ELSE 0 END) FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.Rate > 40
works_cycles,What is the highest pay rate of the employees who are exempt from collective bargaining?,employee exempt from collective bargaining refers to SalariedFlag = 1; highest pay rate refers to max(Rate),SELECT T1.Rate FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.SalariedFlag = 1 ORDER BY T1.Rate DESC LIMIT 1
works_cycles,"For the employees who have the highest pay frequency, please list their vacation hours.",highest pay frequency refers to PayFrequency = 2,SELECT T2.VacationHours FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.BusinessEntityID = ( SELECT BusinessEntityID FROM EmployeePayHistory ORDER BY Rate DESC LIMIT 1 )
works_cycles,What is the pay rate of the employee who has the longest vacation hours?,longest vacation hour refers to max(VacationHours),SELECT T1.Rate FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID ORDER BY T2.VacationHours DESC LIMIT 1
works_cycles,How many employees with a pay rate of over 35 have more than 10 sick leave hours?,more than 10 sick leave hours refers to SickLeaveHours>10; pay rate over 35 refers to Rate>35;,SELECT COUNT(T1.BusinessEntityID) FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.SickLeaveHours > 10 AND T1.Rate > 35
works_cycles,"Among the active male employees, how many of them are paid with the highest frequency?",active status of employees refers to CurrentFlag = 1; Male refers to Gender = 'M'; highest frequency refers to PayFrequency = 2;,SELECT COUNT(T1.BusinessEntityID) FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.CurrentFlag = 1 AND T2.Gender = 'M' AND T1.PayFrequency = 2
works_cycles,How many male employees have the job position of sales person?,Sales person refers to PersonType = 'SP'; Male refers to Gender = 'M';,SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.Gender = 'M' AND T2.PersonType = 'SP'
works_cycles,What is the job position of the oldest employee?,Oldest employee refers to Max ( Subtract((now())-BirthDate));,SELECT T2.PersonType FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID ORDER BY T1.BirthDate ASC LIMIT 1
works_cycles,What is the name style of the employee with the lowest pay rate?,lowest pay rate refers to Min(Rate);,SELECT T2.NameStyle FROM EmployeePayHistory AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.Rate IS NOT NULL ORDER BY T1.Rate ASC LIMIT 1
works_cycles,"Among the employees who are married, how many of them have a western name style?",married refers to MaritalStatus = 'M'; western name style refers to NameStyle = '0';,SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.NameStyle = 0 AND T1.MaritalStatus = 'M'
works_cycles,"Among the employees who have more than 10 hours of sick leave, how many of them wish to receive e-mail promotions?","Contact does wish to receive e-mail promotions refers to EmailPromotion = (1,2); more than 10 hours of sick leave refer to SickLeaveHours >10;",SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.EmailPromotion = 1 AND T1.SickLeaveHours > 10
works_cycles,Please list the employees who have more than 20 vacations hours and wish to receive e-mail promotions.,"Contact does wish to receive e-mail promotions refers to EmailPromotion = (1,2); more than 20 vacations hours refers to VacationHours>20",SELECT T1.BusinessEntityID FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.EmailPromotion = 1 AND T1.VacationHours > 20
works_cycles,Please give the additional contact information of the oldest employee with the jod position of sales person.,Sales person refers to PersonType = 'SP'; oldest employee refers to Max (Subtract((now())-BirthDate));,SELECT T2.AdditionalContactInfo FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE PersonType = 'SP' ORDER BY T1.BirthDate ASC LIMIT 1
works_cycles,What is the first name of the male employee who has a western name style?,western name style refers to NameStyle = 0; Male refers to Gender = 'M';,SELECT T2.FirstName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.NameStyle = 0 AND T1.Gender = 'M'
works_cycles,"Among the active employees, how many of them have a courtesy title of ""Mr""?",active status of employees refers to CurrentFlag = 1;,SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.CurrentFlag = 1 AND T2.Title = 'Mr.'
works_cycles,Please give the personal information of the married employee who has the highest pay rate.,married refers to MaritalStatus = 'M'; Highest pay rate refers to Max(Rate),SELECT T2.Demographics FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN EmployeePayHistory AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T1.MaritalStatus = 'M' ORDER BY T3.Rate DESC LIMIT 1
works_cycles,What is the surname suffix of the employee who works as a store contact and has the longest sick leave hours?,store contact refers to PersonType = 'SC';,SELECT T2.Suffix FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.PersonType = 'SP' ORDER BY T1.SickLeaveHours DESC LIMIT 1
works_cycles,"Among the married employees with the highest pay frequency, how many of them have an eastern name style?",married refers to MaritalStatus = 'M'; Eastern name style refers to NameStyle = 1;,SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN EmployeePayHistory AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T1.MaritalStatus = 'M' AND T2.NameStyle = 1 AND T3.Rate = ( SELECT Rate FROM EmployeePayHistory ORDER BY Rate DESC LIMIT 1 )
works_cycles,How many active employees do not wish to receive e-mail promotions?,active status of employees refers to CurrentFlag = 1; the employee does not wish to receive an e-mail promotion refers to EmailPromotion = 0;,SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.CurrentFlag = 1 AND T2.EmailPromotion = 1
works_cycles,Please list the credit card IDs of the employees who work as store contact.,store contact refers to PersonType = 'SC';,SELECT T2.CreditCardID FROM Person AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.PersonType = 'SC'
works_cycles,How many vacation hours do the male employees have on average?,"employee refers to PersonType = 'EM'; Male refers to Gender = 'M'; Average = Divide( SUM(VacationHours(PersonType = 'EM'& Gender = 'M')),Count(BusinessEntityID(PersonType = 'EM' & Gender = 'M')));",SELECT CAST(SUM(T1.VacationHours) AS REAL) / COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.Gender = 'M' AND T2.PersonType = 'EM'
works_cycles,"Among the employees who are married and wish to receive e-mail promotions, how much higher is their highest pay rate from the average pay rate?","married refers to MaritalStatus = 'M'; Contact does wish to receive e-mail promotions from Adventure Works refers to EmailPromotion = 1; Average = Divide (Sum(Rate (MaritalStatus = 'M' & EmailPromotion = 1))), Count (BusinessEntityID (MaritalStatus = 'M' & EmailPromotion = 1)); MAX(Rate (MaritalStatus = 'M' & EmailPromotion = 1) - Average;",SELECT MAX(T1.Rate) - SUM(T1.Rate) / COUNT(T1.BusinessEntityID) FROM EmployeePayHistory AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Employee AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T2.EmailPromotion = 2 AND T3.MaritalStatus = 'M'
works_cycles,"If a married employee has a western name style, what is the probability of him or her working as a store contact?","married refers to MaritalStatus = 'M'; western name style refers to NameStyle = 0; store contact refers to PersonType = 'SC'; probability = Divide (Count (BusinessEntityID( PersonType = 'SC' & MaritalStatus = 'M')), Count (BusinessEntityID ( PersonType) & MariatlStatus = 'M'))
","SELECT CAST(COUNT(IIF(T1.PersonType = 'SC', T1.PersonType, NULL)) AS REAL) / COUNT(T1.PersonType) FROM Person AS T1 INNER JOIN Employee AS T2 WHERE T1.PersonType = 'SC' AND T1.NameStyle = 0 AND T2.MaritalStatus = 'M'"
works_cycles,"Among the active employees with over 10 hours of sick leave, what is the percentage of the employees with over 20 vacation hours?","CurrentFlag = 1 refers to the active status of employees; Percentage = Divide (Count (BusinessEntityID (CurrentFlag = 1 & VacationHours >20 & SickLeaveHours > 10)), Count (BusinessEntityID (CurrentFlag = 1 & SickLeaveHours>10))) * 100;",SELECT CAST(SUM(CASE WHEN T2.VacationHours > 20 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.BusinessEntityID) FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.CurrentFlag = 1 AND T2.SickLeaveHours > 10
works_cycles,Average of the last receipt cost of the products whose average lead time is 60 days.,"average = DIVIDE(SUM(lastreceiptcost), COUNT(OnorderQty)) where AverageLeadTime = 60",SELECT SUM(LastReceiptCost) / COUNT(ProductID) FROM ProductVendor WHERE AverageLeadTime = 60
works_cycles,Average cost of purchase orders made during the first six months of 2012.,"purchase orders refers to TransactionType = 'P'; first six months of 2012 refers to TransactionDate bewteen '2012-01-01'and '2012-06-30'; average = DIVIDE(ActualCost where TransactionType = 'P', count(TransactionID))
",SELECT CAST(SUM(ActualCost) AS REAL) / COUNT(TransactionID) FROM TransactionHistoryArchive WHERE TransactionType = 'P' AND TransactionDate >= '2012-01-01' AND TransactionDate < '2012-07-01'
works_cycles,What percentage of male employees hired throughout the years 2009 are married?,"male refers to Gender = 'M'; hired throughout the years 2009 refers to Year(HireDate) = 2009; married refers to MaritalStatus = 'M'; percentage = DIVIDE(count(BusinessEntityID(Gender = 'M'& Year(HireDate) = '2009& MaritalStatus = 'M')), count(BusinessEntityID(Gender = 'M'& Year(HireDate) = 2009)))

","SELECT CAST(SUM(CASE WHEN MaritalStatus = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BusinessEntityID) FROM Employee WHERE SUBSTR(HireDate, 1, 4) = '2009' AND Gender = 'M'"
works_cycles,What percentage of people named Mary who wants Receive Email promotions of AdventureWorks and selected partners are store contacts?,"wants Receive Email promotions of AdventureWorks and selected partners refers to EmailPromotion = 2; store contact refers to PersonType = 'SC'; percentage = DIVIDE(count(BusinessEntityID(FirstName = 'Marry'&EmailPromotion = '2')),count(BusinessEntityID)))
",SELECT CAST(SUM(CASE WHEN EmailPromotion = 2 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN PersonType = 'SC' THEN 1 ELSE 0 END) FROM Person WHERE FirstName = 'Mary'
works_cycles,"List, by ProductID, all products whose profit, relative to the standard price, is negative.","Profit = SUBTRACT(StandardPrice, LastRecipeCost)
",SELECT DISTINCT ProductID FROM ProductVendor WHERE StandardPrice - LastReceiptCost < 0
works_cycles,What is the average total due price of products with approved status?,"approved refers to Status = 2 , average total due price = AVG( DIVIDE(TotalDue, SUM(Status = 2 )))",SELECT SUM(TotalDue) / COUNT(TotalDue) FROM PurchaseOrderHeader WHERE Status = 2
works_cycles,"What is the percentage, by number of sales order units, for orders with quantities not greater than 3 and a discount of 0.2?","quantities not greater than 3 refers to OrderQty<3; discount of 0.2 refers to UnitPriceDiscount = 0.2; percentage = DIVIDE(count(SalesOrderID(OrderQty<3 & UnitPriceDiscount = 0.2)), count(SalesOrderID))*100%",SELECT CAST(SUM(CASE WHEN OrderQty < 3 AND UnitPriceDiscount = 0.2 THEN 1 ELSE 0 END) AS REAL) / COUNT(SalesOrderID) FROM SalesOrderDetail
works_cycles,"Lists all companies by BusinessEntityID that increased their current year sales by more than 60% over last year's sales and have a bonus greater than 3,000.","increased their current year sales by more than 60% refers to
DIVIDE(SUBTRACT(SalesYTD, SalesLastYear),SalesLastYear)>0.6",SELECT BusinessEntityID FROM SalesPerson WHERE SalesYTD > SalesLastYear + SalesLastyear * 0.6 AND Bonus > 3000
works_cycles,Add the number of businesses that indicate their home address as their address and those whose address corresponds to the shipping address.,their home address as their address refers to AddressTypeID = 2; address corresponds to the shipping address refers to AddressTypeID = 5,"SELECT SUM(CASE WHEN T2.Name = 'Home' THEN 1 ELSE 0 END) , SUM(CASE WHEN T2.Name = 'Shipping' THEN 1 ELSE 0 END) FROM BusinessEntityAddress AS T1 INNER JOIN AddressType AS T2 ON T1.AddressTypeID = T2.AddressTypeID"
works_cycles,Identifies the ID number of the customer whose sales order for 32 units had a unit price of 35.,sales order for 32 units refers to OrderQty = 32,SELECT T2.CustomerID FROM SalesOrderDetail AS T1 INNER JOIN Customer AS T2 WHERE T1.UnitPrice = 35 AND T1.OrderQty = 32
works_cycles,What company has a Colonial Voice card that expired in March 2005?,"Colonial Voice card refers to CardType = 'ColonialVoice' ; expired in March 2005 refers to ExpMonth = 3, ExpYear = 2005",SELECT T2.BusinessEntityID FROM CreditCard AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.CreditCardID = T2.CreditCardID WHERE T1.CardType = 'ColonialVoice' AND T1.ExpMonth = 3 AND T1.ExpYear = 2005
works_cycles,"What is the credit rating of the company whose average lead time is 16 days for a standard price of 18.9900 and whose last receipt date is August 27, 2011?","last receipt date is August 17, 2011 refers to LastReceiptDate> = '2011-08-17 00:00:00' and LastReceiptDate < '2011-08-18 00:00:00';","SELECT T2.CreditRating FROM ProductVendor AS T1 INNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.StandardPrice = 18.9900 AND T1.AverageLeadTime = 16 AND STRFTIME('%Y-%m-%d', T1.LastReceiptDate) = '2011-08-27'"
works_cycles,Calculate the number of products if we add the products of the accessories and components categories.,,SELECT COUNT(ProductID) FROM Product WHERE Name LIKE '%accessories %' OR Name LIKE '%components%'
works_cycles,What is the job title of the newest employee in department 12?,newest employee refers to MAX(StartDate),SELECT T1.JobTitle FROM Employee AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.DepartmentID = 12 ORDER BY T2.StartDate DESC LIMIT 1
works_cycles,List the first and last name of all unmarried male Production Supervisors.,"unmarried refers to MaritalStatus = 'S', male refers to Gender = 'M', Production Supervisors is a job title","SELECT T2.FirstName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.MaritalStatus = 'S' AND T1.Gender = 'M' AND T1.JobTitle LIKE 'Production Supervisor%'"
works_cycles,How many products are there if we add all those located in the Subassembly category?,located in the Subassembly category refers to Name = 'Subassembly',SELECT COUNT(T1.LocationID) FROM Location AS T1 INNER JOIN ProductInventory AS T2 USING (LocationID) WHERE T1.Name = 'Subassembly'
works_cycles,Sum the total number of products rejected for having a trim length that is too long.,number of product rejected refers to ScrapedQty; trim length that is too long refers to scrap reason where Name = 'Trim length too long',SELECT SUM(T2.ScrappedQty) FROM ScrapReason AS T1 INNER JOIN WorkOrder AS T2 ON T1.ScrapReasonID = T2.ScrapReasonID WHERE T1.Name = 'Trim length too long'
works_cycles,Calculate the total quantity of purchased product that has been prepared by employee number 257 and is in pending shipment status.,employee number 257 refers to EmployeeID = 257; pending shipment status refers to Status = 3,SELECT SUM(T2.OrderQty) FROM PurchaseOrderHeader AS T1 INNER JOIN PurchaseOrderDetail AS T2 ON T1.PurchaseOrderID = T2.PurchaseOrderID WHERE T1.Status = 1
works_cycles,"If we discount the products that do not have any type of offer, how many different products have been sold in an amount greater than 2 units per order?",do not have any type of offer refers to Description = 'No Discount'; sold in an amount greater than 2 refers to OrderQty>2,SELECT COUNT(DISTINCT T1.ProductID) FROM SalesOrderDetail AS T1 INNER JOIN SpecialOfferProduct AS T2 ON T1.SpecialOfferID = T2.SpecialOfferID INNER JOIN SpecialOffer AS T3 ON T2.SpecialOfferID = T3.SpecialOfferID WHERE T1.OrderQty > 2 AND T1.UnitPriceDiscount = 0
works_cycles,"What type of transaction was made with the only yellow product, size 62 and with a minimum inventory stock of 500 units?",yellow product refers to Color = 'Yellow'; minimum inventory stock of 500 units refers to SafetyStockLevel = 500,SELECT DISTINCT T2.TransactionType FROM Product AS T1 INNER JOIN TransactionHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Size = 62 AND T1.Color = 'Yellow' AND T1.SafetyStockLevel = 500
works_cycles,What is the name of the subcategory to which the gray product with the lowest safety stock level belongs?,gray is color of product,SELECT T1.Name FROM ProductSubcategory AS T1 INNER JOIN Product AS T2 USING (ProductSubcategoryID) WHERE T2.Color = 'Grey' GROUP BY T1.Name
works_cycles,What is the product cost end date with the highest weight in grams?,in grams refers to WeightUnitMeasureCode = 'G',SELECT T2.EndDate FROM Product AS T1 INNER JOIN ProductCostHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.WeightUnitMeasureCode = 'G' ORDER BY T1.Weight DESC LIMIT 1
works_cycles,What is the percentage of the total products ordered were not rejected by Drill size?,"rejected quantity refers to ScrappedQty; rejected by Drill size refers to Name in ('Drill size too small','Drill size too large'); percentage = DIVIDE(SUM(ScrappedQty) where Name in('Drill size too small','Drill size too large'), OrderQty)",SELECT CAST(SUM(CASE WHEN T2.VacationHours > 20 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.BusinessEntityID) FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.CurrentFlag = 1 AND T2.SickLeaveHours > 10
works_cycles,Calculate the average of the total ordered quantity of products purchased whose shipping method was Cargo Transport 5.,"shipping method was Cargo Transport 5 refers to Name = 'Cargo Transport 5'; average = DIVIDE(SUM(OrderQty where Name = 'Cargo Transport 5'), COUNT(ShipMethodID))","SELECT CAST(SUM(IIF(T1.ShipMethodID = 5, T3.OrderQty, 0)) AS REAL) / COUNT(T3.ProductID) FROM ShipMethod AS T1 INNER JOIN PurchaseOrderHeader AS T2 ON T1.ShipMethodID = T2.ShipMethodID INNER JOIN PurchaseOrderDetail AS T3 ON T2.PurchaseOrderID = T3.PurchaseOrderID"
works_cycles,List the name of the rates that apply to the provinces that are in the territory that obtained the greatest increase in sales with respect to the previous year.,"sales of previous year refers to SalesLastYear; SalesYTD refers to year to date sales; increase in sales = DIVIDE(SUBTRACT(SalesYTD, SalesLastYear), SalesLastYear)*100",SELECT T2.Name FROM SalesTerritory AS T1 INNER JOIN StateProvince AS T2 ON T1.CountryRegionCode = T2.CountryRegionCode INNER JOIN SalesTaxRate AS T3 ON T2.StateProvinceID = T3.StateProvinceID ORDER BY (T1.SalesYTD - T1.SalesLastYear) / T1.SalesLastYear DESC LIMIT 1
works_cycles,How many employees earn their salaries on a monthly basis at an hourly rate of more than 50?,employee refers to BusinessEntityID; salaries on a monthly basis refers to PayFrequency = 1; hourly rate more than 50 refers to Rate > 50,SELECT COUNT(BusinessEntityID) FROM EmployeePayHistory WHERE rate * PayFrequency > 50
works_cycles,What is the employee of company number 1's full name?,company number 1 refers to BusinessEntityId = 1; employee refers to PersonType = 'EM'; full name refers to FirstName + MiddleName + LastName,"SELECT FirstName, MiddleName, LastName FROM Person WHERE BusinessEntityID = 1 AND PersonType = 'EM'"
works_cycles,What is the name of the supplier number 1492?,supplier number 1492 refers to BusinessEntityId = 1492; name of the supplier = name from vendor,SELECT NAME FROM Vendor WHERE BusinessEntityID = 1492
works_cycles,How many vendors only consented to move on with the 500 to 15000 piece order in terms of quality?,Vendor refers to BusinessEntityId; 500 to 15000 piece order refers to MinOrderQty > 500 and MaxOrderQty < 15000,SELECT COUNT(*) FROM ProductVendor WHERE MinOrderQty > 500 AND MaxOrderQty < 15000
works_cycles,Please list the departments that are part of the Executive General and Administration group.,Department refers to Name where GroupName = 'Executive General and Administration',SELECT Name FROM Department WHERE GroupName = 'Executive General and Administration'
works_cycles,Please list the family names of any employees whose middle names begin with C.,family names refers to Last name; employee refers to PersonType = 'EM'; MiddleName starts with 'C',SELECT LastName FROM Person WHERE PersonType = 'EM' AND MiddleName LIKE 'C%'
works_cycles,How many vendors are having their products ordered with an average delivery time of 25 days?,vendors refers to distinct BusinessEntityID; average delivery time of 25 days refers to AverageLeadTime = 25 and onOrderQty > 0,SELECT COUNT(DISTINCT BusinessEntityID) FROM ProductVendor WHERE AverageLeadTime = 25
works_cycles,Please list any 3 product numbers with the lowest standard cost.,product number = productID,SELECT ProductID FROM ProductCostHistory ORDER BY StandardCost ASC LIMIT 3
works_cycles,How many black-colored products are there that cannot be sold?,cannot be sold means product is not a salable item which refers to FinishedGoodsFlag = 0,SELECT COUNT(ProductID) FROM Product WHERE FinishedGoodsFlag = 0 AND Color = 'Black'
works_cycles,Please list the top three employees with the most unused sick leave along with their position titles.,employees refers to BusinessEntityID; most unused sick leave refers to MAX(SickLeaveHours); position title refers to JobTitle,SELECT JobTitle FROM Employee ORDER BY SickLeaveHours DESC LIMIT 3
works_cycles,What is the full address of address number 11906?,address number refers to AddressID; full address refers to AddressLine1 + AddressLine2,"SELECT AddressLine1, AddressLine2 FROM Address WHERE AddressID = 11906"
works_cycles,What is business number 1580's net profit?,"business number 1580 refers to BusinessEntityID = 1580; Net profit = SUBTRACT(LastReceiptCost,StandardPrice)",SELECT LastReceiptCost - StandardPrice FROM ProductVendor WHERE BusinessEntityID = 1580
works_cycles,What is the sales revenue for item number 740?,"business number 1580 refers to BusinessEntityID = 1580; Net profit = SUBTRACT(LastReceiptCost,StandardPrice)",SELECT ListPrice - StandardCost FROM Product WHERE ProductID = 740
works_cycles,How many customers gave a product the best possible rating? Please list their names.,customers' name refers to ReviewerName; best possible ratings means the highest rating = 5,SELECT ReviewerName FROM ProductReview WHERE Rating = 5
works_cycles,What are the company that Adventure Works deal with that have poor credit rating? Please provide their business number.,poor credit rating means bad credit; CreditRating = 5; Business number refers to BusinessEntityID,SELECT BusinessEntityID FROM Vendor WHERE CreditRating = ( SELECT CreditRating FROM Vendor ORDER BY CreditRating DESC LIMIT 1 )
works_cycles,What is the forename and birthdate of person number 18?,person number 18 refers to BusinessEntityID = 18; forename refers to FirstName,"SELECT T1.FirstName, T2.BirthDate FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.BusinessEntityID = 18"
works_cycles,What job is person number 322 currently holding?,person number 322 refers to PersonID = 18; job is the name of contacttype,SELECT T1.Name FROM ContactType AS T1 INNER JOIN BusinessEntityContact AS T2 ON T1.ContactTypeID = T2.ContactTypeID WHERE T2.BusinessEntityID = 332
works_cycles,Please list 3 businesses along with their IDs that use cellphones.,business along with their IDs = BusinessEntityID; Cellphones refers to PhoneNumberType.name = ‘cell’,SELECT T2.BusinessEntityID FROM PhoneNumberType AS T1 INNER JOIN PersonPhone AS T2 ON T1.PhoneNumberTypeID = T2.PhoneNumberTypeID WHERE T1.Name = 'Cell' LIMIT 3
works_cycles,What is the currency of Brazil?,,SELECT T1.Name FROM Currency AS T1 INNER JOIN CountryRegionCurrency AS T2 ON T1.CurrencyCode = T2.CurrencyCode INNER JOIN CountryRegion AS T3 ON T2.CountryRegionCode = T3.CountryRegionCode WHERE T3.Name = 'Brazil'
works_cycles,How many people work in the finance department?,,SELECT COUNT(T2.BusinessEntityID) FROM Department AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.DepartmentID = T2.DepartmentID WHERE T1.Name = 'Finance'
works_cycles,How long does it take for the business to receive the item it has purchased? Who is the vendor for business number 1496?,business number refers to BusinessEntityID where BusinessEntityID = 1496; how long does it take refers to AverageLeadTime,"SELECT T1.AverageLeadTime, T2.Name FROM ProductVendor AS T1 INNER JOIN Vendor AS T2 USING (businessentityid) WHERE T2.BusinessEntityID = 1496 GROUP BY T1.AverageLeadTime, T2.Name"
works_cycles,How many accounts are in Bothell as opposed to Kenmore? What is the name of the State that comprises these two cities?,"SUBTRACT(count(city = 'Bothell'), count(city = 'Kenmore'))","SELECT SUM(IIF(T1.city = 'Bothell', 1, 0)) - SUM(IIF(T1.city = 'Kenmore', 1, 0)) , stateprovincecode FROM Address AS T1 INNER JOIN StateProvince AS T2 ON T1.stateprovinceid = T2.stateprovinceid GROUP BY stateprovincecode"
works_cycles,Which chromoly steel product model has AdventureWorks saved in English?,Saved in English refers to product description written in English where Culture.name = 'English',SELECT T1.ProductModelID FROM ProductModelProductDescriptionCulture AS T1 INNER JOIN Culture AS T2 USING (cultureid) INNER JOIN ProductDescription AS T3 USING (productdescriptionid) WHERE T3.Description LIKE 'Chromoly steel%' AND T2.Name = 'English'
works_cycles,"Please list the total number of companies with a commission percentage of 0.018 or above, along with each company's assigned geographical location.",geographical location refers to group from SalesPerson; ComissionPct refers to commission percentage where ComissionPct > = 0.018;,"SELECT T1.BusinessEntityID, T2.'Group' FROM SalesPerson AS T1 INNER JOIN SalesTerritory AS T2 USING (territoryid) WHERE T1.CommissionPct >= 0.018"
works_cycles,"Please list the various phone number types in the following order, from most to least common among businesses.",,SELECT T2.Name FROM PersonPhone AS T1 INNER JOIN PhoneNumberType AS T2 ON T1.PhoneNumberTypeID = T2.PhoneNumberTypeID GROUP BY T2.Name ORDER BY COUNT(T2.Name) DESC
works_cycles,Which role has the most common contact among businesses?,Most common contact among businesses refers to BusinessEntityContact with the most name,SELECT T1.Name FROM ContactType AS T1 INNER JOIN BusinessEntityContact AS T2 ON T1.ContactTypeID = T2.ContactTypeID GROUP BY T1.Name ORDER BY COUNT(T1.Name) DESC LIMIT 1
works_cycles,What are the salespeople's email addresses?,Salespeople refers to PersonType = 'SP',SELECT T2.EmailAddress FROM Person AS T1 INNER JOIN EmailAddress AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.PersonType = 'SP'
works_cycles,Which position does Suchitra hold?,position refers to JobTitle,SELECT T2.JobTitle FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.FirstName = 'Suchitra'
works_cycles,How many employees work for AdvertureWorks that is single?,Employees refer to PersonType = 'EM'; Single refers to MaritalStatus = 's',SELECT COUNT(T1.BusinessentityID) FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.PersonType = 'EM' AND T2.MaritalStatus = 'S'
works_cycles,How much do the works data saved in English and Arabic differ from one another?,"Data saved in English refers to the name of the language where Culture.Name = 'English'; data saved in Arabic refers to the name of the language where Culture.Name = 'Arabic';   SUBTRACT(count(Name = 'English'), count(Name = 'Bothell'))",SELECT SUM(CASE WHEN T1.Name = 'English' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.Name = 'Arabic' THEN 1 ELSE 0 END) FROM Culture AS T1 INNER JOIN ProductModelProductDescriptionCulture AS T2 ON T1.CultureID = T2.CultureID WHERE T1.Name = 'English' OR T1.Name = 'Arabic'
works_cycles,What is the location of business number 1?,Location refers to AddressLine1; business number refers to the BusinessEntityID where BusinessEntityID = 1,SELECT T1.AddressLine1 FROM Address AS T1 INNER JOIN BusinessEntityAddress AS T2 USING (AddressID) WHERE T2.BusinessEntityID = 1
works_cycles,Please list the businesses along with their numbers that have their accounts located in Duvall.,Business along with their numbers refers to the BusinessEntityID; located in Duvall refers to City = 'Duvall',SELECT T2.BusinessEntityID FROM Address AS T1 INNER JOIN BusinessEntityAddress AS T2 ON T1.AddressID = T2.AddressID WHERE T1.City = 'Duvall'
works_cycles,What percentage of the AdventureWorks data is in Thai?,"percentage = DIVIDE(Culture.Name = 'Thai', count(ALL Culture.Name))*100%",SELECT CAST(SUM(CASE WHEN T1.Name = 'Thai' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CultureID) FROM Culture AS T1 INNER JOIN ProductModelProductDescriptionCulture AS T2 ON T1.CultureID = T2.CultureID
works_cycles,What percentage of AdventureWorks employees are men?,"male refers to Gender = 'M'; employee refers to PersonType = 'EM'; percentage = DIVIDE(COUNT(Gender = 'M'), COUNT(PersonType = 'MY'))*100%;",SELECT CAST(SUM(CASE WHEN T2.Gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.BusinessentityID) FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessentityID = T2.BusinessentityID WHERE T1.PersonType = 'EM'
works_cycles,"Where is the address 15873 located, in what city and state? Does that city belong to a province where the code exists?",Address number 15873 refers to AddressID = '15873'; IsOnlyStateProvinceCode = '0' refers to StateProvinceCode exists; IsOnlyStateProvinceCode = '1' refers to StateProvinceCode unavailable;,"SELECT T2.City, T1.Name, T1.IsOnlyStateProvinceFlag FROM StateProvince AS T1 INNER JOIN Address AS T2 ON T1.StateProvinceID = T2.StateProvinceID WHERE T2.AddressID = 15873"
works_cycles,What is the full address of business number 24?,Full address refers to AddressLine1+AddressLine2; business number 24 refers to BusinessEntityID = '24',"SELECT T1.AddressLine1, T1.AddressLine2 FROM Address AS T1 INNER JOIN BusinessEntityAddress AS T2 ON T1.AddressID = T2.AddressID WHERE T2.BusinessEntityID = 24"
works_cycles,Which year is credit card No.9648's Expiration Year?,Expiration year refers to ExpYear,SELECT ExpYear FROM CreditCard WHERE CreditCardID = 9648
works_cycles,What's Emma H Harris's Business Entity ID number?,,SELECT BusinessEntityID FROM Person WHERE FirstName = 'Emma' AND LastName = 'Harris'
works_cycles,What is the location id for Debur and Polish?,Debur and Polish is name of manufacturing location,SELECT LocationID FROM Location WHERE Name = 'Debur and Polish'
works_cycles,What are the Department ids under the Sales and Marketing Group?,Sales and Marketing is group name of a department,SELECT DepartmentID FROM Department WHERE GroupName = 'Sales and Marketing'
works_cycles,Which sales person made the sale of 1635823.3967 last year? Give the Business Entity ID.,,SELECT BusinessEntityID FROM SalesPerson WHERE SalesLastYear = '1635823.3967'
works_cycles,What is the Shift start time for Shift ID No.2?,,SELECT StartTime FROM Shift WHERE ShiftID = '2'
works_cycles,What is contact Type ID No.16 represent for?,,SELECT Name FROM ContactType WHERE ContactTypeID = '16'
works_cycles,"What is the minimum shipping charge for ""OVERSEAS - DELUXE""?",Minimum shipping charge refers to ShipBase; OVERSEAS - DELUXE is name of shipping company,SELECT ShipBase FROM ShipMethod WHERE Name = 'OVERSEAS - DELUXE'
works_cycles,"Please tell the meaning of CultureID ""fr"".",tell the meaning is to find the name of culture,SELECT Name FROM Culture WHERE CultureID = 'fr'
works_cycles,Give the Mauritius Rupee's currency code.,Mauritius Rupee is name of currency,SELECT CurrencyCode FROM Currency WHERE Name = 'Mauritius Rupee'
works_cycles,Name cellphone number's Type ID?,Cellphone refers to Name = 'Cell',SELECT PhoneNumberTypeID FROM PhoneNumberType WHERE Name = 'Cell'
works_cycles,"For the older production technician who was hired in 2008/12/7, what's his/her birthday?",Oldest production technician refers to MIN(BirthDate) where JobTitle = 'Production Technician',SELECT BirthDate FROM Employee WHERE HireDate = '2008-12-07'
works_cycles,What is the product ID No.793's model name?,,SELECT T1.Name FROM Product AS T1 INNER JOIN ProductModel AS T2 ON T1.ProductModelID = T2.ProductModelID WHERE T1.ProductID = 793
works_cycles,What are the unit measure codes for product ID No.762?,,"SELECT T2.UnitMeasureCode FROM Product AS T1 INNER JOIN UnitMeasure AS T2 ON T1.SizeUnitMeasureCode = T2.UnitMeasureCode OR T1.WeightUnitMeasureCode = T2.UnitMeasureCode WHERE T1.ProductID = 762 GROUP BY T1.ProductID, T2.UnitMeasureCode"
works_cycles,Where is Business Entity ID No.4 located at? Give the address down to street.,"Located refers to the total address of the entity that comprises city, addressline1, addressline2","SELECT AddressLine1, AddressLine2 FROM Address WHERE AddressID IN ( SELECT AddressID FROM BusinessEntityAddress WHERE BusinessEntityID = 4 )"
works_cycles,"For the on going assembly item Component ID No. 494, what's the Unit measure for it?","On going assembly item means the assembly item haven't been finished, therefore EndDate is null",SELECT T2.Name FROM BillOfMaterials AS T1 INNER JOIN UnitMeasure AS T2 ON T1.UnitMeasureCode = T2.UnitMeasureCode WHERE T1.ComponentID = 494 AND T1.EndDate IS NULL GROUP BY T2.name
works_cycles,"For the document Control Assistant who was born on 1975/12/25, how many private documents did he/she have?",Document Control Assistant refers to the JobTitle = 'Document Control Assistant'; born on 1975/12/25 refers to BirthDate = '1975-12-25'; private documents indicate that DocumentSummary is null,SELECT COUNT(T2.BusinessEntityID) FROM Document AS T1 INNER JOIN Employee AS T2 ON T1.Owner = T2.BusinessEntityID WHERE T2.JobTitle = 'Document Control Assistant' AND T2.BirthDate = '1975-12-25' AND T1.DocumentSummary IS NULL
works_cycles,"To the products which could make the profit as 21.9037, what were their list price after October of 2012?","Profit as 82.41 = SUTRACT(ListPrice, StandardCost); May of 2012 refers to StartDate = '2012-05'","SELECT T1.ListPrice FROM Product AS T1 INNER JOIN ProductListPriceHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ListPrice - T1.StandardCost > 21.9037 AND STRFTIME('%Y-%m-%d', T2.StartDate) >= '2012-10-01'"
works_cycles,What is the size of the photo of product id No.1?,,SELECT T1.ThumbNailPhoto FROM ProductPhoto AS T1 INNER JOIN ProductProductPhoto AS T2 ON T1.ProductPhotoID = T2.ProductPhotoID WHERE T2.ProductID = 1
works_cycles,How many letters are there in Catherine Ward's e-mail account passwords?,Catherine Ward refers to the name of BusinessEntityID; how many letters in password for the e-mail account refers to LENGTH(PasswordHash),SELECT LENGTH(T2.PasswordHash) FROM Person AS T1 INNER JOIN Password AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.FirstName = 'Catherine' AND T1.LastName = 'Ward'
works_cycles,What rating did Jill give for HL Mountain Pedal?,Jill refers to the name of reviewer; HL Mountain Pedal refers to the name of the product,SELECT T1.Rating FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ReviewerName = 'Jill' AND T2.Name = 'HL Mountain Pedal'
works_cycles,What's the profit for the Freewheel?,"SUBTRACT(LastReceiptCost, StandardPrice) for ProductID where name = 'Freewheel'",SELECT T1.LastReceiptCost - T1.StandardPrice FROM ProductVendor AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'Freewheel'
works_cycles,Did Rachel Valdez complete her sales task?,"Complete sales task refers to meeting sales quota; if Bonus = 0, it means this salesperson doesn't meet quota and vice versa",SELECT T1.Bonus FROM SalesPerson AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.FirstName = 'Rachel' AND T2.LastName = 'Valdez'
works_cycles,How many types of tax did the sales happen in Quebec have?,"If Name = ""+"" in the value from SalesTaxRate, it means this sales are charged by multiple types of tax; Quebec refers to the name of State Province",SELECT COUNT(DISTINCT T1.Name) FROM SalesTaxRate AS T1 INNER JOIN StateProvince AS T2 ON T1.StateProvinceID = T2.StateProvinceID WHERE T2.Name = 'Quebec'
works_cycles,What's Kevin A Wright's email address?,,SELECT T2.EmailAddress FROM Person AS T1 INNER JOIN EmailAddress AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.FirstName = 'Kevin' AND T1.MiddleName = 'A' AND T1.LastName = 'Wright'
works_cycles,What is the number of State Province of France that doesn't have a State Province Code?,Doesn't have a State Province Code refers to IsOnlyStateProvinceFlag = 1 where StateProvinceCode is unavailable,SELECT T1.CountryRegionCode FROM StateProvince AS T1 INNER JOIN CountryRegion AS T2 ON T1.CountryRegionCode = T2.CountryRegionCode WHERE T2.Name = 'France' AND T1.IsOnlyStateProvinceFlag = 1
works_cycles,"What kind of transaction type for the ""HL Road Frame - Black, 48"" order happened in 2012/12/13?",Transactiontype = 'w' means 'WorkOrder'; transactiontype = 's' means 'SalesOrder'; transactiontype = 'P' means 'PurchaseOrder'; happened in refers to TransactionDate,"SELECT T1.TransactionType FROM TransactionHistory AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'HL Road Frame - Black, 48' AND STRFTIME('%Y-%m-%d',T1.TransactionDate) = '2013-07-31'"
works_cycles,"Which type of transaction was it for the ""LL Road Handlebars"" order happened in 2012/11/3?",Transactiontype = 'w' means 'WorkOrder'; transactiontype = 's' means 'SalesOrder'; transactiontype = 'P' means 'PurchaseOrder'; happened in refers to TransactionDate,"SELECT T1.TransactionType FROM TransactionHistoryArchive AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'LL Road Handlebars' AND STRFTIME('%Y-%m-%d',T1.TransactionDate) = '2012-11-03'"
works_cycles,"How is the Credit Rating for company whose rowguid is ""33671A4E-DF2B-4879-807B-E3F930DD5C0C""?",CreditRating = 1 means 'Superior'; CreditRating = 2 means 'Excellent'; CreditRating = 3 means 'Above average'; CreditRating = 4 means 'Superior'; CreditRating = 5 means 'Below average',SELECT T1.CreditRating FROM Vendor AS T1 INNER JOIN BusinessEntity AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.rowguid = '33671A4E-DF2B-4879-807B-E3F930DD5C0C'
works_cycles,"What is the PreferredVendorStatus for the company which has the rowguid of ""684F328D-C185-43B9-AF9A-37ACC680D2AF""?",PreferredVendorStatus = 1 means 'Do not use if another vendor is available'; CreditRating = 2 means 'Preferred over other vendors supplying the same product',SELECT T1.PreferredVendorStatus FROM Vendor AS T1 INNER JOIN BusinessEntity AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.rowguid = '684F328D-C185-43B9-AF9A-37ACC680D2AF'
works_cycles,"For person id No.2054, is his/her vendor still active?",ActiveFlag = 1 means 'Vendor no longer used'; ActiveFlag = 2 means 'Vendor is actively used,SELECT T1.ActiveFlag FROM Vendor AS T1 INNER JOIN BusinessEntityContact AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.PersonID = 2054
works_cycles,Show me the phone number of Gerald Patel's.,,SELECT T2.PhoneNumber FROM Person AS T1 INNER JOIN PersonPhone AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.FirstName = 'Gerald' AND T1.LastName = 'Patel'
works_cycles,Which is Business Entity ID No.13626's phone number type?,,SELECT T2.Name FROM PersonPhone AS T1 INNER JOIN PhoneNumberType AS T2 USING (PhoneNumberTypeID) WHERE T1.BusinessEntityID = 13626
works_cycles,What's Lynn N Tsoflias's job title?,,SELECT T2.JobTitle FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.FirstName = 'Lynn' AND T1.MiddleName = 'N' AND T1.LastName = 'Tsoflias'
works_cycles,What is the number of the sub categories for bikes?,"Bike refers to the name of the product category, therefore ProductCategoryID = 1",SELECT COUNT(*) FROM ProductCategory AS T1 INNER JOIN ProductSubcategory AS T2 ON T1.ProductCategoryID = T2.ProductCategoryID WHERE T1.Name = 'Bikes'
works_cycles,"For the document Control Assistant who was hired on 2009/1/22, what is the percentage of private documents did he/she have?","Document Control Assistant refers  to the  JobTitle = 'Document Control Assistant'; hired on 2009/1/22 means the person's hiring date is HireDate = '2009-01-22'; private documents indicate that DocumentSummary is null; DIVIDE(COUNT(DocumentSummary is null), COUNT(DocumentSummary))*100",SELECT CAST(SUM(CASE WHEN T1.DocumentSummary IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.DocumentSummary) FROM Document AS T1 INNER JOIN Employee AS T2 ON T1.Owner = T2.BusinessEntityID WHERE T2.JobTitle = 'Document Control Assistant' AND T2.HireDate = '2009-01-22'
works_cycles,How much is HL Grip Tape's profit ratio?,"HL Grip Tape refers to the product name; DIVIDE(SUBTRACT(LastReceiptCost, StandardPrice)), (StandardPrice) as profit_ratio",SELECT (T1.LastReceiptCost - T1.StandardPrice) / T1.StandardPrice FROM ProductVendor AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'HL Grip Tape'
works_cycles,"For all phone numbers, what percentage of the total is cell phone?","Cellphone referes to the name of the phone type, therefore PhoneNumberTypeID = 1; DIVIDE(COUNT(PhoneNumberTypeID = 1), (COUNT(PhoneNumberTypeID)) as percentage",SELECT CAST(SUM(CASE WHEN T2.Name = 'Cell' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Name) FROM PersonPhone AS T1 INNER JOIN PhoneNumberType AS T2 ON T1.PhoneNumberTypeID = T2.PhoneNumberTypeID
works_cycles,"What are the product assembly ID that come with unit measure code EA and BOM level of 2, at the same time have per assembly quantity of more than 10?",Per assembly quantity of more than 10 is expresses as PerAssemblyQty>10,SELECT ProductAssemblyID FROM BillOfMaterials WHERE UnitMeasureCode = 'EA' AND BOMLevel = 2 AND PerAssemblyQty > 10
works_cycles,How many location IDs have actual resource hours of 2?,actual resource hours of 2 refers to ActualResourceHrs = 2,SELECT COUNT(LocationID) FROM WorkOrderRouting WHERE ActualResourceHrs = 2
works_cycles,What is the stocked quantity of products manufactured from location ID 40?,Stocked quantity refers to StockedQty,SELECT COUNT(*) FROM WorkOrderRouting AS T1 INNER JOIN BillOfMaterials AS T2 ON T1.LocationID = T2.ProductAssemblyID INNER JOIN WorkOrder AS T3 ON T3.WorkOrderID = T1.WorkOrderID WHERE T1.LocationID = 40
works_cycles,"What are the total per assembly quantity for unit measure code EA, IN and OZ respectively? What are the name of these 3 code?",Pre assembly quantity refers to PerAssemblyQty,"SELECT SUM(T1.PerAssemblyQty), T2.Name FROM BillOfMaterials AS T1 INNER JOIN UnitMeasure AS T2 ON T1.UnitMeasureCode = T2.UnitMeasureCode WHERE T1.UnitMeasureCode IN ('EA', 'IN', 'OZ') GROUP BY T2.Name"
works_cycles,Which product ID do not have any work order ID?,Do not have any work order ID means WorkOrderID is null,SELECT ProductID FROM Product WHERE ProductID NOT IN ( SELECT T1.ProductID FROM Product AS T1 INNER JOIN WorkOrder AS T2 ON T1.ProductID = T2.ProductID )
works_cycles,What is the name of product purchased with transaction type P?,,SELECT ProductID FROM Product WHERE ProductID IN ( SELECT ProductID FROM TransactionHistory WHERE TransactionType = 'P' )
works_cycles,State the full name of accountants in the company.,"Accountants refers to JobTitle = 'Accountant'; full name includes FirstName, LastName, and MiddleName","SELECT T2.FirstName, T2.MiddleName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle = 'Accountant'"
works_cycles,What is the job position currently occupied by Ken J SÃ¡nchez?,Job position refers to JobTitle,SELECT T1.JobTitle FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.FirstName = 'Ken' AND T2.MiddleName = 'J' AND T2.LastName = 'Sánchez'
works_cycles,How many male employees do not wish to receive e-mail promotion?,Male refers to Gender = 'M'; employees do not wish to receive any e-mail promotions are marked as EmailPromotion = 0,SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.EmailPromotion = 0 AND T1.Gender = 'M'
works_cycles,Who is the top sales person who achived highest percentage of projected sales quota in 2013?,"2013 refers to QuotaDate = '2013'; DIVIDE(SalesLastYear), (SUM(SalesQuota where YEAR(QuotaDate) = 2013)) as percentage
","SELECT BusinessEntityID FROM SalesPerson WHERE BusinessEntityID IN ( SELECT BusinessEntityID FROM SalesPersonQuotaHistory WHERE STRFTIME('%Y', QuotaDate) = '2013' ) ORDER BY CAST(SalesLastYear AS REAL) / SalesQuota DESC LIMIT 1"
works_cycles,How many of the non-sales employees are married?,Married refers to MaritalStatus = 'M';  non-sales employees refer to PersonType = 'EM',SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.PersonType = 'EM' AND T1.MaritalStatus = 'M'
works_cycles,"Among the Production Technicians who are single, how many of them are vendor contact?",Production Technicians refer to the  JobTitle = 'Production Technician%'; single refers to MaritalStatus = 'S'; Vendor contact refers to PersonType = 'VC',SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle LIKE 'Production Technician%' AND T1.MaritalStatus = 'S' AND T2.PersonType = 'VC'
works_cycles,What is the total sick leave hours of employees who do not wish to receive any e-mail promotion?,Employees who do not wish to receive any e-mail promotions are marked as EmailPromotion = 0,SELECT SUM(T1.SickLeaveHours) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.EmailPromotion = 0
works_cycles,"Among the sales people, who are hired prior to 2010?","Sales people refer to PersonType = 'SP'; hired prior to 2010 means the person's hiring date was before 2010, therefore year(HireDate)<2010","SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.PersonType = 'SP' AND SUBSTR(T1.HireDate, 0, 4) < 2010"
works_cycles,Which sales person achieved the highest sales YTD? What is the projected yearly sales quota in 2011 for this person?,Sales people refer to PersonType = 'SP'; projected yearly sales refers to SalesQuota,"SELECT T1.BusinessEntityID, SUM(T1.SalesQuota) FROM SalesPerson AS T1 INNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE STRFTIME('%Y', T2.QuotaDate) = '2011' GROUP BY T1.BusinessEntityID ORDER BY SUM(T1.SalesYTD) DESC LIMIT 1"
works_cycles,How many people with the name Alex are single and occupying organization level of 1?,Alex refers to FirstName = 'Alex'; single refers to MaritalStatus = 'S',SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.FirstName = 'Alex' AND T1.MaritalStatus = 'S' AND T1.OrganizationLevel = 1
works_cycles,What is the average vacation hours taken by Sales person?,Store Contact refers PersonType = 'SC'; AVG(VacationHours,SELECT CAST(SUM(T1.VacationHours) AS REAL) / COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.PersonType = 'SP'
works_cycles,"State the last name and job title of owner for document ""Crank Arm and Tire Maintenance"".",The owner refers to BusinessEntityID,"SELECT T1.LastName, T3.JobTitle FROM Person AS T1 INNER JOIN Document AS T2 ON T1.BusinessEntityID = T2.Owner INNER JOIN Employee AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T2.Title = 'Crank Arm and Tire Maintenance'"
works_cycles,How many employees do not have any suffix and what are their organization level?,Do not have any suffix means Suffix is null,SELECT COUNT(T3.BusinessEntityID) FROM ( SELECT T1.BusinessEntityID FROM Employee AS T1 INNER JOIN Person AS T2 USING (BusinessEntityID) WHERE T2.Suffix IS NULL GROUP BY T1.BusinessEntityID ) AS T3
works_cycles,"Among the sales people who achieved projected sales quota 2013, is there any person from territory ID 1? If yes, state the business entity ID.",projected sales quota refers to SalesQuota; projected sales quota in 2013 refers to year(QuotaDate) = 2013;,"SELECT DISTINCT T1.BusinessEntityID FROM SalesPerson AS T1 INNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.TerritoryID = 1 AND STRFTIME('%Y', QuotaDate) = '2013'"
works_cycles,Who are the employees that submitted resume to Human Resource Department and got hired? State the last name.,employees that submitted resume to Human Resource Department and got hired refers to BusinessEntittyID NOT null;,"SELECT T3.LastName FROM Employee AS T1 INNER JOIN JobCandidate AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Person AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T1.BusinessEntityID IN (212, 274)"
works_cycles,List down the email address of female single employees.,female refers to Gender = 'F'; single refers to MaritalStatus = 'S';,SELECT T3.EmailAddress FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN EmailAddress AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T1.Gender = 'F' AND T1.MaritalStatus = 'S'
works_cycles,What are the color of products that were reviewed?,,SELECT T1.Color FROM Product AS T1 INNER JOIN ProductReview AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductID = 709 OR 937 OR 798
works_cycles,What is the projected sales quota amount in 2013 and sales YTD amount for sales person with business entity ID 275?,projected sales quota refers to SalesQuota; projected sales quota in 2013 refers to year(QuotaDate) = 2013; projected sales quota for 2013 = SUM(SalesQuota where year(QuotaDate) = 2013);,"SELECT SUM(T1.SalesQuota) FROM SalesPerson AS T1 INNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.BusinessEntityID = 275 AND STRFTIME('%Y', QuotaDate) = '2013'"
works_cycles,Provide the business entity ID who did not achieved projected yearly sales quota in 2013.,projected yearly sales quota refers to SalesQuota; sales quota in 2013 refers to year(QuotaDate) = 2013; person who did not achieve projected yearly sales quota refers to SalesQuota>SalesYTD;,"SELECT DISTINCT T1.BusinessEntityID FROM SalesPerson AS T1 INNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE STRFTIME('%Y', T2.QuotaDate) = '2013' AND T1.SalesQuota < T1.SalesLastYear"
works_cycles,"Among the employees who wish to receive e-mail promotion from AdventureWorks, how many percent of them are female?","female refers to Gender = 'F'; employee who wish to receive email promotion refers to EmailPromotion = 1; percentage = DIVIDE(SUM(Gender = 'F')), (sum(Gender = 'F' or Gender = 'M'))) as percentage;",SELECT CAST(SUM(CASE WHEN T1.Gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.EmailPromotion = 1
works_cycles,How many times is married non sales employees against single non-sales employees?,"non-sales employee refers to PersonType = 'EM'; married refers to MaritalStatus = 'M'; single refers to MaritalStatus = 'S'; percentage = DIVIDE(SUM(MaritalStatus = 'M'), (SUM(MaritalStatus = 'S') as percentage;",SELECT CAST(SUM(CASE WHEN T1.MaritalStatus = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.MaritalStatus = 'S' THEN 1 ELSE 0 END) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.PersonType = 'EM'
works_cycles,How much is the total bonus received by sales person and what is the percentage of it against the projected yearly sales quota in 2013?,"projected yearly sales quota refers to SalesQuota; projected yearly sales quota in 2013 refers to year(QuotaDate) = 2013; percentage = (MULTIPLY(DIVIDE(SUM(Bonus)), (SUM(SalesQuota))) as percentage;","SELECT SUM(T1.Bonus) , CAST(SUM(T1.Bonus) AS REAL) * 100 / SUM(T1.SalesQuota) FROM SalesPerson AS T1 INNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE STRFTIME('%Y', T2.QuotaDate) = '2013'"
works_cycles,How many types of credit cards are there and how many are vista?,type of credit card refers to CardType; CardType = 'Vista';,SELECT COUNT(CardNumber) FROM CreditCard WHERE CardType = 'vista'
works_cycles,"What is the name of the product with the id ""475""?",,SELECT Name FROM Product WHERE ProductID = 475
works_cycles,"Among the employees born before 1980 , how many of them are single?",BirthDate<'1980-01-01'; single refers to MaritalStatus = 'S' or null;,SELECT COUNT(BusinessEntityID) FROM Employee WHERE MaritalStatus = 's' AND BirthDate < '1980-1-1'
works_cycles,"List all the names of the stores assigned to the sales person with the id ""277"".",,SELECT Name FROM Store WHERE SalesPersonID = 277
works_cycles,"How many products with the id ""989"" were sold in August 2013?",TransactionDate BETWEEN '2013-08-01' AND '2013-08-30'; sold in refers to TransactionType = 'S' which means SalesOrder;,SELECT SUM(Quantity) FROM TransactionHistory WHERE TransactionDate LIKE '2013-08%' AND TransactionType = 'S' AND ProductID = 989
works_cycles,List all of the credit cards that had expired by 2007.,card that expires in 2007 refers to ExpYear = 2007;,SELECT CardNumber FROM CreditCard WHERE ExpYear < 2007
works_cycles,List all the pay rates of all employees that were hired at 20 years of age.,"pay rate refers to Rate; 20 years old at the time of being hired refers to SUBTRACT(year(HireDate)), (year(BirthDate))) = 20;","SELECT T2.Rate FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE STRFTIME('%Y', T1.HireDate) - STRFTIME('%Y', T1.BirthDate) = 20"
works_cycles,"What is the name of the territory assigned to the sales person with business id ""277""?",business id refers to BusinessEntityID,SELECT T2.Name FROM SalesPerson AS T1 INNER JOIN SalesTerritory AS T2 ON T1.TerritoryID = T2.TerritoryID WHERE T1.BusinessEntityID = 277
works_cycles,What is the full name of the Vice President of Production?,full name = FirstName+MiddleName+LastName; Vice President of Production is a JobTitle;,"SELECT T2.FirstName, T2.MiddleName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle = 'Vice President of Production'"
works_cycles,How many employees in the Information Service department work the evening shift?,Information Service is a name of department;,SELECT COUNT(T2.BusinessEntityID) FROM Department AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.DepartmentID = T2.DepartmentID INNER JOIN Shift AS T3 ON T2.ShiftId = T3.ShiftId WHERE T1.Name = 'Information Services' AND T3.Name = 'Evening'
works_cycles,List all the purchase order ids of the vendor with a below average rating.,below average rating refers to CreditRating = 5;,SELECT T2.PurchaseOrderID FROM Vendor AS T1 INNER JOIN PurchaseOrderHeader AS T2 ON T1.BusinessEntityID = T2.VendorID WHERE T1.CreditRating = 5
works_cycles,"Is the phone number ""114-555-0100"" a work number or a home number?",,SELECT T2.Name FROM PersonPhone AS T1 INNER JOIN PhoneNumberType AS T2 ON T1.PhoneNumberTypeID = T2.PhoneNumberTypeID WHERE T1.PhoneNumber = '114-555-0100'
works_cycles,"What is the total shipment by ""cargo transport 5"" cost of all purchase orders created on 12/14/2011?",Catgo Transport 5 is a name of shipping method; OrderDate = '2011-12-14'; total shipment cost = SUM(Freight);,SELECT SUM(t2.freight) FROM ShipMethod AS t1 INNER JOIN PurchaseOrderHeader AS t2 ON t1.shipmethodid = t2.shipmethodid WHERE t1.name = 'cargo transport 5' AND t2.orderdate = '2011-12-14'
works_cycles,How many sales orders did the salesperson David R. Campbell create?,SP is an abbreviation for Sales Person; PersonType = 'SP';,SELECT COUNT(T2.TotalDue) FROM Person AS T1 INNER JOIN SalesOrderHeader AS T2 ON T1.ModifiedDate = T2.DueDate WHERE T1.FirstName = 'David' AND T1.MiddleName = 'R' AND T1.LastName = 'Campbell' AND T1.PersonType = 'SP'
works_cycles,What is the email address of the Facilities Manager?,Facilities Manager is a job title,SELECT T3.EmailAddress FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN EmailAddress AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T1.JobTitle = 'Facilities Manager'
works_cycles,How many customers are there in Canada?,Canada is name of sales territory,SELECT COUNT(T2.CustomerID) FROM SalesTerritory AS T1 INNER JOIN Customer AS T2 ON T1.TerritoryID = T2.TerritoryID WHERE T1.Name = 'Canada'
works_cycles,"What is the shipping address for the sales order ""43873""?",shipping address = AddressLine1+AddressLine2+City;,SELECT T1.ShipToAddressID FROM SalesOrderHeader AS T1 INNER JOIN Address AS T2 ON T1.BillToAddressID = T2.AddressID WHERE T1.SalesOrderID = 43873 GROUP BY T1.ShipToAddressID
works_cycles,List the first names of the people with more than 65 sick leave hours.,SickLeaveHours>65;,SELECT T2.FirstName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.SickLeaveHours > 65
works_cycles,"Among all the production technicians, how many have a below average pay rate for a production technician?",production technician is a job title; below average rate refers to Rate<AVG(Rate);,SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle LIKE 'Production Technician%' AND T2.Rate < ( SELECT AVG(T2.Rate) FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle LIKE 'Production Technician%' )
works_cycles,What proportion of sales orders are made from the United Kingdom?,"proportion = DIVIDE(SUM(Name = 'UK')), (COUNT(SalesOrderID))) as count;",SELECT CAST(SUM(CASE WHEN T2.Name = 'United Kingdom' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.SalesOrderID) FROM SalesOrderHeader AS T1 INNER JOIN SalesTerritory AS T2 ON T1.TerritoryID = T2.TerritoryID
works_cycles,"When is the modified date of the phone number ""1500 555-0143""?",,SELECT ModifiedDate FROM PersonPhone WHERE PhoneNumber = '1 (11) 500 555-0143'
works_cycles,What is the business ID of the person who has made the most sales total year to date?,business ID refers to BusinessEntityID; sales total year to date refers to SalesYTD; most sales total year to date refers to MAX(SalesYTD);,SELECT BusinessEntityID FROM SalesPerson ORDER BY SalesYTD DESC LIMIT 1
works_cycles,List all active vendors who offer a purchasing web service.,active vendors refers to ActiveFlag = 1; vendor who offer a purchasing web service refers to PurchasingWebServiceURL NOT null;,SELECT Name FROM Vendor WHERE ActiveFlag = 1
works_cycles,Which territory has the most customers as of 9/12/2014?,ModifiedDate between'2014-09-12 00:00:00' and '2014-09-12 23:59:59';,SELECT TerritoryID FROM Customer WHERE ModifiedDate < '2014-12-09' GROUP BY TerritoryID ORDER BY COUNT(TerritoryID) DESC LIMIT 1
works_cycles,What is the total cost for all the orders placed on 5/29/2013?,total cost = SUM(TotalDue); OrderDate = '2013-05-29';,SELECT SUM(TotalDue) FROM PurchaseOrderHeader WHERE OrderDate LIKE '2013-05-29%'
works_cycles,What is the most common first name among the vendor contact?,vendor contact refers to PersonType = 'VC';,SELECT FirstName FROM Person WHERE PersonType = 'VC' GROUP BY FirstName ORDER BY COUNT(*) DESC LIMIT 1
works_cycles,List the full name of all the 'Production Technician - WC50',full name = FirstName+MiddleName+LastName; Production Technician - WC50 is a job title;,"SELECT T2.FirstName, T2.MiddleName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 USING (BusinessEntityID) WHERE T1.JobTitle = 'Production Technician - WC50' GROUP BY T2.FirstName, T2.MiddleName, T2.LastName"
works_cycles,How many Minipumps have been sold?,Minipump is name of a product,SELECT COUNT(OrderQty) FROM SalesOrderDetail WHERE ProductID IN ( SELECT ProductID FROM Product WHERE Name = 'Minipump' )
works_cycles,"What is the person's business ID with a vista credit card number ""11113366963373""?",business id refers to BusinessEntityID,SELECT T2.BusinessEntityID FROM CreditCard AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.CreditCardID = T2.CreditCardID WHERE T1.CardNumber = 11113366963373
works_cycles,"Where does the person with the BusinessEntityID ""5555"" live?",where the person live refers addresstype.Name = 'Home',"SELECT T3.City, T3.AddressLine1 FROM BusinessEntityAddress AS T1 INNER JOIN AddressType AS T2 ON T1.AddressTypeID = T2.AddressTypeID INNER JOIN Address AS T3 ON T1.AddressID = T3.AddressID WHERE T1.BusinessEntityID = 5555 AND T2.Name = 'Home'"
works_cycles,"List all the names of products with the special offer ""15"".",,SELECT T2.Name FROM SpecialOfferProduct AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.SpecialOfferID = 15
works_cycles,What is the credit card number for Michelle E Cox?,credit card number refers to CreditCardID,SELECT T3.CreditCardID FROM Person AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN CreditCard AS T3 ON T2.CreditCardID = T3.CreditCardID WHERE T1.FirstName = 'Michelle' AND T1.MiddleName = 'E' AND T1.LastName = 'Cox'
works_cycles,"What is the reason for sales order ""51883""?",reason means the category of sales reason which refers to ReasonType,SELECT T2.Name FROM SalesOrderHeaderSalesReason AS T1 INNER JOIN SalesReason AS T2 ON T1.SalesReasonID = T2.SalesReasonID WHERE T1.SalesOrderID = 51883
works_cycles,"What is the credit card number for the sales order ""45793""?",,SELECT T2.CardNumber FROM SalesOrderHeader AS T1 INNER JOIN CreditCard AS T2 ON T1.CreditCardID = T2.CreditCardID WHERE T1.SalesOrderID = 45793
works_cycles,List all the sales people in the Northwest US.,Northwest is name of SalesTerritory; US is the CountryRegionCode;,SELECT T2.BusinessEntityID FROM SalesTerritory AS T1 INNER JOIN SalesPerson AS T2 ON T1.TerritoryID = T2.TerritoryID WHERE T1.Name = 'Northwest' AND T1.CountryRegionCode = 'US'
works_cycles,Which Production Technician has the highest pay rate?,highest pay rate refers to MAX(Rate);,SELECT T1.BusinessEntityID FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle LIKE 'Production Technician%' ORDER BY T2.Rate DESC LIMIT 1
works_cycles,"Who is the sales person in charge of the territory with the id ""9""? Provide their full name.",full name = FirstName+MiddleName+LastName;,"SELECT T2.FirstName, T2.MiddleName, T2.LastName FROM SalesPerson AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.TerritoryID = 9"
works_cycles,"What is the description of the discount for the product with the id ""762""?",,SELECT T2.Description FROM SpecialOfferProduct AS T1 INNER JOIN SpecialOffer AS T2 ON T1.SpecialOfferID = T2.SpecialOfferID WHERE T1.ProductID = 762
works_cycles,Compare the average pay rate of male and female employees.,"male refers to Gender = 'M'; female refers to Gender = 'F'; difference in average rate = DIVIDE(AVG(Rate where Gender = 'F')), (AVG(Rate where Gender = 'M'))) as diff;",SELECT AVG(T2.Rate) FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID GROUP BY T1.Gender
works_cycles,What is the percentage of employees who work the night shift?,"percentage = DIVIDE(SUM(Name = 'Night')), (COUNT(ShiftID)) as percentage;",SELECT CAST(SUM(CASE WHEN T1.Name = 'Night' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.BusinessEntityID) FROM Shift AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.ShiftId = T2.ShiftId
works_cycles,How many married male employees were born before the year 1960?,married refers to MaritalStatus = 'M'; male refers to Gender = 'M'; BirthDate < = '1959-12-31';,"SELECT COUNT(BusinessEntityID) FROM Employee WHERE MaritalStatus = 'M' AND STRFTIME('%Y', BirthDate) < '1960' AND Gender = 'M'"
works_cycles,What are the top 5 types of products with the highest selling price? ?,highest selling price refers to MAX(ListPrice);,SELECT Name FROM Product ORDER BY ListPrice DESC LIMIT 5
works_cycles,When did the company hired its first Accountant?,Accountant is a job title; first hired = MIN(HireDate),SELECT MIN(HireDate) FROM Employee WHERE JobTitle = 'Accountant'
works_cycles,"In 2007, which job position was hired the most?",Job position and job title are synonyms; job position that was hired the most refers to MAX(COUNT(JobTitle); HireDate BETWEEN '2007-1-1' AND '2007-12-31';,"SELECT JobTitle FROM Employee WHERE STRFTIME('%Y', HireDate) = '2007' GROUP BY HireDate ORDER BY COUNT(JobTitle) DESC LIMIT 1"
works_cycles,"What is the profit on net of the vendor with the highest standard price? If there are two vendors of the same amount, calculate only for one vendor.","profit on net = SUBTRACT(LastReceiptCost, StandardPrice);",SELECT LastReceiptCost - StandardPrice FROM ProductVendor ORDER BY StandardPrice DESC LIMIT 1
works_cycles,How many departments did Sheela Ward work in between 1/1/2011 to 12/31/2012,number of departments an employee works for between 2011 and 2012 refers to year(StartDate) BETWEEN 2011 AND 2012 and year(EndDate) BETWEEN 2011 and 2012;,"SELECT COUNT(T3.Name) FROM Person AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T1.FirstName = 'Sheela' AND T1.LastName = 'Word' AND STRFTIME('%Y', T3.ModifiedDate) BETWEEN '2011' AND '2012'"
works_cycles,What is the average age of the sales agents in the company by 12/31/2009?,"average age as of 12/31/2009 = AVG(SUBTRACT(2009, year(BirthDate));","SELECT AVG(2009 - STRFTIME('%Y', T2.BirthDate)) FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.PersonType = 'SP'"
works_cycles,To which group does the department with the least amount of workers belong to? Indicate the name of the department as well.,least amount of workers refers to MIN(count(DepartmentID));,SELECT T2.GroupName FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID GROUP BY T2.GroupName ORDER BY COUNT(T1.BusinessEntityID) LIMIT 1
works_cycles,What is the age of the oldest Marketing Specialist by 12/31/2015 and what is his/her hourly rate?,"age as of 12/31/2015 = SUBTRACT(2015, year(BirthDate)); hourly rate refers to Rate;","SELECT 2015 - STRFTIME('%Y', T1.BirthDate), T2.Rate FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle = 'Marketing Specialist' ORDER BY 2015 - STRFTIME('%Y', T1.BirthDate) DESC LIMIT 1"
works_cycles,What is the total amount due of all the purchases made by the company to the vendor that has the lowest selling price amount of a single product? Indicate the name of the vendor to which the purchases was made.,Vendor's selling price of a single product refers to UnitPrice;,"SELECT T1.UnitPrice, T3.Name FROM PurchaseOrderDetail AS T1 INNER JOIN PurchaseOrderHeader AS T2 ON T1.PurchaseOrderID = T2.PurchaseOrderID INNER JOIN Vendor AS T3 ON T2.VendorID = T3.BusinessEntityID ORDER BY T1.UnitPrice LIMIT 1"
works_cycles,Who made the purchase order with the greatest total due before freight? Indicate her employee ID and calculate for his/her age when he/she was hired.,"total due before freight = SUBTRACT(TotalDue, Freight); age at the time an employee was hired = SUBTRACT(HireDate, year(BirthDate);","SELECT T2.BusinessEntityID, STRFTIME('%Y', T2.HireDate) - STRFTIME('%Y', T2.BirthDate) FROM PurchaseOrderHeader AS T1 INNER JOIN Employee AS T2 ON T1.EmployeeID = T2.BusinessEntityID ORDER BY T1.TotalDue DESC LIMIT 1"
works_cycles,What is the position of the employee with the 10th highest salary? Indicate his/her salary amount and his/her full name.,salary and Rate are synonyms; full name = FirstName+MiddleName+LastName;,"SELECT T2.JobTitle, T1.Rate, T3.FirstName, T3.MiddleName, T3.LastName FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Person AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID ORDER BY T1.Rate DESC LIMIT 9, 1"
works_cycles,What is the profit of a single product that received the highest rating from John Smith? List the product/s' names.,"highest rating refers to Rating = 5; profit = SUBTRACT(ListPrice, StandardCost);","SELECT T1.ListPrice - T1.StandardCost, T1.Name FROM Product AS T1 INNER JOIN ProductReview AS T2 ON T1.ProductID = T2.ProductID WHERE T2.ReviewerName = 'John Smith' ORDER BY T2.Rating DESC LIMIT 1"
works_cycles,What is the salary rate per hour that the company paid to the first 5 employees that they hired?,salary rate per hour refers to Rate; first 5 employees that were hired refers to 5 oldest HireDate;,"SELECT T1.Rate FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Person AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID ORDER BY T2.HireDate ASC LIMIT 0, 5"
works_cycles,"Among the vendors with maximum orders betweeen 500 to 750, which vendor has the 10th highest profit on net?","maximum orders refers to MaxOrderQty; MaxOrderQty BETWEEN '500' AND '750'; profit on net = SUBTRACT(LastReceiptCost, StandardPrice);","SELECT T2.Name FROM ProductVendor AS T1 INNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.MaxOrderQty BETWEEN 500 AND 750 ORDER BY T1.LastReceiptCost - T1.StandardPrice DESC LIMIT 9, 1"
works_cycles,"As of 12/31/2011, how long has the employee assigned to all pending for approval papers been working in the company from the date he was hired?","pending for approval papers refer to Status = 1; length of stay in the company as of 12/31/2011 = SUBTRACT(2011, year(HireDate));","SELECT 2011 - STRFTIME('%Y', T2.HireDate) FROM Document AS T1 INNER JOIN Employee AS T2 ON T1.Owner = T2.BusinessEntityID WHERE T1.Status = 1"
works_cycles,"Jill ranked which medium-quality class product as the highest, and how long will it take the company to manufacture such a product?",second-lowest rating refers to Rating = 2; high-quality class product refers to Class = 'H'; length of time it takes the company to manufacture a product refers to DaysToManufacture;,SELECT T1.DaysToManufacture FROM Product AS T1 INNER JOIN ProductReview AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Rating = 5 AND T1.Class = 'M' ORDER BY T2.Rating LIMIT 1
works_cycles,"What was the first job position that the company needed, and who was hired? Indicate his/her full name.",job position and job title are synonyms; full name = FirstName+MiddleName+LastName;,"SELECT T1.JobTitle, T2.FirstName, T2.MiddleName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID ORDER BY T1.HireDate LIMIT 1"
works_cycles,How many work orders with quantities ranging from 100 to 250 have a reorder point of no more than 375?,work order refers to TransactionType = 'W'; Quantity BETWEEN 100 AND 250; ReorderPoint< = 375;,SELECT COUNT(T1.TransactionID) FROM TransactionHistory AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Quantity BETWEEN 100 AND 250 AND T2.ReorderPoint <= 375
works_cycles,How much is the average salary of female employees in comparison to male employees?,"female refers to Gender = 'F'; male refers to Gender = 'M'; difference in the average salary of female against male employees = SUBTRACT(AVG(Rate where Gender = 'F')), (AVG(Rate where Gender = 'M')));",SELECT AVG(T2.Rate) FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.Gender = 'F'
works_cycles,What are the names of the vendors to which the company purchased its women's tights products?,product is purchased refers to MakeFlag = 0; women's refers to Style = 'W'; ProductSubcategoryID = 'Tights';,SELECT DISTINCT T4.Name FROM Product AS T1 INNER JOIN ProductVendor AS T2 ON T1.ProductID = T2.ProductID INNER JOIN ProductSubcategory AS T3 ON T1.ProductSubcategoryID = T3.ProductSubcategoryID INNER JOIN Vendor AS T4 ON T2.BusinessEntityID = T4.BusinessEntityID WHERE T1.MakeFlag = 0 AND T1.Style = 'W' AND T3.Name = 'Tights'
works_cycles,How frequently does the first-ever Scheduling Assistant get paid?,PayFrequency = 1 refers to ‘Salary received monthly’; PayFrequency = 2 refers to ‘Salary received biweekly';,SELECT T2.PayFrequency FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle = 'Scheduling Assistant' ORDER BY T1.HireDate LIMIT 1
works_cycles,"What product has the fewest online orders from one customer? List the product's class, line of business, and list price.",fewest online orders refer to MIN(Quantity);,"SELECT T2.Class, T2.ProductLine, T2.ListPrice FROM ShoppingCartItem AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID GROUP BY T1.ProductID ORDER BY SUM(Quantity) LIMIT 1"
works_cycles,What is the full name of the sales person who has the the highest commission percent received per sale?,commision percent received per sale refers to CommissionPct; highest commision percent received per sale refers to MAX(CommissionPcT); full name = FirstName+MiddleName+LastName;,"SELECT T2.FirstName, T2.MiddleName, T2.LastName FROM SalesPerson AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID ORDER BY T1.CommissionPct DESC LIMIT 1"
works_cycles,What is the full name of the second oldest person in the company at the time he was hired?,"age at the time of being hired = SUBTRACT(HireDate, BirthDate); full name = FirstName+MiddleName+LastName;","SELECT T2.FirstName, T2.MiddleName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID ORDER BY STRFTIME('%Y', T1.HireDate) - STRFTIME('%Y', T1.BirthDate) DESC LIMIT 1, 1"
works_cycles,What is the total profit gained by the company from the product that has the highest amount of quantity ordered from online customers? Indicate the name of the product.,"profit = MULTIPLY(SUBTRACT(ListPrice, Standardcost)), (Quantity)));","SELECT (T2.ListPrice - T2.StandardCost) * SUM(T1.Quantity), T2.Name FROM ShoppingCartItem AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID GROUP BY T1.ProductID, T2.Name, T2.ListPrice, T2.StandardCost, T1.Quantity ORDER BY SUM(T1.Quantity) DESC LIMIT 1"
works_cycles,What is the highest amount of difference between the ordered quantity and actual quantity received in a single purchase order and to which vendor was the purchase order made?,"highest amount of difference between the ordered quantity and actual quantity received in a single purchase order refers to MAX(SUBTRACT(OrderQty, ReceivedQty));","SELECT T2.OrderQty - T2.ReceivedQty, VendorID FROM PurchaseOrderHeader AS T1 INNER JOIN PurchaseOrderDetail AS T2 ON T1.PurchaseOrderID = T2.PurchaseOrderID ORDER BY T2.OrderQty - T2.ReceivedQty DESC LIMIT 1"
works_cycles,What is the average lead time of product ID 843? Calculate for its profit on net and indicate the full location to which the vendor is located.,"Profit on net = SUBTRACT(LastReceiptCost, StandardPrice); full location = AddressLine1+AddressLine2+City+PostalCode;","SELECT T1.AverageLeadTime, T1.LastReceiptCost - T1.StandardPrice, T4.AddressLine1, T4.AddressLine2 , T4.City, T4.PostalCode FROM ProductVendor AS T1 INNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN BusinessEntityAddress AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID INNER JOIN Address AS T4 ON T3.AddressID = T4.AddressID WHERE T1.ProductID = 843"
works_cycles,How many salespersons haven't met quota?,salesperson that haven't met the quota refers to Bonus = 0;,SELECT COUNT(BusinessEntityID) FROM SalesPerson WHERE Bonus = 0
works_cycles,"Among the sales with a tax applied to retail transaction, how many of them are charged by multiple types of taxes?",tax applied to retail transaction refers to Taxtype = 1; sales that are charged with multiple types of tax refers to NAME LIKE '%+%';,SELECT COUNT(SalesTaxRateID) FROM SalesTaxRate WHERE Name LIKE '%+%'
works_cycles,Please give the highest product cost of a purchase order.,product cost refers to ActualCost; purchase order refers to TransactionType = 'P';,SELECT ActualCost FROM TransactionHistory WHERE TransactionType = 'P' ORDER BY ActualCost DESC LIMIT 1
works_cycles,What is the current status of the order with the highest shipping cost?,shipping cost and Freight are synonyms; highest shipping cost refers to MAX(Freight);,SELECT Status FROM SalesOrderHeader ORDER BY Freight DESC LIMIT 1
works_cycles,How many products are out of stock?,out of stock product refers to OnOrderQty = 0;,SELECT COUNT(ProductID) FROM ProductVendor WHERE OnOrderQty = 0
works_cycles,What is the highest profit on net for a product?,"profit on net = subtract(LastReceiptCost, StandardPrice)",SELECT LastReceiptCost - StandardPrice FROM ProductVendor ORDER BY LastReceiptCost - StandardPrice DESC LIMIT 1
works_cycles,Which reviewer gives the biggest number of the highest rating?,highest rating refers to MAX(Rating),SELECT ReviewerName FROM ProductReview WHERE Rating = ( SELECT Rating FROM ProductReview ORDER BY Rating DESC LIMIT 1 )
works_cycles,Which product gets the most reviews?,"most reviews refers to MAX(count(ProductID))

",SELECT T2.Name FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID GROUP BY T1.ProductID ORDER BY COUNT(T1.ProductReviewID) DESC LIMIT 1
works_cycles,"Among the products that are purchased, how many of them have never received the highest rating?","product that are purchased refers to MakeFlag = 0; never received highest rating refers to Rating! = 5

",SELECT COUNT(T1.ProductID) FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.MakeFlag = 0 AND T1.Rating != 5
works_cycles,What is the biggest amount of reviews a salable product gets?,salable product refers to FinishedGoodsFlag = 1; biggest amount reviews refers to MAX(count(ProductID)),SELECT T1.Comments FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.FinishedGoodsFlag = 1 GROUP BY T1.Comments ORDER BY COUNT(T1.ProductReviewID) DESC LIMIT 1
works_cycles,"Among the products that are both manufactured in house and salable, how many of them get over 10 reviews?",manufactured in house refers to MakeFlag = 1; salable product refers to FinishedGoodsFlag = 1; over 10 reviews refers to count(comments)>10,SELECT T2.Name FROM ProductReview AS T1 INNER JOIN Product AS T2 USING (ProductID) WHERE T2.FinishedGoodsFlag = 1 AND T2.MakeFlag = 1 GROUP BY T2.Name ORDER BY COUNT(T1.COMMENTS) > 10
works_cycles,Please list the names of the products that get over 10 reviews and a salable.,salable product refers to FinishedGoodsFlag = 1; over 10 reviews refers to count(comments)>10,SELECT T2.NAME FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.FinishedGoodsFlag = 1 GROUP BY T2.NAME ORDER BY COUNT(T1.comments) > 10
works_cycles,"Please list the reviewers who have given the highest rating for a medium class, women's product.",highest rating refers to Rating = 5; high class refers to Class = 'H'; men's product refers to Style = 'M',SELECT T1.ReviewerName FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Class = 'M' AND T2.Style = 'W' AND T1.Rating = 5
works_cycles,What is the class of the product with the most reviews?,most review refers to MAX(count(comments)); high class refers to Class = 'H'; medium class refers to Class = 'M'; low class refers to Class = 'L',SELECT T2.Class FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID GROUP BY T2.Class ORDER BY COUNT(T1.ProductReviewID) DESC LIMIT 1
works_cycles,Please list the e-mails of the reviewers who have reviewed high class.,high class refers to Class = 'H'; men's product refers to Style = 'M',SELECT T1.EmailAddress FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Class = 'H'
works_cycles,Please list the names of the products that have over 3 price changes.,over 3 price changes refers to count(ListPrice)>3,SELECT T2.Name FROM ProductListPriceHistory AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID GROUP BY T2.Name ORDER BY COUNT(T1.ListPrice) > 3
works_cycles,What is the product description of Headset Ball Bearings?,Headset Ball Bearings is name of a product,SELECT T1.Description FROM ProductDescription AS T1 INNER JOIN Product AS T2 WHERE T2.Name = 'Headset Ball Bearings' AND T1.productDescriptionID = T2.ProductID
works_cycles,What is the highest vendor's selling price for Hex Nut 5?,vendor's selling price refers to StandardPrice,SELECT T1.StandardPrice FROM ProductVendor AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'Hex Nut 5' ORDER BY T1.StandardPrice DESC LIMIT 1
works_cycles,Please list all the vendors' usual selling prices of the product Hex Nut 5.,vendor's selling price refers to StandardPrice,SELECT T1.StandardPrice FROM ProductVendor AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'Hex Nut 5' GROUP BY T1.StandardPrice ORDER BY COUNT(T1.StandardPrice) DESC LIMIT 1
works_cycles,"Among the vendors that sell the product Hex Nut 5, how many of them have a good credit rating?",good credit rating refers to CreditRating between 1 and 3,SELECT COUNT(DISTINCT T3.Name) FROM ProductVendor AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Vendor AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T2.Name = 'Hex Nut 5' AND T3.CreditRating = 1 AND 3
works_cycles,Please list the website purchasing links of the vendors from whom the product Hex Nut 5 can be purchased.,website purchasing link refers to PurchasingWebServiceURL,SELECT T3.PurchasingWebServiceURL FROM ProductVendor AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Vendor AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T2.Name = 'Hex Nut 5'
works_cycles,"Which vendor's selling price for Hex Nut 5 is the lowest, please give the vendor's name.",vendor's selling price refers to StandardPrice; lowest selling price = MIN(StandardPrice),SELECT T3.Name FROM ProductVendor AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Vendor AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T2.Name = 'Hex Nut 5' ORDER BY T1.StandardPrice LIMIT 1
works_cycles,How many high-class products are sold by preferred vendors?,preferred vendor refers to PreferredVendorStatus = 1; high class refers to Class = 'H',SELECT COUNT(T2.Name) FROM ProductVendor AS T1 INNER JOIN Product AS T2 USING (ProductID) INNER JOIN Vendor AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T3.PreferredVendorStatus = 1 AND T2.Class = 'M'
works_cycles,Please give all the list prices of the product LL Fork.,Hex Nut 5 is name of a product,SELECT T2.ListPrice FROM Product AS T1 INNER JOIN ProductListPriceHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'LL Fork'
works_cycles,"Among the products from the mountain product line, how many of them are sold by over 2 vendors?",mountain product line refers to ProductLine = 'M'; sold by over 5 vendors refers to count(Name)>5,SELECT SUM(CASE WHEN T1.ProductLine = 'M' THEN 1 ELSE 0 END) FROM Product AS T1 INNER JOIN ProductVendor AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Vendor AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID GROUP BY T1.ProductID HAVING COUNT(T1.Name) > 2
works_cycles,"Among the products that get over at least 1 review, how many of them are from the mountain product line?",mountain product line refers to ProductLine = 'M',SELECT SUM(CASE WHEN T2.ProductLine = 'M' THEN 1 ELSE 0 END) FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID GROUP BY T1.ProductID HAVING COUNT(T1.ProductReviewID) > 1
works_cycles,Please list the email adresses of the reviewers who have given the lowest rating to the product HL Mountain Pedal.,lowest rating refers to Rating = 1,SELECT T1.EmailAddress FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'HL Mountain Pedal' ORDER BY T1.Rating LIMIT 1
works_cycles,How many products that take more than 2 days to make are out of stock?,take more than 2 days to make refers to DaysToManufacture>2; out of stock refers to OnOrderQty = 0 or OnOrderQty is null,SELECT COUNT(T2.ProductID) FROM ProductVendor AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.OnOrderQty IS NULL OR T1.OnOrderQty = 0
works_cycles,Please list the products that are out of stock and purchased in house.,take more than 2 days to make refers to DaysToManufacture>2; out of stock refers to OnOrderQty = 0 or OnOrderQty is null; manufactured in house refers to MakeFlag = 1,SELECT T2.Name FROM ProductVendor AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.MakeFlag = 0 AND (T1.OnOrderQty IS NULL OR T1.OnOrderQty = 0)
works_cycles,"Among the salable products from the mountain product line, how many of them have the most reviews?",salable product refers to FinishedGoodsFlag = 1; mountain product line refers to ProductLine = 'M',SELECT SUM(CASE WHEN T2.ProductLine = 'M' THEN 1 ELSE 0 END) FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.FinishedGoodsFlag = 1 GROUP BY T1.ProductID ORDER BY COUNT(T1.ProductReviewID) DESC LIMIT 1
works_cycles,What is the average selling price of different vendors of the product Hex Nut 5?,"average selling price = divide(sum(StandardPrice), count(BusinessEntityID))",SELECT SUM(T1.StandardPrice) / COUNT(T1.BusinessEntityID) FROM ProductVendor AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'Hex Nut 5'
works_cycles,What is the product that has the highest average rating from the mountain product line?,"mountain product line refers to ProductLine = 'M'; highest average rating = max(divide(sum(Rating), count(ProductReview)))",SELECT T2.Name FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.ProductLine = 'M' GROUP BY T2.Name ORDER BY CAST(SUM(T1.Rating) AS REAL) / COUNT(T1.ProductID) DESC LIMIT 1
works_cycles,Please list the top 3 house-manufactured products with the highest average rating.,"home manufactured refers to MakeFlag = 1; average rating = divide(sum(Rating), count(ProductReview))",SELECT T2.Name FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.MakeFlag = 1 GROUP BY T2.Name ORDER BY SUM(T1.Rating) DESC LIMIT 1
works_cycles,List all the non-sales employees in ascending order of its business entitty ID.,non-sales employee refers to PersonType = 'EM',"SELECT FirstName, LastName FROM Person WHERE PersonType = 'EM' ORDER BY BusinessEntityID"
works_cycles,Name all person in the individual retail whose last name is 'Anderson'.,person in the individual retail refers to PersonType = 'IN',"SELECT FirstName, MiddleName, LastName FROM Person WHERE LastName = 'Anderson' AND PersonType = 'IN'"
works_cycles,List the name of employees who had left the company? When were they hired?,employee that has left the company refers to EndDate is not null,"SELECT T1.FirstName, T1.LastName, T2.HireDate FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN EmployeeDepartmentHistory AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T3.EndDate IS NOT NULL"
works_cycles,Name all salaried employee who are hired in 2007 and later.,salaried employee refers to SalariedFlag = 1; hired in 2007 and later refers to year(HireDate)> = 2007,"SELECT T1.FirstName, T1.LastName FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE STRFTIME('%Y', T2.HireDate) >= '2007' AND T2.SalariedFlag = 1"
works_cycles,List the name of married employees with less than 20 vacation hours.,married employee refers to MaritalStatus = 'M'; less than 20 vacation hours refers to VacationHours<20,"SELECT T1.FirstName, T1.LastName FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.MaritalStatus = 'M' AND T2.VacationHours < 20"
works_cycles,Name the oldest employee who is working on night shift. How old is the employee?,working on night shift refers to ShiftID = 3; oldest employee refers to min(BirthDate); age = 2022-year(BirthDate)+1,"SELECT T1.FirstName, T1.LastName , STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', BirthDate) FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN EmployeeDepartmentHistory AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T3.ShiftId = 3 ORDER BY STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', BirthDate) DESC LIMIT 1"
works_cycles,List all staff in the Shipping and Receiving department who are hired in 2009.,hired in 2009 refers to year(HireDate) = 2009,"SELECT T1.FirstName, T1.LastName FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN EmployeeDepartmentHistory AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID INNER JOIN Department AS T4 ON T3.DepartmentID = T4.DepartmentID WHERE STRFTIME('%Y', T2.HireDate) = '2009' AND T4.Name = 'Shipping and Receiving'"
works_cycles,What is the job title of the oldest employee in the company? In which department is he in?,oldest employee refers to min(BirthDate),"SELECT T2.JobTitle, T4.Name FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN EmployeeDepartmentHistory AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID INNER JOIN Department AS T4 ON T3.DepartmentID = T4.DepartmentID ORDER BY T2.HireDate LIMIT 1"
works_cycles,"Based on the lastet payrate of each employee, calculate the average hourly payrate for each department.","latest payrate refers to max(RateChangeDate); average hourly payrate = divide(sum(Rate), count(BusinessEntityID)) for each DepartmentID",SELECT AVG(T1.Rate) FROM EmployeePayHistory AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T1.RateChangeDate = ( SELECT MAX(T1.RateChangeDate) FROM EmployeePayHistory AS T1 INNER JOIN Department AS T2 ON T1.BusinessEntityID = T2.DepartmentID )
works_cycles,"Other than the Chief Executive Officer, who is the employee who has the highest payrate? State the rate.",other than the Chief Executive Officer refers to JobTitle! = 'Chief Executive Officer'; highest payrate refers to max(Rate),"SELECT T2.FirstName, T2.LastName FROM EmployeePayHistory AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Employee AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T3.JobTitle NOT LIKE 'Chief Executive Officer' ORDER BY T1.Rate DESC LIMIT 1"
works_cycles,Name the vendor who has the shortest average lead time for Product ID 319.,,SELECT T1.Name FROM Vendor AS T1 INNER JOIN ProductVendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.ProductID = 319 ORDER BY T2.AverageLeadTime LIMIT 1
works_cycles,List all product name from Australia Bike Retailer order by product ID.,Australia Bike Retailer is name of vendor,SELECT T3.Name FROM Vendor AS T1 INNER JOIN ProductVendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Product AS T3 ON T2.ProductID = T3.ProductID WHERE T1.Name = 'Australia Bike Retailer'
works_cycles,Which vendor gives the best profit on net for product ID 342?,"profit on net = subtract(LastReceiptCost, StandardPrice); best profit on net refers to max(subtract(LastReceiptCost, StandardPrice))",SELECT T1.Name FROM Vendor AS T1 INNER JOIN ProductVendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.ProductID = 342 ORDER BY T2.LastReceiptCost - T2.StandardPrice DESC LIMIT 1
works_cycles,What is the current payrate of Rob Walters? Calculate the percentage increment from his previous payrate.,"current payrate refers to max(Rate); percentage increment = divide(subtract(max(Rate), min(Rate)), min(Rate))*100%","SELECT T2.Rate , (MAX(T2.Rate) - MIN(T2.Rate)) * 100 / MAX(T2.Rate) FROM Person AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.FirstName = 'Rob' AND T1.LastName = 'Walters'"
works_cycles,Calculate the average length of employment for employee working in the Research and Development deparment.,"average length of employment = AVG(subtract(2022, year(HireDate)))","SELECT AVG(STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.HireDate)) FROM Employee AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T3.Name = 'Research and Development'"
works_cycles,What is the average age of employee in Adventure Works?,"average age = AVG(subtract(year(now), year(HireDate)))","SELECT AVG(STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', BirthDate)) FROM Employee"
works_cycles,"Among the employees in Adventure Works, calculate the percentage of them working as sales representatives.","percentage of sales representatives = divide(count(JobTitle = 'Sales Representative'), count(JobTitle))*100%",SELECT CAST(SUM(CASE WHEN JobTitle = 'Sales Representative' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(BusinessEntityID) FROM Employee
works_cycles,Please provide contact details of all Marketing Managers. State their name and phone number.,Marketing Manager is a job title,"SELECT T1.FirstName, T1.LastName, T2.PhoneNumber FROM Person AS T1 INNER JOIN PersonPhone AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Employee AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T3.JobTitle = 'Marketing Manager'"
works_cycles,List the person who owns a distinguish credt card.,distinguish credt card refers to cardType = 'Distinguish',"SELECT T3.FirstName, T3.LastName FROM CreditCard AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.CreditCardID = T2.CreditCardID INNER JOIN Person AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T1.CardType = 'Distinguish'"
works_cycles,Name the sales person for store Area Bike Accessories. Which territory is he / she in?,,SELECT T4.Name FROM Store AS T1 INNER JOIN SalesPerson AS T2 ON T1.SalesPersonID = T2.BusinessEntityID INNER JOIN Person AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID INNER JOIN SalesTerritory AS T4 ON T2.TerritoryID = T4.TerritoryID WHERE T1.Name = 'Area Bike Accessories'
works_cycles,Name all stores and its sales representative in France territory.,France territory refers to SalesTerritory.Name = 'France';,"SELECT T3.Name, T4.FirstName, T4.LastName FROM SalesTerritory AS T1 INNER JOIN Customer AS T2 ON T1.TerritoryID = T2.TerritoryID INNER JOIN Store AS T3 ON T2.StoreID = T3.BusinessEntityID INNER JOIN Person AS T4 ON T2.PersonID = T4.BusinessEntityID WHERE T1.Name = 'France'"
works_cycles,Name all products that started selling in 2013. State its respective vendor's name.,Started selling in 2013 refers to year(SellStartDate) = 2013;,"SELECT T1.Name, T3.Name FROM Product AS T1 INNER JOIN ProductVendor AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Vendor AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE STRFTIME('%Y', T1.SellStartDate) = '2013'"
works_cycles,Names the Sales Representative with the highest year to date sales.,Highest year to date sales refers to Max(SalesYTD);,"SELECT T2.FirstName, T2.MiddleName, T2.LastName FROM SalesPerson AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID ORDER BY T1.SalesYTD DESC LIMIT 1"
works_cycles,"List all product only MOQ of 1,000 and with standard cost more than 17.",MOQ refers to minimum order quantity; MOQ of 1 refers to MinOrderQty = 1; standard cost more than 48 refers to StandardCost > 48;,SELECT T2.Name FROM ProductVendor AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Vendor AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T1.MaxOrderQty = 1000 AND T2.StandardCost > 17
works_cycles,Who is the oldest married male? State his job title.,Male refers to Gender = 'M'; married refers to MaritalStatus = 'M'; oldest refers to Min(BirthDate);,"SELECT T2.FirstName, T2.LastName, T1.JobTitle FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.Gender = 'M' AND T1.MaritalStatus = 'M' ORDER BY T1.BirthDate LIMIT 1"
works_cycles,State the vendor for product number WB-H098.,,SELECT T3.Name FROM Product AS T1 INNER JOIN ProductVendor AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Vendor AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T1.ProductNumber = 'WB-H098'
works_cycles,Find the vendor with the least average lead time for Product ID 348.,,SELECT T2.Name FROM ProductVendor AS T1 INNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.ProductID = 348 ORDER BY T1.AverageLeadTime ASC LIMIT 1
works_cycles,State the employee who are born in or after 1970 and with the least sick leave hour.,born in or after 1970 refers to year(BirthDate) > = 1970;,"SELECT T2.FirstName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE STRFTIME('%Y', T1.BirthDate) > '1970' ORDER BY T1.SickLeaveHours LIMIT 1"
works_cycles,Calculate the average age of employee in each department and state which department has the youngest employees.,"Average = Divide(Sum(Substract(year(@today),year(BirthDate))),Count(BusinessEntityID) by each Department ID; youngest employee refers to Min(BirthDate);","SELECT STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.BirthDate) + 1 , T3.Name FROM Employee AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 USING (BusinessEntityID) INNER JOIN Department AS T3 USING (DepartmentID) ORDER BY T1.BirthDate DESC LIMIT 1"
works_cycles,Please provide the IDs of any three AdventureWorks product subcategories.,,SELECT DISTINCT ProductCategoryID FROM ProductSubcategory LIMIT 3
works_cycles,What are the differences between the 288th salesperson's predicted annual sales and his or her actual sales thus far?,"288th sales person refers to BusinessEntityID = 288; predited annual sales refers to SalesQuota; actual sales refers to SalesYTD; difference = Substract(SalesQuota(BusinessEntityID(288))), (SalesYTD(BusinessEntityID(288)));",SELECT SalesYTD - SalesQuota FROM SalesPerson WHERE BusinessEntityID = 288
works_cycles,Please list three businesses with the lowest total sales from last year.,lowest total sales in last year refers to Min(SalesLastYear);,SELECT BusinessEntityID FROM SalesPerson ORDER BY SalesLastYear LIMIT 3
works_cycles,Which three sales regions have generated the most revenue thus far?,revenue refers to SalesYTD; the most revenue refers to Max(SalesYTD);,SELECT TerritoryID FROM SalesTerritory ORDER BY SalesYTD DESC LIMIT 3
works_cycles,What categories of offers qualify for group discounts for resellers?,resellers refers to Category = 'Reseller';,SELECT Type FROM SpecialOffer WHERE Category = 'Reseller'
works_cycles,What is the highest possible discount rate for 'Excess Inventory'?,excess inventory refers to Type = 'Excess Inventory'; highest possible discount refers to Max(DiscountPct);,SELECT DiscountPct FROM SpecialOffer WHERE Type = 'Excess Inventory' ORDER BY DiscountPct DESC LIMIT 1
works_cycles,What is the difference between the actual manufacturing cost of product number 818 and the estimated manufacturing cost?,"product number 818 refers to ProductID = 818; estimated manufacturing cost refers PlannedCost; actual manufacturing cost refers to ActualCost; difference = Substract(PlannedCost(ProductID(818))),(ActualCost(ProductID(818)));",SELECT PlannedCost - ActualCost FROM WorkOrderRouting WHERE ProductID = 818
works_cycles,How many materials still need to be assembled and have a depth of 2 between each component and their parent product?,still need to be assembled means the assembly doesn't finish or still going on which refers to EndDate IS NULL; a depth of 2 refers to BOMLevel = 2;,SELECT COUNT(*) FROM BillOfMaterials WHERE BOMLevel = 2 AND EndDate IS NULL
works_cycles,How many of the approved documents are confidential?,approved refers to Status = 2; confidential document refers to DocumentSummary is null;,SELECT COUNT(DocumentNode) FROM Document WHERE Status = 2 AND DocumentSummary IS NULL
works_cycles,What are the sales tax records charged by multiple types of tax?,"multiple types of tax refers to Name like '%+%';
",SELECT SalesTaxRateID FROM SalesTaxRate WHERE Name LIKE '%+%'
works_cycles,Which work order transaction number has the highest product quantity?,work order transaction refers to TransactionType = 'W';,SELECT TransactionID FROM TransactionHistory WHERE TransactionType = 'W' ORDER BY Quantity DESC LIMIT 1
works_cycles,Please list any 3 vendors that are not recommended by Adventure Works.,not recommended refers to PreferredVendorStatus = 0;,SELECT Name FROM Vendor WHERE PreferredVendorStatus = 0 LIMIT 3
works_cycles,How many vendors does Adventure Works still work with but are not preferable?,not preferable refers to PreferredVendorStatus = 0; still work refers to ActiveFlag = 1;,SELECT COUNT(BusinessEntityID) FROM Vendor WHERE PreferredVendorStatus = 0 AND ActiveFlag = 1
works_cycles,How many employees who began working in 2009 or later had night shifts?,began work in 2009 or later refers to StartDate> = 2009;,"SELECT COUNT(T1.BusinessEntityID) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Shift AS T2 ON T1.ShiftId = T2.ShiftId WHERE T2.ShiftId = 3 AND STRFTIME('%Y', T2.StartTime) >= '2009'"
works_cycles,"Which department, altogether, has the most personnel who work the evening shift?",evening shift also means night shift where Name = 'Night';most personnel in evening shift refers to Max(Count(Shift.ShiftID(Name = 'Night')));,SELECT T3.Name FROM EmployeeDepartmentHistory AS T1 INNER JOIN Shift AS T2 ON T1.ShiftId = T2.ShiftId INNER JOIN Department AS T3 ON T1.DepartmentID = T3.DepartmentID WHERE T2.Name = 'Night' GROUP BY T3.Name ORDER BY COUNT(T1.BusinessEntityID) DESC LIMIT 1
works_cycles,How many shipments by truck were made?,shipment by truck refers to Name = 'XRQ - TRUCK GROUND';,SELECT COUNT(*) FROM ShipMethod AS T1 INNER JOIN SalesOrderHeader AS T2 USING (ShipMethodID) WHERE T1.Name = 'XRQ - TRUCK GROUND'
works_cycles,What are the sales reasons for order 43718?,order refers to SalesOrderID,SELECT T2.Name FROM SalesOrderHeaderSalesReason AS T1 INNER JOIN SalesReason AS T2 ON T1.SalesReasonID = T2.SalesReasonID WHERE T1.SalesOrderID = 43718
works_cycles,What bike subcategories are there?,bikes is product category,SELECT T1.Name FROM ProductSubcategory AS T1 INNER JOIN ProductCategory AS T2 ON T1.ProductCategoryID = T2.ProductCategoryID WHERE T2.name = 'Bikes'
works_cycles,Which sales areas are expected to have the highest yearly sales quota?,highest yearly sales quota refers to Max(SalesQuota);,SELECT T2.Name FROM SalesPerson AS T1 INNER JOIN SalesTerritory AS T2 ON T1.TerritoryID = T2.TerritoryID GROUP BY T1.TerritoryID ORDER BY SUM(T1.SalesQuota) DESC LIMIT 1
works_cycles,What goods were sold to customers in accordance with sales order number 43660?,goods refers to products,SELECT T1.Name FROM Product AS T1 INNER JOIN SalesOrderDetail AS T2 ON T1.ProductID = T2.ProductID WHERE T2.SalesOrderID = 43660
works_cycles,Please list the top 5 products with the most orders.,most order refers to Max(OrderQty);,"SELECT T1.Name FROM Product AS T1 INNER JOIN SalesOrderDetail AS T2 ON T1.ProductID = T2.ProductID GROUP BY T1.Name ORDER BY SUM(T2.OrderQty) DESC LIMIT 0, 5"
works_cycles,Where are the shelves where the down tube product was stored?,shelves refer to shelf; down tube is a product,SELECT T2.Shelf FROM Product AS T1 INNER JOIN ProductInventory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'Down Tube'
works_cycles,"Which address type does ""Fun Toys and Bikes"" fall under?",Fun Toys and Bikes is name of a store,SELECT T2.Name FROM BusinessEntityAddress AS T1 INNER JOIN AddressType AS T2 ON T1.AddressTypeID = T2.AddressTypeID INNER JOIN Store AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T3.Name = 'Fun Toys and Bikes'
works_cycles,"Who is the ""Next-Door Bike Store"" point of contact?",Next-Door Bike Store is name of a store,SELECT T1.Name FROM ContactType AS T1 INNER JOIN BusinessEntityContact AS T2 ON T1.ContactTypeID = T2.ContactTypeID INNER JOIN Store AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T3.Name = 'Next-Door Bike Store'
works_cycles,"What is the order reference number for the ""Mountain End Caps"" product?",Order Reference Number refers to ReferenceOrderID,SELECT T2.ReferenceOrderID FROM Product AS T1 INNER JOIN TransactionHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'Mountain End Caps'
works_cycles,What is the 12th business's first line address?,12th business refers to BusinessEntityID = 12;,SELECT T1.AddressLine1 FROM Address AS T1 INNER JOIN BusinessEntityAddress AS T2 ON T1.AddressID = T2.AddressID WHERE T2.BusinessEntityID = 12
works_cycles,Please list any three businesses with their IDs that are located in Dallas City.,business with ther ID refers to BusinessEntityID,SELECT T2.BusinessEntityID FROM Address AS T1 INNER JOIN BusinessEntityAddress AS T2 ON T1.AddressID = T2.AddressID WHERE T1.City = 'Dallas' LIMIT 3
works_cycles,What is the name of the state that Racine belongs to?,Racine is a city,SELECT T2.Name FROM Address AS T1 INNER JOIN StateProvince AS T2 ON T1.StateProvinceID = T2.StateProvinceID WHERE T1.City = 'Racine'
works_cycles,What is the difference in percentage between the product descriptions written in Arabic and Thai?,"Arabic and Thai are language names refers to name = 'Arabic'and name = 'Thai'; Differencce in percentage = Subtract(((Count(CultureID(name = 'Arabic'))/Count(CultureID))*100),((Count(CultureID(name = 'Thai'))/Count(CultureID))*100)));",SELECT CAST(SUM(CASE WHEN T1.Name = 'Arabic' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.Name = 'Thai' THEN 1 ELSE 0 END) FROM Culture AS T1 INNER JOIN ProductModelProductDescriptionCulture AS T2 ON T1.CultureID = T2.CultureID
works_cycles,"What percentage of businesses in the Northwest US have forecasted annual sales of above 300,000?","Northwest refers to Name = 'Northwest'; US refers to CountryRegionCode = 'US'; forecasted annual sales of above 300,000 refers to SalesQuota >300000; Percentage = Divide(Count(TerritoryID(SalesQuota >300000)),Count(TerritoryID))*100",SELECT CAST(SUM(CASE WHEN T1.SalesQuota > 300000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.BusinessEntityID) FROM SalesPerson AS T1 INNER JOIN SalesTerritory AS T2 ON T1.TerritoryID = T2.TerritoryID WHERE T2.CountryRegionCode = 'US' AND T2.Name = 'Northwest'
works_cycles,What is the Crankarm product's net profit?,"net profit = Subtract(LastReceiptCost, StandardPrice);",SELECT T2.LastReceiptCost - T2.StandardPrice FROM Product AS T1 INNER JOIN ProductVendor AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name LIKE '%Crankarm%'
works_cycles,What is the name of the product with the almost highest review score?,highest review score refers to Rating = 5;,SELECT T1.Name FROM Product AS T1 INNER JOIN ProductReview AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Rating = ( SELECT Rating FROM ProductReview ORDER BY Rating DESC LIMIT 1 )
works_cycles,What is the company's second highest salary per hour for employees who are paid monthly?,salary received monthly refers to PayFrequency = 1; highest salary per hour refers to Max(Rate);,"SELECT Rate FROM EmployeePayHistory WHERE PayFrequency = 1 ORDER BY Rate DESC LIMIT 1, 1"
works_cycles,How many Vista cards expired before the year 2007?,"Vista Card refers to CardType = 'Vista'; expire before the year 2007 refers to ExpYear< = 2006;

",SELECT COUNT(CreditCardID) FROM CreditCard WHERE CardType = 'Vista' AND ExpYear < 2007
works_cycles,What time does the company's night shift begin? Indicate the answer in regular form.,Night shift refers to Name = 'Night';,SELECT StartTime FROM Shift WHERE Name = 'Night'
works_cycles,"What is the weight in pounds of the style that is produced the most by the company? If there are multiple products sharing the same weight, indicate the name of each one of them and their corresponding weights.",weight in pounds refers to WeightUnitMeasureCode = 'LB';,SELECT Weight FROM Product WHERE WeightUnitMeasureCode = 'LB' GROUP BY Weight ORDER BY COUNT(Style) DESC LIMIT 1
works_cycles,"Which territory has the greatest difference in sales from previous year to this year? Indicate the difference, as well as the name and country of the region.","greatest difference in sales from previous year to this year refers to Max(Subtract(SalesLastYear,SalesYTD));","SELECT SalesLastYear - SalesYTD, Name, CountryRegionCode FROM SalesTerritory ORDER BY SalesLastYear - SalesYTD DESC LIMIT 1"
works_cycles,What are the names of the top 6 products that has the biggest size in centimeter and what are its reorder point?,in centimeter refers to SizeUnitMeasureCode = 'CM';,"SELECT Name, ReorderPoint FROM Product WHERE SizeUnitMeasureCode = 'CM' ORDER BY Size DESC LIMIT 6"
works_cycles,How much is the amount to be paid by the company for the purchase order with the third highest freight amount?,amount to be paid refers to TotalDue;,"SELECT TotalDue FROM PurchaseOrderHeader ORDER BY Freight DESC LIMIT 2, 1"
works_cycles,What profit will the company gain if they sell 10 items of the product that has the lightest weight?,"Lightest product refers to Min(Weight); profit if they sell 10 items refers to Subtract (ListPrice , StandardCost) *10;",SELECT 10 * (ListPrice - StandardCost) FROM Product WHERE Weight IS NOT NULL ORDER BY Weight LIMIT 1
works_cycles,How much is the tax amount of the purchase order with the biggest tax amount? Indicate the purchase order ID.,tax amount refers to TaxAmt; biggest tax amount refers to MAX(TaxAmt);,"SELECT TaxAmt, PurchaseOrderID FROM PurchaseOrderHeader ORDER BY TaxAmt DESC LIMIT 1"
works_cycles,"How many person have a projected yearly sales of no more than 50,000?",projected yearly sales refers to SalesQuota; SalesQuota< = 50000;,SELECT COUNT(BusinessEntityID) FROM SalesPersonQuotaHistory WHERE SalesQuota < 500000
works_cycles,"Among the employees who were born before 1969, what is the work shift of the 6th oldest employee?",oldest employee born before 1969 refers to year(BirthDate)<'1969';,"SELECT T3.StartTime, T3.EndTime FROM Employee AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Shift AS T3 ON T2.ShiftId = T3.ShiftId WHERE STRFTIME('%Y', T1.BirthDate) < '1969' ORDER BY T1.BirthDate LIMIT 5, 1"
works_cycles,Which product allows the company to make the highest profit on a single item among those that are the fastest to manufacture? Indicate the rating of the product if there any.,"profit on a single item = SUBTRACT(ListPrice, StandardCost); length of time to manufacture refers to DaysToManufacture; fastest to manucature refers to MIN(DaysToManufacture);","SELECT T1.Name, T2.Rating FROM Product AS T1 INNER JOIN ProductReview AS T2 ON T1.ProductID = T2.ProductID WHERE T1.DaysToManufacture = ( SELECT DaysToManufacture FROM Product ORDER BY DaysToManufacture LIMIT 1 ) ORDER BY T1.ListPrice - T1.StandardCost DESC LIMIT 1"
works_cycles,"What are the full names of the sales person whose bonuses are less than 1,000?",full name = FirstName+MiddleName+LastName; Bonus<1000;,"SELECT T2.FirstName, T2.MiddleName, T2.LastName FROM SalesPerson AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.Bonus < 1000"
works_cycles,"When did the Senior Tool Designer, who was 33 years old at the time he was hired, stopped working in the Engineering department?","Senior Tool Designer is a JobTitle; 33 years old at the time of hiring refers to SUBTRACT(year(HireDate)), (year(BirthDate)) = 33;","SELECT T2.EndDate FROM Employee AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T1.JobTitle = 'Senior Tool Designer' AND STRFTIME('%Y', T1.HireDate) - STRFTIME('%Y', T1.BirthDate) = 33 AND T2.EndDate IS NOT NULL"
works_cycles,"Among the vendors with an average credit rating, what is the overall total due amount of purchases made by the company to the vendor that isn't preferrerd if another vendor is available?",average credit rating refers to CreditRating = 4;  vendor that isn't preferrerd if another vendor is available refers to PreferredVendorStatus = 0; SUM(TotalDue);,SELECT SUM(T2.TotalDue) FROM Vendor AS T1 INNER JOIN PurchaseOrderHeader AS T2 ON T1.BusinessEntityID = T2.VendorID WHERE T1.CreditRating = 4 AND T1.PreferredVendorStatus = 0
works_cycles,Which department has the most number of night shifts?,most number of night shift = MAX(count(shift.Name = 'Night')),SELECT T3.Name FROM Shift AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.ShiftId = T2.ShiftId INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID GROUP BY T2.DepartmentID ORDER BY COUNT(T1.Name = 'Night') DESC LIMIT 1
works_cycles,How much profit can the company gained from selling two high class black Road Bikes with a size of 58?,"high class refers to Class = 'H""; road bikes is a name of product subcategory; profit = (MULTIPLY(SUBTRACT(ListPrice, StandardCost)), (2)));",SELECT 2 * (T1.ListPrice - T1.StandardCost) FROM Product AS T1 INNER JOIN ProductSubcategory AS T2 ON T1.ProductSubcategoryID = T2.ProductSubcategoryID WHERE T1.Class = 'H' AND T1.Color = 'Black' AND T1.Size = 58 AND T2.Name = 'Road Bikes'
works_cycles,What are the full names of the 10 youngest married male production technicians?,youngest refers to latest BirthDate; married refers to MaritalStatus = 'M'; production technician is a JobTitle; full name = FirstName+MiddleName+LastName;,"SELECT T2.FirstName, T2.MiddleName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle LIKE 'Production Technician%' AND T1.Gender = 'M' AND T1.MaritalStatus = 'M' ORDER BY T1.BirthDate DESC LIMIT 10"
works_cycles,"Among the products with an average lead time of 60, which vendor has the highest profit on net? Indicate the credit rating of such vendor.","profit on net = SUBTRACT(LastReceiptCost, StandardPrice);","SELECT T2.Name, T2.CreditRating FROM ProductVendor AS T1 INNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.AverageLeadTime = 60 ORDER BY T1.LastReceiptCost - T1.StandardPrice DESC LIMIT 1"
works_cycles,What is the profit on net of the products that have exactly 200 maximum order quantity? Indicate the name of the vendors to which these products were purchased from.,"maximum orders refers to MaxOrderQty; MaxOrderQty = 200; profit on net = SUBTRACT(LastReceiptCost, StandardPrice);","SELECT T1.LastReceiptCost - T1.StandardPrice, T2.Name FROM ProductVendor AS T1 INNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.MaxOrderQty = 200"
works_cycles,What is the full name of the non-sales employee who made the most number of rejected purchase orders?,non-sales employee refers to PersonType = 'EM'; rejected purchase order refers to Status = 3;,"SELECT T2.FirstName, T2.LastName FROM PurchaseOrderHeader AS T1 INNER JOIN Person AS T2 ON T1.EmployeeID = T2.BusinessEntityID WHERE T2.PersonType = 'EM' AND T1.Status = 3 GROUP BY T2.FirstName, T2.LastName ORDER BY COUNT(T1.PurchaseOrderID) DESC LIMIT 1"
works_cycles,What are the names of the vendor with the second lowest minimum order quantity?,minimum order quantity refers to MinOrderQty;,"SELECT T2.Name FROM ProductVendor AS T1 INNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID ORDER BY T1.MaxOrderQty ASC LIMIT 1, 1"
works_cycles,How much are the minimum orders of the vendors that are no longer used by the company?,vendors that are no longer used by the company refers to ActiveFlag = 0;,SELECT T2.MinOrderQty FROM Vendor AS T1 INNER JOIN ProductVendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.ActiveFlag = 0 ORDER BY T2.MinOrderQty LIMIT 1
works_cycles,"Of the employees whose vacation hours are no more than 10, what is the age of the oldest employee at the time he/she was hired? Indicate his/her full name.","VacationHours<10; age at the time of being hired = SUBTRACT(year(HireDate), year(BirthDate)); full name = FirstName+MiddleName+LastName;","SELECT STRFTIME('%Y', T1.HireDate) - STRFTIME('%Y', T1.BirthDate), T2.FirstName, T2.MiddleName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.VacationHours <= 10 ORDER BY STRFTIME('%Y', T1.HireDate) - STRFTIME('%Y', T1.BirthDate) DESC LIMIT 1"
works_cycles,What is the primary type of all single female employees hired between 1/1/2008 to 12/31/2008?,"primary type refers to PersonType; single refers to MaritalStatus = 'S""; female refers to Gender = 'F'; HireDate BETWEEN '2010-1-1'AND '2010-12-31';","SELECT T2.PersonType FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.Gender = 'F' AND T1.MaritalStatus = 'S' AND STRFTIME('%Y-%m-%d', T1.HireDate) BETWEEN '2008-1-1' AND '2008-12-31' GROUP BY T2.PersonType ORDER BY COUNT(T2.PersonType) DESC LIMIT 1"
works_cycles,What is the company's profit on the product that was rated second-highest by David?,"profit on net on a single product = SUBTRACT(ListPrice, StandardCost); second highest rating refers to Rating = 4; David is the ReviewerName;",SELECT T2.ListPrice - T2.StandardCost FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ReviewerName = 'David' ORDER BY T1.Rating DESC LIMIT 1
works_cycles,Which geographic area does the city with the second lowest tax rate belongs to? Indicate the name of the state or province as well.,geographic area to which the city belong refers to Group;,"SELECT T3.'Group', T2.Name FROM SalesTaxRate AS T1 INNER JOIN StateProvince AS T2 ON T1.StateProvinceID = T2.StateProvinceID INNER JOIN SalesTerritory AS T3 ON T2.TerritoryID = T3.TerritoryID ORDER BY T1.TaxRate LIMIT 1, 1"
works_cycles,What is the average profit of all the low class universal road frames? Indicate how many variety of sizes are there and the available colors.,"low class refers to Class = 'L'; universal refers to Style = 'U'; road frame is a name of product subcategory; average profit = AVG(SUBTRACT(ListPrice, StandardCost);","SELECT AVG(T1.ListPrice - T1.StandardCost), COUNT(DISTINCT T1.Size) , COUNT(DISTINCT T1.Style) FROM Product AS T1 INNER JOIN ProductSubcategory AS T2 ON T1.ProductSubcategoryID = T2.ProductSubcategoryID WHERE T1.Class = 'L' AND T2.Name = 'Road Frames' GROUP BY T1.Class, T1.Color"
works_cycles,"What is the discount percentage of ""LL Road Frame Sale""?",discount percentage refers to DiscountPct; LL Road Frame Sale is a description of special offer;,SELECT DiscountPct FROM SpecialOffer WHERE Description = 'LL Road Frame Sale'
works_cycles,"How many discount are of the type ""Excess Inventory""?",discount refers to DiscountPct; Excess Inventory is a type of special offer;,SELECT COUNT(SpecialOfferID) FROM SpecialOffer WHERE Type = 'Excess Inventory'
works_cycles,Which seasonal discount had the highest discount percentage?,seasonal discount is a type of special offer; discount percentage refers to DiscountPct; highest discount percentage refers to MAX(DiscountPct);,SELECT Description FROM SpecialOffer WHERE Type = 'Seasonal Discount' ORDER BY DiscountPct DESC LIMIT 1
works_cycles,Please list the top 3 discounts with the highest discount percentage and fall under the reseller category.,discount percentage refers to DiscountPct; highest discount percentage refers to MAX(DiscountPct);,"SELECT Description, DiscountPct FROM SpecialOffer WHERE Category = 'Reseller' ORDER BY DiscountPct DESC LIMIT 0, 3"
works_cycles,Where can I get the demographic information about the Valley Bicycle Specialists store?,Valley Bicycle Specialists is a name of a store;,SELECT Demographics FROM Store WHERE Name = 'Valley Bicycle Specialists'
works_cycles,"Among all the products that are manufactured in-house, how many of them are salable?",product is mnanufactured in-house refers to MakeFlag = 1; salable product refers to FinishedGoodsFlag = 1;,SELECT SUM(FinishedGoodsFlag) FROM Product WHERE MakeFlag = 1
works_cycles,What is the minimum inventory quantity of Chainring Bolts?,minimum inventory quantity refers to SafetyStockLevel; chainring bolts is a name of product;,SELECT SafetyStockLevel FROM Product WHERE Name = 'Chainring Bolts'
works_cycles,Which product has the highest standard cost?,,SELECT Name FROM Product ORDER BY StandardCost DESC LIMIT 1
works_cycles,What type of employee is David Bradley?,type of employee refers to PersonType;,SELECT PersonType FROM Person WHERE FirstName = 'David' AND LastName = 'Bradley'
works_cycles,"Among the employees who are store contacts, how many of them have a title of ""Mr.""?",store contact refers to PersonType = 'SC';,SELECT COUNT(BusinessEntityID) FROM Person WHERE PersonType = 'SC' AND Title = 'Mr.'
works_cycles,Where can I find the Valley Bicycle Specialists store?,Valley Bicycle Specialists is a name of store; full address = AddressLine1+AddressLine2;,"SELECT T2.AddressLine1, T2.AddressLine2 FROM BusinessEntityAddress AS T1 INNER JOIN Address AS T2 ON T1.AddressID = T2.AddressID INNER JOIN Store AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T3.Name = 'Valley Bicycle Specialists'"
works_cycles,To which e-mail address should I write if I want to contact David Bradley?,,SELECT T2.EmailAddress FROM Person AS T1 INNER JOIN EmailAddress AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.FirstName = 'David' AND T1.LastName = 'Bradley'
works_cycles,Please list the phone numbers of all the store contacts.,store contact refers to PersonType = 'SC';,SELECT T2.PhoneNumber FROM Person AS T1 INNER JOIN PersonPhone AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.PersonType = 'SC'
works_cycles,What is the hashed password of David Bradley?,hashed password refers to PasswordHash;,SELECT T2.PasswordHash FROM Person AS T1 INNER JOIN Password AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.FirstName = 'David' AND T1.LastName = 'Bradley'
works_cycles,Please list the e-mail addresses of all the employees who wish to receive e-mail promotions from Adventureworks and selected partners.,employees who wish to receive e-mail promotions from AdventureWorks and selected partners refers to EmailPromotion = 2;,SELECT T2.EmailAddress FROM Person AS T1 INNER JOIN EmailAddress AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.EmailPromotion = 2
works_cycles,Please show the credit card number of David Bradley.,credit card number refers to CardNumber;,SELECT T3.CardNumber FROM Person AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN CreditCard AS T3 ON T2.CreditCardID = T3.CreditCardID WHERE T1.FirstName = 'David' AND T1.LastName = 'Bradley'
works_cycles,In which year will the David Bradley's credit card expire?,year of credit card expiration refers to ExpYear;,SELECT T3.ExpYear FROM Person AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN CreditCard AS T3 ON T2.CreditCardID = T3.CreditCardID WHERE T1.FirstName = 'David' AND T1.LastName = 'Bradley'
works_cycles,Please list the names of all the store contact employees whose credit cards expired in 2007.,year of credit card expiration refers to ExpYear; ExpYear = 2007; store contact refers to PersonType = 'SC';,"SELECT T1.FirstName, T1.LastName FROM Person AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN CreditCard AS T3 ON T2.CreditCardID = T3.CreditCardID WHERE T3.ExpYear = 2007 AND T1.PersonType = 'SC'"
works_cycles,"Among the store contact employees, how many of them have a Vista credit card?",store contact refers to PersonType = 'SC'; type of credit card refers to CardType; CardType = 'vista';,SELECT COUNT(T1.FirstName) FROM Person AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN CreditCard AS T3 ON T2.CreditCardID = T3.CreditCardID WHERE T3.CardType = 'Vista' AND T1.PersonType = 'SC'
works_cycles,How many departments have David Bradley been in?,,SELECT COUNT(T3.DepartmentID) FROM Person AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T1.FirstName = 'David' AND T1.LastName = 'Bradley'
works_cycles,Please list the departments that David Bradley used to belong to.,,SELECT T2.DepartmentID FROM Person AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T1.FirstName = 'David' AND T1.LastName = 'Bradley'
works_cycles,How many people were there in the Engineering Department in the year 2009?,year(EndDate)>2009 and year(StartDate)<2009;,"SELECT COUNT(T1.BusinessEntityID) FROM Person AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T3.Name = 'Engineering' AND STRFTIME('%Y', T2.EndDate) > '2009' AND STRFTIME('%Y', T2.StartDate) < '2009'"
works_cycles,Which employee has been in the Engineering Department the longest? Please give his or her firstname and lastname.,"length of stay in a department = SUBTRACT(EndDate, StartDate);","SELECT T1.FirstName, T1.LastName FROM Person AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T2.DepartmentID = T3.DepartmentID WHERE T3.Name = 'Engineering' ORDER BY T2.EndDate - T2.StartDate DESC LIMIT 1"
works_cycles,"Among the employees in the Manufacturing group in 2007, how many of them are store contacts?",store contact refers to PersonType = 'SC'; year(EndDate)>2007 and year(StartDate)<2007;,"SELECT COUNT(T1.BusinessEntityID) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID INNER JOIN Person AS T3 ON T1.BusinessEntityID WHERE T3.PersonType = 'SC' AND T2.GroupName = 'Manufacturing' AND STRFTIME('%Y', T1.EndDate) >= '2007' AND STRFTIME('%Y', T1.StartDate) <= '2007'"
works_cycles,Please list the credit card numbers of all the employees who have left the Finance Department.,credit card number refers to CardNumber; employees who left the department refers to EndDate NOT null; Engineering Department is a name of department;,SELECT T3.CardNumber FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID INNER JOIN CreditCard AS T3 ON T1.ModifiedDate = T3.ModifiedDate INNER JOIN PersonCreditCard AS T4 ON T3.CreditCardID = T4.CreditCardID WHERE T2.Name = 'Finance' AND T1.EndDate IS NOT NULL
works_cycles,How many employees working in the Engineering Department in 2007 would have their credit cards expired in the same year?,year(StartDate) 2007; year of credit card expiration refers to ExpYear; ExpYear = 2007;,SELECT COUNT(T1.BusinessEntityID) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID INNER JOIN PersonCreditCard AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID INNER JOIN CreditCard AS T4 ON T3.CreditCardID = T4.CreditCardID WHERE T4.ExpYear = 2007 AND T2.Name = 'Engineering'
works_cycles,What is the e-mail address of the employee who switched departments for the most times?,switched department the most refers to MAX(count(DepartmentID));,SELECT T2.EmailAddress FROM EmployeeDepartmentHistory AS T1 INNER JOIN EmailAddress AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID GROUP BY T2.BusinessEntityID ORDER BY COUNT(T1.DepartmentID) DESC LIMIT 1
works_cycles,"Among all the employees who don't wish to receive promotion e-mails, how many of them belong to or once belonged to the Engineering Department?",Employees who don't wish to receive e-mail promotions refers to EmailPromotion = 0;,SELECT COUNT(T1.BusinessEntityID) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Department AS T3 ON T1.DepartmentID = T3.DepartmentID WHERE T3.Name = 'Engineering' AND T2.EmailPromotion = 0
works_cycles,How many employees came into the Quality Assurance Group in the year 2007?,Quality Assurance Group is a group name of department; came in 2007 refers to year(StartDate) = 2007;,"SELECT COUNT(T1.BusinessEntityID) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID WHERE T2.GroupName = 'Quality Assurance' AND STRFTIME('%Y', T1.StartDate) = '2007'"
works_cycles,Please list the product names of all the products on the LL Road Frame Sale.,LL Road Frame Sale is a description of special offer,SELECT T3.Name FROM SpecialOffer AS T1 INNER JOIN SpecialOfferProduct AS T2 ON T1.SpecialOfferID = T2.SpecialOfferID INNER JOIN Product AS T3 ON T2.ProductID = T3.ProductID WHERE T1.Description = 'LL Road Frame Sale'
works_cycles,How many products were on the LL Road Frame Sale?,LL Road Frame Sale is a description of special offer,SELECT COUNT(DISTINCT ProductID) FROM SpecialOffer AS T1 INNER JOIN SpecialOfferProduct AS T2 ON T1.SpecialOfferID = T2.SpecialOfferID WHERE T1.Description = 'LL Road Frame Sale'
works_cycles,Has the product Chainring Bolts been on any of the sales?,a product that's been on sale refers to SellStartDate NOT null and vice versa;,SELECT CASE WHEN COUNT(T1.Description) >= 1 THEN 'Yes' ELSE 'No' END FROM SpecialOffer AS T1 INNER JOIN SpecialOfferProduct AS T2 ON T1.SpecialOfferID = T2.SpecialOfferID INNER JOIN Product AS T3 ON T2.ProductID = T3.ProductID WHERE T3.Name = 'Chainring Bolts'
works_cycles,How many products from the Clothing category were on the LL Road Frame Sale?,LL Road Frame Sale is a description of special offer,SELECT COUNT(T2.ProductID) FROM SpecialOffer AS T1 INNER JOIN SpecialOfferProduct AS T2 ON T1.SpecialOfferID = T2.SpecialOfferID INNER JOIN Product AS T3 ON T2.ProductID = T3.ProductID INNER JOIN ProductSubcategory AS T4 ON T3.ProductSubcategoryID = T4.ProductSubcategoryID INNER JOIN ProductCategory AS T5 ON T4.ProductCategoryID = T5.ProductCategoryID WHERE T1.Description = 'LL Road Frame Sale' AND T4.Name = 'Clothing'
works_cycles,Please list the products that are under the Clothing category that are manufactured in-house and salable.,product is manufactured in-house refers to MakeFlag = 1; salable product refers to FinishedGoodsFlag = 1;,SELECT CASE WHEN T1.MakeFlag = 1 THEN T1.Name END FROM Product AS T1 INNER JOIN ProductSubcategory AS T2 ON T1.ProductSubcategoryID = T2.ProductSubcategoryID INNER JOIN ProductCategory AS T3 ON T2.ProductCategoryID = T3.ProductCategoryID WHERE T2.ProductSubcategoryID = 3
works_cycles,"For all the employees that have left the Engineering Department, what is the average time of their stay?","employees who left a department refers to EndDate NOT null; average stay = AVG(SUBTRACT(year(EndDate)), (year(T1.StartDate)));","SELECT CAST(SUM(365 * (STRFTIME('%Y', T1.EndDate) - STRFTIME('%Y', T1.StartDate)) + 30 * (STRFTIME('%m', T1.EndDate) - STRFTIME('%m', T1.StartDate)) + STRFTIME('%d', T1.EndDate) - STRFTIME('%d', T1.StartDate)) AS REAL) / COUNT(T1.BusinessEntityID) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID WHERE T2.Name = 'Engineering' AND T1.EndDate IS NOT NULL"
works_cycles,What is the average pay rate of the employees who worked in the Engineering Departmentin 2007?,average pay rate = AVG(Rate); work in 2007 refers to year(StartDate)<2007 AND year(EndDate)>2007;,"SELECT AVG(T3.Rate) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID INNER JOIN EmployeePayHistory AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T2.Name = 'Engineering' AND STRFTIME('%Y', EndDate) > '2007' AND STRFTIME('%Y', T1.StartDate) < '2007'"
works_cycles,How much more expensive in percentage is the product with the highest selling price from the product with the lowest selling price in the Clothing category?,selling price refers to ListPrice; highest selling price refers to MAX(ListPrice); lowest selling price refers to MIN(ListPrice);,SELECT (MAX(T1.ListPrice) - MIN(T1.ListPrice)) * 100 / MIN(T1.ListPrice) FROM Product AS T1 INNER JOIN ProductSubcategory AS T2 ON T1.ProductSubcategoryID = T2.ProductSubcategoryID INNER JOIN ProductCategory AS T3 ON T2.ProductCategoryID = T3.ProductCategoryID WHERE T3.Name = 'Clothing'
works_cycles,What is the average profit of all the products from the Clothing category?,"average profit = DIVIDE(SUM(SUBTRACT(ListPrice, StandardCost))), (COUNT(ProductSubcategoryID))));",SELECT SUM(T1.ListPrice - T1.StandardCost) / COUNT(T1.ProductID) FROM Product AS T1 INNER JOIN ProductSubcategory AS T2 ON T1.ProductSubcategoryID = T2.ProductSubcategoryID INNER JOIN ProductCategory AS T3 ON T2.ProductCategoryID = T3.ProductCategoryID WHERE T3.Name = 'Clothing'
works_cycles,Which product cost the least in 2013?,cost refers to StandardCost; cost the least refers to MIN(StandardCost);,SELECT ProductID FROM ProductCostHistory WHERE StartDate LIKE '2013%' ORDER BY StandardCost LIMIT 1
works_cycles,List all products with the color yellow.,,SELECT ProductID FROM Product WHERE Color = 'Yellow'
works_cycles,What is the bussiness id for Mr. Hung-Fu Ting?,business id refers to BusinessEntityID;,SELECT BusinessEntityID FROM Person WHERE Title = 'Mr.' AND FirstName = 'Hung-Fu' AND LastName = 'Ting'
works_cycles,"What is the phone number of the person with id ""12597""?",person with id refers to BusinessEntityID;,SELECT PhoneNumber FROM PersonPhone WHERE BusinessEntityID = 12597
works_cycles,"What is the price for the product with the id ""912""?",price refers to ListPrice;,SELECT ListPrice FROM ProductListPriceHistory WHERE ProductID = 912
works_cycles,Is there a work order where the planned cost is different from the actual cost?,planned cost is different from actual cost refers to ActualCost ! = PlannedCost;,SELECT CASE WHEN ActualCost = PlannedCost THEN 'No' ELSE 'Yes' END FROM WorkOrderRouting
works_cycles,"What is the thumbnail photo file for the product with the id ""979""?",thumbnail photo file refers to ThumbnailPhotoFileName;,SELECT T2.ThumbnailPhotoFileName FROM ProductProductPhoto AS T1 INNER JOIN ProductPhoto AS T2 ON T1.ProductPhotoID = T2.ProductPhotoID WHERE T1.ProductID = 979
works_cycles,List all the names of the products with the price of more than 1000$.,ListPrice>1000;,SELECT DISTINCT T2.Name FROM ProductListPriceHistory AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ListPrice > 1000
works_cycles,What is the product with the most profit?,"profit = SUBTRACT(ListPrice, StandardCost);",SELECT T1.ProductID FROM ProductListPriceHistory AS T1 INNER JOIN ProductCostHistory AS T2 ON T1.ProductID = T2.ProductID ORDER BY T1.ListPrice - T2.StandardCost DESC LIMIT 1
works_cycles,What is the name of the product stored in location 1 compartment L container 6?,compartment refers to Shelf;,SELECT T2.Name FROM ProductInventory AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.LocationID = 1 AND T1.Shelf = 'L' AND T1.Bin = 6
works_cycles,"What are locations of the work order ""35493""?",,SELECT T2.Name FROM WorkOrderRouting AS T1 INNER JOIN Location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.WorkOrderID = 35493
works_cycles,What are the products with a large photo?,product with large photo refers to LargePhoto NOT null;,SELECT T2.ProductID FROM ProductPhoto AS T1 INNER JOIN ProductProductPhoto AS T2 ON T1.ProductPhotoID = T2.ProductPhotoID WHERE T1.LargePhotoFileName LIKE '%large.gif'
works_cycles,List all the socks products.,Socks is a name of product subcategory,SELECT T2.ProductID FROM ProductSubcategory AS T1 INNER JOIN Product AS T2 ON T1.ProductSubcategoryID = T2.ProductSubcategoryID WHERE T1.Name = 'Socks'
works_cycles,"With 100$, how many Cable Lock can you buy?","number of products a $100 can buy = DIVIDE(100, ListPrice);",SELECT 100 / T2.ListPrice FROM Product AS T1 INNER JOIN ProductListPriceHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'Cable Lock'
works_cycles,"What is the scrap reason for work order ""57788""?",,SELECT T2.Name FROM WorkOrder AS T1 INNER JOIN ScrapReason AS T2 ON T1.ScrapReasonID = T2.ScrapReasonID WHERE T1.WorkOrderID = 57788
works_cycles,What is the cost for the sports?,cost refers to StandardCost;,SELECT T2.StandardCost FROM Product AS T1 INNER JOIN ProductCostHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name LIKE '%Sport%'
works_cycles,"How many products with the id ""476"" are stored in Metal Storage?",Metal Storage is name of location,SELECT T2.Quantity FROM Location AS T1 INNER JOIN ProductInventory AS T2 ON T1.LocationID = T2.LocationID WHERE T2.ProductID = 476 AND T1.Name = 'Metal Storage'
works_cycles,List all the products with lower than average cost.,cost refers to StandardCost; lower than average cost = StandardCost<(AVG(StandardCost));,SELECT DISTINCT T2.ProductID FROM ProductCostHistory AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.StandardCost < ( SELECT SUM(StandardCost) / COUNT(ProductID) FROM Product )
works_cycles,"What is the the percentage of profit for the product ""858""?","percentage of profit = DIVIDE(SUBTRACT(ListPrice, StandardCost), (StandardCost)) as percentage;",SELECT (T1.ListPrice - T2.StandardCost) * 100 / T2.StandardCost FROM ProductListPriceHistory AS T1 INNER JOIN ProductCostHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductID = 858
works_cycles,How many products with a thumpnail photo?,products with a thumbnail photo refers to ProductPhotoID ! = 1 ;,SELECT COUNT(ProductID) FROM ProductProductPhoto WHERE ProductPhotoID != 1
works_cycles,"How many days did it take to end the work order ""425""?","days to end a work order = SUBTRACT(ActualEndDate, ActualStartDate);","SELECT 365 * (STRFTIME('%Y', ActualEndDate) - STRFTIME('%Y', ActualStartDate)) + 30 * (STRFTIME('%m', ActualEndDate) - STRFTIME('%m', ActualStartDate)) + STRFTIME('%d', ActualEndDate) - STRFTIME('%d', ActualStartDate) FROM WorkOrderRouting WHERE WorkOrderID = 425"
works_cycles,Which product has the highest price in 2012?,price refers to ListPrice; highest price refers to MAX(ListPrice);,SELECT ProductID FROM ProductListPriceHistory WHERE StartDate LIKE '2012%' ORDER BY ListPrice DESC LIMIT 1
works_cycles,"What is the cost for the product ""847""?",cost refers to StandardCost;,SELECT StandardCost FROM ProductCostHistory WHERE ProductID = 847
works_cycles,What is the organization level for Human Resources Manager?,Human Resources Manager is a job title,SELECT OrganizationLevel FROM Employee WHERE JobTitle = 'Human Resources Manager'
works_cycles,How many of the work orders didn’t meet the due date?,workers who did not meet the due date refers to EndDate>DueDate;,SELECT COUNT(WorkOrderID) FROM WorkOrder WHERE EndDate > DueDate
works_cycles,"What is the cost and the product number of product with the id ""888""?",cost refers to StandardCost;,"SELECT T2.StandardCost, T2.ProductNumber FROM ProductCostHistory AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductID = 888"
works_cycles,"How many products using ""roadster_black_small.gif"" as the thumbnail photo?",products using roadster_black_small.gif as the thumbnail photo refers to ThumbnailPhotoFileName = 'roadster_black_small.gif';,SELECT COUNT(DISTINCT T2.ProductID) FROM ProductPhoto AS T1 INNER JOIN ProductProductPhoto AS T2 ON T1.ProductPhotoID = T2.ProductPhotoID WHERE T1.LargePhotoFileName = 'roadster_black_large.gif'
works_cycles,"List the locations ids, compartments and containers for the Lock Ring",compartment refers to Shelf; container refers to Bin; Lock Ring is a name of product,"SELECT T2.LocationID, T2.Shelf, T2.Bin FROM Product AS T1 INNER JOIN ProductInventory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name LIKE 'Lock Ring'"
works_cycles,What category do Road Frames fall into?,Road Frames is a name of product subcategory,SELECT T2.Name FROM ProductSubcategory AS T1 INNER JOIN ProductCategory AS T2 ON T1.ProductCategoryID = T2.ProductCategoryID WHERE T1.Name = 'Road Frames'
works_cycles,List all the scraped work orders for handling damage reason.,handling damage is descrription of manufacturing failure which refers to ScrapReason.Name,SELECT T2.WorkOrderID FROM ScrapReason AS T1 INNER JOIN WorkOrder AS T2 ON T1.ScrapReasonID = T2.ScrapReasonID WHERE T1.Name = 'Handling damage'
works_cycles,"What is the profit for the product ""792""?","profit = SUBTRACT(ListPrice, StandardCost);",SELECT T1.ListPrice - T2.StandardCost FROM ProductListPriceHistory AS T1 INNER JOIN ProductCostHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductID = 792
works_cycles,"Who owns the email address ""regina7@adventure-works.com""?",,"SELECT T2.FirstName, T2.LastName FROM EmailAddress AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.EmailAddress = 'regina7@adventure-works.com'"
works_cycles,"Where are the locations where the product ""810"" is stored?",,SELECT T2.Name FROM ProductInventory AS T1 INNER JOIN Location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.ProductID = 810
works_cycles,"What is the name of the product the work order ""2540"" was making?",,SELECT T2.Name FROM WorkOrder AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.WorkOrderID = 2540
works_cycles,What is the price for the AWC Logo Cap?,"price refers to ListPrice; price of 3 products = MULTIPLY(ListPrice, 3); Lock Washer 6 is a name of a product;",SELECT T2.ListPrice FROM Product AS T1 INNER JOIN ProductListPriceHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'AWC Logo Cap'
works_cycles,List all the work orders that is related to the Down Tube.,Down Tube is a name of a product;,SELECT T2.WorkOrderID FROM Product AS T1 INNER JOIN WorkOrder AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'Down Tube'
works_cycles,What is the the average percentage of profit for the all the product?,"average profit percentage = DIVIDE(SUBTRACT(ListPrice, StandardCost)), (StandardCost)));",SELECT AVG((T1.ListPrice - T2.StandardCost) * 100 / T2.StandardCost) FROM ProductListPriceHistory AS T1 INNER JOIN ProductCostHistory AS T2 ON T1.ProductID = T2.ProductID
works_cycles,What proportion of work order is in Subassembly?,proportion = DIVIDE(SUM(Name = 'Subassembly'). (COUNT(WorkOrderID)));,SELECT 100.0 * SUM(CASE WHEN T1.Name = 'Subassembly' THEN 1 ELSE 0 END) / COUNT(T2.WorkOrderID) FROM Location AS T1 INNER JOIN WorkOrderRouting AS T2 ON T1.LocationID = T2.LocationID
image_and_language,How many object samples are there in image no.1?,object samples refers to OBJ_SAMPLE_ID; image no.1 refers to IMG_ID = 1,SELECT COUNT(OBJ_SAMPLE_ID) FROM IMG_OBJ WHERE IMG_ID = 1
image_and_language,How many images have over 20 object samples?,over 20 object samples refers to COUNT(OBJ_SAMPLE_ID) > 20,SELECT COUNT(T1.IMG_ID) FROM ( SELECT IMG_ID FROM IMG_OBJ GROUP BY IMG_ID HAVING COUNT(OBJ_SAMPLE_ID) > 20 ) T1
image_and_language,What is the ID of the image with the most number of object samples?,ID of the image refers to IMG_ID; most number of object samples refers to max(count(OBJ_SAMPLE_ID)),SELECT IMG_ID FROM IMG_OBJ GROUP BY IMG_ID ORDER BY COUNT(OBJ_SAMPLE_ID) DESC LIMIT 1
image_and_language,Please list the IDs of the object samples in class no. 297 in image no.1.,IDs of the object samples refers to OBJ_SAMPLE_ID; class no. 297 in image no.1 refers to IMG_ID = 1 and OBJ_CLASS_ID = 297,SELECT OBJ_SAMPLE_ID FROM IMG_OBJ WHERE IMG_ID = 1 AND OBJ_CLASS_ID = 297
image_and_language,How many self-relations are there between the object samples in image no.5?,self-relations refers to OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID; image no.5 refers to IMG_ID = 5,SELECT SUM(CASE WHEN IMG_ID = 5 THEN 1 ELSE 0 END) FROM IMG_REL WHERE OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID
image_and_language,What is the bounding box of the object sample in image no.5 that has a self-relation?,"bounding box of the object sample refers to (x, y, W, H); image no.5 refers to IMG_ID = 5; has a self-relation refers to OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID","SELECT T2.X, T2.Y, T2.W, T2.H FROM IMG_REL AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.IMG_ID = T2.IMG_ID WHERE T1.IMG_ID = 5 AND T1.OBJ1_SAMPLE_ID = T1.OBJ2_SAMPLE_ID"
image_and_language,"How many object samples in image no.1 are in the class of ""man""?","object samples refers to OBJ_CLASS_ID; image no.1 refers to IMG_ID = 1; in the class of ""man"" refers to OBJ_CLASS = 'man'",SELECT SUM(CASE WHEN T1.OBJ_CLASS = 'man' THEN 1 ELSE 0 END) FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.IMG_ID = 1
image_and_language,"How many images have at least one object sample in the class of ""man""?","have at least one object sample in the class of ""man"" refers to count(IMG_ID where OBJ_CLASS = 'man') > = 1",SELECT COUNT(T.IMG_ID) FROM ( SELECT T2.IMG_ID FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.OBJ_CLASS = 'man' GROUP BY T2.IMG_ID ) T
image_and_language,Please list the classes of all the object samples in image no.1.,classes of all the object samples refers to OBJ_CLASS; image no.1 refers to IMG_ID = 1,SELECT T1.OBJ_CLASS FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.IMG_ID = 1 GROUP BY T1.OBJ_CLASS
image_and_language,What is the relation between object sample no.8 and object sample no.4 in image no.1?,relation refers to PRED_CLASS; object sample no.8 and object sample no.4 refers to OBJ1_SAMPLE_ID = 8 AND OBJ2_SAMPLE_ID = 4; image no.1 refers to IMG_ID = 1,SELECT T1.PRED_CLASS FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T2.IMG_ID = 1 AND T2.OBJ1_SAMPLE_ID = 8 AND T2.OBJ2_SAMPLE_ID = 4
image_and_language,"How many pairs of object samples in image no.1 have the relation of ""parked on""?","pairs of object samples refers to OBJ1_SAMPLE_ID and OBJ2_SAMPLE_ID; image no.1 refers to IMG_ID = 1; relation of ""parked on"" refers to PRED_CLASS = 'parked on'",SELECT SUM(CASE WHEN T1.PRED_CLASS = 'parked on' THEN 1 ELSE 0 END) FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T2.IMG_ID = 1 AND T2.OBJ1_SAMPLE_ID != OBJ2_SAMPLE_ID
image_and_language,Please list all the predicted relation classes of object sample no.14 in image no.1.,predicted relation classes refers to PRED_CLASS; object sample no.14 in image no.1 refers to OBJ1_SAMPLE_ID = 14 AND OBJ2_SAMPLE_ID = 14 and IMG_ID = 1,SELECT T1.PRED_CLASS FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T2.OBJ1_SAMPLE_ID = 14 AND T2.OBJ2_SAMPLE_ID = 14
image_and_language,"How many images have at least one pair of object samples with the relation ""parked on""?","How many images have at least one pair of object samples with the relation ""parked on"" refers to count(IMG_ID) where OBJ1_SAMPLE_ID ! = OBJ2_SAMPLE_ID and PRED_CLASS = 'parked on'",SELECT SUM(CASE WHEN T1.PRED_CLASS = 'parked on' THEN 1 ELSE 0 END) FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T2.OBJ1_SAMPLE_ID != T2.OBJ2_SAMPLE_ID
image_and_language,"Please list the IDs of all the images with more than 2 pairs of object samples with the relation ""parked on"".","IDs of all the images refers to IMG_ID; relation ""parked on"" refers to PRED_CLASS = 'parked on'; more than 2 pairs refers to count(IMG_ID) where OBJ1_SAMPLE_ID ! = OBJ2_SAMPLE_ID",SELECT T2.IMG_ID FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T1.PRED_CLASS = 'parked on' AND T2.OBJ1_SAMPLE_ID != T2.OBJ2_SAMPLE_ID GROUP BY T2.IMG_ID HAVING COUNT(T2.IMG_ID) > 2
image_and_language,To which predicted relation class does the self-relation of the object sample in image no.5 belong?,predicted relation class refers to PRED_CLASS; self-relations refers to OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID; image no.5 refers to IMG_ID = 5,SELECT T1.PRED_CLASS FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T2.IMG_ID = 5 AND T2.OBJ1_SAMPLE_ID = T2.OBJ2_SAMPLE_ID
image_and_language,"What are the bounding boxes of the object samples with a predicted relation class of ""by"" in image no.1?","bounding boxes of the object samples refers to (x, y, W, H); predicted relation class of ""by"" refers to PRED_CLASS = 'by'; image no.1 refers to IMG_ID = 1","SELECT T3.X, T3.Y, T3.W, T3.H FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T2.OBJ1_SAMPLE_ID = T3.OBJ_CLASS_ID WHERE T2.IMG_ID = 1 AND T1.PRED_CLASS = 'by'"
image_and_language,"What is the average difference in the y coordinate of 2 object samples with the relation ""parked on"" in image no.1?","relation ""parked on"" refers to PRED_CLASS = 'parked on'; image no.1 refers to IMG_ID = 1; average difference in the y coordinate = divide(sum(Y), count(PRED_CLASS)) where OBJ1_SAMPLE_ID ! = OBJ2_SAMPLE_ID",SELECT CAST(SUM(T3.Y) AS REAL) / COUNT(CASE WHEN T1.PRED_CLASS = 'parked on' THEN 1 ELSE NULL END) FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T2.OBJ1_SAMPLE_ID = T3.OBJ_CLASS_ID WHERE T2.IMG_ID = 1 AND T2.OBJ1_SAMPLE_ID != T2.OBJ2_SAMPLE_ID
image_and_language,"What is the percentage of the object samples in the class of ""man"" in image no.1?","object samples refers to OBJ_SAMPLE_ID; class of ""man"" refers to OBJ_CLASS = 'man'; image no.1 refers to IMG_ID = 1; percentage = divide(count(OBJ_SAMPLE_ID)when OBJ_CLASS = 'man', count(OBJ_SAMPLE_ID)) as percentage",SELECT CAST(COUNT(CASE WHEN T1.OBJ_CLASS = 'man' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.OBJ_CLASS_ID) FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.IMG_ID = 1
image_and_language,State the total number of the attribute classes.,attribute classes refers to ATT_CLASS,SELECT COUNT(ATT_CLASS_ID) FROM ATT_CLASSES
image_and_language,How many object classes are there in the database?,object classes refers to OBJ_CLASS,SELECT COUNT(OBJ_CLASS_ID) FROM OBJ_CLASSES
image_and_language,Provide the number of predicted classes.,predicted classes refers to PRED_CLASS,SELECT COUNT(PRED_CLASS_ID) FROM PRED_CLASSES
image_and_language,Give the bounding box of the kite in image no.2324765.,"bounding box refers to (x, y, W, H); kite refers to OBJ_CLASS = 'kite'; image no.2324765 refers to IMG_ID = 2324765","SELECT T2.X, T2.Y, T2.W, T2.H FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.IMG_ID = 2324765 AND T1.OBJ_CLASS = 'kite'"
image_and_language,How many white objects are there in image no.2347915?,white objects refers to ATT_CLASS = 'white'; image no.2347915 refers to IMG_ID = 2347915,SELECT SUM(CASE WHEN T2.ATT_CLASS = 'white' THEN 1 ELSE 0 END) FROM IMG_OBJ_ATT AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.IMG_ID = 2347915
image_and_language,Give the number of samples in image no.2377985 whose attribute is electrical.,number of samples refers to OBJ_SAMPLE_ID; image no.2377985 refers to IMG_ID = 2377985; attribute is electrical refers to ATT_CLASS = 'electrical',SELECT SUM(CASE WHEN T2.ATT_CLASS = 'white' THEN 1 ELSE 0 END) FROM IMG_OBJ_ATT AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.IMG_ID = 2347915
image_and_language,What is the relationship between object sample no.12 and no.8 of image no.2345511?,relationship refers to PRED_CLASS; object sample no.12 and no.8 of image no.2345511 refers to IMG_ID = 2345511 AND OBJ1_SAMPLE_ID = 12 AND OBJ2_SAMPLE_ID = 8,SELECT T1.PRED_CLASS FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T2.IMG_ID = 2345511 AND T2.OBJ1_SAMPLE_ID = 12 AND T2.OBJ2_SAMPLE_ID = 8
image_and_language,"Give the object number of the sample which has the relationship of ""lying on"" with object sample no.1 from image no.2345524.",object number of the sample refers to OBJ1_SAMPLE_ID; object sample no.1 from image no.2345524 refers to OBJ2_SAMPLE_ID = 1 and IMG_ID = 2345524,SELECT T2.OBJ1_SAMPLE_ID FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T2.IMG_ID = 2345524 AND T1.PRED_CLASS = 'lying on' AND T2.OBJ2_SAMPLE_ID = 1
image_and_language,How many samples of food object are there in image no.6?,samples of food object refers to OBJ_CLASS = 'food'; image no.6 refers to IMG_ID = 6,SELECT COUNT(T2.OBJ_SAMPLE_ID) FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.IMG_ID = 6 AND T1.OBJ_CLASS = 'food'
image_and_language,"Give the number of images containing the object sample of ""suit"".","number of images refers to IMG_ID; object sample of ""suit"" refers to OBJ_CLASS = 'suit'",SELECT COUNT(T.IMG_ID) FROM ( SELECT T2.IMG_ID FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.OBJ_CLASS = 'suit' GROUP BY T2.IMG_ID ) T
image_and_language,"What is the relationship between ""feathers"" and ""onion"" in image no.2345528?","relationship refers to PRED_CLASS; ""feathers"" and ""onion"" in image no.2345528 refers to IMG_ID = 2345528 and OBJ_CLASS = 'feathers' and OBJ_CLASS = 'onion'",SELECT T1.PRED_CLASS FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T2.OBJ1_SAMPLE_ID = T3.OBJ_SAMPLE_ID INNER JOIN OBJ_CLASSES AS T4 ON T3.OBJ_CLASS_ID = T4.OBJ_CLASS_ID WHERE (T4.OBJ_CLASS = 'feathers' OR T4.OBJ_CLASS = 'onion') AND T2.IMG_ID = 2345528 GROUP BY T1.PRED_CLASS
image_and_language,Tell the attribute of the weeds in image no.2377988.,attribute of the weeds refers to OBJ_CLASS = 'weeds'; image no.2377988 refers to IMG_ID = 2377988,SELECT T2.ATT_CLASS FROM IMG_OBJ_att AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T1.IMG_ID = T3.IMG_ID INNER JOIN OBJ_CLASSES AS T4 ON T3.OBJ_CLASS_ID = T4.OBJ_CLASS_ID WHERE T4.OBJ_CLASS = 'weeds' AND T1.IMG_ID = 2377988
image_and_language,What is the object whose attribute is blurry in image no.2377993? Give the explanation about the object.,attribute is blurry refers to ATT_CLASS = 'blurry'; image no.2377993 refers to IMG_ID = 22377993; explanation about the object refers to OBJ_CLASS,"SELECT T4.OBJ_CLASS_ID, T4.OBJ_CLASS FROM IMG_OBJ_att AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T1.IMG_ID = T3.IMG_ID INNER JOIN OBJ_CLASSES AS T4 ON T3.OBJ_CLASS_ID = T4.OBJ_CLASS_ID WHERE T2.ATT_CLASS = 'blurry' AND T1.IMG_ID = 22377993"
image_and_language,"How many samples of ""wall"" are there in image no.2353079?","samples of ""wall"" refers to OBJ_SAMPLE_ID and OBJ_CLASS = 'wall' ; image no.2353079 refers to IMG_ID = 2353079",SELECT SUM(CASE WHEN T1.OBJ_CLASS = 'wall' THEN 1 ELSE 0 END) FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.IMG_ID = 2353079
image_and_language,State the object class of sample no.10 of image no.2320341.,object class refers to OBJ_CLASS; sample no.10 refers to OBJ_SAMPLE_ID = 10; image no.2320341 refers to IMG_ID = 2320341,SELECT T1.OBJ_CLASS FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.IMG_ID = 2320341 AND T2.OBJ_SAMPLE_ID = 10
image_and_language,"How many times is the number of images containing ""broccoli"" than ""tomato""?","images refers to IMG_ID; ""broccoli"" refers to OBJ_CLASS = 'broccoli'; ""tomato"" refers to OBJ_CLASS = 'tomato' ; How many times = divide(count(OBJ_SAMPLE_ID) when OBJ_CLASS = 'broccoli', count(OBJ_SAMPLE_ID) when OBJ_CLASS = 'tomato')",SELECT CAST(COUNT(CASE WHEN T1.OBJ_CLASS = 'broccoli' THEN T2.OBJ_SAMPLE_ID ELSE NULL END) AS REAL) / COUNT(CASE WHEN T1.OBJ_CLASS = 'tomato' THEN T2.OBJ_SAMPLE_ID ELSE NULL END) times FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID
image_and_language,How many images have at least 25 attributes?,images refers to IMG_ID; have at least 25 attributes refers to count(ATT_CLASS_ID) > = 25,SELECT COUNT(*) FROM ( SELECT IMG_ID FROM IMG_OBJ_att GROUP BY IMG_ID HAVING COUNT(ATT_CLASS_ID) > 25 ) T1
image_and_language,List all the ids of the images that have a self-relation relationship.,ids of the images refers to IMG_ID; self-relations refers to OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID,SELECT DISTINCT IMG_ID FROM IMG_REL WHERE OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID
image_and_language,How many objects are there in the attribute class id with the highest number of objects?,objects refers to OBJ_SAMPLE_ID; attribute class id with the highest number of objects refers to max(COUNT(ATT_CLASS_ID)),SELECT COUNT(ATT_CLASS_ID) FROM IMG_OBJ_att GROUP BY IMG_ID ORDER BY COUNT(ATT_CLASS_ID) DESC LIMIT 1
image_and_language,What are the id of all the objects belonging to the transportation class?,"id of all the objects belonging to the transportation class refers to OBJ_CLASS_ID and OBJ_CLASS IN ('bus', 'train', 'aeroplane', 'car', 'etc.')","SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS IN ('bus', 'train', 'aeroplane', 'car', 'etc')"
image_and_language,"What are the corresponding classes for the ""very large bike"" attribute?",attribute refers to ATT_CLASS,SELECT ATT_CLASS_ID FROM ATT_CLASSES WHERE ATT_CLASS = 'very large'
image_and_language,What is the unique id number identifying the onion object class?,unique id number identifying refers to OBJ_CLASS_ID; onion object class refers to OBJ_CLASS = 'onion',SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'onion'
image_and_language,List all the corresponding classes for attributes of image id 8.,classes for attributes refers to ATT_CLASS; image id 8 refers to IMG_ID = 8,SELECT T2.ATT_CLASS FROM IMG_OBJ_att AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.IMG_ID = 8
image_and_language,What is the bounding box of the object with image id 4 and a prediction relationship class id of 144?,"bounding box of the object refers to (x, y, W, H); image id refers to IMG_ID; prediction relationship class id of 144 refers to PRED_CLASS_ID = 144","SELECT T2.X, T2.Y, T2.W, T2.H FROM IMG_REL AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.IMG_ID = T2.IMG_ID WHERE T1.PRED_CLASS_ID = 144 AND T1.IMG_ID = 3"
image_and_language,"How many images have at least 5 ""black"" classes?","images refers to IMG_ID; have at least 5 ""black"" classes refers to count(ATT_CLASS_ID) where ATT_CLASS = 'black' > = 5",SELECT COUNT(IMGID) FROM ( SELECT T1.IMG_ID AS IMGID FROM IMG_OBJ_att AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T2.ATT_CLASS = 'black' GROUP BY T1.IMG_ID HAVING COUNT(T1.ATT_CLASS_ID) >= 5 ) T3
image_and_language,What is the prediction relationship class id of the tallest image?,prediction relationship class id refers to PRED_CLASS_ID; tallest image refers to max(H),SELECT T1.PRED_CLASS_ID FROM IMG_REL AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.IMG_ID = T2.IMG_ID ORDER BY T2.H DESC LIMIT 1
image_and_language,"Which image has the highest number of ""white"" class attributes?","""white"" class attributes refers to ATT_CLASS = 'white'; highest number refers to max(count(ATT_CLASS_ID))",SELECT T1.IMG_ID AS IMGID FROM IMG_OBJ_att AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T2.ATT_CLASS = 'white' GROUP BY T1.IMG_ID ORDER BY COUNT(T1.ATT_CLASS_ID) DESC LIMIT 1
image_and_language,What are the x and y coordinates of all the images with a prediction relationship class id of 98?,prediction relationship class id of 98 refers to PRED_CLASS_ID = 98,"SELECT T2.X, T2.Y FROM IMG_REL AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.IMG_ID = T2.IMG_ID WHERE T1.PRED_CLASS_ID = 98"
image_and_language,"How many prediction classes with ""has"" captions are there for image id 3050?","prediction classes with ""has"" captions refers to PRED_CLASS = 'has'; image id 3050 refers to IMG_ID = 3050",SELECT COUNT(T2.PRED_CLASS_ID) FROM IMG_REL AS T1 INNER JOIN PRED_CLASSES AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T1.IMG_ID = 3050 AND T2.PRED_CLASS = 'has'
image_and_language,List all the explanations about object classes of all the images with an x and y coordinate of 0.,explanations about distinct object classes refers to OBJ_CLASS; images refers to IMG_ID; x and y coordinate of 0 refers to X = 0 AND Y = 0,SELECT T1.OBJ_CLASS FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.X = 0 AND T2.Y = 0 GROUP BY T1.OBJ_CLASS
image_and_language,What are the captions of all the self-relation relationship prediction classes?,self-relation relationship refers to OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID and PRED_CLASS; captions of prediction classes refers to PRED_CLASS,SELECT T2.PRED_CLASS FROM IMG_REL AS T1 INNER JOIN pred_classes AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T1.OBJ1_SAMPLE_ID = T1.OBJ2_SAMPLE_ID GROUP BY T2.PRED_CLASS
image_and_language,Give all the bounding boxes for image 2222 whose object classes are feathers.,"bounding boxes refers to (x, y, W, H); image 2222 refers to IMG_ID = 2222; object classes are feathers refers to OBJ_CLASS = 'feathers'","SELECT T2.X, T2.Y, T2.H, T2.W FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.IMG_ID = 2222 AND T1.OBJ_CLASS = 'feathers'"
image_and_language,"Among the objects that have multiple relations, how many images whose captions for the prediction class ids are ""on""?","objects that have multiple relations refers to OBJ1_SAMPLE_ID ! = OBJ2_SAMPLE_ID; captions for the prediction class ids are ""on"" refers to PRED_CLASS = 'on'",SELECT COUNT(T2.PRED_CLASS_ID) FROM IMG_REL AS T1 INNER JOIN PRED_CLASSES AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T1.OBJ1_SAMPLE_ID != T1.OBJ2_SAMPLE_ID AND T2.PRED_CLASS = 'on'
image_and_language,"What is the object class of the image with a bounding box of 0, 0, 135, 212?","object class of the image refers to OBJ_CLASS; bounding box of 0, 0, 135, 212 refers to X = 0 AND Y = 0 AND W = 135 AND H = 212",SELECT T1.OBJ_CLASS FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.X = 0 AND T2.Y = 0 AND T2.W = 135 AND T2.H = 212
image_and_language,Provide the dimensions of the bounding box that contains the keyboard that was spotted in image no. 3.,"dimensions of the bounding box refers to (W, H); keyboard refers to OBJ_CLASS = 'keyboard'; image no. 3 refers to IMG_ID = 3","SELECT T1.W, T1.H FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 3 AND T2.OBJ_CLASS = 'keyboard'"
image_and_language,Identify the border's coordinates on the X and Y axes that enclose a folk in image no. 6.,coordinates on the X and Y axes refers to X and Y; folk refers to OBJ_CLASS = 'folk'; image no. 6 refers to IMG_ID = 6,"SELECT T1.X, T1.Y FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 6 AND T2.OBJ_CLASS = 'folk'"
image_and_language,Define the onion's bounding box on image no. 285930.,"bounding box refers to (X, Y, W, H); onion refers to OBJ_CLASS = 'onion'; image no.285930 refers to IMG_ID = 285930","SELECT T1.X, T1.Y, T1.W, T1.H FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 285930 AND T2.OBJ_CLASS = 'onion'"
image_and_language,"How many objects can you spot in image no. 72? What objects may be identified on the same image and within the bounding box represented as (341, 27, 42, 51)?","How many objects refers to OBJ_CLASS_ID; image no. 72 refers to IMG_ID = 72; What objects refers to OBJ_CLASS; bounding box represented as (341, 27, 42, 51) refers to X = 341 and Y = 27 and W = 42 and H = 51","SELECT SUM(IIF(T1.IMG_ID = 1, 1, 0)), SUM(IIF(T1.X = 341 AND T1.Y = 27 AND T1.W = 42 AND T1.H = 51, 1, 0)) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID"
image_and_language,"On image no. 5, name the attributes that are composed of multiple objects.",image no. 5 refers to IMG_ID = 5; name the attributes refers to ATT_CLASS; multiple objects refers to count(ATT_CLASS) > = 2,SELECT T2.ATT_CLASS FROM IMG_OBJ_ATT AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.IMG_ID = 5 GROUP BY T2.ATT_CLASS HAVING COUNT(T2.ATT_CLASS) > 2
image_and_language,What attributes are used to describe the wall on image no. 27.,What attributes refers to ATT_CLASS; wall on image no. 27 refers to OBJ_CLASS = 'wall' and IMG_ID = 27,SELECT T4.ATT_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID INNER JOIN IMG_OBJ_ATT AS T3 ON T1.IMG_ID = T3.IMG_ID INNER JOIN ATT_CLASSES AS T4 ON T3.ATT_CLASS_ID = T4.ATT_CLASS_ID WHERE T2.OBJ_CLASS = 'wall' AND T1.IMG_ID = 27 GROUP BY T4.ATT_CLASS
image_and_language,Name the object element that is described as being scattered on image no. 10.,Name the object element refers to OBJ_CLASS; scattered refers to ATT_CLASS = 'scattered'; image no. 10 refers to IMG_ID = 10,SELECT T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID INNER JOIN IMG_OBJ_ATT AS T3 ON T1.IMG_ID = T3.IMG_ID INNER JOIN ATT_CLASSES AS T4 ON T3.ATT_CLASS_ID = T4.ATT_CLASS_ID WHERE T4.ATT_CLASS = 'scattered' AND T1.IMG_ID = 10 GROUP BY T2.OBJ_CLASS
image_and_language,How many images contain 'bridge' as an object element?,images refers to IMG_ID; 'bridge' as an object element refers to OBJ_CLASS = 'bridge',SELECT COUNT(DISTINCT T1.IMG_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'bridge'
image_and_language,How many object elements are there on average in each image?,"object elements refers to OBJ_CLASS_ID; average = divide(count(OBJ_CLASS_ID), count(IMG_ID))",SELECT CAST(COUNT(OBJ_CLASS_ID) AS REAL) / COUNT(DISTINCT IMG_ID) FROM IMG_OBJ
image_and_language,What colour is the van that can be spotted in image no. 1?,colour refers to ATT_CLASS; van refers to OBJ_CLASS = 'van'; image no. 1 refers to IMG_ID = 1,SELECT T4.ATT_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID INNER JOIN IMG_OBJ_ATT AS T3 ON T1.IMG_ID = T3.IMG_ID INNER JOIN ATT_CLASSES AS T4 ON T3.ATT_CLASS_ID = T4.ATT_CLASS_ID WHERE T2.OBJ_CLASS = 'van' AND T1.IMG_ID = 1 GROUP BY T4.ATT_CLASS
image_and_language,"Describe the objects, their attributes, and the relationships that comprise the scene on image no. 1 within the bounding box, represented as (388, 369, 48, 128).","objects refers to OBJ_CLASS; attributes refers to ATT_CLASS; relationships refers to PRED_CLASS; image no. 1 refers to IMG_ID = 1; bounding box, represented as (388, 369, 48, 128) refers to X = 388 and Y = 369 and W = 48 and H = 128","SELECT DISTINCT T2.OBJ_CLASS, T4.ATT_CLASS, T6.PRED_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID INNER JOIN IMG_OBJ_ATT AS T3 ON T1.IMG_ID = T3.IMG_ID INNER JOIN ATT_CLASSES AS T4 ON T3.ATT_CLASS_ID = T4.ATT_CLASS_ID INNER JOIN IMG_REL AS T5 ON T1.IMG_ID = T5.IMG_ID INNER JOIN PRED_CLASSES AS T6 ON T5.PRED_CLASS_ID = T6.PRED_CLASS_ID WHERE T1.IMG_ID = 1 AND T1.X = 388 AND T1.Y = 369 AND T1.W = 48 AND T1.H = 128"
image_and_language,What is the relationship between object sample no. 25 and object sample no. 2 on image no. 1?,relationship refers to PRED_CLASS; object sample no. 25 and object sample no. 2 refers to OBJ1_SAMPLE_ID = 25 and OBJ2_SAMPLE_ID = 2; image no. 1 refers to IMG_ID = 1,SELECT T2.PRED_CLASS FROM IMG_REL AS T1 INNER JOIN PRED_CLASSES AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T1.IMG_ID = 1 AND T1.OBJ1_SAMPLE_ID = 25 AND T1.OBJ2_SAMPLE_ID = 2
image_and_language,How many attributes are related to the object sample no. 7 on image no. 4?,How many attributes refers to ATT_CLASS_ID; object sample no. 7 on image no. 4 refers to IMG_ID = 4 and OBJ_SAMPLE_ID = 7,SELECT COUNT(ATT_CLASS_ID) FROM IMG_OBJ_ATT WHERE IMG_ID = 4 AND OBJ_SAMPLE_ID = 7
image_and_language,How many object elements can be detected on image no. 31?,How many object elements refers to OBJ_CLASS_ID; image no. 31 refers to IMG_ID = 31,SELECT COUNT(OBJ_CLASS_ID) FROM IMG_OBJ WHERE IMG_ID = 31
image_and_language,"On image no. 20, identify the attribute ID that is composed of the highest number of objects.",image no. 20 refers to IMG_ID = 20; attribute ID refers to ATT_CLASS_ID; highest number of objects refers to max(count(ATT_CLASS_ID)),SELECT ATT_CLASS_ID FROM IMG_OBJ_ATT WHERE IMG_ID = 20 GROUP BY ATT_CLASS_ID ORDER BY COUNT(ATT_CLASS_ID) DESC LIMIT 1
image_and_language,Define the bounding box of the object sample no. 7 on image no. 42.,"bounding box of the object refers to (X, Y, W, H); sample no.7 on image no.42 refers to IMG_ID = 42 and OBJ_SAMPLE_ID = 7","SELECT X, Y, W, H FROM IMG_OBJ WHERE IMG_ID = 42 AND OBJ_SAMPLE_ID = 7"
image_and_language,On image no. 99 identify the percentage of objects that are described as white.,"image no. 99 refers to IMG_ID = 99; described as white refers to ATT_CLASS = 'white'; percentage = divide(count(OBJ_SAMPLE_ID) where ATT_CLASS = 'white', count(OBJ_SAMPLE_ID)) as percentage",SELECT CAST(SUM(CASE WHEN T2.ATT_CLASS = 'white' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(OBJ_SAMPLE_ID) FROM IMG_OBJ_ATT AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.IMG_ID = 99
image_and_language,How many attribute classes are there for image id 5?,attribute classes refer to ATT_CLASS_ID; image id 5 refers to IMG_ID = 5;,SELECT COUNT(ATT_CLASS_ID) FROM IMG_OBJ_ATT WHERE IMG_ID = 5
image_and_language,State the explanation about object class 10.,explanation about object class 10 refers to OBJ_CLASS where OBJ_CLASS_ID = 10;,SELECT OBJ_CLASS FROM OBJ_CLASSES WHERE OBJ_CLASS_ID = 10
image_and_language,"Name the object class of the image with a bounding (422, 63, 77, 363).","image with a bounding (422, 63, 77, 363) refers to OBJ_CLASS_ID where X = 422 and Y = 63 and W = 77 and H = 363;",SELECT T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.X = 422 AND T1.Y = 63 AND T1.W = 77 AND T1.H = 363
image_and_language,What is the caption for the prediction class id 12?,caption for the prediction class id 12 refers to PRED_CLASS where PRED_CLASS_ID = 12;,SELECT PRED_CLASS FROM PRED_CLASSES WHERE PRED_CLASS_ID = 12
image_and_language,Indicate the bounding box of the image 8.,"bounding box refers to X, Y, W, H from IMG_OBJ; image 8 refers to IMG_ID = 8;","SELECT X, Y, W, H FROM IMG_OBJ WHERE IMG_ID = 8"
image_and_language,How many object samples in image no.908 are in the class of tip?,"object samples in the class of ""tip"" refer to OBJ_CLASS_ID where OBJ_CLASS = 'tip'; image no.5 refers to IMG_ID = 5;",SELECT SUM(CASE WHEN T2.OBJ_CLASS = 'tip' THEN 1 ELSE 0 END) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 908
image_and_language,"List out the number of object samples in image no.41 which are in the class of ""kitchen""?","object samples in the class of ""kitchen"" refer to OBJ_CLASS_ID where OBJ_CLASS = 'kitchen'; image no.41 refers to IMG_ID = 41 ;",SELECT SUM(CASE WHEN T2.OBJ_CLASS = 'kitchen' THEN 1 ELSE 0 END) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 41
image_and_language,"Count the image numbers that contain the ""paint"" object.","image numbers that contain the ""paint"" object refer to IMG_ID where OBJ_CLASS = 'paint';",SELECT COUNT(DISTINCT T1.IMG_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'paint'
image_and_language,How many samples of clouds are there in the image no.2315533?,samples of clouds refer to IMG_ID where OBJ_CLASS = 'cloud'; image no.2315533 refers to IMG_ID = 2315533;,SELECT SUM(CASE WHEN T1.IMG_ID = 2315533 THEN 1 ELSE 0 END) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'clouds'
image_and_language,Which object classes belong to the onion category?,onion category refers to OBJ_CLASS = 'onion';,SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'onion'
image_and_language,"What is the bounding box of ""spoon"" in image id 1344?","the bounding box refers to X, Y, W, H from IMG_OBJ; image id 1344 refers to IMG_ID = 1344; ""spoon"" refers to OBJ_CLASS = 'spoon';","SELECT T1.X, T1.Y, T1.W, T1.H FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 1344 AND T2.OBJ_CLASS = 'spoon'"
image_and_language,"What is the percentage of ""surface"" object samples in image No.2654?","DIVIDE(SUM(OBJ_CLASS_ID where OBJ_CLASS = 'surface'), COUNT(OBJ_CLASS_ID)) as percentage where IMG_ID = 2654;",SELECT CAST(SUM(CASE WHEN T2.OBJ_CLASS = 'surface' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.OBJ_CLASS_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 2654
image_and_language,"How many images include the ""wood"" objects?","images refer to IMG_ID; ""wood"" objects refer to OBJ_CLASS = 'wood';",SELECT COUNT(DISTINCT T1.IMG_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'wood'
image_and_language,State the object class of the image with tallest bounding box.,"bounding box refers to X, Y, W, H from IMG_OBJ; tallest relates to the height of the bounding box which refers to MAX(H); object class refers to OBJ_CLASS;",SELECT T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID ORDER BY T1.H DESC LIMIT 1
image_and_language,"Calculate the percentage of ""airplane"" object class in the table.","DIVIDE(SUM(OBJ_SAMPLE_ID where OBJ_CLASS = 'airplane'), COUNT(OBJ_CLASS)) as percentage;",SELECT CAST(SUM(CASE WHEN T2.OBJ_CLASS = 'airplane' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.OBJ_CLASS) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID
image_and_language,How many samples of animal objects are there in image no.660?,samples of animal objects refer to OBJ_SAMPLE_ID where OBJ_CLASS = 'animal'; image no.660 refers to IMG_ID = 660;,SELECT COUNT(T1.IMG_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'animal' AND T1.IMG_ID = 660
image_and_language,"Name number of samples of ""bed"" object are there in the image No.1098?","samples of ""bed"" object refer to OBJ_SAMPLE_ID where OBJ_CLASS = 'bed'; image No.1098 refers to IMG_ID = 1098;",SELECT SUM(CASE WHEN T2.OBJ_CLASS = 'bed' THEN 1 ELSE 0 END) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 1098
image_and_language,Name the object class of the image with lowest bounding box.,"bounding box refers to X, Y, W, H from IMG_OBJ; lowest relates to the height of the bounding box which refers to MIN(H);",SELECT T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID ORDER BY T1.H LIMIT 1
image_and_language,"Indicating the bounding box of ""kitchen"" in image id 250.","bounding box refers to X, Y, W, H from IMG_OBJ; ""kitchen"" in image id 250 refers to OBJ_CLASS = 'kitchen' where IMG_ID = 250;","SELECT T1.X, T1.Y, T1.W, T1.H FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 250 AND T2.OBJ_CLASS = 'kitchen'"
image_and_language,Which images have more than 20 object samples?,images have more than 20 object samples refer to IMG_ID where COUNT(OBJ_SAMPLE_ID) > 20;,SELECT IMG_ID FROM IMG_OBJ GROUP BY IMG_ID HAVING COUNT(IMG_ID) > 20
image_and_language,Which object in image 8 is the widest? State its object sample ID.,"widest relates to the width of the bounding
box of the object which refers to MAX(W); object in image 8 refers to OBJ_SAMPLE_ID where IMG_ID = 8;",SELECT OBJ_SAMPLE_ID FROM IMG_OBJ WHERE IMG_ID = 8 ORDER BY W DESC LIMIT 1
image_and_language,"Find the object in image 5 where the object with the coordinate of (634, 468).","object in image 5 refers to OBJ_SAMPLE_ID where IMG_ID = 5; coordinates of (634, 468) refer to X and Y coordinates of the bounding box in which X = 634 and Y = 468;",SELECT OBJ_SAMPLE_ID FROM IMG_OBJ WHERE IMG_ID = 5 AND X = 634 AND Y = 468
image_and_language,Which object has the highest attribute classes?,object has the highest attribute classes refers to OBJ_SAMPLE_ID where MAX(COUNT(OBJ_SAMPLE_ID));,SELECT OBJ_SAMPLE_ID FROM IMG_OBJ_ATT GROUP BY OBJ_SAMPLE_ID ORDER BY COUNT(OBJ_SAMPLE_ID) DESC LIMIT 1
image_and_language,What is the ratio between the number of object samples in image 1 and the number of object samples in image 6?,"DIVIDE(SUM(OBJ_SAMPLE_ID where IMG_ID = 1), SUM(OBJ_SAMPLE_ID where IMG_ID = 6));",SELECT CAST(SUM(CASE WHEN IMG_ID = 1 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN IMG_ID = 6 THEN 1 ELSE 0 END) FROM IMG_OBJ
image_and_language,Calculate the average of object samples for the image.,"DIVIDE(COUNT(OBJ_SAMPLE_ID), COUNT(IMG_ID));",SELECT CAST(COUNT(OBJ_SAMPLE_ID) AS REAL) / COUNT(DISTINCT IMG_ID) FROM IMG_OBJ
image_and_language,List all the IDs of images that have objects with the attributes of 'wired'.,IDs of images refer to IMG_ID; objects with the attributes of 'wired' refer to ATT_CLASS = 'wired';,SELECT DISTINCT T2.IMG_ID FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.ATT_CLASS = 'wired'
image_and_language,List all the object classes in image 10.,object classes refer to OBJ_CLASS; image 10 refers to IMG_ID = 10;,SELECT DISTINCT T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 10
image_and_language,List attributes for object class 'tip' In image 1314.,attributes for object refer to ATT_CLASS; class 'tip' in image 1314 refers to OBJ_CLASS = 'tip' where IMG_ID = 1314;,SELECT T1.ATT_CLASS FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T2.IMG_ID = T3.IMG_ID INNER JOIN OBJ_CLASSES AS T4 ON T3.OBJ_CLASS_ID = T4.OBJ_CLASS_ID WHERE T3.IMG_ID = 1314 AND T4.OBJ_CLASS = 'tip'
image_and_language,What is the prediction class between object class 'chain' and 'label' in image 2360078?,prediction class refers to PRED_CLASS; object class 'chain' refers to OBJ_CLASS = 'chain'; object class 'label' refers to OBJ_CLASS = 'label'; image 2360078 refers to IMG_ID = 2360078;,SELECT DISTINCT T2.PRED_CLASS FROM IMG_REL AS T1 INNER JOIN PRED_CLASSES AS T2 ON T2.PRED_CLASS_ID = T1.PRED_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T1.IMG_ID = T3.IMG_ID AND T1.OBJ1_SAMPLE_ID = T3.OBJ_SAMPLE_ID INNER JOIN OBJ_CLASSES AS T4 ON T3.OBJ_CLASS_ID = T4.OBJ_CLASS_ID WHERE T1.IMG_ID = 2360078 AND T1.OBJ1_SAMPLE_ID = 15 OR T1.OBJ2_SAMPLE_ID = 18
image_and_language,How many images have objects with the attributes of polka dot?,attributes of polka dot refer to ATT_CLASS = 'polka dot'; images refer to IMG_ID;,SELECT COUNT(T2.OBJ_SAMPLE_ID) FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.ATT_CLASS = 'polka dot'
image_and_language,What are the attributes of the widest object in image 400?,"attributes refer to ATT_CLASS; the widest relates to the width of the bounding
box of the object which refers to MAX(W); image 400 refers to IMG_ID = 400;",SELECT T1.ATT_CLASS FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T2.IMG_ID = T3.IMG_ID WHERE T2.IMG_ID = 400 ORDER BY T3.W DESC LIMIT 1
image_and_language,State the name of the object class that has in most images.,object class that has in most images refers to OBJ_CLASS where MAX(COUNT(OBJ_CLASS_ID));,SELECT OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID GROUP BY T2.OBJ_CLASS ORDER BY COUNT(T1.OBJ_CLASS_ID) DESC LIMIT 1
image_and_language,State the width and height of the object with the class of 'van' in image 1.,The bounding box's W and H abbreviations stand for the object's width and height respectively; class of 'van' in image 1 refers to OBJ_CLASS = 'van' where IMG_ID = 1;,"SELECT T1.H, T1.W FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 1 AND T2.OBJ_CLASS = 'van'"
image_and_language,State the coordinate of X and Y for the object with the attribute of 'sparse' in image 1.,coordinates of X and Y for the object refer to X and Y coordinates of the bounding box; attribute of 'sparse' in image 1 refers to IMG_ID = 1 where ATT_CLASS = 'sparse';,"SELECT T3.OBJ_SAMPLE_ID, T3.X, T3.Y FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T2.IMG_ID = T3.IMG_ID WHERE T3.IMG_ID = 1 AND T1.ATT_CLASS = 'sparse'"
image_and_language,Calculate the percentage of object samples that are related to street lights.,"DIVIDE(COUNT(OBJ_SAMPLE_ID where OBJ_CLASS = 'street lights'), COUNT(OBJ_SAMPLE_ID)) as percentage;",SELECT CAST(SUM(CASE WHEN T2.OBJ_CLASS = 'street lights' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.OBJ_SAMPLE_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID
image_and_language,"Based on image 5, what is the percentage of images that belong windows object class?","DIVIDE(COUNT(OBJ_SAMPLE_ID where OBJ_CLASS = 'windows' and IMG_ID = 5), COUNT(OBJ_SAMPLE_ID where IMG_ID = 5)) as percentage;",SELECT CAST(COUNT(T1.OBJ_SAMPLE_ID) AS REAL) * 100 / COUNT(CASE WHEN T1.IMG_ID = 5 THEN 1 ELSE 0 END) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'windows'
image_and_language,How many images have an x-coordinate of 5 and y-coordinate of 5?,X and Y refer to coordinates of the bounding box where X = 5 and Y = 5; images refer to IMG_ID;,SELECT COUNT(IMG_ID) FROM IMG_OBJ WHERE X = 5 AND Y = 5
image_and_language,How many images have less than 15 object samples?,images refer to IMG_ID; less than 15 object samples refer to COUNT(OBJ_SAMPLE_ID) < 15;,SELECT COUNT(IMG_ID) FROM IMG_OBJ WHERE OBJ_SAMPLE_ID < 15
image_and_language,How many images have a total of 10 attribute classes?,images refer to IMG_ID; total of 10 attribute classes refers to COUNT(OBJ_CLASS_ID) = 10;,SELECT COUNT(IMG_ID) FROM IMG_OBJ WHERE OBJ_CLASS_ID = 10
image_and_language,List the ID of all images with objects that have multiple relations.,"ID of all images refer to IMG_ID; if two objects (OBJ1_SAMPLE_ID,
OBJ2_SAMPLE_ID) has
multiple PRED_CLASS_ID, it
means these two objects
have multiple relations;",SELECT IMG_ID FROM IMG_REL GROUP BY PRED_CLASS_ID HAVING COUNT(DISTINCT OBJ1_SAMPLE_ID) != 0 AND COUNT(DISTINCT OBJ2_SAMPLE_ID) != 0
image_and_language,"How many images have ""vegetable"" and ""fruits"" as their object classes?","images refer to IMG_ID; ""vegetables"" and ""fruits"" as object classes refer to OBJ_CLASS = 'vegetables' and OBJ_CLASS = 'fruits';",SELECT COUNT(T1.IMG_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'vegetables' OR T2.OBJ_CLASS = 'fruits'
image_and_language,"What is the image ID with a predicted class of ""parked on""?","predicted class of ""parked on"" refers to PRED_CLASS = 'parked on';",SELECT DISTINCT T1.IMG_ID FROM IMG_REL AS T1 INNER JOIN PRED_CLASSES AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T2.PRED_CLASS = 'parked on'
image_and_language,"List all the object classes of the images that have a (5,5) coordinate.","object classes refer to OBJ_CLASS; (5,5) coordinates refer to X and Y coordinates of the bounding box where X = 5 and Y = 5;",SELECT T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.X = 5 AND T1.Y = 5
image_and_language,"How many images have ""keyboard"" as their object class?","images refer to IMG_ID; ""keyboard"" as object class refers to OBJ_CLASS = 'keyboard';",SELECT COUNT(T1.IMG_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'keyboard'
image_and_language,"What are the width and height of the bounding box of the object with ""keyboard"" as their object class and (5, 647) as their coordinate?","The bounding box's W and H abbreviations stand for the object's width and height respectively; ""keyboard"" as object class refers to OBJ_CLASS = 'keyboard'; (5, 647) as coordinate refers to X and Y coordinates of the bounding box where X = 5 and Y = 647;","SELECT T1.W, T1.H FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'keyboard' AND T1.X = 5 AND T1.Y = 647"
image_and_language,"List all the ID of the images that have an attribute class of ""horse"".","ID of all images refer to IMG_ID; attribute class of ""horse"" refers to ATT_CLASS = 'horse';",SELECT T2.IMG_ID FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.ATT_CLASS = 'horse'
image_and_language,"Provide the x-coordinate and y-coordinate of the image with an attribute class of ''horse"" and an object class of ""fur"".","attribute class of ""horse"" refers to ATT_CLASS = 'horse'; object class of ""fur"" refers to OBJ_CLASS = 'fur';","SELECT T3.X, T3.Y FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T2.IMG_ID = T3.IMG_ID INNER JOIN OBJ_CLASSES AS T4 ON T3.OBJ_CLASS_ID = T4.OBJ_CLASS_ID WHERE T1.ATT_CLASS = 'horse' AND T4.OBJ_CLASS = 'fur'"
image_and_language,"List all the attribute classes of the image ID ""15"".","attribute classes of the image ID ""15"" refer to ATT_CLASS where IMG_ID = 15;",SELECT T1.ATT_CLASS FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T2.IMG_ID = 15
image_and_language,"For those objects that have multiple relations, how many images have a prediction class of ""reading""?","prediction class of ""reading"" refers to PRED_CLASS = 'reading'; if two objects (OBJ1_SAMPLE_ID,
OBJ2_SAMPLE_ID) has
multiple PRED_CLASS_ID, it
means these two objects
have multiple relations;",SELECT COUNT(T1.IMG_ID) FROM IMG_REL AS T1 INNER JOIN PRED_CLASSES AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T2.PRED_CLASS = 'reading'
image_and_language,"How many images have ""picture"" as their attribute class?","images have ""picture"" as their attribute class refer to IMG_ID where ATT_CLASS = 'picture';",SELECT COUNT(T2.IMG_ID) FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.ATT_CLASS = 'picture'
image_and_language,"How many images have ""picture"" as their attribute class and ""bear"" as their object class?","""picture"" as attribute class refers to ATT_CLASS = 'picture'; ""bear"" as object class refers to OBJ_CLASS = 'bear'; images refer to IMG_ID;",SELECT COUNT(T2.IMG_ID) FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T2.IMG_ID = T3.IMG_ID INNER JOIN OBJ_CLASSES AS T4 ON T3.OBJ_CLASS_ID = T4.OBJ_CLASS_ID WHERE T1.ATT_CLASS = 'picture' AND T4.OBJ_CLASS = 'bear'
image_and_language,"List all the attribute classes of the images that have a (5,5) coordinate.","attribute classes refer to ATT_CLASS; (5,5) coordinate refers to X and Y coordinates of the bounding box where X = 5 and Y = 5;",SELECT T1.ATT_CLASS FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T2.IMG_ID = T3.IMG_ID WHERE T3.X = 5 AND T3.Y = 5
image_and_language,"Calculate the average number of images with an attribute class of ""keyboard"".",AVG(IMG_ID) where OBJ_CLASS = 'keyboard';,SELECT AVG(T1.IMG_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'keyboard'
image_and_language,"Calculate the ratio of the total number of images with an object class of ""man"" and ""person"".","DIVIDE(COUNT(IMG_ID where OBJ_CLASS = 'man'), COUNT(IMG_ID where OBJ_CLASS = 'person'));",SELECT CAST(COUNT(CASE WHEN T2.OBJ_CLASS = 'man' THEN 1 ELSE 0 END) AS REAL) / COUNT(CASE WHEN T2.OBJ_CLASS = 'person' THEN 1 ELSE 0 END) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID
image_and_language,"List the object sample IDs of image ID 17 with coordinates (0,0).","object sample ID refers to OBJ_SAMPLE_ID; image ID 17 refers to IMG_ID = 17; coordinates (0,0) refer to X and Y coordinates of the bounding box where X = 0 and Y = 0;",SELECT OBJ_SAMPLE_ID FROM IMG_OBJ WHERE IMG_ID = 17 AND X = 0 AND Y = 0
image_and_language,List all bounding box widths and heights of object sample ID 2.,The bounding box's W and H abbreviations stand for the object's width and height respectively; object sample ID 2 refers to OBJ_SAMPLE_ID = 2;,"SELECT W, H FROM IMG_OBJ WHERE OBJ_SAMPLE_ID = 2"
image_and_language,"In the Y coordinate of image ID 12, how many are 0?",Y coordinate many are 0 refers to Y coordinates of the bounding box where Y = 0; image ID 12 refers to IMG_ID = 12;,SELECT COUNT(IMG_ID) FROM IMG_OBJ WHERE IMG_ID = 12 AND Y = 0
image_and_language,List all the attribute classes of image ID 22.,attribute classes of image ID 22 refer to ATT_CLASS where MG_ID = 22;,SELECT T1.ATT_CLASS FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T2.IMG_ID = 22
image_and_language,"List the object classes of image ID 36 with coordinates (0,0).","object classes of image ID 36 refers to OBJ_CLASS where IMG_ID = 36; coordinates (0,0) refer to X and Y coordinates of the bounding box where X = 0 and Y = 0;",SELECT T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 36 AND T1.X = 0 AND T1.Y = 0
image_and_language,"Write 10 coordinates with the object class ""pizza.""","coordinates for the object refer to X, Y, W and H coordinates of the bounding box; object class ""pizza"" refers to OBJ_CLASS = 'pizza';","SELECT T1.IMG_ID, T1.X, T1.Y FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'pizza' LIMIT 10"
image_and_language,What object class is in the X and Y coordinates of 126 and 363?,object class refers to OBJ_CLASS; X and Y coordinates of 126 and 363 refer to coordinates of the bounding box where X = 126 and Y = 363;,"SELECT T1.IMG_ID, T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.X = 126 AND T1.Y = 363"
image_and_language,What is the most common object class of image ID 56?,the most common object class of image ID 56 refers to MAX(COUNT(OBJ_CLASS_ID)) where IMG_ID = 56;,SELECT T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 56 GROUP BY T2.OBJ_CLASS ORDER BY COUNT(T2.OBJ_CLASS_ID) DESC LIMIT 1
image_and_language,Write the object classes of image ID 22 alongside the object's width and height.,object classes of image ID 22 refers to OBJ_CLASS where IMG_ID = 22; the object's width and heigh refer to W and H coordinates of the bounding box respectively;,"SELECT T1.W, T1.H, T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 22"
image_and_language,What is the predicate class of image ID 68?,predicate class of image ID 68 refers to PRED_CLASS where IMG_ID = 68;,SELECT T2.PRED_CLASS FROM IMG_REL AS T1 INNER JOIN PRED_CLASSES AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T1.IMG_ID = 68
image_and_language,How many 'has' predicate classes does image ID 107 have?,has' predicate classes refers to PRED_CLASS = 'has'; image ID 107 refers to IMG_ID = 107;,SELECT COUNT(T2.PRED_CLASS) FROM IMG_REL AS T1 INNER JOIN PRED_CLASSES AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T1.IMG_ID = 107 AND T2.PRED_CLASS = 'has'
image_and_language,Name the most common predicate class of image ID 4434.,the most common predicate class of image ID 4434 MAX(PRED_CLASS) where IMG_ID = 4434;,SELECT T2.PRED_CLASS FROM IMG_REL AS T1 INNER JOIN PRED_CLASSES AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T1.IMG_ID = 4434 ORDER BY T2.PRED_CLASS DESC LIMIT 1
image_and_language,Count the number of 'dress' object classes and include their X and Y coordinates in image ID 1764.,dress' object classes refer to OBJ_CLASS = 'dress'; image ID 1764 refers to IMG_ID = 1764; X and Y refer to coordinates of the bounding box;,"SELECT T1.X, T1.Y FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 1764 AND T2.OBJ_CLASS = 'dress'"
image_and_language,Give the X and Y coordinates of the sample object of image ID 23 that has the 'cast' attribute class.,X and Y refer to coordinates of the bounding box; image ID 23 refers to IMG_ID = 23; 'cast' attribute class refers to ATT_CLASS = 'cast';,"SELECT T3.OBJ_SAMPLE_ID, T3.X, T3.Y FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T2.IMG_ID = T3.IMG_ID WHERE T3.IMG_ID = 23 AND T1.ATT_CLASS = 'cast'"
image_and_language,How many 'blue' attribute classes are there on image ID 2355735?,blue' attribute classes on image ID 2355735 refer to ATT_CLASS = 'blue' where IMG_ID = 2355735;,SELECT COUNT(T1.ATT_CLASS) FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T2.IMG_ID = 2355735 AND T1.ATT_CLASS = 'blue'
image_and_language,What is the average width and height of the objects in image ID 47? List their object classes as well.,The bounding box's W and H abbreviations stand for the object's width and height in which average width and height refer to AVG(W) and AVG(H) respectively; image ID 47 refers to IMG_ID = 47; object classes refer to OBJ_CLASS;,"SELECT T2.OBJ_CLASS, AVG(T1.W), AVG(T1.H) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 47 GROUP BY T2.OBJ_CLASS"
hockey,List the first Name and last name of all players not from USA and who are born in 1990 .,"Not from USA refers to birthCountry! = 'USA'; born in 1990 refers to birthYear = 1990
","SELECT firstName, lastName FROM Master WHERE birthYear = 1990 AND birthCountry != 'USA'"
hockey,List all players' given name who are good at both left and right hand and playing the forward position.,good at both left and right hand refers to shootCatch IS NULL;  playing the forward position refers to pos = 'F',SELECT nameGiven FROM Master WHERE shootCatch IS NULL AND pos = 'F'
hockey,Who are the players who were not in the Hall of Fame list.,not in the Hall of Fame refers to hofID IS NULL,"SELECT firstName, lastName FROM Master WHERE hofID IS NULL"
hockey,Who is the youngest player who is still living. State the given name and date of birth.,"still living refers to deathYear IS NULL; youngest refers to MAX(birthYear,birthMon,birthDay)","SELECT nameGiven , nameGiven , birthYear, birthMon, birthDay FROM Master WHERE deathYear IS NULL ORDER BY birthYear DESC, birthMon DESC, birthday DESC LIMIT 1"
hockey,"For all the deceased players who are good at both left and right hand, list the player's name and the age when he died.","age when he died refers to SUBTRACT(deathYear,birthYear); deceased refers to deathYear IS NOT NULL; good at both left and right hand refers to shootCatch IS NULL","SELECT firstName, lastName, deathYear - birthYear FROM Master WHERE shootCatch IS NULL AND deathYear IS NOT NULL"
hockey,Name the goalies who played for more than two teams from Year 2000 to 2005.,goalie who played for more than 2 teams refers to COUNT(DISTINCT(T2.tmID))>2,"SELECT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T2.year >= 2000 AND T2.year <= 2005 GROUP BY T2.playerID HAVING COUNT(DISTINCT T2.tmID) > 2"
hockey,What is the average weight of players who have height greater than 72 inches.,average weight refers to AVG(weight); height greater than 72 inches refers to height>72,SELECT AVG(weight) FROM Master WHERE height > 72
hockey,Name the goalies who have played more than total of 5000 minutes in the all the season played. State given name of the player and from which country was he born.,"played more than total of 5000 minutes refers to SUM(Min)>5000;country he was born refers to birthCountry
","SELECT DISTINCT T1.nameGiven, T1.birthCountry FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID GROUP BY T1.nameGiven, T1.birthCountry HAVING SUM(T2.Min) > 5000"
hockey,Name the goaltenders who had played in both PCHA and NHL league.,PCHA refers to lgID = 'PCHA'; NHL league refers to lgID = 'NHL',"SELECT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T2.lgID IN ('PCHA', 'NHL') GROUP BY T2.playerID HAVING COUNT(DISTINCT T2.lgID) > 1"
hockey,List all deceased goalies by last name. List the season where he had the most time played.,deceased refers to deathYear; most time played refers to MAX(Min),"SELECT T1.playerID, T2.year, Min FROM Master AS T1 INNER JOIN Goalies AS T2 ON T2.playerID = T1.playerID WHERE T1.deathYear IS NOT NULL ORDER BY T2.Min DESC LIMIT 1"
hockey,"List all goalies from year 2000 to 2010 for team COL. State their given name, height, weight and age of today.",team COL refers to tmID = 'COL'; age of today refers to SUBTRACT(YEAR(NOW())-birthYear),"SELECT T1.nameGiven, T1.height , T1.weight, STRFTIME('%Y', CURRENT_TIMESTAMP) - birthYear FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T2.tmID = 'COL' AND T2.year >= 2000 AND T2.year <= 2010 GROUP BY T1.playerID"
hockey,Name all goalies with 10 or more empty net goals. Name the players and season where he played.,10 or more empty net goals refers to ENG> = 10; season refers to year,"SELECT T1.firstName, T1.lastName , T2.year FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T2.ENG >= 10"
hockey,State the goalie who has the lowest percentage of goals against among all the shots against recorded. Name the players and season where he played.,"goals against refers to GA; shots against refers to SA; lowest percentage of goals against among all the shots against refers to MIN(DIVIDE(GA,SA)*100)","SELECT T1.firstName, T1.lastName, T2.year FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE CAST(T2.GA AS REAL) / T2.SA IS NOT NULL ORDER BY CAST(T2.GA AS REAL) / T2.SA LIMIT 1"
hockey,List all goalies who played in the year 2005 season and shorter than 72 inches. List all the team names he play for.,shorter than 72 inches refers to height<72,"SELECT DISTINCT T1.firstName, T1.lastName, T3.name FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID INNER JOIN Teams AS T3 ON T2.tmID = T3.tmID WHERE T2.year = 2005 AND T1.height < 72"
hockey,State the nick name of player ID 'aubinje01'. List all the teams and season he played for.,"nick name refers to nameNick; team refers to tmID; season refers to year

","SELECT DISTINCT T1.nameNick, T3.year, T3.name FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID INNER JOIN Teams AS T3 ON T2.tmID = T3.tmID WHERE T1.playerID = 'aubinje01'"
hockey,Name the goalies with the most seasons played. State the average time he played for each season.,"most seasons played refers to MAX(COUNT(playerID)); average time he played for each season refers to DIVIDE(SUM(T2.Min),COUNT(T2.playerID))","SELECT T1.firstName, T1.lastName, T2.year, AVG(T2.Min) FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T1.playerID = ( SELECT playerID FROM Goalies GROUP BY playerID ORDER BY COUNT(playerID) DESC LIMIT 1 ) GROUP BY T1.firstName, T1.lastName, T2.year"
hockey,Name the goalie and the season he played where he had 5% shutouts among the number of goals recorded while the goalie was on the ice.,"shutouts refers to SHO; number of goals refers to GA; 5% shutouts among the number of goals refers to DIVIDE(SHO,GA)*100 = 5.00","SELECT DISTINCT T1.firstName, T1.lastName, T2.year FROM Master AS T1 INNER JOIN ( SELECT playerID, year FROM Goalies WHERE CAST(SHO AS REAL) / GA > 0.05 ) AS T2 ON T2.playerID = T1.playerID"
hockey,Name the deceased players whose death country is different from his birth country order by birth year.,death country is different from his birth country refers to birthCountry! = deathCountry,"SELECT firstName, lastName FROM Master WHERE birthCountry != deathCountry ORDER BY birthYear"
hockey,Who are the players played both in NHL and WHA. List the given name and first year they were in NHL and first year in WHA.,"first year they were in NHL refers to firstNHL; first year in WHA refers to firstWHA; play in both refers to firstNHL IS NOT NULL AND firstWHA IS NOT NULL
","SELECT nameGiven, firstNHL, firstWHA FROM Master WHERE firstNHL IS NOT NULL AND firstWHA IS NOT NULL"
hockey,List the living players who have two positions. State their given name the position they play.,living players refers to deathYear IS NULL; positions refers to pos,"SELECT firstName, lastName, pos FROM Master WHERE deathYear IS NULL AND pos LIKE '%/%'"
hockey,"State the nick name of the tallest player? If the player had left NHL, mention the last season he was with NHL.",nick name refers to nameNick; tallest player refers to MAX(height); had left NHL refers to lastNHL,"SELECT nameNick, lastNHL FROM Master ORDER BY height DESC LIMIT 1"
hockey,What is the average height of player who were born in 1990 and after? Compare the average height with players who were born before 1990.,"average height refers to AVG(height); born in 1990 refers to birthYear = 1990
","SELECT AVG(IIF(birthYear < 1990, height, NULL)) - AVG(IIF(birthYear >= 1990, height, NULL)) FROM Master"
hockey,Name the goalies who are good at left hand and also has become a coach after retirement. Name all teams he had played before.,good at left hand refers to shootCatch = 'L'; goalies refers to pos = 'G',"SELECT DISTINCT firstName, lastName, T3.name FROM Goalies AS T1 INNER JOIN Master AS T2 ON T2.playerID = T1.playerID INNER JOIN Teams AS T3 ON T1.lgID = T3.lgID WHERE T1.playerID IS NOT NULL AND T2.coachID IS NOT NULL AND T2.shootCatch = 'L' AND T2.pos = 'G'"
hockey,List all the deceased goalies and the teams he had played whose birth country was in Canada.,"goalies refers to pos = 'G'; deceased goalies refers to deathYear IS NOT NULL
","SELECT DISTINCT firstName, lastName, T3.name FROM Goalies AS T1 INNER JOIN Master AS T2 ON T2.playerID = T1.playerID INNER JOIN Teams AS T3 ON T1.lgID = T3.lgID WHERE T2.birthCountry = 'Canada' AND T2.deathYear IS NOT NULL AND T2.pos = 'G'"
hockey,Name the goalies and season they played when Boston Bruins won number 1 in rank.,"goalies refers to pos = 'G'; season refers to year
","SELECT T1.firstName, T1.lastName, T3.year FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID INNER JOIN Teams AS T3 ON T2.year = T3.year AND T2.tmID = T3.tmID WHERE T1.deathYear IS NOT NULL AND T3.name = 'Boston Bruins' AND T3.rank = 1 AND T1.pos = 'G'"
hockey,"Among all goalies who are still alive, whose first season in NHL in before 1950. List the team names they were in.",first season in NHL in before 1950 refers to firstNHL<1950; goalies who are still alive refers to deathYear IS NOT NULL,SELECT DISTINCT T3.name FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID INNER JOIN Teams AS T3 ON T2.lgID = T3.lgID AND T2.year = T3.year WHERE T1.deathYear IS NOT NULL AND T1.firstNHL < 1950
hockey,"For all players who becomes coach after retirement, state the given name of coach and which teams and years did they coach?",,"SELECT DISTINCT T2.nameGiven, T3.name, T3.year FROM Coaches AS T1 INNER JOIN Master AS T2 ON T2.coachID = T1.coachID INNER JOIN Teams AS T3 ON T1.lgID = T3.lgID WHERE T2.playerID IS NOT NULL AND T2.coachID IS NOT NULL"
hockey,"Among the coaches who was never a player, who has highest percentage of game winning? Provide the given name of the coach and team he coached.","highest percentage of game winning refers to MAX(DIVIDE(w,g)*100)","SELECT T2.nameGiven, T3.name FROM Coaches AS T1 INNER JOIN Master AS T2 ON T2.coachID = T1.coachID INNER JOIN Teams AS T3 ON T1.lgID = T3.lgID WHERE T1.coachID IS NOT NULL ORDER BY CAST(T1.w AS REAL) / T1.g DESC LIMIT 1"
hockey,Which coach has the best performance for team DET in history? What was the winning percentage? Name the coach and the year he coached.,"winning percentage refers to DIVIDE(w,g)*100; team DET refers to tmID = 'DET'","SELECT CAST(T2.W AS REAL) / T2.G, T1.firstName, T1.lastName, T2.year FROM Master AS T1 INNER JOIN Coaches AS T2 ON T1.coachID = T2.coachID INNER JOIN ( SELECT coachID FROM Coaches ORDER BY CAST(w AS REAL) / g DESC LIMIT 1 ) AS T3 ON T2.coachID = T3.coachID"
hockey,"Who is the coach who had coached the the most seasons in MTL? State his given name, date of birth and all teams he had coaches before.",date of birth refers to birthDay + birthMon + birthYear,"SELECT T2.nameGiven , T2.birthYear, T2.birthMon, T2.birthDay, T3.name FROM Goalies AS T1 INNER JOIN Master AS T2 ON T2.playerID = T1.playerID INNER JOIN Teams AS T3 ON T3.lgID = T1.lgID WHERE T3.tmID = 'MTL' GROUP BY T2.nameGiven, T2.birthYear, T2.birthMon, T2.birthDay, T3.name ORDER BY COUNT(T2.coachID) DESC LIMIT 1"
hockey,List all goalies with more lost than won games for two seasons or more. State the name of the player and team he played.,lost refers to L; won refers to W,"SELECT DISTINCT T1.firstName, T1.lastName, T3.name FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID INNER JOIN Teams AS T3 ON T2.year = T3.year AND T2.tmID = T3.tmID WHERE T1.pos = 'G' AND T2.L > T2.W GROUP BY T1.firstName, T1.lastName, T3.name HAVING COUNT(T3.year) > 2"
hockey,"For all the goalies born in year 1987, who are good in both right hand and left hand? Calculate his percentage of winning for every season he played.","good in both right hand and left hand refers shootCatch IS NULL; winning refers to W; every season he played refers to GP; percentage of winning for every season he played refers to DIVIDE(W,GP)*100","SELECT T1.firstName, T1.lastName, T2.year, CAST(T2.W AS REAL) / T2.GP FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T1.birthYear = 1987 AND T1.shootCatch IS NULL"
hockey,What is given name for player 'aebisda01'. Calculate the average time in minutes for the all his games played as goaltender.,played as goaltender refers to pos = 'G'; time in minutes refers to Min; all his games played refers to GP; average time in minutes refers to DIVIDE(SUM(Min)/SUM(GP)),"SELECT T1.nameGiven, CAST(SUM(T2.Min) AS REAL) / SUM(T2.GP) FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T1.playerID = 'aebisda01' GROUP BY T1.nameGiven"
hockey,List all living goalies who have greater than 50% wins among all games played. State their last name and first name.,"wins refers to W; all games played refers to GP;greater than 50% wins among all games played refers to DIVIDE(SUM(W),GP)*100>50","SELECT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T1.deathYear IS NOT NULL GROUP BY T1.playerID HAVING CAST(SUM(T2.Min) AS REAL) / SUM(T2.GP) > 0.5"
hockey,How many players and coaches are awarded after death?,awarded after death refers to note = 'posthumous',SELECT COUNT(note) FROM AwardsMisc WHERE note IS NOT NULL
hockey,"Among the players who won an award in the year 1983, how many of them play the position of goalie?",position of goalie refers to pos = 'G',SELECT COUNT(playerID) FROM AwardsPlayers WHERE pos = 'G' AND year = 1983
hockey,How many coaches worked a temporary term in the year 2007?,worked a temporary term refers to notes = 'interim',SELECT COUNT(coachID) FROM Coaches WHERE year = 2007 AND notes = 'interim'
hockey,How many shoutouts are there in the regular season of 1977?,regular season refers to `R/P` = 'R',SELECT COUNT(year) FROM CombinedShutouts WHERE year = 1977 AND `R/P` = 'R'
hockey,How many teams scored against their opponent who had pulled their goalie in the year 2005?,teams scored against their opponent who had pulled their goalie refers to ENG is not null,SELECT COUNT(tmID) FROM Goalies WHERE year = 2005 AND ENG IS NULL
hockey,Please list the years in which the NHL League had shots recorded while the goalie was on the ice.,shots recorded while the goalie was on the ice refers to SA IS NOT NULL; NHL League refers to lgID = 'NHL',SELECT DISTINCT year FROM Goalies WHERE lgID = 'NHL' AND SA IS NOT NULL
hockey,How many teams have the same total number of postseason wins and postseason loses?,same total number of postseason wins and postseason loses refers to PostW = PostL,SELECT DISTINCT COUNT(tmID) FROM Goalies WHERE PostW = PostL
hockey,Please list the name of the person who was in the Hall of Fame in the year 1978.,,SELECT name FROM HOF WHERE year = 1978
hockey,How many people were in the Hall of Fame's Builder category?,,SELECT COUNT(hofID) FROM HOF WHERE category = 'Builder'
hockey,"Among the people who got into the Hall of Fame after the year 1980, how many of them belong to the category of ""Player""?",after the year 1980 refers to year>1980,SELECT COUNT(hofID) FROM HOF WHERE year > 1980 AND category = 'Player'
hockey,Please list the Nicknames of the players who got in the Hall of Fame in 2007.,nicknames refers to nameNick,SELECT DISTINCT T1.nameNick FROM Master AS T1 INNER JOIN HOF AS T2 ON T1.hofID = T2.hofID WHERE T2.year = 2007
hockey,"Did the tallest player got in the Hall of Fame? If yes, please list the year when he got in the Hall of Fame.",tallest player refers to max(height),SELECT CASE WHEN T1.hofID IS NULL THEN 'NO' ELSE T2.year END FROM Master AS T1 LEFT JOIN HOF AS T2 ON T1.hofID = T2.hofID WHERE T1.height = ( SELECT MAX(height) FROM Master )
hockey,Please list the awards the coaches who are born in Canada have won.,born in Canada refers to birthCountry = 'Canada',SELECT DISTINCT T2.award FROM Master AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.coachID = T2.coachID WHERE T1.birthCountry = 'Canada'
hockey,"Among the coaches whose team has over 30 wins in a year, how many of them are born in the USA?",over 30 wins refers to w>30; born in the USA refers to birthCountry = 'USA',SELECT COUNT(T2.coachID) FROM Master AS T1 INNER JOIN Coaches AS T2 ON T1.coachID = T2.coachID WHERE T2.W > 30 AND T1.birthCountry = 'USA'
hockey,"Among the coaches who have taught teams from the NHL League, how many of them are from Canada?",from Canada refers to birthCountry = 'Canada'; NHL league refers to lgID = 'NHL',SELECT COUNT(T2.coachID) FROM Master AS T1 INNER JOIN Coaches AS T2 ON T1.coachID = T2.coachID WHERE T2.lgID = 'NHL' AND T1.birthCountry = 'Canada'
hockey,Please list the awards won by coaches who were born in 1952.,born in 1977 refers to birthYear = '1977',SELECT T2.award FROM Master AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.coachID = T2.coachID WHERE T1.birthYear = 1952
hockey,"Among the coaches who have received an award in 1940, how many of them are born in Toronto?",born in Toronto refers to birthCountry = 'Toronto',SELECT COUNT(T1.coachID) FROM Master AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.coachID = T2.coachID WHERE T2.year = 1940 AND T1.birthCity = 'Toronto'
hockey,"Among the coaches who have received an award after the year 1940, how many of them have already died?",after the year 1940 refers to year>1940; have already died refers to deathYear IS NOT NULL,SELECT COUNT(T1.coachID) FROM Master AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.coachID = T2.coachID WHERE T1.deathYear IS NOT NULL AND T2.year > 1940
hockey,Please list the awards won by coaches who taught the NHL League and have already died.,have already died refers to deathYear IS NOT NULL; NHL league refers to lgID = 'NHL',SELECT DISTINCT T2.award FROM Master AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.coachID = T2.coachID WHERE T1.deathYear IS NOT NULL AND T2.lgID = 'NHL'
hockey,"Among the coaches who have gotten in the Hall of Fame, how many of them have a weight of over 195?",weight of over 195 refers to weight>195,SELECT COUNT(DISTINCT T1.coachID) FROM Master AS T1 INNER JOIN HOF AS T2 ON T1.hofID = T2.hofID WHERE T1.weight > 195
hockey,Please list the first name of the players who are good at both left hands and right hands for goalie and have gotten in the Hall of Fame.,good at both left hands and right hands for goalie refers to shootCatch IS NULL,"SELECT DISTINCT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN HOF AS T2 ON T1.hofID = T2.hofID WHERE T1.shootCatch IS NULL"
hockey,"Among the players who became coaches, how many of them have gotten in the Hall of Fame?",players who became coaches refers to playerID IS NOT NULL AND coachID IS NOT NULL,SELECT COUNT(T1.playerID) FROM Master AS T1 INNER JOIN HOF AS T2 ON T1.hofID = T2.hofID WHERE T1.playerID IS NOT NULL AND T1.coachID IS NOT NULL
hockey,Please list the birth cities of the players who have won an award in the year 1970.,,SELECT DISTINCT T1.birthCity FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 1970
hockey,How many players born in Toronto have won the All-Rookie award?,born in Toronto refers to birthCity = 'Toronto',SELECT COUNT(T1.playerID) FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID WHERE T2.award = 'All-Rookie' AND T1.birthCity = 'Toronto'
hockey,"Among the players who have won the All-Rookie award, how many of them have died?",have died refers to deathYear IS NOT NULL,SELECT COUNT(T1.playerID) FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID WHERE T2.award = 'All-Rookie' AND T1.deathYear IS NOT NULL
hockey,"Among the players who died in Massachussets, how many of them have won an award?",died in Massachussets refers to deathState = 'Massachussets',SELECT COUNT(DISTINCT T1.playerID) FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID WHERE T1.deathState = 'MA'
hockey,Please list the awards the players who died in Arlington have won.,died in Arlington refers to deathCity = 'Arlington',SELECT T2.award FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID WHERE T1.deathCity = 'Kemptville'
hockey,Please list the nicknames of the players who have won the All-Rookie award and are born in March.,born in March refers to birthMon = '3'; nicknames refers to nameNick,SELECT DISTINCT T1.nameNick FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID WHERE T2.award = 'All-Rookie' AND T1.birthMon = 3
hockey,"Among the players who were born in July and August, how many of them got in the Hall of Fame?","born in July and August refers to birthMon IN('7','8')","SELECT COUNT(T1.playerID) FROM Master AS T1 INNER JOIN HOF AS T2 ON T1.hofID = T2.hofID WHERE T1.birthMon IN (7, 8)"
hockey,In which month was the player who has won the most awards born?,who has won the most awards refers to max(count(award)); the month player was born refers to birthMon,SELECT T1.birthMon FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID GROUP BY T2.playerID ORDER BY COUNT(T2.award) DESC LIMIT 1
hockey,Players born in which year have received the most awards in total?,received the most awards in total refers to max(count(award)),SELECT T1.birthYear FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID GROUP BY T1.birthYear ORDER BY COUNT(T2.award) DESC LIMIT 1
hockey,Which country is the most award-winning player from?,most award-winning refers to max(count(award)); country player is from refers to birthCountry,SELECT T1.birthCountry FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID GROUP BY T1.birthCountry ORDER BY COUNT(T2.award) DESC LIMIT 1
hockey,Which country has the most players in the Hall of Fame?,country refers to birthCountry,SELECT T1.birthCountry FROM Master AS T1 INNER JOIN HOF AS T2 ON T1.hofID = T2.hofID GROUP BY T1.birthCountry ORDER BY COUNT(T1.playerID) DESC LIMIT 1
hockey,Please list the positions of the players who were born in Canada and have won the All-Rookie award.,born in Canada refers to birthCountry = 'Canada'; pos = 'LW' refers to left winger; pos = 'RW' refers to right winger; pos = 'C' refers to center; pos = 'G' refers to goalie; pos = 'D' refers to defenceman; pos = 'W' refers to winger; pos = 'F' refers to forward,SELECT DISTINCT T1.pos FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID WHERE T1.birthCountry = 'Canada' AND T2.award = 'All-Rookie'
hockey,What is the average BMI of all the coaches who have gotten in the Hall of Fame?,"average BMI = divide(sum(divide(weight, multiply(height, height))), count(coachID))",SELECT SUM(T1.weight / (T1.height * T1.height)) / COUNT(T1.coachID) FROM Master AS T1 INNER JOIN HOF AS T2 ON T1.hofID = T2.hofID
hockey,What is the percentage of American players among all the players who have gotten in the Hall of Fame?,"percentage of American players = divide(count(hofID where birthCountry = 'USA'), count(hofID))*100%",SELECT CAST(COUNT(CASE WHEN T1.birthCountry = 'USA' THEN T1.playerID ELSE NULL END) AS REAL) * 100 / COUNT(T1.playerID) FROM Master AS T1 INNER JOIN HOF AS T2 ON T1.hofID = T2.hofID
hockey,"How many years did player Id ""healygl01"" play?",years of playing = MAX(year)-MIN(year),SELECT COUNT(year) FROM Goalies WHERE playerID = 'healygl01'
hockey,"Which team did player Id ""roypa01"" play in 1992? Give the team id.",team id refers to tmID,SELECT tmID FROM Goalies WHERE playerID = 'roypa01' AND year = 1992
hockey,"What was the total number of the games that player Id ""rutlewa01"" played in 1967?",total number of the games refers to GP,SELECT GP FROM Goalies WHERE playerID = 'rutlewa01' AND year = 1967
hockey,"Show me how many minutes player Id ""valiqst01"" played in the game in 2007 season.",show me how many minutes refers to Min,SELECT Min FROM Goalies WHERE playerID = 'valiqst01' AND year = 2007
hockey,"How many games did player Id ""vanbijo01"" win in the 1990 season?",the number of wins refers to W,SELECT W FROM Goalies WHERE playerID = 'vanbijo01' AND year = 1990
hockey,"In how many games did player Id ""vernomi01"" end up with a tie or an overtime loss in the 1998 season?",end up with a tie or an overtime loss refers to T/OL,SELECT `T/OL` FROM Goalies WHERE playerID = 'vernomi01' AND year = 1998
hockey,"For the coach who won Second Team All-Star in 1933, how many wins did he have that year?",the number of wins refers to count(w),SELECT SUM(T1.W) FROM Coaches AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.coachID = T2.coachID WHERE T2.year = 1933 AND T2.award = 'Second Team All-Star'
hockey,"Did legendsID ""P194502"" personally attend his Hall of Fame dedication?","note = 'posthumous'refers to ""didn't personally attend""","SELECT IIF(T1.note = 'posthumous', 'YES', 'NO') FROM AwardsMisc AS T1 RIGHT JOIN Master AS T2 ON T1.ID = T2.playerID WHERE T2.legendsID = 'P194502'"
hockey,Which position did Mike Antonovich play?,pos = 'LW' refers to left winger; pos = 'RW' refers to right winger; pos = 'C' refers to center; pos = 'G' refers to goalie; pos = 'D' refers to defenceman; pos = 'W' refers to winger; pos = 'F' refers to forward,SELECT T1.pos FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID WHERE T1.firstName = 'Mike' AND T1.lastName = 'Antonovich'
hockey,"For the coach who co-coached with Dave Lewis in 1998, where was his birth place?",co-coached refers to notes = 'co-coach'; birth place refers to 'birthCountry-birthState-birthCity',SELECT T1.birthCountry FROM Master AS T1 INNER JOIN Coaches AS T2 ON T1.coachID = T2.coachID WHERE T2.year = 1998 AND T2.notes = 'co-coach with Dave Lewis'
hockey,Which player who showed as the third goalie in a game has the biggest weight? Give the full name of the player.,the third goalie refers to stint = 3; the biggest weight refers to max(weight),"SELECT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T2.stint = 3 ORDER BY T1.weight DESC LIMIT 1"
hockey,"Among the players who had 10 empty net goals in their career, who is the tallest? Show his full name.",10 empty net goals refers to ENG = 10; the tallest refers to max(height),"SELECT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID GROUP BY T2.playerID, T1.height HAVING SUM(T2.ENG) > 10 ORDER BY T1.height DESC LIMIT 1"
hockey,"For the goalie who had the most shutouts in 2010, what's his catching hand?",the most shutouts refers to max(SHO); shootCatch = 'L' refers to lefthand; shootCatch = 'R' refers to righthand; shootCatch = 'null' or 'empty' means this player is good at both left and right hand,SELECT T1.shootCatch FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 2010 GROUP BY T2.playerID ORDER BY SUM(T2.SHO) DESC LIMIT 1
hockey,Who is the youngest goalie among those who had more than 150 goal againsts in 2002 season?,youngest goalie refers to max(birthYear/birthMon/birthDay); more than 150 goal againsts refers to GA>150,"SELECT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 2002 AND T2.GA > 150 GROUP BY T2.playerID, T1.birthYear, T1.birthMon, T1.birthMon HAVING SUM(T2.GA) ORDER BY T1.birthYear DESC, T1.birthMon DESC, SUM(T1.birthDay) DESC LIMIT 1"
hockey,"In the history of team id NJD, which goalie saved the most goal attempts? Give his full name.","saved the most goal attempts refers to max(subtract(SA, GA)); team id refers to tmID","SELECT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T2.tmID = 'NJD' GROUP BY T2.playerID ORDER BY SUM(T2.SA - T2.GA) DESC LIMIT 1"
hockey,Which teams had the most postseason empty net goals in 2010 season? List their team names.,most postseason empty net goals refers to max(PostENG),SELECT T2.name FROM Goalies AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID WHERE T1.year = 2010 GROUP BY T2.name ORDER BY SUM(PostENG) DESC LIMIT 1
hockey,"For the team which had the most postseason shutouts in 1995, how many points did they have that year?",points refer to Pts; the most postseason shutouts refers to max(PostSHO),SELECT SUM(T2.SHO) FROM Scoring AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 1995 GROUP BY T2.tmID ORDER BY SUM(T2.PostSHO) DESC LIMIT 1
hockey,Which coach had the highest winning rates in the 2009 season? What's coach's nickname.,"the highest winning rate refer to divide(W, sum(W, L))","SELECT T2.coachID, T1.nameNick FROM Master AS T1 INNER JOIN Coaches AS T2 ON T1.coachID = T2.coachID WHERE T2.year = 2009 ORDER BY CAST(T2.W AS REAL) / (T2.W + T2.L) DESC LIMIT 1"
hockey,"For the team had the biggest power play percentage in 2011, who was their coach that season? Give the full name.","the biggest power play percentage = max(divide(PPG, PPC))",SELECT T1.coachID FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID WHERE T2.year = 2011 ORDER BY CAST(T2.PPG AS REAL) / T2.PPC DESC LIMIT 1
hockey,"In the Stanley Cup finals history, how many games did player id ""broadpu01"" play in 1922?",the number of games refers to GP,SELECT GP FROM ScoringSC WHERE playerID = 'broadpu01' AND YEAR = 1922
hockey,"How many years did player Id ""cleghsp01"" make to the Stanley Cup finals?",the number of years refers to count(year),SELECT COUNT(year) FROM ScoringSC WHERE playerID = 'cleghsp01'
hockey,"What was the number of goals did player Id ""dyeba01"" make in the 1921 Stanley Cup finals?",the number of goals refers to G,SELECT G FROM ScoringSC WHERE playerID = 'dyeba01' AND year = 1921
hockey,Who made the most assists in a single game in the Stanley Cup finals ?,the most assists refers to max(A),SELECT playerID FROM ScoringSC ORDER BY A DESC LIMIT 1
hockey,"Which league did player id""adamsja01"" play in 1920?",which league refers to lgID,SELECT lgID FROM ScoringSC WHERE playerID = 'adamsja01' AND year = 1920
hockey,"What position did player id ""hartgi01"" play in his Stanley Cup finals performance?",position refers to pos,SELECT DISTINCT pos FROM ScoringSC WHERE playerID = 'hartgi01'
hockey,"For the team which had three different goalies in the 2011 postseason games, how many games did they win in the regular season?",three different goalies refer to count(playerID) = 3; game won refers to W,SELECT SUM(T2.W) FROM Goalies AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID WHERE T2.year = 2011 GROUP BY T1.tmID HAVING COUNT(DISTINCT T1.playerID) = 3
hockey,Which year was the goalie who had the most postseaon shots Against in 2008 born?,the most postseason shots Against refers to max(PostSA); year born refers to birthYear,SELECT T1.birthYear FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 2008 ORDER BY T2.PostSA DESC LIMIT 1
hockey,How many years were there after Don Waddell retired and became a coach in NHL?,"after retired and became a coach refers to max(subtract(year, lastNHL))",SELECT MAX(T2.year) - MIN(T2.year) FROM Master AS T1 INNER JOIN Coaches AS T2 ON T1.coachID = T2.coachID WHERE T1.firstName = 'Don' AND T1.lastName = 'Waddell'
hockey,Which is the catching hand for the goaltender who had the most shutouts in 1996?,the most shutouts refers to max(SHO); catching hand for the goaltender refers to shootCatch; shootCatch = 'L' refers to lefthand; shootCatch = 'R' refers to righthand; shootCatch = 'null' or 'empty' means this player is good at both left and right hand,SELECT T1.shootCatch FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 1996 ORDER BY T2.SHO DESC LIMIT 1
hockey,When was the birthday for the goalie who had most goal againsts in 1965 season?,"Birthday refers to CONCAT(birthYear / birthMon / birthDate);most goal against refers to MAX(GA);1965 season refers to year = '1965'

","SELECT T1.birthYear, T1.birthMon, birthDay FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 1965 ORDER BY T2.GA DESC LIMIT 1"
hockey,"For he who had the highest plus / minus on the court in the 1981 season, what's his full name?","highest Plus/minus refers to MAX(+/-); full name refers to firstName, lastName; 1981 season refers to year = '1981'

","SELECT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 1981 GROUP BY T2.playerID ORDER BY SUM(T2.`+/-`) DESC LIMIT 1"
hockey,What's the weight of the player who had the most Power Play Goals in the 21st century?,21st century refers to year >2000; Power play goals refers to PPG,"SELECT T1.weight FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T2.year > 2000 GROUP BY T1.playerID, T1.weight ORDER BY SUM(T2.PPG) DESC LIMIT 1"
hockey,"For the player who scored 7 shorthanded goals in 1989, what's his dominant hand?","1989 refers to the year of scoring; ""dominant hand"" and ""shooting hand"" are synonyms which refers to shootCatch

",SELECT T1.shootCatch FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 1989 GROUP BY T2.playerID HAVING SUM(T2.SHG) = 7
hockey,Who was the most clutch player in 1986? Give his full name.,clutch player' and 'trustworthy player in the critical moment' are synonyms; most clutch player refers to the most trustworthy player which refers to MAX(GWG); 1986 is the year played,"SELECT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 1986 GROUP BY T2.playerID ORDER BY SUM(T2.GWG) DESC LIMIT 1"
hockey,How many shots on goal did Cam Neely had in the year of 1990?,"1990 refers to the year played; Shot on goal refers to SOG
",SELECT T2.SOG FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T1.firstName = 'Cam' AND T1.lastName = 'Neely' AND T2.year = '1990'
hockey,Who was the coach for the team which had the most bench minors penalty in 2003？,"Coach of the team refers to firstName+lastName; 2003 refers to the year

","SELECT DISTINCT T3.firstName, T3.lastName FROM Teams AS T1 INNER JOIN Coaches AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year INNER JOIN Master AS T3 ON T2.coachID = T3.coachID WHERE T1.year = '2003' GROUP BY T3.firstName, T3.lastName ORDER BY SUM(T1.BenchMinor) DESC LIMIT 1"
hockey,"For the goalies whose weight are above 190, who had most goal againsts in 1978 season?",Weight of above 190 refers to weight >190; 1978 season refers to the year played,SELECT T1.playerID FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T1.year = '1978' AND T2.weight > 190 ORDER BY T1.GA DESC LIMIT 1
hockey,What is the percentage of winning rate of improvement since Alain Vigneault became the coach of Vancouver Canucks in 2006 season?,"winning rate refers to DIVIDE (w, SUM(w, l)); Vancouver Canucks is name of team where tmID = 'VAN'
Winning rate refers to DIVIDE(wins in year = '2005/2006'(ADD(wins+loses); improvement refers to SUBTRACT(DIVIDE(wins in year = '2005'(ADD(wins+loses), DIVIDE(wins in year = '2006'(ADD(wins+loses))
",SELECT SUM(CASE WHEN T1.year = 2006 THEN CAST(T1.W AS REAL) * 100 / (T1.W + T1.L) ELSE 0 END) - ( SELECT CAST(W AS REAL) * 100 / (W + L) FROM Teams WHERE year = '2005' AND name = 'Vancouver Canucks' ) FROM Teams AS T1 INNER JOIN Coaches AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year INNER JOIN Master AS T3 ON T2.coachID = T3.coachID WHERE T1.name = 'Vancouver Canucks' AND T3.firstName = 'Alain' AND T3.lastName = 'Vigneault'
hockey,"For the goalie who had the highest defensive success rate in the postseason of 2011, what's his legends ID ?","Post season of 2011 refers to year = ’2011’
defensive success rate refers to (SUBTRACT(1 (DIVIDE(PostGA/PostSA)), *100%)
",SELECT T2.legendsID FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T1.year = 2011 ORDER BY 1 - CAST(T1.PostGA AS REAL) / T1.PostSA DESC LIMIT 1
hockey,How many former athletes go on to become coaches after retiring?,,SELECT COUNT(playerID) FROM Master WHERE playerID IS NOT NULL AND coachID IS NOT NULL
hockey,"Among the teams with the most number of ties, how many penalty was committed by a player or coach that is not on the ice? Indicate the name of the team.",penalty refers to BenchMinor; Ties refer to T,"SELECT BenchMinor, name FROM Teams ORDER BY T DESC LIMIT 1"
hockey,Which NHL award was most frequently won by the coach with the most wins?,,"SELECT award FROM Teams AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.lgID = T2.lgID WHERE T1.lgID = 'NHL' GROUP BY T2.coachID, T2.award ORDER BY COUNT(T2.award) DESC LIMIT 1"
hockey,What is the power play percentage of the team with the most number of loses?,"Power play percentage refers to PPG, most number of loses refers to MAX(L)

",SELECT CAST(SUM(PPG) AS REAL) * 100 / SUM(PPC) FROM Teams GROUP BY tmID ORDER BY SUM(L) DESC LIMIT 1
hockey,How many players were included in the Hall of Fame on average between 1950 and 1980?,"year BETWEEN 1950 and 1980; average = DIVIDE(COUNT(hofID)), 30)

",SELECT CAST(COUNT(name) AS REAL) / 30 FROM HOF WHERE year BETWEEN 1950 AND 1980 AND category = 'Player'
hockey,Which country produced the most number of hockey players? Identify which year was most of the hockey players are born.,"Year most hockey players were born refers to MAX(birthYear); birthCountry refers to the country where a player was born
","SELECT DISTINCT birthCountry, birthYear FROM Master GROUP BY birthCountry, birthYear ORDER BY COUNT(birthCountry) DESC LIMIT 1"
hockey,How many wins does the team have whose goaltender have the most number of successfully stopping the other team from scoring during the entire game?,"Number of wins refers to W; Shutout refers to SHO; a shutout is credited to a goaltender who successfully stops the other team from scoring during the entire game.
",SELECT SUM(W) FROM Goalies GROUP BY tmID ORDER BY SUM(SHO) DESC LIMIT 1
hockey,Which team recorded the most number of road victories in 2005? Indicate the team ID.,"road victories refers to rW; team id refers to tmID; victories and wins are synonyms

",SELECT tmID FROM TeamSplits WHERE YEAR = '2005' ORDER BY rW DESC LIMIT 1
hockey,What is the position of the 9th oldest hockey player?,position refers to pos; date of birth refers to birthDay + birthMon + birthYear,"SELECT pos FROM Master WHERE birthYear IS NOT NULL ORDER BY birthYear, birthMon, birthDay LIMIT 8"
hockey,How many goals were scored while the goalkeeper was on the ice in the 1924 WCHL by the goalie with the most goals scored?,WCHL is the league's abbreviated name which refers to lgID = 'WCHL'; most goals scored referst to MAX(PostGA); GA is abbreviation for Post Against which means number of goals recorded while the goalie is on the ice. Include all goals against during regulation and overtime play.,SELECT SUM(PostGA) FROM Goalies WHERE lgID = 'WCHL' AND year = '1924' GROUP BY playerID ORDER BY SUM(PostGA) DESC LIMIT 1
hockey,"In 2006, what is the overall number of october defeats for the team with the most October defeats? Indicate the team ID.",team ID refers to tmID; 'defeats' and 'loses' are synonyms; most October defeats refers to max(OctL),"SELECT OctL, tmID FROM TeamSplits WHERE year = '2006' ORDER BY OctL DESC LIMIT 1"
hockey,"How many players, whose shooting/catching hand is both left and right, debuted their first NHL in 2011?","shooting/catching hand is both left and right refers to shootCatch is NULL, debuted their first NHL in 2011 refers to firstNHL = 2011",SELECT COUNT(playerID) FROM Master WHERE shootCatch IS NULL AND firstNHL = '2011'
hockey,Which year recorded the most number of goals by a player and how old was the player at the time the most number of goals was achieved by him?,"most number of goals refers to max(G); how old refers to age = subtract(year(max(G)), birthYear)","SELECT T1.year, T1.year - T2.birthYear FROM Scoring AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID GROUP BY T1.year, T1.year - T2.birthYear ORDER BY SUM(T1.G) DESC LIMIT 1"
hockey,What is the average height of all the goalies born in the 70s who's a left shooting/catching dominant and to which team do the tallest player/s play for most recently?,goalies refers to pos = 'G'; born in the 70s refers to birthYear between '1970' and '1979'; left shooting/catching dominant refers to shootCatch = 'L'; tallest refers to max(height); average height = avg(height(pos = 'G' & birthYear between '1970' and '1979' & shootCatch = 'L')); most recently refers to max(Teams.year),SELECT CAST(SUM(T2.height) AS REAL) / COUNT(*) FROM AwardsPlayers AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T2.height IS NOT NULL AND (T2.pos = 'LW' OR T2.pos = 'L/C')
hockey,What is the total amount of assists of the NHL player with the most assists in history? Please indicate his/her full name.,NHL refers to lgID = 'NHL'; most assists refers to max(A); full name = nameGiven + lastName; total amount of assists = sum(A(playerID(max(A)))),"SELECT SUM(T1.A), T2.firstName, T2.lastName FROM Scoring AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T1.lgID = 'NHL' GROUP BY T2.firstName, T2.lastName ORDER BY SUM(T1.A) DESC LIMIT 1"
hockey,What is the power play percentage of the team with the least number of penalty kill chances and to which team were they playing against? Indicate whether the team lost or victorious.,"least number of penalty kill chances refers to min(PKC); power play percentage refers to (PP%) = divide(PPG, PPC); team playing refers to tmID; victorious team refers to tmIDWinner; team victorious refers to tmID = tmIDWinner and vice versa","SELECT SUM(T1.A), T2.firstName, T2.lastName FROM Scoring AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T1.lgID = 'NHL' GROUP BY T2.firstName, T2.lastName ORDER BY SUM(T1.A) DESC LIMIT 1"
hockey,What are the awards won by the coach who coached the team with the most number of victories of all time? Indicate the choach ID.,victories' and 'wins' are synonyms; most number of victories refers to max(w),"SELECT DISTINCT T2.coachID, T1.award FROM AwardsCoaches AS T1 INNER JOIN Coaches AS T2 ON T1.coachID = T2.coachID GROUP BY T2.coachID, T1.award ORDER BY SUM(T2.w) DESC LIMIT 1"
hockey,What is the name of the losing team during an exhibition game in 1912?,exhibition game refers to note = 'EX'; team of losing team refers to tmIDLoser,SELECT T2.name FROM SeriesPost AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND tmIDLoser = tmID WHERE T1.note = 'EX' AND T2.year = '1912'
hockey,How long has the NHL player been playing during the year when he recorded the least number of times being on the ice when a goal is scored for the team versus against the team? Indicate his full name.,"NHL refers to lgID = 'NHL'; least number of times being on the ice when a goal is scored for the team versus against the team refers to min(+/-); duration the player's been playing = subtract(year(playerID(min(+/-))), firstNHL(playerID(min(+/-)))); full name = nameGiven + lastName","SELECT DISTINCT T3.firstNHL - T1.year, T3.nameGiven , T3.firstName, T3.lastName FROM Scoring AS T1 INNER JOIN Teams AS T2 ON T2.tmID = T1.tmID INNER JOIN Master AS T3 ON T1.playerID = T3.playerID GROUP BY T3.firstName, T3.lastName, T3.nameGiven, T3.firstNHL - T1.year, T3.firstName, T3.lastName ORDER BY SUM(T1.`+/-`) ASC LIMIT 1"
hockey,"Between 2003 to 2005, what are the given names of the players with the most number of games played whose Penalty minutes is between 200 to 250?",penalty minutes refers to PIM; year of scoring BETWEEN 2003 AND 2005; most number of games played refers to max(GP),SELECT T2.nameGiven FROM Scoring AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID AND T1.PIM BETWEEN 200 AND 250 AND T1.year BETWEEN 2003 AND 2005 ORDER BY T1.GP DESC LIMIT 1
hockey,How old was the goaltender who scored the fewest goals while on the ice when he retired from the NHL?,"goaltender' and 'goalie' are synonyms; fewest goals while on the ice refers to min(GA); How old = subtract(lastNHL(playerID(min(GA))), birthYear(playerID(min(GA)))))","SELECT T2.lastNHL - T2.birthYear FROM GoaliesSC AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T2.lastNHL IS NOT NULL GROUP BY T2.lastNHL, T2.birthYear ORDER BY SUM(GA) LIMIT 1"
hockey,Which position has won the most awards and who is the most recent player that was awarded with an award in that position? Indicate the name of the award and the full name of the player.,position has won the most awards refers to pos(max(count(award))); most recent player refers to playerID(pos(max(count(award)))& max(year)); full name = nameGiven + lastName,"SELECT T1.pos, T2.award, T1.nameGiven, T1.lastName FROM Master AS T1 INNER JOIN AwardsCoaches AS T2 ON T2.coachID = T1.coachID GROUP BY T1.pos, T2.award, T1.nameGiven, T1.lastName ORDER BY COUNT(T2.award) LIMIT 1"
hockey,How many games did the coach who received the first-ever Second Team All-Star award play before receiving such award?,first-ever Second Team All-Star award refers to min(year(award = 'Second Team All-Star')); How many games before receiving such award = sum(g(coachID(min(year(award = 'Second Team All-Star')))): g(min(year))),"SELECT SUM(T1.g) FROM Coaches AS T1 INNER JOIN ( SELECT coachID, year FROM AwardsCoaches WHERE award = 'Second Team All-Star' ORDER BY year LIMIT 1 ) AS T2 ON T1.coachID = T2.coachID AND T1.year < T2.year"
hockey,"How many teams did the team with the most victories in 1915 play against?
Indicate the name of the team who won the most games in 1915, as well as the names of the opposing team.",team playing refers to tmID; oppositng team refers to oppID; victories' and 'wins' are synonyms; most victories refers to max(w),"SELECT COUNT(DISTINCT oppID), T2.tmID, T2.oppID FROM Teams AS T1 INNER JOIN TeamVsTeam AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID WHERE T2.year = 1915 GROUP BY T2.tmID, T2.oppID ORDER BY SUM(T2.W) DESC LIMIT 1"
hockey,"Among the teams whose shorthanded goals are between 1 to 5, which player is the most trustworthy in the critical moment?",shorthanded goals refers to SHG; SHG BETWEEN 1 AND 5; most trustworthy in the critical moment refers to max(GWG),"SELECT T2.nameGiven, T2.lastName FROM Scoring AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T1.SHG BETWEEN 1 AND 5 ORDER BY T1.GWG DESC LIMIT 1"
hockey,"In 1997, how many loss did the coach have who temporary coached Tampa Bay Lightning? Indicate his/her coach ID.",temporary coached refers to notes = 'interim'; number of loss refers to L (to add),"SELECT SUM(T1.l), T1.coachID FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.notes = 'interim' AND T1.year = '1997' AND T2.name = 'Tampa Bay Lightning' GROUP BY T1.coachID"
hockey,"Among the players whose short handed assists are greater or equal to 7, what is the final standing of the team with the most number of assists? Indicate the year to which the most number of assists was achieved and the name of the team.","short handed assists refers to SHA; SHA> = 7; final standing refers to rank; the final standing of the team with the most number of assists refers to max(A)
","SELECT T2.rank, T2.year, T2.name FROM Scoring AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.SHA >= 7 ORDER BY T1.A DESC LIMIT 1"
hockey,What is the name of the coach whose team placed 4th in the 1969 game? Indicate their coachID.,name of coach refers to coachID; placed 4th refers to rank = 4; 1969 game refers to year = 1969,SELECT T1.coachID FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = 1969 AND T2.rank = 4
hockey,"Between 1917 to 1920, what are the names of the team who ranked first in the first half of the season each year?",year BETWEEN 1917 AND 1920; first half of season refers to half = 1,SELECT DISTINCT T2.name FROM TeamsHalf AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.half = 1 AND T1.rank = 1 AND T1.year BETWEEN 1917 AND 1920
hockey,"How many Canadian players, between the ages of 18 and 24 when they initially played their first NHL, had a cumulative goal total of no more than 5? Indicate their complete names, the year, and the team for which they scored the specified amount of goals.","Canadian players mean player whose birthCountry = Canada; ages of 18 and 24 refers to SUBTRACT(firstNHL, birthYear) BETWEEN 18 AND 24; cumulative goal total of no more than 5 refers to G < 5; complete name = nameGiven + lastName","SELECT T2.nameGiven, T2.lastName, T2.birthYear, birthMon, birthDay , T3.tmID FROM Scoring AS T1 INNER JOIN Master AS T2 ON T2.playerID = T1.playerID INNER JOIN Teams AS T3 ON T3.tmID = T1.tmID WHERE (T2.firstNHL - T2.birthYear) BETWEEN 18 AND 24 AND T3.G < 5"
hockey,How many bench minor penalties did the team St. Louis Blues got in total in all the games?,,SELECT CAST(SUM(BenchMinor) AS REAL) / 2 FROM Teams WHERE name = 'St. Louis Blues'
hockey,What is the power play chances of New York Rangers in 2009?,"power play chanses = DIVIDE (PPG, PPC); name = New York Rangers; year = 2009",SELECT CAST(PPG AS REAL) / PPC FROM Teams WHERE year = 2009 AND name = 'New York Rangers'
hockey,What is the highest total points a team got in a year?,the highest total points = MAX(Pts),"SELECT SUM(Pts), year FROM Teams GROUP BY year, tmID ORDER BY SUM(Pts) DESC LIMIT 1"
hockey,"Among the teams that had more wins than loses in the year 2006, how many of them have over 100 points?",more wins than loses refers to W > L; over 100 points refers to Pts > 100,SELECT COUNT(tmID) FROM Teams WHERE year = 2006 AND W > L AND Pts > 100
hockey,Which team got the most bench minor penalties in 2006?,team refers to name; year = 2006,"SELECT name FROM Teams WHERE year = 2006 GROUP BY tmID, name ORDER BY CAST(SUM(BenchMinor) AS REAL) / 2 DESC LIMIT 1"
hockey,Please list the first 3 teams that got the most penalty minutes in 2006.,the first 3 teams that got the most penalty minutes refer to name where MAX(PIM) limit to 3; year = 2006;,"SELECT name FROM Teams WHERE year = 2006 GROUP BY tmID, name ORDER BY SUM(PIM) DESC LIMIT 3"
hockey,"Which team had the highest penalty kill chances in 1995, Florida Panthers, Edmonton Oilers or Los Angeles Kings?",the highest penalty kill chances refer to MAX(PKC); year = 1995;,"SELECT name FROM Teams WHERE year = 1995 AND name IN ('Florida Panthers', 'Edmonton Oilers', 'Los Angeles Kings') ORDER BY PKC DESC LIMIT 1"
hockey,What is the name of the team that got more wins than loses in the Stanley Cup finals in 1917?,more wins than loses refers to W>L; year = 1917;,SELECT T2.name FROM TeamsSC AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = '1917' AND T1.W > T1.L
hockey,Please list the teams that have played in 1922's Stanley Cup finals.,teams refer to tmID; year = 1922;,SELECT T2.name FROM TeamsSC AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = '1922'
hockey,"Among the teams that played in 1922's Stanley Cup finals, how many of them had over 20 points in that year?",how many teams refer to COUNT(tmID); over 20 points refer to Pts>20; year = 1922;,SELECT COUNT(T1.tmID) FROM TeamsSC AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = '1922' AND T2.Pts > 20
hockey,What were the penalty minutes in 1923's Stanley Cup finals of the team that ranked second in that year?,teams refer to tmID; year = 1922; ranked second refers to rank = 2; penalty minutes refer to PIM;,SELECT T1.PIM FROM TeamsSC AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = '1923' AND T2.rank = 2
hockey,Which team got the most wins in the Stanley Cup finals?,team refers name; most wins = MAX(W);,SELECT T2.name FROM TeamsSC AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year GROUP BY T2.name ORDER BY SUM(T1.W) DESC LIMIT 1
hockey,How many wins did the Philadelphia Flyers have over the Boston Bruins in 1985?,Philadelphia Flyers is name of team playing; Boston Bruins is name of opposing team where oppID = 'BOS'; year = 1985; wins refer to W;,SELECT T1.W FROM TeamVsTeam AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = 1985 AND T1.tmID = ( SELECT DISTINCT tmID FROM Teams WHERE name = 'Philadelphia Flyers' ) AND T1.oppID = ( SELECT DISTINCT tmID FROM Teams WHERE name = 'Boston Bruins' )
hockey,Please list the names of the teams that had a tie in 1909.,tie refers to T>0; year = 1909;,"SELECT T2.name, T3.name FROM TeamVsTeam AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year INNER JOIN Teams AS T3 ON T1.year = T3.year AND T1.oppID = T3.tmID WHERE T1.year = 1909 AND T1.T = 1"
hockey,Please list the first names of the coaches who have taught the Montreal Canadiens.,Montreal Canadiens is the name of team.,SELECT DISTINCT T3.firstName FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID INNER JOIN Master AS T3 ON T1.coachID = T3.coachID WHERE T2.name = 'Montreal Canadiens'
hockey,How many coaches of the Montreal Canadiens have gotten in the Hall of Fame?,"have gotten in the Hall of Fame means hofID is not NULL;

Montreal Canadiens is the name of team.",SELECT COUNT(DISTINCT hofID) FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID INNER JOIN Master AS T3 ON T1.coachID = T3.coachID WHERE T2.name = 'Montreal Canadiens'
hockey,Please give the height of the tallest coach of the Montreal Canadiens.,the tallest refers to MAX(height); Montreal Canadiens is the name of team;,SELECT T3.height FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID INNER JOIN Master AS T3 ON T1.coachID = T3.coachID WHERE T2.name = 'Montreal Canadiens' AND T3.coachID IS NOT NULL ORDER BY T3.height DESC LIMIT 1
hockey,Please list the first names of the coaches whose team played in 1922's Stanley Cup finals.,teams refer to tmID; year = 1922;,SELECT T3.firstName FROM Coaches AS T1 INNER JOIN TeamsSC AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID INNER JOIN Master AS T3 ON T1.coachID = T3.coachID WHERE T2.year = 1922
hockey,"Among the coaches who have taught the Philadelphia Flyers, how many of them are born in March?",born in March refers to birthMon = 3; Philadelphia Flyers is the name of team;,SELECT COUNT(DISTINCT T3.coachID) FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID INNER JOIN Master AS T3 ON T1.coachID = T3.coachID WHERE T2.name = 'Philadelphia Flyers' AND T3.birthMon = 3
hockey,"Among the coaches who are born in the USA, how many of them used to train the Philadelphia Flyers?",born in the USA refers to birthCountry = 'USA'; Philadelphia Flyers is the name of team;,SELECT COUNT(DISTINCT T3.coachID) FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID INNER JOIN Master AS T3 ON T1.coachID = T3.coachID WHERE T2.name = 'Philadelphia Flyers' AND T3.birthCountry = 'USA'
hockey,How many coaches who have taught the Buffalo Sabres have died?,have died means deathYear is not NULL; Buffalo Sabres is the name of team;,SELECT COUNT(DISTINCT T3.coachID) FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID INNER JOIN Master AS T3 ON T1.coachID = T3.coachID WHERE T2.name = 'Buffalo Sabres' AND T3.deathYear IS NOT NULL
hockey,Please list the nick names of the coaches who are from the USA and have taught the Buffalo Sabres.,from the USA refers to birthCountry = 'USA'; nick names of the coaches refer to nameNick where coachID is not NULL ; Buffalo Sabres is the name of team;,SELECT DISTINCT nameNick FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID INNER JOIN Master AS T3 ON T1.coachID = T3.coachID WHERE T2.name = 'Buffalo Sabres' AND T3.birthCountry = 'USA'
hockey,"Among the coaches who taught the teams in 1922's Stanley Cup finals, how many of them are from the USA?",from the USA refers to birthCountry = 'USA'; year = 1922;,SELECT COUNT(DISTINCT T3.coachID) FROM Coaches AS T1 INNER JOIN TeamsSC AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID INNER JOIN Master AS T3 ON T1.coachID = T3.coachID WHERE T2.year = 1922 AND T3.birthCountry = 'USA'
hockey,"In the year 2000, which team has played the most games against the Buffalo Sabres?",which team played the most games against refers to oppID where MAX(SUM(G); Buffalo Sabres is the name of team;,SELECT T3.name FROM TeamVsTeam AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND T1.oppID = T2.tmID INNER JOIN Teams AS T3 ON T1.year = T3.year AND T1.tmID = T3.tmID WHERE T1.year = 2000 AND T2.name = 'Buffalo Sabres' GROUP BY T3.name ORDER BY SUM(T2.G) DESC LIMIT 1
hockey,Please list the names of all the teams that have played against the Buffalo Sabres.,teams that have played against refer to oppID; Buffalo Sabres is the name of team;,SELECT DISTINCT T3.name FROM TeamVsTeam AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND T1.oppID = T2.tmID INNER JOIN Teams AS T3 ON T1.year = T3.year AND T1.tmID = T3.tmID WHERE T2.name = 'Buffalo Sabres'
hockey,How many penalty minutes did the Montreal Canadiens have in the 1918's Stanley Cup Finals?,penalty minutes refer to PIM; year = 1918; Montreal Canadiens is name of team;,SELECT T2.PIM FROM Teams AS T1 INNER JOIN TeamsSC AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.name = 'Montreal Canadiens' AND T1.year = 1918
hockey,"In the year that the Montreal Canadiens had 24 penalty minutes in the Stanley Cup finals, how many wins did the team had in total?",penalty minutes refer to PIM = 24; wins refer to W;,SELECT T2.W FROM Teams AS T1 INNER JOIN TeamsSC AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.name = 'Montreal Canadiens' AND T2.PIM = 24
hockey,"In which year did the Montreal Canadiens have 49 penalty minutes in the Stanley Cup finals? Was it 1924, 1923 or 1918?",penalty minutes refer to PIM = 49;,SELECT T1.year FROM Teams AS T1 INNER JOIN TeamsSC AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.name = 'Montreal Canadiens' AND T2.PIM = 49
hockey,"Which coach was the first one to teach the Montreal Canadiens, please give his first name.",the first one refers to MIN(year);,SELECT T3.firstName FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year INNER JOIN Master AS T3 ON T1.coachID = T3.coachID WHERE T2.name = 'Montreal Canadiens' ORDER BY T1.year LIMIT 1
hockey,What is the average winning rate of the Buffalo Sabres in 2000?,"DIVIDE(SUM(DIVIDE(W,G), COUNT(oppID) where year = 2000; Montreal Canadiens is name of team;",SELECT SUM(CAST(T2.W AS REAL) / T2.G) / COUNT(T1.oppID) FROM TeamVsTeam AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID WHERE T2.name = 'Buffalo Sabres' AND T1.year = 2000
hockey,How many penalty minutes did the Montreal Canadiens have on average in the Stanley Cup Finals?,"AVG(PIM) = DIVIDE(SUM(PIM), COUNT(G)); Montreal Canadiens is name of team;",SELECT CAST(SUM(T2.PIM) AS REAL) / COUNT(T2.PIM) FROM Teams AS T1 INNER JOIN TeamsSC AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.name = 'Montreal Canadiens'
hockey,What is the average winning rate of the Montreal Canadiens in the Stanley Cup finals?,"DIVIDE(SUM(DIVIDE(W,G), COUNT(oppID);",SELECT SUM(T2.W / T2.G) / SUM(T2.G + T2.W) FROM Teams AS T1 INNER JOIN TeamsSC AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.name = 'Montreal Canadiens'
hockey,What is the percentage of American coaches among all the coaches who taught the Montreal Canadiens?,"American refers to birthCountry = 'USA'; DIVIDE(COUNT(coachID where birthCountry = 'USA', name` = 'Montreal Canadiens'), COUNT(coachID where name` = 'Montreal Canadiens')) as percentage;",SELECT SUM(CAST(T2.W AS REAL) / T2.G) / SUM(T2.G + T2.W) FROM Teams AS T1 INNER JOIN TeamsSC AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.name = 'Montreal Canadiens'
hockey,Who was the latest non player/builder to become the hall of famer? Give the full name.,"latest refers to MAX(year); non player/builder refers to category = NOT IN ('player', 'builder');","SELECT name FROM HOF WHERE category IN ('Player', 'Builder') ORDER BY year DESC LIMIT 1"
hockey,"For all the referees, who became a hall of famer in the 1970s? What's his hofID?",1970s refers to year between 1970 and 1979; referees stand for category;,"SELECT name, hofID FROM HOF WHERE category = 'Builder' AND year BETWEEN 1970 AND 1979"
hockey,"In the year 1958, what is the total number of players that became hall of famers?",hall of famers refers to hofID; players stand for category;,SELECT COUNT(hofID) FROM HOF WHERE category = 'Player' AND year = 1958
hockey,How many hall of famers both played and coached in the league?,hall of famers refers to hofID; both played and coached means playerID is not NULL and coachID is not NULL;,SELECT COUNT(playerID) FROM Master WHERE hofID IS NOT NULL AND playerID IS NOT NULL AND coachID IS NOT NULL
hockey,What is the number of players whose last name is Green that played in the league but not coached?,played in the league but not coached means playerID is not NULL and coachID is NULL;,SELECT COUNT(playerID) FROM Master WHERE lastName = 'Green' AND coachID IS NULL
hockey,"For the team that Scotty Bowman coached in 1982, how many bench minor penalties did they have that year?",bench minor penalties refer to BenchMinor; Scotty Bowman is a coach; year = 1982;,SELECT T2.BenchMinor FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID INNER JOIN Master AS T3 ON T1.coachID = T3.coachID WHERE T3.firstName = 'Scotty' AND T3.lastName = 'Bowman' AND T1.year = 1982
hockey,"Among the players who had 10 empty net goals in their career, who is the tallest? Show his full name.",10 empty net goals refer to ENG = 10; tallest refers to MAX(height);,"SELECT T2.firstName, T2.lastName FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T1.ENG = 10 ORDER BY T2.height DESC LIMIT 1"
hockey,Which was the dominant hand for the goaltender who played 32 games for QUN in 1973? Give the full name.,the dominant hand refers to shootCatch; year = 1973; tmID = 'QUN'; played 32 games refers to GP = 32;,"SELECT T2.shootCatch, T2.firstName, T2.lastName FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID AND T1.year = 1973 WHERE T1.tmID = 'QUN' AND T1.GP = 32"
hockey,"For the goalie whose last name is ""Young"", how many teams did he play in?",goalie is a players; teams refer to tmID;,SELECT COUNT(DISTINCT T1.tmID) FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T2.lastName = 'Young'
hockey,"For the goalkeeper that became a coach than a Hall of Famer, who played for BOS in 1972?",BOS refers to tmID = 'BOS'; year = 1972; became a coach than a Hall of Famer means coachID is not NULL and hofID is NULL;,"SELECT T2.firstName, T2.lastName , IIF(T1.tmID = 'BOS', 'YES', 'NO') FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T1.year = 1972 AND T1.tmID = 'BOS' AND T2.coachID IS NOT NULL AND T2.hofID IS NULL"
hockey,"For the goalie whose legendsID is ""P196402"" , how many games did he play in the league?",,SELECT SUM(T1.GP) FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T2.legendsID = 'P196402'
hockey,"In the history of all the Quebec Bulldogs, which goalie had the most play minutes for the team? Give the full name.",the most play minutes refer to MAX(Min); goalie refers to pos = 'G'; New York Islanders is the nameof team;,"SELECT T2.firstName, T2.lastName FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID INNER JOIN Teams AS T3 ON T1.tmID = T3.tmID AND T1.year = T3.year WHERE T3.name = 'Quebec Bulldogs' AND T2.pos = 'D' GROUP BY T1.playerID, T2.firstName, T2.lastName ORDER BY SUM(T1.Min) DESC LIMIT 1"
hockey,How many goalies played for Calgary Flames?,Calgary Flames is the name of team;,SELECT COUNT(DISTINCT playerID) FROM Goalies AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T2.name = 'Calgary Flames'
hockey,Which Minnesota North Stars' goalkeeper had the most Goal Againsts in his play time?,Goals Against are the number of goals recorded while the goalie is on the ice; the most Goal Againsts refers to MAX(GA); Minnesota North Stars is name of team;,SELECT playerID FROM Goalies AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T2.name = 'Minnesota North Stars' GROUP BY T1.playerID ORDER BY SUM(T1.GA) DESC LIMIT 1
hockey,How many Haileybury Hockey Club goalies became a hall of famer?,hall of famers refers to hofID where playerID is not NULL;,SELECT COUNT(DISTINCT T1.playerID) FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID INNER JOIN Teams AS T3 ON T1.tmID = T3.tmID AND T1.year = T3.year WHERE T3.name = 'Haileybury Hockey Club' AND T2.hofID IS NOT NULL
hockey,"For the goalie who had the most shutouts in 2010, what's his catching hand?",the most shutouts refer to MAX(SHO); catching hand refers to shootCatch; year = 2010;,SELECT T2.shootCatch FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T1.year = 2010 GROUP BY T2.shootCatch ORDER BY SUM(T1.SHO) DESC LIMIT 1
hockey,What's the decrease rate of the game plays did David Aebischer after he got traded in 2005?,"DIVIDE(SUBTRACT(SUM(GP(year = 2005), SUM(GP(year = 2006)), SUM(GP(year = 2005)) as percentage;",SELECT CAST((SUM(CASE WHEN T1.year = 2005 THEN T1.GP ELSE 0 END) - SUM(CASE WHEN T1.year = 2006 THEN T1.GP ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T1.year = 2005 THEN T1.GP ELSE 0 END) FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T2.firstName = 'David' AND T2.lastName = 'Aebischer'
hockey,State the player ID and coach ID of person who have become coach after retirement.,after retirement means playerID Iis not NULL and coachID is not NULL;,"SELECT playerID, coachID FROM Master WHERE playerID IS NOT NULL AND coachID IS NOT NULL"
hockey,State the player ID of player with average height of 75.,average height of 75 refers to AVG(height) = 75;,SELECT DISTINCT playerID FROM Master GROUP BY playerID HAVING AVG(height) = 75
hockey,Who is the heaviest player? State player ID of 5 heaviest players.,5 heaviest players refer to MAX(weight) limit to 5 playerID;,SELECT playerID FROM Master ORDER BY weight DESC LIMIT 5
hockey,What is the full name of players origin from Finland?,origin from Finland refers to birthCountry = 'Finland';,"SELECT DISTINCT firstName, lastName FROM Master WHERE birthCountry = 'Finland'"
hockey,List down player ID of players who have passed away.,passed away means deathYear is not NULL;,SELECT DISTINCT playerID FROM Master WHERE deathYear IS NOT NULL AND playerID IS NOT NULL
hockey,List down the first name of coaches who still coach after year 2000.,after year 2000 refers to year>2000;,SELECT DISTINCT T1.firstName FROM Master AS T1 INNER JOIN Coaches AS T2 ON T1.coachID = T2.coachID WHERE T2.year > 2000
hockey,What is the height and weight for coaches who have won awards in 1930?,year = 1930;,"SELECT T1.height, T1.weight FROM Master AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.coachID = T2.coachID WHERE T2.year = '1930'"
hockey,How much is the total goals for player with player ID aaltoan01 and how old is this person?,"total goals refer to SUM(G); how old = SUBTRACT(YEAR(CURDATE, birthYear);","SELECT SUM(T2.G), STRFTIME('%Y', CURRENT_TIMESTAMP) - T1.birthyear FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T1.playerID = 'aaltoan01' GROUP BY T1.birthyear"
hockey,Is there any coach who has not been a player before but has won award? State the ID.,coach who has not been a player means playerID is NULL and coachID is not NULL;,SELECT DISTINCT T2.coachID FROM Master AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.coachID = T2.coachID WHERE T1.playerID IS NULL
hockey,Which player ID are left winger and weight more than 200?,left winger refers to pos = 'L'; weight>200,SELECT DISTINCT playerID FROM Master WHERE pos LIKE '%L%' AND weight > 200 AND playerID IS NOT NULL AND pos = 'L'
hockey,What is the total number of game played for players from USA?,game played refers to GP; from USA refers to birthCountry = 'USA';,SELECT COUNT(T2.GP) FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T1.birthCountry = 'USA'
hockey,Calculate the total points scored by team ID ANA and list down the coashes of the team.,points scored refers to Pts; team ID refers to tmID;,"SELECT SUM(T2.Pts), T1.coachID FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T2.tmID = T1.tmID WHERE T2.tmID = 'ANA' GROUP BY T1.coachID"
hockey,"In 1976, how many goals achieved by team 'BIR' in Division 'EW'?",year = 1976; BIR refers to tmID; Division 'EW' refers to divID = 'EW'; goals = G;,SELECT SUM(T2.G) FROM Teams AS T1 INNER JOIN Scoring AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.divID = 'EW' AND T1.tmID = 'BIR' AND T1.year = 1976
hockey,"In 2010, how many loses made by team 'BOS' and how many assists were made by the players?",year = 2010; BOS refers to tmID; loses refer to L; assists refer to A;,"SELECT SUM(T1.L), SUM(T2.A) FROM Teams AS T1 INNER JOIN Scoring AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.tmID = 'BOS' AND T1.year = 2010"
hockey,What are the total weights of players for team 'ANA' as per year 1997?,ANA refers to tmID;,SELECT SUM(T1.weight) FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 1997 AND T2.tmID = 'ANA'
hockey,Who is the shortest player and state the team ID of that player from 1925 to 1936.,Shortest refers to MIN(height); from 1925 to 1936 refers to year between 1925 and 1936;,"SELECT T2.playerID, T2.tmID FROM ( SELECT playerID FROM Master WHERE height IS NOT NULL ORDER BY height ASC LIMIT 1 ) AS T1 INNER JOIN ( SELECT DISTINCT playerID, tmID FROM Scoring WHERE year BETWEEN 1925 AND 1936 ) AS T2 ON T1.playerID = T2.playerID"
hockey,Which team has the highest winning rate in year 2000? State the team ID and list down the birth country of it's players.,"MAX(DIVIDE(COUNT(W), SUM(COUNT(W), (COUNT (L)) where year = 2000;","SELECT DISTINCT T3.tmID, T1.birthCountry FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID INNER JOIN ( SELECT year, tmID FROM Teams WHERE year = 2000 ORDER BY W / (W + L) DESC LIMIT 1 ) AS T3 ON T2.tmID = T3.tmID AND T2.year = T3.year"
hockey,"In 1998, How many wins were made by team 'CAR' per game played? Who contributed the most goals? State the player ID.","year = 1998; wins per game played = DIVIDE(W, G); CAR refers to tmID; contributed the most goals refers to MAX(G);","SELECT CAST(T1.W AS REAL) / T1.G, T2.playerID FROM Teams AS T1 INNER JOIN Scoring AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.tmID = 'CAR' AND T1.year = 1998 GROUP BY T1.W / T1.G, T2.playerID ORDER BY SUM(T2.G) DESC LIMIT 1"
world,Which country has the shortest life expectancy?,shortest life expectancy refers to MIN(LifeExpectancy);,SELECT Name FROM Country ORDER BY LifeExpectancy LIMIT 1
world,List any five countries which use English as an official language.,English as an official language refers to `Language` = 'English' AND IsOfficial = 'T';,SELECT T1.Name FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' LIMIT 5
world,Calculate the average population per city in Karnataka district.,average population = AVG(Population);,SELECT AVG(Population) FROM City WHERE District = 'Karnataka' GROUP BY ID
world,List the languages used in the USA.,USA refers to CountryCode = 'USA';,SELECT Language FROM CountryLanguage WHERE CountryCode = 'USA'
world,How many countries use Portuguese?,Portuguese refers to `Language` = 'Portuguese';,SELECT SUM(CASE WHEN Language = 'Portuguese' THEN 1 ELSE 0 END) FROM CountryLanguage
world,How many cities are there in England?,England refers to District = 'England';,SELECT COUNT(ID) FROM City WHERE District = 'England'
world,How many cities are there in the country with the largest surface area?,largest surface area refers to MAX(SurfaceArea);,SELECT T2.ID FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T1.SurfaceArea = ( SELECT MAX(SurfaceArea) FROM Country )
world,What is the capital city and population of San Marino?,capital city refers to Capital; San Marino is a name of country;,"SELECT T1.Capital, T2.Population FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'San Marino'"
world,List the languages used in Turkmenistan.,Turkmenistan is a name of country;,SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Turkmenistan'
world,"Provide the name, capital city and its official language of the country with the highest life expectancy.",capital city refers to Capital; official language refers to IsOfficial = 'T'; highest life expectancy refers to MAX(LifeExpectancy);,"SELECT T1.Name, T1.Capital, T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode INNER JOIN City AS T3 ON T1.Code = T3.CountryCode WHERE T2.IsOfficial = 'T' ORDER BY T1.LifeExpectancy DESC LIMIT 1"
world,List the countries and their official languages in Antarctica.,official language refers to IsOfficial = 'T'; Antarctica refers to Continent = 'Antarctica';,"SELECT T1.Name, T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Antarctica' AND T2.IsOfficial = 'T'"
world,List any five countries which use English as an official language.,English as an official language refers to `Language` = 'English' AND IsOfficial = 'T';,SELECT T1.Name FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' LIMIT 5
world,"Among the languages used in Baltic Countries, provide the languages which are used by over 80%.

",Baltic Countries refers to Region = 'Baltic Countries'; languages which are used by over 80% refers to Percentage > 80;,SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Region = 'Baltic Countries' AND T2.Percentage > 80
world,"Among the languages used in Baltic Countries, provide the languages which are used by over 80%.",Baltic Countries refers to Region = 'Baltic Countries'; languages which are used by over 80% refers to Percentage > 80;,SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Region = 'Baltic Countries' AND T2.Percentage > 80
world,"Provide the name, located country, and life expectancy of the most populated city",most populated city refers to MAX(Population);,"SELECT T2.Name, T1.Code, T1.LifeExpectancy FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode ORDER BY T2.Population DESC LIMIT 1"
world,Describe the capital city and languages used in the country with the shortest life expectancy.,capital city refers to Capital; shortest life expectancy refers to MIN(LifeExpectancy);,"SELECT T1.Capital, T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode INNER JOIN City AS T3 ON T1.Code = T3.CountryCode ORDER BY T1.LifeExpectancy LIMIT 1"
world,"Provide the country, population, capital city, and official language of the country with the smallest surface area.",capital city refers to Capital; official language refers to IsOfficial = 'T'; smallest surface area refers to MIN(SurfaceArea);,"SELECT T1.Name, T1.Population, T1.Capital, T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode INNER JOIN City AS T3 ON T1.Code = T3.CountryCode WHERE T2.IsOfficial = 'T' ORDER BY T1.SurfaceArea LIMIT 1"
world,How many percent of countries in North America use English?,"percentage = MULTIPLY(DIVIDE(COUNT(Language = 'English' WHERE Continent = 'North America'), COUNT(Language WHERE Continent = 'North America')), 1.0); North America refers to Continent = 'North America'; use English refers to Language = 'English';","SELECT CAST(SUM(IIF(T2.Language = 'English', 1, 0)) AS REAL) * 100 / COUNT(T1.Code) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode"
world,List the district name of the city with the smallest population.,smallest population refers to MIN(Population);,SELECT District FROM City ORDER BY Population LIMIT 1
world,In which continent does the country with the smallest surface area belongs?,smallest surface area refers to MIN(smallest surface area);,SELECT Continent FROM Country ORDER BY SurfaceArea LIMIT 1
world,Who is the head of the state where the most crowded city belongs?,head of the state refers to HeadOfState; most crowded city refers to MAX(Population);,SELECT T1.HeadOfState FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode ORDER BY T2.Population DESC LIMIT 1
world,"Among the countries that officially use the English language, what country has the highest capital?",officially use the English language refers to `Language` = 'English' AND IsOfficial = 'T'; highest capital refers to MAX(Capital);,SELECT T1.Code FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' ORDER BY T1.Capital DESC LIMIT 1
world,List down the cities that belong to the country with a life expectancy of 66.4.,,SELECT T2.Name FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T1.LifeExpectancy = 66.4
world,Give the head of the state of the country with the lowest percentage use of English as their language.,head of the state refers to HeadOfState; lowest percentage use of English as their language refers to MIN(Percentage WHERE `Language` = 'English');,SELECT T1.HeadOfState FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T2.Percentage LIMIT 1
world,What is the surface area of the country where Sutton Coldfield city belongs?,,SELECT T1.SurfaceArea FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Sutton Coldfield'
world,List down the languages of the countries that have population below 8000.,population below 8000 refers to Population < 8000;,SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Population < 8000
world,What are the official languages used in Belgium?,official languages refers to IsOfficial = 'T'; Belgium is a name of country;,SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Belgium' AND T2.IsOfficial = 'T'
world,Give the cities and district names that belong to the country with Hajastan as its local name.,,"SELECT T2.Name, T2.District FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T1.LocalName = 'Hajastan'"
world,How many languages are used in Cyprus?,Cyprus is a name of Country;,SELECT SUM(CASE WHEN T1.Name = 'Cyprus' THEN 1 ELSE 0 END) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode
world,Provide the language used by the people of Belize.,Belize is a name of country;,SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Belize'
world,List down the districts belong to the country headed by Adolf Ogi.,headed by Adolf Ogi refers to HeadOfState = 'Adolf Ogi';,SELECT T2.District FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = 'Adolf Ogi'
world,Who is the head of the country where Santa Catarina district belongs?,head of the country refers to HeadOfState;,SELECT T1.HeadOfState FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T2.District = 'Santa Catarina'
world,"Among the countries that have GNP greater than 1500, what is the percentage of the countries have English as its language?","GNP greater than 1500 refers to GNP > 1500 ; percentage = MULTIPLY(DIVIDE(SUM(Code WHERE GNP > 1500 AND Language = 'English'), COUNT(Code WHERE GNP > 1500)) 1.0); English as its language refers to Language = 'English';","SELECT CAST(SUM(IIF(T2.Language = 'English', 1, 0)) AS REAL) * 100 / COUNT(T1.Code) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GNP > 1500"
world,"In English speaking countries, provide the difference between the number of countries with republic and constitutional monarchy as its government form.","English speaking refers to Language = 'English' ; difference = SUBTRACT(COUNT(Language = 'English' WHERE GovernmentForm = 'Republic'), COUNT(Language = 'English' WHERE GovernmentForm = 'ConstitutionalMonarchy'));",SELECT COUNT(T1.GovernmentForm = 'Republic') - COUNT(T1.GovernmentForm = 'ConstitutionalMonarchy') FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English'
world,What country declared its independence in 1994?,declared independence in 1994 refers to IndepYear = 1994;,SELECT Name FROM Country WHERE IndepYear = 1994
world,List all the countries in Asia.,Asia refers to Continent = 'Asia';,SELECT Name FROM Country WHERE Continent = 'Asia'
world,What country in Asia has the largest gross national product(GNP)?,Asia refers to Continent = 'Asia'; largest gross national product refers to MAX(GNP);,SELECT Name FROM Country WHERE Continent = 'Asia' ORDER BY GNP DESC LIMIT 1
world,How many cities are in the Philippines?,Philippines refers to CountryCode = 'PHL';,SELECT COUNT(ID) FROM City WHERE Name = 'PHL'
world,What is the local name of Ukraine that they are also known for?,Ukraine is a name of country;,SELECT LocalName FROM Country WHERE Name = 'Ukraine'
world,How many countries have Socialistic Republic form of government?,Socialistic Republic form of government refers to GovernmentForm = 'Socialistic Republic';,SELECT COUNT(Code) FROM Country WHERE GovernmentForm = 'Socialistic Republic'
world,What is the official language of China?,official language refers to IsOfficial = 'T'; China is a name of country;,SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'China' AND T2.IsOfficial = 'T'
world,How many percent of the population of China used Chinese as their language?,percent refers to Percentage; China is a name of country; use Chinese as their language refers to Language = 'Chinese';,SELECT T2.Percentage FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'China' AND T2.Language = 'Chinese'
world,What is the form of government that the city of Manila has?,form of government refers to GovernmentForm;,SELECT T1.GovernmentForm FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Manila'
world,What is the capital city of the Philippines?,capital city refers to Capital; Philippines is a name of country;,SELECT T1.Capital FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Philipiines'
world,List all the languages used in Europe.,Europe refers to Continent = 'Europe';,SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Europe'
world,Who is the head of state of the country where the city of Pyongyang is under?,,SELECT T1.HeadOfState FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Pyongyang'
world,How many unofficial languages are used in Italy?,unofficial languages refers to IsOfficial = 'F'; Italy is a name of country;,SELECT SUM(CASE WHEN T2.IsOfficial = 'F' THEN 1 ELSE 0 END) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Italy'
world,What city in Russia has the least population?,Russia is a name of country; least population refers to MIN(Population);,SELECT T2.Name FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Russian Federation' ORDER BY T2.Population ASC LIMIT 1
world,List all the cities in the country where there is high life expectancy at birth.,high life expectancy at birth refers to MAX(LifeExpectancy);,SELECT T2.Name FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode ORDER BY T1.LifeExpectancy DESC LIMIT 1
world,List all the official and unofficial languages used by the country that declared its independence in 1830.,official language refers to IsOfficial = 'T'; unofficial language refers to IsOfficial = 'F'; declared independence in 1830 refers to IndepYear = 1830;,"SELECT T2.Language, T2.IsOfficial FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear = 1830 GROUP BY T2.Language, T2.IsOfficial"
world,What is the capital city of the country with largest population?,capital city refers to Capital; largest population refers to MAX(Population);,SELECT T1.Capital FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode ORDER BY T1.Population DESC LIMIT 1
world,List all the countries in the continent of Asia that use English as their unofficial language.,use English as unofficial language refers to Language = 'English' WHERE IsOfficial = 'F';,SELECT T1.Name FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' AND T2.IsOfficial = 'F' GROUP BY T1.Name
world,Calculate the average GNP of all countries that use Arabic language.,average GNP = AVG(GNP); use Arabic language refers to Language = 'Arabic';,SELECT AVG(T1.GNP) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Arabic'
world,Calculate the percentage of the surface area of all countries that uses Chinese as one of their languages.,"percentage = DIVIDE(MULTIPLY(SUM(SurfaceArea WHERE Language = 'Chinese'), SUM(SurfaceArea)), 1.0); Chinese as one of the languages refers to Language = 'Chinese';","SELECT CAST(SUM(IIF(T2.Language = 'Chinese', T1.SurfaceArea, 0)) AS REAL) * 100 / SUM(T1.SurfaceArea) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode"
world,Which country has the smallest surface area?,smallest surface area refers to MIN(smallest surface area);,SELECT Name FROM Country ORDER BY SurfaceArea ASC LIMIT 1
world,Write down the name of the largest population country.,largest population refers to MAX(Population);,SELECT Name FROM Country ORDER BY Population DESC LIMIT 1
world,What is the language of the smallest population country?,smallest population refers to MIN(Population);,SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode ORDER BY T1.Population ASC LIMIT 1
world,List down the name of countries whereby English is their official language.,English is the official language refers to Language = 'English' AND IsOfficial = 'T';,SELECT T1.Name FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T'
world,"List down the official language of the countries which declared independence after 1990,",official lanaguage refers to IsOfficial = 'T'; declared independence after 1990 refers to IndepYear > 1990;,"SELECT T1.Name, T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear > 1990 AND T2.IsOfficial = 'T'"
world,What is the percentage of English used in Australia?,English refers to Language = 'English'; Australia is a name of country;,SELECT T2.Percentage FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Australia' AND T2.Language = 'English'
world,List down languages used in Malaysia.,Malaysia is a name of country;,SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Malaysia'
world,Which country has the most crowded city in the world?,most crowded city refers to MAX(Population);,SELECT T1.Name FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode ORDER BY T2.Population DESC LIMIT 1
world,What is the life expectancy of residents in the most crowded city?,most crowded city refers to MAX(Population);,SELECT T2.LifeExpectancy FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code ORDER BY T1.Population DESC LIMIT 1
world,What is the GNP of the least crowded city in the world?,least crowded city refers to MIN(Population);,SELECT T2.GNP FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code ORDER BY T1.Population ASC LIMIT 1
world,"Within the 5 most crowded cities in the world, which country has the most languages used?",most crowded cities refers to MAX(Population); has the most languages used refers to MAX(COUNT(Language));,"SELECT Name FROM ( SELECT T1.Name, T2.Language FROM City AS T1 INNER JOIN CountryLanguage AS T2 ON T1.CountryCode = T2.CountryCode GROUP BY T1.Name, T1.Population, T2.Language ORDER BY T1.Population DESC ) AS T3 GROUP BY t3.Name ORDER BY COUNT(Language) DESC LIMIT 1"
world,Which country has the smallest surface area and the most crowded city?,smallest surface area refers to MIN(smallest surface area); most crowded city refers to MAX(Population);,"SELECT T2.Name FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code ORDER BY T1.Population DESC, T2.SurfaceArea DESC LIMIT 1"
world,List down all cities of China.,China is a name of country;,SELECT T1.Name FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Name = 'China'
world,"What are the cities for country called ""Â´Uman"" in local name.",,SELECT T1.Name FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.LocalName = 'Â´Uman'
world,What is the average life expentancy of countries that speak Arabic?,average life expectancy = AVG(LifeExpectancy); speak Arabic refers to `Language` = 'Arabic';,SELECT AVG(T1.LifeExpectancy) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Arabic'
world,What is the GNP growth rate by the country of Shanghai?,"GNP growth rate = DIVIDE(SUBTRACT(GNP, GNPOld), GNPOld); Shanghai is a name of city;",SELECT CAST((T1.GNP - T1.GNPOld) AS REAL) / T1.GNPOld FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Shanghai'
world,What is the district of Zaanstad?,Zaanstad is a name of city;,SELECT District FROM City WHERE name = 'Zaanstad'
world,What city has the highest population?,highest population refers to MAX(Population);,SELECT Name FROM City ORDER BY Population DESC LIMIT 1
world,Provide the district of the city with a population of 201843.,,SELECT District FROM City WHERE population = 201843
world,What country has the largest surface area?,largest surface area refers to MAX(SurfaceArea);,SELECT Name FROM Country ORDER BY SurfaceArea DESC LIMIT 1
world,How many countries have a life expectancy of 75.1?,,SELECT COUNT(*) FROM Country WHERE LifeExpectancy = 75.1
world,What is the year of independence of Brunei?,year of independence refers to IndepYear; Brunei is a name of country;,SELECT IndepYear FROM Country WHERE Name = 'Brunei'
world,How many countries have no GNP?,no GNP refers to GNP = 0;,SELECT COUNT(*) FROM Country WHERE GNP = 0
world,What is the average surface area of all countries?,average surface area = AVG(SurfaceArea);,SELECT AVG(SurfaceArea) FROM Country
world,How many languages are there in the country where Tocantins district belongs?,,SELECT COUNT(DISTINCT T2.Language) FROM City AS T1 INNER JOIN CountryLanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.District = 'Tocantins'
world,What are the districts that belong to the country with the largest surface area?,largest surface area refers to MAX(SurfaceArea);,SELECT T1.District FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Name = ( SELECT Name FROM Country ORDER BY SurfaceArea DESC LIMIT 1 )
world,How many cities are there in the country ruled by Kostis Stefanopoulos?,ruled by Kostis Stefanopoulos refers to HeadOfState = 'Kostis Stefanopoulos';,SELECT COUNT(DISTINCT T1.Name) FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.HeadOfState = 'Kostis Stefanopoulos'
world,What are the official languages used in Greece?,official language refers to IsOfficial = 'T'; Greece is a name of country;,SELECT T1.Language FROM CountryLanguage AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.IsOfficial = 'T' AND T2.name = 'Greece'
world,Give the population of the country where Queimados city belongs.,,SELECT T2.Population FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Queimados'
world,What are the official languages of the country where you can find the city with the least population?,official language refers to IsOfficial = 'T'; least population refers to MIN(Population);,SELECT T2.Language FROM City AS T1 INNER JOIN CountryLanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.IsOfficial = 'T' ORDER BY T1.Population ASC LIMIT 1
world,What is the surface area and GNP of the country where Namibe district belongs?,,"SELECT T2.SurfaceArea, T2.GNP FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.District = 'Namibe'"
world,List the names of the country that officially uses English as their language.,officially uses English as their language refers to `Language` = 'English' AND IsOfficial = 'T';,SELECT T2.Name FROM CountryLanguage AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.IsOfficial = 'T' AND T1.Language = 'English'
world,What are the districts that belong to the country with the lowest surface area?,lowest surface area refers to MIN(SurfaceArea);,SELECT T1.District FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code ORDER BY T2.SurfaceArea ASC LIMIT 1
world,List down the country names of countries that have a GNP lower than 1000 and have Dutch as their language.,GNP lower than 1000 refers to GNP < 1000; Dutch as their language refers to `Language` = 'Dutch';,SELECT T2.Name FROM CountryLanguage AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.GNP < 1000 AND T1.IsOfficial = 'T' AND T1.Language = 'Dutch'
world,"What is the GNP of the country where district ""Entre Rios"" belongs?",,SELECT T2.GNP FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.District = 'Entre Rios' LIMIT 1
world,"What is the local name of the country where ""The Valley"" city belongs?",,SELECT T2.LocalName FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'The Valley'
world,List down the cities belongs to the country that has surface area greater than 7000000.,surface area greater than 7000000 refers to SurfaceArea > 7000000;,"SELECT T2.Name, T1.Name FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.SurfaceArea > 7000000"
world,What is the life expectancy of the countries that uses Japanese as their language?,uses Japanese as their language refers to `Language` = 'Japanese';,SELECT AVG(T2.LifeExpectancy) FROM CountryLanguage AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Japanese'
world,How many cities are there in the country with the surface area of 652090?,,"SELECT T2.Name, COUNT(T1.Name) FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.SurfaceArea = 652090 GROUP BY T2.Name"
world,List down the languages of countries with an independence year between 1980 to 1995.,independence year between 1980 to 1995 refers to IndepYear BETWEEN 1980 AND 1995;,"SELECT T2.Name, T1.Language FROM CountryLanguage AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear BETWEEN 1980 AND 1995"
world,What is the life expectancy of the people living in Calama city?,,SELECT T2.LifeExpectancy FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Name = 'Calama'
world,Provide the language used in the country ruled by Pierre Buyoya.,ruled by Pierre Buyoya refers to HeadOfState = 'Pierre Buyoya';,SELECT T1.Language FROM CountryLanguage AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.HeadOfState = 'Pierre Buyoya'
world,"In countries with constitutional monarchy, what is the percentage of cities located in the district of England?","constitutional monarchy refers to GovernmentForm = 'Constitutional Monarchy'; percentage = MULTIPLY(DIVIDE(SUM(GovernmentForm = 'Constitutional Monarchy' WHERE District = 'England'), COUNT(GovernmentForm = 'Constitutional Monarchy')), 100)",SELECT CAST(SUM(CASE WHEN T1.District = 'England' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.GovernmentForm = 'Constitutional Monarchy'
world,"Among the cities with a population between 140000 and 150000, list the country that has life expectancy greater than 80% life expectancy of all countries.","life expectancy greater than 80% life expectancy of all countries refers to LifeExpectancy < (MULTIPLY(AVG(LifeExpectancy), 0.8));","SELECT T2.Name FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Population BETWEEN 140000 AND 150000 GROUP BY T2.Name, LifeExpectancy HAVING LifeExpectancy < ( SELECT AVG(LifeExpectancy) FROM Country ) * 0.8"
world,"Among the countries that use Italian as their language, what is the percentage of republic countries?","use Italian as their language refers to `Language` = 'Italian'; percentage = MULTIPLY(DIVIDE(SUM(`Language` = 'Italian' WHERE GovernmentForm = 'Republic'), COUNT(`Language` = 'Italian')), 100); use Italian as their language refers to `Language` = 'Italian'; republic countries refers to GovernmentForm = 'Republic';",SELECT CAST(SUM(CASE WHEN T2.GovernmentForm = 'Republic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM CountryLanguage AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Italian'
music_platform_2,How many podcasts are there in the category which has the most podcasts?,category which has the most podcast refers to the category with Max(count(podcast_id)),SELECT COUNT(podcast_id) FROM categories WHERE category = ( SELECT category FROM categories GROUP BY category ORDER BY COUNT(podcast_id) DESC LIMIT 1 )
music_platform_2,What is the percentage of the podcast that are categorized in four or more categories?,"categorized in 4 or more refers to Count(category) > 4; percentage = Divide(Count(podcast_id(count(category) > 4)), Count(podcast_id)) * 100",SELECT COUNT(T1.podcast_id) FROM ( SELECT podcast_id FROM categories GROUP BY podcast_id HAVING COUNT(category) >= 4 ) AS T1
music_platform_2,Provide the itunes id and url for podcast titled 'Brown Suga Diaries'.,url refers to itunes_url; 'Brown Suga Diaries' is the title of podcast,"SELECT itunes_id, itunes_url FROM podcasts WHERE title = 'Brown Suga Diaries'"
music_platform_2,List all podcast with its itunes url for all title containing the word 'Dream'.,containing the word 'Dream' refers to title LIKE '%Dream%',SELECT itunes_url FROM podcasts WHERE title LIKE '%Dream%' GROUP BY itunes_url
music_platform_2,Name all the categories for podcast titled 'I Heart My Life Show'.,'I Hearty My Life Show' is the title of podcast,SELECT T1.category FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.title = 'I Heart My Life Show'
music_platform_2,List all the podcast title and its itunes url under the 'society-culture' category.,,"SELECT T2.title, T2.itunes_url FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'society-culture'"
music_platform_2,How many people rated 5 for the podcast which title contains the word 'spoiler' under the 'art' category '?,rated 5 refers to rating = 5; contain the word 'spoilers' refers to title like '%spoilers%'; 'art' is the category name;,SELECT COUNT(T3.podcast_id) FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id INNER JOIN reviews AS T3 ON T3.podcast_id = T2.podcast_id WHERE T2.title LIKE '%spoilers%' AND T1.category = 'arts' AND T3.rating = 5
music_platform_2,List the authors who created review for podcast titled 'Pop Rocket' in 2016 with rating less than 5.,Pop Rocket' is the title of podcast; in 2016 refers to created_at like'2016%'; rating less than 5 refers to rating < 5; author refers to author_id,SELECT T2.author_id FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'Pop Rocket' AND T2.created_at LIKE '2016-%' AND T2.rating < 5
music_platform_2,Name all the podcast title and its category with average rating of more than 3.0.,average rating of more than 3.0 refers to avg(rating) > 3.0,"SELECT T2.title, T1.category FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id INNER JOIN reviews AS T3 ON T3.podcast_id = T2.podcast_id GROUP BY T3.podcast_id HAVING AVG(T3.rating) > 3"
music_platform_2,List all content reviewed for podcast with the best rating under the 'fiction' category. State the podcast title.,'fiction' is the category name; best rating refers to rating = 5; content reviewed refers to content,SELECT DISTINCT T2.title FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id INNER JOIN reviews AS T3 ON T3.podcast_id = T2.podcast_id WHERE T3.rating = 5 AND T1.category = 'fiction'
music_platform_2,"State the podcast title, content review and rating for all reviews with titled 'Love it!'","""Love it!"" is the title of review; content reviewed refers to content","SELECT DISTINCT T1.title, T2.content, T2.rating FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.title = 'Love it!'"
music_platform_2,"Find the author, rating and review creation date of review for podcast title 'In The Thick'.","""In The Thick"" is the title of podcast; author refers to author_id; creation date refers to created_at","SELECT T2.author_id, T2.rating, T2.created_at FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'In The Thick' GROUP BY T2.author_id, T2.rating, T2.created_at"
music_platform_2,"Which podcast was reviewed the latest? State the date of creation, podcast tile and rating.",latest refers to Max(created_at); date of creation refers to created_at,"SELECT T1.podcast_id, T2.created_at, T2.title, T2.rating FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id ORDER BY T2.created_at DESC LIMIT 1"
music_platform_2,"Name the podcast title, rating and review content created by '76A4C24B6038145'.","""76A4C24B6038145"" is author_id; review content refers to content","SELECT T2.title, T2.rating, T2.content FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.author_id = '76A4C24B6038145'"
music_platform_2,"For all reviews with the worst rating, state the podcast title as well as the review title and content.",worst rating refers to rating = 1,"SELECT DISTINCT T1.title, T2.title, T2.content FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.rating = 1"
music_platform_2,List all reviews created in May 2019. State the title of podcast and review rating.,created in May 2019 refers to created_at like '2019-05%',"SELECT DISTINCT T1.title, T2.rating FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.created_at LIKE '2019-05-%'"
music_platform_2,What is the average rating for the podcast that is most reviewed?,most reviewed refers to Max(Count(reviews.podcast_id)); average rating refers to AVG (rating),SELECT AVG(T2.rating) FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id GROUP BY T1.podcast_id ORDER BY COUNT(T2.content) DESC LIMIT 1
music_platform_2,Which category does the podcast titled 'SciFi Tech Talk' belong to?,podcast titled 'SciFi Tech Talk' refers to title = 'SciFi Tech Talk',SELECT T1.category FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.title = 'SciFi Tech Talk'
music_platform_2,"What is the name of the podcast in which a commentor left a comment with the title 'Long time listener, calling it quits?' Include the URL of the podcast as well.","comment refers to review; 'Long time listener, calling it quits' is the title of review;  name of the podcast refers to title of podcast; URL refers to itunes_url","SELECT podcast_id, itunes_url FROM podcasts WHERE podcast_id = ( SELECT podcast_id FROM reviews WHERE title = 'Long time listener, calling it quits' )"
music_platform_2,List all the names of podcasts under the 'true crime' category.,name of the podcast refers to title of the podcast,SELECT T2.title FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'true-crime'
music_platform_2,Write all the review content belonging to StormCast: The Official Warhammer Age of Sigmar Podcast.,review content refers to content; 'StormCast: The Official Warhammer Age of Sigmar Podcast' is the title of podcast;,SELECT content FROM reviews WHERE podcast_id = ( SELECT podcast_id FROM podcasts WHERE title = 'StormCast: The Official Warhammer Age of Sigmar Podcast' )
music_platform_2,Write all the review titles and the contents belonging to the podcast 'More Stupider: A 90-Day Fiance Podcast' with a review rating of 1.,podcast 'More Stupider: A 90-Day Fiance Podcast'  refers to title = 'More Stupider: A 90-Day Fiance Podcast'; rating of 1 refers to rating = 1,"SELECT title, content FROM reviews WHERE podcast_id = ( SELECT podcast_id FROM podcasts WHERE title = 'More Stupider: A 90-Day Fiance Podcast' ) AND rating = 1"
music_platform_2,How many reviews does 'LifeAfter/The Message' have which were rated below 3?,LifeAfter/The Message' is the title of podcast; rated below 3 refers to rating < 3,SELECT COUNT(T2.rating) FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'LifeAfter/The Message' AND T2.rating <= 3
music_platform_2,The 'More Stupider: A 90-Day Fiance Podcast' belongs to which category and what is the average rating of the podcast?,"More Stupider: A 90-Day Fiance Podcast' is the title of podcast; average rating = Divide (Sum(rating), Count(rating))",SELECT AVG(T3.rating) FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id INNER JOIN reviews AS T3 ON T3.podcast_id = T2.podcast_id WHERE T2.title = 'More Stupider: A 90-Day Fiance Podcast'
music_platform_2,"Of the arts-books and arts-design categories, which one has more podcasts and what is the numerical difference between them?","arts-books' and 'arts-design' are category; numerical difference = Subtract(Count(podcast_id(category = 'arts-books')), Count(podcast_id(category = 'arts-design'))); one has much more podcast refers to Max(Count(podcast_id))","SELECT ( SELECT category FROM categories WHERE category = 'arts-books' OR category = 'arts-design' GROUP BY category ORDER BY COUNT(podcast_id) DESC LIMIT 1 ) ""has more podcasts"" , ( SELECT SUM(CASE WHEN category = 'arts-books' THEN 1 ELSE 0 END) - SUM(CASE WHEN category = 'arts-design' THEN 1 ELSE 0 END) FROM categories ) ""differenct BETWEEN arts-books and arts-design"""
music_platform_2,How many total reviews runned at in June 2022 were added to the podcasts?,run at in June 2022 refers to run_at BETWEEN '2022-06-01 00:00:00' and '2022-06-30 23:59:59'; reviews refers to review_added,SELECT SUM(reviews_added) FROM runs WHERE run_at LIKE '2022-06-%'
music_platform_2,How many podcast reviews with a rating of 3 were created during the first quarter of 2015?,rating of 3 refers to rating = 3; created during the first quarter of 2015 refers to created_at BETWEEN'2015-01-01T00:00:00-07:00' and '2015-03-31T23:59:59-07:00',SELECT COUNT(podcast_id) FROM reviews WHERE rating = 3 AND created_at BETWEEN '2015-01-01T00:00:00-07:00' AND '2015-03-31T23:59:59-07:00'
music_platform_2,Calculate the percentage of podcasts in the fiction-science-fiction category.,"percentage =   Divide (Count(podcast_id(category = 'fiction-science-fiction')), Count(podcast_id)) * 100","SELECT CAST(SUM(CASE WHEN category = 'fiction-science-fiction' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(podcast_id) OR '%' ""percentage"" FROM categories"
music_platform_2,What is the average rating of all the podcasts with reviews created in 2019?,"created in 2019 refers to created_at BETWEEN '2019-01-01T00:00:00' and '2019-12-31T23:59:59'; average rating  = Divide (Sum(rating), Count(podcast_id))",SELECT AVG(rating) FROM reviews WHERE created_at BETWEEN '2019-01-01T00:00:00-07:00' AND '2019-12-31T23:59:59-07:00'
music_platform_2,What is the percentage of reviews added each year of the total reviews added?,"review added each year refers to runs_at like '2021%' and runs_at like '2022%'; percentage for 2021 = Divide (Sum(reviews_added(runs_at like '2021%)), Sum(reviews_added)) * 100; percentage of 2022 = Divide (Sum(reviews_added(runs_at like '2022%')), Sum(reviews_added)) * 100","SELECT CAST((SUM(CASE WHEN run_at LIKE '2022-%' THEN reviews_added ELSE 0 END) - SUM(CASE WHEN run_at LIKE '2021-%' THEN reviews_added ELSE 0 END)) AS REAL) * 100 / SUM(reviews_added) OR '%' ""percentage"" FROM runs"
music_platform_2,Indicates the title of all podcasts in the fiction category.,,SELECT T2.title FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'fiction'
music_platform_2,What is the rating and category of the podcast entitled Sitcomadon?,entitled refers to title; 'Sitcomadon' is the title of podcast,"SELECT DISTINCT T3.rating, T1.category FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id INNER JOIN reviews AS T3 ON T3.podcast_id = T2.podcast_id WHERE T2.title = 'Sitcomadon'"
music_platform_2,Indicate the id of the reviewer whose itunes id is 1516665400.,"""151665400"" is itunes_id; id of reviewer refers to author_id",SELECT T2.author_id FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.itunes_id = 1516665400
music_platform_2,What are the titles of the podcasts whose reviews were created between 2018-08-22T11:53:16-07:00 and 2018-11-20T11:14:20-07:00?,created between 2018-08-22T11:53:16-07:00 and 2018-11-20T11:14:20-07:00 refers to created at BETWEEN '2018-08-22T11:53:16-07:00' and '2018-11-20T11:14:20-07:00',SELECT DISTINCT T1.title FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.created_at BETWEEN '2018-08-22T11:53:16-07:00' AND '2018-11-20T11:14:20-07:00'
music_platform_2,To which categories do the podcasts of the reviewer whose id is EFB34EAC8E9397C belong?,reviewer whose id is EFB34EAC8E9397C refers to author_id = 'EFB34EAC8E9397C',SELECT DISTINCT T1.category FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.author_id = 'EFB34EAC8E9397C'
music_platform_2,Indicate the slug and the itunes url of the podcast whose review content was written Can't stop listening.,review content was written Can't stop listening refers to content = 'Can't stop listening',"SELECT slug, itunes_url FROM podcasts WHERE podcast_id IN ( SELECT podcast_id FROM reviews WHERE content = 'Can''t stop listening' )"
music_platform_2,What dates were the Don't Lie To Your Life Coach podcast reviews created?,"""Don't Lie To Your Life Coach"" refers to title of podcast; date refers to created_at",SELECT created_at FROM reviews WHERE podcast_id = ( SELECT podcast_id FROM podcasts WHERE title = 'Don''t Lie To Your Life Coach' )
music_platform_2,In how many categories were podcast reviews created in the last six months of 2016? List them.,created in last six months of 2016 refers to created_at BETWEEN '2016-07-01T00:00:00-07:00' and '2016-12-31T23:59:59-07:00',SELECT COUNT(DISTINCT T1.category) FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.created_at BETWEEN '2016-07-01T00:00:00-07:00' AND '2016-12-31T23:59:59-07:00'
music_platform_2,Calculate the average rating of the true crime category.,"average rating = Divide (Sum(rating(category = 'true-crime')), Count(podcast_id(category = 'true-crime')))",SELECT AVG(T2.rating) FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'true-crime'
music_platform_2,List the titles of the art category.,art category refers to category = 'arts',SELECT DISTINCT T2.title FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'arts'
music_platform_2,What is the average rating of all the podcasts in category art?,"category art refers to category = 'arts'; average rating = Divide (Sum (rating), Count (podcast_id))",SELECT AVG(T2.rating) FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'arts'
music_platform_2,Provide the names of podcasts in the art category in 2018.,art category refers to category = 'arts'; in 2018 refers to created_at like '2018%'; name of podcast refers to title,SELECT DISTINCT T2.title FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'arts' AND T2.created_at LIKE '2018-%'
music_platform_2,Write the names of the podcasts in the music category that have a rating greater than 3.,music category refers to category = 'music'; rating greater than 3 refers to rating > 3; name of the podcast refers to title,SELECT DISTINCT T2.title FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'music' AND T2.rating > 3
music_platform_2,"Which titles have the content ""love"" but the category is art produced between 2018 and 2019.",content love refers to content = 'love'; 'arts' is the category; produced between 2018 and 2019 refers to year (created_at) BETWEEN 2018 and 2019,SELECT DISTINCT T2.title FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE (T2.created_at LIKE '2018-%' AND T1.category = 'arts' AND T2.content LIKE '%love%') OR (T2.created_at LIKE '2019-%' AND T1.category = 'arts' AND T2.content LIKE '%love%')
music_platform_2,"What is the category and itune url of the title ""Scaling Global""?",,"SELECT T1.category, T2.itunes_url FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.title = 'Scaling Global'"
music_platform_2,What is the average rating of podcasts in comedy category?,"comedy category refers to category = 'comedy'; average rating = Divide (Sum(rating), Count(podcast_id))",SELECT AVG(T2.rating) FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'comedy'
music_platform_2,What is the least common category?,least common category refers to Min(Count(category)),SELECT category FROM categories GROUP BY category ORDER BY COUNT(podcast_id) ASC LIMIT 1
music_platform_2,What is the longest review?,review refers to content; longest review refers to Max(content),SELECT title FROM reviews ORDER BY LENGTH(content) DESC LIMIT 1
music_platform_2,"What is the review with the title ""Hosts bring the show down"" for?","""Hosts bring the show down"" refers to title of review",SELECT title FROM podcasts WHERE podcast_id = ( SELECT podcast_id FROM reviews WHERE title = 'Hosts bring the show down' )
music_platform_2,"Which ""music"" podcast has the longest title?",music podcasts refers to category = 'music'; longest title refers to title = Max(length(title)),SELECT T2.title FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'music' ORDER BY LENGTH(T2.title) DESC LIMIT 1
music_platform_2,"List all the cagetories for all the podcasts with ""jessica"" in the title.",podcast with 'jessica' in title refers to title like '%jessica%',SELECT category FROM categories WHERE podcast_id IN ( SELECT podcast_id FROM podcasts WHERE title LIKE '%jessica%' )
music_platform_2,"What is the category for the ""Moist Boys"" podcast?","""Moist Boys"" refers to title of podcast",SELECT category FROM categories WHERE podcast_id IN ( SELECT podcast_id FROM podcasts WHERE title = 'Moist Boys' )
music_platform_2,List all of the two-star reviews and their categories.,two-stars review refers to rating = 2,SELECT T1.category FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.rating = 2
music_platform_2,"List all the podcasts reviewed by a reviewer who has a review titled ""Inspired & On Fire!"".","""Inspired & On Fire"" refers to title of review",SELECT T1.title FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.title = 'Inspired & On Fire!'
music_platform_2,"What are the titles and categories of all the podcasts with a review that has ""Absolutely fantastic"" in it?",review refers to content; 'Absolutely fantastic' in it refers to content like '%Absolutely fantastic%',"SELECT T2.title, T1.category FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id INNER JOIN reviews AS T3 ON T3.podcast_id = T2.podcast_id WHERE T3.content LIKE '%Absolutely fantastic%'"
music_platform_2,Which category has the most reviews?,Most review refers to Max(Count(reviews.podcast_id)),SELECT T1.category FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id GROUP BY T1.category ORDER BY COUNT(T2.podcast_id) DESC LIMIT 1
music_platform_2,"List the urls for all the ""fiction-science-fiction"" podcasts.",fiction-science-fiction podcasts refers to category = 'fiction-science-fiction'; urls refers to itunes_url,SELECT itunes_url FROM podcasts WHERE podcast_id IN ( SELECT podcast_id FROM categories WHERE category = 'fiction-science-fiction' )
music_platform_2,"What is the content of the earliest review for the ""Stuff You Should Know"" podcast?","""Stuff You Should Know"" is the title of podcast; earliest refers to Min(created_at)",SELECT T2.content FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'Stuff You Should Know' ORDER BY T2.created_at ASC LIMIT 1
music_platform_2,"How many reviews does ""Planet Money"" have?","""Planet Money"" is the title of podcast",SELECT COUNT(T2.podcast_id) FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'Planet Money'
music_platform_2,"What is the average rating for the ""crime-junkie"" podcast?","""crime-junkie"" podcast refers to title = 'crime-junkie'; average rating = Divide (Sum(rating), Count(rating))",SELECT AVG(T2.rating) FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'Crime Junkie'
music_platform_2,"What percentage of podcasts are ""technology"" podcasts? List all of them.","""technology"" podcast refers to category = 'technology'; percentage = Divide (Count (podcast_id (category = 'technology')), Count (podcast_id)) * 100","SELECT CAST(SUM(CASE WHEN T1.category = 'technology' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.title) OR '%' ""percentage"" FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id"
music_platform_2,"What is the content of the review under the title ""really interesting!"" and is created on 2018-04-24 at 12:05:16?","""really interesting"" is the title of review;  created on 2018-04-24 at 12:05:16 refers to created_at = '2018-04-24T12:05:16-07:00'",SELECT content FROM reviews WHERE title = 'really interesting!' AND created_at = '2018-04-24T12:05:16-07:00'
music_platform_2,"Which category is the podcast ""Scaling Global"" under?","""Scaling Global"" is the title of podcast",SELECT category FROM categories WHERE podcast_id IN ( SELECT podcast_id FROM podcasts WHERE title = 'Scaling Global' )
music_platform_2,"Please list the titles of all the podcasts under the category ""arts-performing-arts"".",category 'arts-performing-arts' refers to category = 'arts-performing-arts';,SELECT DISTINCT T2.title FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'arts-performing-arts'
music_platform_2,"How many reviews are created for the podcast ""Scaling Global"" under?","""Scaling Global"" is the title of podcast",SELECT COUNT(T2.content) FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'Scaling Global'
music_platform_2,"Among the reviews for the podcast ""Please Excuse My Dead Aunt Sally"", how many of them are made in the year 2019?","""Please Excuse My Dead Aunt Sally"" is the title of podcast; made in the year 2019 refers to created_at like '2019%'",SELECT COUNT(T2.created_at) FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'Please Excuse My Dead Aunt Sally' AND T2.created_at LIKE '2019-%'
music_platform_2,Please list the titles of the podcasts for which the author whose ID is F7E5A318989779D has written a review.,author whose ID is F7E5A318989779D refers to author_id = 'F7E5A318989779D',SELECT T2.title FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.author_id = 'F7E5A318989779D'
music_platform_2,"How many ratings of 5 have been given to the podcast ""Please Excuse My Dead Aunt Sally""?",rating of 5 refers to rating = 5; 'Please Excuse My Dead Aunt Sally' is the title of podcast,SELECT COUNT(T2.rating) FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'Please Excuse My Dead Aunt Sally' AND T2.rating = 5
music_platform_2,"What is the average rating of the podcast ""Please Excuse My Dead Aunt Sally""?","""Please Excuse My Dead Aunty Sally"" is the title of podcast; Average rating = Divide (Sum(rating), Count(rating))",SELECT AVG(T2.rating) FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'Please Excuse My Dead Aunt Sally'
university,"How many universities have at least 80,000 students in the year 2011?","have at least 80,000 students refers to num_students > 8000; year = 2011",SELECT COUNT(*) FROM university_year WHERE num_students > 80000 AND year = 2011
university,What is the ranking system ID of the award criteria?,award criteria refers to criteria_name = 'Award';,SELECT ranking_system_id FROM ranking_criteria WHERE criteria_name = 'Award'
university,How many state universities are there?,state universities refers to university_name LIKE '%State%';,SELECT COUNT(*) FROM university WHERE university_name LIKE '%State%'
university,What is the student staff ratio of the university with the highest student staff ratio of all time?,highest student staff ratio refers to max(student_staff_ratio),SELECT MAX(student_staff_ratio) FROM university_year WHERE student_staff_ratio = ( SELECT MAX(student_staff_ratio) FROM university_year )
university,How many criteria belong to ranking system ID 3?,,SELECT COUNT(id) FROM ranking_criteria WHERE ranking_system_id = 3
university,What is the ID of the university that has only 1% of international students between 2011 to 2015?,has only 1% of international students refers to pct_international_students = 1; between 2011 to 2015 refers to year BETWEEN 2011 AND 2015; ID of university refers to university_id,SELECT university_id FROM university_year WHERE pct_international_students = 1 AND year BETWEEN 2011 AND 2015
university,Give the name of the country that has the most universities.,has the most universities refers to MAX(COUNT(id)); name of the country refers to country_name,SELECT T2.country_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id GROUP BY T2.country_name ORDER BY COUNT(T1.university_name) DESC LIMIT 1
university,What is the name of the university that had the highest number of international students for 6 consecutive years?,"had the highest number of international students refers to max(pct_international_students); for 6 consecutive years refers to count(SUBTRACT(year, rm)) > = 6; name of university refers to university_name;",SELECT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id ORDER BY T1.pct_international_students DESC LIMIT 1
university,"In 2014, what is the name of the university which was considered a leader in the publications rank?",In 2014 refers to year = 2014; leader refers to MAX(score); in the publications rank refers to criteria_name = 'Publications Rank'; name of university refers to university_name;,SELECT T3.university_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T1.criteria_name = 'Publications Rank' AND T2.year = 2014 AND T1.id = 17 ORDER BY T2.score DESC LIMIT 1
university,What is the name of the university that has the lowest number of students of all time?,has the lowest number of students refers to min(num_students); name of the university refers to university_name,SELECT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id ORDER BY T1.num_students LIMIT 1
university,How many universities are there in the United States of America?,in the United States of America refers to country_name = 'United States of America';,SELECT COUNT(*) FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T2.country_name = 'United States of America'
university,"In 2016, what is the name of the university in Australia with the highest score in Citations criteria?",In 2016 refers to year = 2016; name of the university refers to university_name; in Australia refers to country_name = 'Australia'; in Citations criteria refers to criteria_name = 'Citations'; highest score refers to MAX(score),SELECT T3.university_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id INNER JOIN country AS T4 ON T4.id = T3.country_id WHERE T1.criteria_name = 'Citations' AND T2.year = 2016 AND T1.id = 4 AND T4.country_name = 'Australia' ORDER BY T2.score DESC LIMIT 1
university,How many universities scored 0 in Awards between 2005 to 2015?,between 2005 to 2015 refers to year BETWEEN 2005 AND 2015; scored 0 refers to score = 0; in Awards refers to criteria_name = 'Award',SELECT COUNT(*) FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id WHERE T1.criteria_name = 'Award' AND T2.year BETWEEN 2005 AND 2015 AND T2.score = 0
university,Which country is the University of Oxford located?,University of Oxford refers to university_name = 'University of Oxford'; which country refers to country_name,SELECT T2.country_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE university_name = 'University of Oxford'
university,How many times did the Yale University achieve a score of no less than 10 in the Quality of Education Rank?,Yale University refers to university_name = 'Yale University'; a score of no less than 10 refers to score > = 10; in the Quality of Education Rank refers to criteria_name = 'Quality of Education Rank',SELECT COUNT(*) FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T3.university_name = 'Yale University' AND T2.score >= 10 AND T1.criteria_name = 'Quality of Education Rank'
university,What are the names of the criteria under Center for World University Rankings?,names of the criteria refers to criteria_name; under Center for World University Rankings refers to system_name = 'Center for World University Rankings';,SELECT T2.criteria_name FROM ranking_system AS T1 INNER JOIN ranking_criteria AS T2 ON T1.id = T2.ranking_system_id WHERE T1.system_name = 'Center for World University Rankings'
university,"List the names of all the universities that have no less than 50,000 students in the year 2012.","have no less than 50,000 students refers to num_students > 50000; name of university refers to university_name;",SELECT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.num_students > 50000 AND T1.year = 2012
university,"Between 2011 to 2016, in which countries can you find the universities where at least 50% of its students are international students?",Between 2011 to 2016 refers to year BETWEEN 2011 AND 2016; at least 50% of its students are international students refers to pct_international_students > 50; which country refers to country_name,SELECT DISTINCT T3.country_name FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T2.pct_international_students > 50 AND T2.year BETWEEN 2011 AND 2016
university,"How many universities have no less than 20,000 female students in 2016? Identify how many of the said universities are located in the United States of America.","have no less than 20,000 female students refers to DIVIDE(MULTIPLY(pct_female_students, num_students), 100) > 20000; in 2016 refers to year = 2016; located in the United States of America refers to country_name = 'United States of America'","SELECT COUNT(*) , SUM(CASE WHEN T3.country_name = 'United States of America' THEN 1 ELSE 0 END) AS nums_in_usa FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T2.year = 2016 AND T2.num_students * T2.pct_female_students / 100 > 20000"
university,What are the names of the top 5 universities with the highest number of international students?,"highest number of international students refers to MAX(DIVIDE(MULTIPLY(num_students, pct_international_students), 100)); name of university refers to university_name;",SELECT DISTINCT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id ORDER BY (CAST(T1.num_students * T1.pct_international_students AS REAL) / 100) DESC LIMIT 5
university,What is the university ID of the university with the largest student staff ratio?,the largest student staff ratio refers to max(student_staff_ratio),SELECT university_id FROM university_year ORDER BY student_staff_ratio DESC LIMIT 1
university,Give the year where a university had the lowest number of students.,had the lowest number of students refers to MIN(num_students),SELECT year FROM university_year ORDER BY num_students ASC LIMIT 1
university,Compute the average percentage of female students.,average percentage of female students refers to avg(pct_female_students),SELECT AVG(pct_female_students) FROM university_year
university,Provide the number of international students and number of students in 2013 in university ID 20.,"number of international students refers to DIVIDE(MULTIPLY(pct_international_students, num_students), 100); in 2013 refers to year = 2013","SELECT pct_international_students * num_students, num_students FROM university_year WHERE year = 2013 AND university_id = 20"
university,What is the university ID of Harvard University?,of Harvard University refers to university_name = 'Harvard University';,SELECT id FROM university WHERE university_name = 'Harvard University'
university,List the university ID of the university that scored 100 in 2011.,in 2011 refers to year = 2011; score = 100,SELECT university_id FROM university_ranking_year WHERE score = 100 AND year = 2011
university,Provide the ranking system of the ranking criteria named Quality of Education Rank.,criteria named Quality of Education Rank refers to criteria_name = 'Quality of Education Rank'; ranking system refers to system_name;,SELECT T1.system_name FROM ranking_system AS T1 INNER JOIN ranking_criteria AS T2 ON T1.id = T2.ranking_system_id WHERE T2.criteria_name = 'Quality of Education Rank'
university,What is the student staff ratio of Harvard University in 2012?,Harvard University refers to university_name = 'Harvard University'; in 2012 refers to year = 2012,SELECT T1.student_staff_ratio FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T2.university_name = 'Harvard University' AND T1.year = 2012
university,Give the location of the university ID 112.,location refers to country_name,SELECT T2.country_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T1.id = 112
university,Calculate the total number of students in universities located in Sweden.,located in Sweden refers to country_name = 'Sweden'; number of students refers to num_students,SELECT SUM(T2.num_students) FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'Sweden'
university,What is the ranking criteria ID of Brown University in 2014?,Brown University refers to university_name = 'Brown University'; in 2014 refers to year = 2014,SELECT T1.ranking_criteria_id FROM university_ranking_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T2.university_name = 'Brown University' AND T1.year = 2014
university,List the name of universities located in Spain.,name of universities refers to university_name; located in Spain refers to country_name = 'Spain';,SELECT T1.university_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T2.country_name = 'Spain'
university,What is the criteria name of the university ID 32 in 2015?,in 2015 refers to year = 2015,SELECT T1.criteria_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id WHERE T2.university_id = 32 AND T2.year = 2015
university,Compute the average score of the university located in Brazil.,average score refers to avg(score); located in Brazil refers to country_name = 'Brazil';,SELECT AVG(T2.score) FROM university AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'Brazil'
university,In which country does the most populated university in 2014 located ?,the most populated university refers to max(num_students); in 2014 refers to year = 2014,SELECT T2.country_id FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2014 ORDER BY T1.num_students DESC LIMIT 1
university,Give the score and number of international students in university ID 100 in 2015.,"number of international students refers to DIVIDE(MULTIPLY(num_students, pct_international_students), 100); in 2015 refers to year = 2015","SELECT CAST(T1.num_students * T1.pct_international_students AS REAL) / 100, T2.score FROM university_year AS T1 INNER JOIN university_ranking_year AS T2 ON T1.university_id = T2.university_id WHERE T2.year = 2015 AND T1.university_id = 100"
university,What is the student population of the university that scored 98 in 2013?,student population refers to num_students; in 2013 refers to year = 2013,SELECT SUM(T1.num_students) FROM university_year AS T1 INNER JOIN university_ranking_year AS T2 ON T1.university_id = T2.university_id WHERE T2.score = 98 AND T1.year = 2013
university,List the criteria names under the ranking system called Center for World University Ranking.,ranking system called Center for World University Ranking refers to system_name = 'Center for World University Rankings';,SELECT T2.criteria_name FROM ranking_system AS T1 INNER JOIN ranking_criteria AS T2 ON T1.id = T2.ranking_system_id WHERE T1.system_name = 'Center for World University Rankings'
university,Provide the country name of universities with the number of students greater than 98% of the average student population of all universities in 2013.,"number of students greater than 98% of the average student population of all universities refers to num_students >  MULTPLY(num_students, 0.98); in 2013 refers to year = 2013",SELECT DISTINCT T3.country_name FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T2.year = 2013 AND T2.num_students * 100 > ( SELECT AVG(num_students) FROM university_year ) * 98
university,"Among universities that score below 80 in 2015, what is the percentage of international students?","score below 80 refers to score < 80; in 2015 refers to year 2015; percentage of international students refers to DIVIDE(SUM(DIVIDE(MULTIPLY(num_students, pct_international_students), 100)), SUM(num_students))",SELECT SUM(CAST(T1.num_students * T1.pct_international_students AS REAL) / 100) / COUNT(*) * 100 FROM university_year AS T1 INNER JOIN university_ranking_year AS T2 ON T1.university_id = T2.university_id WHERE T2.score < 80 AND T1.year = 2015
university,How many students attended universities were there in 2011?,in 2011 refers to year = 2011;,SELECT SUM(num_students) FROM university_year WHERE year = 2011
university,"Among all universities, how many female students were there in 2011?","in 2011 refers to year = 2011; female students refers to SUM(DIVIDE(MULTIPLY(num_students, pct_female_students), 100))",SELECT SUM(CAST(num_students * pct_female_students AS REAL) / 100) FROM university_year WHERE year = 2011
university,What is the student staff ratio at the university with the greatest student staff ratio of all time?,greatest student staff ratio of all time refers to max(student_staff_ratio),SELECT MAX(student_staff_ratio) FROM university_year ORDER BY student_staff_ratio DESC LIMIT 1
university,What is the university ID with the most students in 2011?,"most students refers to MAX(num_students), in 2011 refers to year = 2011",SELECT university_id FROM university_year WHERE year = 2011 ORDER BY num_students DESC LIMIT 1
university,"How many institutions with over 50,000 students in 2011 had a percentage of oversea students of more than 10%?","institutions with over 50,000 students refers to num_students > 50000; in 2011 refers to year = 2011; percentage of oversea students of more than 10% refers to pct_international_students > 10;",SELECT COUNT(*) FROM university_year WHERE year = 2011 AND num_students > 50000 AND pct_international_students > 10
university,Provide the ID of the university with the highest percentage of female students in 2012.,in 2012 refers to year = 2012; highest percentage of female students  refers to MAX(pct_female_students); ID of the university refers to university_id,SELECT university_id FROM university_year WHERE year = 2012 ORDER BY pct_female_students DESC LIMIT 1
university,Which university had the highest reputation in 2012?,"had the highest reputation refers to MAX(score), in 2012 refers to year = 2012; which university refers to university_name;",SELECT T2.university_name FROM university_ranking_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2012 ORDER BY T1.score DESC LIMIT 1
university,Name the university that had the most students in 2011.,in 2011 refers to year = 2011; had the most students refers to MAX(num_students); name of university refers to university_name;,SELECT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2011 ORDER BY T1.num_students DESC LIMIT 1
university,Indicate the university's name with the highest ranking score in Teaching.,university's name refers to university_name; highest ranking score refers to MAX(score); in Teaching refers to criteria_name = 'Teaching',SELECT T1.university_name FROM university AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.university_id INNER JOIN ranking_criteria AS T3 ON T3.id = T2.ranking_criteria_id WHERE T3.criteria_name = 'Teaching' ORDER BY T2.score DESC LIMIT 1
university,What is the percentage of Harvard university's international students in 2011?,Harvard university's refers to university_name = 'Harvard University'; in 2011 refers to year = 2011; percentage of Harvard university's international students refers to pct_international_students,SELECT T1.pct_international_students FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2011 AND T2.university_name = 'Harvard University'
university,How many female students were there at Stanford University in 2011?,"in 2011 refers to year 2011; female students refers to DIVIDE(MULTIPLY(pct_female_students, num_students), 100); Stanford University refers to university_name = 'Stanford University';",SELECT CAST(T1.num_students * T1.pct_female_students AS REAL) / 100 FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2011 AND T2.university_name = 'Stanford University'
university,In which nation is Harvard University located?,Harvard University refers to university_name = 'Harvard University'; nation refers to country_name,SELECT T2.country_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T1.university_name = 'Harvard University'
university,What is the name of the ranking system for Teaching criteria?,Teaching criteria refers to criteria_name = 'Teaching'; name of the ranking system refers to system_name,SELECT T1.system_name FROM ranking_system AS T1 INNER JOIN ranking_criteria AS T2 ON T1.id = T2.ranking_system_id WHERE T2.criteria_name = 'Teaching'
university,Name the most famous university in Argentina.,in Argentina refers to country_name = 'Argentina';  most famous refers to MAX(SUM(score)),SELECT T1.university_name FROM university AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'Argentina' GROUP BY T1.university_name ORDER BY SUM(T2.score) DESC LIMIT 1
university,"In Argentina, how many universities are there?",In Argentina refers to country_name = 'Argentina';,SELECT COUNT(*) FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T2.country_name = 'Argentina'
university,"Which universities have more than 100,000 students in 2011?","in 2011 refers to year 2011; more than 100,000 students refers to num_students > 100000; which university refers to university_name;",SELECT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2011 AND T1.num_students > 100000
university,How many criteria are associated with ranking system Center for World University Rankings?,ranking system Center for World University Rankings refers to system_name = 'Center for World University Rankings';,SELECT COUNT(T2.criteria_name) FROM ranking_system AS T1 INNER JOIN ranking_criteria AS T2 ON T1.id = T2.ranking_system_id WHERE T1.system_name = 'Center for World University Rankings'
university,How many students at the university earned a score of 90 in 2011?,in 2011 refers to year 2011; earned a score of 90 refers to score = 90;,SELECT COUNT(*) FROM university_year AS T1 INNER JOIN university_ranking_year AS T2 ON T1.university_id = T2.university_id WHERE T2.score = 90 AND T1.year = 2011
university,What are the top three universities with the most international students?,"most international students refers to MAX(SUM(DIVIDE(MULTIPLE(pct_international_students, num_students), 100))); name of university refers to university_name;",SELECT DISTINCT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id GROUP BY T2.university_name ORDER BY SUM(T1.num_students * T1.pct_international_students / 100) DESC LIMIT 3
university,What is the difference in overall student enrollment and international student enrollment at the Harvard university from 2011 to 2012?,"Harvard University refers to university_name = 'Harvard University'; difference in overall student enrollment and international student refers to SUBTRACT(SUM(num_students), SUM(DIVIDE(MULTIPLY(pct_international_students, num_students), 100))); from 2011 to 2012 refers to year BETWEEN 2011 AND 2012",SELECT SUM(T1.num_students) - SUM(CAST(T1.num_students * T1.pct_international_students AS REAL) / 100) FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T2.university_name = 'Harvard University' AND T1.year BETWEEN 2011 AND 2012
university,How many universities had over 30000 students in 2011?,in 2011 refers to year 2011; had over 30000 students refers to num_students > 30000;,SELECT COUNT(*) FROM university_year WHERE year = 2011 AND num_students > 30000
university,What is the country ID of the University of Tokyo?,University of Tokyo refers to university_name = 'University of Tokyo';,SELECT country_id FROM university WHERE university_name = 'University of Tokyo'
university,Provide the ranking system ID of the Center for World University Rankings.,the Center for World University Rankings refers to system_name = 'Center for World University Rankings';,SELECT id FROM ranking_system WHERE system_name = 'Center for World University Rankings'
university,What is the ID of the Publications Rank criteria?,Publications Rank criteria refers to criteria_name = 'Publications Rank';,SELECT id FROM ranking_criteria WHERE criteria_name = 'Publications Rank'
university,How many universities had above 30% of international students in 2013?,had above 30% of international students refers to pct_international_students > 30; in 2013 refers to year = 2013,SELECT COUNT(*) FROM university_year WHERE pct_international_students > 30 AND year = 2013
university,How many universities got less than 50 scores under ranking criteria ID 6 in 2011?,in 2011 refers to year 2011; less than 50 scores refers to score < 50;,SELECT COUNT(*) FROM university_ranking_year WHERE ranking_criteria_id = 6 AND year = 2011 AND score < 50
university,Provide the number of students at Yale University in 2016.,number of students refers to num_students; Yale University refers to university_name = 'Yale University'; in 2016 refers to year = 2016,SELECT T1.num_students FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T2.university_name = 'Yale University' AND T1.year = 2016
university,List the universities in Denmark.,in Denmark refers to country_name = 'Denmark'; name of university refers to university_name;,SELECT T1.university_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T2.country_name = 'Denmark'
university,Provide the number of staff at the University of Auckland in 2015.,"University of Auckland refers to university_name = 'University of Auckland'; in 2015 refers to year = 2015; number of staff refers to DIVIDE(num_students, student_staff_ratio)",SELECT CAST(SUM(T1.num_students) AS REAL) / SUM(T1.student_staff_ratio) FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T2.university_name = 'University of Auckland' AND T1.year = 2015
university,Which country has the University of SÃ£o Paulo?,the University of SÃ£o Paulo refers to university_name = 'University of São Paulo'; which country refers to country_name;,SELECT T2.country_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T1.university_name = 'University of São Paulo'
university,How many international students attended Harvard University in 2012?,"Harvard University refers to university_name = 'Harvard University'; international students refers to DIVIDE(MULTIPLY(num_students, pct_international_students), 100); in 2012 refers to year = 2012",SELECT CAST(T2.num_students * T2.pct_international_students AS REAL) / 100 FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id WHERE T1.university_name = 'Harvard University' AND T2.year = 2012
university,Calculate the number of female students at Arizona State University in 2014.,"female students refers to DIVIDE(MULTIPLY(pct_female_students, num_students), 100); at Arizona State University refers to university_name = 'Arizona State University'; in 2014 refers to year = 2014",SELECT CAST(T2.num_students * T2.pct_female_students AS REAL) / 100 FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id WHERE T1.university_name = 'Arizona State University' AND T2.year = 2014
university,Provide the universities which got the highest scores.,got the highest scores refers to MAX(SUM(score)),SELECT T1.university_name FROM university AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.university_id GROUP BY T1.university_name ORDER BY SUM(T2.score) DESC LIMIT 1
university,List the ranking criteria under the Shanghai Ranking system.,Shanghai Ranking system refers to system_name = 'Shanghai Ranking'; ranking criteria refers to criteria_name,SELECT T2.criteria_name FROM ranking_system AS T1 INNER JOIN ranking_criteria AS T2 ON T1.id = T2.ranking_system_id WHERE T1.system_name = 'Shanghai Ranking'
university,"In 2011, which university got the lowest score in teaching criteria?","in 2011 refers to year 2011; got the lowest score refers to MIN(score), teaching criteria refers to criteria_name = 'Teaching'",SELECT T3.university_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T1.criteria_name = 'Teaching' AND T2.year = 2011 ORDER BY T2.score ASC LIMIT 1
university,"Provide the ranking system name for the ""Quality of Education Rank"" criteria.","the ""Quality of Education Rank"" criteria refers to criteria_name = 'Quality of Education Rank'; ranking system refers to system_name",SELECT T1.system_name FROM ranking_system AS T1 INNER JOIN ranking_criteria AS T2 ON T1.id = T2.ranking_system_id WHERE T2.criteria_name = 'Quality of Education Rank'
university,"How many percent of universities got a score above 80 under International criteria in 2016? Among them, name the university which got the highest score.",got a score above 80 refers to score > 80; under International criteria refers to criteria_name = 'International'; in 2016 refers to year = 2016; highest score refers to MAX(score),"SELECT CAST(SUM(CASE WHEN T2.score > 80 THEN 1 ELSE 0 END) AS REAL) / COUNT(*), ( SELECT T3.university_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T1.criteria_name = 'International' AND T2.year = 2016 AND T2.score > 80 ORDER BY T2.score DESC LIMIT 1 ) AS max FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T1.criteria_name = 'International' AND T2.year = 2016"
university,Provide the ranking criteria and scores in 2005 that were received by Harvard University.,Harvard University refers to university_name = 'Harvard University'; in 2005 refers to year = 2005; ranking criteria refers to criteria_name;,"SELECT T1.criteria_name, T2.score FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T3.university_name = 'Harvard University' AND T2.year = 2005"
university,Calculate the average score per university under Alumni criteria in 2008.,"under Alumni criteria refers to criteria_name = 'Alumni'; in 2008 refers to year = 2008; average score refers to DIVIDE(SUM(score), COUNT(university_id))",SELECT AVG(T2.score) FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id WHERE T1.criteria_name = 'Alumni' AND T2.year = 2008
university,Name the university and country which had the highest number of international students in 2015.,"highest number of international students refers to MAX(DIVIDE(MULTIPLY(num_students, pct_international_students), 100)); in 2015 refers to year = 2015; name of university refers to university_name;","SELECT T1.university_name, T3.country_name FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T2.year = 2015 ORDER BY T2.num_students DESC LIMIT 1"
university,How many students were there in university ID 1 in 2011?,in 2011 refers to year 2011;,SELECT num_students FROM university_year WHERE year = 2011 AND university_id = 1
university,What is the ID of the university with the most students in 2011?,in 2011 refers to year 2011; with the most students refers to MAX(num_students); ID of the university refers to university_id,SELECT university_id FROM university_year WHERE year = 2011 ORDER BY num_students DESC LIMIT 1
university,Please list the IDs of the universities with a student staff ratio of over 15 in 2011.,in 2011 refers to year 2011; student staff ratio of over 15 refers to student_staff_ratio > 15; ID of the university refers to university_id,SELECT university_id FROM university_year WHERE year = 2011 AND student_staff_ratio > 15
university,"Among the universities with over 20000 students in 2011, how many of them have an international students percentage of over 25% in the same year?",in 2011 refers to year 2011; with over 20000 students refers to num_students > 20000; international students percentage of over 25% refers to pct_international_students > 25;,SELECT COUNT(*) FROM university_year WHERE year = 2011 AND pct_international_students > 25 AND num_students > 20000
university,Please list the IDs of the universities with the top 3 female students percentage in 2011.,in 2011 refers to year 2011; top 3 female students percentage refers to MAX(pct_female_students) LIMIT 3; ID of the university refers to university_id,SELECT university_id FROM university_year WHERE year = 2011 ORDER BY pct_female_students DESC LIMIT 3
university,In which year did university ID 1 have the most students?,have the most students refers to MAX(num_students),SELECT year FROM university_year WHERE university_id = 1 ORDER BY num_students DESC LIMIT 1
university,How many students did Harvard University have in 2011?,in 2011 refers to year 2011; Harvard University refers to university_name = 'Harvard University';,SELECT T1.num_students FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T2.university_name = 'Harvard University' AND T1.year = 2011
university,What is the name of the university with the most international students in 2011?,"in 2011 refers to year 2011; the most international students refers to MAX(DIVIDE(MULTIPLY(num_students,  pct_international_students), 100)); name of university refers to university_id",SELECT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2011 ORDER BY T1.pct_international_students DESC LIMIT 1
university,Please list the names of all the universities in Australia.,in Australia refers to country_name = 'Australia'; name of university refers to university_name,SELECT T1.university_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T2.country_name = 'Australia'
university,"Among the universities in Australia, how many of them have more than 15000 students in 2011?",in 2011 refers to year 2011; have more than 15000 students refers to num_students > 15000; in Australia refers to country_name = 'Australia';,SELECT COUNT(*) FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'Australia' AND T2.year = 2011 AND T2.num_students > 15000
university,Which country is Harvard University in?,Harvard University refers to university_name = 'Harvard University'; which country refers to country_name,SELECT T2.country_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T1.university_name = 'Harvard University'
university,What is the name of the university with the highest score in teaching in the year 2011?,with the highest score refers to MAX(score); in teaching refers to criteria_name = 'Teaching'; name of university refers to university_name;,SELECT T3.university_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T1.criteria_name = 'Teaching' AND T2.year = 2011 ORDER BY T2.score DESC LIMIT 1
university,Please list the names of the universities with a score in teaching of over 90 in 2011.,in 2011 refers to year 2011; in teaching refers to  criteria_name = 'Teaching'; score in teaching of over 90 refers to score > 90; name of university refers to university_name;,SELECT T3.university_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T1.criteria_name = 'Teaching' AND T2.year = 2011 AND T2.score > 90
university,"Among the universities with a score in teaching of over 90 in 2011, how many of them are in the United States of America?",in 2011 refers to year 2011; in teaching refers to  criteria_name = 'Teaching'; score in teaching of over 90 refers to score > 90; in the United States of America refers to country_name = 'United States of America';,SELECT COUNT(*) FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T1.criteria_name = 'Teaching' AND T2.year = 2011 AND T2.score > 90
university,Please list the names of all the ranking criteria of Harvard University in 2011.,in 2011 refers to year 2011; Harvard University refers to university_name = 'Harvard University'; names of all the ranking criteria refers to criteria_name,SELECT T1.criteria_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T3.university_name = 'Harvard University' AND T2.year = 2011
university,What are the names of the universities that got 98 in teaching in 2011?,in 2011 refers to year 2011; that got 98 refers to score = 98; in teaching refers to criteria_name = 'Teaching'; name of university refers to university_name,SELECT T3.university_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T1.criteria_name = 'Teaching' AND T2.year = 2011 AND T2.score = 98
university,Please list the names of all the universities that scored under 60 in teaching in 2011 and are in the United States of America.,scored under 60 refers to score < 60; in 2011 refers to year 2011; in teaching refers to criteria_name = 'Teaching'; in the United States of America refers to country_name = 'United States of America';,SELECT T3.university_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id INNER JOIN country AS T4 ON T4.id = T3.country_id WHERE T4.country_name = 'United States of America' AND T2.year = 2011 AND T2.score < 60 AND T1.criteria_name = 'Teaching'
university,"Among the universities in Australia, how many of them have a student staff ratio of over 15 in 2011?",in 2011 refers to year 2011; in Australia refers to country_name = 'Australia'; student staff ratio of over 15 refers to student_staff_ratio > 15,SELECT COUNT(*) FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'Australia' AND T2.student_staff_ratio > 15 AND T2.year = 2011
university,How many female students did Stanford University have in 2011?,"in 2011 refers to year 2011; female students refers to DIVIDE(MULTIPLY(pct_female_students, num_students), 100); Stanford University refers to university_name = 'Stanford University';",SELECT CAST(T1.num_students * T1.pct_female_students AS REAL) / 100 FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2011 AND T2.university_name = 'Stanford University'
university,"Among the universities with a score in teaching of over 90 in 2011, what is the percentage of those in the United States of America?","in 2011 refers to year 2011; in teaching refers to  criteria_name = 'Teaching'; score in teaching of over 90 refers to score > 90; in the United States of America refers to country_name = 'United States of America'; percentage refers to DIVIDE(COUNT(country_name = 'United States of America'), COUNT(id))",SELECT CAST(SUM(CASE WHEN T4.country_name = 'United States of America' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS per FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id INNER JOIN country AS T4 ON T4.id = T3.country_id WHERE T1.criteria_name = 'Teaching' AND T2.year = 2011 AND T2.score > 90
university,"Give the id of ""Center for World University Rankings"".","""Center for World University Rankings"" refers to system_name = 'Center for World University Rankings';",SELECT id FROM ranking_system WHERE system_name = 'Center for World University Rankings'
university,Which country is University of Veterinary Medicine Vienna located in? Give its country id.,University of Veterinary Medicine Vienna refers to university_name = 'University of Veterinary Medicine Vienna';,SELECT country_id FROM university WHERE university_name = 'University of Veterinary Medicine Vienna'
university,"What is the id of the criteria ""Citations Rank""?","criteria ""Citations Rank"" refers to criteria_name = 'Citations Rank';",SELECT id FROM ranking_criteria WHERE criteria_name = 'Citations Rank'
university,Show the id of University of Orléans.,University of Orléans refers to university_name = 'University of Orléans';,SELECT id FROM university WHERE university_name = 'University of Orléans'
university,"For the university id 268, show its number of students in 2013.",number of students refers to num_students; in 2013 refers to year = 2013,SELECT num_students FROM university_year WHERE university_id = 268 AND year = 2013
university,Show the name of country id 66.,name of country refers to country_name,SELECT country_name FROM country WHERE id = 66
university,Which country is McMaster University located in?,McMaster University refers to university_name = 'McMaster University'; which country refers to country_name,SELECT T2.country_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T1.university_name = 'McMaster University'
university,How many Turkish universities are there in the database?,Turkish universities refers to country_name = 'Turkey';,SELECT COUNT(*) FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T2.country_name = 'Turkey'
university,Which university had the most students in 2011? Show its name.,in 2011 refers to year 2011; the most students refers to MAX(num_students); which university refers to university_name;,SELECT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2011 ORDER BY T1.num_students DESC LIMIT 1
university,How many students were there in University of Michigan in 2011?,in 2011 refers to year 2011; in University of Michigan refers to university_name = 'University of Michigan';,SELECT COUNT(*) FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id WHERE T1.university_name = 'University of Michigan' AND T2.year = 2011
university,"For Chosun University, what was its score on ""Influence Rank"" in 2015?","Chosun University refers to university_name = 'Chosun University'; in 2015 refers to year = 2015; on ""Influence Rank"" refers to criteria_name = 'Influence Rank';",SELECT T2.score FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T3.university_name = 'Chosun University' AND T1.criteria_name = 'Influence Rank' AND T2.year = 2015
university,What is the percentage of the international students in University of Oslo in 2015?,percentage of the international students refers to pct_international_students; in 2015 refers to year = 2015; in University of Oslo refers to university_name = 'University of Oslo';,SELECT T2.pct_international_students FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id WHERE T1.university_name = 'University of Oslo' AND T2.year = 2015
university,"For the University of Southampton in 2015, on which criteria did it score the best?",University of Southampton refers to university_name = 'University of Southampton'; in 2015 refers to year = 2015; score the best refers to MAX(score); which criteria refers to criteria_name,SELECT T1.criteria_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T3.university_name = 'University of Southampton' AND T2.year = 2015 ORDER BY T2.score DESC LIMIT 1
university,"Which ranking system is criteria ""Total Shanghai"" in?","criteria ""Total Shanghai"" refers to criteria_name = 'Total Shanghai'; which ranking system refers to system_name",SELECT T1.system_name FROM ranking_system AS T1 INNER JOIN ranking_criteria AS T2 ON T1.id = T2.ranking_system_id WHERE T2.criteria_name = 'Total Shanghai'
university,How many female students were there in Pierre and Marie Curie University in 2015?,"female students refers to DIVIDE(MULTIPLY(pct_female_students, num_students), 100); in Pierre and Marie Curie University refers to university_name = 'Pierre and Marie Curie University'; in 2015 refers to year = 2015",SELECT CAST(T1.num_students * T1.pct_female_students AS REAL) / 100 FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2015 AND T2.university_name = 'Pierre and Marie Curie University'
university,"What was the score for University of Florida in ""N and S"" in 2014?","University of Florida refers to university_name = 'University of Florida'; in 2014 refers to year = 2014; in ""N and S"" refers to criteria_name = 'N and S'",SELECT T2.score FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T3.university_name = 'University of Florida' AND T2.year = 2014 AND T1.criteria_name = 'N and S'
university,Calculate the number of international students of University of Wisconsin-Madison in 2013.,"international students refers to DIVIDE(MULTIPLY(num_students, pct_international_students), 100); University of Wisconsin-Madison refers to university_name = 'University of Wisconsin-Madison'; in 2013 refers to year = 2013",SELECT CAST(T1.num_students * T1.pct_international_students AS REAL) / 100 FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2013 AND T2.university_name = 'University of Wisconsin-Madison'
university,Show the name of the university with the lowest number of students in 2015.,lowest number of students refers to MIN(num_students); in 2015 refers to year = 2015; name of university refers to university_name;,SELECT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2015 ORDER BY T1.num_students ASC LIMIT 1
university,How many times more was the number of students of University of Ottawa than Joseph Fourier University in 2013?,"Joseph Fourier University refers to university_name = 'Joseph Fourier University'; University of Ottawa refers to university_name = 'University of Ottawa'; in 2013 refers to year = 2013; how many times more refers to DIVIDE(SUM(num_students where university_name = 'University of Ottawa'), SUM(num_students where university_name = 'Joseph Fourier University'))",SELECT CAST(SUM(CASE WHEN T2.university_name = 'University of Ottawa' THEN T1.num_students ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.university_name = 'Joseph Fourier University' THEN T1.num_students ELSE 0 END) FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2013
university,"Calculate the average number of criterias among ""Times Higher Education World University Ranking"",""Shanghai Ranking"" and ""Center for World University Rankings"".","average number of criterias refers to DIVIDE(SUM(id), 3); ""Times Higher Education World University Ranking"", ""Shanghai Ranking"" and ""Center for World University Rankings"" refers to system_name IN ('Times Higher Education World University Ranking', 'Shanghai Ranking', 'Center for World University Rankings');",SELECT (SUM(CASE WHEN T1.system_name = 'Center for World University Rankings' THEN 1 ELSE 0 END) + SUM(CASE WHEN T1.system_name = 'Shanghai Ranking' THEN 1 ELSE 0 END) + SUM(CASE WHEN T1.system_name = 'Times Higher Education World University Ranking' THEN 1 ELSE 0 END)) / 3 FROM ranking_system AS T1 INNER JOIN ranking_criteria AS T2 ON T1.id = T2.ranking_system_id
university,Calculate the average number of students of all universities in 2012.,average number of students refers to avg(num_students); in 2012 refers to year = 2012,SELECT AVG(num_students) FROM university_year WHERE year = 2012
university,What is the score of university ID 68 in 2015?,in 2015 refers to year = 2015,SELECT score FROM university_ranking_year WHERE year = 2015 AND university_id = 68
university,Provide the country ID of Cyprus.,Cyprus refers to country_name = 'Cyprus';,SELECT id FROM country WHERE country_name = 'Cyprus'
university,What is the ID of university with the largest percentage of international students?,largest percentage of international students refers to MAX(pct_international_students); ID of university refers to university_id,SELECT university_id FROM university_year ORDER BY pct_international_students DESC LIMIT 1
university,Provide the criteria name of the ranking criteria ID 13.,,SELECT criteria_name FROM ranking_criteria WHERE id = 13
university,What is the average score of all universities in 2012?,average score refers to avg(score); in 2012 refers to year = 2012,SELECT AVG(score) FROM university_ranking_year WHERE year = 2012
university,"In years 2011 to 2013, what is the total number of female students in university ID 40?","total number of female students refers to SUM(DIVIDE(MULTIPLY(pct_female_students, num_students), 100)); In years 2011 to 2013 refers to year BETWEEN 2011 AND 2013",SELECT SUM(CAST(num_students * pct_female_students AS REAL) / 100) FROM university_year WHERE year BETWEEN 2011 AND 2013 AND university_id = 40
university,Calculate the average score of university ID 79 between year 2013 to 2015.,average score refers to avg(score); between year 2013 to 2015 refers to year BETWEEN 2013 AND 2015,SELECT AVG(score) FROM university_ranking_year WHERE year BETWEEN 2013 AND 2015 AND university_id = 79
university,Give the student staff ratio of university ID 35.,,SELECT student_staff_ratio FROM university_year WHERE university_id = 35
university,Provide the score of the most populated university in 2011.,most populated university refers to MAX(num_students); in 2011 refers to year = 2011;,SELECT T2.score FROM university_year AS T1 INNER JOIN university_ranking_year AS T2 ON T1.university_id = T2.university_id WHERE T1.year = 2011 ORDER BY T1.num_students DESC LIMIT 1
university,Give the criteria name where Harvard University scored 100.,Harvard University refers to university_name = 'Harvard University'; scored 100 refers to score = 100,SELECT DISTINCT T3.criteria_name FROM university AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.university_id INNER JOIN ranking_criteria AS T3 ON T3.id = T2.ranking_criteria_id WHERE T1.university_name = 'Harvard University' AND T2.score = 100
university,Provide the university name and ID of the university found in Turkey.,found in Turkey refers to country_name = 'Turkey';,"SELECT T1.university_name, T1.id FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T2.country_name = 'Turkey'"
university,What is the total number of ranking criteria under the ranking system called Shanghai Ranking?,ranking system called Shanghai Ranking refers to system_name = 'Shanghai Ranking';,SELECT COUNT(*) FROM ranking_system AS T1 INNER JOIN ranking_criteria AS T2 ON T1.id = T2.ranking_system_id WHERE T1.system_name = 'Shanghai Ranking'
university,Give the name and score of the university ID 124.,name of university refers to university_name;,"SELECT T2.university_name, T1.score FROM university_ranking_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T2.id = 124"
university,How many female students are there in University of Pennsylvania in 2011?,"in 2011 refers to year 2011; female students refers to DIVIDE(MULTIPLY(num_students, pct_female_students), 100); University of Pennsylvania refers to a university name;",SELECT CAST(T1.num_students * T1.pct_female_students AS REAL) / 100 FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2011 AND T2.university_name = 'University of Pennsylvania'
university,List down all universities that scored below 50.,scored below 50 refers to score < 50; all universities refers to university_name;,SELECT DISTINCT T2.university_name FROM university_ranking_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.score < 50
university,How many universities are located in Japan?,located in Japan refers to country_name = 'Japan';,SELECT COUNT(*) FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T2.country_name = 'Japan'
university,Provide the name of the university with the highest number of male students.,"highest number of female students refers to MAX(SUBTRACT(num_students, DIVIDE(MULTIPLY(num_students, pct_female_students), 100))); name of university refers to university_name",SELECT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id ORDER BY T1.num_students * T1.pct_female_students / 100 - T1.num_students DESC LIMIT 1
university,List the countries of universities that scored 70 and below in 2016.,scored 70 and below refers to score < 70; in 2016 refers to year = 2016,SELECT DISTINCT T3.country_name FROM university AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T2.score < 70 AND T2.year = 2016
university,Calculate number of male students in Emory University in 2011.,"in 2011 refers to year 2011; number of male students refers to SUBTRACT(num_students, DIVIDE(MULTIPLY(num_students, pct_male_students), 100)); in Emory University refers to university_name = 'Emory University'",SELECT CAST((T1.num_students - (T1.num_students * T1.pct_female_students)) AS REAL) / 100 FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T2.university_name = 'Emory University' AND T1.year = 2011
university,In which country does Johns Hopkins University located?,Johns Hopkins University refers to university_name = 'Johns Hopkins University'; which country refers to country_name,SELECT T2.country_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T1.university_name = 'Johns Hopkins University'
university,Give the names of universities with number of students ranges from 400 to 1000.,number of students ranges from 400 to 1000 refers to num_students BETWEEN 400 AND 1000; name of university refers to university_name,SELECT DISTINCT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.num_students BETWEEN 400 AND 1000
university,In what year does the Brown University score the highest?,Brown University refers to university_name = 'Brown University'; score the highest refers to MAX(score),SELECT T1.year FROM university_ranking_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T2.university_name = 'Brown University' ORDER BY T1.score DESC LIMIT 1
university,Calculate the average score of Emory University from 2011 to 2016.,average score refers to avg(score); Emory University refers to university_name = 'Emory University'; from 2011 to 2016 refers to year BETWEEN 2011 AND 2016;,SELECT AVG(T1.score) FROM university_ranking_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T2.university_name = 'Emory University' AND T1.year BETWEEN 2011 AND 2016
university,Give the name of the university with the most number of students in 2015.,most number of students refers to MAX(num_students); in 2015 refers to year = 2015; name of university refers to university_name;,SELECT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2015 ORDER BY T1.num_students DESC LIMIT 1
university,What is the location and number of female students in university ID 23 in 2011?,"in 2011 refers to year 2011; female students refers to DIVIDE(MULTIPLY(num_students, pct_female_students), 100); location refers to country_name","SELECT T3.country_name, CAST(T2.num_students * T2.pct_female_students AS REAL) / 100 FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T2.year = 2011 AND T1.id = 23"
university,How many universities scored 40 in teaching criteria?,scored 40 refers to score = 40; in teaching refers to criteria_name = 'Teaching',SELECT COUNT(*) FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id WHERE T2.score = 40 AND T1.criteria_name = 'Teaching' AND T2.score = 40
university,"Among the universities in United States of America, what is the percentage of female students in year 2016?","female students refers to DIVIDE(MULTIPLY(num_students, pct_female_students), 100); in United States of America refers to country_name = 'United States of America'; percentage refers to DIVIDE(SUM(DIVIDE(MULTIPLY(num_students, pct_female_students), 100)), SUM(num_students))",SELECT SUM(CAST(T2.pct_female_students * T2.num_students AS REAL) / 100) * 100 / SUM(T2.num_students) FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'United States of America' AND T2.year = 2016
university,Calculate the difference between the total number of students and the number of international international students in Univeristy of Tokyo from 2011 to 2014.,"international students refers to DIVIDE(MULTIPLY(num_students, pct_international_students), 100); difference refers to SUBTRACT(SUM(num_students), SUM(DIVIDE(MULTIPLY(num_students, pct_international_students), 100))); in University of Tokyo refers to university_name = 'University of Tokyo'; from 2011 to 2014 refers to year BETWEEN 2011 AND 2014",SELECT SUM(T1.num_students) - SUM(CAST(T1.num_students * T1.pct_international_students AS REAL) / 100) FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year BETWEEN 2011 AND 2014 AND T2.university_name = 'University of Tokyo'
university,List the names of universities with a score less than 28% of the average score of all universities in 2015.,"in 2015 refers to year = 2015; score less than 28% refers to score < MULTIPLY(avg(score), 0.28) where year = 2015; names of universities refers to university_name",SELECT T2.university_name FROM university_ranking_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2015 AND T1.score * 100 < ( SELECT AVG(score) * 28 FROM university_ranking_year WHERE year = 2015 )
sales_in_weather,How many units of item no.9 were sold in store no.1 on 2012/1/1?,store no. 1 refers to store_nbr = 1; item no. 9 refers to item_nbr = 9; on 2012/1/1 refers to date = '2012-01-01',SELECT units FROM sales_in_weather WHERE `date` = '2012-01-01' AND store_nbr = 1 AND item_nbr = 9
sales_in_weather,"How many units of item no.9 were sold in store no.1 in total in January, 2012?","store no. 1 refers to store_nbr = 1; item no. 9 refers to item_nbr = 9; in January refers to SUBSTR(date, 1, 4) = '2012' and SUBSTR(date, 6, 2) = '01'","SELECT SUM(units) FROM sales_in_weather WHERE SUBSTR(`date`, 6, 2) = '01' AND SUBSTR(`date`, 1, 4) = '2012' AND item_nbr = 9 AND store_nbr = 1"
sales_in_weather,What is the ID of the item that sold the best on 2012/1/1 in store no.1?,sold on 2012/1/1 refers to date = '2012-01-01'; in store no.1 refers to store_nbr = 1; item sold the best refers to Max(units),SELECT item_nbr FROM sales_in_weather WHERE `date` = '2012-01-01' AND store_nbr = 1 ORDER BY units DESC LIMIT 1
sales_in_weather,What was the temperature range of station no.1 on 2012/1/1?,"on 2012/1/1 refers to date = '2012-01-01'; temperature range refers to Subtract (tmax, tmin); station no.1 refers to station_nbr = 1",SELECT tmax - tmin AS temrange FROM weather WHERE station_nbr = 1 AND `date` = '2012-01-01'
sales_in_weather,Please list the dates on which the temperature of station no.2 was above the 30-year normal.,temperature above the 30-year normal refers to depart > 0; station no.2 refers to station_nbr = 2,SELECT `date` FROM weather WHERE station_nbr = 2 AND depart > 0
sales_in_weather,"On which day was the weather more windy in station no.1, 2012/1/1 or 2012/1/2?",station no.1 refers to station_nbr = 1; 2012/1/1 refers to date = '2012-01-01'; 2012/1/2 refers to date = '2012-01-02'; more windy refers to Max(avgspeed),SELECT CASE WHEN (SUM(CASE WHEN `date` = '2012-01-01' THEN avgspeed ELSE 0 END) - SUM(CASE WHEN `date` = '2012-01-02' THEN avgspeed ELSE 0 END)) > 0 THEN '2012-01-01' ELSE '2012-01-02' END FROM weather WHERE station_nbr = 1
sales_in_weather,What is the total number of units of item no.5 sold in store no.3 in 2012 on days when the temperature was below the 30-year normal?,"item no.5 refers to item_nbr = 5; store no. 3 refers to store_nbr = 3; when the temperature was below the 30-year normal refers to depart < 0; in 2012 refers to SUBSTR(date, 1, 4) = '2012'; total number of units refers to Sum(units)","SELECT SUM(CASE WHEN T3.depart < 0 THEN units ELSE 0 END) AS sum FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND SUBSTR(T1.`date`, 1, 4) = '2012' AND T1.item_nbr = 5"
sales_in_weather,How many units of item no.5 were sold in store no.3 on the day in 2012 when the max temperature was the highest?,"item no.5 refers to item_nbr = 5; store no. 3 refers to store_nbr = 3; when the max temperature was highest refers to Max(tmax); in 2012 refers to SUBSTR(date, 1, 4) = '2012'","SELECT T1.units FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND SUBSTR(T1.`date`, 1, 4) = '2012' AND T1.item_nbr = 5 ORDER BY tmax DESC LIMIT 1"
sales_in_weather,What was the dew point on the day the most units of item no.5 were sold in store no.3 in 2012?,"item no. 5 refers to item_nbr = 5; store no.3 refers to store_nbr = 3; in 2012 refers to SUBSTR(date, 1, 4) = '2012': most units sold refers to Max(units)","SELECT dewpoint FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND SUBSTR(T1.`date`, 1, 4) = '2012' AND T1.item_nbr = 5 ORDER BY units DESC LIMIT 1"
sales_in_weather,On how many days with the max temperature over 90 did the sale of item no.5 in store no.3 exceed 100?,max temperature over 90 refers to tmax > 90; item no. 5 refers to item_nbr = 5; store no.3 refers to store_nbr = 3; sale exceed 100 refers to units > 100; number of days refers to count (date),"SELECT SUM(CASE WHEN units > 100 THEN 1 ELSE 0 END) AS count FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND SUBSTR(T1.`date`, 1, 4) = '2012' AND T1.item_nbr = 5 AND tmax > 90"
sales_in_weather,How many units of item no.5 were sold in store no.3 on the day the temperature range was the biggest?,"item no. 5 refers to item_nbr = 5; store no.3 refers to store_nbr = 3; when the temperature range was the biggest refers to Max(Subtract(tmax, tmin))",SELECT t2.units FROM relation AS T1 INNER JOIN sales_in_weather AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T1.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND T2.item_nbr = 5 ORDER BY t3.tmax - t3.tmin DESC LIMIT 1
sales_in_weather,"Among the days on which over 100 units of item no.5 were sold in store no.3, on which date was the temperature range the biggest?","over 100 units refers to units > 100; item no. 5 refers to item_nbr = 5; store no.3 refers to store_nbr = 3; the temperature range was the biggest refers to Max(Subtract(tmax, tmin))",SELECT T2.`date` FROM relation AS T1 INNER JOIN sales_in_weather AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T1.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND T2.item_nbr = 5 AND T2.units > 100 ORDER BY tmax - tmin DESC LIMIT 1
sales_in_weather,How many units of item no.5 were sold in store no.3 in total on days with a total precipitation of over 0.05?,item no. 5 refers to item_nbr = 5; store no.3 refers to store_nbr = 3; with a total precipitation of over 0.05 refers to preciptotal > 0.05,SELECT SUM(CASE WHEN T3.preciptotal > 0.05 THEN units ELSE 0 END) AS sum FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND T1.item_nbr = 5
sales_in_weather,Please list the dates on which the sale of item no.5 in store no.3 exceeded 100 and the average wind speed exceeded 10.,item no. 5 refers to item_nbr = 5; store no.3 refers to store_nbr = 3; exceed 100 refers to units > 100; average wind speed exceeded 10 refers to avgspeed > 10,SELECT T1.`date` FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND T1.item_nbr = 5 AND T1.units > 100 AND T3.avgspeed > 10
sales_in_weather,What is the total units of products sold on the day with the highest max temperature in store no.3 in 2012?,"highest max temperature refers to Max(tmax); store no.3 refers to store_nbr = 3; in 2012 refers to substring (date, 1, 4) = '2012'; total units refers to sum(units)",SELECT SUM(units) FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND T1.`date` LIKE '%2012%' GROUP BY T3.tmax ORDER BY T3.tmax DESC LIMIT 1
sales_in_weather,How many more units of item no.16 were sold on the day with the highest max temperature in 2012 in store no.5 than in store no.10?,"store no. 5 refers to store_nbr = 5; store no. 10 refers to store_nbr = 10; item no.16 refers to item_nbr = 16; in 2012 refers to SUBSTR(date, 1, 4) = '2012'; highest max temperature refers to Max(tmax); more units sold refers to Subtract ( Sum(units where store_nbr = 5), Sum(units where store_nbr = 10))",SELECT ( SELECT SUM(units) FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T1.item_nbr = 16 AND T1.`date` LIKE '%2012%' AND T1.store_nbr = 5 GROUP BY tmax ORDER BY T3.tmax DESC LIMIT 1 ) - ( SELECT SUM(units) FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T1.item_nbr = 16 AND T1.`date` LIKE '%2012%' AND T1.store_nbr = 6 GROUP BY tmax ORDER BY T3.tmax DESC LIMIT 1 )
sales_in_weather,What is the ID of the item that sold the best on the day with the highest max temperature in store no.3 in 2012?,"highest max temperature refers to Max(tmax); store no.3 refers to store_nbr = 3; in 2012 refers to substring (date, 1, 4) = '2012'; sold the best refers to Max(units); ID of the item refers to item_nbr",SELECT T1.item_nbr FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T1.store_nbr = 3 AND T1.`date` LIKE '%2012%' AND tmax = ( SELECT MAX(tmax) FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T1.store_nbr = 3 AND T1.`date` LIKE '%2012%' ) GROUP BY T1.item_nbr ORDER BY SUM(units) DESC LIMIT 1
sales_in_weather,"On the day with the highest max temperature in 2012, how many items in store no.3 had no sales?","highest max temperature refers to Max(tmax); in 2012 refers to SUBSTR(date, 1, 4) = '2012'; store no.3 refers to store_nbr = 3; had no sale refers to units = 0","SELECT COUNT(DISTINCT T1.item_nbr) FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr AND T1.store_nbr = 3 AND SUBSTR(T1.`date`, 1, 4) = '2012' AND T1.units = 0 GROUP BY T3.tmax ORDER BY T3.tmax DESC LIMIT 1"
sales_in_weather,How many units of item no.5 were sold in store no.3 on average on the days when the max temperature exceeded 90?,"item no. 5 refers to item_nbr = 5; store no.3 refers to store_nbr = 3;  when the maximum temperature exceed 90 refers to tmax > 90; average = Divide (Sum(units), Count(date))",SELECT CAST(SUM(T1.units) AS REAL) / COUNT(T1.`date`) FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T1.store_nbr = 3 AND T1.item_nbr = 5 AND T3.tmax > 90
sales_in_weather,What is the percentage of the units of item no.5 sold among all units of items sold in store no.3 on the day with the highest max temperature in 2012?,"item no. 5 refers to item_nbr = 5; store no.3 refers to store_nbr = 3; highest max temperature refers to Max(tmax); in 2012 refers to SUBSTR(date, 1, 4) = '2012';  Percentage = Divide (Sum(units where item_nbr = 5), Sum(units)) * 100",SELECT CAST(SUM(CASE WHEN T1.item_nbr = 5 THEN units * 1 ELSE 0 END) AS REAL) * 100 / SUM(units) FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T1.store_nbr = 3 AND T1.`date` LIKE '%2012%' AND T3.tmax = ( SELECT MAX(T3.tmax) FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T1.store_nbr = 3 AND T1.`date` LIKE '%2012%' )
sales_in_weather,Give the id of the bestsellers of store no.1 on 2012/1/1.,store no. 1 refers to store_nbr = 1; on 2012/1/1 refers to date = '2012-01-01'; best seller refers to Max(units); ID refers to item_nbr,SELECT item_nbr FROM sales_in_weather WHERE `date` = '2012-01-01' AND store_nbr = 1 ORDER BY units DESC LIMIT 1
sales_in_weather,How many no.9 items from store no.11 were sold on 2012/12/7?,no. 9 item refers to item_nbr = 9; store no.11 refers to store_nbr = 11; sold on 2012/12/7 refers to date = '2012-12-07',SELECT units FROM sales_in_weather WHERE `date` = '2012-12-07' AND store_nbr = 11 AND item_nbr = 9
sales_in_weather,Give the average temperature of station no.20 on 2014/10/17.,station no.20 refers to station_nbr = 20; on 2014/10/17 refers to date = '2014-10-17'; average temperature refers to tavg,SELECT tavg FROM weather WHERE `date` = '2014-10-17' AND station_nbr = 20
sales_in_weather,Tell the resultant wind speed of station no.9 on 2014/1/15.,station no.9 refers to station_nbr = 9; on 2014/1/15 refers to date = '2014/01/15'; result wind speed refers to resultspeed,SELECT resultspeed FROM weather WHERE `date` = '2014-01-15' AND station_nbr = 9
sales_in_weather,Give the id of the weather station with most stores.,station with more stores refers to Max(Count(store_nbr)); ID of weather station refers to station_nbr,SELECT station_nbr FROM relation GROUP BY station_nbr ORDER BY COUNT(station_nbr) DESC LIMIT 1
sales_in_weather,Which weather station does store no.20 belong to?,store no.20 refers to store_nbr = 20; weather station refers to station_nbr,SELECT station_nbr FROM relation WHERE store_nbr = 20
sales_in_weather,Tell the temperature range of the home weather station of store no.7 on 2014/4/28.,"store no.7 refers to tore_nbr = 7; on 2014/4/28 refers to date = '2014-04-28'; temperature range refers to Subtract (tmax, tmin)",SELECT T1.tmax - T1.tmin AS temprange FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 7 AND T1.`date` = '2014-04-28'
sales_in_weather,"For the weather station which recorded the highest temperature above the 30-year normal, how many stores does it have?",highest temperature above the 30-year normal refers to Max(depart),SELECT store_nbr FROM relation WHERE station_nbr = ( SELECT station_nbr FROM weather ORDER BY depart DESC LIMIT 1 )
sales_in_weather,"For the home weather station of store no.15, what was the dew point on 2012/2/18?",store no. 15 refers to store_nbr = 15; on 2012/2/18 refers to date = '2012-02-18',SELECT T1.dewpoint FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 15 AND T1.`date` = '2012-02-18'
sales_in_weather,Tell the wet-bulb temperature of the weather station which contained store no.6 on 2012/2/15.,store no.6 refers to store_nbr = 6; on 2012/2/15 refers to date = '2012-02-15'; wet-bulb temperature refers to wetbulb,SELECT T1.wetbulb FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 14 AND T1.`date` = '2012-02-15'
sales_in_weather,Give the number of stores which opened on the weather station that recorded the fastest average wind speed.,fastest average wind speed refers to Max(avgspeed); number of store refers to count(store_nbr),SELECT COUNT(T.store_nbr) FROM ( SELECT DISTINCT store_nbr FROM relation WHERE station_nbr = ( SELECT station_nbr FROM weather ORDER BY avgspeed DESC LIMIT 1 ) ) T
sales_in_weather,State the max temperature of the weather station which has the no.21 store on 2012/11/9.,no.21 store refers to store_nbr = 21; on 2012/11/9 refers to date = '2012-11-09'; max temperature refers to tmax,SELECT tmax FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 21 AND T1.`date` = '2012-11-09'
sales_in_weather,Provide the sunrise time recorded by the home weather station of store no.30 on 2014/2/21.,store no. 30 refers to store_nbr = 30; on 2014/2/21 refers to date = '2014-02-21',SELECT T1.sunrise FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T1.`date` = '2014-02-21' AND store_nbr = 30
sales_in_weather,State the number of stores that belongs to the weather station which recorded the deepest snowfall.,deepest snowfall refers to Max(snowfall); number of stores refers to store_nbr,SELECT T2.store_nbr FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr ORDER BY snowfall DESC LIMIT 1
sales_in_weather,Provide the code summarization for the weather recorded by the weather station which contained the no.2 store on 2013/2/12.,no.2 store refers to store_nbr = 2; on 2013/2/12 refers to date = '2013-02-12'; code summarization refers to codesum,SELECT T1.codesum FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T1.`date` = '2013-02-12' AND T2.store_nbr = 2
sales_in_weather,Show the sea level status recorded by the weather station of store no.19 on 2013/2/24.,store no.19 refers to store_nbr = 19; on 2013/2/24 refers to date = '2013-02-24'; sea level status refers to sealevel,SELECT T1.sealevel FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T1.`date` = '2013-02-24' AND T2.store_nbr = 19
sales_in_weather,How many inches of total precipitation was recorded by the weather station of store no.2 on 2012/12/25?,store no.2 refers to store_nbr = 2; on 2012/12/25 refers to date = '2012-12-25'; total precipitation refers to preciptotal,SELECT T1.preciptotal FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T1.`date` = '2012-12-25' AND T2.store_nbr = 2
sales_in_weather,Give the station pressure status recorded by the weather station which contained no.12 store on 2012/5/15.,no.12 store refers to store_nbr = 12; on 2012/5/15 refers to date = '2012-05-15'; station pressure status refers to stnpressure,SELECT T1.stnpressure FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T1.`date` = '2012-05-15' AND T2.store_nbr = 12
sales_in_weather,What percentage was the total unit sales of store no.10 to the total sales of its weather station on 2014/10/31?,"store no.10 refers to store_nbr = 10; on 2014/10/31 refers to date = '2014-10-31'; percentage = Divide (Sum(units where store_nbr = 10), Sum(units)) * 100",SELECT CAST(SUM(CASE WHEN T2.store_nbr = 10 THEN units * 1 ELSE 0 END) AS REAL) * 100 / SUM(units) FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr WHERE T1.`date` = '2014-10-31'
sales_in_weather,"For the weather station has store no.9, what was the increased percentage of the average temperature from 2012/2/2 to 2012/2/3?","store no.9 refers to store_nbr = 9; 2012/2/2 refers to date = '2012-02-02'; 2012/2/3 refers to date = '2012-02-03'; average temperature refers to tavg; increase percentage = Divide (Subtract (tavg where date = '2012-02-03', tavg where date = '2012-02-02'), tavg where date = '2012-02-02') * 100",SELECT CAST((SUM(CASE WHEN T1.`date` = '2012-02-03' THEN T1.tavg * 1 ELSE 0 END) - SUM(CASE WHEN T1.`date` = '2012-02-02' THEN T1.tavg * 1 ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T1.`date` = '2012-02-02' THEN T1.tavg * 1 ELSE 0 END) FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 9
sales_in_weather,What is the item number of the product with the highest number of units sold in store number 1 on 1/1/2012?,item number refers to item_nbr; highest number of units sold refers to Max(units); store no.1 refers to store_nbr = 1; on 1/1/2012 refers to date = '2012-01-01',SELECT item_nbr FROM sales_in_weather WHERE `date` = '2012-01-01' AND store_nbr = 1 ORDER BY units DESC LIMIT 1
sales_in_weather,How many stores are in weather station 12?,weather station 12 refers to station_nbr = 12; number of stores refers to Count(store_nbr),SELECT SUM(store_nbr) FROM relation WHERE station_nbr = 12
sales_in_weather,How many items weren't sold in store 2 on 1/1/2012?,store no.2 refers to store_nbr = 2; item weren't sold refers to units = 0; on 1/1/2012 refers to date = '2012-01-01',SELECT COUNT(item_nbr) FROM sales_in_weather WHERE store_nbr = 2 AND units = 0 AND `date` = '2012-01-01'
sales_in_weather,"Between 1/1/2012 to 12/31/2014, which date recorded the hottest temperature in weather station 1?","weather station 1 refers to station_nbr = 1; hottest temperature refers to Max(tmax); between 1/1/2012 to 12/31/2014 refers to SUBSTR(date, 1, 4) between 2012 and 2014","SELECT `date` FROM weather WHERE station_nbr = 1 AND CAST(SUBSTR(`date`, 1, 4) AS int) BETWEEN 2012 AND 2014 ORDER BY tmax DESC LIMIT 1"
sales_in_weather,Which weather station has the highest number of stores?,number of store refers to store_nbr; highest number of store refers to Max(Count(store_nbr)); weather station refers to station_nbr,SELECT station_nbr FROM relation GROUP BY station_nbr ORDER BY COUNT(store_nbr) DESC LIMIT 1
sales_in_weather,"In March 2014, which weather stations recorded the highest number of days whose temperature is below the 30-year normal?","in March 2014 refers to substring (date, 1, 4) = '2014' and substring (date, 6, 2) = '03'; temperature is below the 30-year normal refers to depart < 0; highest number of days refers to Max(Count(date))","SELECT station_nbr FROM weather WHERE SUBSTR(`date`, 1, 4) = '2014' AND SUBSTR(`date`, 6, 2) = '03' AND depart < 0 GROUP BY station_nbr HAVING COUNT(DISTINCT `date`) = ( SELECT COUNT(DISTINCT `date`) FROM weather WHERE SUBSTR(`date`, 1, 4) = '2014' AND SUBSTR(`date`, 6, 2) = '03' AND depart < 0 GROUP BY station_nbr ORDER BY COUNT(`date`) DESC LIMIT 1 )"
sales_in_weather,Which weather station does the store that sold the highest quantity of item 9 belongs to?,item 9 refers to item_nbr = 9; sold the highest quantity refers to Max(Sum(units)); weather station refers to station_nbr,SELECT station_nbr FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr WHERE T1.item_nbr = 9 GROUP BY T2.station_nbr ORDER BY SUM(T1.units) DESC LIMIT 1
sales_in_weather,How many stores belong to the most windy station?,most windy station refers to Max(avgspeed),SELECT COUNT(store_nbr) FROM relation WHERE station_nbr = ( SELECT station_nbr FROM weather ORDER BY avgspeed DESC LIMIT 1 )
sales_in_weather,"Among the stores in weather station 14 in February 2014, which store had sold no less than 300 quantities for item number 44 in a single day?","weather station 14 refers to station_nbr = 14; February 2014 refers to substring (date, 1, 7) = '2014-02' ; sold no less than 300 quantities refers to units > = 300; item no.44 refers to item_nbr = 44; store refers to store_nbr",SELECT T1.store_nbr FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr WHERE T2.station_nbr = 14 AND T1.`date` LIKE '%2014-02%' AND T1.item_nbr = 44 AND units >= 300
sales_in_weather,What is the most purchased products during the rainy days in June 2013 in weather station 9?,"most purchased product refers to Max(units); during the rainy day refers to codesum = RA; in June 2013 refers to SUBSTR(date, 1, 7) = '2013-06'; weather station 9 refers to station_nbr = 9; product refers to item_nbr",SELECT T1.item_nbr FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T3.station_nbr = 9 AND T1.`date` LIKE '%2013-06%' AND codesum = 'RA' ORDER BY T1.units DESC LIMIT 1
sales_in_weather,Which station sold the highest quantity of item number 5 overall?,item number 5 refers to item_nbr = 5; sold highest quantity refers to Max(Sum(units)); station refers to station_nbr,SELECT T2.station_nbr FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr WHERE T1.item_nbr = 5 GROUP BY T2.station_nbr ORDER BY SUM(T1.units) DESC LIMIT 1
sales_in_weather,What is the earliest sunrise recorded in the stations with no more than 1 store in February 2012?,"in February 2012 refers to SUBSTR(date, 1, 7) = '2012-02'; earliest sunrise Min(sunrise);  station with no more than 1 store refers to station_nbr where Count(store_nbr) = 1",SELECT T1.station_nbr FROM relation AS T1 INNER JOIN weather AS T2 ON T1.station_nbr = T2.station_nbr WHERE sunrise IS NOT NULL AND T2.`date` LIKE '%2012-02%' AND T1.station_nbr IN ( SELECT station_nbr FROM relation GROUP BY station_nbr HAVING COUNT(store_nbr) = 1 ) ORDER BY sunrise LIMIT 1
sales_in_weather,"In weather station 17, which store sold the highest quantity of item 45 in October 2012?","weather station 17 refers to station_nbr = 17; item 45 refers to item_nbr = 45; in October 2012 refers to SUBSTR(date, 1, 7) = '2012-10': highest quantity refers to Max(Sum(units)); store refers to store_nbr",SELECT T1.store_nbr FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr WHERE T1.item_nbr = 45 AND T2.station_nbr = 17 AND T1.`date` LIKE '%2012-10%' GROUP BY T1.store_nbr ORDER BY SUM(T1.units) DESC LIMIT 1
sales_in_weather,What are the items sold by the store during the day whose station recorded the thickest snowfall?,thickest snowfall refers to Max(snowfall); item refers to item_nbr,"SELECT T1.item_nbr FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN ( SELECT station_nbr, `date` FROM weather ORDER BY snowfall DESC LIMIT 1 ) AS T3 ON T2.station_nbr = T3.station_nbr"
sales_in_weather,What are the top 3 stations that have sold the highest quantities for an item in a single day?,highest quantity refers to Max(units); station refers to station_nbr,SELECT T2.station_nbr FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr ORDER BY T1.units DESC LIMIT 3
sales_in_weather,How many stores belong to the station with the highest recorded heat of all time?,highest recorded heat refers to Max(heat); station refers to station_nbr,SELECT COUNT(T2.store_nbr) FROM ( SELECT station_nbr FROM weather ORDER BY heat DESC LIMIT 1 ) AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr
sales_in_weather,"On February 8, 2014, what is the minimum temperature in the station where store 29 belongs?","On February 8, 2014 refers to date = '2014-02-08'; store 29 refers to store_nbr = 29; minimum temperature refers to tmin; station refers to station_nbr",SELECT tmin FROM relation AS T1 INNER JOIN weather AS T2 ON T1.station_nbr = T2.station_nbr WHERE T1.store_nbr = 29 AND T2.`date` = '2014-02-08'
sales_in_weather,"Among the stations with 3 stores, how many stations have a station pressure of no more than 30 on February 18, 2014?","station with 3 stores refers to station_nbr where Count(store_nbr) = 3; station pressure of no more than 30 refers to stnpressure < 30; On February 18, 2014 refers to date = '2014-02-18'",SELECT COUNT(station_nbr) FROM weather WHERE `date` = '2014-02-18' AND stnpressure < 30 AND station_nbr IN ( SELECT station_nbr FROM relation GROUP BY station_nbr HAVING COUNT(store_nbr) = 3 )
sales_in_weather,Which station has the highest number of stores? Calculate the said station's average maximum temperature in February 2012.,"station with highest number of stores refers to station_nbr where Max(Count(store_nbr)); station refers to station_nbr; in February 2012 refers to substring (date, 1, 7) = '2012-02'; average maximum temperature = Divide(Sum(tmax), 29)","SELECT CAST(SUM(T2.tmax) AS REAL) / 29 FROM ( SELECT station_nbr FROM relation GROUP BY station_nbr ORDER BY COUNT(store_nbr) DESC LIMIT 1 ) AS T1 INNER JOIN weather AS T2 ON T1.station_nbr = T2.station_nbr WHERE SUBSTR(T2.`date`, 1, 7) = '2012-02'"
sales_in_weather,"Between the stores under weather station 12, what is the percentage of item 5 sold in store 10 in 2014?","weather station 12 refers to station_nbr = 12; item 5 refers to item_nbr = 5; 10 store refers to store_nbr = 10; in 2014 refers to SUBSTR(date, 1, 4) = '2014'; percentage = Divide (Sum(units where store_nbr = 10), Sum(units)) * 100",SELECT CAST(SUM(CASE WHEN T2.store_nbr = 10 THEN units * 1 ELSE 0 END) AS REAL) * 100 / SUM(units) FROM relation AS T1 INNER JOIN sales_in_weather AS T2 ON T1.store_nbr = T2.store_nbr WHERE station_nbr = 12 AND item_nbr = 5 AND T2.`date` LIKE '%2014%'
sales_in_weather,What is the maximum average speed?,maximum average speed refers to Max(avgspeed),SELECT MAX(avgspeed) FROM weather
sales_in_weather,How many days did the show fell more than 5 inches?,snow fell more than 5 inches refers to snowfall > 5,SELECT COUNT(DISTINCT `date`) FROM weather WHERE snowfall > 5
sales_in_weather,How many days did the sun rise before 5 AM?,sunrise before 5 Am refers to sunrise < time ('5:00:00'),SELECT COUNT(DISTINCT `date`) AS days FROM weather WHERE sunrise < time('05:00:00')
sales_in_weather,What is the minimum dew point?,minimum dew point refers to Min(dewpoint),SELECT MIN(dewpoint) FROM weather
sales_in_weather,What is the maximum and minimum temperature for station number 1 on 15 January 2012?,station number 1 refers to station_nbr = 1 ; minimum temperature = tmin; maximum temperature = tmax; on 15 January 2012 refers to date = '2012-01-15',"SELECT tmax, tmin FROM weather WHERE station_nbr = 1 AND `date` = '2012-01-15'"
sales_in_weather,How many stations were able to sell item 5 on January 2014?,"item 5 refers to item_nbr = 5; on January 2014 refers to Substring (date, 1, 7) = '2014-01'","SELECT COUNT(DISTINCT T2.station_nbr) AS number FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr WHERE SUBSTR(`date`, 1, 7) = '2014-01' AND item_nbr = 5"
sales_in_weather,What is the lowest minimum temperature recorded in store 16 on January 2012?,"lowest minimum temperature refers to Min(tmin); store 16 refers to store_nbr = 16; on January 2012 refers to Substring (date, 1, 7) = '2012-01'",SELECT MIN(tmin) FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 16 AND T1.`date` LIKE '%2012-01%'
sales_in_weather,How many units of item 7 have been sold by store 7 when the snow is less than 5 inches?,item 7 refers to item_nbr = 7; store 7 refers to store_nbr = 7; snow is less than 5 inches refers to snowfall < 5,SELECT SUM(units) FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr INNER JOIN sales_in_weather AS T3 ON T2.store_nbr = T3.store_nbr WHERE T2.store_nbr = 7 AND T3.item_nbr = 7 AND T1.snowfall < 5
sales_in_weather,How many items were sold by store 9 during a snowy day?,store 9 refers to store_nbr = 9; snowy day refers to snowfall < > 0 and snowfall is not null; item refers to item_nbr,SELECT COUNT(DISTINCT item_nbr) FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr INNER JOIN sales_in_weather AS T3 ON T2.store_nbr = T3.store_nbr WHERE T3.store_nbr = 9 AND T1.snowfall <> 0 AND T1.snowfall IS NOT NULL
sales_in_weather,List out stations number and items sold by store 17.,station number refers to station_nbr; store 17 refers to store_nbr = 17,"SELECT T1.station_nbr, T2.item_nbr FROM relation AS T1 INNER JOIN sales_in_weather AS T2 ON T1.store_nbr = T2.store_nbr WHERE T1.store_nbr = 17 GROUP BY T1.station_nbr, T2.item_nbr"
sales_in_weather,List out dates when haze is recorded in store 35.,store 35 refers to store_nbr = 35; haze is recorded refers to codesum like '%'||'HZ'||'%',SELECT T1.`date` FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 35 AND T1.codesum LIKE '%' OR 'HZ' OR '%'
sales_in_weather,What is the sea level and average speed for store number 3 and store number 4?,store number 3 refers to store_nbr = 3; average speed refers to avgspeed; store number 4 refers to store_nbr = 4,"SELECT T1.sealevel, T1.avgspeed FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 3 OR T2.store_nbr = 4"
sales_in_weather,Which items from store 1 have the highest units sold during rainy day?,store 1 refers to store_nbr = 1; highest unit sold refers to Max(units); during rainy day refers to codesum like '%'||'RA'||'%'; item refers to item_nbr,SELECT T2.item_nbr FROM weather AS T1 INNER JOIN sales_in_weather AS T2 ON T1.`date` = T2.`date` INNER JOIN relation AS T3 ON T2.store_nbr = T3.store_nbr AND T1.station_nbr = T3.station_nbr WHERE T2.store_nbr = 1 AND T1.codesum LIKE '%' OR 'RA' OR '%' GROUP BY T2.item_nbr ORDER BY T2.units DESC LIMIT 1
sales_in_weather,What is the ratio of the highest and lowest temperature in store 11?,"store 11 refers to store_nbr = 11; highest temperature refers to Max(tmax); lowest temperature refers to Min(tmin); ration = Divide (Max(tmax), Min(tmin))",SELECT CAST((MAX(T1.tmax) - MIN(T1.tmin)) AS REAL) / MIN(T1.tmin) FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 11
sales_in_weather,What was the difference of number of units sold in station number 1 and number 2 on year 2012?,"station 1 refers to station_nbr = 1; station 2 refers to station_nbr = 2; on year 2012 refers to substring (date, 1, 4) = '2012'; difference = Subtract (Sum(units where station_nbr = 1), Sum(units where station_nbr = 2))",SELECT SUM(CASE WHEN T1.station_nbr = 1 THEN units ELSE 0 END) - SUM(CASE WHEN T1.station_nbr = 2 THEN units ELSE 0 END) FROM relation AS T1 INNER JOIN sales_in_weather AS T2 ON T1.store_nbr = T2.store_nbr WHERE T2.`date` LIKE '%2012%'
sales_in_weather,What was the average temperature difference between store number 18 and 19 on 16 September 2022?,"store number 18 refers to store_nbr = 18; store number 19 refers to store_nbr = 19; on 16 September 2022 refers to date = '2022-09-16'; average temperature difference = Subtract(tavg where store_nbr = 18, tavg where store_nbr = 19)",SELECT SUM(CASE WHEN T1.store_nbr = 18 THEN T2.tavg ELSE 0 END) - SUM(CASE WHEN T1.store_nbr = 19 THEN T2.tavg ELSE 0 END) FROM relation AS T1 INNER JOIN weather AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.`date` = '2012-09-16'
sales_in_weather,How many units are being sold for item 1 when the average temperature is 83?,item 1 refers to item_nbr = 1; when the average temperature is 83 refers to tavg = 83,SELECT SUM(units) FROM weather AS T1 INNER JOIN sales_in_weather AS T2 ON T1.`date` = T2.`date` INNER JOIN relation AS T3 ON T2.store_nbr = T3.store_nbr WHERE T2.item_nbr = 1 AND T1.tavg = 83
sales_in_weather,What is the difference between the units sold for item 1 when the sunset was the earliest and the latest?,"item 1 refers to item_nbr = 1; when the sunset earliest refers to Min(sunset); latest sunset refers to Max(sunset); difference unit sold refers to Subtract(Sum(units where Min(sunset)), Sum(units where Max(sunset)))",SELECT ( SELECT SUM(T2.units) AS sumunit FROM weather AS T1 INNER JOIN sales_in_weather AS T2 ON T1.`date` = T2.`date` INNER JOIN relation AS T3 ON T2.store_nbr = T3.store_nbr WHERE T2.item_nbr = 5 AND sunset IS NOT NULL GROUP BY T1.sunset ORDER BY T1.sunset LIMIT 1 ) - ( SELECT SUM(T2.units) AS sumunit FROM weather AS T1 INNER JOIN sales_in_weather AS T2 ON T1.`date` = T2.`date` INNER JOIN relation AS T3 ON T2.store_nbr = T3.store_nbr WHERE T2.item_nbr = 5 AND sunset IS NOT NULL GROUP BY T1.sunset ORDER BY T1.sunset DESC LIMIT 1 )
sales_in_weather,What was the total unit sold for item 10 when the average temperature was below the median temperature?,item 10 refers to item_nbr = 10; average temperature below median temperature refers to tavg < avg(tavg); total units refers to Sum(units),SELECT SUM(T5.units) FROM weather AS T4 INNER JOIN sales_in_weather AS T5 ON T4.`date` = T5.`date` INNER JOIN relation AS T6 ON T5.store_nbr = T6.store_nbr WHERE T5.item_nbr = 10 AND T4.tavg < ( SELECT AVG(T1.tavg) FROM weather AS T1 INNER JOIN sales_in_weather AS T2 ON T1.`date` = T2.`date` INNER JOIN relation AS T3 ON T2.store_nbr = T3.store_nbr WHERE T2.item_nbr = 10 )
sales_in_weather,What was the average temperature differences during May 2012 for store number 6 and 7?,"during May 2012 refers to SUBSTR(date, 1, 7) = '2012-05'; store number 6 refers to store_nbr = 6; store number 7 refers to store_nbr = 7; average temperature difference = Subtract (Divide (Sum(tavg), Count (date) where the store_nbr = 6), Divide (Sum(tavg), Count(date) where store_nbr = 7))",SELECT ( SELECT CAST(SUM(tavg) AS REAL) / COUNT(`date`) FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr AND T1.`date` LIKE '%2012-05%' AND T2.store_nbr = 6 ) - ( SELECT CAST(SUM(tavg) AS REAL) / COUNT(`date`) FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T1.`date` LIKE '%2012-05%' AND T2.store_nbr = 7 )
mondial_geo,In which country does Polish found least in?,,"SELECT T2.Name FROM ethnicGroup AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T1.Name = 'Polish' GROUP BY T2.Name, T1.Percentage ORDER BY T1.Percentage ASC LIMIT 1"
mondial_geo,Which countries have more than 90% of African? List the name of the country in full.,Percentage = 90 means 90% of the population,SELECT T2.Name FROM ethnicGroup AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T1.Name = 'African' AND T1.Percentage > 90
mondial_geo,State the different ethnic group and percentage of the language in Singapore.,,"SELECT T1.Name, T1.Percentage FROM ethnicGroup AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T2.Name = 'Singapore' GROUP BY T1.Name, T1.Percentage"
mondial_geo,Calculate the percentage of country which gained independence as republic after 1970.,,"SELECT CAST(SUM(CASE WHEN Government = 'republic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Country) FROM politics WHERE STRFTIME('%Y', Independence) > '1970'"
mondial_geo,Find the GPD for Bosnia and Herzegovina and the type of government it belongs to.,,"SELECT T1.GDP, T2.Government FROM economy AS T1 INNER JOIN politics AS T2 ON T1.Country = T2.Country INNER JOIN country AS T3 ON T3.Code = T2.Country WHERE T3.Name = 'Bosnia and Herzegovina'"
mondial_geo,State the country and its population with population growth greater than 2% but infant mortality rate less than 5%.,,"SELECT T1.Name, T1.Population FROM country AS T1 INNER JOIN population AS T2 ON T1.Code = T2.Country WHERE T2.Population_Growth > 2 AND T2.Infant_Mortality < 5"
mondial_geo,"Which is the majority of the ethnic group in country with great than 10,000,000 population",,"SELECT T2.Name FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country WHERE T1.Population > 10000000 GROUP BY T2.Name, T2.Percentage ORDER BY T2.Percentage DESC LIMIT 2"
mondial_geo,Provide the country with its full name which has the most ethnic group? List them all ethnic group together with its percentage.,,"SELECT T1.Name, T2.Name, T2.Percentage FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country WHERE T1.Name = ( SELECT T1.Name FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country GROUP BY T1.Name ORDER BY COUNT(T2.Name) DESC LIMIT 1 ) GROUP BY T1.Name, T2.Name, T2.Percentage"
mondial_geo,What is the full name of the country with 100% Africans?,Percentage = 100 means 100% of the population,SELECT T1.Name FROM ethnicGroup AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T1.Percentage = 100 AND T1.Name = 'African'
mondial_geo,List the infant mortality of country with the least Amerindian.,,SELECT T1.Infant_Mortality FROM population AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Country = T2.Country WHERE T2.Name = 'Amerindian' ORDER BY T2.Percentage ASC LIMIT 1
mondial_geo,"For country with area greater than 600000, what is agriculture percentage of GDP the country contributes?",,SELECT T2.Agriculture FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T1.Area > 600000 AND T2.Agriculture IS NOT NULL
mondial_geo,Provide the country with republic government which has the highest population growth?,,SELECT T2.Country FROM population AS T1 INNER JOIN politics AS T2 ON T1.Country = T2.Country WHERE T2.Government = 'republic' ORDER BY T1.Population_Growth DESC LIMIT 1
mondial_geo,When did 'Bulgaria' gain independence?,,SELECT T2.Independence FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Bulgaria'
mondial_geo,Calculate the population of Arab in each country?,Arab is the name of enthic groups in the country; Population of (Arab in each country) = (percentage of Arab) * (population of each country),SELECT T2.Percentage * T1.Population FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'Arab'
mondial_geo,What is the population of African in 'Turks and Caicos Islands'?,African is the name of enthic groups in the country; Population of (African in Turks and Calcos Island) = (percentage of African) * (population of Turks and Calcos Island),SELECT T2.Percentage * T1.Population FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'African' AND T1.Name = 'Turks and Caicos Islands'
mondial_geo,What is the number of growth population for country with the lowest infant mortality?,Growth population = population_growth * population,SELECT T2.Population_Growth * T1.Population FROM country AS T1 INNER JOIN population AS T2 ON T1.Code = T2.Country WHERE T2.Infant_Mortality IS NOT NULL ORDER BY T2.Infant_Mortality ASC LIMIT 1
mondial_geo,"Among countries with more than 400,000 GDP, state its capital and population.",,"SELECT T1.Capital, T1.Population FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T2.GDP > 400000"
mondial_geo,Calculate the service of GDP for Brazil.,The service of GDP can be computed by service * GDP,SELECT T2.Service * T2.GDP FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Brazil'
mondial_geo,Which country has the highest infant mortality? Also state its population growth.,,"SELECT T1.Name, T2.Population_Growth FROM country AS T1 INNER JOIN population AS T2 ON T1.Code = T2.Country ORDER BY T2.Infant_Mortality DESC LIMIT 1"
mondial_geo,"List all countries with negative growth in population. State the country, population and growth.",Negative growth in population means population_growth < 0,"SELECT T1.Name, T1.Population, T2.Population_Growth FROM country AS T1 INNER JOIN population AS T2 ON T1.Code = T2.Country WHERE T2.Population_Growth < 0"
mondial_geo,"For countries with area between 500000 to 1000000, state the country and infant mortality rate.",,"SELECT T1.Name, T2.Infant_Mortality FROM country AS T1 INNER JOIN population AS T2 ON T1.Code = T2.Country WHERE T1.Area BETWEEN 500000 AND 1000000"
mondial_geo,"Among the countries with more than 3% population growth rate, state the country name in full along with its GDP.",Population_growth = 3 means 3% population growth rate,"SELECT T1.Name, T3.GDP FROM country AS T1 INNER JOIN population AS T2 ON T1.Code = T2.Country INNER JOIN economy AS T3 ON T3.Country = T2.Country WHERE T2.Population_Growth > 3"
mondial_geo,What is the infant mortality rate for Ethiopia?,Ethiopia is one of country names,SELECT T2.Infant_Mortality FROM country AS T1 INNER JOIN population AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Ethiopia'
mondial_geo,How much does the gross domestic products goes to the industry sector for Singapore?,Singapore is one of country names; GDP refers to gross domestic products; GDP to the industry sector = GDP * Industry,SELECT T2.GDP * T2.Industry FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Singapore'
mondial_geo,How much is her GDP in agriculture for the country with the least area?,,SELECT T2.GDP * T2.Agriculture FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country ORDER BY T1.Area ASC LIMIT 1
mondial_geo,Which country has the biggest percentage of the albanian ethnic group?,,SELECT T1.Name FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'Albanian' ORDER BY T2.Percentage DESC LIMIT 1
mondial_geo,"Among the countries with the African ethnic group, how many of them has a population of over 10000000?",,SELECT COUNT(T1.Name) FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'African' AND T1.Area > 10000000
mondial_geo,Please list the name of the countries with over 5 ethnic groups.,,SELECT T1.Name FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country GROUP BY T1.Name HAVING COUNT(T1.Name) > 5
mondial_geo,Which country has the highest GDP?,,SELECT T1.Name FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country ORDER BY T2.GDP DESC LIMIT 1
mondial_geo,"Among the countries with a population of over 10000000, how many of them have a GDP of over 500000?",,SELECT COUNT(T1.Name) FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T2.GDP > 500000 AND T1.Population > 10000000
mondial_geo,Please list the capital cities of the countries with an inflation rate under 2.,,SELECT T1.Capital FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T2.Inflation < 2
mondial_geo,Which country has the lowest inflation rate?,,SELECT T1.Name FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T2.Inflation IS NOT NULL ORDER BY T2.Inflation ASC LIMIT 1
mondial_geo,"Among the countries whose agriculture percentage of the GDP is under 50%, how many of them have an area of over 8000000?",,SELECT COUNT(T1.Name) FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T2.Agriculture < 50 AND T1.Area > 8000000
mondial_geo,How many cities have a salt lake located in it?,,SELECT COUNT(T1.City) FROM located AS T1 INNER JOIN lake AS T2 ON T1.Lake = T2.Name WHERE T2.Type = 'salt'
mondial_geo,Please list the depth of the lakes that are located in the Province of Albania.,,SELECT T2.Depth FROM located AS T1 INNER JOIN lake AS T2 ON T1.Lake = T2.Name WHERE T1.Province = 'Albania'
mondial_geo,The lake with the highest altitude is located in which city?,,SELECT T2.City FROM lake AS T1 LEFT JOIN located AS T2 ON T2.Lake = T1.Name ORDER BY T1.Altitude DESC LIMIT 1
mondial_geo,How many lakes in the Canary Islands cover an area of over 1000000?,,SELECT COUNT(T2.Name) FROM located AS T1 INNER JOIN lake AS T2 ON T1.Lake = T2.Name WHERE T1.Province = 'Canary Islands' AND T2.Area > 1000000
mondial_geo,Which country has the most languages spoken?,,SELECT T1.Name FROM country AS T1 INNER JOIN language AS T2 ON T1.Code = T2.Country GROUP BY T1.Name ORDER BY COUNT(T2.Name) DESC LIMIT 1
mondial_geo,What is the capital city of the country that has the percentage of Armenian speakers over 90%?,Percentage of country > 90% refers to percentage > 90; America is one of country names,SELECT T1.Capital FROM country AS T1 INNER JOIN language AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'Armenian' AND T2.Percentage > 90
mondial_geo,"Among the countries with a population of under 1000000, how many of them have over 2 languages?",,SELECT T2.Country FROM country AS T1 INNER JOIN language AS T2 ON T1.Code = T2.Country WHERE T1.Population < 1000000 GROUP BY T2.Country HAVING COUNT(T1.Name) > 2
mondial_geo,How many organizations are founded in countries with a population of under 1000000?,,SELECT COUNT(T2.Name) FROM country AS T1 INNER JOIN organization AS T2 ON T1.Code = T2.Country WHERE T1.Population < 1000000
mondial_geo,How many organizations are established after 1999/1/1 in a country whose GDP is under 500000?,,"SELECT T1.Country, COUNT(T1.Country) FROM economy AS T1 INNER JOIN organization AS T2 ON T1.Country = T2.Country WHERE T1.GDP < 500000 AND STRFTIME('%Y', T2.Established) < '1999' GROUP BY T1.Country"
mondial_geo,"Among the countries with over 3 organizations, how many of them have an inflation rate of over 5%?",,SELECT COUNT(T2.Country) FROM economy AS T1 INNER JOIN organization AS T2 ON T1.Country = T2.Country WHERE T2.Country IN ( SELECT Country FROM organization GROUP BY Country HAVING COUNT(Country) > 3 ) AND T1.Inflation > 5
mondial_geo,How many organizations are established in the country with the most ethnic groups?,,SELECT COUNT(T2.Province) FROM country AS T1 INNER JOIN organization AS T2 ON T1.Code = T2.Country INNER JOIN ethnicGroup AS T3 ON T3.Country = T2.Country GROUP BY T1.Name ORDER BY COUNT(T3.Name) DESC LIMIT 1
mondial_geo,Please list the organization names established in the countries where Dutch is spoken.,Dutch is one of language,SELECT T2.Name FROM language AS T1 INNER JOIN organization AS T2 ON T1.Country = T2.Country WHERE T1.Name = 'Dutch'
mondial_geo,How many organizations are established in countries where people speak Bosnian?,Bosnian is one of language,SELECT COUNT(T2.Name) FROM language AS T1 INNER JOIN organization AS T2 ON T1.Country = T2.Country WHERE T1.Name = 'Bosnian'
mondial_geo,What is the highest infant mortality rate per thousand of the countries whose inflation is under 3?,,SELECT MAX(T2.Infant_Mortality) FROM economy AS T1 INNER JOIN population AS T2 ON T1.Country = T2.Country WHERE T1.Inflation < 3
mondial_geo,"Among the countries whose GDP is over 1000000, how many of them have a population groth rate of over 3%?",population growth rate of over 3% means population_growth > 3,SELECT COUNT(T1.Country) FROM economy AS T1 INNER JOIN population AS T2 ON T1.Country = T2.Country WHERE T1.GDP > 1000000 AND T2.Population_Growth > 3
mondial_geo,Which country has the highest GDP per capita?,GDP per capita = GDP / population,SELECT T1.Name FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country ORDER BY T2.GDP / T1.Population DESC LIMIT 1
mondial_geo,What is the highest lake area coverage of a country?,Lake area coverage = [sum(area of the lakes in the country) / (area of the country)] * 100%,SELECT T2.Area * 100  / T3.Area FROM located AS T1 INNER JOIN lake AS T2 ON T1.Lake = T2.Name INNER JOIN country AS T3 ON T3.Code = T1.Country ORDER BY T2.Longitude DESC LIMIT 1
mondial_geo,What is the average population growth rate of countries where more than 3 languages are used?,,SELECT SUM(T3.Population_Growth) / COUNT(T3.Country) FROM country AS T1 INNER JOIN language AS T2 ON T1.Code = T2.Country INNER JOIN population AS T3 ON T3.Country = T2.Country WHERE T2.Country IN ( SELECT Country FROM language GROUP BY Country HAVING COUNT(Country) > 3 ) GROUP BY T3.Country
mondial_geo,Please list the names of the countries with an inflation rate that's 30% above the average.,Average inflation rate = [sum(inflation) / count(countries)]; 30% above average implies inflation > 1.3 average inflation rate,"SELECT T1.Name FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country GROUP BY T1.Name, T2.Inflation HAVING T2.Inflation > AVG(T2.Inflation) * 1.3"
mondial_geo,Where country does Baghdad belongs to?,Baghdad is one of provinces,SELECT Name FROM country WHERE Province = 'Baghdad'
mondial_geo,Which religion has the largest population in Martinique?,,SELECT T2.Name FROM country AS T1 INNER JOIN religion AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Martinique' ORDER BY T1.population DESC LIMIT 1
mondial_geo,Which country is 41% Christian? Give the full name of the country.,,SELECT T1.Name FROM country AS T1 INNER JOIN religion AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'Christian' AND T2.Percentage = 41
mondial_geo,Which two countries does the Detroit River flow through? Give the full name of the country.,,SELECT T3.Name FROM located AS T1 INNER JOIN river AS T2 ON T1.River = T2.Name INNER JOIN country AS T3 ON T3.Code = T1.Country WHERE T2.Name = 'Detroit River'
mondial_geo,Which two countries have the longest border in the world? Give the full name of the country.,,"SELECT T2.Country1, T2.Country2 FROM country AS T1 INNER JOIN borders AS T2 ON T1.Code = T2.Country1 ORDER BY T2.Length DESC LIMIT 1"
mondial_geo,Which country has the most neighbors? Give the full name of the country.,,SELECT T1.Name FROM country AS T1 INNER JOIN borders AS T2 ON T1.Code = T2.Country1 GROUP BY T1.Name ORDER BY COUNT(T1.Name) DESC LIMIT 1
mondial_geo,Which country is Mountain Cerro Chirripo located in? Give the full name of the country.,,SELECT DISTINCT T1.Name FROM country AS T1 INNER JOIN geo_mountain AS T2 ON T1.Code = T2.Country WHERE T2.Mountain = 'Cerro Chirripo'
mondial_geo,How many mountains are there in Indonesia?,Indonesia refers to one of countries,SELECT COUNT(DISTINCT T2.Mountain) FROM country AS T1 INNER JOIN geo_mountain AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Indonesia'
mondial_geo,What is the quantity of the mountains does Japan have?,Japan is one of country names,SELECT COUNT(DISTINCT T2.Mountain) FROM country AS T1 INNER JOIN geo_mountain AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Japan'
mondial_geo,What is the latitude of the island on which Mount Andrinjitra is located?,,SELECT T1.Latitude FROM island AS T1 INNER JOIN mountainOnIsland AS T2 ON T1.Name = T2.Island WHERE T2.Mountain = 'Andringitra'
mondial_geo,Which two countries share the second highest mountain? Give the country code.,,"SELECT T1.Code FROM country AS T1 INNER JOIN geo_mountain AS T2 ON T1.Code = T2.Country WHERE T2.Mountain = ( SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1, 1 )"
mondial_geo,What is the area of Egypt as a percentage of Asia?,,SELECT T2.Percentage FROM country AS T1 INNER JOIN encompasses AS T2 ON T1.Code = T2.Country INNER JOIN continent AS T3 ON T3.Name = T2.Continent WHERE T3.Name = 'Asia' AND T1.Name = 'Egypt'
mondial_geo,What is the area of Egypt as a percentage of Asia?,,SELECT T1.Area * 100 / T3.Area FROM country AS T1 INNER JOIN encompasses AS T2 ON T1.Code = T2.Country INNER JOIN continent AS T3 ON T3.Name = T2.Continent WHERE T3.Name = 'Asia' AND T1.Name = 'Egypt'
mondial_geo,Which city in Japan has the most people in the country?,most people refers to largest population,SELECT T2.Name FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Japan' ORDER BY T2.Population DESC LIMIT 1
mondial_geo,"For the country in which Olsztyn is located, where is the capital?",Olsztyn is one of country names,SELECT T1.Capital FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'Olsztyn'
mondial_geo,In which province is the highest volcano mountain located in?,,SELECT T1.Province FROM country AS T1 INNER JOIN geo_mountain AS T2 ON T1.Code = T2.Country INNER JOIN mountain AS T3 ON T3.Name = T2.Mountain WHERE T3.Type = 'volcano' ORDER BY T3.Height DESC LIMIT 1
mondial_geo,When did Uganda declare independence?,Uganda is one of country names,SELECT T2.Independence FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Uganda'
mondial_geo,What kind of government does Iran have?,Uganda is one of country names,SELECT T2.Government FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Iran'
mondial_geo,Where does Bermuda belong to? Give the full name of the country.,Bermuda is one of countries,SELECT T3.Name FROM locatedOn AS T1 INNER JOIN island AS T2 ON T1.Island = T2.Name INNER JOIN country AS T3 ON T3.Code = T1.Country WHERE T3.Name = 'Bermuda'
mondial_geo,Where is the capital of country which has the largest percentage of Malay people?,Malay is one of country names,SELECT T1.Capital FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'Malay' ORDER BY T2.Percentage DESC LIMIT 1
mondial_geo,"For the third largest country, which ethinic group has the most population?",,"SELECT T2.Name FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country WHERE T1.Name = ( SELECT Name FROM country ORDER BY Area DESC LIMIT 2, 1 ) GROUP BY T2.Name ORDER BY T2.Percentage * T1.Population DESC LIMIT 1"
mondial_geo,Which country has the city of 114339 in population? Give the full name of the country.,,SELECT T1.Name FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.Country WHERE T2.Population = 114339
mondial_geo,How many rivers finally flows to the sea of 459m in depth?,,SELECT COUNT(*) FROM river WHERE Sea IN ( SELECT Name FROM sea WHERE Depth = 459 )
mondial_geo,What is the area of the country which became independent in 1921/3/13?,,SELECT T1.Area FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country WHERE T2.Independence = '1921-03-13'
mondial_geo,What is the population density of the Petropavl's home country?,Population density = Population / area,SELECT CAST(T1.Population AS REAL) / T1.Area FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'Petropavl'
mondial_geo,How many more people speak English than speak Scottish in United Kingdom?,English and Scottish are two languages; United Kingdom is a country,SELECT T3.Population * (T2.Percentage - T1.Percentage) FROM ethnicGroup AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Country = T2.Country INNER JOIN country AS T3 ON T1.Country = T3.Code WHERE T1.Name = 'Scottish' AND T2.Name = 'English' AND T3.Name = 'United Kingdom'
mondial_geo,What is the most populated city of the 12th highest density country?,Population density = Population / area,"SELECT T2.Name FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.Country WHERE T1.Name = ( SELECT Name FROM country ORDER BY CAST(Population AS REAL) / Area LIMIT 11, 1 ) ORDER BY T2.Population DESC LIMIT 1"
mondial_geo,How many times longer is the longest border in the United States than the shortest?,How many times longer = longest border / shortest border,SELECT MAX(T2.Length) / MIN(T2.Length) FROM country AS T1 INNER JOIN borders AS T2 ON T1.Code = T2.Country2 WHERE T1.Name = 'United States'
mondial_geo,Please list the capital cities of the countries that have more than 4 mountains.,,"SELECT T1.Capital FROM country AS T1 INNER JOIN geo_mountain AS T2 ON T1.Code = T2.Country GROUP BY T1.Name, T1.Capital HAVING COUNT(T1.Name) > 4"
mondial_geo,How many mountains are there in the country with the greatest population?,,SELECT COUNT(T2.Mountain) FROM country AS T1 INNER JOIN geo_mountain AS T2 ON T1.Code = T2.Country GROUP BY T1.Name ORDER BY T1.Population DESC LIMIT 1
mondial_geo,"Among the countries whose agriculture takes up more than 40% of its GDP, how many of them have less than 2 mountains?",,SELECT COUNT(T3.Country) FROM ( SELECT T1.Country FROM economy AS T1 INNER JOIN geo_mountain AS T2 ON T1.Country = T2.Country WHERE T1.Industry < 40 GROUP BY T1.Country HAVING COUNT(T1.Country) < 2 ) AS T3
mondial_geo,Please list the mountains in the country with the lowest inflation rate.,,SELECT Mountain FROM geo_mountain WHERE Country = ( SELECT Country FROM economy ORDER BY Inflation ASC LIMIT 1 )
mondial_geo,"Among the independent countries whose type of government is republic, what is the biggest number of deserts they have?",,SELECT COUNT(T3.Desert) FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country INNER JOIN geo_desert AS T3 ON T3.Country = T2.Country WHERE T2.Government = 'republic'
mondial_geo,Please list the deserts in the countries whose population is over 100000 and covers an area of under 500000.,,SELECT T2.Desert FROM country AS T1 INNER JOIN geo_desert AS T2 ON T1.Code = T2.Country WHERE T1.Area > 100000 AND T1.Population < 500000
mondial_geo,How many deserts are there in a country where over 90% of people speaks Armenian?,,SELECT COUNT(T2.Desert) FROM country AS T1 INNER JOIN geo_desert AS T2 ON T1.Code = T2.Country INNER JOIN language AS T3 ON T1.Code = T2.Country WHERE T3.Name = 'Armenian' AND T3.Percentage > 90
mondial_geo,Which mountain is the highest in an independent country?,,SELECT T4.Name FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country INNER JOIN geo_mountain AS T3 ON T3.Country = T2.Country INNER JOIN mountain AS T4 ON T4.Name = T3.Mountain WHERE T2.Independence IS NOT NULL ORDER BY T4.Height DESC LIMIT 1
mondial_geo,How many volcanic mountains are there in countries whose population is no more than 5000000?,,SELECT COUNT(DISTINCT T3.Name) FROM country AS T1 INNER JOIN geo_mountain AS T2 ON T1.Code = T2.Country INNER JOIN mountain AS T3 ON T3.Name = T2.Mountain WHERE T3.Type = 'volcanic' AND T1.Population <= 5000000
mondial_geo,"Among the countries with a GDP of over 1000000, how many of them have mountains higher than 1000?",,SELECT COUNT(DISTINCT T1.Name) FROM country AS T1 INNER JOIN geo_mountain AS T2 ON T1.Code = T2.Country INNER JOIN economy AS T3 ON T3.Country = T1.Code INNER JOIN mountain AS T4 ON T4.Name = T2.Mountain WHERE T3.GDP > 1000000 AND T4.Height > 1000
mondial_geo,What is the greatest length of the border between 2 independent countries?,,SELECT MAX(T3.Length) FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country INNER JOIN borders AS T3 ON T3.Country1 = T2.Country WHERE T2.Independence IS NOT NULL
mondial_geo,"Among the countries whose government type is republic, how many of them shares a border that's longer than 200?",,SELECT COUNT(DISTINCT T1.Name) FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country INNER JOIN borders AS T3 ON T3.Country1 = T2.Country WHERE T2.Government = 'republic' AND T3.Length > 200
mondial_geo,Please list the countries that share the shortest border.,,SELECT T1.Name FROM country AS T1 INNER JOIN borders AS T2 ON T1.Code = T2.Country1 ORDER BY T2.Length ASC LIMIT 1
mondial_geo,What is the GDP of the European Continent?,,SELECT SUM(T4.GDP) FROM country AS T1 INNER JOIN encompasses AS T2 ON T1.Code = T2.Country INNER JOIN continent AS T3 ON T3.Name = T2.Continent INNER JOIN economy AS T4 ON T4.Country = T1.Code WHERE T3.Name = 'Europe'
mondial_geo,How many mountains are there on the African Continent?,,SELECT COUNT(T3.Name) FROM country AS T1 INNER JOIN encompasses AS T2 ON T1.Code = T2.Country INNER JOIN continent AS T3 ON T3.Name = T2.Continent INNER JOIN province AS T4 ON T4.Country = T1.Code INNER JOIN geo_mountain AS T5 ON T5.Province = T4.Name WHERE T3.Name = 'European'
mondial_geo,"Of the deserts on the America Continent, which one covers the greatest area?",,SELECT T5.Name FROM country AS T1 INNER JOIN encompasses AS T2 ON T1.Code = T2.Country INNER JOIN continent AS T3 ON T3.Name = T2.Continent INNER JOIN geo_desert AS T4 ON T4.Country = T1.Code INNER JOIN desert AS T5 ON T5.Name = T4.Desert WHERE T3.Name = 'America' ORDER BY T5.Area DESC LIMIT 1
mondial_geo,Please list the countries on the European Continent that have a population growth of more than 3%.,,SELECT T2.Country FROM country AS T1 INNER JOIN encompasses AS T2 ON T1.Code = T2.Country INNER JOIN continent AS T3 ON T3.Name = T2.Continent INNER JOIN population AS T4 ON T4.Country = T1.Code WHERE T3.Name = 'Europe' AND T4.Population_Growth > 0.03
mondial_geo,How many countries on the European Continent has an infant mortality rate per thousand of over 100?,,SELECT COUNT(T1.Name) FROM country AS T1 INNER JOIN encompasses AS T2 ON T1.Code = T2.Country INNER JOIN continent AS T3 ON T3.Name = T2.Continent INNER JOIN population AS T4 ON T4.Country = T1.Code WHERE T3.Name = 'Europe' AND T4.Infant_Mortality < 100
mondial_geo,"Among the countries that use Bosnian as their language, how many of them don't have a positive population growth rate?",,SELECT COUNT(DISTINCT T1.Name) FROM country AS T1 INNER JOIN language AS T2 ON T1.Code = T2.Country INNER JOIN population AS T3 ON T3.Country = T2.Country WHERE T2.Name = 'Bosnian' AND T3.Population_Growth < 0
mondial_geo,What is the average percentage of agriculture of GDP in countries on the African Continent?,,SELECT AVG(T4.Agriculture) FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T3.Code = T2.Country INNER JOIN economy AS T4 ON T4.Country = T3.Code WHERE T1.Name = 'Africa'
mondial_geo,"Among the independent countries, how many of them has a GDP per capita of over 5000?",,SELECT COUNT(DISTINCT T1.Name) FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country INNER JOIN economy AS T3 ON T3.Country = T2.Country WHERE T2.Independence IS NOT NULL AND T3.GDP > 5000
mondial_geo,What is the average inflation rate of the biggest continent?,,SELECT AVG(T4.Inflation) FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T3.Code = T2.Country INNER JOIN economy AS T4 ON T4.Country = T3.Code WHERE T1.Name = ( SELECT Name FROM continent ORDER BY Area DESC LIMIT 1 )
mondial_geo,Which island is city Balikpapan located on? How big is the island?,,"SELECT T3.Name, T3.Area FROM city AS T1 INNER JOIN locatedOn AS T2 ON T1.Name = T2.City INNER JOIN island AS T3 ON T3.Name = T2.Island WHERE T1.Name = 'Balikpapan'"
mondial_geo,List all the cities in Sumatra and state the population of each city.,Sumatra is an island,"SELECT T1.Name, T1.Population FROM city AS T1 INNER JOIN locatedOn AS T2 ON T1.Name = T2.City INNER JOIN island AS T3 ON T3.Name = T2.Island WHERE T3.Name = 'Sumatra'"
mondial_geo,On which island does South Yorkshire situated? State it's longtitude and latitude.,'South Yorkshire' is a province,"SELECT DISTINCT T3.Longitude, T3.Latitude FROM city AS T1 INNER JOIN locatedOn AS T2 ON T1.Name = T2.City INNER JOIN island AS T3 ON T3.Name = T2.Island WHERE T1.Province = 'South Yorkshire'"
mondial_geo,List all islands that are greater than the island on which Warwickshire is located.,Warwickshire is a province,SELECT DISTINCT Name FROM island WHERE Area > ( SELECT DISTINCT T3.Area FROM city AS T1 INNER JOIN locatedOn AS T2 ON T1.Name = T2.City INNER JOIN island AS T3 ON T3.Name = T2.Island WHERE T1.Province = 'Warwickshire' )
mondial_geo,"For island area less than 200, list the island name and city it belongs to.",,"SELECT DISTINCT T3.Name, T1.Name FROM city AS T1 INNER JOIN locatedOn AS T2 ON T1.Name = T2.City INNER JOIN island AS T3 ON T3.Name = T2.Island WHERE T3.Area < 200"
mondial_geo,In which province is city Glenrothes located? What is the capital of the province?,,"SELECT T2.Province, T1.Capital FROM province AS T1 INNER JOIN city AS T2 ON T1.Name = T2.Province AND T1.Country = T2.Country WHERE T2.Name = 'Glenrothes'"
mondial_geo,List the all the cities and its city population for provinces with population more than 1000000.,,"SELECT T1.Name, T1.Population FROM city AS T1 INNER JOIN province AS T2 ON T2.Name = T1.Province WHERE T2.Population > 1000000"
mondial_geo,List all the coral islands along with its city and province.,Baltic Sea is a sea located in Northern Europe,"SELECT City, Province FROM locatedOn WHERE Island IN ( SELECT Name FROM island WHERE Type = 'coral' )"
mondial_geo,What is the average population for all cities location at Baltic Sea?,Baltic Sea is a sea located in Northern Europe,SELECT AVG(T1.Population) FROM city AS T1 INNER JOIN located AS T2 ON T1.Name = T2.City INNER JOIN sea AS T3 ON T3.Name = T2.Sea WHERE T3.Name = 'Baltic Sea'
mondial_geo,Calculate the percentage of population in Edmonton city to the population of its province.,Percentage of population in each city = population(city) / population(province) * 100%,SELECT CAST(T1.Population AS REAL) * 100 / T2.Population FROM city AS T1 INNER JOIN province AS T2 ON T1.Province = T2.Name WHERE T1.Name = 'Edmonton'
mondial_geo,Which are the rivers that flows to Black Sea?,Black Sea is a sea located in Eastern Europe and Western Asia,SELECT Name FROM river WHERE Sea = 'Black Sea'
mondial_geo,State the name of the lake in Albania province and in which city does it located at.,,"SELECT Lake, City FROM located WHERE Province = 'Albania' AND Lake IS NOT NULL"
mondial_geo,Name the tallest mountain on Himalaya and what is its height.,Tallest refers to max(height),"SELECT Name, Height FROM mountain WHERE Mountains = 'Himalaya' ORDER BY Height DESC LIMIT 1"
mondial_geo,List all the mountains that are volcanic along with its longitude and latitude.,,"SELECT Name, Latitude, Longitude FROM mountain WHERE Type = 'volcano'"
mondial_geo,Name all the volcano mountains between the height of 2000 to 4000.,,SELECT Name FROM mountain WHERE Type = 'volcano' AND Height BETWEEN 2000 AND 4000
mondial_geo,Please state the longest river that flows to the Mediterranean Sea.,,SELECT Name FROM river WHERE Sea = 'Mediterranean Sea' ORDER BY Length DESC LIMIT 1
mondial_geo,How many percent of the mountains on Andes which are non-volcanic?,Percent of non-volcanic mountains = count(mountains = 'Andes' & type ! = 'volcano') / count(mountains = 'Andes') * 100%,SELECT CAST(SUM(CASE WHEN type != 'volcano' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM mountain WHERE Mountains = 'Andes'
mondial_geo,List all the cities and provinces located at the rivers that flows to Atlantic Ocean.,"Atlantic Ocean is the second-largest ocean on Earth, after the Pacific Ocean; Ocean and sea share the same meaning","SELECT T1.Name, T1.Province FROM city AS T1 INNER JOIN located AS T2 ON T1.Name = T2.City INNER JOIN river AS T3 ON T3.Name = T2.River WHERE T3.Sea = 'Atlantic Ocean'"
mondial_geo,What is the name and length of rivers located at 'Orleans' city?,Orleans is a city in north-central France,"SELECT T3.Name, T3.Length FROM city AS T1 INNER JOIN located AS T2 ON T1.Name = T2.City INNER JOIN river AS T3 ON T3.Name = T2.River WHERE T1.Name = 'Orleans'"
mondial_geo,What is the height of the mountain on which river 'Lech' is located? Please also provide its longitude and latitude.,,"SELECT T1.Height, T1.Latitude, T1.Longitude FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain INNER JOIN province AS T3 ON T3.Name = T2.Province INNER JOIN located AS T4 ON T4.Province = T3.Name WHERE T4.River = 'Lech'"
mondial_geo,Name the river of which Lorraine is on. Please name the mountains where to source flow from?,Lorraine is a province,"SELECT T1.SourceLongitude, T1.SourceLatitude, T1.SourceAltitude FROM river AS T1 INNER JOIN geo_river AS T2 ON T2.River = T1.Name WHERE T2.Province = 'Lorraine'"
mondial_geo,Which mountain does the river source Blue Nile located? State the height of the mountain.,,"SELECT T1.Name, T1.Height FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain INNER JOIN province AS T3 ON T3.Name = T2.Province INNER JOIN geo_source AS T4 ON T4.Province = T3.Name WHERE T4.River = 'Blue Nile'"
mondial_geo,Name the river at Little Rock city. State the length of the river.,,SELECT T3.Length FROM city AS T1 INNER JOIN located AS T2 ON T1.Name = T2.City INNER JOIN river AS T3 ON T3.Name = T2.River WHERE T1.Name = 'Little Rock'
mondial_geo,List all rivers and province it is located that is greater than 1000 in length.,,"SELECT T1.Province, T2.Name FROM geo_river AS T1 INNER JOIN river AS T2 ON T1.River = T2.Name WHERE T2.Length > 1000"
mondial_geo,In which province and country does Moldoveanu located? State its height.,Moldoveanu is a mountain,"SELECT T2.Province, T2.Country, T1.Height FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain WHERE T1.Name = 'Moldoveanu'"
mondial_geo,Provide all rivers name and length in USA.,USA is a country,"SELECT DISTINCT T3.Name, T3.Length FROM city AS T1 INNER JOIN located AS T2 ON T1.Name = T2.City INNER JOIN river AS T3 ON T3.Name = T2.River WHERE T2.Country = 'USA'"
mondial_geo,What is the average height of all mountains in Nepal?,Nepal is a province,SELECT AVG(T1.Height) FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain WHERE T2.Province = 'Nepal'
mondial_geo,"For all cities where Seine is located at, which city has the greatest population? Calculate the difference from the city with least population.",Seince is a river; Population disparity refers to difference between cities with greatest and least population; Difference between cities with greatest and least population means max(population) - min(population),SELECT MAX(T1.Population) - MIN(T1.population) FROM city AS T1 INNER JOIN located AS T2 ON T1.Name = T2.City INNER JOIN river AS T3 ON T3.Name = T2.River WHERE T3.Name = 'Seine'
mondial_geo,Which are the 2 rivers located at Belgrade city? Which river is longer and how by much?,,"SELECT T1.Name, T1.Length FROM river AS T1 INNER JOIN located AS T2 ON T1.Name = T2.River INNER JOIN city AS T3 ON T3.Name = T2.City WHERE T3.Name = 'Belgrade'"
mondial_geo,Which nations have a 100% Spanish-speaking population?,,SELECT Country FROM language WHERE Name = 'Spanish' AND Percentage = 100
mondial_geo,Which countries are dependent on the British Crown?,,SELECT Country FROM politics WHERE Government = 'British crown dependency'
mondial_geo,What are the names of the rivers in Canada?,,SELECT DISTINCT T1.River FROM located AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T2.Name = 'Canada' AND T1.River IS NOT NULL
mondial_geo,What is the name of the country whose citizens have the lowest purchasing power?,Inflation can reduce purchasing power over time for recipients and payers.,SELECT T2.Name FROM economy AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code ORDER BY T1.Inflation DESC LIMIT 1
mondial_geo,"What province does the 4th most populous city in the United Kingdom belong to, and how many people live there?",,"SELECT T1.Province, T1.Population FROM city AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T2.Name = 'United Kingdom' ORDER BY T1.Population DESC LIMIT 3, 1"
mondial_geo,How many Jewish residents are there in Moldova?,Moldova is one country located in Eastern Europe; The number of residents can be computed by percentage * population,SELECT T2.Percentage * T1.Population FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Moldova' AND T2.Name = 'Jewish'
mondial_geo,What is the average area of Asian countries?,Asia is a continent,SELECT AVG(Area) FROM country AS T1 INNER JOIN encompasses AS T2 ON T1.Code = T2.Country WHERE T2.Continent = 'Asia'
mondial_geo,"Which country is home to the world's tiniest desert, and what are its longitude and latitude?",,"SELECT T2.Country, T1.Latitude, T1.Longitude FROM desert AS T1 INNER JOIN geo_desert AS T2 ON T1.Name = T2.Desert WHERE T1.Name = ( SELECT Name FROM desert ORDER BY Area ASC LIMIT 1 )"
mondial_geo,How many people in Montenegro speaks Serbian?,Serbian is one language; Montenegro is a country located in Southeastern Europe,SELECT T1.Percentage * T2.Population FROM language AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T1.Name = 'Serbian' AND T2.Name = 'Montenegro'
mondial_geo,How many mountains are there in the country with the most land area?,,SELECT COUNT(Mountain) FROM geo_mountain WHERE Country = ( SELECT Code FROM country ORDER BY Area DESC LIMIT 1 )
mondial_geo,Which sea is the shallowest and which country surrounds it?,Shallow sea refers to the sea with less depth,SELECT DISTINCT T2.Name FROM located AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE Sea = ( SELECT Name FROM sea ORDER BY Depth ASC LIMIT 1 )
mondial_geo,Which nation's GDP is the lowest among those that are communist states?,Communist is a government form,SELECT T2.Country FROM politics AS T1 INNER JOIN economy AS T2 ON T1.Country = T2.Country WHERE T1.Government = 'Communist state' ORDER BY T2.GDP ASC LIMIT 1
mondial_geo,What kind of political system is in place in the country with the highest inflation rate?,Political system refers to government form,SELECT T1.Government FROM politics AS T1 INNER JOIN economy AS T2 ON T1.Country = T2.Country ORDER BY T2.Inflation DESC LIMIT 1
mondial_geo,Which nation has the greatest infant mortality rate among those that attained independence in 1960?,,"SELECT T1.Country FROM politics AS T1 INNER JOIN population AS T2 ON T1.Country = T2.Country WHERE STRFTIME('%Y', T1.Independence) = '1960' ORDER BY T2.Infant_Mortality DESC LIMIT 1"
mondial_geo,"What is the smallest border's length, and what form of government do the two nations bordering it have?",,"SELECT T1.Government, T3.Government FROM politics AS T1 INNER JOIN borders AS T2 ON T1.Country = T2.Country1 INNER JOIN politics AS T3 ON T3.Country = T2.Country2 ORDER BY T2.Length ASC LIMIT 1"
mondial_geo,Which Arabic-speaking country has the smallest population?,Arabic-speaking country = country that speaks 100% Arabic,SELECT T1.Name FROM country AS T1 INNER JOIN language AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'Arabic' AND T2.Percentage = 100 ORDER BY T1.Population ASC LIMIT 1
mondial_geo,What provinces encompass the world's biggest desert in terms of overall area?,,SELECT Province FROM geo_desert WHERE Desert = ( SELECT Name FROM desert ORDER BY Area DESC LIMIT 1 )
mondial_geo,How many lakes are there in the 4th most populous African country with a republican form of government?,,"SELECT COUNT(*) FROM geo_lake WHERE Country = ( SELECT T4.Code FROM ( SELECT T2.Code, T2.Population FROM encompasses AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code INNER JOIN politics AS T3 ON T1.Country = T3.Country WHERE T1.Continent = 'Africa' AND T1.Percentage = 100 AND T3.Government = 'republic' ORDER BY Population DESC LIMIT 4 ) AS T4 ORDER BY population ASC LIMIT 1 )"
mondial_geo,Which religion is most prevalent in Asia?,Most prevalent religion refers to the religion with the most population percentage,SELECT T4.Name FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T3.Code = T2.Country INNER JOIN religion AS T4 ON T4.Country = T3.Code WHERE T1.Name = 'Asia' GROUP BY T4.Name ORDER BY SUM(T4.Percentage) DESC LIMIT 1
mondial_geo,What is the difference in population between the two nations where the tallest peak is located?,,SELECT * FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain INNER JOIN province AS T3 ON T3.Country = T2.Country INNER JOIN country AS T4 ON T4.Code = T3.Country WHERE T1.Name = ( SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1 )
mondial_geo,What are the names of the sea that can be found on the island with the biggest area?,,SELECT T2.Name FROM islandIn AS T1 INNER JOIN sea AS T2 ON T2.Name = T1.Sea WHERE T1.Island = ( SELECT Name FROM island ORDER BY Area DESC LIMIT 1 )
mondial_geo,What are the names of the three nations where the longest river that empties into the Atlantic Ocean stretches to?,Empties into the Atlantic Ocean = flows to the Atlantic Ocean,SELECT DISTINCT T1.Country FROM city AS T1 INNER JOIN located AS T2 ON T1.Name = T2.City INNER JOIN river AS T3 ON T3.Name = T2.River WHERE T3.Name = ( SELECT Name FROM river WHERE Sea = 'Atlantic Ocean' ORDER BY Length DESC LIMIT 1 )
mondial_geo,"How many people reside in the nation's capital city, which is situated in the nation that attained independence on 8/15/1947?",,SELECT T3.Population FROM politics AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code INNER JOIN city AS T3 ON T3.Name = T2.Capital WHERE T1.Independence = '1947-08-15'
mondial_geo,What is the total number of Afro-Asian people in the most populous Asian country governed by a monarchy?,Total Number of People = Percentage * Population,SELECT T5.Percentage * T6.Population FROM ethnicGroup AS T5 INNER JOIN country AS T6 ON T5.Country = T6.Code WHERE Country = ( SELECT T3.Code FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T3.Code = T2.Country INNER JOIN politics AS T4 ON T4.Country = T3.Code WHERE T4.Government = 'monarchy' AND T1.Name = 'Asia' ORDER BY T3.Population DESC LIMIT 1 ) AND T5.Name = 'Afro-Asian'
mondial_geo,What are the names of the cities along the Euphrat River's course? Indicate the capital city of the nation where the Euphrat River flows.,,"SELECT T2.City, T1.Capital FROM country AS T1 INNER JOIN located AS T2 ON T1.Code = T2.Country INNER JOIN river AS T3 ON T3.Name = T2.River WHERE T3.Name = 'Euphrat'"
mondial_geo,What is the proportion of English-speaking citizens in the countries that rely on the United States compared to the total number of citizens in those countries?,,SELECT T2.Percentage * T1.Population FROM country AS T1 INNER JOIN language AS T2 ON T1.Code = T2.Country INNER JOIN politics AS T3 ON T3.Country = T2.Country WHERE T3.Dependent = 'USA' AND T2.Name = 'English'
mondial_geo,"Which federal republic country in Europe has the most provinces, and what proportion of GDP is devoted to services?
Calculate the population density as well.",Republic is on of government forms; Percentage of Services of the GDP was mentioned in economy.Service; Population Density = Population / Area,"SELECT T1.Country, T2.Service , SUM(T1.Population) / SUM(T1.Area) FROM province AS T1 INNER JOIN economy AS T2 ON T1.Country = T2.Country WHERE T1.Country IN ( SELECT Country FROM encompasses WHERE Continent = 'Europe' ) GROUP BY T1.Country, T2.Service ORDER BY COUNT(T1.Name) DESC LIMIT 1"
mondial_geo,What is the capital of the 3rd most populated country in Asia and what is the capital city's ratio in percentage (%) against the overall population of the country?,,"SELECT T4.Capital, CAST(T3.Population AS REAL) * 100 / T4.Population FROM city AS T3 INNER JOIN ( SELECT T1.Capital , T1.Population FROM country AS T1 INNER JOIN encompasses AS T2 ON T1.Code = T2.Country WHERE T2.Continent = 'Asia' ORDER BY T1.Population DESC LIMIT 2, 1 ) AS T4 ON T3.Name = T4.Capital"
mondial_geo,What's the name of the second biggest desert?,,"SELECT Name FROM desert ORDER BY Area DESC LIMIT 1, 1"
mondial_geo,What is the main spoken language in MNE?,MNE is one country,SELECT Name FROM language WHERE Country = 'MNE' ORDER BY Percentage DESC LIMIT 1
mondial_geo,What's the percentage of people in Cayman Islands speak English?,Cayman Islands is a country,SELECT T1.Percentage FROM language AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T2.Name = 'Cayman Islands' AND T1.Name = 'English'
mondial_geo,Which country was the source of Pjandsh River? Give the full name of the country.,,SELECT T1.Name FROM country AS T1 INNER JOIN located AS T2 ON T1.Code = T2.Country WHERE T2.River = 'Pjandsh'
mondial_geo,"For the countries have the population north of a billion, which one has the lowest GDP? Give the full name of the country.",billion = 1000000000,SELECT T1.Name FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T1.Population > 1000000000 ORDER BY T2.GDP ASC LIMIT 1
mondial_geo,What is the capital of the country that has the Licancabur Mountain?,,SELECT T4.Capital FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain INNER JOIN province AS T3 ON T3.Name = T2.Province INNER JOIN country AS T4 ON T4.Province = T3.Name WHERE T1.Name = 'Licancabur'
mondial_geo,How much sea is around the island where Kerinci Mountain is located?,,SELECT COUNT(T4.Sea) FROM mountain AS T1 INNER JOIN mountainOnIsland AS T2 ON T1.Name = T2.Mountain INNER JOIN island AS T3 ON T3.Name = T2.Island INNER JOIN islandIn AS T4 ON T4.Island = T3.Name WHERE T1.Name = 'Kerinci'
mondial_geo,Which three countries does the Amazonas flow through? Give the full name of the countries.,Amazonas flow is a river,SELECT DISTINCT T4.Name FROM city AS T1 INNER JOIN located AS T2 ON T1.Name = T2.City INNER JOIN river AS T3 ON T3.Name = T2.River INNER JOIN country AS T4 ON T4.Code = T2.Country WHERE T3.Name = 'Amazonas'
mondial_geo,Which country became independent on 1492-01-01? Give the full name of the country.,,SELECT T1.Name FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country WHERE T2.Independence = '1492-01-01'
mondial_geo,"How many cities in France have a population of more than 100,000?",,SELECT COUNT(T2.Name) FROM country AS T1 INNER JOIN city AS T2 ON T2.Country = T1.Code WHERE T1.Name = 'France' AND T2.Population > 100000
mondial_geo,"Among all the rivers finally flows to the sea of 540m in depth, which one has the longest length?",,SELECT T2.Name FROM sea AS T1 INNER JOIN river AS T2 ON T2.Sea = T1.Name WHERE T1.Depth = 540 ORDER BY T2.Length DESC LIMIT 1
mondial_geo,In which Country is the second highest volcanic mountain located in? Give the code of the country.,,"SELECT T3.Country FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain INNER JOIN province AS T3 ON T3.Name = T2.Province ORDER BY T1.Height DESC LIMIT 1, 1"
mondial_geo,What is the longitude of the island on which Mount Olympos is located?,,SELECT T3.Longitude FROM mountain AS T1 INNER JOIN mountainOnIsland AS T2 ON T1.Name = T2.Mountain INNER JOIN island AS T3 ON T3.Name = T2.Island WHERE T1.Name = 'Olympos'
mondial_geo,"For all the countries that is smaller than 100 square kilometres, which one has the most GDP?",,SELECT T1.Name FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T1.Area < 100 ORDER BY T2.GDP DESC LIMIT 1
mondial_geo,What is the total number of cities that Japan have?,Japan is a country,SELECT COUNT(T3.Name) FROM country AS T1 INNER JOIN province AS T2 ON T1.Code = T2.Country INNER JOIN city AS T3 ON T3.Province = T2.Name WHERE T1.Name = 'Japan'
mondial_geo,Which city has most population other than its capital in Bangladesh?,Bangladesh is a country,SELECT T3.Name FROM country AS T1 INNER JOIN province AS T2 ON T1.Code = T2.Country INNER JOIN city AS T3 ON T3.Province = T2.Name WHERE T1.Name = 'Bangladesh' AND T3.Name <> T1.Capital ORDER BY T3.Population DESC LIMIT 1
mondial_geo,Which non capital city has the most people of all?,,SELECT T3.Name FROM country AS T1 INNER JOIN province AS T2 ON T1.Code = T2.Country INNER JOIN city AS T3 ON T3.Province = T2.Name WHERE T3.Name <> T1.Capital ORDER BY T3.Population DESC LIMIT 1
mondial_geo,In which country is the city of Grozny? Give the full name of the country.,Grozny is a province,SELECT T1.Name FROM country AS T1 INNER JOIN province AS T2 ON T1.Code = T2.Country INNER JOIN city AS T3 ON T3.Province = T2.Name WHERE T3.Name = 'Grozny'
mondial_geo,Which religion has the majority of the people in Japan?,Japan is a country,SELECT T2.Name FROM country AS T1 INNER JOIN religion AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Japan' ORDER BY T2.Percentage DESC LIMIT 1
mondial_geo,Which two countries have the border in length of 803 km? Give the full names of the countries.,,"SELECT T1.Name, T3.Name FROM country AS T1 INNER JOIN borders AS T2 ON T1.Code = T2.Country1 INNER JOIN country AS T3 ON T3.Code = T2.Country2 WHERE T2.Length = 803"
mondial_geo,How many percent of the total area of Russia is in Europe?,,SELECT T2.Percentage FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T3.Code = T2.Country WHERE T3.Name = 'Russia' AND T1.Name = 'Europe'
mondial_geo,Give the full names of the countries that are located in more than one continent.,,SELECT T3.Name FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T3.Code = T2.Country GROUP BY T3.Name HAVING COUNT(T3.Name) > 1
mondial_geo,How many people are there in Fareham's mother country?,Mother country refers to home country,SELECT T1.Population FROM country AS T1 INNER JOIN province AS T2 ON T1.Code = T2.Country INNER JOIN city AS T3 ON T3.Province = T2.Name WHERE T3.Name = 'Fareham'
mondial_geo,What's the number of infant mortality in Switzerland in a year?,Number can be calculated = Infant_Mortality * Population * Population_Growth,SELECT T2.Infant_Mortality * T1.Population * T2.Population_Growth FROM country AS T1 INNER JOIN population AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Switzerland'
mondial_geo,How many mountains are there in the United States?,,SELECT COUNT(T1.Name) FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain INNER JOIN province AS T3 ON T3.Name = T2.Province INNER JOIN country AS T4 ON T4.Province = T3.Name WHERE T4.Name = 'United States'
mondial_geo,When did Equatorial Guinea become independent?,Equatorial Guinea is a country,SELECT T2.Independence FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Equatorial Guinea'
mondial_geo,What is the GDP per capita in Switzerland?,GDP per capita = GDP / Population,SELECT T2.GDP / T1.Population FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Switzerland'
mondial_geo,What is the GDP for Service of the country with Fuenlabrada as its city.,,SELECT T4.Service * T4.GDP FROM country AS T1 INNER JOIN province AS T2 ON T1.Code = T2.Country INNER JOIN city AS T3 ON T3.Province = T2.Name INNER JOIN economy AS T4 ON T4.Country = T2.Country WHERE T3.Name = 'Fuenlabrada'
mondial_geo,How many times longer is the longest river in Tajikistan than the shortest river?,TJ is an abbreviated country code of Tajikistan,SELECT MAX(T2.Length) / MIN(T2.Length) FROM located AS T1 INNER JOIN river AS T2 ON T1.River = T2.Name WHERE T1.Country = 'TJ'
mondial_geo,What is the population density of Hanoi's home country?,population density = Population / Area,SELECT T1.Population / T1.Area FROM country AS T1 INNER JOIN province AS T2 ON T1.Code = T2.Country INNER JOIN city AS T3 ON T3.Province = T2.Name WHERE T3.Name = 'Hanoi'
mondial_geo,"In countries where there is more than one ethnic group, name the ethnic group with the greatest presence in each country and the country to which it corresponds.",greatest presence can be represented by largest percentage.,"SELECT Country, Name FROM ethnicGroup AS T1 WHERE Percentage < 100 AND Percentage = ( SELECT MAX(Percentage) FROM ethnicGroup AS T2 WHERE T1.Country = T2.Country )"
mondial_geo,How many deserts are not located in a single country? Name them.,,SELECT Desert FROM geo_desert GROUP BY Desert HAVING COUNT(DISTINCT Country) > 1
mondial_geo,How many rivers belong to more than one country? Name the provinces where we can find them.,,"SELECT River, GROUP_CONCAT(Province) FROM geo_river GROUP BY River HAVING COUNT(DISTINCT Country) > 1"
mondial_geo,What percentage of the border does Angola share with each of the countries with which it borders?,,SELECT SUM(CASE WHEN T2.Name = 'Angola' THEN T1.Length ELSE 0 END) * 100 / SUM(T1.Length) FROM borders AS T1 LEFT JOIN country AS T2 ON T1.Country1 = T2.Code
mondial_geo,What percent of the non volcanic islands in the Lesser Antilles group of islands have an area of no more than 300 square kilometers?,Percent = [count(non volcanic islands Lesser Antilles area 300 or less) / count(non volcanic islands Lesser Antilles)] * 100%,SELECT SUM(CASE WHEN Area <= 300 THEN 1 ELSE 0 END) * 100 / COUNT(*) FROM island WHERE Islands = 'Lesser Antilles' AND (Type != 'volcanic' OR Type IS NULL)
mondial_geo,"Of all the countries in which English is spoken, what percentage has English as their only language?",Percentage = [count(countries 100% English) / count(countries English)] * 100%,SELECT CAST(SUM(CASE WHEN T2.Percentage = 100 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Name) FROM country AS T1 INNER JOIN language AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'English'
mondial_geo,Name of the capitals of the countries that have less than 99.95% less population than the country that has the most population.,,SELECT Capital FROM country WHERE Population <= ( SELECT MAX(Population) - MAX(Population) * 0.9995 FROM country )
mondial_geo,Average length of the rivers flowing into the Donau River.,,SELECT * FROM river WHERE Name = 'Donau'
mondial_geo,"Based on the data shown at Target, what percentage of countries are non-Christian?",percentage of countries are non-Christian = [count(non-Christian) / count(non-Christian + Christian)] * 100%,SELECT 100 - (CAST(SUM(CASE WHEN Target = 'Christian' THEN 1 ELSE 0 END) AS REAL)) * 100 / COUNT(Country) FROM target
mondial_geo,"Which country with a city with a population between 50,000 and 300,000 inhabitants and which is a member of an organization established between 03/01/1991 and 04/30/1991 is also a member of the EBRD?",,SELECT T2.Country FROM country AS T1 INNER JOIN isMember AS T2 ON T1.Code = T2.Country INNER JOIN organization AS T3 ON T3.Country = T2.Country INNER JOIN city AS T4 ON T4.Country = T3.Country WHERE T3.Abbreviation = 'EBRD' AND T4.Population BETWEEN 50000 AND 300000 AND T3.Established BETWEEN '1991-01-31' AND '1991-04-30'
mondial_geo,Which river with its mouth in the Donau River and a length greater than 500 km is located in Slovenia?,,SELECT T2.River FROM country AS T1 INNER JOIN geo_river AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Slovenia' AND T2.River IN ( SELECT NAME FROM river WHERE Length > 500 AND River = 'Donau' )
mondial_geo,In which city is the sea whose depth is 4232 meters less than that of the Bay of Bengal?,,SELECT T2.City FROM sea AS T1 INNER JOIN located AS T2 ON T1.Name = T2.Sea INNER JOIN city AS T3 ON T3.Name = T2.City WHERE ( SELECT Depth FROM sea WHERE Name LIKE '%Bengal%' ) - T1.Depth = 4235
mondial_geo,In which city is the lake located at coordinates longitude -85.35 and latitude 11.6?,,SELECT T2.City FROM lake AS T1 INNER JOIN located AS T2 ON T1.Name = T2.Lake INNER JOIN province AS T3 ON T3.Name = T2.Province INNER JOIN city AS T4 ON T4.Province = T3.Name WHERE T1.Longitude = -85.35 AND T1.Latitude = 11.6
mondial_geo,On which continent is the country with the most erosion of real income?,highest inflation rate results in the most erosion of real income,SELECT T1.Name FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T3.Code = T2.Country INNER JOIN economy AS T4 ON T4.Country = T3.Code ORDER BY T4.Inflation DESC LIMIT 1
mondial_geo,"Which two Asian countries share a border that is 1,782 kilometers long?",,"SELECT T4.Country1, T4.Country2 FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T3.Code = T2.Country INNER JOIN borders AS T4 ON T4.Country1 = T3.Code WHERE T1.Name = 'Asia' AND T4.Length = 1782"
mondial_geo,"Of all the lakes in Bolivia, which is the deepest?",Bolivia is the country,SELECT T1.Name FROM lake AS T1 INNER JOIN geo_lake AS T2 ON T1.Name = T2.Lake INNER JOIN province AS T3 ON T3.Name = T2.Province INNER JOIN country AS T4 ON T4.Code = T3.Country WHERE T4.Name = 'Bolivia' ORDER BY T1.Depth DESC LIMIT 1
mondial_geo,"In which lake flows the river that is, in turn, the mouth of the Manicouagan River?",,SELECT NAME FROM lake WHERE river = ( SELECT river FROM river WHERE NAME = 'Manicouagan' )
mondial_geo,In which group of islands is Rinjani Mountain located?,,SELECT T1.Islands FROM island AS T1 INNER JOIN mountainOnIsland AS T2 ON T1.Name = T2.Island INNER JOIN mountain AS T3 ON T3.Name = T2.Mountain WHERE T3.Name = 'Rinjani'
mondial_geo,List all the seas with which the deepest sea merges.,,SELECT T2.Sea2 FROM sea AS T1 INNER JOIN mergesWith AS T2 ON T1.Name = T2.Sea1 WHERE T1.Name = ( SELECT Name FROM sea ORDER BY Depth DESC LIMIT 1 )
mondial_geo,"Of all the countries that share territory with more than one continent, in which of them does the average population not exceed 10 inhabitants per square kilometer?",,SELECT NAME FROM country WHERE CODE IN ( SELECT country FROM encompasses GROUP BY country HAVING COUNT(continent) > 1 ) AND population / Area <= 10
mondial_geo,"Of all the countries of the Hindu religion, which has the lowest ratio of people per square meter of surface?",ratio of people per square meter of surface = Population / Area,SELECT T1.Name FROM country AS T1 INNER JOIN religion AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'Hindu' ORDER BY T1.Population / T1.Area ASC LIMIT 1
mondial_geo,On what date did the country have a gross domestic product 400% higher than Saint Kitts and Nevis become independent?,GDP refers to gross domestic product,SELECT Independence FROM politics WHERE country = ( SELECT country FROM economy WHERE GDP = 1100 )
mondial_geo,What is the average population ratio of the countries in which organizations were established in 1947?,Average population ratio = Population / Area,"SELECT T1.Population / T1.Area FROM country AS T1 INNER JOIN organization AS T2 ON T1.Code = T2.Country WHERE STRFTIME('%Y', T2.Established) = '1947'"
mondial_geo,"What is the name of Anguilla's capital, and where is it located?",Anguilla is a country,"SELECT Capital, Province FROM country WHERE Name = 'Anguilla'"
mondial_geo,"Which nation has the smallest population, and where is its capital located?",,"SELECT Name, Capital FROM country ORDER BY Population ASC LIMIT 1"
mondial_geo,How much more space does Asia have than Europe?,Asia and Europe are two continents.,SELECT MAX(Area) - MIN(Area) FROM continent WHERE Name = 'Asia' OR Name = 'Europe'
mondial_geo,What is the geographic location of Aarhus city? Please provide the answer with the coordinates of the location.,"Longitude, Latitude = coordinates of the location","SELECT Longitude, Latitude FROM city WHERE Name = 'Aarhus'"
mondial_geo,What is the population gap between the United Kingdom and Italy?,Population gap = Total population of the United Kingdom - Total population of Italy,SELECT MAX(Population) - MIN(Population) FROM country WHERE Name = 'United Kingdom' OR Name = 'Italy'
mondial_geo,In which city is the European Bank for Reconstruction and Development's headquarters? Please include the city and province where the headquarters are located in your answer.,,"SELECT City, Province FROM organization WHERE Name = 'European Bank for Reconstruction and Development'"
mondial_geo,Which lake is the largest in terms of both surface area and depth?,Area * Depth can represents the metric in terms of both surface area and depth,SELECT Name FROM lake ORDER BY Area * Depth DESC LIMIT 1
mondial_geo,Which two nations are separated from one another by the longest border? Please include the entire names of the nations in your answer.,,"SELECT Country1, Country2 FROM borders ORDER BY Length DESC LIMIT 1"
mondial_geo,Which nation has the highest GDP? Please give the nation's full name.,,SELECT T1.Name FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country ORDER BY T2.GDP DESC LIMIT 1
mondial_geo,Which nation has the lowest proportion of people who speak an African language? Please state the nation's full name.,Nation and country share the same meaning. Proportion refers to percentage,SELECT T1.Name FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'African' ORDER BY T2.Percentage ASC LIMIT 1
mondial_geo,"Which country has three different religions-Anglicanism, Christianity, and Roman Catholicism and uses 100% English?",,SELECT T2.Country FROM country AS T1 INNER JOIN religion AS T2 ON T1.Code = T2.Country INNER JOIN language AS T3 ON T3.Country = T2.Country WHERE (T2.Name = 'Anglican' OR T2.Name = 'Christian' OR T2.Name = 'Roman Catholic') AND T3.Name = 'English' AND T3.Percentage = 100 GROUP BY T1.Name HAVING COUNT(T1.Name) = 3
mondial_geo,Please list the top 3 countries with the highest inflation rate.,,SELECT T1.Name FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country ORDER BY T2.Inflation DESC LIMIT 3
mondial_geo,Please provide a list of every nation where English is spoken and utilized entirely.,Utilizition entirely means Percentage = 100% uses,SELECT T1.Name FROM country AS T1 INNER JOIN language AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'English' AND T2.Percentage = 100
mondial_geo,How many businesses were founded after 1960 in a nation that wasn't independent?,Established means founded; Country means nation; Organization means businesses,"SELECT COUNT(T3.Name) FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country INNER JOIN organization AS T3 ON T3.Country = T2.Country WHERE T2.Independence = NULL AND STRFTIME('%Y', T3.Established) > '1960'"
mondial_geo,What province did the river Klaeaelv travel through and how long is the river?,,SELECT T1.Province FROM city AS T1 INNER JOIN located AS T2 ON T1.Name = T2.City INNER JOIN river AS T3 ON T3.Name = T2.River WHERE T3.Name = 'Klaraelv'
mondial_geo,How many Italian regions are bordered by the Mediterranean Sea? How deep is the Mediterranean Sea?,Reigion refers to province,"SELECT COUNT(DISTINCT T2.province), T3.Depth FROM country AS T1 INNER JOIN located AS T2 ON T1.Code = T2.Country INNER JOIN sea AS T3 ON T3.Name = T2.Sea WHERE T1.Code = 'I' AND T3.Name = 'Mediterranean Sea' GROUP BY T3.Depth"
mondial_geo,What nations are considered British Overseas Territories?,British Overseas Territories is one government form; Nation and country share the same meaning,SELECT name FROM country WHERE CODE IN ( SELECT country FROM politics WHERE government = 'British Overseas Territories' )
mondial_geo,Which of the top 3 economies by GDP has the lowest proportion of the economy devoted to agriculture?,Economies refers to countries,"SELECT T1.Name FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country ORDER BY T2.GDP DESC, T2.Agriculture ASC LIMIT 1"
mondial_geo,"How big is Africa, and how many nations make up the continent?",Area can measure the size of countries; Country and nation share the same meaning,"SELECT T1.Area, COUNT(T3.Name) FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T3.Code = T2.Country WHERE T1.Name = 'Asia' GROUP BY T1.Name, T1.Area"
mondial_geo,Which United States province is home to the greatest number of corporations' corporate headquarters?,Organization refers to corporation,SELECT T1.Province FROM country AS T1 INNER JOIN organization AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'United States' GROUP BY T1.Province ORDER BY COUNT(T1.Name) DESC LIMIT 1
mondial_geo,What are the most recent three independent nations?,Larger date of indepedence refers to more recent indepdence; Nation refers to country,SELECT T1.Name FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country ORDER BY T2.Independence DESC LIMIT 3
mondial_geo,Please name any three sovereign nations that have been governed by the republic since 1991.,Nation refers to country,"SELECT country FROM politics WHERE government = 'republic' AND STRFTIME('%Y', independence) >= '1991' AND country IN ( SELECT country FROM country ) ORDER BY independence LIMIT 3"
mondial_geo,Which company falls under the category of an associated member? Please provide the organization's full name.,,SELECT NAME FROM organization WHERE country IN ( SELECT country FROM politics WHERE dependent != '' )
mondial_geo,Which nations have a boundary with the Kalahari Desert?,Nation refers to country,SELECT T3.Name FROM desert AS T1 INNER JOIN geo_desert AS T2 ON T1.Name = T2.Desert INNER JOIN country AS T3 ON T3.Code = T2.Country WHERE T1.Name = 'Kalahari'
mondial_geo,Which desert in Kazakhstan is the largest?,,SELECT T1.Name FROM desert AS T1 INNER JOIN geo_desert AS T2 ON T1.Name = T2.Desert INNER JOIN country AS T3 ON T3.Code = T2.Country WHERE T3.Name = 'Kazakstan' ORDER BY T1.Area DESC LIMIT 1
mondial_geo,"What sea does the Baltic Sea converge with, and how deep is the Baltic Sea?",Coverage refers to mergesWith,"SELECT T2.Sea2, T1.Depth FROM sea AS T1 INNER JOIN mergesWith AS T2 ON T1.Name = T2.Sea1 WHERE T1.Name = 'Baltic Sea'"
mondial_geo,Which constitutional monarchy nations saw the greatest growth in the number of organizations after 1907?,Nation refers to country; Information of growth appears in the column Established,"SELECT T1.Name FROM country AS T1 INNER JOIN organization AS T2 ON T1.Code = T2.Country INNER JOIN politics AS T3 ON T3.Country = T2.Country WHERE STRFTIME('%Y', T2.Established) > '1907' AND T3.Government = 'constitutional monarchy' GROUP BY T1.Name ORDER BY COUNT(DISTINCT T2.Name) DESC LIMIT 1"
mondial_geo,What kind of mountain is Ampato? Which province and nation does this mountain belong to?,Nation refers to country,"SELECT T1.Type, T3.Name, T4.Name FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain INNER JOIN province AS T3 ON T3.Name = T2.Province INNER JOIN country AS T4 ON T3.Country = T4.Code WHERE T1.Name = 'Ampato'"
mondial_geo,Please provide a list of every volcano mountain in the province of Ecuador.,,SELECT T1.Name FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain INNER JOIN province AS T3 ON T3.Name = T2.Province WHERE T3.Name = 'Ecuador' AND T1.Type = 'volcano'
mondial_geo,What percentage of nations have achieved independence since 1993 and practice parliamentary democracy? Please include any three parliament-based democracies that attained independence after 1993.,"Percentage of rivers with lengths greater than 3,000 miles = [(Total number of rivers with lengths greater than 3,000 miles) / (Total number of rivers)] * 100%","SELECT SUM(IIF(government = 'parliamentary democracy', 1, 0)) , CAST(SUM(IIF(government = 'parliamentary democracy', 1, 0)) AS REAL) * 100 / COUNT(*) FROM politics AS t1 WHERE STRFTIME('%Y', independence) >= '1993'"
mondial_geo,"What proportion of rivers have a length of more than 3,000 miles? Please provide the name of a Russian river that is more than 3,000 miles long.","Proportion of rivers with lengths greater than 3,000 miles = [(Total number of rivers with lengths greater than 3,000 miles) / (Total number of rivers)] * 100%",SELECT CAST(SUM(CASE WHEN T1.Length > 3000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Name) FROM river AS T1 INNER JOIN located AS T2 ON T1.Name = T2.River INNER JOIN country AS T3 ON T3.Code = T2.Country
mondial_geo,What is the full name of ABEDA and when was it established?,,"SELECT Name, Established FROM organization WHERE Abbreviation = 'ABEDA'"
mondial_geo,Name all the organisations that were established from 1970 to 1980.,,"SELECT Name FROM organization WHERE STRFTIME('%Y', Established) BETWEEN '1970' AND '1980'"
mondial_geo,Provide a list of all organisations with headquarters in London?,London is a city,SELECT Name FROM organization WHERE City = 'London'
mondial_geo,"For each organisations with headquarters in the USA, provide the its full name and the city where the headquarter is located at.",,"SELECT Name, City FROM organization WHERE Country = 'USA'"
mondial_geo,"Name the first organisation established in the Paris city. State its abbreviation, full name and date of establishment.",Paris is a city,"SELECT Abbreviation, Name, Established FROM organization WHERE City = 'Paris' ORDER BY Established ASC LIMIT 1"
mondial_geo,List all the organisations that where its name contains 'United Nation'. State its full name and its headquarter city.,,"SELECT Name, City FROM organization WHERE Name LIKE '%United Nation%'"
mondial_geo,Which 2 countries' border span across the longest length? Provide the country's full name.,,"SELECT T1.Name, T3.Name FROM country AS T1 INNER JOIN borders AS T2 ON T1.Code = T2.Country1 INNER JOIN country AS T3 ON T3.Code = T2.Country2 ORDER BY T2.Length DESC LIMIT 1"
mondial_geo,Name all countries in which have border with Bulgaria.,Bulgaria is a country name,SELECT T3.Name FROM country AS T1 INNER JOIN borders AS T2 ON T1.Code = T2.Country1 INNER JOIN country AS T3 ON T3.Code = T2.Country2 WHERE T1.Name = 'Bulgaria'
mondial_geo,"State all countries with border greater than 4,000. List the full country name.",,SELECT T1.Name FROM country AS T1 INNER JOIN borders AS T2 ON T1.Code = T2.Country1 WHERE T2.Length > 4000
mondial_geo,"Among the country member of 'IOC' organization, which country has the most population?",,SELECT T2.Name FROM isMember AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T1.Organization = 'IOC' ORDER BY T2.Population DESC LIMIT 1
mondial_geo,List all members and member type of the Islamic Development Bank.,,"SELECT T2.Country, T2.Type FROM organization AS T1 INNER JOIN isMember AS T2 ON T1.Abbreviation = T2.Organization INNER JOIN country AS T3 ON T2.Country = T3.Code WHERE T1.Name = 'Islamic Development Bank'"
mondial_geo,State the area and population of the country where Asia Pacific Economic Cooperation headquarter is located.,Asia Pacific Economic Cooperation is an organization name,"SELECT T2.Name, T2.Population FROM organization AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T1.Name = 'Asia Pacific Economic Cooperation'"
mondial_geo,What is the organization(s) that has 'National Society' as member type.,,SELECT T1.Name FROM organization AS T1 INNER JOIN isMember AS T2 ON T2.Country = T1.Country INNER JOIN country AS T3 ON T2.Country = T3.Code WHERE T2.Type = 'National Society'
mondial_geo,Which country has the least organization membership?,,SELECT country FROM organization WHERE country IN ( SELECT Code FROM country ) GROUP BY country ORDER BY COUNT(NAME) LIMIT 1
mondial_geo,List all countries with 'Category III' membership in 'IFAD' organization. Please also provide the capital of the country.,,"SELECT Name, Capital FROM country WHERE Code IN ( SELECT Country FROM isMember WHERE type = 'Category III' AND Organization = 'IFAD' )"
mondial_geo,Name the organizations with the most members.,,SELECT T1.Name FROM organization AS T1 INNER JOIN isMember AS T2 ON T2.Country = T1.Country INNER JOIN country AS T3 ON T2.Country = T3.Code GROUP BY T1.Name ORDER BY COUNT(T3.Name) DESC LIMIT 1
mondial_geo,What is the capital of Australia? Is the capital a headquarter to any organization? Name the organization(s).,,"SELECT T2.Capital, T1.Name FROM organization AS T1 INNER JOIN country AS T2 ON T1.City = T2.Capital WHERE T2.Name = 'Australia'"
mondial_geo,"Among the organizations where headquarters are in the 'USA', what is the percentage of the them are in 'Washington'?",percentage can be computed by [count(City = 'Washington') / count(all cities)] * 100%,SELECT CAST(SUM(CASE WHEN T2.City = 'Washington' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.City) FROM country AS T1 INNER JOIN organization AS T2 ON T1.Code = T2.Country WHERE T2.Country = 'USA'
mondial_geo,What is the border length between 'USA' and 'MEX',,SELECT Length FROM borders WHERE Country1 = 'MEX' AND Country2 = 'USA'
mondial_geo,What is the newest established organization where Singapore is a member of?,,SELECT T3.Name FROM country AS T1 INNER JOIN isMember AS T2 ON T1.Code = T2.Country INNER JOIN organization AS T3 ON T3.Country = T2.Country WHERE T1.Name = 'Singapore' ORDER BY T3.Established DESC LIMIT 1
mondial_geo,Provide the population of the city of the 'World Tourism Organization' headquarter.,,SELECT T2.Population FROM organization AS T1 INNER JOIN city AS T2 ON T1.City = T2.Name WHERE T1.Name = 'World Tourism Organization'
mondial_geo,What is the height of mountain Dhaulagiri located and in which province is it located?,,"SELECT T1.Height, T2.Province FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain WHERE T1.Name = 'Dhaulagiri'"
mondial_geo,List all the name and height of all mountains in Alaska,Alaska is a province,"SELECT T1.Name, T1.Height FROM mountain AS T1 INNER JOIN geo_mountain AS T2 ON T1.Name = T2.Mountain WHERE T2.Province = 'Alaska'"
mondial_geo,What is the population of the country with the highest infant mortality rate?,,SELECT T1.Population FROM country AS T1 INNER JOIN population AS T2 ON T1.Code = T2.Country ORDER BY T2.Infant_Mortality DESC LIMIT 1
mondial_geo,State the inflation rate of Greece.,,SELECT T2.Inflation FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Greece'
mondial_geo,Find the government type for the country with the highest percentage GDP in Agriculture.,,SELECT T3.Government FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country INNER JOIN politics AS T3 ON T3.Country = T2.Country ORDER BY T2.Agriculture DESC LIMIT 1
mondial_geo,List the full name its capital of all the countries with parliamentary democracy government.,Parliamentary democracy is a government form,SELECT T1.Capital FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country WHERE T2.Government = 'parliamentary democracy'
mondial_geo,Provide a full list of countries and its population with more than 70% of Chinese.,,"SELECT T1.Name, T1.Population * T2.Percentage FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'Chinese' AND T2.Percentage > 70"
mondial_geo,"In which city has the greatest population, what is its percentage to its country population?",,"SELECT T3.Name, CAST(T3.Population AS REAL) * 100 / T1.Population FROM country AS T1 INNER JOIN province AS T2 ON T1.Code = T2.Country INNER JOIN city AS T3 ON T3.Country = T2.Country ORDER BY T3.Population DESC LIMIT 1"
mondial_geo,When did the United States of America attained it's Independence?,,SELECT T1.Independence FROM politics AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T2.Name = 'United States'
mondial_geo,What is the peak height of the highest volcanic type of mountain? Give it's name.,peak means the highest,"SELECT Height, Name FROM mountain WHERE Type = 'volcanic' ORDER BY Height DESC LIMIT 1"
mondial_geo,What is the name of the most recently founded organization in Saudi Arabia?,Saudi Arabia is a country,SELECT T1.Name FROM organization AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code WHERE T2.Name = 'Saudi Arabia' ORDER BY T1.Established DESC LIMIT 1
mondial_geo,Which country has the 5th highest infant mortality rate?,,"SELECT T2.Name FROM population AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Code ORDER BY T1.Infant_Mortality DESC LIMIT 4, 1"
mondial_geo,Which country has the widest range of religious practices?,,SELECT T1.Name FROM country AS T1 INNER JOIN religion AS T2 ON T1.Code = T2.Country GROUP BY T1.Name ORDER BY COUNT(DISTINCT T2.Name) DESC LIMIT 1
mondial_geo,What river has the 17th-longest length overall? Specify it's length.,,"SELECT Name, Length FROM river ORDER BY Length DESC LIMIT 16, 1"
mondial_geo,When did the country whose capital is Nouakchott attained it's independence?,,SELECT T2.Independence FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country WHERE T1.Capital = 'Nouakchott'
mondial_geo,"What is the name of the country with the smallest population, and what is its gross domestic product?",GDP refers to gross domestic product,"SELECT T1.Name, T2.GDP FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country ORDER BY T1.Population ASC LIMIT 1"
mondial_geo,Which Zaire region is home to the country's deepest lake's Name it and list its depth.,,"SELECT T3.Name, T1.Name, T1.Depth FROM lake AS T1 INNER JOIN located AS T2 ON T1.Name = T2.Lake INNER JOIN province AS T3 ON T3.Name = T2.Province INNER JOIN country AS T4 ON T4.Code = T3.Country WHERE T4.Name = 'Zaire'"
mondial_geo,What is the maximal elevation of the summit of the shortest mountain that can be found in the island of Madagaskar? Indicate what type of mountain it is.,The elevation of the summit refers to height,"SELECT T3.Height, T3.Type FROM island AS T1 INNER JOIN mountainOnIsland AS T2 ON T1.Name = T2.Island INNER JOIN mountain AS T3 ON T3.Name = T2.Mountain WHERE T1.Name = 'Madagaskar' ORDER BY T3.Height DESC LIMIT 1"
mondial_geo,"Which nation, with a population ranging from 60,000,000 to 99,000,000, has the greatest gross domestic product?",GDP refers to gross domestic product; Nation and country are synonyms,"SELECT T1.Name, T2.GDP FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T1.Population BETWEEN 60000000 AND 90000000 ORDER BY T2.GDP DESC LIMIT 1"
mondial_geo,Which Asian country gave its agricultural sector the largest share of its gross domestic product?,Gross domestic product = GDP; Largest share of GDP in agricultural sector was mentioned in economy.Agriculture,SELECT T2.Country FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T2.Country = T3.Code INNER JOIN economy AS T4 ON T4.Country = T3.Code WHERE T1.Name = 'Asia' ORDER BY T4.Agriculture DESC LIMIT 1
mondial_geo,What form of governance does the least prosperous nation in the world have?,Nation and country are synonyms; Form of governance was mentioned in politics.Government; Least prosperous means lowest GDP,SELECT T3.Government FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country INNER JOIN politics AS T3 ON T3.Country = T2.Country WHERE T2.GDP IS NOT NULL ORDER BY T2.GDP ASC LIMIT 1
mondial_geo,What year saw the greatest number of organizations created on the European continent?,,"SELECT STRFTIME('%Y', T4.Established) FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T2.Country = T3.Code INNER JOIN organization AS T4 ON T4.Country = T3.Code WHERE T1.Name = 'Europe' GROUP BY STRFTIME('%Y', T4.Established) ORDER BY COUNT(T4.Name) DESC LIMIT 1"
mondial_geo,What other country does the most populated nation in the world share a border with and how long is the border between the two nations?,Nation and country are synonyms,"SELECT T2.Country2, T2.Length FROM country AS T1 INNER JOIN borders AS T2 ON T1.Code = T2.Country1 INNER JOIN country AS T3 ON T3.Code = T2.Country2 WHERE T1.Name = ( SELECT Name FROM country ORDER BY Population DESC LIMIT 1 )"
mondial_geo,"What is the population density of the nation whose capital city is in the Distrito Federal province, and what portion of its gross domestic product is devoted to its industries?",ation and country are synonyms; Gross domestic product = GDP; Portion of GDP devoted to industries appears in economy.Industry; Population Density = Population / Area,"SELECT T1.Population / T1.Area, T2.Industry FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T1.Province = 'Distrito Federal'"
mondial_geo,Lists all governments with a parliamentary democracy that achieved their independence between 01/01/1950 and 12/31/1999.,"Inhabitants, synonymous with population","SELECT * FROM politics WHERE STRFTIME('%Y', Independence) BETWEEN '1950' AND '1999' AND Government = 'parliamentary democracy'"
mondial_geo,What percentage of countries became independent during the year 1960?,Percentage = count(countries independent 1960) / total num of countries,"SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', Independence) = '1960' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Country) FROM politics"
mondial_geo,List all deserts that are not between latitudes 30 and 40.,,SELECT Name FROM desert WHERE Latitude < 30 OR Latitude > 40
mondial_geo,Indicate the coordinates of all the deserts whose area is in more than one country.,"coordinates consists of Latitude, Longitude","SELECT T1.Latitude, T1.Longitude FROM desert AS T1 INNER JOIN geo_desert AS T2 ON T1.Name = T2.Desert GROUP BY T1.Name, T1.Latitude, T1.Longitude HAVING COUNT(T1.Name) > 1"
mondial_geo,"What is the provincial capital of the province with a population of less than 80,000 that has the highest average population per area?",Average population per area = population / area,SELECT CapProv FROM province WHERE Population < 80000 ORDER BY Population / Area DESC LIMIT 1
software_company,How many customers have never married?,MARITAL_STATUS = 'Never-married';,SELECT COUNT(ID) FROM Customers WHERE MARITAL_STATUS = 'Never-married'
software_company,"Among all the customers, how many of them are teenagers?",teenager is a person aged between 13 and 19 years;,SELECT COUNT(ID) FROM Customers WHERE age >= 13 AND age <= 19
software_company,Please list the occupations of the customers with an education level of 11.,education level of 11 refers to EDUCATIONNUM = 11;,SELECT DISTINCT OCCUPATION FROM Customers WHERE EDUCATIONNUM = 11
software_company,"Of the first 60,000 customers' responses to the incentive mailing sent by the marketing department, how many of them are considered a true response?",RESPONSE = 'true';,SELECT COUNT(REFID) custmoer_number FROM Mailings1_2 WHERE RESPONSE = 'true'
software_company,"Among the customers over 30, how many of them are Machine-op-inspcts?",over 30 refers to age > 30; OCCUPATION = 'Machine-op-inspct';,SELECT COUNT(ID) FROM Customers WHERE OCCUPATION = 'Machine-op-inspct' AND age > 30
software_company,How many female customers have an education level of over 11?,education level of 11 refers to EDUCATIONNUM = 11; SEX = 'Female';,SELECT COUNT(ID) FROM Customers WHERE EDUCATIONNUM > 11 AND SEX = 'Female'
software_company,"Of the first 60,000 customers who sent a true response to the incentive mailing sent by the marketing department, how many of them are female?",RESPONSE = 'true'; SEX = 'Female';,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T1.SEX = 'Female' AND T2.RESPONSE = 'true'
software_company,Please list the occupations of the customers over 40 and have sent a true response to the incentive mailing sent by the marketing department.,over 40 refers to age > 40; RESPONSE = 'true';,SELECT DISTINCT T1.OCCUPATION FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T1.age > 40 AND T2.RESPONSE = 'true'
software_company,"Among the male customers, how many of them come from a place with over 30,000 inhabitants?","SEX = 'Male', over 30,000 inhabitants refer to NHABITANTS_K > 30; place refers to GEOID;",SELECT COUNT(T1.GEOID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.SEX = 'Male' AND T2.INHABITANTS_K > 30
software_company,How many customers are from the place with the highest average income per month?,place with the highest average income per month refers to GEOID where MAX(INCOME_K);,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID ORDER BY T2.INCOME_K DESC LIMIT 1
software_company,"Among the customers from a place with more than 20,000 and less than 30,000 inhabitants, how many of them are Machine-op-inspcts?","place with more than 20,000 and less than 30,000 inhabitants refers to GEOID where INHABITANTS_K BETWEEN 20 AND 30; OCCUPATION = 'Machine-op-inspct';",SELECT COUNT(T1.GEOID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.OCCUPATION = 'Machine-op-inspct' AND T2.INHABITANTS_K > 20 AND T2.INHABITANTS_K < 30
software_company,"Which customer come from a place with more inhabitants, customer no.0 or customer no.1?",place with more inhabitants refers to GEOID where ID = 0 OR ID = 1 and MAX(NHABITANTS_K);,SELECT T1.ID FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.ID = 0 OR T1.ID = 1 ORDER BY INHABITANTS_K DESC LIMIT 1
software_company,"Of the first 60,000 customers who sent a true response to the incentive mailing sent by the marketing department, how many of them are from a place with more than 30,000 inhabitants?","RESPONSE = 'true'; place with more than 30,000 inhabitants refers to GEOID where INHABITANTS_K > 30;",SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID INNER JOIN Demog AS T3 ON T1.GEOID = T3.GEOID WHERE T3.INHABITANTS_K > 30 AND T2.RESPONSE = 'true'
software_company,"Of the first 60,000 customers who sent a true response to the incentive mailing sent by the marketing department, how many of them are divorced males?",RESPONSE = 'true'; SEX = 'Male'; MARITAL_STATUS = 'Divorced';,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T1.SEX = 'Male' AND T1.MARITAL_STATUS = 'Divorced' AND T2.RESPONSE = 'true'
software_company,"How many of the first 60,000 customers from the place with the highest average income per month have sent a true response to the incentive mailing sent by the marketing department?",place with the highest average income per month refers to GEOID where MAX(INCOME_K); RESPONSE = 'true';,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID INNER JOIN Demog AS T3 ON T1.GEOID = T3.GEOID WHERE T2.RESPONSE = 'true' ORDER BY T3.INCOME_K DESC LIMIT 1
software_company,What is the number of inhabitants of the place the most customers are from?,the most customers are from refers to GEOID where MAX(COUNT(ID)); number of inhabitants refers to INHABITANTS_K;,SELECT DISTINCT T2.INHABITANTS_K FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID ORDER BY T2.INHABITANTS_K DESC
software_company,"Among the customers who come from the place with 25746 inhabitants, how many of them are male?",place with 44114 inhabitants refers to GEOID where INHABITANTS_K = 44.114; SEX = 'Male';,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T2.INHABITANTS_K = 25.746 AND T1.SEX = 'Male'
software_company,"Of the first 60,000 customers who sent a true response to the incentive mailing sent by the marketing department, how many of them are teenagers?",RESPONSE = 'true'; teenagers are people aged between 13 and 19 years;,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T1.age >= 13 AND T1.age <= 19 AND T2.RESPONSE = 'true'
software_company,What is the average education level of customers from the place with the highest average income per month?,place with the highest average income per month refers to GEOID where MAX(INCOME_K); average education level refers to AVG(EDUCATIONNUM);,SELECT AVG(T1.EDUCATIONNUM) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID ORDER BY T2.INCOME_K DESC LIMIT 1
software_company,"What is the average age of first 60,000 customers who sent a true response to the incentive mailing sent by the marketing department?",RESPONSE = 'true'; AVG(age);,SELECT AVG(T1.age) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T2.RESPONSE = 'true'
software_company,How many of the customers are male?,SEX = 'Male';,SELECT COUNT(ID) FROM Customers WHERE SEX = 'Male'
software_company,List down the customer's geographic identifier who are handlers or cleaners.,geographic identifier refers to GEOID; OCCUPATION = 'Handlers-cleaners';,SELECT GEOID FROM Customers WHERE OCCUPATION = 'Handlers-cleaners'
software_company,What is the total number of customers with an age below 30?,age below 30 refers to age < 30;,SELECT COUNT(ID) FROM Customers WHERE age < 30
software_company,List down the geographic identifier with an income that ranges from 2100 to 2500.,geographic identifier with an income that ranges from 2100 to 2500 refers to GEOID where INCOME_K BETWEEN 2100 AND 2500;,SELECT GEOID FROM Demog WHERE INCOME_K >= 2100 AND INCOME_K <= 2500
software_company,"In geographic identifier from 20 to 50, how many of them has a number of inhabitants below 20?",geographic identifier from 20 to 50 refers to GEOID BETWEEN 20 AND 50; number of inhabitants below 20 refers to INHABITANTS_K < 20;,SELECT COUNT(GEOID) FROM Demog WHERE INHABITANTS_K < 20 AND GEOID >= 20 AND GEOID <= 50
software_company,What is the number of inhabitants and income of geographic identifier 239?,geographic identifier 239 refers to GEOID = 239; number of inhabitants refers to INHABITANTS_K; income refers to INCOME_K;,SELECT INHABITANTS_K FROM Demog WHERE GEOID = 239
software_company,Give the level of education and occupation of customers ages from 20 to 35 with an income K of 2000 and below.,customers ages from 20 to 35 refer to ID where age BETWEEN 20 AND 35; income K of 2000 and below refers to INCOME_K < 2000; level of education refers to EDUCATIONNUM;,"SELECT T1.EDUCATIONNUM, T1.OCCUPATION FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T2.INCOME_K < 2000 AND T1.age >= 20 AND T1.age <= 35"
software_company,List down the number of inhabitants of customers with a divorced marital status and older than 50 years old.,number of inhabitants refers to INHABITANTS_K; older than 50 years old refers to age < 50; MARITAL_STATUS = 'Divorced;,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.MARITAL_STATUS = 'Divorced' AND T1.age < 50
software_company,What is the geographic identifier and income of the oldest customer?,the oldest customer refers to MAX(age); geographic identifier refers to GEOID; income refers to INCOME_K;,"SELECT T1.GEOID, T2.INCOME_K FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID ORDER BY T1.age DESC LIMIT 1"
software_company,"Among the male customers with an level of education of 4 and below, list their income K.",male customers with an level of education of 4 and below refer to SEX = 'Male' where EDUCATIONNUM < 4;,SELECT INCOME_K FROM Demog WHERE GEOID IN ( SELECT GEOID FROM Customers WHERE EDUCATIONNUM < 4 AND SEX = 'Male' )
software_company,List the occupation and income of male customers with an level of education of 4 to 6.,male customers with an level of education of 4 to 6 refer to SEX = 'Male' where EDUCATIONNUM BETWEEN 4 AND 6; income refers to INCOME_K;,"SELECT T1.OCCUPATION, T2.INCOME_K FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.EDUCATIONNUM >= 4 AND T1.EDUCATIONNUM <= 6 AND T1.SEX = 'Male'"
software_company,"In widowed male customers ages from 40 to 60, how many of them has an income ranges from 3000 and above?",widowed male customers ages from 40 to 60 refer to SEX = 'Male' where age BETWEEN 40 AND 60 and MARITAL_STATUS = 'Widowed'; income ranges from 3000 and above refers to INCOME_K BETWEEN 2000 AND 3000;,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.age >= 40 AND T1.age <= 60 AND T1.MARITAL_STATUS = 'Widowed' AND T1.SEX = 'Male' AND T2.INCOME_K >= 2000 AND T2.INCOME_K <= 3000
software_company,What is the occupation of customers within number of inhabitants ranges of 30 to 40?,number of inhabitants ranges of 30 to 40 refers to INHABITANTS_K BETWEEN 30 AND 40;,SELECT DISTINCT T1.OCCUPATION FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T2.INHABITANTS_K >= 30 AND T2.INHABITANTS_K <= 40
software_company,"Among the widowed female customers, give the income of those who has an level of education of 5 and below.",widowed female customers refer to SEX = 'Female' where MARITAL_STATUS = 'Widowed'; level of education of 5 and below refers to EDUCATIONNUM ≤ 5;,SELECT INCOME_K FROM Demog WHERE GEOID IN ( SELECT GEOID FROM Customers WHERE EDUCATIONNUM < 5 AND SEX = 'Female' AND MARITAL_STATUS = 'Widowed' )
software_company,List the marital status of customers within the age of 40 to 60 that has the highest income among the group.,age of 40 to 60 refers to age BETWEEN 40 AND 60; the highest income refers to MAX(INCOME_K);,SELECT T1.MARITAL_STATUS FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.age >= 40 AND T1.age <= 60 ORDER BY T2.INCOME_K DESC LIMIT 1
software_company,What is the number of inhabitants of male customers ages from 20 to 30 years old who are farming or fishing?,male customers ages from 20 to 30 years old refer to SEX = 'Male' where age BETWEEN 20 AND 30; farming or fishing refers to OCCUPATION; number of inhabitants refers to INHABITANTS_K;,SELECT T2.INHABITANTS_K FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.OCCUPATION = 'Farming-fishing' AND T1.SEX = 'Male' AND T1.age >= 20 AND T1.age <= 30
software_company,"Among the customers with a marital status of married-civ-spouse, list the number of inhabitants and age of those who are machine-op-inspct.",OCCUPATION = 'Machine-op-inspct'; number of inhabitants refers to INHABITANTS_K;,SELECT T2.INHABITANTS_K FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.OCCUPATION = 'Farming-fishing' AND T1.SEX = 'Male' AND T1.age >= 20 AND T1.age <= 30
software_company,"In female customers ages from 50 to 60, how many of them has an number of inhabitants ranges from 19 to 24?",female customers ages from 50 to 60 refer to SEX = 'Female' where age BETWEEN 50 AND 60; number of inhabitants ranges from 19 to 24 refers to INHABITANTS_K BETWEEN 19 AND 24;,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.SEX = 'Female' AND T1.age >= 50 AND T1.age <= 60 AND T2.INHABITANTS_K >= 19 AND T2.INHABITANTS_K <= 24
software_company,List the income and number of inhabitants of customers with an age greater than the 80% of average age of all customers?,age greater than the 80% of average age refers to age > (AVG(age) * 0.8); income refers to INCOME_K; number of inhabitants refers to INHABITANTS_K;,"SELECT T2.INCOME_K, T2.INHABITANTS_K FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID GROUP BY T2.INCOME_K, T2.INHABITANTS_K HAVING T1.age > 0.8 * AVG(T1.age)"
software_company,"In customers with marital status of never married, what is the percentage of customers with income of 2500 and above?","DIVIDE(COUNT(INCOME_K ≥ 2500 where MARITAL_STATUS = 'Never-married'), COUNT(INCOME_K where MARITAL_STATUS = 'Never-married')) as percentage;",SELECT CAST(SUM(CASE WHEN T2.INCOME_K > 2500 THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.MARITAL_STATUS = 'Never-married'
software_company,Find and list the id and geographic ID of the elderly customers with an education level below 3.,elderly customers with an education level below 3 refer to age > 65 where EDUCATIONNUM < 3; geographic ID refers to GEOID;,"SELECT ID, GEOID FROM Customers WHERE EDUCATIONNUM < 3 AND age > 65"
software_company,List the geographic id of places where the income is above average.,"geographic ID refers to GEOID; income is above average refers to INCOME_K > DIVIDE(SUM(INCOME_K), COUNT(GEOID));",SELECT AVG(INCOME_K) FROM Demog
software_company,Calculate the number of customers who did not respond in February of 2007.,did not respond refers to RESPONSE = 'false'; February of 2007 refers to REF_DATE BETWEEN '2007-02-01 12:00:00.0'AND '2007-02-28 12:00:00.0';,SELECT COUNT(REFID) custmoer_number FROM Mailings1_2 WHERE RESPONSE = 'false' AND REF_DATE BETWEEN '2007-02-01' AND '2007-02-28'
software_company,How many teenagers are working as Machine-op-inspct?,teenager is a person aged between 13 and 19 years; OCCUPATION = 'Machine-op-inspct';,SELECT COUNT(ID) teenager_number FROM Customers WHERE OCCUPATION = 'Machine-op-inspct' AND age >= 13 AND age <= 19
software_company,"Of customers who provide other services, how many are from places where inhabitants are more than 20000?",OCCUPATION = 'Other-service'; inhabitants are more than 20000 refer to INHABITANTS_K > 20;,SELECT COUNT(T2.GEOID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.OCCUPATION = 'Other-service' AND T2.INHABITANTS_K > 20
software_company,"Among the male customer in their twenties, how many are from places where the average income is more than 3000?",male customer in their twenties refer to SEX = 'Male' where age BETWEEN 20 AND 29; average income is more than 3000 refers to INCOME_K > 3000;,SELECT COUNT(T2.GEOID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.SEX = 'Male' AND T2.INCOME_K > 3000 AND T1.age >= 20 AND T1.age <= 29
software_company,What percentage of elderly customers who are never married in the place with geographic ID 24?,"elderly customers refer to age > 65; DIVIDE(COUNT(ID where age > 65, MARITAL_STATUS = 'never married' and GEOID = 24), COUNT(ID where GEOID = 24)) as percentage;",SELECT CAST(SUM(CASE WHEN T1.MARITAL_STATUS = 'never married' THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.GEOID = 24
software_company,"Among the customers with an average income per inhabitant above 3000, what percentage are in their eighties?","average income per inhabitant above 3000 refers to INCOME_K > 3000; eighties refer to age BETWEEN 80 AND 89; DIVIDE(COUNT(INCOME_K > 3000 and age BETWEEN 80 AND 89), COUNT(INCOME_K > 3000 )) as percentage;",SELECT CAST(SUM(CASE WHEN T1.age BETWEEN 80 AND 89 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T2.INCOME_K > 3000
software_company,How many of the customer's reference ID that has a TRUE response?,reference ID refers to REFID;,SELECT COUNT(REFID) FROM Mailings1_2 WHERE RESPONSE = 'true'
software_company,List down the customer's reference ID with true response.,reference ID refers to REFID;,SELECT REFID FROM Mailings1_2 WHERE RESPONSE = 'true'
software_company,What is the total number of widowed customers with an age below 50?,widowed customers with an age below 50 refer to MARITAL_STATUS = 'Widowed' where age < 50;,SELECT COUNT(ID) FROM Customers WHERE MARITAL_STATUS = 'Widowed' AND age < 50
software_company,List down the geographic identifier with an number of inhabitants less than 30.,geographic identifier with an number of inhabitants less than 30 refers to GEOID where INHABITANTS_K < 30;,SELECT GEOID FROM Demog WHERE INHABITANTS_K < 30
software_company,"In geographic identifier from 10 to 30, how many of them has an income below 2000?",GEOID BETWEEN 10 AND 30; INCOME_K < 2000;,SELECT COUNT(GEOID) FROM Demog WHERE INCOME_K < 2000 AND GEOID >= 10 AND GEOID <= 30
software_company,What is the marital status of the customer ages 62 with an level of education of 7?,customer ages 62 with an level of education of 7 refer age = 62 where EDUCATIONNUM = 7;,SELECT DISTINCT MARITAL_STATUS FROM Customers WHERE EDUCATIONNUM = 7 AND age = 62
software_company,List down the number of inhabitants of customers with a widowed marital status and false response .,number of inhabitants refers to INHABITANTS_K; RESPONSE = 'false';,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID INNER JOIN Demog AS T3 ON T1.GEOID = T3.GEOID WHERE T1.MARITAL_STATUS = 'Widowed' AND T2.RESPONSE = 'true'
software_company,What is the response and number of inhabitants of the oldest female customer?,number of inhabitants refers to INHABITANTS_K; oldest female customer refers to SEX = 'Female' where MAX(age);,"SELECT T2.RESPONSE, T3.INHABITANTS_K FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID INNER JOIN Demog AS T3 ON T1.GEOID = T3.GEOID WHERE T1.SEX = 'Female' ORDER BY T1.age DESC LIMIT 1"
software_company,"Among the female customers with an level of education of 3 and below, list their income.",female customers with level of education of 3 and below refer to SEX = 'Female' where EDUCATIONNUM ≤ 3; income refers to INCOME_K;,SELECT INCOME_K FROM Demog WHERE GEOID IN ( SELECT GEOID FROM Customers WHERE EDUCATIONNUM < 3 AND SEX = 'Female' )
software_company,List the level of education and income of customers ages from 30 to 55 with a true response.,ages from 30 to 55 refer to age BETWEEN 30 AND 55; RESPONSE = 'true'; income refers to INCOME_K; education level refers to EDUCATIONNUM;,"SELECT T1.EDUCATIONNUM, T3.INCOME_K FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID INNER JOIN Demog AS T3 ON T1.GEOID = T3.GEOID WHERE T1.age >= 30 AND T1.age <= 55 AND T2.RESPONSE = 'true'"
software_company,"In male customers ages from 30 to 50, how many of them has an income ranges from 2000 to 2300?",male customers ages from 30 to 50 refer to SEX = 'Male' where age BETWEEN 30 AND 50; income ranges from 2000 to 2300 refers to INCOME_K BETWEEN 2000 AND 3000;,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.SEX = 'Male' AND T1.age >= 30 AND T1.age <= 50 AND T2.INCOME_K >= 2000 AND T2.INCOME_K <= 2300
software_company,List the educationnum and response of customers within the age of 20 to 30 that has the highest number of inhabitants among the group.,age of 20 to 30 refers to age BETWEEN 20 AND 30; the highest number of inhabitants refers to MAX(INHABITANTS_K);,"SELECT T1.EDUCATIONNUM, T2.RESPONSE FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID INNER JOIN Demog AS T3 ON T1.GEOID = T3.GEOID WHERE T1.age >= 20 AND T1.age <= 30 ORDER BY T3.INHABITANTS_K DESC LIMIT 1"
software_company,What is the income of female customers ages from 30 to 55 years old and has an occupation of machine-op-inspct?,female customers ages from 30 to 55 years old refer to SEX = 'Female' where age BETWEEN 30 AND 55; income refers to INCOME_K;,SELECT T2.INCOME_K FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.SEX = 'Female' AND T1.age >= 30 AND T1.age <= 55 AND T1.OCCUPATION = 'Machine-op-inspct'
software_company,List the marital status and response of female customers with an level of education of 8 and above.,female customers with an level of education of 8 and above refer to SEX = 'Female' where EDUCATIONNUM ≥ 8;,"SELECT DISTINCT T1.MARITAL_STATUS, T2.RESPONSE FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T1.EDUCATIONNUM > 8 AND T1.SEX = 'Female'"
software_company,What is the age of female customers within the number of inhabitants below 30?,female customers within the number of inhabitants below 30 refer to SEX = 'Female' where INHABITANTS_K < 30;,SELECT age FROM Customers WHERE GEOID IN ( SELECT GEOID FROM Demog WHERE INHABITANTS_K < 30 ) AND SEX = 'Female'
software_company,"Among the divorced male customers, give the income and response of those who has an level of education of 6 and above.",divorced male customers refer to SEX = 'Male' where MARITAL_STATUS = 'Divorced';,"SELECT DISTINCT T3.INCOME_K, T2.RESPONSE FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID INNER JOIN Demog AS T3 ON T1.GEOID = T3.GEOID WHERE T1.EDUCATIONNUM > 6 AND T1.SEX = 'Male' AND T1.MARITAL_STATUS = 'Divorced'"
software_company,What is the occupation and response of female customers within the number of inhabitants range of 20 to 25?,female customers within the number of inhabitants range of 20 to 25 refer to SEX = 'Female' where INHABITANTS_K BETWEEN 20 AND 25;,"SELECT DISTINCT T1.OCCUPATION, T2.RESPONSE FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID INNER JOIN Demog AS T3 ON T1.GEOID = T3.GEOID WHERE T1.SEX = 'Female' AND T3.INHABITANTS_K >= 20 AND T3.INHABITANTS_K <= 25"
software_company,"In male customers with an occupation handlers or cleaners, what is the percentage of customers with a true response?","DIVIDE(COUNT(OCCUPATION = 'Handlers-cleaners', SEX = 'Male' and RESPONSE = 'true'), COUNT(OCCUPATION = 'Handlers-cleaners' and SEX = 'Male')) as percentage;",SELECT CAST(SUM(CASE WHEN T2.RESPONSE = 'true' THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(T2.REFID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T1.OCCUPATION = 'Handlers-cleaners' AND T1.SEX = 'Male'
software_company,List the income and number of inhabitants of customers with a reference ID greater than the 50% of average of number of false response?,"reference ID greater than the 50% of average of number of false response refers to REFID > DIVIDE(MULTIPLY(0.5, COUNT(RESPONSE = 'false')), COUNT(RESPONSE)); income refers to INCOME_K; number of inhabitants refer to INHABITANTS_K;","SELECT T2.INCOME_K, T2.INHABITANTS_K FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID INNER JOIN Mailings1_2 AS T3 ON T1.ID = T3.REFID WHERE T3.REFID > ( SELECT 0.5 * COUNT(CASE WHEN RESPONSE = 'false' THEN 1 ELSE NULL END) / COUNT(RESPONSE) FROM Mailings1_2 )"
software_company,What is the ratio of male and female among the age of teenager when the education is above 10?,"ratio = DIVIDE(COUNT(SEX = 'Male' where age BETWEEN 13 AND 19 and EDUCATIONNUM > 10),COUNT(SEX = 'Female' where age BETWEEN 13 AND 19 and EDUCATIONNUM > 10));",SELECT CAST(SUM(CASE WHEN SEX = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN SEX = 'Female' THEN 1 ELSE 0 END) FROM Customers WHERE age BETWEEN 13 AND 19 AND EDUCATIONNUM > 10
software_company,What is the geographic ID and total income per year when the average income is above 3300 dollar.,"total income per year refers to MULTIPLY(12, INHABITANTS_K, INCOME_K) where INCOME_K > 3300; geographic ID refers to GEOID;","SELECT GEOID, INHABITANTS_K * INCOME_K * 12 FROM Demog WHERE INCOME_K > 3300"
software_company,Point out the greater one between the number of actual responding and not responding to mailing.,COUNT(REFID where RESPONSE = 'true')>or<COUNT(REFID where RESPONSE = 'false');,SELECT RESPONSE FROM Mailings1_2 GROUP BY RESPONSE ORDER BY COUNT(RESPONSE) DESC LIMIT 1
software_company,Find out the yearly income of geographic ID when the customer is female and occupation as sales.,"yearly income of geographic ID refers to GEOID where MULTIPLY(INHABITANTS_K, INCOME_K, 12); SEX = 'Female';",SELECT T2.INHABITANTS_K * T2.INCOME_K * 12 FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.SEX = 'Female' AND T1.OCCUPATION = 'Sales'
software_company,"Among the geographic ID which has 33.658K of inhabitants, describe the education, occupation and age of female widow.",geographic ID which has 33.658K of inhabitants refers to GEOID where INHABITANTS_K = 33.658; education refers to EDUCATIONNUM; female widow refers to SEX = 'Female' where MARITAL_STATUS = 'Widowed';,"SELECT T1.EDUCATIONNUM, T1.OCCUPATION, T1.age FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T2.INHABITANTS_K = 33.658 AND T1.SEX = 'Female' AND T1.MARITAL_STATUS = 'Widowed'"
software_company,Find the response status to customer whose geographic ID of 134.,GEOID = 134;,SELECT T2.RESPONSE FROM Customers AS T1 INNER JOIN mailings3 AS T2 ON T1.ID = T2.REFID WHERE T1.GEOID = 134
software_company,"Describe the average income per month and yearly income of the geographic ID in which customer of ID ""209556"" and ""290135"".","the average income per month refers to INCOME_K; yearly income of geographic ID refers to GEOID where MULTIPLY(INHABITANTS_K, INCOME_K, 12);","SELECT T2.INCOME_K, T2.INHABITANTS_K * T2.INCOME_K * 12 FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.ID = 209556 OR T1.ID = 290135"
software_company,"Among the reference ID of under 10 who got response by marketing department, compare their education status.",reference ID of under 10 refers to REFID < 10; got response refers to RESPONSE = 'true'; education status refers to EDUCATIONNUM;,SELECT T1.EDUCATIONNUM FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T2.REFID < 10 AND T2.RESPONSE = 'true'
chicago_crime,How many community areas are there in Central Chicago?,Central Chicago refers to side = 'Central',SELECT COUNT(*) FROM Community_Area WHERE side = 'Central'
chicago_crime,Which district is the community area Lincoln Square grouped into?,district refers to side; community area Lincoln Square refers to community_area_name = 'Lincoln Square',SELECT side FROM Community_Area WHERE community_area_name = 'Lincoln Square'
chicago_crime,Which district in Chicago has the most community areas?,district refers to side; the most community areas refers to max(count(side)),SELECT side FROM Community_Area GROUP BY side ORDER BY COUNT(side) DESC LIMIT 1
chicago_crime,Which community area has the least population?,community area refers to community_area_name; the least population refers to min(population),SELECT community_area_name FROM Community_Area ORDER BY population ASC LIMIT 1
chicago_crime,Who is the person responsible for the crime cases in Central Chicago?,the person responsible for the crime cases refers to commander; Central Chicago refers to district_name = 'Central',SELECT commander FROM District WHERE district_name = 'Central'
chicago_crime,What is the email address to contact the administrator of Central Chicago?,email address refers to email; Central Chicago refers to district_name = 'Central',SELECT email FROM District WHERE district_name = 'Central'
chicago_crime,To which community area does the neighborhood Albany Park belong?,community area refers to community_area_name; the neighborhood Albany Park refers to neighborhood_name = 'Albany Park',SELECT T2.community_area_name FROM Neighborhood AS T1 INNER JOIN Community_Area AS T2 ON T1.community_area_no = T2.community_area_no WHERE T1.neighborhood_name = 'Albany Park'
chicago_crime,How many neighborhoods are there in the community area of Lincoln Square?,the community area of Lincoln Square refers to community_area_name = 'Lincoln Square',SELECT COUNT(T3.community_area_no) FROM ( SELECT T1.community_area_no FROM Community_Area AS T1 INNER JOIN Neighborhood AS T2 ON T1.community_area_no = T2.community_area_no WHERE community_area_name = 'Lincoln Square' GROUP BY T1.community_area_no ) T3
chicago_crime,Please list the names of all the neighborhoods in the community area with the most population.,name of neighborhood refers to neighborhood_name; the most population refers to max(population),SELECT T1.neighborhood_name FROM Neighborhood AS T1 INNER JOIN Community_Area AS T2 ON T2.community_area_no = T2.community_area_no ORDER BY T2.population DESC LIMIT 1
chicago_crime,Please list the names of all the neighborhoods in Central Chicago.,name of neighborhood refers to neighborhood_name; Central Chicago refers to side = 'Central',SELECT T2.neighborhood_name FROM Community_Area AS T1 INNER JOIN Neighborhood AS T2 ON T1.community_area_no = T2.community_area_no WHERE T1.side = 'Central'
chicago_crime,Please list the precise location coordinates of all the crimes in Central Chicago.,"location coordinates refers to latitude, longitude; Central Chicago refers to district_name = 'Central'","SELECT T2.latitude, T2.longitude FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.district_name = 'Central'"
chicago_crime,How many crimes had happened in Central Chicago?,Central Chicago refers to district_name = 'Central',SELECT COUNT(*) FROM Crime AS T1 INNER JOIN District AS T2 ON T1.district_no = T2.district_no WHERE T2.district_name = 'Central'
chicago_crime,"Among all the crimes that had happened in Central Chicago, how many of them were cases of domestic violence?",Central Chicago refers to district_name = 'Central'; case of domestic violence refers to domestic = 'TRUE',SELECT COUNT(*) FROM Crime AS T1 INNER JOIN District AS T2 ON T1.district_no = T2.district_no WHERE T2.district_name = 'Central' AND T1.domestic = 'TRUE'
chicago_crime,Please list the case numbers of all the crimes with no arrest made in Central Chicago.,no arrest made refers to arrest = 'FALSE'; Central Chicago refers to district_name = 'Central',SELECT COUNT(*) FROM Crime AS T1 INNER JOIN District AS T2 ON T1.district_no = T2.district_no WHERE T2.district_name = 'Central' AND T1.arrest = 'FALSE'
chicago_crime,How many crimes had happened in the community area with the most population?,the most population refers to max(population),SELECT COUNT(T2.report_no) FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no GROUP BY T1.community_area_name ORDER BY T1.population DESC LIMIT 1
chicago_crime,"Among the crimes in Woodlawn, how many of them happened in January, 2018?",Woodlawn refers to community_area_name = 'Woodlawn'; in January 2018 refers to date like '%1/2018%',SELECT SUM(CASE WHEN T1.community_area_name = 'Woodlawn' THEN 1 ELSE 0 END) FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no WHERE T2.date LIKE '%1/2018%'
chicago_crime,"More crimes happened in which community area in January, 2018, Woodlawn or Lincoln Square?","in January 2018 refers to date like '%1/2018%'; Woodlawn or Lincoln Square refers to community_area_name in ('Woodlawn', 'Lincoln Square'); number of crime refers to COUNT(report_no); the higher the report_no, the more crimes happened in the community;","SELECT T1.community_area_name FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no WHERE T1.community_area_name IN ('Woodlawn', 'Lincoln Square') AND T2.date LIKE '%1/2018%' GROUP BY T1.community_area_name ORDER BY COUNT(T1.community_area_name) DESC LIMIT 1"
chicago_crime,"What is the fax number for the district with the most number of crimes in January, 2018?",fax number refers to fax; the most number of crimes refers to max(count(case_number)); in January 2018 refers to date like '%1/2018%',SELECT T1.fax FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T2.date LIKE '%1/2018%' GROUP BY T2.district_no ORDER BY COUNT(case_number) DESC LIMIT 1
chicago_crime,What is the average number of crimes in a neighborhood in Central Chicago?,"Central Chicago refers to side = 'Central'; average number = divide(count(report_no), count(community_area_no))",SELECT CAST(COUNT(T1.report_no) AS REAL) / COUNT(T2.community_area_no) FROM Crime AS T1 INNER JOIN Community_Area AS T2 ON T1.community_area_no = T2.community_area_no WHERE T2.side = 'Central'
chicago_crime,"Among the crimes in all the districts in Chicago, what is the percentage of them happening in the Central district?","the Central district refers to district_name = 'Central'; percentage = divide(count(case_number where district_name = 'Central'), count(case_number)) * 100%",SELECT CAST(SUM(CASE WHEN T2.district_name = 'Central' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.case_number) FROM Crime AS T1 INNER JOIN District AS T2 ON T1.district_no = T2.district_no
chicago_crime,How many community areas are in the Far North side?,the Far North side refers to side = 'Far North',SELECT COUNT(*) FROM Community_Area WHERE side = 'Far North '
chicago_crime,Who is the commander of Morgan Park district?,Morgan Park district refers to district_name = 'Morgan Park',SELECT commander FROM District WHERE district_name = 'Morgan Park'
chicago_crime,Where did case No. JB100065 happen? Give the name of the district.,case No. JB100065 refers to case_number = 'JB100065'; name of the district refers to district_name,SELECT T1.district_name FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T2.case_number = 'JB100065'
chicago_crime,"Where is the coordinate (41.66236555, -87.63470194) located? Give the name of the district.","coordinate (41.66236555, -87.63470194) refers to latitude = '41.66236555' AND longitude = '-87.63470194'; name of the district refers to district_name",SELECT T2.district_name FROM Crime AS T1 INNER JOIN District AS T2 ON T1.district_no = T2.district_no WHERE T1.longitude = '-87.63470194' AND T1.latitude = '41.66236555'
chicago_crime,Give the name of the person who was responsible for case No.JB524952.,name of the person refers to commander; case No.JB524952 refers to case_number = 'JB524952',SELECT T1.commander FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T2.case_number = 'JB524952'
chicago_crime,How many simple assaults happened on 2018/9/8?,simple assault refers to primary_description = 'ASSAULT'AND secondary_description = 'SIMPLE'; on 2018/9/8 refers to date like '%9/8/2018%',SELECT SUM(CASE WHEN T2.secondary_description = 'SIMPLE' THEN 1 ELSE 0 END) FROM Crime AS T1 INNER JOIN IUCR AS T2 ON T1.iucr_no = T2.iucr_no WHERE T1.date LIKE '%9/8/2018%' AND T2.primary_description = 'ASSAULT'
chicago_crime,Which district had the most number of first degree murders? Give the district number.,the most number refers to max(count(case_number)); first degree murder refers to secondary_description = 'FIRST DEGREE MURDER'; district number refers to district_no,SELECT T2.district_no FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T1.iucr_no = T2.iucr_no WHERE T1.secondary_description = 'FIRST DEGREE MURDER' GROUP BY T2.district_no ORDER BY COUNT(*) DESC LIMIT 1
chicago_crime,How severe was case JB296775? Give the index code for severity.,index code refers to iucr_no; case JB296775 refers to case_number = 'JB296775',SELECT T2.iucr_no FROM Crime AS T1 INNER JOIN IUCR AS T2 ON T1.iucr_no = T2.iucr_no WHERE T1.case_number = 'JB296775'
chicago_crime,Give the name of the community area which had the most pocket-picking thefts.,name of the community area refers to community_area_name; the most refers to max(case_number); pocket-picking theft refers to primary_description = 'THEFT' AND secondary_description = 'POCKET-PICKING',SELECT T3.community_area_name FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T1.iucr_no = T2.iucr_no INNER JOIN Community_Area AS T3 ON T2.community_area_no = T3.community_area_no WHERE T1.primary_description = 'THEFT' AND T1.secondary_description = 'POCKET-PICKING' GROUP BY T2.community_area_no ORDER BY T2.case_number DESC LIMIT 1
chicago_crime,Who was the alderman of the legislative district where case No. JB103470 took place? Give the full name.,"case No. JB103470 refers to case_number = 'JB103470'; full name refers to alderman_first_name, alderman_last_name","SELECT T1.alderman_first_name, T1.alderman_last_name FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE T2.case_number = 'JB103470'"
chicago_crime,Give the neighborhood name of West Englewood community.,West Englewood community refers to community_area_name = 'West Englewood',SELECT T1.neighborhood_name FROM Neighborhood AS T1 INNER JOIN Community_Area AS T2 ON T1.community_area_no = T2.community_area_no WHERE T2.community_area_name = 'West Englewood'
chicago_crime,How many different neighborhoods are there in Roseland community?,Roseland community refers to community_area_name = 'Roseland',SELECT SUM(CASE WHEN T1.community_area_name = 'Roseland' THEN 1 ELSE 0 END) FROM Community_Area AS T1 INNER JOIN Neighborhood AS T2 ON T1.community_area_no = T2.community_area_no
chicago_crime,Give the FBI code description of case No.JB134191.,case No.JB134191 refers to case_number = 'JB134191',SELECT description FROM Crime AS T1 INNER JOIN FBI_Code AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE T1.case_number = 'JB134191'
chicago_crime,Tell the number of cases with arrests in North Lawndale community.,number of cases refers to count(case_number); arrest refers to arrest = 'TRUE'; North Lawndale community refers to community_area_name = 'North Lawndale',SELECT SUM(CASE WHEN T1.community_area_name = 'North Lawndale' THEN 1 ELSE 0 END) FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no WHERE T2.arrest = 'TRUE'
chicago_crime,What is the percentage of under $500 thefts among all cases that happened in West Englewood?,"under $500 refers to secondary_description = '$500 AND UNDER'; theft refers to primary_description = 'THEFT'; West Englewood refers to community_area_name = 'West Englewood'; percentage = divide(count(case_number where secondary_description = '$500 AND UNDER'), count(case_number)) where primary_description = 'THEFT' and community_area_name = 'West Englewood' * 100%",SELECT CAST(SUM(CASE WHEN T2.secondary_description = '$500 AND UNDER' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.case_number) FROM Crime AS T1 INNER JOIN IUCR AS T2 ON T1.iucr_no = T2.iucr_no INNER JOIN Community_Area AS T3 ON T1.community_area_no = T3.community_area_no WHERE T2.primary_description = 'THEFT' AND T3.community_area_name = 'West Englewood'
chicago_crime,What is the percentage of larceny cases among all cases that happened in Edgewater community?,"larceny case refers to title = 'Larceny'; Edgewater community refers to community_area_name = 'Edgewater'; percentage = divide(count(case_number where title = 'Larceny'), count(case_number)) where community_area_name = 'Edgewater' * 100%",SELECT CAST(SUM(CASE WHEN T3.title = 'Larceny' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.case_number) FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no INNER JOIN FBI_Code AS T3 ON T2.fbi_code_no = T3.fbi_code_no WHERE T1.community_area_name = 'Edgewater'
chicago_crime,How many crimes were committed at 018XX S KOMENSKY AVEin May 2018?, in May 2018 refers to date LIKE '5/%/2018%',SELECT SUM(CASE WHEN date LIKE '5/%/2018%' THEN 1 ELSE 0 END) FROM Crime WHERE block = '018XX S KOMENSKY AVE'
chicago_crime,What is the name of the community with the highest population?,name of the community refers to community_area_name; the highest population refers to max(population),SELECT community_area_name FROM Community_Area ORDER BY population DESC LIMIT 1
chicago_crime,How many incidents of domestic violence occurred in an abandoned building in 2018?,domestic violence refers to domestic = 'TRUE'; in an abandoned building refers to location_description = 'ABANDONED BUILDING'; in 2018 refers to date LIKE '%2018%',SELECT SUM(CASE WHEN location_description = 'ABANDONED BUILDING' THEN 1 ELSE 0 END) FROM Crime WHERE date LIKE '%2018%' AND domestic = 'TRUE'
chicago_crime,What is the population of the district with the least population?,the least population refers = min(sum(population)),SELECT SUM(population) FROM Community_Area GROUP BY side ORDER BY SUM(population) LIMIT 1
chicago_crime,How many arrests were made in 2018 in an animal hospital under FBI code 08B?,arrest refers to arrest = 'TRUE'; in 2018 refers to date LIKE '%2018%'; in an animal hospital refers to location_description = 'ANIMAL HOSPITAL'; FBI code 08B refers to fbi_code_no = '08B',SELECT SUM(CASE WHEN arrest = 'TRUE' THEN 1 ELSE 0 END) FROM Crime WHERE date LIKE '%2018%' AND location_description = 'ANIMAL HOSPITAL' AND fbi_code_no = '08B'
chicago_crime,Give the detailed description of all the crimes against society.,crime against society refers to crime_against = 'Society',SELECT description FROM FBI_Code WHERE crime_against = 'Society'
chicago_crime,Who is the commanding officer in the district with the highest number of disorderly conduct?,commanding officer refers to commander; the highest number refers to max(count(district_no)); disorderly conduct refers to title = 'Disorderly Conduct',SELECT T1.commander FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no INNER JOIN FBI_Code AS T3 ON T2.fbi_code_no = T3.fbi_code_no WHERE T3.title = 'Disorderly Conduct' AND T2.fbi_code_no = 24 GROUP BY T2.fbi_code_no ORDER BY COUNT(T1.district_no) DESC LIMIT 1
chicago_crime,Which crime was committed the most by criminals?,crime refers to title; committed the most refers to max(fbi_code_no),SELECT T2.title FROM Crime AS T1 INNER JOIN FBI_Code AS T2 ON T1.fbi_code_no = T2.fbi_code_no ORDER BY T2.fbi_code_no DESC LIMIT 1
chicago_crime,"In Albany Park, how many arrests were made in an apartment due to criminal sexual abuse?",Albany Park refers to district_name = 'Albany Park'; in an apartment refers to location_description = 'APARTMENT'; criminal sexual abuse refers to title = 'Criminal Sexual Abuse',SELECT SUM(CASE WHEN T3.title = 'Criminal Sexual Abuse' THEN 1 ELSE 0 END) FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no INNER JOIN FBI_Code AS T3 ON T2.fbi_code_no = T3.fbi_code_no WHERE T1.district_name = 'Albany Park' AND T2.arrest = 'TRUE' AND T2.location_description = 'APARTMENT'
chicago_crime,What is the precise location or coordinate where most of the robberies in Rogers Park occurred?,"precise location or coordinate refers to latitude, longitude; most refers to fbi_code_no = 3; robbery refers to title = 'Robbery'; Rogers Park refers to community_area_name = 'Rogers Park'","SELECT T2.latitude, T2.longitude FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no INNER JOIN FBI_Code AS T3 ON T2.fbi_code_no = T3.fbi_code_no WHERE T1.community_area_name = 'Rogers Park' AND T3.title = 'Robbery' AND T3.fbi_code_no = 3"
chicago_crime,How many solicit on public way prostitution crimes were arrested in West Garfield Park?,solicit on public way prostitution crime refers to secondary_description = 'SOLICIT ON PUBLIC WAY' AND primary_description = 'PROSTITUTION'; arrested refers to arrest = 'TRUE'; West Garfield Park refers to community_area_name = 'West Garfield Park',SELECT SUM(CASE WHEN T2.arrest = 'TRUE' THEN 1 ELSE 0 END) FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no INNER JOIN IUCR AS T3 ON T2.iucr_no = T3.iucr_no WHERE T1.community_area_name = 'West Garfield Park' AND T3.secondary_description = 'SOLICIT ON PUBLIC WAY' AND T3.primary_description = 'PROSTITUTION'
chicago_crime,"In the most populated ward, how many incidents of domestic violence were reported in a bar or tavern?",the most populated refers to max(population); domestic violence refers to domestic = 'TRUE'; in a bar or tavern refers to location_description = 'BAR OR TAVERN',SELECT COUNT(T2.report_no) FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE T2.domestic = 'TRUE' AND T2.location_description = 'BAR OR TAVERN' ORDER BY T1.Population DESC LIMIT 1
chicago_crime,How many neighborhoods are there in Near North Side?,Near North Side refers to community_area_name = 'Near North Side',SELECT SUM(CASE WHEN T1.community_area_name = 'Near North Side' THEN 1 ELSE 0 END) FROM Community_Area AS T1 INNER JOIN Neighborhood AS T2 ON T1.community_area_no = T2.community_area_no
chicago_crime,"Out of all the incidents of domestic violence reported at the ward represented by alderman Walter Burnett Jr., how many were arrested?",domestic violence refers to domestic = 'TRUE'; arrested refers to arrest = 'TRUE',SELECT SUM(CASE WHEN T2.arrest = 'TRUE' THEN 1 ELSE 0 END) FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE T1.alderman_first_name = 'Walter' AND T1.alderman_last_name = 'Burnett' AND alderman_name_suffix = 'Jr.' AND T2.domestic = 'TRUE'
chicago_crime,What is the short description of the crime committed the most by criminals in the least populated community?,short description refers to title; committed the most refers to max(fbi_code_no); the least populated community refers to min(population),"SELECT T3.title FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no INNER JOIN FBI_Code AS T3 ON T2.fbi_code_no = T3.fbi_code_no GROUP BY T3.title ORDER BY T1.population ASC, T3.fbi_code_no DESC LIMIT 1"
chicago_crime,What is the legislative district's office address where 010XX W LAKE ST is located?,the legislative district's office address refers to ward_office_address; 010XX W LAKE ST refers to block = '010XX W LAKE ST',SELECT T1.ward_office_address FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE T2.block = '010XX W LAKE ST' GROUP BY T1.ward_office_address
chicago_crime,What is the name of the community that has the highest number of crimes related to prostitution?,name of the community refers to community_area_name; the highest number of crimes refers to max(case_number); prostitution refers to primary_description = 'PROSTITUTION',SELECT T3.community_area_name FROM Crime AS T1 INNER JOIN IUCR AS T2 ON T1.iucr_no = T2.iucr_no INNER JOIN Community_Area AS T3 ON T1.community_area_no = T3.community_area_no WHERE T2.primary_description = 'PROSTITUTION' GROUP BY T1.iucr_no ORDER BY T1.case_number DESC LIMIT 1
chicago_crime,How many vandalisms were arrested in the ward represented by Edward Burke?,vandalism refers to title = 'Vandalism'; arrested refers to arrest = 'TRUE',SELECT SUM(CASE WHEN T1.alderman_last_name = 'Burke' THEN 1 ELSE 0 END) FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no INNER JOIN FBI_Code AS T3 ON T2.fbi_code_no = T3.fbi_code_no WHERE T3.title = 'Vandalism' AND T2.arrest = 'TRUE' AND T1.alderman_first_name = 'Edward'
chicago_crime,How many domestic violence cases were reported in May 2018?,domestic violence refers to domestic = 'TRUE'; in May 2018 refers to date LIKE '5/%/2018%',SELECT COUNT(*) FROM Crime WHERE date LIKE '5/%/2018%' AND domestic = 'TRUE'
chicago_crime,List the IUCR numbers and index status of homicide incidents.,index status refers to index_code; homicide incident refers to primary_description = 'HOMICIDE',SELECT index_code FROM IUCR WHERE primary_description = 'HOMICIDE'
chicago_crime,Provide the responsible person and his/her email address of Chicago Lawn.,responsible person refers to commander; email address refers to email; Chicago Lawn refers to district_name = 'Chicago Lawn',"SELECT commander, email FROM District WHERE district_name = 'Chicago Lawn'"
chicago_crime,What is the alderman's full name of the most crowded ward?,"alderman's full name refers to alderman_name_suffix, alderman_first_name, alderman_last_name; the most crowded refers to max(population)","SELECT alderman_name_suffix, alderman_first_name, alderman_last_name FROM Ward ORDER BY population DESC LIMIT 1"
chicago_crime,List the community area names in the Northwest.,the Northwest refers to side = 'Northwest',SELECT community_area_name FROM Community_Area WHERE side = 'Northwest'
chicago_crime,List down the titles and descriptions of the crimes cases against persons.,crime case against persons refers to crime_against = 'Persons',"SELECT title, description FROM FBI_Code WHERE crime_against = 'Persons'"
chicago_crime,Describe the specific description and case locations under IUCR 142.,"specific description refers to secondary_description; location refers to latitude, longitude; IUCR 142 refers to iucr_no = 142","SELECT T1.secondary_description, T2.latitude, T2.longitude FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T1.iucr_no = T2.iucr_no WHERE T2.iucr_no = 142"
chicago_crime,How many crimes were handled by Brendan Reilly on 7th October 2018?,7th October 2018 refers to date like '10/7/2018%',SELECT SUM(CASE WHEN T2.alderman_last_name = 'Reilly' THEN 1 ELSE 0 END) FROM Crime AS T1 INNER JOIN Ward AS T2 ON T1.ward_no = T2.ward_no WHERE T2.alderman_name_suffix IS NULL AND T2.alderman_first_name = 'Brendan' AND date LIKE '10/7/2018%'
chicago_crime,How many cases have been arrested among the crimes that happened in the restaurant of Englewood?,arrested refers to arrest = 'TRUE'; restaurant refers to location_description = 'RESTAURANT'; Englewood refers to district_name = 'Englewood',SELECT SUM(CASE WHEN T1.arrest = 'TRUE' THEN 1 ELSE 0 END) FROM Crime AS T1 INNER JOIN District AS T2 ON T1.district_no = T2.district_no WHERE T2.district_name = 'Englewood' AND T1.location_description = 'RESTAURANT'
chicago_crime,"Provide case numbers, aldermen's full names, and district names of the crimes that happened in 0000X N FRANCISCO AVE.","aldermen's full name refers to alderman_name_suffix, alderman_first_name, alderman_last_name; 0000X N FRANCISCO AVE refers to block = '0000X N FRANCISCO AVE'","SELECT T2.case_number, T3.alderman_first_name, T3.alderman_last_name, T1.district_name FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no INNER JOIN Ward AS T3 ON T2.ward_no = T3.ward_no WHERE T2.block = '0000X N FRANCISCO AVE' GROUP BY T2.case_number, T3.alderman_first_name, T3.alderman_last_name, T1.district_name"
chicago_crime,How many crimes were Misc Non-Index Offense?,Misc Non-Index Offense refers to title = 'Misc Non-Index Offense',SELECT SUM(CASE WHEN T1.title = 'Misc Non-Index Offense' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T2.fbi_code_no = T1.fbi_code_no
chicago_crime,List down the neighborhood areas of Douglas.,neighborhood area refers to neighborhood_name; Douglas refers to community_area_name = 'Douglas',SELECT T2.neighborhood_name FROM Community_Area AS T1 INNER JOIN Neighborhood AS T2 ON T2.community_area_no = T1.community_area_no WHERE T1.community_area_name = 'Douglas'
chicago_crime,Calculate the average crime rate per month in the highest populous area.,"the highest populous refers to max(population); average crime rate per month = divide(count(report_no where population = max(population)), 12)",SELECT CAST(COUNT(T2.report_no) AS REAL) / 12 FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no GROUP BY T1.community_area_no HAVING COUNT(T1.population) ORDER BY COUNT(T1.population) LIMIT 1
chicago_crime,"Among the crimes in the Central, calculate the percentage of larceny incidents.","Central refers to side = 'Central'; larceny refers to title = 'Larceny'; percentage = divide(count(report_no where title = 'Larceny'), count(report_no)) where side = 'Central' * 100%",SELECT CAST(COUNT(CASE WHEN T3.title = 'Larceny' THEN T2.report_no END) AS REAL) * 100 / COUNT(T2.report_no) FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no INNER JOIN FBI_Code AS T3 ON T3.fbi_code_no = T2.fbi_code_no WHERE T1.side = 'Central'
chicago_crime,List the location descriptions and aldermen's full names of the arson by explosive.,"aldermen's full name refers to alderman_name_suffix, alderman_first_name, alderman_last_name; arson by explosive refers to primary_description = 'ARSON' AND secondary_description = 'BY EXPLOSIVE'","SELECT T2.location_description, T1.alderman_first_name, T1.alderman_last_name, T1.alderman_name_suffix FROM Ward AS T1 INNER JOIN Crime AS T2 ON T2.ward_no = T1.ward_no INNER JOIN IUCR AS T3 ON T3.iucr_no = T2.iucr_no WHERE T3.primary_description = 'ARSON' AND T3.secondary_description = 'BY EXPLOSIVE'"
chicago_crime,Provide the occurrence date and location of the deceptive practice due to the unlawful use of recorded sound.,"location refers to latitude, longitude; deceptive practice refers to primary_description = 'DECEPTIVE PRACTICE'; unlawful use of recorded sound refers to secondary_description = 'UNLAWFUL USE OF RECORDED SOUND'","SELECT T2.date, T2.latitude, T2.longitude FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no WHERE T1.primary_description = 'DECEPTIVE PRACTICE' AND T1.secondary_description = 'UNLAWFUL USE OF RECORDED SOUND'"
chicago_crime,"Among the criminal sexual assaults in the district of Adnardo Gutierrez, how many cases happened in the residence?",criminal sexual assault refers to title = 'Criminal Sexual Assault'; Adnardo Gutierrez refers to commander = 'Adnardo Gutierrez'; in the residence refers to location_description = 'RESIDENCE',SELECT COUNT(T2.report_no) FROM District AS T1 INNER JOIN Crime AS T2 ON T2.district_no = T1.district_no INNER JOIN FBI_Code AS T3 ON T3.fbi_code_no = T2.fbi_code_no WHERE T3.title = 'Criminal Sexual Assault' AND T1.commander = 'Adnardo Gutierrez' AND T2.location_description = 'RESIDENCE'
chicago_crime,How many percent of domestic violence cases were arrested in West Pullman?,"domestic violence refers to domestic = 'TRUE'; arrested refers to arrest = 'TRUE'; West Pullman refers to community_area_name = 'West Pullman'; percent = divide(count(report_no where arrest = 'TRUE'), count(report_no)) where domestic = 'TRUE' and community_area_name = 'West Pullman' * 100%",SELECT CAST(COUNT(CASE WHEN T2.arrest = 'TRUE' THEN T2.report_no END) AS REAL) * 100 / COUNT(T2.report_no) FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no WHERE T1.community_area_name = 'West Pullman' AND T2.domestic = 'TRUE'
chicago_crime,"Calculate the percentage of the domestic violence cases handled by Christopher Taliaferro. Among them, list report numbers of cases that happened in the bank.","domestic violence refers to domestic = 'TRUE'; report number refers to report_no; in the bank refers to location_description = 'BANK'; percentage = divide(count(report_no where domestic = 'TRUE'), count(report_no)) * 100%","SELECT CAST(COUNT(CASE WHEN T1.domestic = 'TRUE' THEN T1.report_no END) AS REAL) * 100 / COUNT(T1.report_no), COUNT(CASE WHEN T1.domestic = 'TRUE' AND T1.location_description = 'BANK' THEN T1.report_no END) AS ""number"" FROM Crime AS T1 INNER JOIN Ward AS T2 ON T2.ward_no = T1.ward_no WHERE T2.alderman_first_name = 'Christopher' AND T2.alderman_last_name = 'Taliaferro'"
chicago_crime,"How many aldermen have ""James"" as their first name?",,SELECT COUNT(*) FROM Ward WHERE alderman_first_name = 'James'
chicago_crime,"How many crimes are commited on January 1, 2018?",on January 1 2018 refers to date LIKE '1/1/2018%',SELECT COUNT(*) FROM Crime WHERE date LIKE '1/1/2018%'
chicago_crime,Calculate the average population of community areas in the West side.,the West side refers to side = 'West'; average population = avg(population) where side = 'West',SELECT AVG(population) FROM Community_Area WHERE side = 'West '
chicago_crime,"Among the cases reported in the ward with Edward Burke as the alderman and happened in the community area with the highest population, provide the report number of the crime with the highest beat.",the highest population refers to max(population); report number refers to report_no; the highest beat refers to max(beat),"SELECT T2.report_no FROM Ward AS T1 INNER JOIN Crime AS T2 ON T2.ward_no = T1.ward_no INNER JOIN Community_Area AS T3 ON T3.community_area_no = T2.community_area_no WHERE T1.alderman_first_name = 'Edward' AND T1.alderman_last_name = 'Burke' ORDER BY T2.beat DESC, T3.population DESC LIMIT 1"
chicago_crime,"How many of the crimes that happened in the street have FBI title ""Homicide 1st & 2nd Degree""?",in the street refers to location_description = 'STREET',SELECT SUM(CASE WHEN T2.location_description = 'STREET' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T2.fbi_code_no = T1.fbi_code_no WHERE T1.title = 'Homicide 1st & 2nd Degree'
chicago_crime,Who is the alderman in the ward associated with the crime with report number 23769?,"alderman refers to alderman_suffix, alderman_first_name, alderman_last_name; report number 23769 refers to report_no = 23769","SELECT T2.alderman_first_name, T2.alderman_last_name FROM Crime AS T1 INNER JOIN Ward AS T2 ON T2.ward_no = T1.ward_no WHERE T1.report_no = 23769"
chicago_crime,List the case numbers of domestic violence crimes reported in Lincoln Square.,domestic violence refers to domestic = 'TRUE'; Lincoln Square refers to community_area_name = 'Lincoln Square',SELECT T2.case_number FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no WHERE T1.community_area_name = 'Lincoln Square' AND T2.domestic = 'TRUE'
chicago_crime,"Among the crimes reported to the ward located at 1958 N. Milwaukee Ave., list down the report number of the crimes happened inside the apartment.",1958 N. Milwaukee Ave. refers to ward_office_address = '1958 N. Milwaukee Ave.'; report number refers to case_number; inside the apartment refers to location_description = 'APARTMENT',SELECT T1.case_number FROM Crime AS T1 INNER JOIN Ward AS T2 ON T2.ward_no = T1.ward_no WHERE T1.location_description = 'APARTMENT' AND T2.ward_office_address = '1958 N. Milwaukee Ave.'
chicago_crime,What is the total number of crimes that happened in Bridgeport with beat less than 1000?,Bridgeport refers to community_area_name = 'Bridgeport'; with beat less than 1000 refers to beat < 1000; total number = count(beat) where community_area_name = 'Bridgeport' and beat < 1000,SELECT SUM(CASE WHEN T2.beat < 1000 THEN 1 ELSE 0 END) FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no WHERE T1.community_area_name = 'Bridgeport'
chicago_crime,"List the report number of crimes reported in a community area in the far north side with a population greater than 60,000.","report number refers to report_no; the far north side refers to side = 'Far North'; population greater than 60,000 refers to population > '60000'",SELECT SUM(CASE WHEN T1.population > 60000 THEN 1 ELSE 0 END) FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no WHERE T1.side = 'Far North '
chicago_crime,List the report number of crimes against property happened in Riverdale.,crime against property refers to crime_against = 'Property'; Riverdale refers to community_area_name = 'Riverdale',SELECT SUM(CASE WHEN T1.crime_against = 'Property' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T2.fbi_code_no = T1.fbi_code_no INNER JOIN Community_Area AS T3 ON T3.community_area_no = T2.community_area_no WHERE T3.community_area_name = 'Riverdale'
chicago_crime,"How many domestic violence cases were brought in the ward that uses ""ward13@cityofchicago.org""?","domestic violence refers to domestic = 'TRUE'; uses ""ward13@cityofchicago.org"" refers to ward_email = 'ward13@cityofchicago.org'",SELECT SUM(CASE WHEN T2.domestic = 'TRUE' THEN 1 ELSE 0 END) FROM Ward AS T1 INNER JOIN Crime AS T2 ON T2.ward_no = T1.ward_no WHERE T1.ward_email = 'ward13@cityofchicago.org'
chicago_crime,What is the district address associated with the case JB107731?,case JB107731 refers to case_number = 'JB107731',SELECT T1.address FROM District AS T1 INNER JOIN Crime AS T2 ON T2.district_no = T1.district_no WHERE T2.case_number = 'JB107731'
chicago_crime,"Calculate the total beat of the crimes reported in a community area in the central side with population of 50,000 and above.","the central side refers to side = 'Central'; population of 50,000 and above refers to population > '50000'; total beat = sum(beat) where side = 'Central' and population > '50000'",SELECT 1.0 * SUM(CASE WHEN T1.population > 50000 THEN T2.beat ELSE 0 END) AS sum FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no WHERE T1.side = 'Central'
chicago_crime,List the case number of crimes against society that happened in June 2018.,crime against society refers to crime_against = 'Society'; in June 2018 refers to date LIKE '6/%/2018%',SELECT T2.case_number FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T2.fbi_code_no = T1.fbi_code_no WHERE T2.date LIKE '6/%/2018%' AND T1.crime_against = 'Society'
chicago_crime,"Among the crimes located in the community area with the highest population, what is the percentage of domestic violence?","the highest population refers to max(population); domestic violence refers to domestic = 'TRUE'; percentage = divide(count(domestic = 'TRUE'), count(domestic)) where population = max(population) * 100%",SELECT CAST(COUNT(CASE WHEN T2.domestic = 'TRUE' THEN T2.domestic END) AS REAL) * 100 / COUNT(T2.domestic) FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no GROUP BY T1.community_area_no HAVING COUNT(T1.population) ORDER BY COUNT(T1.population) DESC LIMIT 1
chicago_crime,List the case number of the crimes in wards with population below 52000 that have beat greater than the 90% of the average beat of all crimes.,"population below 52000 refers to population < 52000; beat greater than the 90% of the average beat refers to beat > multiply(avg(beat), 0.9) where population < 52000",SELECT COUNT(T1.report_no) FROM Crime AS T1 INNER JOIN Ward AS T2 ON T1.ward_no = T2.ward_no WHERE T2.Population < 52000 AND T1.beat > ( SELECT AVG(T1.beat) * 0.9 FROM Crime AS T1 INNER JOIN Ward AS T2 ON T1.ward_no = T2.ward_no WHERE T2.Population < 52000 )
chicago_crime,"Please list the area name of the communities in the Far north side, which has a population of more than 50000 but less than 70000.",area name refers to community_area_name; the Far north side refers to side = 'Far North'; a population of more than 50000 but less than 70000 refers to population BETWEEN '50000' AND '70000',"SELECT community_area_name, side FROM Community_Area WHERE side = 'Far North ' AND population BETWEEN 50000 AND 70000"
chicago_crime,Give the coordinate of the alleys where a crime was reported and an arrest was made.,"coordinate refers to latitude, longitude; alley refers to location_description = 'ALLEY'; an arrest was made refers to arrest = 'TRUE'","SELECT latitude, longitude FROM Crime WHERE location_description = 'ALLEY' AND arrest = 'TRUE' GROUP BY latitude, longitude"
chicago_crime,"Find the commander's name, email address, and phone number of the Ogden district.",commander's name refers to commander; email address refers to email; phone number refers to phone,"SELECT commander, email, phone FROM District WHERE district_name = 'Ogden'"
chicago_crime,What is the FBI code and definition of Gambling?,FBI code refers to fbi_code_no; definition refers to description; Gambling refers to title = 'Gambling',"SELECT fbi_code_no, description FROM FBI_Code WHERE title = 'Gambling'"
chicago_crime,"Among the crimes, what percentage are severe?","severe refers to index_code = 'I'; percentage = divide(count(iucr_no where index_code = 'I'), count(iucr_no)) * 100%",SELECT CAST(COUNT(CASE WHEN index_code = 'I' THEN iucr_no ELSE NULL END) AS REAL) * 100 / COUNT(iucr_no) FROM IUCR
chicago_crime,What kind of location in Austin reported the most number of crimes?,"""Austin"" is the district_name; the most number of crime refers to Max(Count(case_number)); kind of location refers to location_description",SELECT T2.location_description FROM District AS T1 INNER JOIN Crime AS T2 ON T2.district_no = T1.district_no WHERE T1.district_name = 'Austin' GROUP BY T2.location_description ORDER BY COUNT(T2.case_number) DESC LIMIT 1
chicago_crime,"On average, how many community areas are there in a side?","average = Divide(Count(ward_no), Count(side))",SELECT CAST(COUNT(T1.ward_no) AS REAL) / COUNT(DISTINCT T3.side) FROM Ward AS T1 INNER JOIN Crime AS T2 ON T2.ward_no = T1.ward_no INNER JOIN Community_Area AS T3 ON T3.community_area_no = T2.community_area_no
chicago_crime,Which community area has the highest number of crimes reported on the street?,reported on the street refers to location_description = 'STREET'; community area with highest number of crime refers to Max(Count(location_description)); community area refers to community_area_no,SELECT T1.community_area_no FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no WHERE T2.location_description = 'STREET' GROUP BY T1.community_area_no ORDER BY COUNT(T2.location_description) DESC LIMIT 1
chicago_crime,What is the average number of reckless homicides that happened in a district?,"""RECKLESS HOMICIDE"" is the secondary_description; average = Divide (Count(report_no), Count(district_name))",SELECT CAST(COUNT(T2.report_no) AS REAL) / COUNT(DISTINCT T1.district_name) FROM District AS T1 INNER JOIN Crime AS T2 ON T2.district_no = T1.district_no INNER JOIN IUCR AS T3 ON T3.iucr_no = T2.iucr_no WHERE T3.secondary_description = 'RECKLESS HOMICIDE'
chicago_crime,Find the ward office's address and phone number of the ward where the most crimes without arrest occurred.,the most crime without arrest refers to Max(Count(arrest = 'FALSE')); phone number refers to ward_office_phone; address refers to ward_office_address,"SELECT T2.ward_office_address, T2.ward_office_phone FROM Crime AS T1 INNER JOIN Ward AS T2 ON T2.ward_no = T1.ward_no WHERE T1.arrest = 'FALSE' GROUP BY T2.ward_office_address, T2.ward_office_phone ORDER BY COUNT(T1.arrest) DESC LIMIT 1"
chicago_crime,Give the case number and coordinates of the places where child abduction is reported.,"""CHILD ABDUCTION"" is the secondary_description; coordinates refers to latitude, longitude","SELECT T1.case_number, T1.latitude, T1.longitude FROM Crime AS T1 INNER JOIN IUCR AS T2 ON T2.iucr_no = T1.iucr_no WHERE T2.secondary_description = 'CHILD ABDUCTION'"
chicago_crime,What is the most reported crime in the Northwest side?,most reported crime refers to max(Count(secondary_description)),SELECT T3.secondary_description FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no INNER JOIN IUCR AS T3 ON T3.iucr_no = T2.iucr_no WHERE T1.side = 'Northwest ' GROUP BY T3.secondary_description ORDER BY COUNT(*) DESC LIMIT 1
chicago_crime,Find the community area where the least number of domestic crimes happened.,"least number of domestic crime refers to Min(Count(domestic = ""TRUE"")); community area refers to community_area_no",SELECT T2.community_area_no FROM Crime AS T1 INNER JOIN Community_Area AS T2 ON T2.community_area_no = T1.community_area_no WHERE T1.domestic = 'TRUE' GROUP BY T2.community_area_no ORDER BY COUNT(T2.community_area_no) ASC LIMIT 1
chicago_crime,"In drug abuse crimes, what percentage is related to cannabis?","drug abuse crime refer to title = 'Drug Abuse'; percentage = Divide (Count (secondary_description LIKE '%CANNABIS%'), Count (secondary_description)) * 100",SELECT CAST(COUNT(CASE WHEN T1.secondary_description LIKE '%CANNABIS%' THEN T1.secondary_description END) AS REAL) * 100 / COUNT(T1.secondary_description) FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no INNER JOIN FBI_Code AS T3 ON T3.fbi_code_no = T2.fbi_code_no WHERE T3.title = 'Drug Abuse'
chicago_crime,What is the average number of less severe crimes reported a day in February of 2018?,"day in February of 2018 refers to date LIKE '2/%/2018'; less severe crime refers to index_code = 'N'; average = Divide (Count(case_number), 28)",SELECT CAST(COUNT(T2.case_number) AS REAL) / 28 FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no WHERE T2.date LIKE '2/%/2018%' AND T1.index_code = 'N'
chicago_crime,List the name and population of the communities where more than average solicit for prostitutes were reported.,"""SOLICIT FOR PROSTITUTE"" is the secondary_description; more than average refers to count(iucr_no) > Divide (Count(secondary_description = 'SOLICIT FOR PROSTITUTE'), Count(iucr_no)); name of community refers to community_area_name","SELECT T2.community_area_name, T2.population FROM Crime AS T1 INNER JOIN Community_Area AS T2 ON T2.community_area_no = T1.community_area_no INNER JOIN IUCR AS T3 ON T3.iucr_no = T1.iucr_no WHERE T3.iucr_no = ( SELECT iucr_no FROM IUCR WHERE secondary_description = 'SOLICIT FOR PROSTITUTE' GROUP BY iucr_no HAVING COUNT(iucr_no) > ( SELECT SUM(CASE WHEN secondary_description = 'SOLICIT FOR PROSTITUTE' THEN 1.0 ELSE 0 END) / COUNT(iucr_no) AS average FROM IUCR ) )"
chicago_crime,"Among the incidents reported in Harrison, what percentage are disorderly conduct?","""Harrison"" is the district_name;  'Disorderly Conduct' is the title; percentage = Divide (Count(title = 'Disorderly Conduct'), Count(report_no)) * 100; incident report refers to report_no",SELECT COUNT(CASE WHEN T3.title = 'Disorderly Conduct' THEN T2.report_no END) * 100.0 / COUNT(T2.report_no) AS per FROM District AS T1 INNER JOIN Crime AS T2 ON T2.district_no = T1.district_no INNER JOIN FBI_Code AS T3 ON T3.fbi_code_no = T2.fbi_code_no WHERE T1.district_name = 'Harrison'
chicago_crime,Calculate the difference in the average number of vehicular hijackings and aggravated vehicular hijackings in the districts.,"""VEHICULAR HIJACKING"" and ""AGGRAVATED VEHICULAR HIJACKING"" are both secondary_description; difference in average = Subtract (Divide(Count(secondary_description = 'VEHICULAR HIJACKING'), Count(district_name)), Divide(Count(secondary_description = ""AGGRAVATED VEHICULAR HIJACKING""), Count(district_name)))","SELECT ROUND(CAST(COUNT(CASE WHEN T1.secondary_description = 'VEHICULAR HIJACKING' THEN T1.iucr_no END) AS REAL) / CAST(COUNT(DISTINCT CASE WHEN T1.secondary_description = 'VEHICULAR HIJACKING' THEN T3.district_name END) AS REAL) - CAST(COUNT(CASE WHEN T1.secondary_description = 'AGGRAVATED VEHICULAR HIJACKING' THEN T1.iucr_no END) AS REAL) / CAST(COUNT(DISTINCT CASE WHEN T1.secondary_description = 'AGGRAVATED VEHICULAR HIJACKING' THEN T3.district_name END) AS REAL), 4) AS ""difference"" FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no INNER JOIN District AS T3 ON T3.district_no = T2.district_no"
chicago_crime,How many crimes happened in longitude -8772658001?,,SELECT COUNT(*) FROM Crime WHERE longitude = '-87.72658001'
chicago_crime,List all the crimes of the narcotic type that exist.,narcotic type refers to primary_description = 'NARCOTICS'; crime refers to secondary_description,SELECT secondary_description FROM IUCR WHERE primary_description = 'NARCOTICS' GROUP BY secondary_description
chicago_crime,"What is the first name of the aldermen of wards with more than 50,000 inhabitants?",more than 50000 inhabitants refers to Population > 50000; first name of alderman refers to alderman_first_name,SELECT alderman_first_name FROM Ward WHERE Population > 50000
chicago_crime,List crimes that the FBI has classified as Drug Abuse by their report number.,"""Drug Abuse"" is the title of crime",SELECT T2.report_no FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T2.fbi_code_no = T1.fbi_code_no WHERE T1.title = 'Drug Abuse'
chicago_crime,How many weapons violation crimes have occurred in the Calumet district?,"""Calumet"" is the district_name; 'WEAPON VIOLATION' is the primary_description of crime",SELECT SUM(CASE WHEN T3.district_name = 'Calumet' THEN 1 ELSE 0 END) FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no INNER JOIN District AS T3 ON T3.district_no = T2.district_no WHERE T1.primary_description = 'WEAPONS VIOLATION'
chicago_crime,What is the exact location of the crimes that occurred in the Belmont Cragin community?,"Belmont Cragin community refers to community_area_name = 'Belmont Cragin'; exact location refers to latitude, longitude","SELECT T2.latitude, T2.longitude FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no WHERE T1.community_area_name = 'Belmont Cragin' GROUP BY T2.latitude, T2.longitude"
chicago_crime,"How many different types of crimes, according to the primary description, have occurred in the Hermosa neighborhood?","""Hermosa"" is the neighborhood_name",SELECT SUM(CASE WHEN T4.neighborhood_name = 'Hermosa' THEN 1 ELSE 0 END) FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no INNER JOIN Community_Area AS T3 ON T3.community_area_no = T2.community_area_no INNER JOIN Neighborhood AS T4 ON T4.community_area_no = T3.community_area_no
chicago_crime,How many domestic crime cases has Commander Ronald A. Pontecore Jr. been responsible for investigating?,domestic crime refers to domestic = 'TRUE'; person responsible for investigating refers to commander,SELECT SUM(CASE WHEN T2.domestic = 'TRUE' THEN 1 ELSE 0 END) FROM District AS T1 INNER JOIN Crime AS T2 ON T2.district_no = T1.district_no WHERE T1.commander = 'Ronald A. Pontecore Jr.'
chicago_crime,How many crimes against society happened in the Wentworth district according to the FBI?,"""Wentworth"" is the district_name; crime against society refers to crime_against = 'Society""",SELECT SUM(CASE WHEN T1.crime_against = 'Society' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T2.fbi_code_no = T1.fbi_code_no INNER JOIN District AS T3 ON T3.district_no = T2.district_no WHERE T3.district_name = 'Wentworth'
chicago_crime,What phone number does alderman Emma Mitts have to call if she wants to speak to the commander in charge of the investigation of the crimes that have occurred in her ward?,,SELECT T3.phone FROM Ward AS T1 INNER JOIN Crime AS T2 ON T2.ward_no = T1.ward_no INNER JOIN District AS T3 ON T3.district_no = T2.district_no WHERE T1.alderman_first_name = 'Emma' AND T1.alderman_last_name = 'Mitts'
chicago_crime,How many crimes described as 'The theft of a motor vehicle' by the FBI have taken place in the Lake View community?,lake view community refers to community_area_name = 'Lake View'; 'The theft of a motor vehicle' is the description,SELECT SUM(CASE WHEN T3.community_area_name = 'Lake View' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T2.fbi_code_no = T1.fbi_code_no INNER JOIN Community_Area AS T3 ON T3.community_area_no = T2.community_area_no WHERE T1.description = 'The theft of a motor vehicle.'
chicago_crime,In which district have there been more intimidation-type crimes?,more intimidation-type crime refers to Max(Count(primary_description = 'INTIMIDATION')); district refers to district_name,SELECT T3.district_name FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no INNER JOIN District AS T3 ON T3.district_no = T2.district_no WHERE T1.primary_description = 'INTIMIDATION' GROUP BY T3.district_name ORDER BY COUNT(T1.primary_description) DESC LIMIT 1
chicago_crime,What types of domestic crimes have occurred the most in the North Lawndale community?,"""North Lawndale' is the community_area_name; occur the most domestic crime refers to Max(Count(domestic = 'TRUE'))",SELECT T2.domestic FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no WHERE T1.community_area_name = 'North Lawndale' AND T2.domestic = 'TRUE' GROUP BY T2.domestic ORDER BY COUNT(T2.domestic) DESC LIMIT 1
chicago_crime,"In which ward of more than 55,000 inhabitants are there more crimes of intimidation with extortion?",more than 55000 inhabitants refers to Population > 55000; 'INTIMIDATION' is the primary_description; 'EXTORTION' refers to secondary_description; more crime refers to Count(ward_no),SELECT T3.ward_no FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no INNER JOIN Ward AS T3 ON T3.ward_no = T2.ward_no WHERE T1.primary_description = 'INTIMIDATION' AND T1.secondary_description = 'EXTORTION' AND T3.Population > 55000 GROUP BY T3.ward_no ORDER BY COUNT(T3.ward_no) DESC LIMIT 1
chicago_crime,Which commander has had to deal with more cases of criminal sexual abuse?,more cases of criminal sexual abuse refers to Max(Count(secondary_description = 'CRIMINAL SEXUAL ABUSE')),SELECT T3.commander FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no INNER JOIN District AS T3 ON T3.district_no = T2.district_no WHERE T1.secondary_description = 'CRIMINAL SEXUAL ABUSE' GROUP BY T3.commander ORDER BY COUNT(T1.secondary_description) DESC LIMIT 1
chicago_crime,What percentage of non-domestic crimes have occurred in the Jefferson Park district?,"non domestic crime refers to domestic = 'FALSE'; 'Jefferson Park' is the district_name; percentage = Divide (Count (case_number where domestic = 'FALSE'), Count(case_number)) * 100",SELECT CAST(COUNT(CASE WHEN T2.domestic = 'FALSE' THEN T2.case_number END) AS REAL) * 100 / COUNT(T2.case_number) FROM District AS T1 INNER JOIN Crime AS T2 ON T2.district_no = T1.district_no WHERE T1.district_name = 'Jefferson Park'
chicago_crime,What is the average population of the wards where apartment crimes have been reported without arrests?,apartment crime refers to location_description = 'APARTMENT';  without arrest refers to arrest = 'FALSE'; average population = AVG(Population),SELECT AVG(T2.Population) FROM Crime AS T1 INNER JOIN Ward AS T2 ON T2.ward_no = T1.ward_no WHERE T1.location_description = 'APARTMENT' AND T1.arrest = 'FALSE'
chicago_crime,What are the full names of the top 5 most crowded ward aldermen?,"most crowded ward refers to Max(Population); full name of alderman refers to alderman_first_name, alderman_last_name","SELECT alderman_first_name, alderman_last_name FROM Ward ORDER BY Population DESC LIMIT 5"
chicago_crime,How many crime against property are there?,,SELECT COUNT(*) AS cnt FROM FBI_Code WHERE crime_against = 'Property'
chicago_crime,How many districts are there in the police district building with a zip code of 60608?,district refers to district_name,SELECT COUNT(*) AS cnt FROM District WHERE zip_code = 60608
chicago_crime,Who is the crime against criminal sexual abuse?,"""Criminal Sexual Abuse"" is the title of crime",SELECT crime_against FROM FBI_Code WHERE title = 'Criminal Sexual Abuse'
chicago_crime,Which community has the highest number of neighborhoods?,community with highest number of neighborhoods refers to Max(Count(community_area_no)); community refers to community_area_name,SELECT T1.community_area_name FROM Community_Area AS T1 INNER JOIN Neighborhood AS T2 ON T1.community_area_no = T2.community_area_no ORDER BY T2.community_area_no DESC LIMIT 1
chicago_crime,"How many severe crime incidents were reported at coordinate 41.64820151, -87.54430496?","coordinates refers to latitude, longitude; severe crime refers to index_code = 'I'",SELECT SUM(CASE WHEN T1.longitude = '-87.54430496' THEN 1 ELSE 0 END) FROM Crime AS T1 INNER JOIN IUCR AS T2 ON T1.report_no = T2.iucr_no WHERE T2.index_code = 'I' AND T1.latitude = '41.64820251'
chicago_crime,Who is the commanding officer in the district with the highest number of reported crimes where no arrest has been made?,where no arrest refers to arrest = 'FALSE'; highest number of crime refers to Max(Count(report_no)); commanding officer refers to commander,SELECT T2.commander FROM Crime AS T1 INNER JOIN District AS T2 ON T1.district_no = T2.district_no WHERE T1.arrest = 'FALSE' GROUP BY T2.commander ORDER BY COUNT(T1.report_no) DESC LIMIT 1
chicago_crime,What are the general and specific descriptions of the most common crime incidents that happened in an aircraft?,in aircraft refers to location_description = 'AIRCRAFT'; general description refers to primary_description; specific description refers to secondary_description; most common crime incidents refers to Max(Count(iucr_no)),"SELECT T2.primary_description, T2.secondary_description FROM Crime AS T1 INNER JOIN IUCR AS T2 ON T1.iucr_no = T2.iucr_no WHERE T1.location_description = 'AIRCRAFT' GROUP BY T1.iucr_no ORDER BY COUNT(T1.iucr_no) DESC LIMIT 1"
chicago_crime,"Between Deering and Near West districts, which district reported the most number of crime incidents that happened in a library?","""Deering"" and ""Near West"" are both district_name; 'LIBRARY' is the location_description; district with the most number of crime Max(Count(district_no))","SELECT T1.district_name FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.district_name IN ('Deering', 'Near West') AND T2.location_description = 'LIBRARY' GROUP BY T1.district_name ORDER BY COUNT(T2.district_no) DESC LIMIT 1"
chicago_crime,How many arrests have been made due to forcible entry burglary that took place in a day care center?,"""BURGLARY"" is the primary_description; 'FORCIBLE ENTRY' is the secondary_description; 'DAY CARE CENTER' is the location_description; arrests have been made refers to arrest = 'TRUE'",SELECT SUM(CASE WHEN T2.arrest = 'TRUE' THEN 1 ELSE 0 END) FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T1.iucr_no = T2.iucr_no WHERE T2.location_description = 'DAY CARE CENTER' AND T1.secondary_description = 'FORCIBLE ENTRY' AND T1.primary_description = 'BURGLARY'
chicago_crime,What is the name of the district with the highest number of domestic violence cases?,domestic violence refers to domestic = 'TRUE'; highest number of case refers to Max(Count(district_no)); name of district refers to distric_name,SELECT T2.district_name FROM Crime AS T1 INNER JOIN District AS T2 ON T1.district_no = T2.district_no WHERE T1.domestic = 'TRUE' GROUP BY T2.district_name ORDER BY COUNT(T1.district_no) DESC LIMIT 1
chicago_crime,"In the least populated community, what is the most common location of all the reported crime incidents?",least populated refers to Min(Population); community refers to community_area_no; most common location refers to Max(Count(location_description)),SELECT T2.location_description FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no WHERE T1.population = ( SELECT MIN(population) FROM Community_Area ) AND T2.location_description IS NOT NULL GROUP BY T2.location_description
chicago_crime,How many violation of laws are there where no arrest has been made?,"""The violation of laws "" is the description of incidents; no arrest has been made refers to arrest = 'FALSE'",SELECT SUM(CASE WHEN T1.description LIKE '%The violation of laws%' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE T2.Arrest = 'FALSE'
chicago_crime,What is the precise coordinate of the location where simple assault incidents happened the most in Chatham?,"precise coordinates refers to latitude, longitude; 'Simple Assault' is the title of incident; 'Chatham' is the community_area_name; most incident happened refers to Max(Count(latitude, longitude))","SELECT T2.latitude, T2.longitude FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no INNER JOIN Community_Area AS T3 ON T2.community_area_no = T3.community_area_no WHERE T1.title = 'Simple Assault' AND T3.community_area_name = 'Chatham' AND T3.community_area_no = 44 ORDER BY T2.latitude DESC, T2.longitude DESC LIMIT 1"
chicago_crime,"In the South side community, what is the name of the community with the most reported incidents of unlawful taking, carrying, leading, or riding away of property from the possession or constructive possession of another person?","""unlawful taking, carrying, leading, or riding away of property from the possession or constructive possession of another person"" is the description; name of community refer to community_area_name; most reported incidents refers to Max(Count(fbi_code_no))","SELECT T3.community_area_name FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no INNER JOIN Community_Area AS T3 ON T2.community_area_no = T3.community_area_no WHERE T3.side = 'South' AND T1.description = 'The unlawful taking, carrying, leading, or riding away of property FROM the possession or constructive possession of another person.' GROUP BY T3.community_area_name ORDER BY COUNT(T1.fbi_code_no) DESC LIMIT 1"
chicago_crime,How many crime against society were reported in Englewood?,"""Englewood"" is the community_area_name; 'Society' is the crime_against",SELECT SUM(CASE WHEN T3.community_area_name = 'Englewood' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no INNER JOIN Community_Area AS T3 ON T2.community_area_no = T3.community_area_no WHERE T1.crime_against = 'Society'
chicago_crime,What is the weekly average number of fraud incidents that were reported in January 2018? Provide the description of the location where the majority of fraud incidents occurred in the said month.,"fraud incident refers to title = 'Fraud'; reported in January 2018 refers to Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018'; description of location refers to location_description; weekly average refers to Divide (Count(report_no), 4); majority of incidents occurred refers to Max(Count(location_description))","SELECT CAST(COUNT(T1.fbi_code_no) AS REAL) / 4 FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE SUBSTR(T2.date, 1, 1) = '1' AND SUBSTR(T2.date, 5, 4) = '2018'"
chicago_crime,"Please list any three community areas with a population of more than 50,000.",population of more than 50000 refers to Population > 50000; community area refers to community_area_name,SELECT community_area_name FROM Community_Area WHERE population > 50000 LIMIT 3
chicago_crime,What are the communities that are grouped together on the central side?,central side refers to side = 'Central'; community refers to community_area_name,SELECT community_area_name FROM Community_Area WHERE side = 'Central'
chicago_crime,"What is the difference between the number of communities that are located on the north and south sides with a population of more than 30,000?","population of more than 30000 refers to Population > 30000; 'North' and 'South' both are the side; different number of community refers to Subtract(Count(Community_area_no where side = 'South'), Count(Community_area_no where side = 'North'))",SELECT SUM(CASE WHEN side = 'South ' THEN 1 ELSE 0 END) - SUM(CASE WHEN side = 'North' THEN 1 ELSE 0 END) AS DIFF FROM Community_Area WHERE population > 300000
chicago_crime,Please list all of the contact information for the police district Near West.,"""Near West"" is the district_name; all contact information refers to phone, fax, tty, twitter","SELECT phone, fax, tty, twitter FROM District WHERE district_name = 'Near West'"
chicago_crime,Who is responsible for crime cases in district Lincoln?,"""Lincoln"" is the district_name; responsible for crime case refers to commander",SELECT commander FROM District WHERE district_name = 'Lincoln'
chicago_crime,What is the general and specific description of incident 275?,incident 275 refers to iucr_no = 275; general description refers to primary_description; specific description refers to secondary_description,"SELECT primary_description, secondary_description FROM IUCR WHERE iucr_no = 275"
chicago_crime,What is the percentage of severe cases that are related to sexual assault?,"related to sexual assault refers to primary_description = 'CRIME SEXUAL ASSAULT'; severe case refers to index_code = 'I'; percentage = Divide (Count (iucr_no where primary_description = 'CRIME SEXUAL ASSAULT'), Count (iucr_no)) * 100",SELECT CAST(SUM(CASE WHEN primary_description = 'CRIM SEXUAL ASSAULT' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM IUCR WHERE index_code = 'I'
chicago_crime,What are the neighborhoods that are located in the North Center community area?,"""North Center"" is the community_area_name; neighborhoods refers to neighborhood_name",SELECT T2.neighborhood_name FROM Community_Area AS T1 INNER JOIN Neighborhood AS T2 ON T1.community_area_no = T2.community_area_no WHERE T1.community_area_name = 'North Center'
chicago_crime,How many neighborhoods can be found in the Forest Glen community area?,"""Forest Glen"" is the community_area_name; neighborhoods refers to neighborhood_name",SELECT SUM(CASE WHEN T2.community_area_name = 'Forest Glen' THEN 1 ELSE 0 END) FROM Neighborhood AS T1 INNER JOIN Community_Area AS T2 ON T1.community_area_no = T2.community_area_no
chicago_crime,"What is the total population of the neighborhoods Avondale Gardens, Irving Park, Kilbourn Park, Merchant Park, Old Irving Park, and The Villa?","""Avoladale Gardens"", ""Irving Park"", ""Kilbourn Park"", ""Merchant Park"", ""Old Irving Park"", ""The Villa"" are neighborhood_name; total population refers to Sum(Population)",SELECT SUM(T2.population) AS sum FROM Neighborhood AS T1 INNER JOIN Community_Area AS T2 ON T1.community_area_no = T2.community_area_no WHERE T1.neighborhood_name = 'Avondale Gardens' OR T1.neighborhood_name = 'Irving Park' OR T1.neighborhood_name = 'Kilbourn Park' OR T1.neighborhood_name = 'Merchant Park' OR T1.neighborhood_name = 'Old Irving Park' OR T1.neighborhood_name = 'The Villa'
chicago_crime,"How many crime cases have been classified as ""Weapons Violation"" by the FBI?","""Weapons Violation"" is the title of crime; crime cases refers to report_no;",SELECT SUM(CASE WHEN T2.title = 'Weapons Violation' THEN 1 ELSE 0 END) FROM Crime AS T1 INNER JOIN FBI_Code AS T2 ON T1.fbi_code_no = T2.fbi_code_no
chicago_crime,Please list any three criminal sexual assault cases against persons where the criminals have been arrested.,"""Criminal Sexual Assault"" is the title of crime; against person refers to crime_against = 'Persons'; criminals have been arrested refers to arrest = 'TRUE'; cases refers to case_number",SELECT T2.case_number FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE T1.title = 'Criminal Sexual Assault' AND T2.arrest = 'TRUE' AND T1.crime_against = 'Persons' LIMIT 3
chicago_crime,Please state the district name where incident number JB106545 took place.,incident number JB106545 refers to case_number = 'JB106545',SELECT T1.case_number FROM Crime AS T1 INNER JOIN FBI_Code AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE T2.title = 'Criminal Sexual Assault' AND T2.crime_against = 'Persons' AND T1.arrest = 'TRUE' LIMIT 3
chicago_crime,What is the general description for case number JB106010?,general description refers to primary_description,SELECT T1.primary_description FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T1.iucr_no = T2.iucr_no WHERE T2.case_number = 'JB106010'
chicago_crime,Please name three communities that experience the fraud incident.,communities refers to community_area_name; 'Fraud Incident' is the title of crime,SELECT T3.community_area_name FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no INNER JOIN Community_Area AS T3 ON T2.community_area_no = T3.community_area_no WHERE T1.title = 'Criminal Sexual Assault' LIMIT 3
chicago_crime,What was the major type of crime that happened in the Rogers Park community area?,"""Rogers Park"" is the community_area_name; major type of crime refers to title","SELECT T1.fbi_code_no, T1.title FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no INNER JOIN Community_Area AS T3 ON T2.community_area_no = T3.community_area_no WHERE T3.community_area_name = 'Rogers Park' GROUP BY T1.fbi_code_no, T1.title"
chicago_crime,At which district did the multiple homicide case number JB120039 occurred?,multiple homicide refers to Count(case_number) > 1; district refers to district_name,"SELECT T1.district_no, T1.district_name FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T2.case_number = 'JB120039' GROUP BY T1.district_no, T1.district_name"
chicago_crime,"What is the percentage of crime cases that have been classified as ""drug abuse"" by the FBI and happened on the street?","""Drug Abuse"" is the title of crime; happened on the street refers to location_description = 'STREET';  percentage = Divide (Count(fbi_code_no where location_description = 'STREET'), Count(fbi_code_no)) * 100",SELECT CAST(SUM(CASE WHEN T2.title = 'Drug Abuse' AND T1.location_description = 'STREET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.fbi_code_no) FROM Crime AS T1 INNER JOIN FBI_Code AS T2 ON T1.fbi_code_no = T2.fbi_code_no
chicago_crime,Provide the ward number with the highest population.,highest population refers to Max(Population); ward number refers to ward_no,SELECT ward_no FROM Ward ORDER BY Population DESC LIMIT 1
chicago_crime,What is the beat and location description of the case JB112212?,case JB112212 refers to case_number = 'JB112212',"SELECT beat, location_description FROM Crime WHERE case_number = 'JB112212'"
chicago_crime,"Give the FBI code for the crime described by ""The killing of one human being by another.""","""The killing of one human being by another"" is the description; FBI code refers to fbi_code_no",SELECT fbi_code_no FROM FBI_Code WHERE description = 'The killing of one human being by another.'
chicago_crime,Provide at least 5 ward office addresses associated with the crimes that happened in the community of Montclare.,"""Montclare"" is the community_area_name",SELECT T3.ward_office_address FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no INNER JOIN Ward AS T3 ON T2.ward_no = T3.ward_no WHERE T1.community_area_name = 'Montclare' GROUP BY T3.ward_office_address LIMIT 5
chicago_crime,List down the district's commander associated with the crime that happened at the yard and has a beat of 532.,beat of 532 refers to beat = 532; happened in the Yard refers to location_description = 'YARD'; district commander refers to commander,"SELECT T2.address, T2.commander FROM Crime AS T1 INNER JOIN District AS T2 ON T1.district_no = T2.district_no WHERE T1.location_description = 'YARD' AND T1.beat = 532"
chicago_crime,What is the neighborhood name in the community area of Lake View?,"""Lake View"" is the community_area_name",SELECT T2.neighborhood_name FROM Community_Area AS T1 INNER JOIN Neighborhood AS T2 ON T1.community_area_no = T2.community_area_no WHERE T1.community_area_name = 'Lake View'
chicago_crime,Name the neighborhood of the community area in crime with report number 23843?,neighborhood refers to neighborhood_name; '23778' is the report_no,SELECT T3.neighborhood_name FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no INNER JOIN Neighborhood AS T3 ON T2.community_area_no = T3.community_area_no WHERE T2.report_no = 23778
chicago_crime,What is the FBI description of the crime for report number 23778?,"""23778"" is the report_no; FBI description refers to description",SELECT T1.description FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE T2.report_no = 23843
chicago_crime,List down the report number of crimes associated with the district commander named Jill M. Stevens.,"report number refers report_no; 'Jill M. Stevens"" is the commander",SELECT SUM(CASE WHEN T1.commander = 'Jill M. Stevens' THEN 1 ELSE 0 END) FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no
chicago_crime,"Among the crimes happened in the neighborhood called ""Avalon Park"", what is the percentage of crimes that happened inside the house?","""Avalon Park"" is the neghborhood_name; happened inside the house refers to location_description = 'HOUSE'; percentage = Divide (Count(location_description = 'HOUSE'), Count(location_description)) * 100",SELECT CAST(SUM(CASE WHEN T2.location_description = 'HOUSE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.location_description) AS persent FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no INNER JOIN Neighborhood AS T3 ON T2.community_area_no = T3.community_area_no WHERE T3.neighborhood_name = 'Avalon Park'
chicago_crime,What is the full name of the alderman of ward no.21?,"full name of alderman refers to alderman_first_name, alderman_last_name, alderman_name_suffix","SELECT alderman_first_name, alderman_last_name, alderman_name_suffix FROM Ward WHERE ward_no = 21"
chicago_crime,What is the ward ID of the most crowded ward?,most crowded ward refers to Max(Population),SELECT ward_no FROM Ward ORDER BY Population DESC LIMIT 1
chicago_crime,"How many incidents have the general description of ""ASSAULT"" in the IUCR classification?",general description refers to primary_description; 'ASSAULT' is the primary_description; incidents refers to iucr_no,SELECT COUNT(*) FROM IUCR WHERE primary_description = 'ASSAULT'
chicago_crime,"How many incidents are considered ""severe"" in the IUCR classification?",severe refers to index_code = 'I'; incidents refers to iucr_no,SELECT COUNT(*) FROM IUCR WHERE index_code = 'I'
chicago_crime,"Among the crimes with no arrest made, how many of them happened in the ward represented by alderman Pat Dowell?",no arrest has been made refers to arrest = 'FALSE',SELECT SUM(CASE WHEN T1.alderman_last_name = 'Dowell' THEN 1 ELSE 0 END) FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE T2.arrest = 'FALSE' AND T1.alderman_first_name = 'Pat'
chicago_crime,"Which alderman represents the ward with the most number of crimes in January, 2018? Please give his or her full name.","in January 2018 refers to Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018'; ward with the most number of crime refers to Max (Count(ward_no)); full name refers to alderman_first_name, alderman_last_name, alderman_name_suffix","SELECT T1.ward_no, T1.alderman_first_name, T1.alderman_last_name, T1.alderman_name_suffix FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE SUBSTR(T2.date, 1, 1) = '1' AND SUBSTR(T2.date, 5, 4) = '2018' GROUP BY T1.ward_no ORDER BY COUNT(T1.ward_no) DESC LIMIT 1"
chicago_crime,"Among the crimes in the ward with the most population, how many of them are cases of domestic violence?",most population refers to Max(Population); domestic violence refers to domestic = 'TRUE',SELECT COUNT(T1.ward_no) AS num FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE T2.domestic = 'TRUE' ORDER BY T1.Population = ( SELECT Population FROM Ward ORDER BY Population DESC LIMIT 1 )
chicago_crime,Please list the location coordinates of all the incidents that had happened in the ward represented by alderman Pat Dowell.,"location coordinates refers to latitude, longitude","SELECT T2.latitude, T2.longitude FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE T1.alderman_first_name = 'Pat' AND T1.alderman_last_name = 'Dowell' AND T2.latitude IS NOT NULL AND T2.longitude IS NOT NULL"
chicago_crime,"The ward represented by which alderman had more incidents in January, 2018, Pat Dowell or Sophia King?","January, 2018 refers to Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018'; had more incidents refers to Max(Count(ward_no))","SELECT T1.alderman_first_name, T1.alderman_last_name, COUNT(T1.ward_no) AS num FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE (SUBSTR(T2.date, 1, 1) = '1' AND SUBSTR(T2.date, 5, 4) = '2018' AND T1.alderman_first_name = 'Pat' AND T1.alderman_last_name = 'Dowell') OR (T1.alderman_first_name = 'Sophia' AND T1.alderman_last_name = 'King') GROUP BY T1.ward_no"
chicago_crime,"Please list the case numbers of all the incidents with the generic description of ""BATTERY"" in the IUCR classification.",general description refers to primary_description; 'BATTERY' is the primary_description,SELECT T2.case_number FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T1.iucr_no = T2.iucr_no WHERE T1.primary_description = 'BATTERY'
chicago_crime,"Among the incidents with the generic description of ""BATTERY"" in the IUCR classification, how many of them do not have arrests made?",general description refers to primary_description; 'BATTERY' is the primary_description; do not have arrest made refers to arrest = 'FALSE',SELECT SUM(CASE WHEN T2.arrest = 'FALSE' THEN 1 ELSE 0 END) FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T1.iucr_no = T2.iucr_no WHERE T1.primary_description = 'BATTERY'
chicago_crime,"Please list the case numbers of all the crimes whose short description of the kind of crime is ""Homicide 1st & 2nd Degree"" in the FBI classification.","""Homicide 1st & 2nd Degree"" is the title",SELECT T2.case_number FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE T1.title = 'Homicide 1st & 2nd Degree'
chicago_crime,"Among the incidents in January, 2018, how many of them were stated ""against Property"" in the FBI classification?","in January 2018 refers to Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018'; against property refers to crime_against = 'Property'","SELECT SUM(CASE WHEN SUBSTR(T2.date, 5, 4) = '2018' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE T1.crime_against = 'Property' AND SUBSTR(T2.date, 1, 1) = '1'"
chicago_crime,"District commander Robert A. Rubio was responsible for how many incidents in January, 2018?","in January 2018 refers to Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018'","SELECT SUM(CASE WHEN SUBSTR(T2.date, 5, 4) = '2018' THEN 1 ELSE 0 END) FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.commander = 'Robert A. Rubio' AND SUBSTR(T2.date, 1, 1) = '1'"
chicago_crime,"Which district commander was responsible for more incidents in January, 2018, Robert A. Rubio or Glenn White?","in January 2018 refers to Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018'; 'Robert A. Rubio' and 'Glenn White' are both commander; responsible for more incident refers to Max(count(ward_no))","SELECT T1.commander FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.commander IN ('Robert A. Rubio', 'Glenn White') AND SUBSTR(T2.date, 1, 1) = '1' AND SUBSTR(T2.date, 5, 4) = '2018' GROUP BY T1.commander"
chicago_crime,Please list the blocks where all the incidents in the district commanded by Robert A. Rubio took place.,"""Robert A. Rubio"" is the commander",SELECT T2.block FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.commander = 'Robert A. Rubio'
chicago_crime,What is the average number of incidents per month in 2018 in the ward with the most population?,"in 2018 refers to date like '%2018%'; ward with most population refers to Max(Population); average number of incident per month refers to Divide(Count(ward_no), 12)",SELECT COUNT(T1.ward_no) / 12 AS average FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE T2.date LIKE '%2018%' AND T1.Population = ( SELECT MAX(T1.Population) FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no WHERE T2.date LIKE '%2018%' )
chicago_crime,"Among all the incidents with no arrest made, what is the percentage of them having a generic description of ""BATTERY"" in the IUCR classification?","incident with no arrest made refers to arrest = 'FALSE'; general description refers to primary_description; ""BATTERY"" is the primary_description; percentage = Divide (Count(iucr_no where primary_description = 'BATTERY'), Count(iucr_no)) * 100",SELECT CAST(SUM(CASE WHEN T1.primary_description = 'BATTERY' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T1.iucr_no = T2.iucr_no WHERE T2.arrest = 'FALSE'
food_inspection,How many restaurants' owners are in California?,restaurants' owners in California refer to owner_state = 'CA';,SELECT COUNT(owner_state) FROM businesses WHERE owner_state = 'CA'
food_inspection,How many restaurants have met all requirements in the inspection?,met all requirements in the inspection refers to score = 100;,SELECT COUNT(score) FROM inspections WHERE score = 100
food_inspection,"Among the inspections carried out in 2016, how many of them are routine?",inspections carried out in 2016 refer to YEAR(date) = 2016; routine inspections refer to type = 'Routine - Unscheduled';,"SELECT COUNT(`date`) FROM inspections WHERE STRFTIME('%Y', `date`) = '2016' AND type = 'Routine - Unscheduled'"
food_inspection,Please list the names of all the restaurants that have met all requirements in one inspection.,met all requirements refers to inspections where score = 100;,SELECT DISTINCT T2.name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.score = 100
food_inspection,"Among the restaurants being inspected in 2016, how many of them are in San Francisco?","inspected in 2016 refers to YEAR(date) = 2016; San Francisco refers to city in ('San Francisco', 'SF' ,'S.F.', 'SAN FRANCISCO');","SELECT COUNT(DISTINCT T2.business_id) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) = '2016' AND T2.city IN ('San Francisco', 'SAN FRANCISCO', 'SF', 'S.F.')"
food_inspection,What was the type of inspection Tiramisu Kitchen had on 2014/1/14?,Tiramisu Kitchen is the name of the business; inspection on 2014/1/14 refers to date = '2014-01-14';,SELECT T1.type FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.`date` = '2014-01-14' AND T2.name = 'Tiramisu Kitchen'
food_inspection,How many low risk violations were found in the inspection on 2014/1/14 for Tiramisu Kitchen?,Tiramisu Kitchen is the name of the business; inspection on 2014/1/14 refers to date = '2014-01-14'; low risk violations refer to risk_category = 'Low Risk';,SELECT COUNT(T1.business_id) FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.`date` = '2014-01-14' AND T2.name = 'Tiramisu Kitchen' AND T1.risk_category = 'Low Risk'
food_inspection,Please list the names of the restaurants that had a low risk violation in inspections in 2014.,inspection in 2014 refers to year(date) = 2014; low risk violations refer to risk_category = 'Low Risk';,"SELECT DISTINCT T2.name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) = '2014' AND T1.risk_category = 'Low Risk'"
food_inspection,What is the description of the low risk violation of Tiramisu Kitchen on 2014/1/14?,Tiramisu Kitchen is the name of the business; 2014/1/14 refers to date = '2014-01-14'; low risk violations refer to risk_category = 'Low Risk';,SELECT T1.description FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.`date` = '2014-01-14' AND T2.name = 'Tiramisu Kitchen' AND T1.risk_category = 'Low Risk'
food_inspection,Please list the descriptions of all the high risk violations of Tiramisu Kitchen.,Tiramisu Kitchen is the name of the business; high risk violations refer to risk_category = 'High Risk';,SELECT DISTINCT T1.description FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.risk_category = 'High Risk' AND T2.name = 'Tiramisu Kitchen'
food_inspection,How many routine inspections did Tiramisu Kitchen have?,Tiramisu Kitchen is the name of the business; routine inspections refer to type = 'Routine - Unscheduled';,SELECT COUNT(T1.business_id) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.type = 'Routine - Unscheduled' AND T2.name = 'Tiramisu Kitchen'
food_inspection,"Among the routine inspections of Tiramisu Kitchen, how many of them have a score of over 70?",Tiramisu Kitchen is the name of the business; routine inspections refer to type = 'Routine - Unscheduled'; score of over 70 refers to score > 70;,SELECT COUNT(T2.business_id) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.name = 'Tiramisu Kitchen' AND T1.type = 'Routine - Unscheduled' AND T1.score > 70
food_inspection,"Which restaurant had more low risk violation in inspections, Tiramisu Kitchen or OMNI S.F. Hotel - 2nd Floor Pantry?",Tiramisu Kitchen and OMNI S.F. Hotel - 2nd Floor Pantry are names of the business; more low risk violations refer to MAX(COUNT(risk_category = 'Low Risk'));,SELECT CASE WHEN SUM(CASE WHEN T2.name = 'OMNI S.F. Hotel - 2nd Floor Pantry' THEN 1 ELSE 0 END) > SUM(CASE WHEN T2.name = 'Tiramisu Kitchen' THEN 1 ELSE 0 END) THEN 'OMNI S.F. Hotel - 2nd Floor Pantry' ELSE 'Tiramisu Kitchen' END AS result FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.risk_category = 'Low Risk'
food_inspection,How many high risk violations do the restaurants in San Francisco have in total?,"restaurants in San Francisco refer to business_id where city in ('San Francisco', 'SF', 'S.F.', 'SAN FRANCISCO'); high risk violations refer to risk_category = 'High Risk';","SELECT COUNT(T2.business_id) FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.city IN ('San Francisco', 'SF', 'S.F.', 'SAN FRANCISCO') AND T1.risk_category = 'High Risk'"
food_inspection,Which restaurant has the highest total number of high risk violations?,the highest total number of high risk violations refer to MAX(COUNT(risk_category = 'High Risk'));,SELECT T2.name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.risk_category = 'High Risk' GROUP BY T2.name ORDER BY COUNT(T2.name) DESC LIMIT 1
food_inspection,What is the average scores of Tiramisu Kitchen in all inspections?,avg(score);,SELECT AVG(T1.score) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.name = 'Tiramisu Kitchen'
food_inspection,Which business had the most number of inspections? Give the Id number for that business.,the most number of inspections refers to MAX(COUNT(business_id)); Id number for that business refers to business_id;,SELECT business_id FROM inspections GROUP BY business_id ORDER BY COUNT(business_id) DESC LIMIT 1
food_inspection,Tell the Id number of the business with the most number of violations.,Id number for that business refers to business_id; the most number of violations refers to MAX(COUNT(business_id));,SELECT business_id FROM violations GROUP BY business_id ORDER BY COUNT(business_id) DESC LIMIT 1
food_inspection,Give the name of the business which met all the required standards during the unscheduled routine inspection on 2016/9/28.,met all the required standards refers to score = 100; unscheduled routine inspection on 2016/9/28 refers to type = 'Routine - Unscheduled' where date = '2016-09-28';,SELECT T2.name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.score = 100 AND T1.`date` = '2016-09-28' AND T1.type = 'Routine - Unscheduled'
food_inspection,Which business had the most number of high risk violations? Give the name of the business.,the most number of high risk violations refers to MAX(COUNT(business_id)) where risk_category = 'High';,SELECT T2.name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.risk_category = 'High Risk' GROUP BY T2.name ORDER BY COUNT(T2.name) DESC LIMIT 1
food_inspection,"How many kinds of violations did ""Stacks Restaurant"" have on 2016/10/4?","""Stacks Restaurant"" is the name of the business; date = '2016-10-04';",SELECT COUNT(DISTINCT T1.violation_type_id) FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.name = 'Stacks Restaurant' AND T1.`date` = '2016-10-04'
food_inspection,"Give the description of the moderate risk violation which ""Chez Fayala, Inc."" had on 2016/7/1.","""Chez Fayala, Inc."" is the name of the business; moderate risk violation refers to risk_category = 'Moderate Risk'; date = '2016-07-01';","SELECT T1.description FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.name = 'Chez Fayala, Inc.' AND T1.`date` = '2016-07-01' AND T1.risk_category = 'Moderate Risk'"
food_inspection,Which business had the lowest score for the unscheduled routine inspection on 2016/9/26? Give the name of the business.,the lowest score for unscheduled routine inspection refers to type = 'Routine - Unscheduled' where MIN(score); date = '2016-09-26';,SELECT T2.name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE score = ( SELECT MIN(score) FROM inspections WHERE `date` = '2016-09-26' AND type = 'Routine - Unscheduled' ) AND T1.`date` = '2016-09-26' AND T1.type = 'Routine - Unscheduled'
food_inspection,Provide the name of the business which had the most number of inspections because of complaint.,the most number of inspections because of complaint refers to type = 'Complaint' where MAX(business_id);,SELECT T2.name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.type = 'Complaint' GROUP BY T2.name ORDER BY COUNT(T1.business_id) DESC LIMIT 1
food_inspection,"How many unscheduled routine inspections did ""Soma Restaurant And Bar"" have?","""Soma Restaurant And Bar"" is the name of the business; unscheduled routine inspections refer to type = 'Routine - Unscheduled';",SELECT COUNT(T1.business_id) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.name = 'Soma Restaurant And Bar' AND T1.type = 'Routine - Unscheduled'
food_inspection,Give the address of the business with the most number of the low risk violations.,the most number of the low risk violations refers to MAX(COUNT(business_id)) where risk_category = 'Low Risk' ;,SELECT T2.address FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.risk_category = 'Low Risk' GROUP BY T2.address ORDER BY COUNT(T1.business_id) DESC LIMIT 1
food_inspection,"Which business was the first one to get a low risk violation because of ""Permit license or inspection report not posted""? Give the name of the business.","low risk violation because of ""Permit license or inspection report not posted"" refers to risk_category = 'Low Risk' where description = 'Permit license or inspection report not posted'; business was the first one refers to name where MIN(date);",SELECT T2.name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.`date` = ( SELECT MIN(`date`) FROM violations WHERE risk_category = 'Low Risk' AND description = 'Permit license or inspection report not posted' ) AND T1.risk_category = 'Low Risk' AND T1.description = 'Permit license or inspection report not posted'
food_inspection,"For the business which got the most number of violations, how many inspections did it have?",,SELECT COUNT(T2.business_id) FROM violations AS T1 INNER JOIN inspections AS T2 ON T1.business_id = T2.business_id GROUP BY T1.business_id ORDER BY COUNT(T1.business_id) DESC LIMIT 1
food_inspection,"For the business whose business certificate number is 304977, how many violations did it have on 2013/10/7?",date = '2013-10-07';,SELECT COUNT(T1.business_id) FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.business_certificate = '304977' AND T1.`date` = '2013-10-07'
food_inspection,"What is the average score for ""Chairman Bao"" in all its unscheduled routine inspections?","DIVIDE(SUM(score where type = 'Routine - Unscheduled' and name = 'Chairman Bao'), COUNT(type = 'Routine - Unscheduled' where name = 'Chairman Bao'));",SELECT CAST(SUM(CASE WHEN T2.name = 'Chairman Bao' THEN T1.score ELSE 0 END) AS REAL) / COUNT(CASE WHEN T1.type = 'Routine - Unscheduled' THEN T1.score ELSE 0 END) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id
food_inspection,"What percentage of the violations for ""Melody Lounge"" are moderate risks?","DIVIDE(COUNT(risk_category = 'Moderate Risk' where name = 'Melody Lounge'), COUNT(business_id where name = 'Melody Lounge')) as percentage;",SELECT CAST(SUM(CASE WHEN T2.risk_category = 'Moderate Risk' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.business_id) FROM businesses AS T1 INNER JOIN violations AS T2 ON T1.business_id = T2.business_id WHERE T1.name = 'Melody Lounge'
food_inspection,How many eateries are located in Hayward?,eateries in Hayward refer city = 'HAYWARD';,SELECT COUNT(business_id) FROM businesses WHERE city = 'HAYWARD'
food_inspection,How many establishments have an inspection score of no more than 50?,establishments have the same meaning as businesses; inspection score of no more than 50 refers to score < 50;,SELECT COUNT(DISTINCT business_id) FROM inspections WHERE score < 50
food_inspection,How many eateries applied in 2012?,eateries applied in 2012 refer to business_id where application_date between '2012-01-01' and '2012-12-31';,"SELECT COUNT(business_id) FROM businesses WHERE STRFTIME('%Y', application_date) = '2012'"
food_inspection,How many foodborne illness investigations were done in 2014?,foodborne illness investigations refer to inspections where type = 'Foodborne Illness Investigation'; investigations in 2014 refers to date between '2014-01-01' and '2014-12-31';,"SELECT COUNT(business_id) FROM inspections WHERE STRFTIME('%Y', `date`) = '2014' AND type = 'Foodborne Illness Investigation'"
food_inspection,How many owners have 5 or more establishments?,5 or more establishments COUNT(business_id) > = 5;,SELECT COUNT(T1.owner_name) FROM ( SELECT owner_name FROM businesses GROUP BY owner_name HAVING COUNT(owner_name) > 5 ) T1
food_inspection,What are the names of the establishments that met all of the required standards in 2013?,establishments have the same meaning as businesses; met all of the required standards refers to score = 100; year(date) = 2013,"SELECT DISTINCT T2.name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) = '2013' AND T1.score = 100"
food_inspection,"In 2016, which city has the highest number of establishments with the highest health and safety hazards?",the highest health and safety hazards refer to risk_category = 'High Risk'; year(date) = 2016; establishments has the same meaning as businesses;,"SELECT T2.city FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) = '2016' AND T1.risk_category = 'High Risk' GROUP BY T2.city ORDER BY COUNT(T2.city) DESC LIMIT 1"
food_inspection,What is the name of the establishment with the lowest inspection score of all time?,the lowest inspection score refers to MIN(score);,SELECT T2.name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.score = ( SELECT MIN(score) FROM inspections )
food_inspection,How many high risks violations did the Tiramisu Kitchen violate?,Tiramisu Kitchen is the name of the business; high risks violations refer to risk_category = 'High Risk';,SELECT COUNT(T1.business_id) FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.name = 'Tiramisu Kitchen' AND T1.risk_category = 'High Risk'
food_inspection,How many establishments with the tax code H24 have complaint inspections of 5 or more?,establishments with the tax code H24 refer to business_id where tax_code = 'H24'; complaint inspections of 5 or more refer to inspections where type = 'Complaint' and COUNT(business_id) ≥ 5;,SELECT COUNT(*) FROM ( SELECT T1.business_id FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.tax_code = 'H24' AND T1.type = 'Complaint' GROUP BY T1.business_id HAVING COUNT(T1.business_id) > 5 ) T3
food_inspection,"In 2013, what are the names of the establishments with contaminated or adulterated food?",establishments have the same meaning as businesses; contaminated or adulterated food refers to violations where description = 'Contaminated or adulterated food'; date = '2013';,"SELECT T2.name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) = '2013' AND T1.description = 'Contaminated or adulterated food'"
food_inspection,"Among the establishments with a postal code of 94102, how many establishments have a score of 90 or more in 2015?",establishment has the same meaning as business; score of 90 or more refers to score ≥ 90; year(date) = 2015;,"SELECT COUNT(DISTINCT T2.business_id) FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id INNER JOIN inspections AS T3 ON T2.business_id = T3.business_id WHERE STRFTIME('%Y', T1.`date`) = '2015' AND T2.postal_code = '94102' AND T3.score > 90"
food_inspection,What are the names of the establishments that met all the required standards for 4 consecutive years?,establishment has the same meaning as business; score of 90 or more refers to score ≥ 90; year(date) = 2015; ; met all required standards for 4 consecutive years refers to COUNT(year(date)) = 4 where score = 100;,"SELECT DISTINCT T4.name FROM ( SELECT T3.name, T3.years, row_number() OVER (PARTITION BY T3.name ORDER BY T3.years) AS rowNumber FROM ( SELECT DISTINCT name, STRFTIME('%Y', `date`) AS years FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.score = 100 ) AS T3 ) AS T4 GROUP BY T4.name, date(T4.years || '-01-01', '-' || (T4.rowNumber - 1) || ' years') HAVING COUNT(T4.years) = 4"
food_inspection,"Between 2014 to 2016, what is the average inpsection score of the establishment owned by Yiu Tim Chan in 808 Pacific Ave, San Francisco?",average inspection score refers to avg(score); establishment owned by Yiu Tim Chan refers to business_id where owner_name = 'Yiu Tim Chan'; Between 2014 to 2016 refers to year(date) between 2014 and 2016; address = '808 Pacific Ave'; city = 'San Francisco';,"SELECT AVG(T1.score) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) BETWEEN '2014' AND '2016' AND T2.owner_name = 'Yiu Tim Chan' AND T2.address = '808 Pacific Ave' AND T2.city = 'San Francisco'"
food_inspection,What is the average score of the establishments owned by the owner with the highest number of establishments?,average score refers avg(score); owner with the highest number of establishments refers to owner_name where MAX(COUNT(business_id));,SELECT AVG(T1.score) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id GROUP BY T2.owner_name ORDER BY COUNT(T2.business_id) DESC LIMIT 1
food_inspection,What is the name of the establishment with the highest number of low risk violations in 2014?,establishment with the highest number of low risk violations refers to business_id where MAX(COUNT(risk_category = 'Low Risk')); year(date) = 2014;,"SELECT T2.name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) = '2014' AND T1.risk_category = 'Low Risk' GROUP BY T2.name ORDER BY COUNT(T2.business_id) DESC LIMIT 1"
food_inspection,"Among the top 5 owners with highest number of establishments, which owner has the highest number of high risk violations? Give the name of the owner.",5 owners with highest number of establishments refer to owner_name where MAX(COUNT(business_id)) LIMIT 5; the highest number of high risk violations refers to MAX(COUNT(risk_category = 'High Risk'));,SELECT T4.owner_name FROM violations AS T3 INNER JOIN businesses AS T4 ON T3.business_id = T4.business_id INNER JOIN ( SELECT T2.owner_name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id GROUP BY T2.owner_name ORDER BY COUNT(T1.business_id) DESC LIMIT 5 ) AS T5 ON T4.owner_name = T5.owner_name WHERE T3.risk_category = 'High Risk' GROUP BY T4.owner_name ORDER BY COUNT(T3.risk_category) DESC LIMIT 1
food_inspection,Which establishment has the highest number of inspections done? Give the name of the establishment and calculate for its average score per inspection.,establishment refers to business_id; the highest number of inspections refers to MAX(COUNT(business_id)); avg(score);,"SELECT T2.name, AVG(T1.score) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id GROUP BY T2.name ORDER BY COUNT(T2.business_id) DESC LIMIT 1"
food_inspection,How many eateries got highest inspection in 2013?,eateries got highest inspection score in 2013 refer to business_id from inspections where score = 100 and year(date) = 2013;,"SELECT COUNT(DISTINCT business_id) FROM inspections WHERE STRFTIME('%Y', `date`) = '2013' AND score = ( SELECT MAX(score) FROM inspections WHERE STRFTIME('%Y', `date`) = '2013' )"
food_inspection,List down the eateries' IDs with structural inspection type in February 2016.,eateries' IDs refer to business_id; structural inspection type refers to inspections WHERE type = 'Structural Inspection'; in February 2016 refers to year(date) = 2016 and month(date) = 2;,SELECT business_id FROM inspections WHERE type = 'Structural Inspection' AND `date` LIKE '2016-02%'
food_inspection,How many eateries had low risk for violation with unpermitted food facility description?,eateries represent business; low risk for violation refers to risk_category = 'Low Risk';,SELECT COUNT(DISTINCT business_id) FROM violations WHERE risk_category = 'Low Risk' AND description = 'Unpermitted food facility'
food_inspection,"Provide eateries' IDs, risk categories and descriptions with violation ID of 103101.",eateries' IDs refer to business_id; violation ID of 103101 refers to violation_type_id = '103101';,"SELECT business_id, risk_category, description FROM violations WHERE violation_type_id = '103101'"
food_inspection,When did eateries from San Bruno city get highest score in inspection?,eateries represent business; highest score in inspection refers to score = 100;,SELECT T1.`date` FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.city = 'SAN BRUNO' ORDER BY T1.score DESC LIMIT 1
food_inspection,Describe the inspection types and violation descriptions under moderate risk category for ART's CAFÉ.,ART's CAFÉ is the name of the business; moderate risk category refers to risk_category = 'Moderate Risk';,"SELECT DISTINCT T2.type, T1.description FROM violations AS T1 INNER JOIN inspections AS T2 ON T1.business_id = T2.business_id INNER JOIN businesses AS T3 ON T2.business_id = T3.business_id WHERE T3.name = 'ART''S CAFÉ' AND T1.risk_category = 'Moderate Risk'"
food_inspection,Mention the violation type ID and description of high risk category for STARBUCKS.,STARBUCKS is the name of the business; high risk category refers to risk_category = 'High Risk';,"SELECT DISTINCT T1.violation_type_id, T1.description FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.name = 'STARBUCKS' AND T1.risk_category = 'High Risk'"
food_inspection,"List the inspection dates, scores and inspection types for the eateries with tax code AA.",eateries with tax code AA refer to business_id where tax_code = 'AA';,"SELECT T1.`date`, T1.score, T1.type FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.tax_code = 'AA'"
food_inspection,"Provide eateries' IDs, names and addresses which were inspected on 30th July, 2016.","eateries' IDs inspected on 30th July, 2016 refer to business_id where business_id is not null and date = '2016-07-30';","SELECT DISTINCT T2.business_id, T2.name, T2.address FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.date = '2016-07-30'"
food_inspection,"Describe the violation dates, risk categories, descriptions and names of the eateries under Jade Chocolates LLC.",eateries under Jade Chocolates LLC refer to business_id where owner_name = 'Jade Chocolates LLC';,"SELECT T1.`date`, T1.risk_category, T1.description, T2.name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.owner_name = 'Jade Chocolates LLC'"
food_inspection,"Provide the names, risk categories and descriptions for the eateries with violation type ID of 103111.",eateries refer to business_id;,"SELECT T2.name, T1.risk_category, T1.description FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.violation_type_id = '103111'"
food_inspection,"Among violations on 3rd June, 2014, describe any 5 names, located cities and tax codes of the eateries with high risk category.","eateries with high risk category refer to business_id where risk_category = 'High Risk'; 3rd June, 2014 refers to date = '2014-06-03';","SELECT DISTINCT T2.name, T2.city, T2.tax_code FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.risk_category = 'High Risk' AND T1.`date` = '2014-06-03' LIMIT 5"
food_inspection,What was the inspection type when El Aji Peruvian Restaurant got highest inspection score?,El Aji Peruvian Restaurant is the name of the business; highest inspection score refers to MAX(score);,SELECT T1.type FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.name = 'El Aji Peruvian Restaurant' ORDER BY T1.score DESC LIMIT 1
food_inspection,Who were the owners of eateries which had highest health hazard by improper cooking time or temperatures?,owners of eateries refer to owner_name; highest health hazard by improper cooking time or temperatures refers to risk_category = 'High Risk' and description = 'Improper cooking time or temperatures';,SELECT T2.owner_name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.risk_category = 'High Risk' AND T1.description = 'Improper cooking time or temperatures'
food_inspection,"List the eateries' names and addresses which had reinspection on 2nd February, 2015.","eateries which had reinspection on 2nd February, 2015 refer to business_id where date = '2015-02-02' and type = 'Reinspection/Followup';","SELECT T2.name, T2.address FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.`date` = '2015-02-02' AND T1.type = 'Reinspection/Followup'"
food_inspection,List the names and business certificates of the eateries which got inspection score under 50.,eateries which got inspection score under 50 refer to business_id where score < 50;,"SELECT T2.name, T2.business_id FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.score < 50"
food_inspection,"How many of the businesses are located at 1825 POST St #223, San Francisco?","1825 POST St #223 refers to address = '1825 POST St #223', San Francisco is the name of the city;",SELECT COUNT(business_id) FROM businesses WHERE address = '1825 POST St #223' AND city = 'SAN FRANCISCO'
food_inspection,List down the owner's name with a zip code 94104.,zip code 94104 refers to owner_zip = '94104';,SELECT DISTINCT owner_name FROM businesses WHERE owner_zip = '94104'
food_inspection,What is the total number of businesses with a tax code H25?,,SELECT COUNT(tax_code) FROM businesses WHERE tax_code = 'H25'
food_inspection,"In the violations in 2014, how many of them have a low risk category?",in 2014 refers to year(date) = 2014; risk_category = 'Low Risk';,"SELECT COUNT(risk_category) FROM violations WHERE STRFTIME('%Y', `date`) = '2014' AND risk_category = 'Low Risk'"
food_inspection,"Give the business ID and risk category of the business owned by San Francisco Madeleine, Inc.","business owned by San Francisco Madeleine, Inc. refers to business_id where owner_name = 'San Francisco Madeleine, Inc.';","SELECT DISTINCT T2.business_id, T1.risk_category FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.owner_name = 'San Francisco Madeleine, Inc.'"
food_inspection,List owner's name of businesses with a 100 score.,owner's name of businesses refers to owner_name;,SELECT DISTINCT T2.owner_name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.score = 100
food_inspection,"Among the businesses within the postal code 94117, what is total number of businesses with a high risk category?",businesses with a high risk category refer to business_id where risk_category = 'High Risk';,SELECT COUNT(DISTINCT T2.business_id) FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.postal_code = 94117 AND T1.risk_category = 'High Risk'
food_inspection,"Among the businesses with score that ranges from 70 to 80, list their violation type ID and risk category.",businesses with score that ranges from 70 to 80 refer to business_id where score between 80 and 90;,"SELECT DISTINCT T1.violation_type_id, T1.risk_category FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id INNER JOIN inspections AS T3 ON T2.business_id = T3.business_id WHERE T3.score BETWEEN 70 AND 80"
food_inspection,"List the tax code and inspection type of the business named ""Rue Lepic"".","""Rue Lepic"" is the name of the business;","SELECT DISTINCT T3.tax_code, T2.type FROM violations AS T1 INNER JOIN inspections AS T2 ON T1.business_id = T2.business_id INNER JOIN businesses AS T3 ON T2.business_id = T3.business_id WHERE T3.name = 'Rue Lepic'"
food_inspection,"In businesses that violates 103157 on May 27, 2016 , what is the name of the business that has an unscheduled inspection?",businesses that violates 103157 refer to business_id where violation_type_id = 103157; date = '2016-05-27'; unscheduled inspection refers to type = 'Routine - Unscheduled';,SELECT DISTINCT T3.name FROM violations AS T1 INNER JOIN inspections AS T2 ON T1.business_id = T2.business_id INNER JOIN businesses AS T3 ON T2.business_id = T3.business_id WHERE T1.`date` = '2016-05-27' AND T1.violation_type_id = 103157 AND T2.type = 'Routine - Unscheduled'
food_inspection,Who is the owner of the business that has a high risk violation of 103109 and described as unclean or unsanitary food contact surfaces?,owner refers to owner_name; high risk violation of 103109 and described as unclean or unsanitary food contact surfaces refers to risk_category = 'High Risk' where violation_type_id = 103109 and description = 'Unclean or unsanitary food contact surfaces';,SELECT DISTINCT T2.owner_name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.risk_category = 'High Risk' AND T1.violation_type_id = 103109 AND T1.description = 'Unclean or unsanitary food contact surfaces'
food_inspection,"Among the owners from Cameron Park, what is the business name of the business with a score of 100?",Cameron Park is a name of city;,SELECT DISTINCT T2.name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.owner_city = 'Cameron Park' AND T1.score = 100
food_inspection,"List the violation type ID of business with business ID from 30 to 50 and located at 747 IRVING St, San Francisco.",business ID from 30 to 50 refers to business_id between 30 and 50; address = '747 IRVING St'; city = 'San Francisco';,SELECT DISTINCT T1.violation_type_id FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.business_id BETWEEN 30 AND 50 AND T2.address = '747 IRVING St' AND T2.city = 'San Francisco'
food_inspection,"What is the owner's name of the of the business that violates 103156 on June 12, 2014?","business that violates 103156 on June 12, 2014 refers to business_id where violation_type_id = 103156 and date = '2014-06-12';",SELECT DISTINCT T2.owner_name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.violation_type_id = 103156 AND T1.`date` = '2014-06-12'
food_inspection,"In businesses with an owner address 500 California St, 2nd Floor of Silicon Valley, list the type of inspection of the business with the highest score.",the highest score MAX(score); Silicon Valley is located in 'SAN FRANCISCO';,"SELECT T1.type FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.owner_address = '500 California St, 2nd Floor' AND T2.owner_city = 'SAN FRANCISCO' ORDER BY T1.score DESC LIMIT 1"
food_inspection,"Among the violations in 2016, how many of them have unscheduled inspections?",unscheduled inspections refer to type = 'Routine - Unschedule'; year(date) = 2016;,"SELECT COUNT(T2.business_id) FROM violations AS T1 INNER JOIN inspections AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) = '2016' AND T2.type = 'Routine - Unscheduled'"
food_inspection,List the business' name and risk category of businesses with a score greater than the 80% of average score of all businesses.,"score greater than the 80% of average score of all businesses refers to score > MULTIPLY(0.8, avg(score) from inspections);","SELECT DISTINCT T1.name, T3.risk_category FROM businesses AS T1 INNER JOIN inspections AS T2 ON T1.business_id = T2.business_id INNER JOIN violations AS T3 ON T1.business_id = T3.business_id WHERE T2.score > 0.8 * ( SELECT AVG(score) FROM inspections )"
food_inspection,"In businesses with a score lower than 95 and located around the postal code of 94110, what is the percentage of businesses with a risk category of low risk?","DIVIDE(COUNT(business_id where risk_category = 'Low Risk', score < 95 and postal_code = 94110), COUNT(business_id where score < 95 and postal_code = 94110)) as percentage;",SELECT CAST(SUM(CASE WHEN T1.risk_category = 'Low Risk' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.risk_category) FROM violations AS T1 INNER JOIN inspections AS T2 ON T1.business_id = T2.business_id INNER JOIN businesses AS T3 ON T2.business_id = T3.business_id WHERE T2.score < 95 AND T3.postal_code = 94110
craftbeer,Which distinct state makes beer that has the least amount of bitterness?,,"SELECT DISTINCT T2.state, T1.ibu FROM beers AS T1 INNER JOIN breweries AS T2 ON T1.brewery_id = T2.id WHERE T1.ibu IS NOT NULL AND T1.ibu = ( SELECT MIN(ibu) FROM beers )"
craftbeer,Where in New York can you locate the brewery that makes the bitterest beer? List both the brewery's name and the name of the city.,"The more IBU, the more bitter the beer is, bitterest means highest IBU.","SELECT T2.name, T2.city FROM beers AS T1 INNER JOIN breweries AS T2 ON T1.brewery_id = T2.id WHERE T2.state = 'NY' ORDER BY T1.ibu DESC LIMIT 1"
craftbeer,What is the average alcohol content per 12-ounce beer bottle produced by Boston Beer Company?,,SELECT AVG(T1.abv) FROM beers AS T1 INNER JOIN breweries AS T2 ON T1.brewery_id = T2.id WHERE T2.name = 'Boston Beer Company' AND T1.ounces = 12
craftbeer,"Of all the beer styles produced by Stevens Point Brewery, how many percent do they allot for American Adjunct Lager?",Percent allotted = count(American Adjunct Lager beer styles) / count(styles) * 100%,"SELECT CAST(SUM(IIF(T1.style = 'American Adjunct Lager', 1, 0)) AS REAL) * 100 / COUNT(T1.brewery_id) FROM beers AS T1 INNER JOIN breweries AS T2 ON T1.brewery_id = T2.id WHERE T2.name = 'Stevens Point Brewery'"
craftbeer,"Which city and state produces the most and least bitter beer, and what is the difference in bitterness between the two? List also the names of the beer.","The more IBU, the more bitter the beer is, most bitter means highest IBU; The less IBU, the less bitter the beer is, least bitter means lowest IBU","SELECT T1.state, T1.city, T2.name, T2.ibu FROM breweries AS T1 INNER JOIN beers AS T2 ON T1.id = T2.brewery_id GROUP BY T1.state, T1.city, T2.name, T2.ibu HAVING MAX(ibu) AND MIN(ibu) LIMIT 2"
craftbeer,"When compared to the total number of breweries in the US producing American Blonde Ale, how many in the state of Wisconsin produces American Blonde Ale? Indicate your answer in percentage (%).",Percentage of the state of Wisconsin produces American Blonde Ale could be computed by count(breweries in Wisconsin producing American Blonde Ale) / count(all breweries),"SELECT CAST(SUM(IIF(T2.state = 'WI', 1, 0)) AS REAL) * 100 / COUNT(T1.id) FROM beers AS T1 INNER JOIN breweries AS T2 ON T1.brewery_id = T2.id WHERE T1.style = 'American Blonde Ale'"
cookbook,What is the title of the recipe that is most likely to gain weight?,most likely to gain weight refers to MAX(total_fat),SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id ORDER BY T2.total_fat DESC LIMIT 1
cookbook,"What is the unsaturated fat content in the recipe ""Raspberry Chiffon Pie""?","Raspberry Chiffon Pie refers to title; unsaturated fat refers to SUBTRACT(total_fat, sat_fat)",SELECT T2.total_fat - T2.sat_fat FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Raspberry Chiffon Pie'
cookbook,Please list the titles of all the recipes that are salt/sodium-free.,salt/sodium-free refers to sodium < 5,SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T2.sodium < 5
cookbook,"Please list the titles of all the recipes that may lead to constipation, feeling sick or stomach pain.","may lead to constipation, feeling sick or stomach pain refers to iron > 20",SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T2.iron > 20
cookbook,"Which recipe is more beneficial in wound healing, ""Raspberry Chiffon Pie"" or ""Fresh Apricot Bavarian""?",Raspberry Chiffon Pie and Fresh Apricot Bavarian are title; vitamin_c is higher refers to MAX(vitamin_c),"SELECT DISTINCT CASE WHEN CASE WHEN T2.title = 'Raspberry Chiffon Pie' THEN T1.vitamin_c END > CASE WHEN T2.title = 'Fresh Apricot Bavarian' THEN T1.vitamin_c END THEN 'Raspberry Chiffon Pie' ELSE 'Fresh Apricot Bavarian' END AS ""vitamin_c is higher"" FROM Nutrition T1 INNER JOIN Recipe T2 ON T2.recipe_id = T1.recipe_id"
cookbook,"Among the recipes that take more than 10 minutes to prepare, what is the title of the one with the most calories?",more than 10 minutes to prepare refers to prep_min > 10; the most calories refers to MAX(calories),SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.prep_min > 10 ORDER BY T2.calories DESC LIMIT 1
cookbook,"How many calories does the recipe ""Raspberry Chiffon Pie"" contain?",Raspberry Chiffon Pie refers to title,SELECT T2.calories FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Raspberry Chiffon Pie'
cookbook,"Is the ingredient ""graham cracker crumbs"" optional in the recipe ""Raspberry Chiffon Pie""?",'graham cracker crumbs' is a name of an ingredient; 'Raspberry Chiffon Pie' refers to title,SELECT T2.optional FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Raspberry Chiffon Pie' AND T3.name = 'graham cracker crumbs'
cookbook,"How many ingredients must be rationed in the recipe ""Raspberry Chiffon Pie""?",Raspberry Chiffon Pie refers to title; ingredient must be rationed refers to max_qty = min_qty,SELECT COUNT(*) FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Raspberry Chiffon Pie' AND T2.max_qty = T2.min_qty
cookbook,"Please list the names of all the ingredients needed for the recipe ""Raspberry Chiffon Pie"" that do not need preprocessing.",Raspberry Chiffon Pie refers to title; do not need preprocessing refers to preparation IS NULL,SELECT T3.name FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Raspberry Chiffon Pie' AND T2.preparation IS NULL
cookbook,"How many recipes include the ingredient ""graham cracker crumbs""?",'graham cracker crumbs' is a name of an ingredient,SELECT COUNT(*) FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T1.name = 'graham cracker crumbs'
cookbook,"At least how many cups of graham cracker crumbs does the recipe ""Raspberry Chiffon Pie"" need?",'graham cracker crumbs' is a name of an ingredient; 'Raspberry Chiffon Pie' refers to title,SELECT T2.min_qty FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Raspberry Chiffon Pie' AND T3.name = 'graham cracker crumbs'
cookbook,"How many calories from fat are there in the recipe ""Raspberry Chiffon Pie""?","calories from fat refers to MULTIPLY(calories, pcnt_cal_fat)||'%; Raspberry Chiffon Pie refers to title",SELECT T2.calories * T2.pcnt_cal_fat FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Raspberry Chiffon Pie'
cookbook,"How many calories on average does a recipe that comes from ""Produce for Better Health Foundation and 5 a Day"" contain?","Produce for Better Health Foundation and 5 a Day is a source of recipe; calculation = DIVIDE(SUM(calories), COUNT(recipe_id))",SELECT AVG(T2.calories) FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.source = 'Produce for Better Health Foundation and 5 a Day'
cookbook,How many calories does the turkey tenderloin bundles recipe have?,turkey tenderloin refers to title,SELECT T2.calories FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Turkey Tenderloin Bundles'
cookbook,How many cups of 1% lowfat milk should be added to no.1436 recipe?,1% lowfat milk is a name of an ingredient; no.1436 recipe refers to recipe_id = 1436; max_qty = min_qty,SELECT COUNT(*) FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T1.name = '1% lowfat milk' AND T2.unit = 'cup(s)' AND T2.recipe_id = 1436
cookbook,Which recipe in the database contains the most total fat? Give its title.,the most total fat refers to MAX(total_fat),SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id ORDER BY T2.total_fat DESC LIMIT 1
cookbook,How many times do seedless red grapes appear in the recipes?,seedless red grapes is a name of an ingredient,SELECT COUNT(*) FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T1.name = 'seedless red grapes'
cookbook,State the name of the optional ingredient of no.1397 recipe.,no.1397 recipe refers to recipe_id = 1397; optional ingredient refers to optional = 'TRUE',SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T2.recipe_id = 1397 AND T2.optional = 'TRUE'
cookbook,Which recipe needs the most frozen raspberries in light syrup? State its title.,frozen raspberries in light syrup is a name of an ingredient; max_qty = min_qty,SELECT T1.title FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T3.name = 'frozen raspberries in light syrup' AND T2.max_qty = T2.min_qty
cookbook,Give the name of the most widely used ingredient.,the most widely used ingredient refers to MAX(COUNT(ingredient_id)),SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id GROUP BY T1.name ORDER BY COUNT(T1.name) DESC LIMIT 1
cookbook,What kind of preparation is needed for apple juice to make a raspberry-pear couscous cake?,apple juice is a name of an ingredient; raspberry-pear couscous cake refers to title,SELECT T2.preparation FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Raspberry-Pear Couscous Cake' AND T3.name = 'apple juice'
cookbook,How many cups of almonds do you need for a chicken pocket sandwich?,cups is a unit; almonds is a name of an ingredient; chicken pocket sandwich refers to title,SELECT COUNT(*) FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Chicken Pocket Sandwich' AND T3.name = 'almonds' AND T2.unit = 'cup(s)'
cookbook,Name the recipe with the most Vitamin C.,the most Vitamin C refers to MAX(vitamin_c),SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id ORDER BY T2.vitamin_c DESC LIMIT 1
cookbook,How much Vitamin A is in Sherry beef?,Sherry beef refers to title = 'Sherried Beef',SELECT T2.vitamin_a FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Sherried Beef'
cookbook,State the title of the recipe with most kinds of ingredients.,the most kinds of ingredients refers to MAX(COUNT(recipe_id)),SELECT T1.title FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id GROUP BY T1.title ORDER BY COUNT(title) DESC LIMIT 1
cookbook,How many times is the sodium content in Lasagne-Spinach Spirals to Beef and Spinach Pita Pockets?,"sodium is a name of an ingredient; calculation = DIVIDE(SUM(title = 'Lasagne-Spinach Spirals' THEN sodium), SUM(title = 'Beef and Spinach Pita Pockets' THEN sodium))",SELECT CAST(SUM(CASE WHEN T1.title = 'Lasagne-Spinach Spirals' THEN T2.sodium ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.title = 'Beef and Spinach Pita Pockets' THEN T2.sodium ELSE 0 END) FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id
cookbook,What is the average calorie count for all recipes using coarsely ground black pepper?,coarsely ground black pepper is a name of an ingredient; calculation = AVG(calories),SELECT AVG(T3.calories) FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T2.ingredient_id = T1.ingredient_id INNER JOIN Nutrition AS T3 ON T3.recipe_id = T2.recipe_id WHERE T1.name = 'coarsely ground black pepper'
cookbook,What are the names of the recipes that will cause stomach pain?,cause stomach pain refers to iron > 20,SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T2.iron > 20
cookbook,How many ingredients are there in Apricot Yogurt Parfaits?,Apricot Yogurt Parfaits refers to title,SELECT COUNT(*) FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Apricot Yogurt Parfaits'
cookbook,What are the names of the ingredients that need to be cook in beef broth?,'cook in beef broth' refers to a preparation,SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T2.preparation = 'cooked in beef broth'
cookbook,How many ingredients are there in the recipe that is best in helping your body's natural defence against illness and infection?,best in helping your body's natural defence against illness and infection refers to MAX(vitamin_a);,SELECT COUNT(*) FROM Nutrition AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.vitamin_a > 0
cookbook,What are the names of the top 5 recipes that are best for wound healing?,names of the recipes refers to title; best for wound healing refers to MAX(vitamin_c),SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id ORDER BY T2.vitamin_c DESC LIMIT 5
cookbook,Which ingredient appeared the least in recipes?,ingredient appeared the least in recipes refers to MIN(ingredient_id),SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id GROUP BY T2.ingredient_id ORDER BY COUNT(T2.ingredient_id) ASC LIMIT 1
cookbook,How many baking product ingredients are there in the No-Bake Chocolate Cheesecake?,baking product is a category; No-Bake Chocolate Cheesecake refers to title;,SELECT COUNT(*) FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T3.category = 'baking products' AND T1.title = 'No-Bake Chocolate Cheesecake'
cookbook,List all the ingredients for Strawberry Sorbet.,Strawberry Sorbet refers to title,SELECT T3.name FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Strawberry Sorbet'
cookbook,What are the optional ingredients for Warm Chinese Chicken Salad?,optional refers to optional = 'TRUE'; Warm Chinese Chicken Salad refers to title,SELECT T3.name FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Warm Chinese Chicken Salad' AND T2.optional = 'TRUE'
cookbook,"Among the recipes with alcohol content over 10, which recipe takes the longest to prepare?",with alcohol content over 10 refers to alcohol > 10; takes the longest to prepare refers to MAX(prep_min),SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T2.alcohol > 10 ORDER BY T1.prep_min DESC LIMIT 1
cookbook,How many servings does the recipe with the highest unsaturated fat have?,"with the highest unsaturated fat refers MAX(SUBTRACT(total_fat, sat_fat))",SELECT COUNT(T1.title) FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id ORDER BY T2.total_fat - T2.sat_fat DESC LIMIT 1
cookbook,"Among the recipes whose source is the National Potato Board, which recipe has the highest calories?",the National Potato Board is a source; the highest calories refers to MAX(calories),SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.source = 'National Potato Board' ORDER BY T2.calories DESC LIMIT 1
cookbook,Which recipe has the highest number of ingredients? Calculate the said recipe's total time of cooking.,"the highest number of ingredients refers to MAX(ingredient_id); total time refers to recipe_id, total time of cooking refers to TOTAL(prep_min, cook_min, stnd_min)","SELECT T2.recipe_id, T1.prep_min + T1.cook_min + T1.stnd_min FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id GROUP BY T2.recipe_id ORDER BY COUNT(T2.ingredient_id) DESC LIMIT 1"
cookbook,Which ingredient appeared the most in recipes? Calculate its amount of appearance in percentage.,"ingredient appeared the most in recipes refers to MAX(COUNT(ingredient_id)); calculation = MULTIPLY(DIVIDE(COUNT(MAX(ingredient_id)), COUNT(ingredient_id)), 100)","SELECT T1.name, CAST(COUNT(T2.ingredient_id) AS FLOAT) * 100 / ( SELECT COUNT(T2.ingredient_id) FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T2.ingredient_id = T1.ingredient_id ) AS ""percentage"" FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T2.ingredient_id = T1.ingredient_id GROUP BY T2.ingredient_id ORDER BY COUNT(T2.ingredient_id) DESC LIMIT 1"
cookbook,Provide the title and total time of the recipe which has the highest possibility of gaining weight.,"the highest possibility of gaining weight refers to MAX(total_fat); total time refers to recipe_id, total time refers to TOTAL(prep_min, cook_min, stnd_min)","SELECT T1.title, T1.prep_min + T1.cook_min + T1.stnd_min FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id ORDER BY T2.total_fat DESC LIMIT 1"
cookbook,Which recipes contain almond extract?,almond extract is a name of an ingredient,SELECT T1.title FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T3.name = 'almond extract'
cookbook,List the ingredients in Tomato-Cucumber Relish.,Tomato-Cucumber Relish refers to title,SELECT T3.name FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Tomato-Cucumber Relish'
cookbook,How many ingredients are needed to prepare Idaho Potato Supreme?,Idaho Potato Supreme refers to title,SELECT COUNT(*) FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Idaho Potato Supreme'
cookbook,Provide the ingredients that are rationed in the recipe with the highest carbohydrate content.,the highest carbohydrate content refers to MAX(carbo),SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id INNER JOIN Nutrition AS T3 ON T3.recipe_id = T2.recipe_id WHERE T2.max_qty = T2.min_qty ORDER BY T3.carbo DESC LIMIT 1
cookbook,Name the recipes which can lead to constipation.,can lead to constipation refers to iron > 20,SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T2.iron > 20
cookbook,Describe the ingredients in the recipe with the highest vitamin that helps vision in dim light.,the highest vitamin that helps vision in dim light refers to MAX(vitamin_a),SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id INNER JOIN Nutrition AS T3 ON T3.recipe_id = T2.recipe_id ORDER BY T3.vitamin_a DESC LIMIT 1
cookbook,Provide the ingredients and maximum quantities of the recipe which can serve 7 people.,can serve 7 people refers to servings = 7,"SELECT T3.name, T2.max_qty FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.servings = 7"
cookbook,"Among the recipes from The California Tree Fruit Agreement, calculate the percentage of sodium-free recipes.","The California Tree Fruit Agreement is a source; calculation = MULTIPLY(DIVIDE(COUNT(sodium BETWEEN 0 AND 5 THEN recipe_id), COUNT(recipe_id)), 100)",SELECT CAST(SUM(CASE WHEN T2.sodium < 5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.source = 'The California Tree Fruit Agreement'
cookbook,List the ingredients which measure in slices.,slices refers to unit = 'slice(s)',SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T2.unit = 'slice(s)'
cookbook,How many recipes can be made with canned dairy?,canned dairy is a category,SELECT COUNT(*) FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T1.category = 'canned dairy'
cookbook,Provide the title and total time of the recipe which can be made with only lima beans.,"total time refers to total time refers to TOTAL(prep_min, cook_min, stnd_min); lima beans is a name of an ingredient","SELECT T1.title, T1.prep_min + T1.cook_min + T1.stnd_min FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T3.name = 'lima beans'"
cookbook,"Among the recipes with sea bass, how many percent of recipes can serve 10 people and above?","sea bass is a name of an ingredient; can serve 10 people and above refers to servings > = 10; calculation = MULTIPLY(DIVIDE(COUNT(servings > = 10 THEN recipe_id)), COUNT(recipe_id), 100)",SELECT CAST(SUM(CASE WHEN T1.servings >= 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T3.name = 'sea bass steak'
cookbook,How much fat does the Raspberry Chiffon Pie have?,Raspberry Chiffon Pie refers to title,SELECT T2.total_fat FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Raspberry Chiffon Pie'
cookbook,What is the percentage calories protein of Raspberry Chiffon Pie?,Raspberry Chiffon Pie refers title; percentage calories protein refers to pcnt_cal_prot,SELECT pcnt_cal_prot FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Raspberry Chiffon Pie'
cookbook,How many ingredients are required to make the Raspberry Chiffon Pie?,Raspberry Chiffon Pie refer to title,SELECT COUNT(*) FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Raspberry Chiffon Pie'
cookbook,List the names of alcohol free recipes.,alcohol free refers to alcohol = 0,SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T2.alcohol = 0
cookbook,What is the average vitamin C amount of all cakes?,average vitamin C refers to AVG(vitamin_c); all cakes refers to title LIKE '%cake%',SELECT AVG(T1.vitamin_c) FROM Nutrition AS T1 INNER JOIN Recipe AS T2 ON T2.recipe_id = T1.recipe_id WHERE T2.title LIKE '%cake%'
cookbook,How many dairy recipes can serve more than 10 people?,dairy recipes refers to category = 'dairy'; serve more than 10 people refers to servings > 10,SELECT COUNT(*) FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T3.category = 'dairy' AND T1.servings > 10
cookbook,List the names of recipes that can lead to constipation.,lead to constipation refers to iron > 20,SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T2.iron > 20
cookbook,Which recipe has the highest calories?,the highest calories refers to MAX(calories),SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id ORDER BY T2.calories DESC LIMIT 1
cookbook,How many recipes are non-dairy?,"non-dairy refers to category NOT LIKE '%dairy""",SELECT COUNT(T2.recipe_id) FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T2.ingredient_id = T1.ingredient_id INNER JOIN Nutrition AS T3 ON T3.recipe_id = T2.recipe_id WHERE T1.category NOT LIKE '%dairy%'
cookbook,List all the ingredients of Apricot Yogurt Parfaits.,Apricot Yogurt Parfaits refers to title,"SELECT T3.name, T3.category FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Apricot Yogurt Parfaits'"
cookbook,Identify recipes with different maximum and minimum quantities.,maximum quantities refers to max_qty; minimum quantities refers to max_qty <> min_qty,SELECT T1.title FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id WHERE T2.max_qty <> T2.min_qty
cookbook,What ingredients does the longest cooking time recipe have?,the longest cooking time refers to MAX(cook_min),SELECT T3.name FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id ORDER BY T1.cook_min DESC LIMIT 1
cookbook,Calculate the percentage of recipes with no cholesterol included and have a cooking time less than 20 minutes among all recipes.,"no cholesterol refers to cholestrl = 0; cooking time less than 20 minutes refers to cook_min < 20; calculation = MULTIPLY(DIVIDE(COUNT(cholestrl = 0 THEN recipe_id), COUNT(recipe_id)), 100)",SELECT CAST(SUM(CASE WHEN T1.cook_min < 20 AND T2.cholestrl = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id
cookbook,"Among all recipes containing cheese, what is the percentage of recipes with calories greater than 200?","cheese is a category; calories greater than 200 refers to calories > 200; calculation = MULTIPLY(DIVIDE(COUNT(calories > 200 THEN recipe_id), COUNT(recipe_id)), 100)",SELECT CAST(SUM(CASE WHEN T4.calories > 200 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id INNER JOIN Nutrition AS T4 ON T4.recipe_id = T1.recipe_id WHERE T3.category = 'cheese'
human_resources,Which employee has the highest salary? Please give his or her full name.,"the highest salary refers to MAX(salary); full name = firstname, lastname","SELECT firstname, lastname FROM employee ORDER BY salary DESC LIMIT 1"
human_resources,How many emplyees have a good job performance?,good job performance refers to performance = 'Good',SELECT COUNT(*) FROM employee WHERE performance = 'Good'
human_resources,"Please list the social security numbers of the male employees with a salary of over $70,000 a year.","social security numbers refers to ssn; male employees refers to gender = 'M'; salary of over $70,000 a year refers to salary > '70000'","SELECT ssn FROM employee WHERE gender = 'M' AND CAST(REPLACE(SUBSTR(salary, 4), ',', '') AS REAL) > 70000"
human_resources,What is the required education for the position of regional manager?,required education refers to educationrequired; position of regional manager refers to  positiontitle = 'Regional Manager',SELECT educationrequired FROM position WHERE positiontitle = 'Regional Manager'
human_resources,"Which position has a lower minimum salary, Account Representative or Trainee?",position of Account Representative refers to positiontitle = 'Account Representative'; position of Trainee refers to positiontitle = 'Trainee'; lower minimum salary refers to MIN(minsalary),SELECT positiontitle FROM position WHERE positiontitle = 'Account Representative' OR positiontitle = 'Trainee' ORDER BY minsalary ASC LIMIT 1
human_resources,In which city's office does Sandy Adams work at?,"Sandy Adams is the fullname of an employee; full name = firstname, lastname; city refers to locationcity",SELECT T2.locationcity FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T1.lastname = 'Adams' AND T1.firstname = 'Sandy'
human_resources,"Among the employees working at the office in New York, how many of them have a good job performance?","Sandy Adams is the fullname of an employee; full name = firstname, lastname; New York refers to state = 'NY'; good job performance refers to performance = 'Good';",SELECT COUNT(*) FROM employee AS T1 INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T2.state = 'NY' AND T1.performance = 'Good'
human_resources,What is the office phone number of the location at which Sandy Adams works?,"Sandy Adams is the fullname of an employee; full name = firstname, lastname;",SELECT T2.officephone FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T1.lastname = 'Adams' AND T1.firstname = 'Sandy'
human_resources,How many male employees work at the address 450 Peachtree Rd?,male employees refers to gender = 'M',SELECT COUNT(*) FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T2.address = '450 Peachtree Rd' AND T1.gender = 'M'
human_resources,How many employees work as an Account Representative?,work as an Account Representative refers to positiontitle = 'Account Representative',SELECT COUNT(*) FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Account Representative'
human_resources,How much higher is James Johnson's salary from the minimum salary of his title?,"James Johnson is the fullname of an employee; full name = firstname, lastname; minimum salary refers to minsalary; calculation = SUBTRACT(salary, minsalary)","SELECT CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL) - CAST(REPLACE(SUBSTR(T2.minsalary, 4), ',', '') AS REAL) AS diff FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.lastname = 'Johnson' AND T1.firstname = 'James'"
human_resources,"Among the employees who are Trainees, how many of them work in New York?",Trainees is a position title; California refers to state = 'NY',SELECT COUNT(*) FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID INNER JOIN position AS T3  ON T3.positionID = T1.positionID WHERE T3.positiontitle = 'Trainee' AND T2.state = 'NY'
human_resources,Please list the full names of the employees who are working as a Trainee.,"full name = firstname, lastname; trainees is a position title","SELECT T1.firstname, T1.lastname FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Trainee'"
human_resources,"Which employee's job position requires a higher education level, Jose Rodriguez or Sandy Adams?","Jose Rodriguez AND Sandy Adams are the fullname of employee; full name = firstname, lastname; higher education level refers to MAX(educationrequired)","SELECT T1.firstname, T1.lastname FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE (T1.lastname = 'Adams' AND T1.firstname = 'Sandy') OR (T1.lastname = 'Rodriguez' AND T1.firstname = 'Jose') ORDER BY T2.educationrequired DESC LIMIT 1"
human_resources,Please list the zip codes of the offices where all the male employees with a good job performance work at.,male employees refers to gender = 'M'; good job performance refers to performance = 'Good',SELECT T2.zipcode FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T1.gender = 'M' AND T1.performance = 'Good'
human_resources,Please list the social security numbers of all the employees who work in California.,social security numbers refers to ssn; California refers to state = 'CA',SELECT T1.ssn FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T2.state = 'CA'
human_resources,"Among the employees who work as a Trainee, how many of them have a salary of over &20,000 a year?","Trainee is a position title; salary of over 20,000 refers to salary > '20000'","SELECT COUNT(*) FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL) > 20000 AND T2.positiontitle = 'Trainee'"
human_resources,What is the average salary of the employees who work as a Trainee?,"average = DIVIDE( SUM(salary), COUNT(positiontitle) where positiontitle = 'Trainee'; Trainee is a position title","SELECT AVG(CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL)) AS avg FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Trainee'"
human_resources,By what percentage is the average salary of Trainees higher than the minimum salary of this postion?,"AVG(salary); Trainee is a position title; minimum salary refers to minsalary; calculation = DIVIDE(SUBTRACT(AVG(salary), minsalary), minsalary) * 100","SELECT 100 * (AVG(CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL)) - CAST(REPLACE(SUBSTR(T2.minsalary, 4), ',', '') AS REAL)) / CAST(REPLACE(SUBSTR(T2.minsalary, 4), ',', '') AS REAL) AS per FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Trainee'"
human_resources,Give the number of female employees.,number of female employees means COUNT(gender = 'F'),SELECT COUNT(*) FROM employee WHERE gender = 'F'
human_resources,State the name of the city where Jose Rodriguez works.,"Jose Rodriguez is the fullname of an employee; full name = firstname, lastname; name of city refers to locationcity",SELECT T2.locationcity FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T1.firstname = 'Jose' AND T1.lastname = 'Rodriguez'
human_resources,In which state does Emily Wood work?,"Emily Wood is the full name of an employee; full name = firstname, lastname;",SELECT T2.state FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T1.firstname = 'Emily' AND T1.lastname = 'Wood'
human_resources,What is the education required for David Whitehead to reach his current position?,"David Whitehead is the full name of an employee; full name = firstname, lastname",SELECT T2.educationrequired FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.firstname = 'David' AND T1.lastname = 'Whitehead' AND T1.gender = 'M'
human_resources,"How many employees are there in the ""Miami"" office?",Miami office refers to locationcity = 'Miami',SELECT COUNT(*) FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T2.locationcity = 'Miami'
human_resources,"Who is the highest paid employee in ""Boston""? Give the full name.","Boston refers to locationcity = 'Boston'; the highest paid employee refers to MAX(salary); full name = firstname, lastname","SELECT T1.firstname, T1.lastname FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T2.locationcity = 'Boston' ORDER BY T1.salary DESC LIMIT 1"
human_resources,Who is the employee in “New York City” with a good performance? Give the social security number of the employee.,New York City refers to locationcity = 'New York City'; good performance refers to performance = 'Good'; social security number refers to ssn,"SELECT T1.firstname, T1.lastname, T1.ssn FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T2.locationcity = 'New York City' AND T1.performance = 'Good'"
human_resources,"How many ""account representatives"" are there in Chicago with a good performance?",account representatives is a position title; Chicago refers to locationcity = 'Chicago'; good performance refers to performance = 'Good',SELECT COUNT(*) FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID INNER JOIN position AS T3  ON T3.positionID = T1.positionID WHERE T3.positiontitle = 'Account Representative' AND T2.locationcity = 'Chicago' AND T1.performance = 'Good'
human_resources,What is Kenneth Charles's position title?,"Kenneth Charles is the full name of an employee; full name = firstname, lastname",SELECT T2.positiontitle FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.firstname = 'Kenneth' AND T1.lastname = 'Charles'
human_resources,Give the full address of the office of the highest paid manager.,the highest paid refers to MAX(salary); manager is a position title,SELECT T2.address FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID INNER JOIN position AS T3  ON T3.positionID = T1.positionID WHERE T3.positiontitle = 'Manager' ORDER BY T1.salary DESC LIMIT 1
human_resources,What is the max salary for 'Tracy Coulter' if he/she stays on his/her position?,"Tracy Coulter is the full name of an employee; full name = firstname, lastname",SELECT T2.maxsalary FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.firstname = 'Tracy' AND T1.lastname = 'Coulter'
human_resources,"If Jose Rodriguez tried his best, how many percentage can his salary raise without changing his position?","Jose Rodriguez is the full name of an employee; full name = firstname, lastname; calculation = DIVIDE(SUBTRACT(maxsalary, salary), salary) * 100","SELECT 100 * (CAST(REPLACE(SUBSTR(T2.maxsalary, 4), ',', '') AS REAL) - CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL)) / CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL) AS per FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.firstname = 'Jose' AND T1.lastname = 'Rodriguez'"
human_resources,"How many employees whose performance is poor have a salary of over $50,000 per year?","performance is poor refers to performance = 'Poor'; salary of over $50,000 refers to salary > '50000'","SELECT COUNT(*) FROM employee WHERE performance = 'Poor' AND CAST(REPLACE(SUBSTR(salary, 4), ',', '') AS REAL) > 50000"
human_resources,Who is the employee with the highest salary? Specify his/her full name.,"the highest salary refers to MAX(salary); full name = firstname, lastname","SELECT firstname, lastname FROM employee WHERE CAST(REPLACE(SUBSTR(salary, 4), ',', '') AS REAL) = ( SELECT MAX(CAST(REPLACE(SUBSTR(salary, 4), ',', '') AS REAL)) FROM employee )"
human_resources,"How many positions have a maximum salary of no more than US$1000,000?","maximum salary of no more than US$1000,000 refers to maxsalary < '100000';","SELECT COUNT(*) FROM position WHERE CAST(REPLACE(SUBSTR(maxsalary, 4), ',', '') AS REAL) < 100000"
human_resources,How much is the salary of the first ever employee that was hired?,first-ever employee that was hired refers to MIN(hiredate),SELECT salary FROM employee ORDER BY hiredate ASC LIMIT 1
human_resources,How much is the minimum salary given to the position with the most complex work?,most complex work refers to MAX(educationrequired); minimum salary refers to minsalary,SELECT minsalary FROM position ORDER BY educationrequired DESC LIMIT 1
human_resources,What is the full office location address where most of the employees work at?,"full office location address = address, locationcity, state, zipcode; location where most employees work at refers to MAX(locationID)","SELECT T2.address, T2.locationcity, T2.state, T2.zipcode FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID GROUP BY T2.address, T2.locationcity, T2.state, T2.zipcode ORDER BY COUNT(*) DESC LIMIT 1"
human_resources,What is the average salary of all employees with a 2 year degree position?,"2 year degree refers to educationrequired = '2 year degree'; calculation = DIVIDE(SUM(salary), COUNT(positiontitle))","SELECT AVG(CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL)) FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T2.educationrequired = '2 year degree'"
human_resources,How many male Regional Managers are there?,male refers to gender = 'M'; Regional Managers is a position title,SELECT COUNT(*) FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Regional Manager' AND T1.gender = 'M'
human_resources,Which position has the highest amount of poor performing employees?,poor performing employees refers to performance = 'Poor'; the highest amount of employees refers to MAX(positiontitle),SELECT T2.positiontitle FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.performance = 'Poor' GROUP BY T2.positiontitle ORDER BY COUNT(T2.positiontitle) DESC LIMIT 1
human_resources,Which position has the highest number of female employees with a 2 year degree?,2 year degree refers to educationrequired = '2 year degree'; female refers to gender = 'F'; the highest number of employees refers to MAX(positionID),SELECT T2.positiontitle FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T2.educationrequired = '2 year degree' AND T1.gender = 'F' GROUP BY T2.positiontitle ORDER BY COUNT(T2.positiontitle) DESC LIMIT 1
human_resources,How many Account Representatives are there in Illinois with satisfying performance?,Account Representatives is a position title; satisfying performance mostly refers togood performance,SELECT COUNT(*) FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID INNER JOIN position AS T3  ON T3.positionID = T1.positionID WHERE T3.positiontitle = 'Account Representative' AND T1.performance = 'Good' AND T2.state = 'IL'
human_resources,What is the average salary of the worst performing managers?,the worst performing refers to performance = 'Poor'; manager is a positiontitle; average salary refers to AVG(salary),"SELECT AVG(CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL)) FROM employee AS T1 INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.performance = 'Poor' AND T2.positiontitle = 'Manager'"
human_resources,In which state can you find the highest amount of good performing Account Representatives?,good performing refers to performance = 'Good'; Account Representatives is a positiontitle; highest amount of employee refers to MAX(positionID);,SELECT T2.state FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID INNER JOIN position AS T3  ON T3.positionID = T1.positionID WHERE T3.positiontitle = 'Account Representative' AND T1.performance = 'Good' GROUP BY T2.state ORDER BY COUNT(T2.state) DESC LIMIT 1
human_resources,Mention the employee's full name and performance status who got the lowest in salary per year.,"full name = firstname, lastname; the lowest salary refers to MIN(salary)","SELECT firstname, lastname, performance FROM employee ORDER BY salary ASC LIMIT 1"
human_resources,List the location cities in the Western states.,Western states refers to state = 'CO' OR state = 'UT' OR state = 'CA'; location cities refers to locationcity,"SELECT locationcity FROM location WHERE state IN ('CO', 'UT', 'CA')"
human_resources,Which city and address has zip code of above 90000?,zip code of above 90000 refers to zipcode > 90000; city refers to locationcity,"SELECT locationcity, address FROM location WHERE zipcode > 90000"
human_resources,Which positions are suitable with 4 years degree education?,4 years degree education refers to educationrequired = '4 year degree'; positions refers to positiontitle,SELECT positiontitle FROM position WHERE educationrequired = '4 year degree'
human_resources,"What is the maximum salary of position ""Trainer""?",maximum salary refers to maxsalary; Trainee is a positiontitle,SELECT maxsalary FROM position WHERE positiontitle = 'Trainee'
human_resources,List the full name and social security number of the account representative with average performance.,"full name = firstname, lastname; social security number refers to ssn; account representative is a position title; average performance refers to performance = 'Average'","SELECT T1.firstname, T1.lastname, T1.ssn FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.performance = 'Average'"
human_resources,When was Emily Wood hired? Mention her position and salary.,"Emily Wood is the full name of an employee; full name = firstname, lastname; when was she hired refers to hiredate","SELECT T1.hiredate, T2.positiontitle, T1.salary FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.firstname = 'Emily' AND T1.lastname = 'Wood'"
human_resources,What are the maximum and minimum salary range and position title of Bill Marlin?,"Bill Marlin is the full name of an employee; full name = firstname, lastname; maximum salary refers to maxsalary; minimum salary refers to minsalary","SELECT T2.maxsalary, T2.minsalary, T2.positiontitle FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.firstname = 'Bill' AND T1.lastname = 'Marlin'"
human_resources,"List the full names, gender and positions who's location is in New York city.","full name = firstname, lastname; New York city refers to locationcity = 'New York City'","SELECT T1.firstname, T1.lastname, T1.gender, T3.positiontitle FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID INNER JOIN position AS T3  ON T3.positionID = T1.positionID WHERE T2.locationcity = 'New York City'"
human_resources,"Mention the full name, hired date and performance status of the employee whose location is in Utah state.","full name = firstname, lastname; Utah refers to state = 'UT'","SELECT T1.firstname, T1.lastname, T1.hiredate, T1.performance FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T2.state = 'UT'"
human_resources,"Among the employees with poor performance, provide the managers' full names, location city, address and its zip code.","poor performance refers to performance = 'Poor'; full name = firstname, lastname; managers is a position title","SELECT T1.firstname, T1.lastname, T2.locationcity, T2.address, T2.zipcode FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID INNER JOIN position AS T3  ON T3.positionID = T1.positionID WHERE T3.positiontitle = 'Manager' AND T1.performance = 'Poor'"
human_resources,What is the education required to be account representative? Mention account representative full name and salary who got poor in performance status.,"account representative is a position title; full name = firstname, lastname; poor performance refers to performance = 'Poor'","SELECT T2.educationrequired, T1.firstname, T1.lastname, T1.salary FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.performance = 'Poor' AND T2.positiontitle = 'Account Representative'"
human_resources,"Write down the full name, performance status and located city of the employee who's social security number is ""767-74-7373"".","full name = firstname, lastname; ssn = '767-74-7373'","SELECT T1.firstname, T1.lastname, T2.state, T2.locationcity FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T1.ssn = '767-74-7373'"
human_resources,"Describe the employees' full name, positions, located city and office phone number within Colorado state.","full name = firstname, lastname; Colorado state refers to state = 'CO'; positions refers to positiontitle; located city refers to locationcity; office phone number refers to officephone;","SELECT T1.firstname, T1.lastname, T3.positiontitle, T2.locationcity, T2.officephone FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID INNER JOIN position AS T3  ON T3.positionID = T1.positionID WHERE T2.state = 'CO'"
human_resources,"Calculate the monthly average salary of the employee with highest salary. Mention his name, position title and location city.","highest salary refers to MAX(salary); name = firstname, lastname; calculation = DIVIDE(MAX(salary), 12)","SELECT SUM(CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL)) / 12 AS avg, T1.firstname, T1.lastname , T2.positiontitle, T3.locationcity FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID INNER JOIN location AS T3  ON T1.locationID = T3.locationID WHERE CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL) = ( SELECT MAX(CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL)) FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID INNER JOIN location AS T3  ON T1.locationID = T3.locationID )"
bike_share_1,Which trip had the longest duration? State the start and end station.,start station refers to start_station_name; end station refers to end_station_name;,"SELECT start_station_name, end_station_name FROM trip WHERE duration = ( SELECT MAX(duration) FROM trip )"
bike_share_1,What is the percentage of the trip were done by a subscriber?,"subscription_type = 'Subscriber'; DIVIDE(COUNT(id where subscription_type = 'Subscriber'), COUNT(id)) as percentage;",SELECT CAST(COUNT(subscription_type) AS REAL) * 100 / ( SELECT COUNT(subscription_type) FROM trip ) FROM trip WHERE subscription_type = 'Subscriber'
bike_share_1,State the final station of bike id 13. Which city was it at?,final station refers to end_station_name where MAX(end_date);,"SELECT T2.end_station_id, T1.city FROM station AS T1 INNER JOIN trip AS T2 ON T1.name = T2.end_station_name WHERE T2.bike_id = 13 ORDER BY T2.end_date DESC LIMIT 1"
bike_share_1,Name all the trips where the bike was borrowed and returned on a different day. State the city where the bike was returned.,the bike was borrowed and returned on a different day implies that start_date and end_date are not equal to each other; where the bike was returned refers to end_station_name;,"SELECT DISTINCT T1.city FROM station AS T1 INNER JOIN trip AS T2 ON T2.start_station_name = T1.name WHERE SUBSTR(CAST(T2.start_date AS TEXT), INSTR(T2.start_date, '/') + 1) - SUBSTR(CAST(T2.start_date AS TEXT), INSTR(T2.start_date, ' ') - 5) <> SUBSTR(CAST(T2.end_date AS TEXT), INSTR(T2.end_date, '/') + 1) - SUBSTR(CAST(T2.end_date AS TEXT), INSTR(T2.end_date, ' ') - 5)"
bike_share_1,Which is the station where no bike could not be borrowed form on the 2013/11/03 02:01:01? State the location of the station.,"Latitude and longitude coordinates can be used to indicate a location, where latitude refers to lat longtitude refer to long; bikes_available = 0 means no bike can be borrowed; 3/11/2013 02:01:01 refers to time;","SELECT T1.name, T1.long FROM station AS T1 INNER JOIN status AS T2 ON T2.station_id = T1.id WHERE T2.time = '2013/11/03 02:01:01' AND T2.bikes_available = 0"
bike_share_1,Name the station and city with the most borrowed bike.,the station with the most borrowed bikes refers to MAX(start_station);,"SELECT T2.start_station_name, T1.city FROM station AS T1 INNER JOIN trip AS T2 ON T2.start_station_name = T1.name GROUP BY T2.start_station_name ORDER BY COUNT(T2.start_station_name) DESC LIMIT 1"
bike_share_1,What was the hottest temperature on the day of trip ID 4080?,the hottest temperature refers to max_temperature_f;,"SELECT MAX(T2.max_temperature_f) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2.date = SUBSTR(CAST(T1.start_date AS TEXT), 1, INSTR(T1.start_date, ' ') - 1) WHERE T1.id = 4080"
bike_share_1,At what date and time did San Jose Diridon Caltrain Station have most bikes available.,San Jose Diridon Caltrain Station is the name of the station; most bikes available refers to MAX(bikes_available);,SELECT T2.time FROM station AS T1 INNER JOIN status AS T2 ON T2.station_id = T1.id WHERE T1.name = 'San Jose Diridon Caltrain Station' AND T2.bikes_available = ( SELECT MAX(T2.bikes_available) FROM station AS T1 INNER JOIN status AS T2 ON T2.station_id = T1.id WHERE T1.name = 'San Jose Diridon Caltrain Station' )
bike_share_1,Name all the trip on the days when it rained. State the duration of the trip,events = 'Rain';,"SELECT T1.id, T1.duration FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2.date = SUBSTR(CAST(T1.start_date AS TEXT), 1, INSTR(T1.start_date, ' ') - 1) WHERE T2.events LIKE '%Rain%' OR T2.events LIKE '%rain%'"
bike_share_1,"List all trips where bikes were returned at location 37.331415, -121.8932. State the date the bike was borrowed.",37.331415 and -121.8932 are latitude (lat) and longitude (long) coordinates indicating location; returned at refers to end_station_name; the date the bike was borrowed refers to start_date;,"SELECT T2.end_station_name, T2.start_date FROM station AS T1 INNER JOIN trip AS T2 ON T2.end_station_name = T1.name WHERE T1.lat = 37.331415 AND T1.long = -121.8932"
bike_share_1,"Among the trips in August 2013, how many bikes were borrowed from Redwood City.",Redwood City is the name of the city; trips in August 2013 refers to start_date like '8%2013%';,SELECT COUNT(T2.start_date) FROM station AS T1 INNER JOIN trip AS T2 ON T2.start_station_name = T1.name WHERE T2.start_date LIKE '8/%/2013%' AND T1.city = 'Redwood City'
bike_share_1,"For all trips which took less 5 minutes, state the station name where the bike were borrowed and returned. Indicate mean temperature of the day.",less than 5 minutes refers to duration<300 in seconds; the station where the bike was borrowed refers to start_station_name; the station where the bike was returned refers to end_station_name; mean temperature refers to min_temperature_f;,"SELECT T1.start_station_name, T1.end_station_name, T2.mean_temperature_f FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T1.duration < 300"
bike_share_1,"Among all the trips, which day had the most bikes borrowed? What was the average coldest temperature on that day?","which day had the most bikes borrowed refers to MAX(start_date); the average coldest temperature can be computed as DIVIDE(SUM(min_temperature_f), COUNT(min_temperature_f));","SELECT T2.date, AVG(T2.min_temperature_f) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code GROUP BY T2.date ORDER BY COUNT(T1.start_date) DESC LIMIT 1"
bike_share_1,Calculate the average usage of each bike in the third quarter of year 2013. Find the average wind direction within the same period.,"the third quarter of year 2013 implies 3 month interval, including July, August, and September of 2013 and refers to date; the average usage of each bike = DIVIDE(SUM(duration), COUNT(bike_id)); the average wind direction = DIVIDE(SUM(wind_dir_degrees), COUNT(date));","SELECT AVG(T1.duration), AVG(T2.wind_dir_degrees) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE SUBSTR(CAST(T2.date AS TEXT), 1, INSTR(T2.date, '/') - 1) IN ('7', '8', '9') AND SUBSTR(CAST(T2.date AS TEXT), -4) = '2013'"
bike_share_1,How many bike stations were installed in San Jose in 2014? Indicate the names of the stations.,San Jose is the name of the city; 2014 refers to installation_date between '1/1/2014' and '12/31/2014';,"SELECT SUM(CASE WHEN city = 'San Jose' AND SUBSTR(installation_date, -4) = '2014' THEN 1 ELSE 0 END) FROM station UNION SELECT name FROM station WHERE city = 'San Jose' AND SUBSTR(installation_date, -4) = '2014'"
bike_share_1,"What is the longest trip duration that started and ended August 29, 2013?","started and ended August 29, 2013 refers to start_date = '8/29/2013' and end_date = '8/29/2013';",SELECT MAX(duration) FROM trip WHERE start_date LIKE '8/29/2013%' AND end_date LIKE '8/29/2013%'
bike_share_1,How long did it take for bike id 426 to reach 2nd at South Park from Market at 4th on 8/29/2013? Indicate the duration in minutes.,"duration in minutes refers to DIVIDE(duration, 60 seconds); 2nd at South Park refers to end_station_name; Market at 4th refers to start_station_name; start_date = '8/29/2013'; end_date = '8/29/2013';",SELECT CAST(duration AS REAL) / 60  FROM trip WHERE bike_id = 426 AND end_station_name = '2nd at South Park' AND start_station_name = 'Market at 4th' AND start_date LIKE '8/29/2013%' AND end_date LIKE '8/29/2013%'
bike_share_1,"On 8/29/2013, who took the longest to arrive in California Ave Caltrain Station from University and Emerson? Indicate the bike id.",start_date = '8/29/2013'; end_date = '8/29/2013'; end_station_name = 'California Ave Caltrain Station'; start_station_name = 'University and Emerson'; who took the longest to arrive refers to MAX(duration);,SELECT bike_id FROM trip WHERE start_date LIKE '8/29/2013%' AND end_date LIKE '8/29/2013%' AND end_station_name = 'California Ave Caltrain Station' AND start_station_name = 'University and Emerson' AND duration = ( SELECT MAX(duration) FROM trip WHERE start_date LIKE '8/29/2013%' AND end_date LIKE '8/29/2013%' AND end_station_name = 'California Ave Caltrain Station' AND start_station_name = 'University and Emerson' )
bike_share_1,How many stations in San Francico can hold more than 20 bikes?,San Francico is the name of the city; can hold more than 20 bikes implies dock's capacity and refers to dock_count≥20;,SELECT SUM(CASE WHEN city = 'San Francisco' AND dock_count > 20 THEN 1 ELSE 0 END) FROM station
bike_share_1,"When was the hottest temperature recorded? If there are multiple dates with the hottest temperature, indicate all of the dates.",the hottest temperature refers to max_temperature_f;,"SELECT max_temperature_f, date FROM weather WHERE max_temperature_f = ( SELECT MAX(max_temperature_f) FROM weather WHERE max_temperature_f IS NOT NULL AND max_temperature_f IS NOT '' )"
bike_share_1,What is the maximum dew point in Fahrenheit degree on 7/15/2014 in the area with a zip code of 94301?,the maximum dew point in Fahrenheit degree refers to max_dew_point_f; date = '7/15/2014';,SELECT DISTINCT CASE WHEN date = '7/15/2014' AND zip_code = 94301 THEN max_dew_point_f END FROM weather
bike_share_1,Which year experienced the most rain?,events = 'Rain'; year refers to YEAR(date);,"SELECT SUBSTR(CAST(date AS TEXT), -4) FROM weather GROUP BY SUBSTR(CAST(date AS TEXT), -4) ORDER BY SUM(CASE WHEN events LIKE '%Rain%' OR events LIKE '%rain%' THEN 1 ELSE 0 END) DESC LIMIT 1"
bike_share_1,"On 10/20/2014, what is the duration of the fastest trip which started from the station with latitude and longitudes of 37.789625 and -122.400811, respectively? Indicate the bike id.",lat = '37.789625' and long = '-122.400811' are latitude and longitude coordinates indicating location; started from the station refers to start_station_name; start_date = '10/20/2014'; duration of the fastest trip refers to MIN(duration);,"SELECT MIN(T2.duration), T2.bike_id FROM station AS T1 INNER JOIN trip AS T2 ON T2.start_station_name = T1.name WHERE T2.start_date LIKE '10/20/2014%' AND T1.lat = 37.789625 AND T1.long = -122.400811"
bike_share_1,"Among the subscribers who rented a bike from South Van Ness at Market on 12/1/2013, whose duration was the shortest and to which station was the bike returned to? Indicate South Van Ness's dock count.",South Van Ness at Market refers to start_station_name; subscriber refers to subscription_type; start_date = '12/1/2013'; the shortest duration refers to MIN(duration); which station was the bike returned to refers to end_station_name;,"SELECT MIN(T2.duration), T2.end_station_name, COUNT(T2.start_station_name) FROM station AS T1 INNER JOIN trip AS T2 ON T2.start_station_name = T1.name WHERE T2.start_date LIKE '12/1/2013%' AND T2.start_station_name = 'South Van Ness at Market' AND T2.subscription_type = 'Subscriber'"
bike_share_1,What is the maximum humidity in Powell Street BART when bike 496 was borrowed from the station on 8/29/2013?,Powell Street refers to start_station_name; bike 496 refers to bike_id = '496'; start_date = '8/29/2013';,SELECT T2.max_humidity FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T1.start_date LIKE '8/29/2013%' AND T1.bike_id = 496 AND T1.start_station_name = 'Powell Street BART'
bike_share_1,"Which day in the month of November, 2014 have a foggy weather in the zip code 94301 and in total, how many bikes were borrowed by subscribers from all of the stations in the said day?","day in the month of November, 2014 refers to start_date between '11/1/2014' and '11/30/2014'; foggy weather refers to events = 'Fog'; subscriber refers to subscription_type; all of the stations bikes were borrowed from refer to start_station_name;","SELECT T2.date, COUNT(T1.start_station_name) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.date LIKE '11/%/2014%' AND T2.zip_code = 94301 AND T2.events = 'Fog' AND T1.subscription_type = 'Subscriber'"
bike_share_1,What is the name of the station that is less used by customers who borrow bikes from? Indicate when was the station installed.,less used station where bikes are borrowed from refers to start_station_name which has the least number of customers; subscription_type = 'Customer'; when installed refers to installation_date;,"SELECT T1.start_station_name, T2.installation_date FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.subscription_type = 'Customer' GROUP BY T1.start_station_name ORDER BY COUNT(T1.subscription_type) LIMIT 1"
bike_share_1,"On 11/3/2013, which stations are often empty? Indicate the names of the stations.",time = '11/3/2013'; which stations are empty refers to bikes_available = '0';,SELECT DISTINCT T1.name FROM station AS T1 INNER JOIN status AS T2 ON T2.station_id = T1.id WHERE T2.bikes_available = 0 AND T2.time LIKE '2013/11/03%'
bike_share_1,What is the average duration of bike trips in the city of Palo Alto?,"DIVIDE(SUM(duration where city = 'Palo Alto'), COUNT(start_station_id));",SELECT AVG(T1.duration) FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.city = 'Palo Alto'
bike_share_1,What is the route that has the longest duration? Indicate the city of where the stations are located.,route implies a course taken in getting from start_station_name to end_station_name; the longest duration refers to MAX(duration);,"SELECT T1.start_station_name, T1.end_station_name, T2.city FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.duration = ( SELECT MAX(T1.duration) FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name )"
bike_share_1,List the name of stations that were installed from 8/5/2013 to 12/31/2013. Indicate their installation date and city name.,from 8/5/2013 to 12/31/2013 refers to installation_date between '8/5/2013' and '12/31/2013';,"SELECT name, installation_date, city FROM station WHERE (SUBSTR(CAST(installation_date AS TEXT), 1, INSTR(installation_date, '/') - 1) = '5' AND SUBSTR(CAST(installation_date AS TEXT), INSTR(installation_date, '/') + 1, -6) >= '8' AND SUBSTR(CAST(installation_date AS TEXT), -4) = '2013') OR (SUBSTR(CAST(installation_date AS TEXT), 1, INSTR(installation_date, '/') - 1) IN ( '6', '7', '8', '9', '10', '11', '12' ) AND SUBSTR(CAST(installation_date AS TEXT), -4) = '2013')"
bike_share_1,What is the average duration of trips which are started at Adobe on Almaden station to Ryland Park?,"trips refer to id; DIVIDE(SUM(duration where start_station_name = 'Adobe on Almaden', end_station_name = 'Ryland Park'), COUNT(id));",SELECT AVG(duration) FROM trip WHERE start_station_name = 'Adobe on Almaden' AND end_station_name = 'Ryland Park'
bike_share_1,Write down the times when there is no available bike to borrow in a station. List down the stations name and location coordinate.,no available bike to borrow refers to bikes_available = 0; latitude and longitude coordinates can be used to indicate a location;,"SELECT T2.time, T1.name, T1.lat, T1.long FROM station AS T1 INNER JOIN status AS T2 ON T2.station_id = T1.id WHERE T2.bikes_available = 0"
bike_share_1,List down the trips in which their start and end station are similar. Give me their trip IDs and location coordinates.,start and end station are similar refers to start_station_name = end_station_name; latitude and longitude coordinates can be used to indicate a location;,"SELECT T1.id, T2.lat, T2.long FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.start_station_name = T1.end_station_name"
bike_share_1,"On 8/29/2013 at 6:14:01 PM, how many bikes were borrowed from San Jose Diridon Caltrain Station?","How many bikes borrowed can be computed as SUBTRACT(SUM(dock_count), bikes_available where name = 'San Jose Diridon Caltrain Station' and time = '2013/08/29 06:14:01');",SELECT SUM(T1.dock_count - T2.bikes_available) FROM station AS T1 INNER JOIN status AS T2 ON T1.id = T2.station_id WHERE T1.name = 'San Jose Diridon Caltrain Station' AND T2.time = '2013/08/29 06:14:01'
bike_share_1,List down the trip IDs when bike no. 10 was used by subscribers and the weather's mean temperature is no less than 62 degress Fahrenheit.,bike no. 10 refers to bike_id = '10'; subscription_type = 'Subscriber'; the weather's mean temperature is no less than 62 degress Fahrenheit refers to mean_temperature_f>62;,SELECT T1.id FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T1.bike_id = 10 AND T2.mean_temperature_f > 62 AND T1.subscription_type = 'Subscriber'
bike_share_1,What were the max gust speed and cloud clover when the customer using bike no. 10 recorded the 386 seconds duration of the trip from MLK Library to San Salvador at 1st?,subscription_type = 'Customer'; duration = '364'; bike no. 10 refers to bike_id = 10; start_station_name = 'San Jose Civic Center'; end_station_name = 'San Jose City Hall';,"SELECT T2.max_gust_speed_mph, T2.cloud_cover FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2.date = SUBSTR(CAST(T1.start_date AS TEXT), 1, INSTR(T1.start_date, ' ') - 1) WHERE T1.bike_id = 10 AND T2.mean_temperature_f > 62 AND T1.subscription_type = 'Customer' AND T1.start_station_name = 'MLK Library' AND T1.end_station_name = 'San Salvador at 1st' AND T1.duration = 386"
bike_share_1,"Among the subscriber, how many of them finished the 2nd at Folsom and Civic Center BART (7th at Market) as their start and end stations respectively for no more than 490 seconds under minimum visibility of 4 miles.",subscription_type = 'Subscriber'; no more than 490 seconds refers to duration<490; start_station_name = '2nd at Folsom'; end_station_name = 'Civic Center BART (7th at Market)'; min_visibility_miles = 4;,SELECT COUNT(T1.id) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T1.subscription_type = 'Subscriber' AND T2.min_visibility_miles = 4 AND T1.duration < 490 AND T1.start_station_name = '2nd at Folsom' AND T1.end_station_name = 'Civic Center BART (7th at Market)'
bike_share_1,How many docks were available at the starting station of trip ID 912900?,,SELECT SUM(T2.docks_available) FROM trip AS T1 INNER JOIN status AS T2 ON T2.station_id = T1.start_station_id WHERE T1.zip_code = 912900
bike_share_1,Please write down the trip IDs which ended on the days when the minimum temperature is less than 45 degrees Fahrenheit.,the minimum temperature is less than 45 degrees Fahrenheit refers to min_temperature_f<45;,SELECT T1.id FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.min_temperature_f < 45
bike_share_1,"In 2014, what is the shortest duration of trips by subscribers which started at 2nd at Folsom and ended in the 5th at Howard stations, and by how much shorter than the average? Give me the minimum temperature, maximum gust speed and weather event on that trip.","the shortest duration refers to MIN(duration); subscription_type = 'Subscriber', start_station_name = '2nd at Folsom', end_station_name = '5th at Howard'; in 2014 refers to time period between start_date = '1/1/2014 0:00' and end_date = '12/31/2014 11:59; Average duration = DIVIDE(SUM(duration), COUNT(id));","SELECT MIN(T1.duration) , MIN(T1.duration) - AVG(T1.duration), T2.min_temperature_f FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T1.start_date = '1/1/2014 0:00' AND T1.end_date = '12/31/2014 11:59' AND T1.start_station_name = '2nd at Folsom' AND T1.end_station_name = '5th at Howard' AND T1.subscription_type = 'Subscriber'"
bike_share_1,Find the average ride time of the bikes that started at Steuart at Market station and ended at Embarcadero at Sansome station in July 2014.,"started at refers to start_station_name; start_station_name = 'Steuart at Market'; ended at refers to end_station_name; end_station_name = 'Embarcadero at Sansome'; rides in July 2004 refers to start_date = '7/1/2014 0:00'AND end_date = '7/31/2014 12:59';average ride time = DIVIDE(SUM(duration), COUNT(id))",SELECT AVG(duration) FROM trip WHERE start_date = '7/1/2014%' AND end_date = '7/31/2014%' AND start_station_name = 'Steuart at Market' AND end_station_name = 'Embarcadero at Sansome'
bike_share_1,What are the average maximum and minimum temperatures in May 2015 when the mean humidity is between 65 and 75?,"average maximum temperature = DIVIDE(SUM(max_temperature_f), COUNT(date)); average minimum temperature = DIVIDE(SUM(min_temperature_f), COUNT(date)); May 2015 refers to date BETWEEN '5/1/2015'AND '5/31/2015';","SELECT AVG(max_temperature_f), AVG(min_temperature_f) FROM weather WHERE date LIKE '5/%/2015' AND mean_humidity BETWEEN 65 AND 75"
bike_share_1,Calculate the difference between the number of customers and the number of subscribers who did the trip in June 2013.,"customer refers to subscription_type = 'Customer'; subscribers refers to subscription_type = 'Subscriber'; difference = SUBTRACT(SUM(subscription_type = 'Subscriber' t), SUM(subscription_type = 'Customer')); trip in June 2013 refers to start_date BETWEEN '6/1/2013 0:00'AND '6/31/2013 12:59';","SELECT SUM(IIF(subscription_type = 'Subscriber', 1, 0)) - SUM(IIF(subscription_type = 'Customer', 1, 0)) FROM trip WHERE start_date LIKE '6/%/2013%'"
bike_share_1,List the days in 2013 when rain and fog occurred together and find the id of bikes borrowed on these days.,in 2013 refers to year(date) = 2013; rain and fog ocurred together refers to events = 'Fog-Rain'; id of bikes refers to biked_id;,"SELECT T2.date, T1.bike_id FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE SUBSTR(CAST(T2.date AS TEXT), -4) = '2013' AND T2.events = 'Fog-Rain'"
bike_share_1,"Find the longest ride on foggy day. What were the mean visibility, mean wind speed, and weather event during that ride? Also, list the coordinates and names of the start and end stations.","foggy day refers to events = 'fog'; longest ride on a foggy day refers to MAX(duration) where events = 'fog'; mean visibility refers to mean_visibility_miles; mean wind speed refers to mean_wind_speed_mph; weather event refers to events; coordinates refers to (lat, long); start station refers to start_station_id; end station refers to end_station_id;","SELECT T3.mean_visibility_miles, T3.mean_wind_speed_mph, T3.events, T1.lat, T1.long , T2.start_station_name, T2.end_station_name FROM station AS T1 INNER JOIN trip AS T2 ON T2.start_station_name = T1.name INNER JOIN weather AS T3 ON T3.zip_code = T2.zip_code WHERE T3.events = 'Fog' ORDER BY T2.duration DESC LIMIT 1"
bike_share_1,"For the rides that started at Market at 10th station and ended at South Van Ness at Market station in August of 2013, which day had the coldest temperature?",started at refers to start_station_name; start_station_name = 'Market at 10th'; ended at refers to end_station_name; end_station_name = 'South Van Ness at Market'; in August of 2013 refers to start_date BETWEEN '8/1/2013 0:00' AND '8/31/2013 12:59'; day that had the coldest temperature refers to MIN(min_temperature_f);,"SELECT T1.start_date FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2.date = SUBSTR(CAST(T1.start_date AS TEXT), 1, INSTR(T1.start_date, ' ') - 1) WHERE T2.date LIKE '8/%/2013' AND T1.start_station_name = 'Market at 10th' AND T1.end_station_name = 'South Van Ness at Market' AND T2.min_temperature_f = ( SELECT MIN(T2.min_temperature_f) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2.date = SUBSTR(CAST(T1.start_date AS TEXT), 1, INSTR(T1.start_date, ' ') - 1) WHERE T2.date LIKE '8/%/2013' AND T1.start_station_name = 'Market at 10th' AND T1.end_station_name = 'South Van Ness at Market' )"
bike_share_1,"Among the rides during the rainy days, which ride was the longest? List the start station, end station, and duration of this ride.",rainy days refers to events = 'rain'; longest ride refers to MAX(duration); start station refers to start_station_name; end station refers to end_station_name; duration of the ride refers to duration;,"SELECT T1.start_station_name, T1.end_station_name, T1.duration FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.events = 'Rain' OR T2.events = 'rain' ORDER BY T1.duration DESC LIMIT 1"
bike_share_1,Find the average ride duration during the rain of more than 0.8 inches.,"rain of more than 0.8 inches refers to events = rain where precipitation_inches>0.8; average ride duration = DIVIDE(SUM(duration), COUNT(duration));",SELECT AVG(T1.duration) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE (T2.events = 'Rain' AND T2.precipitation_inches > 0.8) OR (T2.events = 'rain' AND T2.precipitation_inches > 0.8)
bike_share_1,List the name and city of starting stations which has an above-average duration trips.,"starting stations refers to start_station_name; above average duration trips = DIVIDE(SUM(duration), COUNT(main_trip.id))<duration;","SELECT DISTINCT T1.start_station_name, T2.city FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.duration > ( SELECT AVG(T1.duration) FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name )"
bike_share_1,How many stations in San Francisco are installed in 2014?,stations refers to name; San Francisco refers to city = 'San Francisco'; installed in 2004 refers to installation_date like'%2014';,"SELECT SUM(CASE WHEN city = 'San Francisco' AND SUBSTR(installation_date, -4) = '2014' THEN 1 ELSE 0 END) FROM station"
bike_share_1,"In 2006, how many trips ended at stations in Mountain View?",in 2006 refers to start_date LIKE'%2006%'; ended at station refers to end_station_name; Mountain View refers to city = 'Mountain View';,SELECT COUNT(T2.city) FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.end_station_name WHERE T2.city = 'Mountain View' AND T1.start_date LIKE '%2006%'
bike_share_1,Which trip id had the longest duration and the start station is in Redwood City?,longest duration refers to MAX(duration); start station refers to start_station_name;,SELECT T1.id FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.city = 'Redwood City' AND T1.duration = ( SELECT MAX(T1.duration) FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.city = 'Redwood City' )
bike_share_1,Please list bikes id were used in trips which start station were installed in 2013.,start station refers to start_station_name; installed in 2013 refers to installation_date LIKE '%2013';,SELECT DISTINCT T1.bike_id FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.installation_date LIKE '%2013'
bike_share_1,How many trips which subscription types were Subscriber and ended in San Jose city?,ended in refers to end_station_name;,SELECT COUNT(T1.subscription_type) FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.end_station_name WHERE T1.subscription_type = 'Subscriber' AND T2.city = 'San Jose'
bike_share_1,Which trip had the shortest duration and started at the station that can hold 15 bikes?,shortest duration refers to MIN(duration); started at the station refers to start_station_name; can hold 15 bikes refers to dock_count = 15;,SELECT T1.id FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.dock_count = 15 AND T1.duration = ( SELECT MIN(T1.duration) FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.dock_count = 15 )
bike_share_1,Which year had the most number of trips that started at stations in San Francisco?,started at station refers to start_station_name; San Francisco refers to city = 'San Francisco'; year that had the most number of trips refers to MAX(year(start_date));,"SELECT SUBSTR(CAST(T1.start_date AS TEXT), INSTR(T1.start_date, ' '), -4) FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.city = 'San Francisco' GROUP BY T1.start_station_name ORDER BY COUNT(T1.id) DESC LIMIT 1"
bike_share_1,What is the percentage of trips that started in San Jose and durations were longer than 800 seconds?,"percentage of trips = DIVIDE(COUNT(duration>800), COUNT(duration)) as percentage; San Jose refers to city = 'San Jose'; duration>800;",SELECT CAST(SUM(CASE WHEN T1.duration > 800 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.city = 'San Jose'
bike_share_1,How many trips in 2013 had durations longer than 1000 seconds?,trips in 2013 refers to start_date like'%2013%'; duration>1000;,SELECT COUNT(duration) FROM trip WHERE start_date LIKE '%/%/2013%' AND duration > 1000
bike_share_1,Please calculate the average duration of trips started at South Van Ness at Market in 2015.,"started at refers to start_station_name; start_station_name = 'South Van Ness at Market'; average duration = DIVIDE(SUM(duration), COUNT(duration));",SELECT AVG(duration) FROM trip WHERE start_date LIKE '%2015%' AND start_station_name = 'South Van Ness at Market'
bike_share_1,How many trips which start station and end station are the same?,start station refers to start_station_id; end station refers to end_station_id; start station and end station are the same refers to start_station_id = end_station_id;,"SELECT SUM(IIF(start_station_id = end_station_id, 1, 0)) FROM trip"
bike_share_1,Please list trips id started on the hottest day.,started refers to start_date; the hottest day refers to max_temperature_f;,SELECT T1.id FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code ORDER BY T2.max_temperature_f DESC LIMIT 1
bike_share_1,Which were the trips that started at Mountain View City Hall and ended on a rainy day?,started at refers to start_station_name; start_station_name = 'Mountain View City Hall'; ended on a rainy day refers to end_date where events = 'rain';,SELECT T1.id FROM trip AS T1 INNER JOIN weather AS T2 WHERE T2.events = 'Rain' AND T1.start_station_name = 'Mountain View City Hall'
bike_share_1,What is the average duration of trips that ended on a foggy day?,"ended on a foggy day refers to end_date where events = 'fog'; average duration = DIVIDE(SUM(duration), COUNT(duration));",SELECT AVG(T1.duration) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.events = 'Fog'
bike_share_1,What was duration of the longest trip started on the day that has a maximum wind speed of 30 mph?,longest trip refers to MAX(duration); started on the day refers to start_date; maximum wind speed refers to max_wind_speed_mph; max_wind_speed_mph = 30;,SELECT T1.duration FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.max_wind_Speed_mph = 30 ORDER BY T1.duration DESC LIMIT 1
bike_share_1,Please calculate the average temperature of those trips that started at Market at 4th in 2013.,"started at refers to start_station_name; start station_name = 'Market at 4th'; in 2013 refers to start_date like '%2013%'; temperature refers to mean_temperature_f; average temperature = DIVIDE(SUM(mean_temperature_f), COUNT(mean_temperature_f));","SELECT AVG(T2.mean_temperature_f) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE SUBSTR(CAST(T2.date AS TEXT), -4) = '2013' AND T1.start_station_name = 'Market at 4th'"
bike_share_1,What was the mean humidity of a trip with id 4275?,mean humidity refers to mean_humidity;,SELECT T2.mean_humidity FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T1.id = 4275
bike_share_1,"In 2015, what percentage of trips that had the subscription type was Customer and ended on a rainy day?","in 2015 refers to end_date like '%2015%'; percentage = DIVIDE(COUNT(events = 'Rain'), COUNT(events));","SELECT CAST(SUM(CASE WHEN T2.events = 'Rain' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE SUBSTR(CAST(T2.date AS TEXT), -4) = '2015' AND T1.subscription_type = 'Customer'"
bike_share_1,"How many bike stations are installed after August, 2013 in San Jose?","installed after August, 2013 refers to year(installation_date)>2013; in San Jose refers to city = 'San Jose';","SELECT COUNT(installation_date) FROM station WHERE city = 'San Jose' AND (SUBSTR(CAST(installation_date AS TEXT), 1, INSTR(installation_date, '/') - 1) IN ('8', '9', '10', '11', '12') AND SUBSTR(CAST(installation_date AS TEXT), -4) = '2013') OR SUBSTR(CAST(installation_date AS TEXT), -4) > '2013'"
bike_share_1,What is the mean temperature in Fahrenheit on 8/29/2013 for the area where the zip code is 94107?,mean temperature in Fahrenheit refers to mean_temperature_f; on 8/29/2013 refers to date = '8/29/2013';,"SELECT SUM(IIF(zip_code = 94107 AND date = '8/29/2013', mean_temperature_f, 0)) FROM weather"
bike_share_1,What is the difference between the hottest temperature and the coldest temperature in in Fahrenheit on 8/29/2013 for the area where the zip code is 94107?,"hottest temperature refers to max_temperatutre_f; coldest temperature refers to min_temperature_f; difference = SUBTRACT(max_temperature_f, min_temperature_f); date = '8/29/2013'","SELECT SUM(IIF(zip_code = 94107 AND date = '8/29/2013', max_temperature_f - min_temperature_f, 0)) FROM weather"
bike_share_1,How many bikes can be borrowed in San Jose Diridon Caltrain Station at 12:06:01 on 2013/8/29?,number of bikes that can be borrowed refers to bikes_available; San Jose Diridon Caltrain Station refers to name = 'San Jose Diridon Caltrain Station'; time = '2013/8/29 12:06:01',SELECT T2.bikes_available FROM station AS T1 INNER JOIN status AS T2 ON T1.id = T2.station_id WHERE T1.name = 'San Jose Diridon Caltrain Station' AND T2.time = '2013/08/29 12:06:01'
bike_share_1,In which city's station is a bike borrowed on trip ID4069?,bike is borrowed from refers to start_station_id;,SELECT T2.city FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.id = 4069
bike_share_1,"How many bike trips started on the days in September, 2013 with the hottest temperature over 70 degrees Fahrenheit in the area where the zip code is 94107?","started on the days in September, 2013 refers to date LIKE'9%'AND date LIKE'%2013' hottest temperature over 70 degrees Fahrenheit refers to max_temperature_f>70;",SELECT COUNT(T1.id) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.date LIKE '9/%/2013' AND T2.zip_code = 94107 AND T2.max_temperature_f > 70
bike_share_1,Please list the starting stations of the bike trips made on a day with a max humidity over 80 in 2013 in the area where the zip code is 94107.,starting stations refers to start_station_name; day with a max humidity over 80 refers to max_humidity>80; in 2013 refers to date LIKE'%2013';,"SELECT DISTINCT T1.start_station_name FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE SUBSTR(CAST(T2.date AS TEXT), -4) = '2013' AND T2.zip_code = 94107 AND T2.max_temperature_f > 80"
bike_share_1,"How many trips made by a subscriber started in August, 2013 from a station that can hold more than 20 bikes?",subscriber refers to subscription_type = 'Subscriber'; in August 2013 refers to start_date LIKE'8%' AND start_date LIKE'%2013%'; station that can hold more than 20 bikes refers to dock_count>20;,SELECT COUNT(T2.id) FROM station AS T1 INNER JOIN trip AS T2 ON T1.id = T2.start_station_id WHERE T2.subscription_type = 'Subscriber' AND T2.start_date LIKE '8/%/2013%' AND T1.dock_count > 20
bike_share_1,What is the location coordinates of the bike station from which the bike for the trip that last the longest was borrowed?,"location coordinates refers to (lat, long); bike that was borrowed the longest refers to MAX(duration);","SELECT T2.lat, T2.long FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.duration = ( SELECT MAX(T1.duration) FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name )"
bike_share_1,How many docks were left at the end station for trip ID4069?,end station refers to end_station_id; docks that were left refers to docks_available;,SELECT SUM(T2.docks_available) FROM trip AS T1 INNER JOIN status AS T2 ON T2.station_id = T1.end_station_id WHERE T1.ID = 4069
bike_share_1,"Among the bike trips started on the days with a fog in 2013, how many of those trips started from the station ""2nd at Townsend""?",started on the days with a fog refers to start_date where events = 'fog'; in 2013 refers to date LIKE '%2013'; started from station refers to start_station_name; start_station_name = '2nd at Townsend';,SELECT COUNT(T1.start_station_name) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.date LIKE '%2013%' AND T2.events = 'Fog' AND T1.start_station_name = '2nd at Townsend' AND T2.zip_code = 94107
bike_share_1,What is the longest duration for a bike trip starting on a day with a fog in 2013?,longest duration refers to MAX(duration); starting on a day with a fog refers to start_date where events = 'fog'; in 2013 refers to date LIKE '%2013';,SELECT MAX(T1.duration) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.date LIKE '%2013%' AND T2.events = 'Fog' AND T2.zip_code = 94107
bike_share_1,When was the bike station from which the bike was borrowed on trip ID4069 installed?,bike was borrowed from refers to start_station_id; when the bike station was installed refers to installation_date;,SELECT T2.installation_date FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.id = 4069
bike_share_1,How many trips with a bike borrowed from the stations in San Francisco were made by a subscriber?,bike was borrowed from refers to start_station_id; San Francisco refers to city = 'San Francisco'; subscriber refers to subscription_type = 'Subscriber';,SELECT COUNT(T1.id) FROM trip AS T1 INNER JOIN station AS T2 ON T2.ID = T1.start_station_id WHERE T2.city = 'San Francisco' AND T1.subscription_type = 'Subscriber'
bike_share_1,"On the day with the hottest temperature ever in 2014, how many bike trips started from the station 2nd at Folsom?",hottest temperature refers to max_temperatutre_f; in 2014 refers to date LIKE '%2014'; started from station refers to start_station_name; start_station_name = '2nd at Folsom';,SELECT COUNT(T1.start_station_name) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.date LIKE '%2014%' AND T2.zip_code = 94107 AND T1.start_station_name = '2nd at Folsom' ORDER BY T2.max_temperature_f DESC LIMIT 1
bike_share_1,What is the average duration of a bike trip made on the day with the hottest temperature ever in 2014?,"average duration = DIVIDE(SUM(duration), COUNT(id)); hottest temperature refers to max_temperature_f; in 2014 refers to date LIKE '%2014';",SELECT AVG(T1.duration) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.date LIKE '%2014%' AND T1.start_station_name = '2nd at Folsom' AND T2.max_temperature_f = ( SELECT max_temperature_f FROM weather ORDER BY max_temperature_f DESC LIMIT 1 )
bike_share_1,List out all end stations for a bicycle that were making a trip starting from 2nd at South Park station? Only retain the unique value.,end station refers to end_station_name; starting from refers to start_station_name; start_station_name = '2nd at South Park';,SELECT DISTINCT end_station_name FROM trip WHERE start_station_name = '2nd at South Park'
bike_share_1,How many rainy days were recorded in Mountain View?,rainy days refers to events = 'rain'; Mountain View refers to zip_code = 94041;,"SELECT SUM(IIF(zip_code = 94041 AND events = 'Rain', 1, 0)) FROM weather"
bike_share_1,What is the total number of bikes that can be hold in Redwood City before 2014.,total number of bikes that can be hold = MAX(dock_count); before 2014 refers to year(installation_date)<2014;,"SELECT SUM(CASE WHEN city = 'Redwood City' AND SUBSTR(installation_date, -4) < '2014' THEN dock_count ELSE 0 END) NUM FROM station"
bike_share_1,What is the longest trip duration according? Convert the it to number of days.,"longest trip duration refers to MAX(duration); days conversion = DIVIDE(duration, 86400);","SELECT MAX(duration), CAST(MAX(duration) AS REAL) / 86400 FROM trip"
bike_share_1,Convert all temperature recorded at San Francisco city during August 2013 into degree Celsius.,"temperature refers to max_temperature_f; March 2013 refers to date like '3/%/2013'; conversion to Celcius = DIVIDE(SUBTRACT(max_temperature_f, 32), 1.800) as Celsius1; DIVIDE(SUBTRACT(mean_temperature_f, 32), 1.800) as Celsius2; DIVIDE(SUBTRACT(min_temperature_f, 32), 1.800) as Celcius3;","SELECT (max_temperature_f - 32) / 1.8000 , (mean_temperature_f - 32) / 1.8000 , (min_temperature_f - 32) / 1.8000 FROM weather WHERE SUBSTR(CAST(date AS TEXT), 1, INSTR(date, '/') - 1) = '8' AND SUBSTR(CAST(date AS TEXT), -4) = '2013' AND zip_code = 94107"
bike_share_1,What is the ratio for subscriber to customer given that the starting and the ending stations is 2nd at South Park?,subscriber refers to subscription_type = 'Subscriber'; customer refers to subscription_type = 'customer';starting station refers to start_station_name; ending station refers to end_statio_name; start_station_name = '2nd at South Park' AND end_station_name = '2nd at South Park',"SELECT CAST(SUM(IIF(subscription_type = 'Subscriber', 1, 0)) AS REAL) / SUM(IIF(subscription_type = 'Customer', 1, 0)) FROM trip WHERE start_station_name = '2nd at South Park' AND end_station_name = '2nd at South Park'"
bike_share_1,Are all stations with zip code 94107 located in San Francisco city?,station refers to name;,SELECT DISTINCT T2.city FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.zip_code = 94107
bike_share_1,List out all stations name that having a mean temperature 20 degree Celsius in year 2014.,"mean temperature refers to mean_temperature_f; mean temperature of 20 degree Celsius refers to DIVIDE(SUBTRACT(mean_temperature_f, 32), 1.8) = 20; in 2014 refers to date LIKE'%2015%';","SELECT DISTINCT T2.start_station_name, T2.end_station_name FROM weather AS T1 INNER JOIN trip AS T2 ON T1.zip_code = T2.zip_code WHERE T1.date LIKE '%2014' AND T1.mean_temperature_f = 20 * 1.8 + 32"
bike_share_1,How many bicycle trip were made within San Jose city during August 2013?,during August 2013 refers to start_date like '8/%/2013%';,SELECT COUNT(T2.id) FROM station AS T1 INNER JOIN trip AS T2 ON T2.start_station_name = T1.name WHERE T1.city = 'San Jose' AND T2.start_date LIKE '8/%/2013%' AND T2.start_station_name LIKE 'San Jose%' AND T2.end_station_name LIKE 'San Jose%'
bike_share_1,"Is there any intercity trip were made during 2014? If yes, list out the city name for the start and end station.",intercity trip refers to start_station_name! = end_station_name; during 2014 refers to start_date like '%2014%'; start station refers to start_station_name; end station refers to end_station_name;,"SELECT T1.start_station_name, T1.end_station_name FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.start_date LIKE '%/%/2014%' AND T1.start_station_name != T1.end_station_name"
bike_share_1,"Does the bike with Id number 16 making any intercity trip? If yes, calculate the total travel duration during all the intercity trip. Convert the duration to hour.","intercity trip refers to start_station_name! = end_station_name; total travel duration to hour = DIVIDE(SUM(duration), 3600) AS hour;","SELECT T1.end_station_name, T2.city, CAST(SUM(T1.duration) AS REAL) / 3600 FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.bike_id = 16 AND T1.start_station_name != T1.end_station_name"
bike_share_1,What is the ratio of customer to subscriber that making a trip inside Mountain View city?,"customer refers to subscription_type = 'customer'; subscriber refers to subscription_type = 'subscriber'; ratio = MULTIPLY(DIVIDE(COUNT(subscription_type = 'Customer'), COUNT(subscription_type = 'Subscriber'). 1.0)) AS ratio;",SELECT CAST(SUM(CASE WHEN T1.subscription_type = 'Customer' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.subscription_type = 'Subscriber' THEN 1 ELSE 0 END) FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.city = 'Mountain View'
bike_share_1,What is the total trip duration made within Palo Alto city? Convert the duration to hour.,"total trip duration to hour = DIVIDE(SUM(duration), 3600);",SELECT CAST(SUM(T1.duration) AS REAL) / 3600 FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.city = 'Palo Alto'
bike_share_1,Which bicycle is the least used bike. Check if the start and end station are from the same city and calculate the total duration travelled by the bicycle in hours for a trip made within the same city.,"least used bike refers to bike_id with MIN(COUNT(main_trip.id)); start station refers to start_station_name; end station refers to end_station_name; total duration in hour = DIVIDE(duration, 3600) AS hour;","SELECT T2.bike_id, T2.start_station_name, T2.end_station_name, T1.city , CAST(T2.duration AS REAL) / 3600 FROM station AS T1 INNER JOIN trip AS T2 ON T1.name = T2.start_station_name GROUP BY T2.bike_id ORDER BY COUNT(T2.id) DESC LIMIT 1"
bike_share_1,Count the number of subscribers who started their trips in Market at 4th.,subsscriber refers to subscription_type = subscriber; started their trips in refers to start_station_name; start_station_name = 'Market at 4th';,SELECT COUNT(CASE WHEN subscription_type = 'Subscriber' AND start_station_name = 'Market at 4th' THEN id END) FROM trip
bike_share_1,List the names of the stations within Mountain View that were installed on 12/31/2013.,Mountain View refers to city = 'Mountain View'; installed on 12/31/2013 refers to installation_date = '12/31/2013';,SELECT name FROM station WHERE installation_date = '12/31/2013' AND city = 'Mountain View'
bike_share_1,Which city is Townsend at 7th Station located and how many bikes could it hold?,Townsend at 7th Station refers to city = 'Townsend at 7th Station'; number of bikes a station can hold refers to SUM(dock_count);,"SELECT city, SUM(dock_count) FROM station WHERE name = 'Townsend at 7th'"
bike_share_1,How many bikes could Evelyn Park and Ride hold and how many users who started on that station are subscribers?,number of bikes a station can hold refers to SUM(dock_count); Evelyn Park and Ride refers to name = 'Evelyn Park and Ride'; started on the station refers to start_station_name; subscribers refers to subscription_type = 'subscriber';,"SELECT SUM(T2.dock_count), COUNT(T1.subscription_type) FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.name = 'Evelyn Park and Ride' AND T1.start_station_name = T2.name AND T1.subscription_type = 'Subscriber'"
bike_share_1,How many subscribers are in the zip code of 94301 and what is the hottest temperature recorded on that zip code?,hottest temperature refers to MAX(max_temperature_f);,"SELECT COUNT(T3.zip_code), T3.max_temperature_f FROM trip AS T2 INNER JOIN weather AS T3 ON T3.zip_code = T2.zip_code WHERE T3.zip_code = 94301 AND T2.subscription_type = 'Subscriber' ORDER BY T3.max_temperature_f DESC LIMIT 1"
bike_share_1,What is the percentage ration of customers to subscribers that started their trips within the city of San Francisco?,"customer refers to subscription_type = 'customer'; subscriber refers to subscription_type = 'subscriber'; started their trips within refers to start_station_id; percentage ratio = DIVIDE(SUM(subscription_type = 'Customer'), SUM(subscription_type = 'Subscriber')) as percentage;",SELECT CAST(SUM(CASE WHEN T1.subscription_type = 'Customer' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.subscription_type = 'Subscriber' THEN 1 ELSE 0 END) FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.city = 'San Francisco'
bike_share_1,What is the average duration of trips for the starting station of Santa Clara at Almaden and what is the latitude and longitude of this station?,"average duration = DIVIDE(SUM(duration), COUNT(id)); starting station refers to start_station_name; start_station_name = 'Santa Clara at Almaden'; latitude refers to lat; longitude refers to long;","SELECT AVG(T1.duration), T2.lat, T2.long FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name LEFT JOIN station AS T3 ON T3.name = T1.end_station_name WHERE T1.start_station_name = 'Santa Clara at Almaden'"
bike_share_1,What is the shortest trip made starting from Franklin at Maple and what is the maximum wind speed at that date?,shortest trip refers to MIN(duration); starting from refers to start_station_name; start_station_name = 'Franklin at Maple'; maximum wind speed refers to max_wind_Speed_mph;,"SELECT MIN(T1.duration), MAX(T2.max_wind_Speed_mph) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T1.start_station_name = 'Franklin at Maple' AND T2.date = '9/4/2013'"
bike_share_1,How many bikes have been borrowed at San Jose Diridon Caltrain Station on the date and time of 10/20/2013 8:11:01 AM and indicate the station's coordinates.,"number of bikes that have been borrowed refers to SUM(bikes_available); San Jose Diridon Caltrain Station refers to name = 'San Jose Diridon Caltrain Station'; station's coordinates refers to (lat, long);","SELECT SUM(T2.bikes_available), T1.long, T1.lat FROM station AS T1 INNER JOIN status AS T2 ON T2.station_id = T1.id WHERE T2.time = '2013/10/20 8:11:01' AND T1.name = 'San Jose Diridon Caltrain Station'"
bike_share_1,Name the city of the station that trip ID 585842 borrowed a bike and indicate when that station was first installed.,when the station was first installed refers to installation_date;,"SELECT T2.city, T2.installation_date FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.id = 585842"
bike_share_1,How many stations were installed on the date of 8/16/2013 and how many users on those stations are classified as a customer?,installed on refers to installation_date; installation_date = '8/16/2013'; customers refers to subscription_type = customers;,"SELECT COUNT(T1.name) , SUM(CASE WHEN T2.subscription_type = 'Customer' THEN 1 ELSE 0 END) FROM station AS T1 INNER JOIN trip AS T2 ON T2.start_station_name = T1.name WHERE T1.installation_date = '8/16/2013' AND T2.subscription_type = 'Customer'"
bike_share_1,Which station did the user who started at Market at 4th station ended their trip at the time of 12:45:00 PM and the date of 8/29/2013 and what is the location coordinates of the ending station?,"started at refers to start_station_name; start_station_name = 'Market at 4th'; location coordinates refers to (lat, long);","SELECT T1.name, T1.lat, T1.long FROM station AS T1 INNER JOIN trip AS T2 ON T2.end_station_name = T1.name WHERE T2.start_station_name = 'Market at 4th' AND T2.end_date = '8/29/2013 12:45'"
bike_share_1,How many subscribers have ended their trip at MLK Library and how many docks does that station have?,subscribers refers to subscription_type = 'subscribers'; ended their trip at refers to end_station_name; end_station_name = 'MLK Library'; number of docks a station have refers to dock_count;,"SELECT COUNT(T1.id), T2.dock_count FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.end_station_name = 'MLK Library' AND T1.subscription_type = 'Subscriber' AND T2.dock_count = 19"
bike_share_1,What is the average coldest temperature for the zip code of 94301 and what stations are within the zip code? Include the latitude and longitude as well.,coldest temperature refers to min_temperature_f; average coldest temperature refers = AVG(min_temperature_f); stations refers to name; latitude refers to lat; longitude refers to long;,"SELECT AVG(T3.min_temperature_f), T1.long, T1.lat FROM station AS T1 INNER JOIN trip AS T2 ON T2.start_station_name = T1.name INNER JOIN weather AS T3 ON T3.zip_code = T2.zip_code WHERE T3.zip_code = 94301"
bike_share_1,Calculate the average duration travelled by subscribers that both started and ended their trip in Mountain View City Hall and indicate the date when the station was first installed.,"average duration = DIVIDE(SUM(duration), COUNT(id)); subscribers refers to subscription_type = 'subscriptions'; started and ended their trip at Mountain View City Hall refers to start_station_name = 'Mountain View City Hall' and end_station_name = 'Mountain View City Hall'; when the station was first installed refers to installation_date;","SELECT AVG(T1.duration), T2.installation_date FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.start_station_name = 'Mountain View City Hall' AND T1.subscription_type = 'Subscriber' AND T1.end_station_name = 'Mountain View City Hall'"
movie_3,What is the description of the film ACADEMY DINOSAUR?,"""ACADEMY DINOSAUR"" is the title of film",SELECT description FROM film WHERE title = 'ACADEMY DINOSAUR'
movie_3,How many films have a rental duration of over 6 days?,rental duration of over 6 days refers to rental_duration > 6,SELECT COUNT(film_id) FROM film WHERE rental_duration > 6
movie_3,Please list the titles of the films that are released in 2006 and have a rental rate of $2.99.,released in 2006 refers to release_year = 2006; rental rate of $2.99 refers to rental_rate = 2.99,SELECT title FROM film WHERE release_year = 2006 AND rental_rate = 2.99
movie_3,Which film has the longest duration of film screening? Please give its title.,longest duration of film refers to Max(length),SELECT title FROM film ORDER BY length DESC LIMIT 1
movie_3,"Which film has a higher replacement cost, ACE GOLDFINGER or ACADEMY DINOSAUR?",higher replacement cost refers to Max(replacement_cost); 'ACE GOLDFIINGER' and 'ACADEMY DINOSAUR' are both the title of film,"SELECT title FROM film WHERE title IN ('ACE GOLDFINGER', 'ACADEMY DINOSAUR') ORDER BY replacement_cost DESC LIMIT 1"
movie_3,"Among the films that are released in 2006, how many of them are rated Adults Only in the Motion Picture Association Film Rating?",released in 2006 refers to release_year = 2006; rated Adults Only refers to rating = 'NC-17',SELECT COUNT(film_id) FROM film WHERE rating = 'NC-17' AND release_year = 2006
movie_3,"How many films with the rental rate of $2.99 have the special feature of ""Deleted Scenes""?",rental rate of $2.99 refers to rental_rate = 2.99; film refers to title,SELECT COUNT(film_id) FROM film WHERE rental_rate = 2.99 AND special_features = 'Deleted Scenes'
movie_3,Please list the titles of all the films that have more than 2 special features.,more than 2 special features refers to Count(special_features) > 2,"SELECT title FROM ( SELECT title, COUNT(special_features) AS num FROM film GROUP BY title ) AS T ORDER BY T.num > 2"
movie_3,What is the email address of the staff Jon Stephens?,,SELECT email FROM staff WHERE first_name = 'Jon' AND last_name = 'Stephens'
movie_3,Please give the full names of all the active staff.,"full name refers to first_name, last_name; active staff refers to active = 1","SELECT first_name, last_name FROM staff WHERE active = 1"
movie_3,In which year was the film with the highest replacement cost released?,highest replacement_cost refers to Max (replacement_cost); year refers to release_year,SELECT DISTINCT release_year FROM film WHERE replacement_cost = ( SELECT MAX(replacement_cost) FROM film )
movie_3,Please list the titles of the top 3 films with the highest replacement cost.,highest replacement_cost refers to Max (replacement_cost); film refers to title,SELECT title FROM film WHERE replacement_cost = ( SELECT MAX(replacement_cost) FROM film ) LIMIT 3
movie_3,What is the language of the film ACADEMY DINOSAUR?,"""ACADEMY DINOSAUR"" is the title of film; language refers to language.name",SELECT T2.name FROM film AS T1 INNER JOIN language AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'ACADEMY DINOSAUR'
movie_3,How many films are in English?,"""English"" is the name of language",SELECT COUNT(T1.film_id) FROM film AS T1 INNER JOIN language AS T2 ON T1.language_id = T2.language_id WHERE T2.name = 'English'
movie_3,Please list the titles of all the films starring the actor PENELOPE GUINESS.,,SELECT T2.title FROM film_actor AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN actor AS T3 ON T1.actor_id = T3.actor_id WHERE T3.first_name = 'PENELOPE' AND T3.last_name = 'GUINESS'
movie_3,How many actors have starred in the film ACADEMY DINOSAUR?,"""ACADEMY DINOSAUR"" is the title of film",SELECT COUNT(T1.actor_id) FROM film_actor AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id WHERE T2.title = 'ACADEMY DINOSAUR'
movie_3,Please list the full names of all the actors that have starred in the film ACADEMY DINOSAUR.,"full name refers to first_name, last_name; ""ACADEMY DINOSAUR"" is the title of film","SELECT T1.first_name, T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'ACADEMY DINOSAUR'"
movie_3,"Among the films starring PENELOPE GUINESS, how many of them are released in 2006?",release in 2006 refers to release_year = 2006;,SELECT COUNT(T2.film_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.release_year = 2006 AND T1.first_name = 'PENELOPE' AND T1.last_name = 'GUINESS'
movie_3,Please give the title of the film starring PENELOPE GUINESS and has the highest replacement cost.,highest replacement cost refers to Max (replacement_cost),SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'PENELOPE' AND T1.last_name = 'GUINESS' ORDER BY T3.replacement_cost DESC LIMIT 1
movie_3,Please list the full names of all the actors that have starred in the film with the highest replacement cost.,"highest replacement cost refers to Max (replacement_cost); full name refers to first_name, last_name","SELECT first_name, last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id ORDER BY T3.replacement_cost DESC LIMIT 1"
movie_3,"Among the films starring PENELOPE GUINESS, how many of them are in English?","""English"" is the name of language",SELECT COUNT(T3.film_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id INNER JOIN language AS T4 ON T3.language_id = T4.language_id WHERE T4.name = 'English' AND T1.first_name = 'PENELOPE' AND T1.last_name = 'GUINESS'
movie_3,What is the title of the film with the longest duration time and stars PENELOPE GUINESS?,longest duration of film refers to Max(length),SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'PENELOPE' AND T1.last_name = 'GUINESS' ORDER BY T3.length DESC LIMIT 1
movie_3,"Please list the titles of all the films in the category of ""Horror"".","""Horror"" is the name of category",SELECT T1.title FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'Horror'
movie_3,"How many films are there under the category of ""Horror""?","""Horror"" is the name of category",SELECT COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id WHERE T2.name = 'Horror'
movie_3,"Please list the titles of all the films under the category of ""Horror"" and has a rental rate of $2.99.","""Horror"" is the name of category; rental rate of $2.99 refers to rental_rate = 2.99",SELECT T1.title FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'Horror' AND T1.rental_rate = 2.99
movie_3,For how many times has the customer RUTH MARTINEZ rented a film?,times of rented refers to Count(rental_id),SELECT COUNT(T2.rental_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'RUTH' AND T1.last_name = 'MARTINEZ'
movie_3,Please list the titles of all the films that the customer RUTH MARTINEZ has rented.,,SELECT T4.title FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T1.first_name = 'RUTH' AND T1.last_name = 'MARTINEZ'
movie_3,"Among the films that the customer RUTH MARTINEZ has rented, how many of them are released in 2006?",release in 2006 refers to release_year = 2006,SELECT COUNT(T1.customer_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T4.release_year = 2006 AND T1.first_name = 'RUTH' AND T1.last_name = 'MARTINEZ'
movie_3,"Among the films that the customer RUTH MARTINEZ has rented, what is the title of the one with the highest replacement cost?",highest replacement cost refers to Max(replacement_cost),SELECT T4.title FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T1.first_name = 'RUTH' AND T1.last_name = 'MARTINEZ' ORDER BY T4.replacement_cost DESC LIMIT 1
movie_3,Please list the full names of all the customers who have rented the film with the highest replacement cost.,"full name refers to first_name, last_name; highest replacement cost refers to Max(replacement_cost)","SELECT T1.first_name, T1.last_name FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id ORDER BY T4.replacement_cost DESC LIMIT 1"
movie_3,"How many films rented to the customer RUTH MARTINEZ were returned in August, 2005?","returned in August, 2005 refers to year(return_date) = 2005 and month (return_date) = 8","SELECT COUNT(T1.customer_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'RUTH' AND T1.last_name = 'MARTINEZ' AND STRFTIME('%m',T2.return_date) = '8' AND STRFTIME('%Y', T2.return_date) = '2005'"
movie_3,Please give the full name of the customer that have rented the most films.,"full name refers to first_name, last_name; customer who rented the most film refers to Max(count(rental_id))","SELECT T.first_name, T.last_name FROM ( SELECT T1.first_name, T1.last_name, COUNT(T2.rental_id) AS num FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.first_name, T1.last_name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,"Among the customers who have rented the film ACADEMY DINOSAUR, how many of them are active?","""ACADEMY DINOSAUR"" is the title of film; customer refers to customer_id; active refers to active = 1",SELECT COUNT(T1.customer_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T1.active = 1 AND T4.title = 'ACADEMY DINOSAUR'
movie_3,Which film is rented for the most times by the customers? Please give its title.,film refers to title; film rented the most times refers to title where Max(Count(rental_id)),"SELECT T.title FROM ( SELECT T1.title, COUNT(T3.rental_id) AS num FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id INNER JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id GROUP BY T1.title ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,"Which customer has rented more movies, RUTH MARTINEZ or LINDA WILLIAMS?","rented more movie Max(Count(customer_id)); ""RUTH MARTINEZ"" and ""LINDA WILLIAMS"" are both full name of customer","SELECT T.first_name, T.last_name FROM ( SELECT T1.first_name, T1.last_name, COUNT(T1.customer_id) AS num FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE (T1.first_name = 'RUTH' AND T1.last_name = 'MARTINEZ') OR (T1.first_name = 'LINDA' AND T1.last_name = 'WILLIAMS') GROUP BY T1.first_name, T1.last_name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,"Among all the films starring PENELOPE GUINESS, what is the title of the one with the highest rental price per day?","highest rental price per day refers to Max(Divide(rental_rate, rental_duration))",SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'PENELOPE' AND T1.last_name = 'GUINESS' ORDER BY T3.rental_rate / T3.rental_duration DESC LIMIT 1
movie_3,"What is the average replacement cost of the films under the category of ""Horror""?","""Horror"" is the name of category; average replacement cost = Divide (Sum(replacement_cost), Count(film_id where name = Horror))",SELECT AVG(T3.replacement_cost) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T2.name = 'Horror'
movie_3,"Among all films that the customer RUTH MARTINEZ has rented, what is the percentage of it being a Music film?","music film refers to name = 'Music'; percentage = Divide (Count(film_id where name = 'Music'), Count(film_id)) * 100","SELECT CAST(SUM(IIF(T3.name = 'Music', 1, 0)) AS REAL) * 100 / COUNT(T1.film_id) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id INNER JOIN inventory AS T4 ON T1.film_id = T4.film_id INNER JOIN customer AS T5 ON T4.store_id = T5.store_id INNER JOIN rental AS T6 ON T4.inventory_id = T6.inventory_id WHERE T5.first_name = 'RUTH' AND T5.last_name = 'MARTINEZ'"
movie_3,What is the average duration time of the films starring PENELOPE GUINESS?,average duration time = AVG(length),SELECT AVG(T3.length) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'PENELOPE' AND T1.last_name = 'GUINESS'
movie_3,What is Diane Collins' email address?,,SELECT email FROM customer WHERE first_name = 'DIANE' AND last_name = 'COLLINS'
movie_3,Give the number of inactive customers.,inactive refers to active = 0,SELECT COUNT(customer_id) FROM customer WHERE active = 0
movie_3,"Who is the owner of email address ""JEREMY.HURTADO@sakilacustomer.org""? Give the full name.","""JEREMY.HURTADO@sakilacustomer.org"" is the email; owner refers to customer; full name refers to first_name, last_name","SELECT first_name, last_name FROM customer WHERE email = 'JEREMY.HURTADO@sakilacustomer.org'"
movie_3,Give the postal code for the address No.65.,address no. 65 refers to address_id = 65,SELECT postal_code FROM address WHERE address_id = 65
movie_3,State the number of addresses in the Nordrhein-Westfalen district.,number of address refers to address_id,SELECT COUNT(address_id) FROM address WHERE district = 'Nordrhein-Westfalen'
movie_3,What is the phone number of address No.72?,address no. 72 refers to address_id = 72; phone number refers to phone,SELECT phone FROM address WHERE address_id = '72'
movie_3,State the number of films that are 178 minutes long.,178 min long refers to length = '178',SELECT COUNT(film_id) FROM film WHERE length = '178'
movie_3,Tell the special features of the film Uprising Uptown.,"""UPRISING UPTOWN"" is the title of film",SELECT special_features FROM film WHERE title = 'UPRISING UPTOWN'
movie_3,What is the description of the film Artist Coldblooded?,"""ARTIST COLDBLOODED"" is the title of film",SELECT description FROM film WHERE title = 'ARTIST COLDBLOODED'
movie_3,Give the detailed address for store No.2.,"store no. 22 refers to store_id = 2; detailed address refers to address, address2, district","SELECT T1.address, T1.address2, T1.district FROM address AS T1 INNER JOIN store AS T2 ON T1.address_id = T2.address_id WHERE T2.store_id = 2"
movie_3,Which continent is the mother country of Clarksville city in?,"""Clarksville"" is the city;",SELECT T1.country FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id WHERE T2.city = 'Clarksville'
movie_3,"How many actors played a role in the 2006 film whose rental duration is 7 days, rental rate is 4.99 and is 98 minutes duration?",in 2006 refers to release_year = 2006; 98 min duration refers to length = 98; number of actors refers to count(actor_id),SELECT COUNT(T1.actor_id) FROM film_actor AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id WHERE T2.release_year = 2006 AND T2.rental_duration = 7 AND T2.rental_duration = 4.99 AND T2.length = 98
movie_3,"The actor Dan Harris played in a 77 minute film with replacement cost of 9.99, what was the rating for that film?",77 min film refers to length = 77,SELECT T3.rating FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'DAN' AND T1.last_name = 'HARRIS' AND T3.length = 77 AND T3.replacement_cost = '9.99'
movie_3,How many films did actor Daryl Wahlberg appear in?,,SELECT COUNT(T1.film_id) FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id WHERE T2.first_name = 'DARYL' AND T2.last_name = 'WAHLBERG'
movie_3,"Sherri Rhodes rented a film at 12:27:27 on 2005/7/28, when did she/he return that film?",rented at 12:27:27 on 2005/7/28 refers to rental_date = '2005-07-28 12:27:27',SELECT T2.return_date FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'SHERRI' AND T1.last_name = 'RHODES' AND T2.rental_date = '2005-07-28 12:27:27'
movie_3,Give the name of the manager staff for store No.1.,"store no. 1 refers to store_id = 1; name refers to first_name, last_name","SELECT T1.first_name, T1.last_name FROM staff AS T1 INNER JOIN store AS T2 ON T1.store_id = T2.store_id WHERE T2.store_id = 1"
movie_3,State the address location of store No.1.,"store no. 1 refers to store_id = 1; address location refers to address, address2, district","SELECT T1.address, T1.address2, T1.district FROM address AS T1 INNER JOIN store AS T2 ON T1.address_id = T2.address_id WHERE T2.store_id = 1"
movie_3,Where does the staff Jon Stephens live?,"location refers to address, address2, district","SELECT T1.address, T1.address2 FROM address AS T1 INNER JOIN staff AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = 'Jon' AND T2.last_name = 'Stephens'"
movie_3,How many addresses are there in Woodridge city?,"""Woodridge"" is the city",SELECT COUNT(T1.address_id) FROM address AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T2.city = 'Woodridge'
movie_3,How many films are in English?,"""English"" is the name of language",SELECT COUNT(T1.film_id) FROM film AS T1 INNER JOIN language AS T2 ON T1.language_id = T2.language_id WHERE T2.name = 'English'
movie_3,Give the address location of Heather Morris.,address location refers to address,SELECT T1.address FROM address AS T1 INNER JOIN customer AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = 'HEATHER' AND T2.last_name = 'MORRIS'
movie_3,"Give the email address of the person who lives in ""1411 Lillydale Drive"".","""1411 Lillydate Drive"" is the address",SELECT T2.email FROM address AS T1 INNER JOIN staff AS T2 ON T1.address_id = T2.address_id WHERE T1.address = '1411 Lillydale Drive'
movie_3,How much money did the customer No.297 pay for the rental which happened at 12:27:27 on 2005/7/28?,customer no. 297 refers to customer_id = 297; at 12:27:27 on 2005/7/28 refers to rental_date = '2005-07-28 12:27:27'; money pay for rent refers to amount,SELECT T1.amount FROM payment AS T1 INNER JOIN rental AS T2 ON T1.rental_id = T2.rental_id WHERE T2.rental_date = '2005-07-28 12:27:27' AND T2.customer_id = 297
movie_3,Which category does the film Working Microcosmos belong to?,"""WORKING MICROCOSMOS"" is the title of film; category refers to name",SELECT T3.name FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T1.title = 'WORKING MICROCOSMOS'
movie_3,Give the number of documentary films.,"""Documentary"" is the name of category; number of film refers to Count(film_id)",SELECT COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id WHERE T2.name = 'Documentary'
movie_3,State the name of the category which has the most number of films.,category refers to name; most number of films refers to Max(Count(film_id)),"SELECT T.name FROM ( SELECT T2.name, COUNT(T1.film_id) AS num FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T2.name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,Give the name of the film for inventory No.3479.,inventory no. 3479 refers to inventory_id = '3479'; name of film refers to title,SELECT T1.title FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id WHERE T2.inventory_id = 3479
movie_3,What is the percentage more for the rental payment for store No.2 than store No.1?,"store no. 1 refers to store_id = 1; store no.2 refers to store_id = 2; rental payment refers to amount; percent more = Divide (Subtract(amount where store_id = 2, amount where store_id = 1), amount where store_id = 1) *100","SELECT CAST((SUM(IIF(T2.store_id = 2, T1.amount, 0)) - SUM(IIF(T2.store_id = 1, T1.amount, 0))) AS REAL) * 100 / SUM(IIF(T2.store_id = 1, T1.amount, 0)) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id INNER JOIN store AS T3 ON T2.store_id = T3.store_id"
movie_3,How many times is the number of Indian cities than Italian cities?,"indian refers to country = 'India'; Italian refers to country = 'Italy'; times = Divide(Count(city where country = 'India), Count(city where country = 'Italy'))","SELECT CAST(SUM(IIF(T1.country = 'India', 1, 0)) AS REAL) / SUM(IIF(T1.country = 'Italy', 1, 0)) FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id"
movie_3,How many times is the number of films Gina DeGeneres acted in than Penelope Guinness?,"""Gina DeGeneres"" and ""Penelope Guinness"" are both full name of actor; times number of film = Divide (Count (film_id where first_name = 'GINA' and last_name = 'DEGENERES'), Count(film_id where first_name = 'PENELOPE' and last_name = 'GUINESS'))","SELECT CAST(SUM(IIF(T2.first_name = 'GINA' AND T2.last_name = 'DEGENERES', 1, 0)) AS REAL) * 100 / SUM(IIF(T2.first_name = 'PENELOPE' AND T2.last_name = 'GUINESS', 1, 0)) FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id"
movie_3,"In 2006, how many restricted films were released?",restricted refers to rating = 'R'; release refers to release_year; in 2006 refers to release_year = 2006; film refers to title,SELECT COUNT(film_id) FROM film WHERE rating = 'R' AND release_year = 2006
movie_3,How many actors starred in the film id 508?,,SELECT COUNT(actor_id) FROM film_actor WHERE film_id = 508
movie_3,"What are the special features for the film ""Smoochy Control""?","""SMOOCHY CONTROL"" is the title of film",SELECT special_features FROM film WHERE title = 'SMOOCHY CONTROL'
movie_3,How many customers paid over the amount of 10 on August 2005?,over the amount of 10 refers to amount > 10; paid on August 2005 refers to payment_date like '2005_08%'; customer refers to customer_id,"SELECT COUNT(customer_id) FROM payment WHERE SUBSTR(payment_date, 1, 7) LIKE '2005-08'"
movie_3,List the names of the films that are more than 180 minutes long.,more than 180 min long refers to length > 180; name of film refers to title,SELECT title FROM film WHERE length > 180
movie_3,How much is the total rental payment for the first 10 rentals?,first 10 rental refers to rental id between 1 and 10; total rental payment refers to sum(amount),SELECT SUM(amount) FROM payment WHERE rental_id BETWEEN 1 AND 10
movie_3,What are the full names of all the active employees?,"active employee refers to active = 1; full name refers to first_name, last_name","SELECT first_name, last_name FROM staff WHERE active = 1"
movie_3,Who is the staff manager in store id 2?,staff manager refers to manager_staff_id,SELECT manager_staff_id FROM store WHERE store_id = 2
movie_3,How many rentals were returned on 5/27/2005?,return on 5/27/2005 refers to return_date = '2005-05-27'; rental refers to rental_id,SELECT COUNT(rental_id) FROM rental WHERE rental_date = '2005-05-27'
movie_3,What are the names of the movies which Laura Brody starred in?,name of movie refers to title,SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'Laura' AND T1.last_name = 'Brody'
movie_3,List the name of the films that can only be found in store id 2.,name of film refers to title,SELECT T1.title FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id WHERE T2.store_id = 2
movie_3,What is the full name of the customer who rented movies for 7 consecutive days?,"rented for 7 consecutive days refers to Subtract(return_date, rental_date) = 7; full name refers to first_name, last_name","SELECT T1.first_name, T1.last_name FROM customer AS T1 INNER JOIN ( SELECT customer_id, COUNT(*) AS num_days FROM ( SELECT *, date(days, '-' || rn || ' day') AS results FROM ( SELECT customer_id, days, row_number() OVER (PARTITION BY customer_id ORDER BY days) AS rn FROM ( SELECT DISTINCT customer_id, date(rental_date) AS days FROM rental ) ) ) GROUP BY customer_id, results HAVING num_days = 7 ) AS T2 ON T1.customer_id = T2.customer_id"
movie_3,How many films are categorized as horror?,"""Horror"" is the name of category",SELECT COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id WHERE T2.name = 'Horror'
movie_3,What is the name of the most rented movie?,most rented movie refers to title where Max(Count(rental_id)),"SELECT T.title FROM ( SELECT T1.title, COUNT(T3.rental_id) AS num FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id INNER JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id GROUP BY T1.title ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,What is the most common special features of science-fiction movies?,"""science fiction"" is the name of category; most common special features refers to Max(frequency(special_features))",SELECT T1.special_features FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'sci-fi' ORDER BY T1.special_features DESC LIMIT 1
movie_3,What is the full name of the actor who starred in most movies?,"full name refers to first_name, last_name; actor who starred in the most movies refers to actor_id where Max(Count(film_id))","SELECT T.first_name, T.last_name FROM ( SELECT T2.first_name, T2.last_name, COUNT(T1.film_id) AS num FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.first_name, T2.last_name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,"Among the films with a rental duration of 7 days, how many are comedies?",rental duration of 7 refers to rental_duration = 7; comedies refers to name = 'Comedy',SELECT COUNT(T1.film_id) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T1.rental_duration = 7 AND T3.name = 'Comedy'
movie_3,Who is the staff manager of the store with the most non-active customers?,most non-active customer refers to Max(Count(active = 0)),"SELECT T.first_name, T.last_name FROM ( SELECT T3.first_name, T3.last_name, COUNT(T1.customer_id) AS num FROM customer AS T1 INNER JOIN store AS T2 ON T1.store_id = T2.store_id INNER JOIN staff AS T3 ON T2.store_id = T3.store_id WHERE T1.active = 0 GROUP BY T3.first_name, T3.last_name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,What is the rental price per day of the most expensive children's film?,"children's film refers to name = 'Children'; average price per day of most expensive film = Max(Divide(rental_rate, rental_duration))",SELECT T1.rental_rate FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'Children' ORDER BY T1.rental_rate / T1.rental_duration DESC LIMIT 1
movie_3,What is the complete address of store id 1?,"complete address refers to address, address2, district","SELECT T3.address, T3.address2, T3.district FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id INNER JOIN address AS T3 ON T2.city_id = T3.city_id INNER JOIN store AS T4 ON T3.address_id = T4.address_id WHERE T4.store_id = 1"
movie_3,How many customers are from the city of Lethbridge?,customer refers to customer_id,SELECT COUNT(T3.customer_id) FROM city AS T1 INNER JOIN address AS T2 ON T1.city_id = T2.city_id INNER JOIN customer AS T3 ON T2.address_id = T3.address_id WHERE T1.city = 'Lethbridge'
movie_3,How many cities are there in the United States?,"""United States"" is the country",SELECT COUNT(T2.city) FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id WHERE T1.country = 'United States'
movie_3,List the names of the customers from India.,"""India"" is the country; name refers to first_name, last_name","SELECT T4.first_name, T4.last_name FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id INNER JOIN address AS T3 ON T2.city_id = T3.city_id INNER JOIN customer AS T4 ON T3.address_id = T4.address_id WHERE T1.country = 'India'"
movie_3,"Among the classic movies, how many movies have a rental rate of less than 1?",classic movie refers to name = 'Classics'; rental rate of less than 1 refers to rental_rate < 1; movie refers to film_id,SELECT COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T3.rental_rate < 1 AND T2.name = 'Classics'
movie_3,What is the full name of the customer who rented the highest number of movies of all time?,"full name refers to first_name, last_name; customer who rented the most film refers to Max(count(rental_id))","SELECT T.first_name, T.last_name FROM ( SELECT T2.first_name, T2.last_name, COUNT(T1.rental_id) AS num FROM rental AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.first_name, T2.last_name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,"How many times was ""Blanket Beverly"" rented?","""BLANKET BEVERLY"" is the title of film; rented times refers to count(rental_id)",SELECT COUNT(T3.rental_id) FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id INNER JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id WHERE T1.title = 'Blanket Beverly'
movie_3,What is the full name of the actor who has the highest number of restricted films?,"restricted refers to rating = 'R'; highest number of film refers to Max(Count(film_id)); full name refers to first_name, last_name","SELECT T.first_name, T.last_name FROM ( SELECT T1.first_name, T1.last_name, COUNT(T2.film_id) AS num FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.rating = 'R' GROUP BY T1.first_name, T1.last_name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,Who are the top 5 actors with the highest number of films? List their full names and calculate the average number of films for each of the actors.,"actors with highest number of films refers to actor_id with Max(Count(film_id)); full name refers to first_name, last_name; average number of film = Divide (Count(film_id), 5)","SELECT T.first_name, T.last_name, num FROM ( SELECT T1.first_name, T1.last_name, COUNT(T2.film_id) AS num FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id GROUP BY T1.first_name, T1.last_name ) AS T ORDER BY T.num DESC LIMIT 5"
movie_3,"List the actors' IDs who have ""KILMER"" as last name.",,SELECT actor_id FROM actor WHERE last_name = 'KILMER'
movie_3,List down the films titles with the lowest replacement cost under the general audiences rating.,lowest replacement cost refers to Min(replacement_cost); under general audience rating refers to rating = G,SELECT title FROM film WHERE replacement_cost = ( SELECT MIN(replacement_cost) FROM film )
movie_3,"Among the films with the longest duration, list any five title with their descriptions and special features.",longest duration of film refers to Max(length),"SELECT title, description, special_features FROM film WHERE length = ( SELECT MAX(length) FROM film ) LIMIT 5"
movie_3,"How many films rented on 26th May, 2005 were returned on 30th May, 2005?","rented on 26th May 2005 refers to rental_date = '2005-05-26'; return on 30th May, 2005 refers to return_date = '2005-05-30'; number of rented film refers to Count (rental_id)",SELECT COUNT(DISTINCT rental_id) FROM rental WHERE date(rental_date) BETWEEN '2005-05-26' AND '2005-05-30'
movie_3,Calculate the average payment amount per customer.,average payment refers to AVG(amount),SELECT AVG(amount) FROM payment GROUP BY customer_id
movie_3,What is the name and email of the staff in store ID 2?,"name refers to first_name, last_name","SELECT first_name, last_name, email FROM staff WHERE store_id = 2"
movie_3,How many percent of customers were inactive?,"inactive refers to active = 0; percent = Divide (Count (customer_id where active = 0), Count(customer_id)) * 100","SELECT CAST(SUM(IIF(active = 0, 1, 0)) AS REAL) * 100 / COUNT(customer_id) FROM customer"
movie_3,What is the description and film title of ID 996?,ID 996 refers to film_id = 996,"SELECT description, title FROM film_text WHERE film_id = 996"
movie_3,"Calculate customers' total payment amount in August, 2005.",in August 2005 refers to payment_date like '2005-08%'; total payment amount refers to Sum(amount),"SELECT SUM(amount) FROM payment WHERE SUBSTR(payment_date, 1, 7) = '2005-08'"
movie_3,List down the film titles performed by Emily Dee.,,SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'Emily' AND T1.last_name = 'Dee'
movie_3,"List down the actors' full names who performed in ""CHOCOLATE DUCK"" film.","""CHOCOLATE DUCK"" is the title of film; full name refers to first_name, last_name","SELECT T3.first_name, T3.last_name FROM film_actor AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN actor AS T3 ON T1.actor_id = T3.actor_id WHERE T2.title = 'CHOCOLATE DUCK'"
movie_3,How many films in the horror category were included in PG-13-rated?,"""Horror"" is the name of category; PG-13 rated refers to rating = 'PG-13'",SELECT COUNT(T1.film_id) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'Horror' AND T1.rating = 'PG-13'
movie_3,Distinguish the films performed by Judy Dean according to category.,films performed refers to film,SELECT T5.name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id INNER JOIN film_category AS T4 ON T2.film_id = T4.film_id INNER JOIN category AS T5 ON T4.category_id = T5.category_id WHERE T1.first_name = 'Judy' AND T1.last_name = 'Dean'
movie_3,Write down any five film names under the documentary category.,"""Documentary"" is the name of category; film name refers to title",SELECT T1.title FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'Documentary' LIMIT 5
movie_3,Mention the language of Untouchables Sunrise film and calculate its rental cost per day.,"""UNTOUCHABLES SUNRISE"" is the title of film; language refers to name; rental cost per day = Divide (rental_cost, rental_duration)","SELECT T2.name, T1.replacement_cost / T1.rental_duration AS cost FROM film AS T1 INNER JOIN language AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'UNTOUCHABLES SUNRISE'"
movie_3,"List the films' titles which were rented on 24th May,2005.",rented on 24th May 2005 refers to rental_date = '2005-05-24%',"SELECT T1.title FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id INNER JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id WHERE SUBSTR(T3.rental_date, 1, 10) = '2005-05-24'"
movie_3,"List the films' titles which were rented by Brian Wyman in July, 2005.",rented in July 2005 refers to year (rental_date) = 2005 and month (rental_date) = 7,"SELECT T4.title FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T1.first_name = 'BRIAN' AND T1.last_name = 'WYMAN' AND STRFTIME('%Y', T2.rental_date) = '2005' AND STRFTIME('%m',T2.rental_date) = '7'"
movie_3,"Write down the inventories' IDs and actors' names of ""STREETCAR INTENTIONS"".","""STREETCAR INTENTIONS"" is the title of film; actor's names refers to first_name, last_name","SELECT T4.inventory_id, T1.first_name, T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id INNER JOIN inventory AS T4 ON T2.film_id = T4.film_id WHERE T3.title = 'STREETCAR INTENTIONS'"
movie_3,"Among the films rented by Natalie Meyer, describe the titles and categories of the films which were rented in February 2006.",category refers to name; rented in February 2006 refers to year(rental_date) = 2006 and month (rental_rate) = 2,"SELECT T3.title, T2.name FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id INNER JOIN inventory AS T4 ON T3.film_id = T4.film_id INNER JOIN customer AS T5 ON T4.store_id = T5.store_id INNER JOIN rental AS T6 ON T4.inventory_id = T6.inventory_id WHERE T5.first_name = 'Natalie' AND T5.last_name = 'Meyer' AND STRFTIME('%Y',T3.rental_rate) = '2006' AND STRFTIME('%m',T3.rental_rate) = '2'"
movie_3,How many rental IDs belong to Eleanor Hunt?,"'Eleanor Hunt' is the full name of a customer; full name refers to first_name, last_name",SELECT COUNT(T1.rental_id) FROM rental AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Eleanor' AND T2.last_name = 'Hunt'
movie_3,"Describe the full names and cities of the customers who rented ""DREAM PICKUP"".","full name refers to first_name, last_name; 'DREAM PICKUP' is a title of film","SELECT T4.first_name, T4.last_name, T6.city FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id INNER JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN customer AS T4 ON T3.customer_id = T4.customer_id INNER JOIN address AS T5 ON T4.address_id = T5.address_id INNER JOIN city AS T6 ON T5.city_id = T6.city_id WHERE T1.title = 'DREAM PICKUP'"
movie_3,Calculate how many percent of customers were located in India.,"'India' is a country; calculation = DIVIDE(SUM(country = 'India'), COUNT(customer_id)) * 100","SELECT CAST(SUM(IIF(T1.country = 'India', 1, 0)) AS REAL) * 100 / COUNT(T4.customer_id) FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id INNER JOIN address AS T3 ON T2.city_id = T3.city_id INNER JOIN customer AS T4 ON T3.address_id = T4.address_id"
movie_3,How much percentage of the film did Mary Keitel perform more than Angela Witherspoon?,"'Mary Keitel' AND 'Angela Witherspoon' are full name of actors; full name refers to FirstName, LastName; calculation = DIVIDE(SUBTRACT(SUM('Mary Keitel'), SUM('Angela Witherspoon')), SUM('Angela Witherspoon')) * 100","SELECT CAST((SUM(IIF(T1.first_name = 'ANGELA' AND T1.last_name = 'WITHERSPOON', 1, 0)) - SUM(IIF(T1.first_name = 'MARY' AND T1.last_name = 'KEITEL', 1, 0))) AS REAL) * 100 / SUM(IIF(T1.first_name = 'MARY' AND T1.last_name = 'KEITEL', 1, 0)) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id"
movie_3,"Provide the email, address, city, and country of the customer Lillie Kim.","'Lillie Kim' is the full name of a customer; full name refers to first_name, last_name","SELECT T1.email, T2.address, T3.city, T4.country FROM customer AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id INNER JOIN city AS T3 ON T2.city_id = T3.city_id INNER JOIN country AS T4 ON T3.country_id = T4.country_id WHERE T1.first_name = 'Lillie' AND T1.last_name = 'Kim'"
movie_3,Provide any 5 customers' full names who have rented from Mike Hillyer.,"full name refers to first_name, last_name; 'Mike Hillyer' is a full name of a staff;","SELECT T3.first_name, T3.last_name FROM staff AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id INNER JOIN customer AS T3 ON T2.address_id = T3.address_id WHERE T1.first_name = 'Mike' AND T1.last_name = 'Hillyer' LIMIT 5"
movie_3,Calculate the total payment amount by Diane Collins.,"'Diane Collins' is a full name of a customer; full name refers to first_name, last_name",SELECT SUM(T2.amount) FROM customer AS T1 INNER JOIN payment AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'Diane' AND T1.last_name = 'Collins'
movie_3,Provide the full names and emails of customers whose payments were greater than 70% of the average.,"full name refers to first_name, last_name; average payment refers to AVG(amount); payments were greater than 70% of the average refers to amount > (AVG(amount) MULTIPLY 0.7)","SELECT DISTINCT T2.first_name, T2.last_name, T2.email FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id INNER JOIN address AS T3 ON T2.address_id = T3.address_id WHERE T1.amount > ( SELECT AVG(amount) FROM payment ) * 0.7"
movie_3,How many films have a rental rate of 0.99?,,SELECT COUNT(film_id) FROM film WHERE rental_rate = 0.99
movie_3,"Among the customers with customer ID of 100 and below, how many of them have Thomas as their last name?",customer ID of 100 and below refers to customer_id < 100,SELECT COUNT(customer_id) FROM customer WHERE last_name = 'Thomas' AND customer_id < 100
movie_3,"List the actor's last name that starred the film with the description of ""A Thoughtful Drama of a Composer And a Feminist who must Meet a Secret Agent in The Canadian Rockies"".",,SELECT T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.description = 'A Thoughtful Drama of a Composer And a Feminist who must Meet a Secret Agent in The Canadian Rockies'
movie_3,Give the title of the film starred by Liza Bergman with the highest replacement cost.,"Liza Bergman' is a full name; full name refers to first_name, last_name; highest replacement cost refers to MAX(replacement_cost)",SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'Liza' AND T1.last_name = 'Bergman' ORDER BY replacement_cost DESC LIMIT 1
movie_3,"Among films with store ID of 2, list the title of films with the highest rental rate.",highest rental rate refers to MAX(rental_rate),SELECT T1.title FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id WHERE T2.store_id = 2 ORDER BY rental_rate DESC LIMIT 1
movie_3,"Among the films starred by Angelina Astaire, what is the title of the film with a replacement cost of 27.99?","Angelina Astaire' is a full name of an actor; full name refers to first_name, last_name",SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'Angelina' AND T1.last_name = 'Astaire' AND T3.replacement_cost = 27.99
movie_3,"List the inventory ID of the film titled ""African Egg"".",'African Egg' is a title of a film,SELECT T2.inventory_id FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id WHERE T1.title = 'African Egg'
movie_3,"In films with a length duration of 113 minutes, how many of the films are starred by Kirk Jovovich?","length duration of 113 minutes refers to length = 113; 'Kirk Jovovich' is a full name of an actor; full name refers to first_name, last_name",SELECT COUNT(T1.actor_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.length = 113 AND T1.first_name = 'Kirk' AND T1.last_name = 'Jovovich'
movie_3,"In the film with an inventory ID between 20 to 60, how many of the films have a G rating?",G rating refers to rating = 'G',SELECT COUNT(T1.film_id) FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id WHERE T2.inventory_id BETWEEN 20 AND 60 AND T1.rating = 'G'
movie_3,"Among films with a rental rate of 4.99, what is the total number of films starred by Bob Fawcett?","Bob Fawcett' is a full name of an actor; full name refers to first_name, last_name",SELECT COUNT(T1.actor_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.rental_rate = 4.99 AND T1.first_name = 'Bob' AND T1.last_name = 'Fawcett'
movie_3,What is the inventory ID of the films starred by Russell Close with a duration between 110 to 150 minutes?,"'Russell Close' is a full name of an actor; full name refers to first_name, last_name; duration between 110 to 150 minutes refers to length BETWEEN 110 AND 150",SELECT T4.inventory_id FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id INNER JOIN inventory AS T4 ON T3.film_id = T4.film_id WHERE T3.length BETWEEN 110 AND 150 AND T1.first_name = 'Russell' AND T1.last_name = 'Close'
movie_3,What is the store and inventory ID of the film with the longest duration?,the longest duration refers to MAX(length),"SELECT T2.store_id, T2.inventory_id FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id ORDER BY T1.length DESC LIMIT 1"
movie_3,List the titles of the films starred by Elvis Marx.,"'Elvis Marx' is a full name of a film; full name refers to first_name, last_name",SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.length BETWEEN 110 AND 150 AND T1.first_name = 'Russell' AND T1.last_name = 'Close'
movie_3,"In films with rental rate of 4.99, list down the inventory ID of the films starred by Lucille Dee.","'Lucille Dee' is a full name of an actor; full name refers to first_name, last_name",SELECT T4.inventory_id FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id INNER JOIN inventory AS T4 ON T3.film_id = T4.film_id WHERE T1.first_name = 'Lucille' AND T1.last_name = 'Dee' AND T3.rental_rate = 4.99
movie_3,List the store ID of the films with a rental rate greater than the 60% of average rental rate of all listed films.,average rental rate of all listed films refers to AVG(rental_rate); rental rate greater than the 60% of average rental rate refers to rental_rate > (AVG(rental_rate)) MULTIPLY 0.6,SELECT T2.store_id FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id WHERE T1.rental_rate > ( SELECT AVG(T1.rental_rate) * 0.6 FROM film AS T1 )
movie_3,"Among the films starred by Nick Wahlberg, what is the percentage of the films with G rating?","'Nick Wahlberg' is a full name of an actor; full name refers to first_name, last_name; G rating refers to rating = 'G'; calculation = DIVIDE(SUM(rating = 'G'), SUM(rating)) * 100","SELECT CAST(SUM(IIF(T3.rating = 'G', 1, 0)) AS REAL) / COUNT(T3.film_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'Elvis' AND T1.last_name = 'Marx'"
movie_3,List the address in Texas in the ascending order of city id.,'Texas' is a district,SELECT address FROM address WHERE district = 'Texas' AND city_id = ( SELECT MIN(city_id) FROM address WHERE district = 'Texas' )
movie_3,Find the full name and email address of inactive customers whose record was created in 2006.,"full name refers to first_name, last_name; record created in 2006 refers to create_date = 2006; inactive customers refers to active = 0","SELECT first_name, last_name, email FROM customer WHERE STRFTIME('%Y',create_date) = '2006' AND active = 0"
movie_3,What percentage of the movies are PG-13?,"PG-13 is a rating; calculation = DIVIDE(SUM(rating = PG-13), SUM(rating)) * 100","SELECT CAST(SUM(IIF(rating = 'PG-13', 1, 0)) AS REAL) * 100 / COUNT(film_id) FROM film"
movie_3,Please list the top ten movies with the most price per day in descending order of price per day.,movies with the most price per day refers to MAX(rental_rate),SELECT title FROM film ORDER BY rental_rate / rental_duration DESC LIMIT 10
movie_3,Calculate the average rent amount paid by the customer with customer id 15.,average rent amount refers to AVG(amount),SELECT AVG(amount) FROM payment WHERE customer_id = 15
movie_3,How many customers rented for an above-average period?,"rented period refers to SUBTRACT(return_date, rental_date); calculation = rented period > (AVG(rented period))",SELECT COUNT(customer_id) FROM rental WHERE return_date - rental_date > ( SELECT AVG(return_date - rental_date) FROM rental )
movie_3,"Among the movies, what percentage are horror?","horror is a name of film category; calculation = DIVIDE(COUNT('horror'), COUNT(category_id)) * 100","SELECT CAST(SUM(IIF(T2.name = 'horror', 1, 0)) AS REAL) * 100 / COUNT(T2.category_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id"
movie_3,Give the full name of the actor who acted in the most number of movies?,"full name refers to first_name, last_name; acted in the most number of movies refers to MAX(COUNT(film_id))","SELECT T.first_name, T.last_name FROM ( SELECT T2.first_name, T2.last_name, COUNT(T1.film_id) AS num FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.first_name, T2.last_name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,Give the full name of the actor who acted the most in drama movies?,"full name refers to first_name, last_name; drama is a category of a film; acted the most in a movies refers to MAX(COUNT(film_id))","SELECT T.first_name, T.last_name FROM ( SELECT T1.first_name, T1.last_name, COUNT(T2.film_id) AS num FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film_category AS T3 ON T2.film_id = T3.film_id WHERE T3.category_id = 7 GROUP BY T1.first_name, T1.last_name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,What is the difference in the average number of films rented each day in Australia and Canada?,"'Australia' AND 'Canada' are country; average number of films refers to AVG('Australia') AND AVG('Canada'); calculation = SUBTRACT(AVG('Australia'), AVG('Canada'))","SELECT AVG(IIF(T4.country = 'Australia', 1, 0)) - AVG(IIF(T4.country = 'Canada', 1, 0)) AS diff FROM customer AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id INNER JOIN city AS T3 ON T2.city_id = T3.city_id INNER JOIN country AS T4 ON T3.country_id = T4.country_id"
movie_3,"Of the movies in which Reese Kilmer acted, what percentage are action movies?","'Reese Kilmer' is a full name of an actor; 'action' is the name of the category; calculation = DIVIDE(COUNT('action'), COUNT(category_id)) * 100","SELECT CAST(SUM(IIF(T4.name = 'Action', 1, 0)) AS REAL) * 100 / COUNT(T1.actor_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film_category AS T3 ON T2.film_id = T3.film_id INNER JOIN category AS T4 ON T3.category_id = T4.category_id WHERE T1.first_name = 'Reese' AND T1.last_name = 'Kilmer'"
movie_3,Give the total amount of rent for the movie Clockwork Paradice.,'Clockwork Paradice' is a title of a film,SELECT SUM(T1.amount) FROM payment AS T1 INNER JOIN rental AS T2 ON T1.rental_id = T2.rental_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T4.title = 'CLOCKWORK PARADICE'
movie_3,Find and list the full name of customers who rented more than five types of movies.,"full name refers to first_name, last_name; types of movies means category of movies; 
rented more than five types of movies refers to COUNT(film_category) > 5","SELECT T.first_name, T.last_name FROM ( SELECT T1.first_name, T1.last_name, COUNT(T1.customer_id) AS num FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id INNER JOIN film_category AS T5 ON T4.film_id = T5.film_id GROUP BY T1.first_name, T1.last_name ) AS T WHERE T.num > 5"
movie_3,What is the average number of actors acted in comedy movies?,comedy is the name of a category; average number of actors refers to AVG(actor_id),SELECT AVG(T1.actor_id) FROM film_actor AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id INNER JOIN actor AS T4 ON T4.actor_id = T1.actor_id WHERE T3.name = 'comedy'
movie_3,"In children's movies, which was rented the most?",children is the name of the category; rented the most refers to MAX(COUNT(title)),"SELECT T.title FROM ( SELECT T4.title, COUNT(T4.title) AS num FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id INNER JOIN film_category AS T5 ON T4.film_id = T5.film_id INNER JOIN category AS T6 ON T5.category_id = T6.category_id WHERE T6.name = 'Children' GROUP BY T4.title ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,Calculate the percentage of customers who paid more than the average rent amount in store 1.,"store 1 refers to store_id = 1; average rent amount refers to AVG(amount); calculation = DIVIDE(amount > AVG(amount), COUNT(customer_id)) * 100",SELECT CAST(( SELECT COUNT(T1.customer_id) FROM customer AS T1 INNER JOIN payment AS T2 ON T1.customer_id = T2.customer_id WHERE T2.amount > ( SELECT AVG(amount) FROM payment ) ) AS REAL) * 100 / ( SELECT COUNT(customer_id) FROM customer )
movie_3,Find and list the full name of customers who rented more family movies than Sci-Fi movies.,"full name refers to first_name, last_name; 'family' AND 'Sci-Fi' are names of the category; customers who rented more family movies than Sci-Fi movies refers to count(name = 'Family') > count(name = 'Sci-Fi')","SELECT DISTINCT IIF(SUM(IIF(T5.name = 'Family', 1, 0)) - SUM(IIF(T5.name = 'Sci-Fi', 1, 0)) > 0, T1.first_name, 0) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film_category AS T4 ON T4.film_id = T3.film_id INNER JOIN category AS T5 ON T4.category_id = T5.category_id GROUP BY T1.customer_id"
movie_3,Indicate the title of all the films rated as 'Adults Only'.,'Adults Only' refers to rating = 'NC-17',SELECT title FROM film WHERE rating = 'NC-17'
movie_3,How many actors with the surname Kilmer are there?,surname means last_name;,SELECT COUNT(actor_id) FROM actor WHERE last_name = 'Kilmer'
movie_3,How many movies have a length longer than 100?,length longer than 100 refers to length > 100,SELECT COUNT(film_id) FROM film WHERE length > 100
movie_3,How many payments were made throughout the month of August 2005?,payments made refers to amount; throughout the month of August 2005 refers to payment_date like '2005-08%',SELECT SUM(amount) FROM payment WHERE payment_date LIKE '2005-08%'
movie_3,To which country does the address '1386 Nakhon Sawan Boulevard' belong?,,SELECT T1.country FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id INNER JOIN address AS T3 ON T2.city_id = T3.city_id WHERE T3.address = '1386 Nakhon Sawan Boulevard'
movie_3,What language was the most used in movies released in 2006?,released in 2006 refers to release_year = 2006; the most used language refers to MAX(COUNT(language_id)),"SELECT T.language_id FROM ( SELECT T1.language_id, COUNT(T1.language_id) AS num FROM film AS T1 INNER JOIN language AS T2 ON T1.language_id = T2.language_id WHERE STRFTIME('%Y',T1.release_year) = '2006' GROUP BY T1.language_id ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,Indicate the title of all the films that are in the Classics category.,'classics' is the name of category,SELECT T2.title FROM film_category AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T1.category_id = T3.category_id WHERE T3.name = 'Classics'
movie_3,How many rentals did Ella Oliver hire in June 2016?,"'Ella Oliver' is a full name of a customer; full name refers to first_name, last_name; rental hired in June 2016 refers to rental_date BETWEEN '2005-06-01' AND '2005-06-30'",SELECT COUNT(T1.rental_id) FROM rental AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'ELLA' AND T2.last_name = 'ELLA' AND date(T1.rental_date) BETWEEN '2005-06-01' AND '2005-06-30'
movie_3,How many different clients have rented materials from Jon Stephens?,"'Jon Stephens' is a full name of a customer; full name refers to first_name, last_name;",SELECT COUNT(T1.customer_id) FROM rental AS T1 INNER JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Jon' AND T2.last_name = 'Stephens'
movie_3,"What is the total amount paid for rentals made on July 29, 2005?","July 29, 2005 refers to rental_date like '2005-07-29'",SELECT SUM(T2.amount) FROM rental AS T1 INNER JOIN payment AS T2 ON T1.rental_id = T2.rental_id WHERE date(T1.rental_date) = '2005-07-29%'
movie_3,What is the first name of the customers whose address is in the postal code that begins with 76?,postal code that begins with 76 refers to postal_code like '76%',"SELECT T1.first_name FROM customer AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id WHERE SUBSTR(T2.postal_code, 1, 2) = '76'"
movie_3,On what date was the rented material for the movie BLOOD ARGONAUTS returned?,'BLOOD ARGONAUTS' is a title of a film; date a movie was returned refers to return_date,SELECT T1.rental_date FROM rental AS T1 INNER JOIN inventory AS T2 ON T1.inventory_id = T2.inventory_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'BLOOD ARGONAUTS'
movie_3,What is the title of the films in which Cuba Allen acted?,"'Cuba Allen' is a full name of an actor; full name refers to first_name, last_name",SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'Cuba' AND T1.last_name = 'Allen'
movie_3,How many actors acted in movies in the Music category?,Music' is a name of a category,SELECT COUNT(T1.actor_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id INNER JOIN film_category AS T4 ON T3.film_id = T4.film_id INNER JOIN category AS T5 ON T4.category_id = T5.category_id WHERE T5.name = 'Music'
movie_3,What is the full name of the actor who has acted the most times in comedy films?,"full name refers to first_name, last_name; 'comedy' is a name of a category;","SELECT T.first_name, T.last_name FROM ( SELECT T4.first_name, T4.last_name, COUNT(T2.actor_id) AS num FROM film_category AS T1 INNER JOIN film_actor AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T1.category_id = T3.category_id INNER JOIN actor AS T4 ON T2.actor_id = T4.actor_id WHERE T3.name = 'Comedy' GROUP BY T4.first_name, T4.last_name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,How many customers did not rent material at Mike's store?,not at Mike's store refers to staff.first_name ! = 'Mike',SELECT COUNT(T1.customer_id) FROM customer AS T1 INNER JOIN store AS T2 ON T1.store_id = T2.store_id INNER JOIN staff AS T3 ON T2.manager_staff_id = T3.staff_id WHERE T3.first_name != 'Mike'
movie_3,Indicate the name of the actors of the films rated as 'Parents Strongly Precautioned' with the highest replacement cost.,"name refers to first_name, last_name; Parents Strongly Precautioned' refers to rating = 'PG-13'; 
highest replacement cost refers to MAX(replacement_cost)","SELECT T1.first_name, T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.rating = 'PG-13' ORDER BY T3.replacement_cost DESC LIMIT 1"
movie_3,What is the name of the client who has the largest quantity of rented material without returning it?,"name refers to first_name, last_name; without returning a rented material refers to return_date is null","SELECT T.first_name FROM ( SELECT T2.first_name, COUNT(T1.rental_date) AS num FROM rental AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.first_name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,How many customers live in the city of Miyakonojo?,,SELECT COUNT(T3.customer_id) FROM city AS T1 INNER JOIN address AS T2 ON T1.city_id = T2.city_id INNER JOIN customer AS T3 ON T2.address_id = T3.address_id WHERE T1.city = 'Miyakonojo'
movie_3,How many non-active clients have not returned the rented material?,non-active clients refers to active = 0; not returning a rented material refers to rental_date is null,SELECT COUNT(T2.customer_id) FROM rental AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.active = 0
movie_3,What is the title of the animated films that have the shortest length?,animated film means animation; animation is a name of a category,SELECT T1.title FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id ORDER BY T1.length LIMIT 1
movie_3,In which country is the store where Hector Poinexter rents equipment located?,"'Hector Poinexter' is a full name of a customer; full name refers to first_name, last_name;",SELECT T5.country FROM customer AS T1 INNER JOIN store AS T2 ON T1.store_id = T2.store_id INNER JOIN address AS T3 ON T2.address_id = T3.address_id INNER JOIN city AS T4 ON T3.city_id = T4.city_id INNER JOIN country AS T5 ON T4.country_id = T5.country_id WHERE T1.first_name = 'HECTOR' AND T1.last_name = 'POINDEXTER'
movie_3,What is the average rental payment in Horror movies?,'Horror' is a name of a category; average rental payment refers to AVG(amount),SELECT AVG(T5.amount) FROM category AS T1 INNER JOIN film_category AS T2 ON T1.category_id = T2.category_id INNER JOIN inventory AS T3 ON T2.film_id = T3.film_id INNER JOIN rental AS T4 ON T3.inventory_id = T4.inventory_id INNER JOIN payment AS T5 ON T4.rental_id = T5.rental_id WHERE T1.name = 'Horror'
movie_3,What is the average amount of rent that Christy Vargas paid?,"'Christy Vargas' is a full name of a customer; full name refers to first_name, last_name; average amount of rent refers to AVG(amount)",SELECT AVG(T2.amount) FROM customer AS T1 INNER JOIN payment AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'CHRISTY' AND T1.Last_name = 'VARGAS'
movie_3,What percentage of films with a length of less than 100 belong to the Drama category?,"Drama' is a name of a category; calculation = DIVIDE(SUM(length < 100 AND name = 'Drama'), COUNT(film_id)) * 100","SELECT CAST(SUM(IIF(T2.length < 100 AND T3.name = 'Drama', 1, 0)) AS REAL) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T1.category_id = T3.category_id"
movie_3,What are the actors that have the same forename as Johnny? Please include in your answer the full names of these actors.,"forename means first_name; full name refers to first_name, last_name","SELECT first_name, last_name FROM actor WHERE first_name = 'Johnny'"
movie_3,What are the address numbers that are located in Gansu district?,address numbers refers to address_id;,SELECT address_id FROM address WHERE district = 'Gansu'
movie_3,Please list three types of film along with their IDs and the latest update.,types of film refers to the name of a category; IDs refers to category_id; latest update refers to last_update.,"SELECT DISTINCT name, category_id, last_update FROM category LIMIT 3"
movie_3,Please list the full names of any three inactive customers.,"full name refers to first_name, last_name; inactive customers refers to active = 0","SELECT first_name, last_name FROM customer WHERE active = 0 LIMIT 3"
movie_3,What is the rental price per day for Airplane Sierra?,"rental price per day refers to DIVIDE(rental_price, rental_duration); 'Airplane Sierra' is a title of a film",SELECT rental_rate / rental_duration AS result FROM film WHERE title = 'AIRPLANE SIERRA'
movie_3,Where is store number 2 located?,"store number 2 refers to store_id = 2; where is a store located refers to address, address2, district","SELECT T1.address, T1.address2, T1.district FROM address AS T1 INNER JOIN store AS T2 ON T1.address_id = T2.address_id WHERE T2.store_id = 2"
movie_3,Which city does the address 1623 Kingstown Drive belong to?,,SELECT T1.city FROM city AS T1 INNER JOIN address AS T2 ON T2.city_id = T1.city_id WHERE T2.address = '1623 Kingstown Drive'
movie_3,Please name three cities that belong to Algeria.,Algeria is a country,SELECT T2.city FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id WHERE T1.country = 'Algeria'
movie_3,What is the category of the film Agent Truman?,'Agent Truman' is a title of a film; category refers to name,SELECT T3.name FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T1.title = 'AGENT TRUMAN'
movie_3,Please list the titles of any three action films.,action is a name of category,SELECT T1.title FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'Action' LIMIT 3
movie_3,What is the difference between the number of children's films and action films?,"'children' AND 'action' are names of a category; Calculation = SUBTRACT(AVG('children'), AVG('action'))","SELECT SUM(IIF(T2.name = 'Children', 1, 0)) - SUM(IIF(T2.name = 'Action', 1, 0)) AS diff FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id"
movie_3,Which district does Maria Miller live in?,"'Maria Miller' is a name of a customer; full name refers to first_name, last_name",SELECT T2.district FROM customer AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Maria' AND T1.last_name = 'Miller'
movie_3,"Who is the customer that is active and lives at 1795 Santiago de Compostela Way, Texas?","active refers to active = 1; '1795 Santiago de Compostela Way' is an address; Texas is a district; who refers to first_name, last_name","SELECT T1.first_name, T1.last_name FROM customer AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T2.address = '1795 Santiago de Compostela Way' AND T1.active = 1"
movie_3,How many English films have a duration of over 50 minutes and the cost of replacement are under 10.99?,English is a name of a language; duration of over 50 minutes refers to length > 50; cost of replacement are under 10.99 refers to replacement_cost < 10.99,SELECT COUNT(T1.film_id) FROM film AS T1 INNER JOIN language AS T2 ON T1.language_id = T2.language_id WHERE T2.name = 'English' AND T1.length > 50 AND T1.replacement_cost < 10.99
movie_3,Who are the actors that act in the ACADEMY DINOSAUR film?,"Who are the actors refers to full name; full name refers to first_name, last_name; 'ACADEMY DINOSAUR' is a title of a film","SELECT T1.first_name, T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'ACADEMY DINOSAUR'"
movie_3,Please list any two films that Penelope Guiness acted in.,"film refers to title of the film; 'Penelope Guiness' is a full name of an actor; full name refers to first_name, last_name",SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'Penelope' AND T1.last_name = 'Guiness' LIMIT 2
movie_3,What is the percentage of documentary films?,"documentary' is a name of a category; calculation = DIVIDE(SUM(name = 'Documentary'), COUNT(film_id)) * 100","SELECT CAST(SUM(IIF(T2.name = 'Documentary', 1, 0)) AS REAL) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id"
movie_3,How many films in English are for adults only?,English is a name of a language; for adults only refers to rating = 'NC-17',SELECT COUNT(T1.film_id) FROM film AS T1 INNER JOIN language AS T2 ON T1.language_id = T2.language_id WHERE T2.name = 'English' AND T1.rating = 'NC-17'
movie_3,Which film has the longest duration?,film refers to the title; the longest duration refers to MAX(length),SELECT title FROM film WHERE length = ( SELECT MAX(length) FROM film )
movie_3,"How many of the actors are named ""Dan""?",'Dan' is a first_name of an actor,SELECT COUNT(actor_id) FROM actor WHERE first_name = 'Dan'
movie_3,What is the most common first name among the customers?,the most common first name refers to MAX(COUNT(first_name)),SELECT first_name FROM customer GROUP BY first_name ORDER BY COUNT(first_name) DESC LIMIT 1
movie_3,What are the ratings of the film featuring behind the scenes?,film featuring behind the scenes refers to special_features = 'Behind the Scenes',SELECT rating FROM film WHERE special_features LIKE '%Behind the Scenes%'
movie_3,What is the largest number of films rented per customer?,the largest number of films refers to MAX(rental_id),SELECT COUNT(rental_id) FROM rental GROUP BY customer_id ORDER BY COUNT(rental_id) DESC LIMIT 1
movie_3,"List all the films with the word ""Lacklusture"" in their description.",films refers to title,SELECT title FROM film_text WHERE description LIKE '%Lacklusture%'
movie_3,How many films did a customer named Francis Sikes rent?,"'Francis Sikes' is a full name of a customer; full name refers to first_name, last_name;",SELECT COUNT(T1.customer_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'FRANCIS' AND T1.last_name = 'SIKES'
movie_3,Who is the manager of the store with the largest collection of films?,"Who refers to first_name, last_name; the largest collection of films refers to MAX(film_id)","SELECT T.first_name, T.last_name FROM ( SELECT T3.first_name, T3.last_name, COUNT(T1.film_id) AS num FROM inventory AS T1 INNER JOIN store AS T2 ON T1.store_id = T2.store_id INNER JOIN staff AS T3 ON T2.manager_staff_id = T3.staff_id GROUP BY T3.first_name, T3.last_name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,What are the addresses of the inactive customers?,inactive customers refers to active = 0;,SELECT T2.address FROM customer AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.active = 0
movie_3,Which category is the most common?,most common category refers to MAX(COUNT(category.name)),"SELECT T.name FROM ( SELECT T2.name, COUNT(T2.name) AS num FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T2.name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,"Provide the cast for the film ""Jason trap"".","'Jason trap' is a title of a film; cast means actor; actor refers to first_name, last_name","SELECT T1.first_name, T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'JASON TRAP'"
movie_3,Who is the customer with the largest payment for rental films?,"Who refers to first_name, last_name; the largest payment for rental refers to MAX(SUM(amount))","SELECT T.first_name, T.last_name FROM ( SELECT T1.first_name, T1.last_name, SUM(T2.amount) AS num FROM customer AS T1 INNER JOIN payment AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.first_name, T1.last_name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,List the top 5 most-rented films.,film refers to title; most rented refers to MAX(inventory_id),"SELECT T.title FROM ( SELECT T3.title, COUNT(T2.inventory_id) AS num FROM rental AS T1 INNER JOIN inventory AS T2 ON T1.inventory_id = T2.inventory_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id GROUP BY T3.title ) AS T ORDER BY T.num DESC LIMIT 5"
movie_3,Which country does Sasebo belong to?,'Sasebo' is a city,SELECT T1.country FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id WHERE T2.city = 'Sasebo'
movie_3,What are the addresses for the stores?,,SELECT T2.address FROM store AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id
movie_3,List all the animation titles.,'animation' is a name of a category,SELECT T3.title AS per FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T2.name = 'Animation'
movie_3,What is the city with the most customers?,the most customers refers to MAX(COUNT(customer_id)),"SELECT T.city FROM ( SELECT T1.city, COUNT(T3.customer_id) AS num FROM city AS T1 INNER JOIN address AS T2 ON T2.city_id = T1.city_id INNER JOIN customer AS T3 ON T2.address_id = T3.address_id GROUP BY T1.city ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,Which actor acted in the most films?,"actor refers to first_name, last_name; the most film refers to MAX(SUM(film_id))","SELECT T.first_name, T.last_name FROM ( SELECT T2.first_name, T2.last_name, SUM(T1.film_id) AS num FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.first_name, T2.last_name ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,What percentage of films are horror films?,"horror' is a name of a category; calculation = DIVIDE(SUM(name = 'Horror'), COUNT(film_id)) * 100","SELECT CAST(SUM(IIF(T2.name = 'Horror', 1, 0)) AS REAL) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id"
movie_3,Please indicate the full name of actor id 5.,"full name refers to first_name, last_name","SELECT first_name, last_name FROM actor WHERE actor_id = 5"
movie_3,How many id movies have category id 11?,id movies refers to film_id,SELECT COUNT(film_id) FROM film_category WHERE category_id = 11
movie_3,Which category does BABY HALL film belong to?,category refers to name; BABY HALL film refers to title = 'BABY HALL',SELECT T3.`name` FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T3.category_id = T2.category_id WHERE T1.title = 'BABY HALL'
movie_3,Give the full name of the actor with the highest rental rate.,"full name refers to first_name, last_name; the highest rental rate refers to max(rental_rate)","SELECT T1.first_name, T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T3.film_id = T2.film_id ORDER BY T3.rental_rate DESC LIMIT 1"
movie_3,Please give the description of the movie starring JENNIFER DAVIS.,,SELECT T3.description FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T3.film_id = T2.film_id WHERE T1.first_name = 'JOHNNY' AND T1.last_name = 'DAVIS'
movie_3,List the full names of customers who have paid more than 10$.,"full name refers to first_name, last_name; more than 10$ refers to amount > 10","SELECT T2.first_name, T2.last_name FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T1.amount > 10"
movie_3,Please provide the address of the customer whose first name is SUSAN with the postal code 77948.,,SELECT T1.address FROM address AS T1 INNER JOIN customer AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = 'SUSAN' AND T1.postal_code = 77948
movie_3,How many customers have an address in Abu Dhabi city? List those customer names.,"name refers to first_name, last_name",SELECT COUNT(T1.city_id) FROM city AS T1 INNER JOIN address AS T2 ON T1.city_id = T2.city_id INNER JOIN customer AS T3 ON T2.address_id = T3.address_id WHERE T1.city = 'Abu Dhabi'
movie_3,Please provide the full name of the customer at 692 Joliet Street.,"full name refers to first_name, last_name; 692 Joliet Street refers to address = '692 Joliet Street'","SELECT T2.first_name, T2.last_name FROM address AS T1 INNER JOIN customer AS T2 ON T1.address_id = T2.address_id WHERE T1.address = '692 Joliet Street'"
movie_3,List movie titles with duration over 120 minutes that are in the action category.,duration over 120 minutes refers to length > 120; action category refers to category.name = 'action',SELECT T1.title FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T3.category_id = T2.category_id WHERE T3.`name` = 'action' AND T1.length > 120
movie_3,Which actor acted in ANONYMOUS HUMAN?,"actor refers to first_name, last_name; ANONYMOUS HUMAN refers to title = 'ANONYMOUS HUMAN'","SELECT T1.first_name, T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T3.film_id = T2.film_id WHERE T3.title = 'ANONYMOUS HUMAN'"
movie_3,Which movie title has the lowest movie rental in the horror category?,the lowest movie rental refers to min(rental_rate); the horror category refers to category.name = 'Horror',SELECT T1.title FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.`name` = 'Horror' ORDER BY T1.rental_rate LIMIT 1
movie_3,List the descriptions of movies under the category Travel.,the category Travel refers to category.name = 'Travel',SELECT T1.description FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.`name` = 'Travel'
movie_3,Calculate the total payment amount of customers in Nagasaki district.,the total payment amount refers to sum(amount),SELECT SUM(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id INNER JOIN address AS T3 ON T3.address_id = T2.address_id WHERE T3.district = 'Nagasaki'
movie_3,Calculate the percentage of total payment of MARGARET MOORE customers.,"percentage = divide(sum(amount where first_name = 'MARGARET' and last_name = 'MOORE'), sum(amount)) * 100%","SELECT CAST(SUM(IIF(T2.first_name = 'MARGARET' AND T2.last_name = 'MOORE', T1.amount, 0)) AS REAL) * 100 / SUM(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id"
movie_3,Calculate the percentage of movie titles with a screen length of more than 120 minutes that have a category of horror movies.,"screen length of more than 120 minutes refers to length > 120; category of horror refers to category.name = 'Horror'; percentage = divide(count(title where length > 120 and category.name = 'Horror'), count(title)) * 100%","SELECT CAST(SUM(IIF(T3.`name` = 'Horror', 1, 0)) * 100 / COUNT(T1.film_id) AS REAL) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T3.category_id = T2.category_id WHERE T1.length > 120"
movie_3,How many film titles were released in 2006?,released in 2006 refers to release_year = 2006,SELECT COUNT(film_id) FROM film WHERE release_year = 2006
movie_3,List down film titles from id 1 to 10.,id 1 to 10 refers to film_id BETWEEN 1 and 10,SELECT title FROM film WHERE film_id BETWEEN 1 AND 10
movie_3,List down all of the film IDs with highest rental duration.,highest rental duration refers to max(rental_duration),SELECT film_id FROM film WHERE rental_duration = ( SELECT MAX(rental_duration) FROM film )
movie_3,Which film titles have the most expensive rental rate?,the most expensive rental rate refers to max(rental_rate),SELECT title FROM film WHERE rental_rate = ( SELECT MAX(rental_rate) FROM film )
movie_3,List down all of the film titles that are rated for general audiences.,rated for general audiences means rating = 'G',SELECT title FROM film WHERE rating = 'G'
movie_3,"What is the language for film titled ""CHILL LUCK""?",,SELECT T2.`name` FROM film AS T1 INNER JOIN `language` AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'CHILL LUCK'
movie_3,What are the last updated date for English film titles that were released in 2006?,"the last updated date refers to last_update; English is name of language; released in 2006 refers to release_year = 2006

",SELECT DISTINCT T1.last_update FROM film AS T1 INNER JOIN `language` AS T2 ON T1.language_id = T2.language_id WHERE T2.`name` = 'English' AND T1.release_year = 2006
movie_3,How many Italian film titles were special featured with deleted scenes?,Italian is name of language; special featured with deleted scenes refers to special_features = 'deleted scenes',SELECT COUNT(T1.film_id) FROM film AS T1 INNER JOIN `language` AS T2 ON T1.language_id = T2.language_id WHERE T2.`name` = 'Italian' AND T1.special_features = 'deleted scenes'
movie_3,How many animation film titles are rated for adults only?,animation film refers to category.name = 'animation'; for adults only means rating = 'NC-17',SELECT COUNT(T1.title) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'animation' AND T1.rating = 'NC-17'
movie_3,List down all ratings of action film titles.,for General Audiences means rating = 'G'; Parental Guidance Suggested means rating = 'PG'; Parents Strongly Cautioned means rating = 'PG-13'; Restricted means rating = 'R'; Adults Only means rating = 'NC-17'; action film refers to category.name = 'action',SELECT T1.description FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'action'
movie_3,List down all film IDs of comedy film titles.,comedy is name of category,SELECT T1.film_id FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T3.category_id = T2.category_id WHERE T3.name = 'comedy'
movie_3,State the documentary film titles with longest length.,documentary film refers to name = 'documentary'; longest length refers to max(length),SELECT T1.title FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T3.category_id = T2.category_id WHERE T3.name = 'documentary' ORDER BY T1.length DESC LIMIT 1
movie_3,"What is the category of film titled ""BLADE POLISH""?",,SELECT T3.name FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T3.category_id = T2.category_id WHERE T1.title = 'BLADE POLISH'
movie_3,What is Mary Smith's rental ID?,,SELECT T2.rental_id FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'MARY' AND T1.last_name = 'SMITH'
movie_3,List down all of the customers' first name who were attended by staff with ID 1.,,"SELECT DISTINCT T1.first_name, T1.last_name FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T2.staff_id = 1"
movie_3,List down email address of customers who were attended by staff with ID 2.,email address refers to email,SELECT DISTINCT T1.email FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T2.staff_id = 2
movie_3,"List down the actor IDs of film titled ""BOUND CHEAPER"".",,SELECT T2.actor_id FROM film AS T1 INNER JOIN film_actor AS T2 ON T1.film_id = T2.film_id WHERE T1.title = 'BOUND CHEAPER'
movie_3,What is the inventory ID of Karen Jackson?,,SELECT T2.inventory_id FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'KAREN' AND T1.last_name = 'JACKSON'
movie_3,List down all film titles starred by Jane Jackman.,,SELECT T1.title FROM film AS T1 INNER JOIN film_actor AS T2 ON T1.film_id = T2.film_id INNER JOIN actor AS T3 ON T2.actor_id = T3.actor_id WHERE T3.first_name = 'JANE' AND T3.last_name = 'JACKMAN'
movie_3,"Who are the actors of film titled ""BIRD INDEPENDENCE""?","actor refers to first_name, last_name","SELECT T3.first_name, T3.last_name FROM film AS T1 INNER JOIN film_actor AS T2 ON T1.film_id = T2.film_id INNER JOIN actor AS T3 ON T2.actor_id = T3.actor_id WHERE T1.title = 'BIRD INDEPENDENCE'"
movie_3,Calculate the total rental rate for animation film titles.,animation film refers to category.name = 'Animation'; total rental rate = sum(rental_rate),SELECT SUM(T1.rental_rate) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.`name` = 'Animation'
movie_3,What is the average rental rate of sci-fi film titles?,sci-fi film refers to category.name = 'Sci-Fi'; average rental rate = avg(rental_rate),SELECT AVG(T1.rental_rate) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T3.category_id = T2.category_id WHERE T3.`name` = 'Sci-Fi'
movie_3,What is the percentage of horror film titles in English film titles?,"horror film refers to category.name = 'Horror'; English film refers to language.name = 'English'; percentage = divide(count(film_id where category.name = 'Horror'), count(film_id)) where language.name = 'English' * 100%","SELECT CAST(SUM(IIF(T3.name = 'Horror', 1, 0)) AS REAL) * 100 / COUNT(T1.film_id) FROM film_category AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T1.category_id = T3.category_id INNER JOIN language AS T4 ON T2.language_id = T4.language_id WHERE T4.name = 'English'"
movie_3,"Among the adult films, how many of them have a rental duration of fewer than 4 days?",adult film refers to rating = 'NC-17'; rental duration of fewer than 4 days refers to rental_duration < 4,SELECT COUNT(film_id) FROM film WHERE rating = 'NC-17' AND rental_duration < 4
movie_3,"What is the title of the restricted film, whose length is 71 minutes and whose replacement cost is $29.99?",restricted means rating = 'R'; length is 71 minutes refers to length = 71; replacement cost is $29.99 refers to replacement_cost = 29.99,SELECT title FROM film WHERE replacement_cost = 29.99 AND rating = 'R' AND length = 71
movie_3,Write down the email addresses of active customers who rented between 5/25/2005 at 7:37:47 PM and 5/26/2005 at 10:06:49 AM.,email address refers to email; active refers to active = 1; between 5/25/2005 at 7:37:47 PM and 5/26/2005 at 10:06:49 AM refers to rental_date between '2005-5-25 07:37:47' and '2005-5-26 10:06:49',SELECT T2.email FROM rental AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T1.rental_date BETWEEN '2005-5-25 07:37:47' AND '2005-5-26 10:06:49' AND T2.active = 1
movie_3,Compute the total payment made by Sarah Lewis for film rentals so far.,total payment = sum(amount),SELECT SUM(T3.amount) FROM rental AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id INNER JOIN payment AS T3 ON T1.rental_id = T3.rental_id WHERE T2.first_name = 'SARAH' AND T2.last_name = 'LEWIS'
movie_3,"From 5/30/2005 at 3:43:54 AM to 7/31/2005 at 10:08:29 PM, how many times did Susan Wilson pay for film rentals?",from 5/30/2005 at 3:43:54 AM to 7/31/2005 at 10:08:29 PM refers to payment_date between '2005-05-30 03:43:54' and '2005-07-31 10:08:29',SELECT COUNT(T1.customer_id) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T1.payment_date BETWEEN '2005-05-30 03:43:54' AND '2005-07-31 10:08:29'
movie_3,"Tally the full names of actors in the film ""Alabama Devil.""","full name refers to first_name, last_name; ""Alabama Devil"" refers to title = 'ALABAMA DEVIL'","SELECT T2.first_name, T2.last_name FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T3.title = 'ALABAMA DEVIL'"
movie_3,Tell me the title of the film in which Sandra Kilmer is one of the actors.,,SELECT T3.title FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T2.first_name = 'SANDRA' AND T2.last_name = 'KILMER'
movie_3,How many documentary films are rated PG-13?,documentary film refers to category.name = 'documentary'; rated PG-13 refers to rating = 'PG-13',SELECT COUNT(T1.film_id) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'Documentary' AND T1.rating = 'PG-13'
movie_3,Give me the title and category name of films whose price per day is more than $30. Please include their special features.,"category name refers to category.name; price per day is more than $30 refers to multiply(rental_duration, rental_rate) > 30","SELECT T1.title, T3.name, T1.special_features FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T1.rental_duration * T1.rental_rate > 30"
movie_3,Name the cast members of the movie 'African Egg'.,"cast member name refers to first_name, last_name; 'African Egg' refers to title = 'AFRICAN EGG'","SELECT T2.first_name, T2.last_name FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T3.title = 'AFRICAN EGG'"
movie_3,Identify the number of movies rented by Maria Miller.,,SELECT COUNT(T2.rental_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'Maria' AND T1.last_name = 'Miller'
movie_3,Name the most recent movie rented by Dorothy Taylor.,movie name refers to title; the most recent refers to max(rental_date),SELECT T4.title FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T1.first_name = 'DOROTHY' AND T1.last_name = 'TAYLOR' ORDER BY T2.rental_date DESC LIMIT 1
movie_3,Determine the number of action movies available for rent.,action movie refers to category.name = 'Action',SELECT COUNT(T2.film_id) FROM category AS T1 INNER JOIN film_category AS T2 ON T1.category_id = T2.category_id WHERE T1.name = 'Action'
movie_3,Where can you rent the movie 'Wyoming Storm'? Identify the address of the rental store and the rental rate.,'Wyoming Storm' refers to title = 'WYOMING STORM',"SELECT T2.store_id, T1.address, T4.rental_rate FROM address AS T1 INNER JOIN store AS T2 ON T1.address_id = T2.address_id INNER JOIN inventory AS T3 ON T2.store_id = T3.store_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T4.title = 'WYOMING STORM'"
movie_3,How long did Austin Cintron take to return the movie 'Destiny Saturday'?,"'Destiny Saturday' refers to title = 'DESTINY SATURDAY'; length = subtract(return_date, rental_date)",SELECT T2.rental_date - T2.return_date FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T1.first_name = 'AUSTIN' AND T4.title = 'DESTINY SATURDAY'
movie_3,Identify the number of movies that starred Nick Stallone.,,SELECT COUNT(T1.film_id) FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id AND T2.first_name = 'NICK' AND T2.last_name = 'STALLONE'
movie_3,Name the movie with the highest rental revenue among the shortest films.,"movie name refers to title; the highest rental revenue refers to max(multiply(rental_duration, rental_rate)); the shortest film refers to min(length)",SELECT title FROM film WHERE length = ( SELECT MIN(length) FROM film ) ORDER BY rental_duration * rental_rate DESC LIMIT 1
movie_3,Calculate the total amount paid by Stephanie Mitchell for film rentals in June 2005.,the total amount = sum(amount); in June 2005 refers to payment_date like '2005-06%',"SELECT SUM(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'STEPHANIE' AND T2.last_name = 'MITCHELL' AND SUBSTR(T1.payment_date, 1, 7) = '2005-06'"
movie_3,What is the average replacement cost for the movies with a rental rate of 4.99?,a rental rate of 4.99 refers to rental_rate = 4.99; average replacement cost = avg(replacement_cost),SELECT AVG(replacement_cost) FROM film WHERE rental_rate = 4.99
movie_3,What is the average rental rate for PG-13 rated movies?,PG-13 rated movie refers to rating = 'PG-13'; average rental rate = avg(rental_rate),SELECT AVG(rental_rate) FROM film WHERE rating = 'PG-13'
movie_3,Indicate the percentage of inactive customers at store no.1.,"inactive refers to active = 0; store no.1 refers to store_id = 1; percentage = divide(count(customer_id where active = 0), count(customer_id)) * 100% where store_id = 1",SELECT CAST(SUM(CASE WHEN active = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(customer_id) FROM customer WHERE store_id = 1
movie_3,For how long can you rent the movie 'Dirty Ace'?,length refers to rental_duration; 'Dirty Ace' refers to title = 'DIRTY ACE',SELECT rental_duration FROM film WHERE title = 'DIRTY ACE'
movie_3,"Identify the full name of the customer, who has the following email address: SHEILA.WELLS@sakilacustomer.org.","full name refers to first_name, last_name","SELECT first_name, last_name FROM customer WHERE email = 'SHEILA.WELLS@sakilacustomer.org'"
movie_3,Provide the list of the longest movies. Arrange these titles in alphabetical order.,the longest refers to max(length),SELECT title FROM film WHERE length = ( SELECT MAX(length) FROM film )
movie_3,How many film categories are there?,,SELECT COUNT(DISTINCT category_id) FROM category
movie_3,How many titles did Mary Smith rent in 2005? Determine the percentage of titles rented in June 2005.,"in June 2005 refers to month(rental_date) = 6 and year(rental_date) = 2005; percentage = divide(count(inventory_id where month(rental_date) = 6 and year(rental_date) = 2005), count(inventory_id)) * 100%","SELECT COUNT(T2.rental_id) , CAST(SUM(IIF(STRFTIME('%m',T2.rental_date) = '7', 1, 0)) AS REAL) * 100 / COUNT(T2.rental_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'Maria' AND T1.last_name = 'Miller' AND STRFTIME('%Y',T2.rental_date) = '2005'"
movie_3,How many customers are still active?,active refers to active = 1,SELECT COUNT(customer_id) FROM customer WHERE active = 1
movie_3,List all the films that are rated as PG-13.,film refers to title; rated as PG-13 refers to rating = 'PG-13',SELECT title FROM film WHERE rating = 'PG-13'
movie_3,List at least 10 films that the customers can rent for more than 5 days.,film refers to title; rent for more than 5 days refers to rental_duration > 5,"SELECT T.title FROM ( SELECT T1.title, COUNT(T3.customer_id) AS num FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id INNER JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id WHERE T1.rental_duration > 5 GROUP BY T1.title ) AS T WHERE T.num > 10"
movie_3,List all the cities that belong to United Arab Emirates.,United Arab Emirates refers to country = 'United Arab Emirates',SELECT T1.city FROM city AS T1 INNER JOIN country AS T2 ON T2.country_id = T1.country_id WHERE country = 'United Arab Emirates'
movie_3,List at least 5 customers who paid greater than $10. Provide the full name of the customers.,"full name refers to first_name, last_name; greater than $10 refers to amount > 10","SELECT T2.first_name, T2.last_name FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T1.amount > 10"
movie_3,What films did Burt Dukakis got star in?,film refers to title,SELECT T3.title FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T2.first_name = 'BURT' AND T2.last_name = 'DUKAKIS'
movie_3,"Provide the full name of all the actors of the film ""Ending Crowds"".","full name refers to first_name, last_name; film ""Ending Crowds"" refers to title = 'ENDING CROWDS'","SELECT T2.first_name, T2.last_name FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T3.title = 'ENDING CROWDS'"
movie_3,"Who are the actors starred in the film ""Bound Cheaper""?","actor refers to first_name, last_name; film ""Bound Cheaper"" refers to title = 'BOUND CHEAPER'","SELECT T1.first_name, T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'BOUND CHEAPER'"
movie_3,List all the films that Karl Berr starred in and rated as PG.,film refers to title; rated as PG refers to rating = 'PG',SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'KARL' AND T1.last_name = 'BERRY' AND T3.rating = 'PG'
movie_3,List at least 3 cities under the country of Philippines.,,SELECT T1.city FROM city AS T1 INNER JOIN country AS T2 ON T2.country_id = T1.country_id WHERE country = 'Philippines'
movie_3,What are the films that are least rented by the customers?,film refers to title; least rented refers to count(min(customer_id)),"SELECT T.title FROM ( SELECT T3.title, COUNT(T1.customer_id) AS num FROM rental AS T1 INNER JOIN inventory AS T2 ON T1.inventory_id = T2.inventory_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id GROUP BY T3.title ) AS T ORDER BY T.num DESC LIMIT 1"
movie_3,List all the description of the films starring Lucille Tracy?,,SELECT T1.film_id FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id WHERE T2.first_name = 'LUCILLE' AND T2.last_name = 'TRACY'
movie_3,"Which category is the film ""Beach Heartbreakers"" falls into?","category refers to name; film ""Beach Heartbreakers"" refers to title = 'BEACH HEARTBREAKERS'",SELECT T3.name FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T1.title = 'BEACH HEARTBREAKERS'
movie_3,List at least 10 films that falls into the Horror category.,film refers to title; Horror category refers to category.name = 'Horror',SELECT T1.title FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'Horror'
movie_3,Who among the actors starred in a NC-17 rated film? Provide only the last name of the actors.,NC-17 rated refers to rating = 'NC-17',SELECT T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.rating = 'NC-17'
movie_3,Calculate the average rate of renting the film that Lucille Tracy got starred.,"average rate = divide(sum(rental_rate), count(film_id))",SELECT AVG(T3.rental_rate) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'LUCILLE' AND T1.last_name = 'TRACY'
movie_3,How many films have a duration between 100 to 110 minutes?,duration between 100 to 110 minutes refers to length between 100 and 110,SELECT COUNT(film_id) FROM film WHERE length BETWEEN 100 AND 110
movie_3,List down the actor ID of actors with Dee as their last name.,,SELECT actor_id FROM actor WHERE last_name = 'Dee'
movie_3,"Among the active customers, how many of them have Nina as their first name?",active refers to active = 1,SELECT COUNT(customer_id) FROM customer WHERE first_name = 'Nina' AND active = 1
movie_3,"In store ID 2, how many of the films are R rating?
",R rating refers to rating = 'R',SELECT COUNT(T1.film_id) FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id WHERE T2.store_id = 2 AND T1.rating = 'R'
movie_3,List the store ID of the films starred by Reese West with a duration of 100 minutes and below?,a duration of 100 minutes and below refers to length < 100,SELECT T4.store_id FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id INNER JOIN inventory AS T4 ON T3.film_id = T4.film_id WHERE T3.length < 100 AND T1.first_name = 'Reese' AND T1.last_name = 'West'
movie_3,Give the duration of the film starred by Nick Wahlberg with the highest rental rate.,duration refers to length; the highest rental rate refers to max(rental_rate),SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'Nick' AND T1.last_name = 'Wahlberg' ORDER BY T3.rental_rate DESC LIMIT 1
movie_3,What are the titles of the films starred by Russell Close?,,SELECT T3.title FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T2.first_name = 'Russell' AND T2.last_name = 'Close'
movie_3,"List the store ID of the film titled ""Amadeus Holy"".",,SELECT T2.store_id FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id WHERE T1.title = 'Amadeus Holy'
movie_3,"In films with a rental rate of 2.99, how many of the films are starred by Nina Soto?",a rental rate of 2.99 refers to rental_rate = 2.99,SELECT COUNT(T1.film_id) FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T3.rental_rate = 2.99 AND T2.first_name = 'Nina' AND T2.last_name = 'Soto'
movie_3,"Among the films starred by Reese West, what is the difference between the films that have store ID of 1 and store ID of 2?","result = subtract(count(film_id where store_id = 1), count(film_id where store_id = 2))","SELECT SUM(IIF(T4.film_id = 1, 1, 0)) - SUM(IIF(T4.film_id = 2, 1, 0)) AS diff FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id INNER JOIN inventory AS T4 ON T3.film_id = T4.film_id WHERE T2.first_name = 'Reese' AND T2.last_name = 'West'"
movie_3,What is the postal code of the address 692 Joliet Street?,,SELECT postal_code FROM address WHERE address = '692 Joliet Street'
movie_3,How many customers are active?,active refers to active = 1,SELECT COUNT(customer_id) FROM customer WHERE active = 1
movie_3,"Among all the customers of store no.1, how many of them are active?",active refers to active = 1,SELECT COUNT(customer_id) FROM customer WHERE active = 1 AND store_id = 1
movie_3,What is the address of Mary Smith?,,SELECT T1.address FROM address AS T1 INNER JOIN customer AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = 'MARY' AND T2.last_name = 'SMITH'
movie_3,"Among all the active customers, how many of them live in Arlington?",active refers to active = 1; Arlington refers to city = 'Arlington',SELECT COUNT(T2.customer_id) FROM address AS T1 INNER JOIN customer AS T2 ON T1.address_id = T2.address_id INNER JOIN city AS T3 ON T1.city_id = T3.city_id WHERE T2.active = 1 AND T3.city = 'Arlington'
movie_3,Please list the full names of all the customers who live in Italy.,"full name refers to first_name, last_name; Italy refers to country = 'Italy'","SELECT T4.first_name, T4.last_name FROM address AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id INNER JOIN country AS T3 ON T2.country_id = T3.country_id INNER JOIN customer AS T4 ON T1.address_id = T4.address_id WHERE T3.country = 'Italy'"
movie_3,Which country does Mary Smith live in?,,SELECT T3.country FROM address AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id INNER JOIN country AS T3 ON T2.country_id = T3.country_id INNER JOIN customer AS T4 ON T1.address_id = T4.address_id WHERE T4.first_name = 'MARY' AND T4.last_name = 'SMITH'
movie_3,What is the biggest amount of payment for a rental made by Mary Smith?,the biggest amount refers to max(amount),SELECT T1.amount FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'MARY' AND T2.last_name = 'SMITH' ORDER BY T1.amount DESC LIMIT 1
movie_3,How many times has Mary Smith rented a film?,,SELECT COUNT(T1.customer_id) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'MARY' AND T2.last_name = 'SMITH'
movie_3,What is the total amount of money Mary Smith has spent on film rentals?,the total amount = sum(amount),SELECT SUM(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'MARY' AND T2.last_name = 'SMITH'
movie_3,"Among the times Mary Smith had rented a movie, how many of them happened in June, 2005?",in June 2005 refers to year(payment_date) = 2005 and month(payment_date) = 6,"SELECT COUNT(T1.customer_id) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'MARY' AND T2.last_name = 'SMITH' AND STRFTIME('%Y',T1.payment_date) = '2005' AND STRFTIME('%Y', T1.payment_date) = '6'"
movie_3,Please give the full name of the customer who had made the biggest amount of payment in one single film rental.,"full name refers to first_name, last_name; the biggest amount refers to max(amount)","SELECT T2.first_name, T2.last_name FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.amount DESC LIMIT 1"
movie_3,How much in total had the customers in Italy spent on film rentals?,total = sum(amount); Italy refers to country = 'Italy',SELECT SUM(T5.amount) FROM address AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id INNER JOIN country AS T3 ON T2.country_id = T3.country_id INNER JOIN customer AS T4 ON T1.address_id = T4.address_id INNER JOIN payment AS T5 ON T4.customer_id = T5.customer_id WHERE T3.country = 'Italy'
movie_3,"Among the payments made by Mary Smith, how many of them are over 4.99?",over 4.99 refers to amount > 4.99,SELECT COUNT(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'MARY' AND T2.last_name = 'SMITH' AND T1.amount > 4.99
movie_3,What is the average amount of money spent by a customer in Italy on a single film rental?,"Italy refers to country = 'Italy'; average amount = divide(sum(amount), count(customer_id)) where country = 'Italy'",SELECT AVG(T5.amount) FROM address AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id INNER JOIN country AS T3 ON T2.country_id = T3.country_id INNER JOIN customer AS T4 ON T1.address_id = T4.address_id INNER JOIN payment AS T5 ON T4.customer_id = T5.customer_id WHERE T3.country = 'Italy'
